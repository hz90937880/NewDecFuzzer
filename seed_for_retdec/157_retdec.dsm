;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:59:57
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 50 d0 ff ff               	lea eax, [ebx - 0x2fb0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 f0 cf ff ff               	lea eax, [ebx - 0x3010]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 f6 ac 04 08               	mov eax, 0x804acf6
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 60 e0 04 08                  	mov eax, 0x804e060
0x80483a5:   3d 60 e0 04 08                  	cmp eax, 0x804e060
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 60 e0 04 08                  	push 0x804e060
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 60 e0 04 08                  	mov eax, 0x804e060
0x80483e5:   2d 60 e0 04 08                  	sub eax, 0x804e060
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 60 e0 04 08                  	push 0x804e060
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 e0 04 08 00            	cmp byte ptr [0x804e060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 e0 04 08 01            	mov byte ptr [0x804e060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 82 2b 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 6e 2b 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 70 d0 ff ff               	lea edx, [eax - 0x2f90]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 41 2b 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 23 2b 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 fb 2a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 d1 2a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 a8 2a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 65 2a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 23 2a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 cb 29 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 7a 29 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 3d 29 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 06 29 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 e7 28 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 bd 28 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 91 28 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 66 28 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 1d 28 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 d5 27 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 7b 27 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 28 27 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 e9 26 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 b3 26 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 91 26 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 43 26 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 07 26 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 7e 25 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 4c 25 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 1c 25 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 d7 24 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 98 24 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 66 24 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 37 24 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 19 24 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 f1 23 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 cc 23 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 a7 23 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 70 23 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 3b 23 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 e9 22 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 9e 22 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 67 22 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 36 22 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 17 22 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 ed 21 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 c5 21 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 9c 21 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 60 21 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 25 21 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 d2 20 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 86 20 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 4e 20 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 1f 20 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 0b 20 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 f4 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 df 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 c9 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 a2 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 7d 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 3e 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 05 1f 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 d9 1e 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 b3 1e 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 3c d1 ff ff               	fld dword ptr [eax - 0x2ec4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 3c d1 ff ff               	fld dword ptr [eax - 0x2ec4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 40 d1 ff ff               	fld dword ptr [eax - 0x2ec0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 71 1e 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 3c d1 ff ff               	fld dword ptr [eax - 0x2ec4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 3c d1 ff ff               	fld dword ptr [eax - 0x2ec4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 40 d1 ff ff               	fld dword ptr [eax - 0x2ec0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 2f 1e 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 44 d1 ff ff               	fld dword ptr [eax - 0x2ebc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 48 d1 ff ff               	fld dword ptr [eax - 0x2eb8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 4c d1 ff ff               	fld dword ptr [eax - 0x2eb4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 ed 1d 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 50 d1 ff ff               	fld dword ptr [eax - 0x2eb0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 54 d1 ff ff               	fld dword ptr [eax - 0x2eac]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 58 d1 ff ff               	fld dword ptr [eax - 0x2ea8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 75 1d 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 60 d1 ff ff               	fld qword ptr [eax - 0x2ea0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 60 d1 ff ff               	fld qword ptr [eax - 0x2ea0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 68 d1 ff ff               	fld qword ptr [eax - 0x2e98]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 18 1d 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 60 d1 ff ff               	fld qword ptr [eax - 0x2ea0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 60 d1 ff ff               	fld qword ptr [eax - 0x2ea0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 68 d1 ff ff               	fld qword ptr [eax - 0x2e98]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 bb 1c 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 70 d1 ff ff               	fld qword ptr [eax - 0x2e90]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 78 d1 ff ff               	fld qword ptr [eax - 0x2e88]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 80 d1 ff ff               	fld qword ptr [eax - 0x2e80]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 5e 1c 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 88 d1 ff ff               	fld qword ptr [eax - 0x2e78]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 90 d1 ff ff               	fld qword ptr [eax - 0x2e70]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 98 d1 ff ff               	fld qword ptr [eax - 0x2e68]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 ce 1b 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a0 d1 ff ff               	fld dword ptr [eax - 0x2e60]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 6a 1b 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 f9 1a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 b6 1a 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 80 d0 ff ff               	lea eax, [ebx - 0x2f80]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 a4 d0 ff ff               	lea eax, [ebx - 0x2f5c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049772
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 3c                        	sub esp, 0x3c
0x804962f:   e8 b0 19 00 00                  	call 0x804afe4 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049640:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049643:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x8049646:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049649:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964c:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804964f:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049652:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049655:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049658:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804965b:   8b 75 44                        	mov esi, dword ptr [ebp + 0x44]
0x804965e:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x8049661:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049664:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x8049667:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804966a:   89 c8                           	mov eax, ecx
0x804966c:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049670:   89 d8                           	mov eax, ebx
0x8049672:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049676:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x804967a:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804967d:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049681:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x8049684:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x8049688:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x804968b:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x804968f:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x8049692:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049696:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804969a:   89 f8                           	mov eax, edi
0x804969c:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x804969f:   89 f0                           	mov eax, esi
0x80496a1:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496a4:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496a8:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496ae:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496b2:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x80496b9:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x80496bd:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x80496c4:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496c7:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496cd:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496d0:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496d6:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496d9:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496df:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x80496e2:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80496e8:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x80496ec:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x80496f2:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x80496f5:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x80496fb:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x80496fe:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049704:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049707:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804970d:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049711:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x8049717:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804971b:   88 82 49 00 00 00               	mov byte ptr [edx + 0x49], al
0x8049721:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049725:   88 82 4a 00 00 00               	mov byte ptr [edx + 0x4a], al
0x804972b:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804972e:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049734:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049738:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x804973f:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049742:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049748:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804974c:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x8049752:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049756:   88 82 59 00 00 00               	mov byte ptr [edx + 0x59], al
0x804975c:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804975f:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049765:   b8 00 00 00 00                  	mov eax, 0
0x804976a:   83 c4 3c                        	add esp, 0x3c
0x804976d:   5b                              	pop ebx
0x804976e:   5e                              	pop esi
0x804976f:   5f                              	pop edi
0x8049770:   5d                              	pop ebp
0x8049771:   c3                              	ret 
; function: func_1 at 0x8049772 -- 0x804acf6
0x8049772:   55                              	push ebp
0x8049773:   89 e5                           	mov ebp, esp
0x8049775:   57                              	push edi
0x8049776:   56                              	push esi
0x8049777:   53                              	push ebx
0x8049778:   81 ec 80 01 00 00               	sub esp, 0x180
0x804977e:   e8 5d 18 00 00                  	call 0x804afe0 <__x86.get_pc_thunk.ax>
0x8049783:   05 7d 48 00 00                  	add eax, 0x487d
0x8049788:   c6 85 77 ff ff ff 46            	mov byte ptr [ebp - 0x89], 0x46
0x804978f:   66 c7 45 e6 f6 ff               	mov word ptr [ebp - 0x1a], 0xfff6
0x8049795:   66 c7 45 e4 48 7b               	mov word ptr [ebp - 0x1c], 0x7b48
0x804979b:   c7 45 f0 60 c8 36 b0            	mov dword ptr [ebp - 0x10], 0xb036c860
0x80497a2:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x80497a9:   c7 45 e8 09 53 c2 66            	mov dword ptr [ebp - 0x18], 0x66c25309
0x80497b0:   c7 45 b8 be 5a 78 2d            	mov dword ptr [ebp - 0x48], 0x2d785abe
0x80497b7:   c6 45 b7 f7                     	mov byte ptr [ebp - 0x49], 0xf7
0x80497bb:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x80497c2:   c7 45 bc 92 3b 27 f0            	mov dword ptr [ebp - 0x44], 0xf0273b92
0x80497c9:   c7 85 70 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x90], 0xffffffff
0x80497d3:   c6 45 b6 71                     	mov byte ptr [ebp - 0x4a], 0x71
0x80497d7:   c6 85 6f ff ff ff f6            	mov byte ptr [ebp - 0x91], 0xf6
0x80497de:   c6 45 df b5                     	mov byte ptr [ebp - 0x21], 0xb5
0x80497e2:   c7 45 d8 07 00 00 00            	mov dword ptr [ebp - 0x28], 7
0x80497e9:   66 c7 45 d6 f0 f4               	mov word ptr [ebp - 0x2a], 0xf4f0
0x80497ef:   c7 45 d0 ff ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffff
0x80497f6:   c6 45 cf 82                     	mov byte ptr [ebp - 0x31], 0x82
0x80497fa:   c6 45 ce ff                     	mov byte ptr [ebp - 0x32], 0xff
0x80497fe:   c7 85 68 ff ff ff f1 7d 5d b2   	mov dword ptr [ebp - 0x98], 0xb25d7df1
0x8049808:   c7 45 c8 74 68 32 ec            	mov dword ptr [ebp - 0x38], 0xec326874
0x804980f:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x8049816:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x804981d:   66 c7 85 66 ff ff ff 61 b5      	mov word ptr [ebp - 0x9a], 0xb561
0x8049826:   c7 45 b0 a0 dd 77 a0            	mov dword ptr [ebp - 0x50], 0xa077dda0
0x804982d:   c6 85 65 ff ff ff 02            	mov byte ptr [ebp - 0x9b], 2
0x8049834:   66 c7 85 62 ff ff ff 02 00      	mov word ptr [ebp - 0x9e], 2
0x804983d:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x8049844:   c7 85 5c ff ff ff 90 e0 eb dc   	mov dword ptr [ebp - 0xa4], 0xdcebe090
0x804984e:   c7 85 58 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa8], 0xffffffff
0x8049858:   c6 85 57 ff ff ff 1d            	mov byte ptr [ebp - 0xa9], 0x1d
0x804985f:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x8049869:   c6 85 4f ff ff ff f6            	mov byte ptr [ebp - 0xb1], 0xf6
0x8049870:   c7 85 48 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xb8], 3
0x804987a:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804987e:   74 59                           	je 0x80498d9 <func_1+0x167>
0x8049880:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x8049887:   74 1e                           	je 0x80498a7 <func_1+0x135>
0x8049889:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x8049890:   0f be d0                        	movsx edx, al
0x8049893:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049896:   0f be c0                        	movsx eax, al
0x8049899:   0f af c2                        	imul eax, edx
0x804989c:   85 c0                           	test eax, eax
0x804989e:   74 07                           	je 0x80498a7 <func_1+0x135>
0x80498a0:   b8 01 00 00 00                  	mov eax, 1
0x80498a5:   eb 05                           	jmp 0x80498ac <func_1+0x13a>
0x80498a7:   b8 00 00 00 00                  	mov eax, 0
0x80498ac:   f7 d8                           	neg eax
0x80498ae:   89 c2                           	mov edx, eax
0x80498b0:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x80498b3:   89 c1                           	mov ecx, eax
0x80498b5:   0f b6 c2                        	movzx eax, dl
0x80498b8:   f6 f1                           	div cl
0x80498ba:   0f b6 c4                        	movzx eax, ah
0x80498bd:   0f b6 d0                        	movzx edx, al
0x80498c0:   89 d0                           	mov eax, edx
0x80498c2:   01 c0                           	add eax, eax
0x80498c4:   01 d0                           	add eax, edx
0x80498c6:   c1 e0 05                        	shl eax, 5
0x80498c9:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x80498cc:   0f 92 c0                        	setb al
0x80498cf:   0f b6 c0                        	movzx eax, al
0x80498d2:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x80498d5:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x80498d9:   66 83 7d e6 01                  	cmp word ptr [ebp - 0x1a], 1
0x80498de:   74 05                           	je 0x80498e5 <func_1+0x173>
0x80498e0:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x80498e5:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x80498e9:   0f b6 d0                        	movzx edx, al
0x80498ec:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x80498f0:   39 c2                           	cmp edx, eax
0x80498f2:   0f 9d c0                        	setge al
0x80498f5:   0f b6 c0                        	movzx eax, al
0x80498f8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x80498fb:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x80498fe:   83 f8 01                        	cmp eax, 1
0x8049901:   66 c7 45 aa ae 1e               	mov word ptr [ebp - 0x56], 0x1eae
0x8049907:   c7 45 a4 02 00 00 00            	mov dword ptr [ebp - 0x5c], 2
0x804990e:   c6 85 47 ff ff ff d3            	mov byte ptr [ebp - 0xb9], 0xd3
0x8049915:   66 c7 45 a2 96 b7               	mov word ptr [ebp - 0x5e], 0xb796
0x804991b:   c7 45 9c bd f5 7a 75            	mov dword ptr [ebp - 0x64], 0x757af5bd
0x8049922:   c7 85 40 ff ff ff 70 57 94 39   	mov dword ptr [ebp - 0xc0], 0x39945770
0x804992c:   66 c7 85 3e ff ff ff 78 24      	mov word ptr [ebp - 0xc2], 0x2478
0x8049935:   c7 85 38 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xc8], 9
0x804993f:   c7 85 34 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xcc], 7
0x8049949:   c7 85 30 ff ff ff a9 1c a8 1a   	mov dword ptr [ebp - 0xd0], 0x1aa81ca9
0x8049953:   66 83 45 aa 01                  	add word ptr [ebp - 0x56], 1
0x8049958:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804995f:   e9 d6 0a 00 00                  	jmp 0x804a43a <func_1+0xcc8>
0x8049964:   66 c7 85 2e ff ff ff ff ff      	mov word ptr [ebp - 0xd2], 0xffff
0x804996d:   c7 45 98 41 2e 99 05            	mov dword ptr [ebp - 0x68], 0x5992e41
0x8049974:   c7 45 94 09 00 00 00            	mov dword ptr [ebp - 0x6c], 9
0x804997b:   c7 45 90 a7 a1 bd 30            	mov dword ptr [ebp - 0x70], 0x30bda1a7
0x8049982:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x8049989:   c7 85 28 ff ff ff 55 d4 4c 8d   	mov dword ptr [ebp - 0xd8], 0x8d4cd455
0x8049993:   c7 85 24 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xdc], 4
0x804999d:   c7 85 20 ff ff ff f3 9f 68 9c   	mov dword ptr [ebp - 0xe0], 0x9c689ff3
0x80499a7:   c7 85 1c ff ff ff cd c8 5d f1   	mov dword ptr [ebp - 0xe4], 0xf15dc8cd
0x80499b1:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x80499b4:   66 c1 e8 0f                     	shr ax, 0xf
0x80499b8:   0f b6 d0                        	movzx edx, al
0x80499bb:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x80499bf:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80499c3:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80499c7:   0f be d8                        	movsx ebx, al
0x80499ca:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x80499cd:   89 c1                           	mov ecx, eax
0x80499cf:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x80499d6:   09 c8                           	or eax, ecx
0x80499d8:   0f be c0                        	movsx eax, al
0x80499db:   89 c1                           	mov ecx, eax
0x80499dd:   d3 fb                           	sar ebx, cl
0x80499df:   89 d8                           	mov eax, ebx
0x80499e1:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x80499e4:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x80499e7:   0f b6 c0                        	movzx eax, al
0x80499ea:   0f af c2                        	imul eax, edx
0x80499ed:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x80499f0:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80499f4:   0f 84 df 00 00 00               	je 0x8049ad9 <func_1+0x367>
0x80499fa:   66 c7 85 08 ff ff ff f6 48      	mov word ptr [ebp - 0xf8], 0x48f6
0x8049a03:   c7 85 04 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xfc], 0xffffffff
0x8049a0d:   0f b7 85 08 ff ff ff            	movzx eax, word ptr [ebp - 0xf8]
0x8049a14:   0f be c0                        	movsx eax, al
0x8049a17:   c7 45 98 43 d4 00 00            	mov dword ptr [ebp - 0x68], 0xd443
0x8049a1e:   66 83 bd 2e ff ff ff 00         	cmp word ptr [ebp - 0xd2], 0
0x8049a26:   0f 9e c2                        	setle dl
0x8049a29:   0f b6 ca                        	movzx ecx, dl
0x8049a2c:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049a30:   39 d1                           	cmp ecx, edx
0x8049a32:   0f 95 c2                        	setne dl
0x8049a35:   0f b6 d2                        	movzx edx, dl
0x8049a38:   89 55 94                        	mov dword ptr [ebp - 0x6c], edx
0x8049a3b:   ba 00 00 00 00                  	mov edx, 0
0x8049a40:   0f be ca                        	movsx ecx, dl
0x8049a43:   99                              	cdq 
0x8049a44:   f7 f9                           	idiv ecx
0x8049a46:   89 d0                           	mov eax, edx
0x8049a48:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x8049a4c:   99                              	cdq 
0x8049a4d:   f7 fe                           	idiv esi
0x8049a4f:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a52:   73 07                           	jae 0x8049a5b <func_1+0x2e9>
0x8049a54:   ba 53 f8 ff ff                  	mov edx, 0xfffff853
0x8049a59:   eb 05                           	jmp 0x8049a60 <func_1+0x2ee>
0x8049a5b:   ba 52 f8 ff ff                  	mov edx, 0xfffff852
0x8049a60:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a63:   98                              	cwde 
0x8049a64:   89 c1                           	mov ecx, eax
0x8049a66:   d3 e2                           	shl edx, cl
0x8049a68:   89 d0                           	mov eax, edx
0x8049a6a:   0f b7 75 e4                     	movzx esi, word ptr [ebp - 0x1c]
0x8049a6e:   ba 00 00 00 00                  	mov edx, 0
0x8049a73:   f7 f6                           	div esi
0x8049a75:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049a78:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049a7b:   89 c2                           	mov edx, eax
0x8049a7d:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a80:   31 d0                           	xor eax, edx
0x8049a82:   0f b6 d0                        	movzx edx, al
0x8049a85:   0f b7 85 2e ff ff ff            	movzx eax, word ptr [ebp - 0xd2]
0x8049a8c:   0f b6 c0                        	movzx eax, al
0x8049a8f:   01 d0                           	add eax, edx
0x8049a91:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049a94:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049a97:   89 c2                           	mov edx, eax
0x8049a99:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a9c:   01 d0                           	add eax, edx
0x8049a9e:   0f b6 d0                        	movzx edx, al
0x8049aa1:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049aa4:   0f b6 c0                        	movzx eax, al
0x8049aa7:   89 c1                           	mov ecx, eax
0x8049aa9:   d3 fa                           	sar edx, cl
0x8049aab:   89 d0                           	mov eax, edx
0x8049aad:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ab0:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ab3:   3d fb ff 00 00                  	cmp eax, 0xfffb
0x8049ab8:   0f 96 c0                        	setbe al
0x8049abb:   0f b6 d0                        	movzx edx, al
0x8049abe:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049ac1:   98                              	cwde 
0x8049ac2:   89 c1                           	mov ecx, eax
0x8049ac4:   d3 e2                           	shl edx, cl
0x8049ac6:   89 d0                           	mov eax, edx
0x8049ac8:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049acb:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049ace:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049ad4:   e9 16 02 00 00                  	jmp 0x8049cef <func_1+0x57d>
0x8049ad9:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049ae3:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049aea:   e9 a2 00 00 00                  	jmp 0x8049b91 <func_1+0x41f>
0x8049aef:   66 c7 85 12 ff ff ff 73 1b      	mov word ptr [ebp - 0xee], 0x1b73
0x8049af8:   c7 85 0c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffff6
0x8049b02:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x8049b09:   09 45 8c                        	or dword ptr [ebp - 0x74], eax
0x8049b0c:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049b10:   8d 50 ff                        	lea edx, [eax - 1]
0x8049b13:   66 81 7d e6 14 47               	cmp word ptr [ebp - 0x1a], 0x4714
0x8049b19:   74 07                           	je 0x8049b22 <func_1+0x3b0>
0x8049b1b:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x8049b20:   eb 05                           	jmp 0x8049b27 <func_1+0x3b5>
0x8049b22:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x8049b27:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x8049b2a:   23 45 c8                        	and eax, dword ptr [ebp - 0x38]
0x8049b2d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b30:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049b36:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049b39:   0f 94 c0                        	sete al
0x8049b3c:   0f b6 c0                        	movzx eax, al
0x8049b3f:   f7 d8                           	neg eax
0x8049b41:   39 c2                           	cmp edx, eax
0x8049b43:   0f 9d c0                        	setge al
0x8049b46:   0f b6 c0                        	movzx eax, al
0x8049b49:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049b4c:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049b53:   eb 2f                           	jmp 0x8049b84 <func_1+0x412>
0x8049b55:   66 c7 85 0a ff ff ff db 69      	mov word ptr [ebp - 0xf6], 0x69db
0x8049b5e:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049b61:   0f b6 c0                        	movzx eax, al
0x8049b64:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049b67:   0f 9c c0                        	setl al
0x8049b6a:   0f b6 c0                        	movzx eax, al
0x8049b6d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049b70:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b73:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049b76:   66 83 bd 0a ff ff ff 00         	cmp word ptr [ebp - 0xf6], 0
0x8049b7e:   75 0c                           	jne 0x8049b8c <func_1+0x41a>
0x8049b80:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x8049b84:   83 7d e0 09                     	cmp dword ptr [ebp - 0x20], 9
0x8049b88:   7f cb                           	jg 0x8049b55 <func_1+0x3e3>
0x8049b8a:   eb 01                           	jmp 0x8049b8d <func_1+0x41b>
0x8049b8c:   90                              	nop 
0x8049b8d:   83 45 ec 06                     	add dword ptr [ebp - 0x14], 6
0x8049b91:   83 7d ec 04                     	cmp dword ptr [ebp - 0x14], 4
0x8049b95:   0f 8e 54 ff ff ff               	jle 0x8049aef <func_1+0x37d>
0x8049b9b:   b8 af ff ff ff                  	mov eax, 0xffffffaf
0x8049ba0:   0f b6 c0                        	movzx eax, al
0x8049ba3:   f6 b5 77 ff ff ff               	div byte ptr [ebp - 0x89]
0x8049ba9:   0f b6 c4                        	movzx eax, ah
0x8049bac:   84 c0                           	test al, al
0x8049bae:   74 18                           	je 0x8049bc8 <func_1+0x456>
0x8049bb0:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049bb3:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049bb6:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x8049bbd:   0f 84 2c 01 00 00               	je 0x8049cef <func_1+0x57d>
0x8049bc3:   e9 6e 08 00 00                  	jmp 0x804a436 <func_1+0xcc4>
0x8049bc8:   c7 85 14 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xec], 0xfffffff7
0x8049bd2:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049bd9:   eb 45                           	jmp 0x8049c20 <func_1+0x4ae>
0x8049bdb:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049bdf:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049be2:   0f 94 c2                        	sete dl
0x8049be5:   80 75 b7 01                     	xor byte ptr [ebp - 0x49], 1
0x8049be9:   80 7d b7 90                     	cmp byte ptr [ebp - 0x49], 0x90
0x8049bed:   0f 94 c0                        	sete al
0x8049bf0:   0f b6 c0                        	movzx eax, al
0x8049bf3:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x8049bf9:   0f 9d c0                        	setge al
0x8049bfc:   31 d0                           	xor eax, edx
0x8049bfe:   0f b6 d0                        	movzx edx, al
0x8049c01:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049c05:   66 98                           	cbw 
0x8049c07:   0f af c2                        	imul eax, edx
0x8049c0a:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049c0e:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049c13:   0f 94 c0                        	sete al
0x8049c16:   0f b6 c0                        	movzx eax, al
0x8049c19:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049c1c:   83 6d b8 09                     	sub dword ptr [ebp - 0x48], 9
0x8049c20:   83 7d b8 f9                     	cmp dword ptr [ebp - 0x48], -7
0x8049c24:   7c b5                           	jl 0x8049bdb <func_1+0x469>
0x8049c26:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x8049c2d:   83 c0 01                        	add eax, 1
0x8049c30:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049c33:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049c39:   0f be c0                        	movsx eax, al
0x8049c3c:   6b c0 9c                        	imul eax, eax, -0x64
0x8049c3f:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049c42:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x8049c49:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049c4d:   0f 84 9c 00 00 00               	je 0x8049cef <func_1+0x57d>
0x8049c53:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x8049c57:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x8049c5b:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x8049c5f:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x8049c63:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049c69:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x8049c70:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x8049c76:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x8049c7a:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x8049c80:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x8049c84:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049c8a:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x8049c8e:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x8049c92:   0f b6 8d 77 ff ff ff            	movzx ecx, byte ptr [ebp - 0x89]
0x8049c99:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049c9f:   50                              	push eax
0x8049ca0:   52                              	push edx
0x8049ca1:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049ca4:   56                              	push esi
0x8049ca5:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049ca8:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049cae:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049cb4:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049cba:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049cc0:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049cc3:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049cc6:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049ccc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ccf:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049cd2:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049cd5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049cd8:   57                              	push edi
0x8049cd9:   53                              	push ebx
0x8049cda:   51                              	push ecx
0x8049cdb:   e8 46 f9 ff ff                  	call 0x8049626 <set_var>
0x8049ce0:   83 c4 50                        	add esp, 0x50
0x8049ce3:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x8049cea:   e9 ff 0f 00 00                  	jmp 0x804acee <func_1+0x157c>
0x8049cef:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x8049cf6:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049cf9:   66 83 bd 2e ff ff ff 01         	cmp word ptr [ebp - 0xd2], 1
0x8049d01:   0f 95 c0                        	setne al
0x8049d04:   0f b6 d0                        	movzx edx, al
0x8049d07:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049d0b:   39 c2                           	cmp edx, eax
0x8049d0d:   0f 95 c0                        	setne al
0x8049d10:   0f b6 c0                        	movzx eax, al
0x8049d13:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x8049d16:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049d1a:   0f 9f c0                        	setg al
0x8049d1d:   0f b6 d0                        	movzx edx, al
0x8049d20:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x8049d24:   21 d0                           	and eax, edx
0x8049d26:   0b 45 b8                        	or eax, dword ptr [ebp - 0x48]
0x8049d29:   85 c0                           	test eax, eax
0x8049d2b:   0f 84 3e 06 00 00               	je 0x804a36f <func_1+0xbfd>
0x8049d31:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x8049d3b:   c7 45 88 05 00 00 00            	mov dword ptr [ebp - 0x78], 5
0x8049d42:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049d4c:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049d4f:   0f b6 d8                        	movzx ebx, al
0x8049d52:   83 7d c4 3f                     	cmp dword ptr [ebp - 0x3c], 0x3f
0x8049d56:   0f 9e c0                        	setle al
0x8049d59:   0f b6 c0                        	movzx eax, al
0x8049d5c:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x8049d5f:   66 c1 fa 0f                     	sar dx, 0xf
0x8049d63:   0f bf d2                        	movsx edx, dx
0x8049d66:   89 55 bc                        	mov dword ptr [ebp - 0x44], edx
0x8049d69:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x8049d6c:   3b 55 c0                        	cmp edx, dword ptr [ebp - 0x40]
0x8049d6f:   0f 9c c2                        	setl dl
0x8049d72:   0f b6 d2                        	movzx edx, dl
0x8049d75:   89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x8049d78:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049d7b:   89 55 b0                        	mov dword ptr [ebp - 0x50], edx
0x8049d7e:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049d81:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049d87:   0f bf c8                        	movsx ecx, ax
0x8049d8a:   ba 41 1e b8 61                  	mov edx, 0x61b81e41
0x8049d8f:   89 c8                           	mov eax, ecx
0x8049d91:   f7 ea                           	imul edx
0x8049d93:   c1 fa 0d                        	sar edx, 0xd
0x8049d96:   89 c8                           	mov eax, ecx
0x8049d98:   c1 f8 1f                        	sar eax, 0x1f
0x8049d9b:   29 c2                           	sub edx, eax
0x8049d9d:   89 d0                           	mov eax, edx
0x8049d9f:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049da2:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049da5:   69 c0 d5 53 00 00               	imul eax, eax, 0x53d5
0x8049dab:   29 c1                           	sub ecx, eax
0x8049dad:   89 c8                           	mov eax, ecx
0x8049daf:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049db2:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049db5:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049db8:   0f 96 c0                        	setbe al
0x8049dbb:   0f b6 c0                        	movzx eax, al
0x8049dbe:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x8049dc1:   3d fe 00 00 00                  	cmp eax, 0xfe
0x8049dc6:   0f 96 c0                        	setbe al
0x8049dc9:   0f b6 c8                        	movzx ecx, al
0x8049dcc:   89 d8                           	mov eax, ebx
0x8049dce:   99                              	cdq 
0x8049dcf:   f7 f9                           	idiv ecx
0x8049dd1:   89 d0                           	mov eax, edx
0x8049dd3:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049dd6:   0f 94 c0                        	sete al
0x8049dd9:   0f b6 d0                        	movzx edx, al
0x8049ddc:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ddf:   39 c2                           	cmp edx, eax
0x8049de1:   0f 94 c0                        	sete al
0x8049de4:   0f b6 d0                        	movzx edx, al
0x8049de7:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049deb:   31 d0                           	xor eax, edx
0x8049ded:   3d 5a e0 00 00                  	cmp eax, 0xe05a
0x8049df2:   0f 8e 94 03 00 00               	jle 0x804a18c <func_1+0xa1a>
0x8049df8:   66 c7 85 f4 fe ff ff 09 00      	mov word ptr [ebp - 0x10c], 9
0x8049e01:   c7 85 f0 fe ff ff f7 58 47 92   	mov dword ptr [ebp - 0x110], 0x924758f7
0x8049e0b:   c7 85 ec fe ff ff b3 f3 3b fd   	mov dword ptr [ebp - 0x114], 0xfd3bf3b3
0x8049e15:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049e1a:   75 1c                           	jne 0x8049e38 <func_1+0x6c6>
0x8049e1c:   c7 45 9c a8 1e 00 00            	mov dword ptr [ebp - 0x64], 0x1ea8
0x8049e23:   0f b7 95 62 ff ff ff            	movzx edx, word ptr [ebp - 0x9e]
0x8049e2a:   0f b7 85 f4 fe ff ff            	movzx eax, word ptr [ebp - 0x10c]
0x8049e31:   21 d0                           	and eax, edx
0x8049e33:   83 f8 01                        	cmp eax, 1
0x8049e36:   7f 07                           	jg 0x8049e3f <func_1+0x6cd>
0x8049e38:   b8 01 00 00 00                  	mov eax, 1
0x8049e3d:   eb 05                           	jmp 0x8049e44 <func_1+0x6d2>
0x8049e3f:   b8 00 00 00 00                  	mov eax, 0
0x8049e44:   31 85 f0 fe ff ff               	xor dword ptr [ebp - 0x110], eax
0x8049e4a:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049e4d:   89 c1                           	mov ecx, eax
0x8049e4f:   0f bf 85 2e ff ff ff            	movsx eax, word ptr [ebp - 0xd2]
0x8049e56:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049e59:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e5c:   89 c2                           	mov edx, eax
0x8049e5e:   0f b6 c1                        	movzx eax, cl
0x8049e61:   f6 f2                           	div dl
0x8049e63:   89 c3                           	mov ebx, eax
0x8049e65:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049e6b:   34 bd                           	xor al, 0xbd
0x8049e6d:   89 c2                           	mov edx, eax
0x8049e6f:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049e73:   21 d0                           	and eax, edx
0x8049e75:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049e79:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049e7d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e80:   0f b7 c0                        	movzx eax, ax
0x8049e83:   89 c1                           	mov ecx, eax
0x8049e85:   d3 fa                           	sar edx, cl
0x8049e87:   89 d0                           	mov eax, edx
0x8049e89:   8b 4d b8                        	mov ecx, dword ptr [ebp - 0x48]
0x8049e8c:   ba 00 00 00 00                  	mov edx, 0
0x8049e91:   f7 f1                           	div ecx
0x8049e93:   89 d0                           	mov eax, edx
0x8049e95:   31 d8                           	xor eax, ebx
0x8049e97:   0f be d0                        	movsx edx, al
0x8049e9a:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e9d:   0f be c0                        	movsx eax, al
0x8049ea0:   29 c2                           	sub edx, eax
0x8049ea2:   89 d0                           	mov eax, edx
0x8049ea4:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x8049ea7:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049eaa:   0f b6 c0                        	movzx eax, al
0x8049ead:   c1 f8 07                        	sar eax, 7
0x8049eb0:   ba 00 00 00 00                  	mov edx, 0
0x8049eb5:   f7 b5 fc fe ff ff               	div dword ptr [ebp - 0x104]
0x8049ebb:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049ebe:   39 c2                           	cmp edx, eax
0x8049ec0:   0f 83 98 00 00 00               	jae 0x8049f5e <func_1+0x7ec>
0x8049ec6:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x8049eca:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x8049ece:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x8049ed2:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x8049ed6:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049edc:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x8049ee3:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x8049ee9:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x8049eed:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x8049ef3:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x8049ef7:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049efd:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x8049f01:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x8049f05:   0f b6 8d 77 ff ff ff            	movzx ecx, byte ptr [ebp - 0x89]
0x8049f0c:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049f12:   50                              	push eax
0x8049f13:   52                              	push edx
0x8049f14:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049f17:   56                              	push esi
0x8049f18:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049f1b:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049f21:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049f27:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049f2d:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049f33:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049f36:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049f39:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049f3f:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049f42:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049f45:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f48:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049f4b:   57                              	push edi
0x8049f4c:   53                              	push ebx
0x8049f4d:   51                              	push ecx
0x8049f4e:   e8 d3 f6 ff ff                  	call 0x8049626 <set_var>
0x8049f53:   83 c4 50                        	add esp, 0x50
0x8049f56:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8049f59:   e9 90 0d 00 00                  	jmp 0x804acee <func_1+0x157c>
0x8049f5e:   c7 85 e8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x118], 1
0x8049f68:   0f b6 95 77 ff ff ff            	movzx edx, byte ptr [ebp - 0x89]
0x8049f6f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049f73:   0f be c8                        	movsx ecx, al
0x8049f76:   0f b7 9d 66 ff ff ff            	movzx ebx, word ptr [ebp - 0x9a]
0x8049f7d:   0f b7 85 f4 fe ff ff            	movzx eax, word ptr [ebp - 0x10c]
0x8049f84:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049f87:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049f8b:   23 45 88                        	and eax, dword ptr [ebp - 0x78]
0x8049f8e:   39 c3                           	cmp ebx, eax
0x8049f90:   0f 94 c0                        	sete al
0x8049f93:   0f b6 c0                        	movzx eax, al
0x8049f96:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x8049f9c:   0f 94 c0                        	sete al
0x8049f9f:   0f b6 c0                        	movzx eax, al
0x8049fa2:   0f af c1                        	imul eax, ecx
0x8049fa5:   39 c2                           	cmp edx, eax
0x8049fa7:   0f 9d c0                        	setge al
0x8049faa:   0f b6 c0                        	movzx eax, al
0x8049fad:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049fb0:   0f b6 95 77 ff ff ff            	movzx edx, byte ptr [ebp - 0x89]
0x8049fb7:   66 0f be ca                     	movsx cx, dl
0x8049fbb:   89 c8                           	mov eax, ecx
0x8049fbd:   c1 e0 04                        	shl eax, 4
0x8049fc0:   01 c8                           	add eax, ecx
0x8049fc2:   c1 e0 02                        	shl eax, 2
0x8049fc5:   01 c8                           	add eax, ecx
0x8049fc7:   66 c1 e8 08                     	shr ax, 8
0x8049fcb:   89 c1                           	mov ecx, eax
0x8049fcd:   c0 f9 05                        	sar cl, 5
0x8049fd0:   89 d0                           	mov eax, edx
0x8049fd2:   c0 f8 07                        	sar al, 7
0x8049fd5:   29 c1                           	sub ecx, eax
0x8049fd7:   89 c8                           	mov eax, ecx
0x8049fd9:   b9 77 00 00 00                  	mov ecx, 0x77
0x8049fde:   0f af c1                        	imul eax, ecx
0x8049fe1:   29 c2                           	sub edx, eax
0x8049fe3:   89 d0                           	mov eax, edx
0x8049fe5:   0f be c0                        	movsx eax, al
0x8049fe8:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049feb:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049fee:   3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x8049ff1:   0f 9c c0                        	setl al
0x8049ff4:   0f b6 c0                        	movzx eax, al
0x8049ff7:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x8049ffd:   0f 92 c0                        	setb al
0x804a000:   0f b6 c0                        	movzx eax, al
0x804a003:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a006:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a009:   98                              	cwde 
0x804a00a:   8d 48 fd                        	lea ecx, [eax - 3]
0x804a00d:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a011:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a014:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a018:   74 07                           	je 0x804a021 <func_1+0x8af>
0x804a01a:   b8 01 00 00 00                  	mov eax, 1
0x804a01f:   eb 05                           	jmp 0x804a026 <func_1+0x8b4>
0x804a021:   b8 00 00 00 00                  	mov eax, 0
0x804a026:   3d 2f c6 25 1e                  	cmp eax, 0x1e25c62f
0x804a02b:   0f 95 c0                        	setne al
0x804a02e:   0f b6 d0                        	movzx edx, al
0x804a031:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a035:   21 d0                           	and eax, edx
0x804a037:   3d 5f e7 4c 75                  	cmp eax, 0x754ce75f
0x804a03c:   0f 9f c0                        	setg al
0x804a03f:   0f b6 c0                        	movzx eax, al
0x804a042:   0b 45 bc                        	or eax, dword ptr [ebp - 0x44]
0x804a045:   09 c8                           	or eax, ecx
0x804a047:   21 45 c0                        	and dword ptr [ebp - 0x40], eax
0x804a04a:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x804a054:   80 6d b6 01                     	sub byte ptr [ebp - 0x4a], 1
0x804a058:   c7 45 90 eb ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffeb
0x804a05f:   83 7d 90 0b                     	cmp dword ptr [ebp - 0x70], 0xb
0x804a063:   0f 8f 41 01 00 00               	jg 0x804a1aa <func_1+0xa38>
0x804a069:   66 c7 85 e6 fe ff ff 93 35      	mov word ptr [ebp - 0x11a], 0x3593
0x804a072:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a076:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a079:   80 7d b6 ff                     	cmp byte ptr [ebp - 0x4a], 0xff
0x804a07d:   0f 94 c0                        	sete al
0x804a080:   0f b6 c0                        	movzx eax, al
0x804a083:   8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x804a086:   29 d0                           	sub eax, edx
0x804a088:   89 c2                           	mov edx, eax
0x804a08a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a08d:   21 c2                           	and edx, eax
0x804a08f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a092:   09 d0                           	or eax, edx
0x804a094:   0f bf d0                        	movsx edx, ax
0x804a097:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a09b:   01 d0                           	add eax, edx
0x804a09d:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a0a0:   0f 9e c0                        	setle al
0x804a0a3:   0f b6 c0                        	movzx eax, al
0x804a0a6:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a0ac:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a0b2:   8d 98 f9 40 a1 6c               	lea ebx, [eax + 0x6ca140f9]
0x804a0b8:   0f b6 4d b7                     	movzx ecx, byte ptr [ebp - 0x49]
0x804a0bc:   b8 66 eb ff ff                  	mov eax, 0xffffeb66
0x804a0c1:   99                              	cdq 
0x804a0c2:   f7 f9                           	idiv ecx
0x804a0c4:   89 d0                           	mov eax, edx
0x804a0c6:   83 e0 07                        	and eax, 7
0x804a0c9:   39 c3                           	cmp ebx, eax
0x804a0cb:   0f 94 c0                        	sete al
0x804a0ce:   0f b6 c0                        	movzx eax, al
0x804a0d1:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a0d7:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a0dd:   35 8e e6 33 f2                  	xor eax, 0xf233e68e
0x804a0e2:   89 c2                           	mov edx, eax
0x804a0e4:   0f b7 85 e6 fe ff ff            	movzx eax, word ptr [ebp - 0x11a]
0x804a0eb:   21 d0                           	and eax, edx
0x804a0ed:   66 89 85 e6 fe ff ff            	mov word ptr [ebp - 0x11a], ax
0x804a0f4:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x804a0f8:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x804a0fc:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x804a100:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a104:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a10a:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x804a111:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a117:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x804a11b:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a121:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a125:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a12b:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a12f:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x804a133:   0f b6 8d 77 ff ff ff            	movzx ecx, byte ptr [ebp - 0x89]
0x804a13a:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a140:   50                              	push eax
0x804a141:   52                              	push edx
0x804a142:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a145:   56                              	push esi
0x804a146:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a149:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a14f:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a155:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a15b:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a161:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a164:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a167:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a16d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a170:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a173:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a176:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a179:   57                              	push edi
0x804a17a:   53                              	push ebx
0x804a17b:   51                              	push ecx
0x804a17c:   e8 a5 f4 ff ff                  	call 0x8049626 <set_var>
0x804a181:   83 c4 50                        	add esp, 0x50
0x804a184:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a187:   e9 62 0b 00 00                  	jmp 0x804acee <func_1+0x157c>
0x804a18c:   c6 85 f7 fe ff ff fd            	mov byte ptr [ebp - 0x109], 0xfd
0x804a193:   80 6d df 01                     	sub byte ptr [ebp - 0x21], 1
0x804a197:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a19d:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a1a0:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a1a4:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a1aa:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x804a1b1:   83 7d b8 08                     	cmp dword ptr [ebp - 0x48], 8
0x804a1b5:   0f 8f 09 02 00 00               	jg 0x804a3c4 <func_1+0xc52>
0x804a1bb:   c7 85 e0 fe ff ff 3a c6 0a ed   	mov dword ptr [ebp - 0x120], 0xed0ac63a
0x804a1c5:   c7 85 dc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x124], 1
0x804a1cf:   c7 45 c4 20 63 58 a5            	mov dword ptr [ebp - 0x3c], 0xa5586320
0x804a1d6:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a1d9:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a1dc:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a1df:   3b 45 88                        	cmp eax, dword ptr [ebp - 0x78]
0x804a1e2:   74 39                           	je 0x804a21d <func_1+0xaab>
0x804a1e4:   c6 85 d7 fe ff ff 08            	mov byte ptr [ebp - 0x129], 8
0x804a1eb:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804a1f0:   0f 94 c0                        	sete al
0x804a1f3:   0f b6 d0                        	movzx edx, al
0x804a1f6:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a1fa:   01 d0                           	add eax, edx
0x804a1fc:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a1ff:   b8 01 00 00 00                  	mov eax, 1
0x804a204:   31 85 dc fe ff ff               	xor dword ptr [ebp - 0x124], eax
0x804a20a:   81 65 bc c0 93 29 0d            	and dword ptr [ebp - 0x44], 0xd2993c0
0x804a211:   81 65 c0 ae e1 8b 23            	and dword ptr [ebp - 0x40], 0x238be1ae
0x804a218:   e9 a4 00 00 00                  	jmp 0x804a2c1 <func_1+0xb4f>
0x804a21d:   c7 85 d8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x128], 0xffffffff
0x804a227:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a22b:   83 c0 01                        	add eax, 1
0x804a22e:   89 c3                           	mov ebx, eax
0x804a230:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a234:   0f be d0                        	movsx edx, al
0x804a237:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a23a:   0f be c0                        	movsx eax, al
0x804a23d:   29 c2                           	sub edx, eax
0x804a23f:   89 d0                           	mov eax, edx
0x804a241:   89 c1                           	mov ecx, eax
0x804a243:   ba 7d 47 28 86                  	mov edx, 0x8628477d
0x804a248:   89 c8                           	mov eax, ecx
0x804a24a:   f7 e2                           	mul edx
0x804a24c:   89 d0                           	mov eax, edx
0x804a24e:   c1 e8 1d                        	shr eax, 0x1d
0x804a251:   69 c0 7d 08 10 3d               	imul eax, eax, 0x3d10087d
0x804a257:   29 c1                           	sub ecx, eax
0x804a259:   89 c8                           	mov eax, ecx
0x804a25b:   09 d8                           	or eax, ebx
0x804a25d:   85 c0                           	test eax, eax
0x804a25f:   74 10                           	je 0x804a271 <func_1+0xaff>
0x804a261:   83 bd e0 fe ff ff 00            	cmp dword ptr [ebp - 0x120], 0
0x804a268:   74 07                           	je 0x804a271 <func_1+0xaff>
0x804a26a:   b8 01 00 00 00                  	mov eax, 1
0x804a26f:   eb 05                           	jmp 0x804a276 <func_1+0xb04>
0x804a271:   b8 00 00 00 00                  	mov eax, 0
0x804a276:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a27c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a27f:   3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x804a282:   0f 9e c0                        	setle al
0x804a285:   0f b6 d0                        	movzx edx, al
0x804a288:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804a28f:   39 c2                           	cmp edx, eax
0x804a291:   0f 9e c0                        	setle al
0x804a294:   0f b6 c0                        	movzx eax, al
0x804a297:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a29a:   0f 9d c0                        	setge al
0x804a29d:   0f b6 c0                        	movzx eax, al
0x804a2a0:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a2a4:   66 81 7d e6 cf 66               	cmp word ptr [ebp - 0x1a], 0x66cf
0x804a2aa:   83 7d c4 05                     	cmp dword ptr [ebp - 0x3c], 5
0x804a2ae:   0f 94 c0                        	sete al
0x804a2b1:   0f b6 d0                        	movzx edx, al
0x804a2b4:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a2b7:   98                              	cwde 
0x804a2b8:   89 c1                           	mov ecx, eax
0x804a2ba:   d3 fa                           	sar edx, cl
0x804a2bc:   89 d0                           	mov eax, edx
0x804a2be:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a2c1:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a2c5:   83 e8 01                        	sub eax, 1
0x804a2c8:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804a2cc:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a2d2:   f7 d8                           	neg eax
0x804a2d4:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a2d7:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x804a2db:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x804a2df:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x804a2e3:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a2e7:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a2ed:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x804a2f4:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a2fa:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x804a2fe:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804a304:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a308:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a30e:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a312:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x804a316:   0f b6 8d 77 ff ff ff            	movzx ecx, byte ptr [ebp - 0x89]
0x804a31d:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a323:   50                              	push eax
0x804a324:   52                              	push edx
0x804a325:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a328:   56                              	push esi
0x804a329:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a32c:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a332:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a338:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a33e:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a344:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a347:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a34a:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a350:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a353:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a356:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a359:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a35c:   57                              	push edi
0x804a35d:   53                              	push ebx
0x804a35e:   51                              	push ecx
0x804a35f:   e8 c2 f2 ff ff                  	call 0x8049626 <set_var>
0x804a364:   83 c4 50                        	add esp, 0x50
0x804a367:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a36a:   e9 7f 09 00 00                  	jmp 0x804acee <func_1+0x157c>
0x804a36f:   c6 85 03 ff ff ff 9e            	mov byte ptr [ebp - 0xfd], 0x9e
0x804a376:   80 7d b6 00                     	cmp byte ptr [ebp - 0x4a], 0
0x804a37a:   0f 85 c6 00 00 00               	jne 0x804a446 <func_1+0xcd4>
0x804a380:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a386:   0b 85 70 ff ff ff               	or eax, dword ptr [ebp - 0x90]
0x804a38c:   85 c0                           	test eax, eax
0x804a38e:   75 25                           	jne 0x804a3b5 <func_1+0xc43>
0x804a390:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a393:   89 c2                           	mov edx, eax
0x804a395:   0f b6 85 03 ff ff ff            	movzx eax, byte ptr [ebp - 0xfd]
0x804a39c:   01 d0                           	add eax, edx
0x804a39e:   0f b7 d0                        	movzx edx, ax
0x804a3a1:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a3a8:   01 c2                           	add edx, eax
0x804a3aa:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a3b1:   39 c2                           	cmp edx, eax
0x804a3b3:   7f 07                           	jg 0x804a3bc <func_1+0xc4a>
0x804a3b5:   b8 01 00 00 00                  	mov eax, 1
0x804a3ba:   eb 05                           	jmp 0x804a3c1 <func_1+0xc4f>
0x804a3bc:   b8 00 00 00 00                  	mov eax, 0
0x804a3c1:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a3c4:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x804a3c9:   0f 94 c0                        	sete al
0x804a3cc:   0f b6 c0                        	movzx eax, al
0x804a3cf:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x804a3d2:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804a3d7:   75 4e                           	jne 0x804a427 <func_1+0xcb5>
0x804a3d9:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804a3dd:   0f b6 85 65 ff ff ff            	movzx eax, byte ptr [ebp - 0x9b]
0x804a3e4:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a3e7:   0f 95 c0                        	setne al
0x804a3ea:   0f b6 c0                        	movzx eax, al
0x804a3ed:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a3f0:   72 07                           	jb 0x804a3f9 <func_1+0xc87>
0x804a3f2:   b8 f7 ff ff ff                  	mov eax, 0xfffffff7
0x804a3f7:   eb 05                           	jmp 0x804a3fe <func_1+0xc8c>
0x804a3f9:   b8 00 00 00 00                  	mov eax, 0
0x804a3fe:   29 c2                           	sub edx, eax
0x804a400:   89 d0                           	mov eax, edx
0x804a402:   3d 98 26 b8 63                  	cmp eax, 0x63b82698
0x804a407:   7e 07                           	jle 0x804a410 <func_1+0xc9e>
0x804a409:   b8 8d ff ff ff                  	mov eax, 0xffffff8d
0x804a40e:   eb 05                           	jmp 0x804a415 <func_1+0xca3>
0x804a410:   b8 8c ff ff ff                  	mov eax, 0xffffff8c
0x804a415:   0f b7 b5 66 ff ff ff            	movzx esi, word ptr [ebp - 0x9a]
0x804a41c:   ba 00 00 00 00                  	mov edx, 0
0x804a421:   f7 f6                           	div esi
0x804a423:   85 c0                           	test eax, eax
0x804a425:   74 07                           	je 0x804a42e <func_1+0xcbc>
0x804a427:   b8 01 00 00 00                  	mov eax, 1
0x804a42c:   eb 05                           	jmp 0x804a433 <func_1+0xcc1>
0x804a42e:   b8 00 00 00 00                  	mov eax, 0
0x804a433:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a436:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x804a43a:   83 7d c8 39                     	cmp dword ptr [ebp - 0x38], 0x39
0x804a43e:   0f 86 20 f5 ff ff               	jbe 0x8049964 <func_1+0x1f2>
0x804a444:   eb 01                           	jmp 0x804a447 <func_1+0xcd5>
0x804a446:   90                              	nop 
0x804a447:   c7 45 d8 f7 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff7
0x804a44e:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a455:   89 c2                           	mov edx, eax
0x804a457:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a45b:   01 d0                           	add eax, edx
0x804a45d:   0f b6 c0                        	movzx eax, al
0x804a460:   ba 01 00 00 00                  	mov edx, 1
0x804a465:   89 c1                           	mov ecx, eax
0x804a467:   d3 e2                           	shl edx, cl
0x804a469:   89 d0                           	mov eax, edx
0x804a46b:   85 c0                           	test eax, eax
0x804a46d:   0f 84 e7 04 00 00               	je 0x804a95a <func_1+0x11e8>
0x804a473:   66 c7 85 c6 fe ff ff 01 16      	mov word ptr [ebp - 0x13a], 0x1601
0x804a47c:   66 c7 85 c4 fe ff ff 9a 3d      	mov word ptr [ebp - 0x13c], 0x3d9a
0x804a485:   c7 85 c0 fe ff ff 03 a3 cd cc   	mov dword ptr [ebp - 0x140], 0xcccda303
0x804a48f:   c7 85 bc fe ff ff 9e b2 dd ce   	mov dword ptr [ebp - 0x144], 0xceddb29e
0x804a499:   c6 85 bb fe ff ff 04            	mov byte ptr [ebp - 0x145], 4
0x804a4a0:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a4a3:   3b 45 a4                        	cmp eax, dword ptr [ebp - 0x5c]
0x804a4a6:   0f 9e c0                        	setle al
0x804a4a9:   0f b6 c0                        	movzx eax, al
0x804a4ac:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a4b0:   0f bf 55 e6                     	movsx edx, word ptr [ebp - 0x1a]
0x804a4b4:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x804a4bb:   31 55 d8                        	xor dword ptr [ebp - 0x28], edx
0x804a4be:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a4c1:   0f 95 c0                        	setne al
0x804a4c4:   0f b6 d0                        	movzx edx, al
0x804a4c7:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x804a4ce:   31 d0                           	xor eax, edx
0x804a4d0:   83 f8 fb                        	cmp eax, -5
0x804a4d3:   0f 95 c0                        	setne al
0x804a4d6:   0f b6 c0                        	movzx eax, al
0x804a4d9:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a4dc:   b8 b5 7c 6e 1c                  	mov eax, 0x1c6e7cb5
0x804a4e1:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a4e4:   66 83 bd c6 fe ff ff 00         	cmp word ptr [ebp - 0x13a], 0
0x804a4ec:   0f 84 59 04 00 00               	je 0x804a94b <func_1+0x11d9>
0x804a4f2:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x804a4f9:   66 c7 85 b8 fe ff ff ff ff      	mov word ptr [ebp - 0x148], 0xffff
0x804a502:   c6 85 b7 fe ff ff ed            	mov byte ptr [ebp - 0x149], 0xed
0x804a509:   c7 85 b0 fe ff ff b7 3c f7 25   	mov dword ptr [ebp - 0x150], 0x25f73cb7
0x804a513:   c7 85 ac fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x154], 1
0x804a51d:   c7 45 c8 f2 ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffff2
0x804a524:   e9 e0 00 00 00                  	jmp 0x804a609 <func_1+0xe97>
0x804a529:   c7 45 80 d2 81 14 9b            	mov dword ptr [ebp - 0x80], 0x9b1481d2
0x804a530:   66 c7 45 a2 00 00               	mov word ptr [ebp - 0x5e], 0
0x804a536:   eb 7a                           	jmp 0x804a5b2 <func_1+0xe40>
0x804a538:   c7 85 88 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x178], 4
0x804a542:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a549:   75 74                           	jne 0x804a5bf <func_1+0xe4d>
0x804a54b:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a551:   0f b7 d0                        	movzx edx, ax
0x804a554:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a557:   0f b7 c0                        	movzx eax, ax
0x804a55a:   8d 0c 02                        	lea ecx, [edx + eax]
0x804a55d:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x804a563:   0f b6 d0                        	movzx edx, al
0x804a566:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x804a56c:   89 c3                           	mov ebx, eax
0x804a56e:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a571:   29 c3                           	sub ebx, eax
0x804a573:   89 d8                           	mov eax, ebx
0x804a575:   83 c8 f9                        	or eax, 0xfffffff9
0x804a578:   0f b6 c0                        	movzx eax, al
0x804a57b:   01 c2                           	add edx, eax
0x804a57d:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a581:   39 c2                           	cmp edx, eax
0x804a583:   0f 95 c0                        	setne al
0x804a586:   0f b6 c0                        	movzx eax, al
0x804a589:   39 c1                           	cmp ecx, eax
0x804a58b:   0f 9f c0                        	setg al
0x804a58e:   0f b6 c0                        	movzx eax, al
0x804a591:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a594:   0f 94 c0                        	sete al
0x804a597:   0f b6 c0                        	movzx eax, al
0x804a59a:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a59d:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x804a5a4:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a5a7:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x804a5ab:   83 e8 03                        	sub eax, 3
0x804a5ae:   66 89 45 a2                     	mov word ptr [ebp - 0x5e], ax
0x804a5b2:   66 83 7d a2 ec                  	cmp word ptr [ebp - 0x5e], -0x14
0x804a5b7:   0f 8c 7b ff ff ff               	jl 0x804a538 <func_1+0xdc6>
0x804a5bd:   eb 01                           	jmp 0x804a5c0 <func_1+0xe4e>
0x804a5bf:   90                              	nop 
0x804a5c0:   66 83 bd c6 fe ff ff 00         	cmp word ptr [ebp - 0x13a], 0
0x804a5c8:   75 3a                           	jne 0x804a604 <func_1+0xe92>
0x804a5ca:   c7 45 e0 18 00 00 00            	mov dword ptr [ebp - 0x20], 0x18
0x804a5d1:   eb 13                           	jmp 0x804a5e6 <func_1+0xe74>
0x804a5d3:   66 83 bd 66 ff ff ff 00         	cmp word ptr [ebp - 0x9a], 0
0x804a5db:   74 05                           	je 0x804a5e2 <func_1+0xe70>
0x804a5dd:   e9 71 f3 ff ff                  	jmp 0x8049953 <func_1+0x1e1>
0x804a5e2:   83 45 e0 07                     	add dword ptr [ebp - 0x20], 7
0x804a5e6:   83 7d e0 18                     	cmp dword ptr [ebp - 0x20], 0x18
0x804a5ea:   75 e7                           	jne 0x804a5d3 <func_1+0xe61>
0x804a5ec:   0f b7 55 aa                     	movzx edx, word ptr [ebp - 0x56]
0x804a5f0:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x804a5f7:   39 c2                           	cmp edx, eax
0x804a5f9:   0f 9d c0                        	setge al
0x804a5fc:   0f b6 c0                        	movzx eax, al
0x804a5ff:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a602:   eb 01                           	jmp 0x804a605 <func_1+0xe93>
0x804a604:   90                              	nop 
0x804a605:   83 45 c8 03                     	add dword ptr [ebp - 0x38], 3
0x804a609:   83 7d c8 07                     	cmp dword ptr [ebp - 0x38], 7
0x804a60d:   0f 84 16 ff ff ff               	je 0x804a529 <func_1+0xdb7>
0x804a613:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a617:   0f 84 24 02 00 00               	je 0x804a841 <func_1+0x10cf>
0x804a61d:   c7 85 a0 fe ff ff 09 b5 78 5e   	mov dword ptr [ebp - 0x160], 0x5e78b509
0x804a627:   c7 85 9c fe ff ff c7 b4 a2 38   	mov dword ptr [ebp - 0x164], 0x38a2b4c7
0x804a631:   c7 85 98 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x168], 2
0x804a63b:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a63f:   0f 84 cf 00 00 00               	je 0x804a714 <func_1+0xfa2>
0x804a645:   66 c7 85 8e fe ff ff 09 af      	mov word ptr [ebp - 0x172], 0xaf09
0x804a64e:   83 85 a0 fe ff ff 01            	add dword ptr [ebp - 0x160], 1
0x804a655:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a659:   74 07                           	je 0x804a662 <func_1+0xef0>
0x804a65b:   b8 01 00 00 00                  	mov eax, 1
0x804a660:   eb 05                           	jmp 0x804a667 <func_1+0xef5>
0x804a662:   b8 00 00 00 00                  	mov eax, 0
0x804a667:   83 e0 01                        	and eax, 1
0x804a66a:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a670:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a673:   0f be d0                        	movsx edx, al
0x804a676:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a67a:   0f be c0                        	movsx eax, al
0x804a67d:   89 c1                           	mov ecx, eax
0x804a67f:   d3 e2                           	shl edx, cl
0x804a681:   89 d0                           	mov eax, edx
0x804a683:   0f be d0                        	movsx edx, al
0x804a686:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a68c:   0f be c0                        	movsx eax, al
0x804a68f:   89 c1                           	mov ecx, eax
0x804a691:   d3 e2                           	shl edx, cl
0x804a693:   89 d0                           	mov eax, edx
0x804a695:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a698:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x804a69f:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a6a5:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a6a8:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a6ac:   66 c7 45 d6 00 00               	mov word ptr [ebp - 0x2a], 0
0x804a6b2:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a6b6:   0f be d0                        	movsx edx, al
0x804a6b9:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a6bc:   0f be c0                        	movsx eax, al
0x804a6bf:   0f af c2                        	imul eax, edx
0x804a6c2:   89 c2                           	mov edx, eax
0x804a6c4:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a6c8:   09 d0                           	or eax, edx
0x804a6ca:   88 45 b6                        	mov byte ptr [ebp - 0x4a], al
0x804a6cd:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a6d0:   0f b6 c0                        	movzx eax, al
0x804a6d3:   83 e8 01                        	sub eax, 1
0x804a6d6:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a6dc:   b8 00 00 00 00                  	mov eax, 0
0x804a6e1:   21 85 30 ff ff ff               	and dword ptr [ebp - 0xd0], eax
0x804a6e7:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804a6ee:   98                              	cwde 
0x804a6ef:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804a6f2:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a6f6:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a6f9:   0f 9e c0                        	setle al
0x804a6fc:   0f b6 c0                        	movzx eax, al
0x804a6ff:   0f b7 b5 8e fe ff ff            	movzx esi, word ptr [ebp - 0x172]
0x804a706:   99                              	cdq 
0x804a707:   f7 fe                           	idiv esi
0x804a709:   88 85 bb fe ff ff               	mov byte ptr [ebp - 0x145], al
0x804a70f:   e9 03 01 00 00                  	jmp 0x804a817 <func_1+0x10a5>
0x804a714:   c7 85 94 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x16c], 0xfffffffd
0x804a71e:   c7 85 90 fe ff ff 06 6a ab 74   	mov dword ptr [ebp - 0x170], 0x74ab6a06
0x804a728:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a72c:   75 13                           	jne 0x804a741 <func_1+0xfcf>
0x804a72e:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a734:   8d 90 7b e8 96 d4               	lea edx, [eax - 0x2b691785]
0x804a73a:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a73d:   39 c2                           	cmp edx, eax
0x804a73f:   76 07                           	jbe 0x804a748 <func_1+0xfd6>
0x804a741:   b8 01 00 00 00                  	mov eax, 1
0x804a746:   eb 05                           	jmp 0x804a74d <func_1+0xfdb>
0x804a748:   b8 00 00 00 00                  	mov eax, 0
0x804a74d:   3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x804a750:   0f 9f c0                        	setg al
0x804a753:   0f b6 d0                        	movzx edx, al
0x804a756:   0f b6 85 65 ff ff ff            	movzx eax, byte ptr [ebp - 0x9b]
0x804a75d:   0f af c2                        	imul eax, edx
0x804a760:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a766:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a76c:   0f bf d0                        	movsx edx, ax
0x804a76f:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a773:   98                              	cwde 
0x804a774:   29 c2                           	sub edx, eax
0x804a776:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a77d:   39 c2                           	cmp edx, eax
0x804a77f:   0f 94 c0                        	sete al
0x804a782:   0f b6 c0                        	movzx eax, al
0x804a785:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804a78b:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a792:   74 05                           	je 0x804a799 <func_1+0x1027>
0x804a794:   e9 84 fd ff ff                  	jmp 0x804a51d <func_1+0xdab>
0x804a799:   0f bf 8d b8 fe ff ff            	movsx ecx, word ptr [ebp - 0x148]
0x804a7a0:   b8 01 00 00 00                  	mov eax, 1
0x804a7a5:   ba 00 00 00 00                  	mov edx, 0
0x804a7aa:   f7 f1                           	div ecx
0x804a7ac:   0f b6 85 b7 fe ff ff            	movzx eax, byte ptr [ebp - 0x149]
0x804a7b3:   39 c2                           	cmp edx, eax
0x804a7b5:   c7 45 d8 3b cf b3 ff            	mov dword ptr [ebp - 0x28], 0xffb3cf3b
0x804a7bc:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a7bf:   3b 85 94 fe ff ff               	cmp eax, dword ptr [ebp - 0x16c]
0x804a7c5:   7c 07                           	jl 0x804a7ce <func_1+0x105c>
0x804a7c7:   83 bd 9c fe ff ff 00            	cmp dword ptr [ebp - 0x164], 0
0x804a7ce:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a7d2:   89 c2                           	mov edx, eax
0x804a7d4:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a7d7:   29 c2                           	sub edx, eax
0x804a7d9:   89 d0                           	mov eax, edx
0x804a7db:   0f be c0                        	movsx eax, al
0x804a7de:   c1 f8 04                        	sar eax, 4
0x804a7e1:   0f be c0                        	movsx eax, al
0x804a7e4:   c1 e0 03                        	shl eax, 3
0x804a7e7:   33 45 bc                        	xor eax, dword ptr [ebp - 0x44]
0x804a7ea:   39 85 a0 fe ff ff               	cmp dword ptr [ebp - 0x160], eax
0x804a7f0:   0f 94 c0                        	sete al
0x804a7f3:   0f b6 c0                        	movzx eax, al
0x804a7f6:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a7f9:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x804a7ff:   83 c0 01                        	add eax, 1
0x804a802:   f7 d0                           	not eax
0x804a804:   89 c2                           	mov edx, eax
0x804a806:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a809:   0f af c2                        	imul eax, edx
0x804a80c:   0f b7 c0                        	movzx eax, ax
0x804a80f:   2d 9b e7 00 00                  	sub eax, 0xe79b
0x804a814:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a817:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a81e:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a821:   0f 9c c0                        	setl al
0x804a824:   0f b6 d0                        	movzx edx, al
0x804a827:   80 75 df 01                     	xor byte ptr [ebp - 0x21], 1
0x804a82b:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a82f:   39 c2                           	cmp edx, eax
0x804a831:   0f 9d c0                        	setge al
0x804a834:   0f b6 c0                        	movzx eax, al
0x804a837:   f7 d8                           	neg eax
0x804a839:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a83c:   e9 1a 04 00 00                  	jmp 0x804ac5b <func_1+0x14e9>
0x804a841:   c7 85 a8 fe ff ff b9 bc 7f d6   	mov dword ptr [ebp - 0x158], 0xd67fbcb9
0x804a84b:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a852:   74 41                           	je 0x804a895 <func_1+0x1123>
0x804a854:   0f b6 95 77 ff ff ff            	movzx edx, byte ptr [ebp - 0x89]
0x804a85b:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a861:   29 c2                           	sub edx, eax
0x804a863:   89 d0                           	mov eax, edx
0x804a865:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a868:   66 0f be 85 6f ff ff ff         	movsx ax, byte ptr [ebp - 0x91]
0x804a870:   0f b7 c8                        	movzx ecx, ax
0x804a873:   ba e5 a7 80 99                  	mov edx, 0x9980a7e5
0x804a878:   89 c8                           	mov eax, ecx
0x804a87a:   f7 ea                           	imul edx
0x804a87c:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a87f:   c1 f8 0e                        	sar eax, 0xe
0x804a882:   89 c2                           	mov edx, eax
0x804a884:   89 c8                           	mov eax, ecx
0x804a886:   c1 f8 1f                        	sar eax, 0x1f
0x804a889:   29 c2                           	sub edx, eax
0x804a88b:   89 d0                           	mov eax, edx
0x804a88d:   0f be c0                        	movsx eax, al
0x804a890:   c1 e0 07                        	shl eax, 7
0x804a893:   85 c0                           	test eax, eax
0x804a895:   66 83 bd c6 fe ff ff 01         	cmp word ptr [ebp - 0x13a], 1
0x804a89d:   7f 07                           	jg 0x804a8a6 <func_1+0x1134>
0x804a89f:   b8 ed ff ff ff                  	mov eax, 0xffffffed
0x804a8a4:   eb 05                           	jmp 0x804a8ab <func_1+0x1139>
0x804a8a6:   b8 ec ff ff ff                  	mov eax, 0xffffffec
0x804a8ab:   3b 85 a8 fe ff ff               	cmp eax, dword ptr [ebp - 0x158]
0x804a8b1:   0f 92 c0                        	setb al
0x804a8b4:   0f b6 c0                        	movzx eax, al
0x804a8b7:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a8ba:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a8be:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a8c1:   0f 9f c0                        	setg al
0x804a8c4:   0f b6 d0                        	movzx edx, al
0x804a8c7:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a8ce:   39 c2                           	cmp edx, eax
0x804a8d0:   0f 9c c0                        	setl al
0x804a8d3:   0f b6 c0                        	movzx eax, al
0x804a8d6:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a8dc:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a8e2:   0f b6 d0                        	movzx edx, al
0x804a8e5:   0f bf 85 b8 fe ff ff            	movsx eax, word ptr [ebp - 0x148]
0x804a8ec:   09 d0                           	or eax, edx
0x804a8ee:   85 c0                           	test eax, eax
0x804a8f0:   74 10                           	je 0x804a902 <func_1+0x1190>
0x804a8f2:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x804a8f9:   74 07                           	je 0x804a902 <func_1+0x1190>
0x804a8fb:   b8 01 00 00 00                  	mov eax, 1
0x804a900:   eb 05                           	jmp 0x804a907 <func_1+0x1195>
0x804a902:   b8 00 00 00 00                  	mov eax, 0
0x804a907:   89 c2                           	mov edx, eax
0x804a909:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a910:   01 d0                           	add eax, edx
0x804a912:   0f bf d0                        	movsx edx, ax
0x804a915:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a918:   98                              	cwde 
0x804a919:   89 c1                           	mov ecx, eax
0x804a91b:   d3 e2                           	shl edx, cl
0x804a91d:   89 d0                           	mov eax, edx
0x804a91f:   31 45 b8                        	xor dword ptr [ebp - 0x48], eax
0x804a922:   c7 45 84 f8 ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffff8
0x804a929:   eb 15                           	jmp 0x804a940 <func_1+0x11ce>
0x804a92b:   c7 85 a4 fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x15c], 6
0x804a935:   83 ad a4 fe ff ff 01            	sub dword ptr [ebp - 0x15c], 1
0x804a93c:   83 45 84 01                     	add dword ptr [ebp - 0x7c], 1
0x804a940:   83 7d 84 0b                     	cmp dword ptr [ebp - 0x7c], 0xb
0x804a944:   76 e5                           	jbe 0x804a92b <func_1+0x11b9>
0x804a946:   e9 10 03 00 00                  	jmp 0x804ac5b <func_1+0x14e9>
0x804a94b:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804a952:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a955:   e9 01 03 00 00                  	jmp 0x804ac5b <func_1+0x14e9>
0x804a95a:   66 c7 85 7e ff ff ff fd ff      	mov word ptr [ebp - 0x82], 0xfffd
0x804a963:   c7 85 78 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x88], 0xfffffffb
0x804a96d:   c6 85 d6 fe ff ff ff            	mov byte ptr [ebp - 0x12a], 0xff
0x804a974:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a978:   74 0f                           	je 0x804a989 <func_1+0x1217>
0x804a97a:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x804a981:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a984:   e9 7a 01 00 00                  	jmp 0x804ab03 <func_1+0x1391>
0x804a989:   c6 85 d5 fe ff ff 54            	mov byte ptr [ebp - 0x12b], 0x54
0x804a990:   0f bf 45 d6                     	movsx eax, word ptr [ebp - 0x2a]
0x804a994:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a997:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a99b:   66 39 85 7e ff ff ff            	cmp word ptr [ebp - 0x82], ax
0x804a9a2:   0f 94 c0                        	sete al
0x804a9a5:   0f b6 c0                        	movzx eax, al
0x804a9a8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a9ab:   0f b6 55 b6                     	movzx edx, byte ptr [ebp - 0x4a]
0x804a9af:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a9b2:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a9b8:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804a9bf:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a9c2:   0f b6 c0                        	movzx eax, al
0x804a9c5:   bb 07 00 00 00                  	mov ebx, 7
0x804a9ca:   89 c1                           	mov ecx, eax
0x804a9cc:   d3 fb                           	sar ebx, cl
0x804a9ce:   89 d8                           	mov eax, ebx
0x804a9d0:   0f b7 d8                        	movzx ebx, ax
0x804a9d3:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a9d7:   89 c1                           	mov ecx, eax
0x804a9d9:   d3 e3                           	shl ebx, cl
0x804a9db:   89 d8                           	mov eax, ebx
0x804a9dd:   66 98                           	cbw 
0x804a9df:   b9 f6 ff ff ff                  	mov ecx, 0xfffffff6
0x804a9e4:   0f af c1                        	imul eax, ecx
0x804a9e7:   c1 e0 03                        	shl eax, 3
0x804a9ea:   0f b6 c0                        	movzx eax, al
0x804a9ed:   89 c1                           	mov ecx, eax
0x804a9ef:   d3 fa                           	sar edx, cl
0x804a9f1:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804a9f8:   39 c2                           	cmp edx, eax
0x804a9fa:   0f 9d c0                        	setge al
0x804a9fd:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804aa00:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x804aa07:   66 c7 45 e6 06 00               	mov word ptr [ebp - 0x1a], 6
0x804aa0d:   e9 e6 00 00 00                  	jmp 0x804aaf8 <func_1+0x1386>
0x804aa12:   c7 85 d0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x130], 0
0x804aa1c:   c6 85 cf fe ff ff 84            	mov byte ptr [ebp - 0x131], 0x84
0x804aa23:   0f be 8d d5 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12b]
0x804aa2a:   b8 8b 00 00 00                  	mov eax, 0x8b
0x804aa2f:   99                              	cdq 
0x804aa30:   f7 bd 78 ff ff ff               	idiv dword ptr [ebp - 0x88]
0x804aa36:   89 d0                           	mov eax, edx
0x804aa38:   85 c0                           	test eax, eax
0x804aa3a:   74 10                           	je 0x804aa4c <func_1+0x12da>
0x804aa3c:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804aa43:   74 07                           	je 0x804aa4c <func_1+0x12da>
0x804aa45:   b8 01 00 00 00                  	mov eax, 1
0x804aa4a:   eb 05                           	jmp 0x804aa51 <func_1+0x12df>
0x804aa4c:   b8 00 00 00 00                  	mov eax, 0
0x804aa51:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x804aa57:   0f 96 c0                        	setbe al
0x804aa5a:   0f b6 c0                        	movzx eax, al
0x804aa5d:   31 c1                           	xor ecx, eax
0x804aa5f:   89 ca                           	mov edx, ecx
0x804aa61:   0f b6 85 d6 fe ff ff            	movzx eax, byte ptr [ebp - 0x12a]
0x804aa68:   39 c2                           	cmp edx, eax
0x804aa6a:   7c 07                           	jl 0x804aa73 <func_1+0x1301>
0x804aa6c:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x804aa71:   eb 05                           	jmp 0x804aa78 <func_1+0x1306>
0x804aa73:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x804aa78:   88 85 cf fe ff ff               	mov byte ptr [ebp - 0x131], al
0x804aa7e:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804aa84:   3b 45 c0                        	cmp eax, dword ptr [ebp - 0x40]
0x804aa87:   0f 9e c0                        	setle al
0x804aa8a:   0f b6 d0                        	movzx edx, al
0x804aa8d:   0f b6 85 d6 fe ff ff            	movzx eax, byte ptr [ebp - 0x12a]
0x804aa94:   39 c2                           	cmp edx, eax
0x804aa96:   0f 94 c0                        	sete al
0x804aa99:   88 45 b6                        	mov byte ptr [ebp - 0x4a], al
0x804aa9c:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804aaa0:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804aaa3:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804aaa7:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804aaaa:   0f b6 c0                        	movzx eax, al
0x804aaad:   c1 e0 05                        	shl eax, 5
0x804aab0:   83 f8 01                        	cmp eax, 1
0x804aab3:   0f 94 c0                        	sete al
0x804aab6:   0f b6 c0                        	movzx eax, al
0x804aab9:   0f b7 95 7e ff ff ff            	movzx edx, word ptr [ebp - 0x82]
0x804aac0:   0f b6 f2                        	movzx esi, dl
0x804aac3:   99                              	cdq 
0x804aac4:   f7 fe                           	idiv esi
0x804aac6:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804aacc:   0f 96 c0                        	setbe al
0x804aacf:   0f b6 c0                        	movzx eax, al
0x804aad2:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804aad5:   0f 95 c0                        	setne al
0x804aad8:   0f b6 d0                        	movzx edx, al
0x804aadb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804aade:   0f be c0                        	movsx eax, al
0x804aae1:   89 c1                           	mov ecx, eax
0x804aae3:   d3 fa                           	sar edx, cl
0x804aae5:   89 d0                           	mov eax, edx
0x804aae7:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804aaed:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804aaf1:   83 e8 01                        	sub eax, 1
0x804aaf4:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804aaf8:   66 83 7d e6 f0                  	cmp word ptr [ebp - 0x1a], -0x10
0x804aafd:   0f 8d 0f ff ff ff               	jge 0x804aa12 <func_1+0x12a0>
0x804ab03:   66 c7 85 7e ff ff ff 00 00      	mov word ptr [ebp - 0x82], 0
0x804ab0c:   e9 a4 00 00 00                  	jmp 0x804abb5 <func_1+0x1443>
0x804ab11:   c6 85 ce fe ff ff 2c            	mov byte ptr [ebp - 0x132], 0x2c
0x804ab18:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x804ab22:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804ab28:   0f b6 c0                        	movzx eax, al
0x804ab2b:   69 c0 89 00 00 00               	imul eax, eax, 0x89
0x804ab31:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804ab37:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x804ab3e:   74 54                           	je 0x804ab94 <func_1+0x1422>
0x804ab40:   80 a5 ce fe ff ff 01            	and byte ptr [ebp - 0x132], 1
0x804ab47:   66 0f be 85 ce fe ff ff         	movsx ax, byte ptr [ebp - 0x132]
0x804ab4f:   66 39 45 d6                     	cmp word ptr [ebp - 0x2a], ax
0x804ab53:   0f 94 c0                        	sete al
0x804ab56:   0f b6 d0                        	movzx edx, al
0x804ab59:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804ab5f:   0f b6 c0                        	movzx eax, al
0x804ab62:   0f af c2                        	imul eax, edx
0x804ab65:   85 c0                           	test eax, eax
0x804ab67:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804ab6b:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804ab71:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804ab78:   0b 85 78 ff ff ff               	or eax, dword ptr [ebp - 0x88]
0x804ab7e:   85 c0                           	test eax, eax
0x804ab80:   74 04                           	je 0x804ab86 <func_1+0x1414>
0x804ab82:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804ab86:   c7 45 e0 14 97 e5 b6            	mov dword ptr [ebp - 0x20], 0xb6e59714
0x804ab8d:   b8 01 00 00 00                  	mov eax, 1
0x804ab92:   eb 05                           	jmp 0x804ab99 <func_1+0x1427>
0x804ab94:   b8 00 00 00 00                  	mov eax, 0
0x804ab99:   0f bf d0                        	movsx edx, ax
0x804ab9c:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804aba3:   0f af c2                        	imul eax, edx
0x804aba6:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804aba9:   c6 45 ce 01                     	mov byte ptr [ebp - 0x32], 1
0x804abad:   66 83 85 7e ff ff ff 04         	add word ptr [ebp - 0x82], 4
0x804abb5:   66 83 bd 7e ff ff ff 2a         	cmp word ptr [ebp - 0x82], 0x2a
0x804abbd:   0f 86 4e ff ff ff               	jbe 0x804ab11 <func_1+0x139f>
0x804abc3:   80 6d b6 01                     	sub byte ptr [ebp - 0x4a], 1
0x804abc7:   0f b6 55 b6                     	movzx edx, byte ptr [ebp - 0x4a]
0x804abcb:   0f be 4d ce                     	movsx ecx, byte ptr [ebp - 0x32]
0x804abcf:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804abd2:   0f be c0                        	movsx eax, al
0x804abd5:   01 c8                           	add eax, ecx
0x804abd7:   3d 85 c9 00 00                  	cmp eax, 0xc985
0x804abdc:   66 83 bd 7e ff ff ff 00         	cmp word ptr [ebp - 0x82], 0
0x804abe4:   74 07                           	je 0x804abed <func_1+0x147b>
0x804abe6:   b9 01 00 00 00                  	mov ecx, 1
0x804abeb:   eb 05                           	jmp 0x804abf2 <func_1+0x1480>
0x804abed:   b9 00 00 00 00                  	mov ecx, 0
0x804abf2:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804abf6:   39 c1                           	cmp ecx, eax
0x804abf8:   0f 9c c0                        	setl al
0x804abfb:   0f b6 d8                        	movzx ebx, al
0x804abfe:   0f b6 85 4f ff ff ff            	movzx eax, byte ptr [ebp - 0xb1]
0x804ac05:   89 c1                           	mov ecx, eax
0x804ac07:   d3 fb                           	sar ebx, cl
0x804ac09:   89 d8                           	mov eax, ebx
0x804ac0b:   89 c1                           	mov ecx, eax
0x804ac0d:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804ac10:   01 c1                           	add ecx, eax
0x804ac12:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804ac15:   29 c1                           	sub ecx, eax
0x804ac17:   89 c8                           	mov eax, ecx
0x804ac19:   89 c1                           	mov ecx, eax
0x804ac1b:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804ac22:   21 c8                           	and eax, ecx
0x804ac24:   0f b6 d8                        	movzx ebx, al
0x804ac27:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804ac2d:   0f b6 c0                        	movzx eax, al
0x804ac30:   89 c1                           	mov ecx, eax
0x804ac32:   d3 fb                           	sar ebx, cl
0x804ac34:   89 d8                           	mov eax, ebx
0x804ac36:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804ac39:   0f 9c c0                        	setl al
0x804ac3c:   0f b6 c8                        	movzx ecx, al
0x804ac3f:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x804ac43:   39 c1                           	cmp ecx, eax
0x804ac45:   0f 9e c0                        	setle al
0x804ac48:   0f b6 c8                        	movzx ecx, al
0x804ac4b:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804ac4f:   01 c8                           	add eax, ecx
0x804ac51:   39 c2                           	cmp edx, eax
0x804ac53:   b8 00 00 00 00                  	mov eax, 0
0x804ac58:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804ac5b:   0f be 45 ce                     	movsx eax, byte ptr [ebp - 0x32]
0x804ac5f:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x804ac63:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x804ac67:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804ac6b:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804ac71:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x804ac78:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804ac7e:   0f b6 4d b6                     	movzx ecx, byte ptr [ebp - 0x4a]
0x804ac82:   89 8d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ecx
0x804ac88:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804ac8c:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804ac92:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804ac96:   0f bf 5d e6                     	movsx ebx, word ptr [ebp - 0x1a]
0x804ac9a:   0f b6 8d 77 ff ff ff            	movzx ecx, byte ptr [ebp - 0x89]
0x804aca1:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804aca7:   50                              	push eax
0x804aca8:   52                              	push edx
0x804aca9:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804acac:   56                              	push esi
0x804acad:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804acb0:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804acb6:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804acbc:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804acc2:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804acc8:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804accb:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804acce:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804acd4:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804acd7:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804acda:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804acdd:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ace0:   57                              	push edi
0x804ace1:   53                              	push ebx
0x804ace2:   51                              	push ecx
0x804ace3:   e8 3e e9 ff ff                  	call 0x8049626 <set_var>
0x804ace8:   83 c4 50                        	add esp, 0x50
0x804aceb:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804acee:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804acf1:   5b                              	pop ebx
0x804acf2:   5e                              	pop esi
0x804acf3:   5f                              	pop edi
0x804acf4:   5d                              	pop ebp
0x804acf5:   c3                              	ret 
; function: main at 0x804acf6 -- 0x804afe0
0x804acf6:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804acfa:   83 e4 f0                        	and esp, 0xfffffff0
0x804acfd:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ad00:   55                              	push ebp
0x804ad01:   89 e5                           	mov ebp, esp
0x804ad03:   53                              	push ebx
0x804ad04:   51                              	push ecx
0x804ad05:   83 ec 10                        	sub esp, 0x10
0x804ad08:   e8 83 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad0d:   81 c3 f3 32 00 00               	add ebx, 0x32f3
0x804ad13:   89 c8                           	mov eax, ecx
0x804ad15:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad1c:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad1f:   75 26                           	jne 0x804ad47 <main+0x51>
0x804ad21:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad24:   83 c0 04                        	add eax, 4
0x804ad27:   8b 00                           	mov eax, dword ptr [eax]
0x804ad29:   83 ec 08                        	sub esp, 8
0x804ad2c:   8d 93 c8 d0 ff ff               	lea edx, [ebx - 0x2f38]
0x804ad32:   52                              	push edx
0x804ad33:   50                              	push eax
0x804ad34:   e8 c7 d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad39:   83 c4 10                        	add esp, 0x10
0x804ad3c:   85 c0                           	test eax, eax
0x804ad3e:   75 07                           	jne 0x804ad47 <main+0x51>
0x804ad40:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad47:   e8 0a d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad4c:   e8 1a e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad51:   e8 1c ea ff ff                  	call 0x8049772 <func_1>
0x804ad56:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804ad5d:   0f b6 c0                        	movzx eax, al
0x804ad60:   83 ec 04                        	sub esp, 4
0x804ad63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad66:   8d 93 ca d0 ff ff               	lea edx, [ebx - 0x2f36]
0x804ad6c:   52                              	push edx
0x804ad6d:   50                              	push eax
0x804ad6e:   e8 04 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad73:   83 c4 10                        	add esp, 0x10
0x804ad76:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804ad7d:   98                              	cwde 
0x804ad7e:   83 ec 04                        	sub esp, 4
0x804ad81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad84:   8d 93 cf d0 ff ff               	lea edx, [ebx - 0x2f31]
0x804ad8a:   52                              	push edx
0x804ad8b:   50                              	push eax
0x804ad8c:   e8 e6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad91:   83 c4 10                        	add esp, 0x10
0x804ad94:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804ad9b:   0f b7 c0                        	movzx eax, ax
0x804ad9e:   83 ec 04                        	sub esp, 4
0x804ada1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada4:   8d 93 d4 d0 ff ff               	lea edx, [ebx - 0x2f2c]
0x804adaa:   52                              	push edx
0x804adab:   50                              	push eax
0x804adac:   e8 c6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb1:   83 c4 10                        	add esp, 0x10
0x804adb4:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804adba:   83 ec 04                        	sub esp, 4
0x804adbd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc0:   8d 93 d9 d0 ff ff               	lea edx, [ebx - 0x2f27]
0x804adc6:   52                              	push edx
0x804adc7:   50                              	push eax
0x804adc8:   e8 aa e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adcd:   83 c4 10                        	add esp, 0x10
0x804add0:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804add6:   89 c2                           	mov edx, eax
0x804add8:   83 ec 04                        	sub esp, 4
0x804addb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adde:   8d 83 de d0 ff ff               	lea eax, [ebx - 0x2f22]
0x804ade4:   50                              	push eax
0x804ade5:   52                              	push edx
0x804ade6:   e8 8c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adeb:   83 c4 10                        	add esp, 0x10
0x804adee:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804adf4:   83 ec 04                        	sub esp, 4
0x804adf7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adfa:   8d 93 e3 d0 ff ff               	lea edx, [ebx - 0x2f1d]
0x804ae00:   52                              	push edx
0x804ae01:   50                              	push eax
0x804ae02:   e8 70 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae07:   83 c4 10                        	add esp, 0x10
0x804ae0a:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ae10:   89 c2                           	mov edx, eax
0x804ae12:   83 ec 04                        	sub esp, 4
0x804ae15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae18:   8d 83 e8 d0 ff ff               	lea eax, [ebx - 0x2f18]
0x804ae1e:   50                              	push eax
0x804ae1f:   52                              	push edx
0x804ae20:   e8 52 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae25:   83 c4 10                        	add esp, 0x10
0x804ae28:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804ae2f:   0f b6 c0                        	movzx eax, al
0x804ae32:   83 ec 04                        	sub esp, 4
0x804ae35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae38:   8d 93 ed d0 ff ff               	lea edx, [ebx - 0x2f13]
0x804ae3e:   52                              	push edx
0x804ae3f:   50                              	push eax
0x804ae40:   e8 32 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae45:   83 c4 10                        	add esp, 0x10
0x804ae48:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804ae4e:   89 c2                           	mov edx, eax
0x804ae50:   83 ec 04                        	sub esp, 4
0x804ae53:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae56:   8d 83 f3 d0 ff ff               	lea eax, [ebx - 0x2f0d]
0x804ae5c:   50                              	push eax
0x804ae5d:   52                              	push edx
0x804ae5e:   e8 14 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae63:   83 c4 10                        	add esp, 0x10
0x804ae66:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ae6c:   89 c2                           	mov edx, eax
0x804ae6e:   83 ec 04                        	sub esp, 4
0x804ae71:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae74:   8d 83 f9 d0 ff ff               	lea eax, [ebx - 0x2f07]
0x804ae7a:   50                              	push eax
0x804ae7b:   52                              	push edx
0x804ae7c:   e8 f6 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae81:   83 c4 10                        	add esp, 0x10
0x804ae84:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ae8a:   89 c2                           	mov edx, eax
0x804ae8c:   83 ec 04                        	sub esp, 4
0x804ae8f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae92:   8d 83 ff d0 ff ff               	lea eax, [ebx - 0x2f01]
0x804ae98:   50                              	push eax
0x804ae99:   52                              	push edx
0x804ae9a:   e8 d8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae9f:   83 c4 10                        	add esp, 0x10
0x804aea2:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804aea9:   0f b6 c0                        	movzx eax, al
0x804aeac:   83 ec 04                        	sub esp, 4
0x804aeaf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb2:   8d 93 05 d1 ff ff               	lea edx, [ebx - 0x2efb]
0x804aeb8:   52                              	push edx
0x804aeb9:   50                              	push eax
0x804aeba:   e8 b8 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aebf:   83 c4 10                        	add esp, 0x10
0x804aec2:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804aec9:   0f be c0                        	movsx eax, al
0x804aecc:   83 ec 04                        	sub esp, 4
0x804aecf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed2:   8d 93 0b d1 ff ff               	lea edx, [ebx - 0x2ef5]
0x804aed8:   52                              	push edx
0x804aed9:   50                              	push eax
0x804aeda:   e8 98 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aedf:   83 c4 10                        	add esp, 0x10
0x804aee2:   0f b6 83 4a 00 00 00            	movzx eax, byte ptr [ebx + 0x4a]
0x804aee9:   0f b6 c0                        	movzx eax, al
0x804aeec:   83 ec 04                        	sub esp, 4
0x804aeef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef2:   8d 93 11 d1 ff ff               	lea edx, [ebx - 0x2eef]
0x804aef8:   52                              	push edx
0x804aef9:   50                              	push eax
0x804aefa:   e8 78 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeff:   83 c4 10                        	add esp, 0x10
0x804af02:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804af08:   89 c2                           	mov edx, eax
0x804af0a:   83 ec 04                        	sub esp, 4
0x804af0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af10:   8d 83 17 d1 ff ff               	lea eax, [ebx - 0x2ee9]
0x804af16:   50                              	push eax
0x804af17:   52                              	push edx
0x804af18:   e8 5a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1d:   83 c4 10                        	add esp, 0x10
0x804af20:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804af27:   98                              	cwde 
0x804af28:   83 ec 04                        	sub esp, 4
0x804af2b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2e:   8d 93 1d d1 ff ff               	lea edx, [ebx - 0x2ee3]
0x804af34:   52                              	push edx
0x804af35:   50                              	push eax
0x804af36:   e8 3c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3b:   83 c4 10                        	add esp, 0x10
0x804af3e:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804af44:   89 c2                           	mov edx, eax
0x804af46:   83 ec 04                        	sub esp, 4
0x804af49:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4c:   8d 83 23 d1 ff ff               	lea eax, [ebx - 0x2edd]
0x804af52:   50                              	push eax
0x804af53:   52                              	push edx
0x804af54:   e8 1e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af59:   83 c4 10                        	add esp, 0x10
0x804af5c:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804af63:   0f b6 c0                        	movzx eax, al
0x804af66:   83 ec 04                        	sub esp, 4
0x804af69:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6c:   8d 93 29 d1 ff ff               	lea edx, [ebx - 0x2ed7]
0x804af72:   52                              	push edx
0x804af73:   50                              	push eax
0x804af74:   e8 fe e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af79:   83 c4 10                        	add esp, 0x10
0x804af7c:   0f b6 83 59 00 00 00            	movzx eax, byte ptr [ebx + 0x59]
0x804af83:   0f be c0                        	movsx eax, al
0x804af86:   83 ec 04                        	sub esp, 4
0x804af89:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af8c:   8d 93 2f d1 ff ff               	lea edx, [ebx - 0x2ed1]
0x804af92:   52                              	push edx
0x804af93:   50                              	push eax
0x804af94:   e8 de e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af99:   83 c4 10                        	add esp, 0x10
0x804af9c:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804afa2:   89 c2                           	mov edx, eax
0x804afa4:   83 ec 04                        	sub esp, 4
0x804afa7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afaa:   8d 83 35 d1 ff ff               	lea eax, [ebx - 0x2ecb]
0x804afb0:   50                              	push eax
0x804afb1:   52                              	push edx
0x804afb2:   e8 c0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb7:   83 c4 10                        	add esp, 0x10
0x804afba:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804afc0:   f7 d0                           	not eax
0x804afc2:   83 ec 08                        	sub esp, 8
0x804afc5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc8:   50                              	push eax
0x804afc9:   e8 98 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804afce:   83 c4 10                        	add esp, 0x10
0x804afd1:   b8 00 00 00 00                  	mov eax, 0
0x804afd6:   8d 65 f8                        	lea esp, [ebp - 8]
0x804afd9:   59                              	pop ecx
0x804afda:   5b                              	pop ebx
0x804afdb:   5d                              	pop ebp
0x804afdc:   8d 61 fc                        	lea esp, [ecx - 4]
0x804afdf:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804afe0 -- 0x804afe4
0x804afe0:   8b 04 24                        	mov eax, dword ptr [esp]
0x804afe3:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804afe4 -- 0x804afe8
0x804afe4:   8b 14 24                        	mov edx, dword ptr [esp]
0x804afe7:   c3                              	ret 
; data inside code section at 0x804afe8 -- 0x804aff0
0x804afe8:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804aff0 -- 0x804b04d
0x804aff0:   55                              	push ebp
0x804aff1:   57                              	push edi
0x804aff2:   56                              	push esi
0x804aff3:   53                              	push ebx
0x804aff4:   e8 97 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aff9:   81 c3 07 30 00 00               	add ebx, 0x3007
0x804afff:   83 ec 0c                        	sub esp, 0xc
0x804b002:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b006:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b00c:   e8 bb d2 ff ff                  	call 0x80482cc <_init>
0x804b011:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b017:   29 c6                           	sub esi, eax
0x804b019:   c1 fe 02                        	sar esi, 2
0x804b01c:   85 f6                           	test esi, esi
0x804b01e:   74 25                           	je 0x804b045 <__libc_csu_init+0x55>
0x804b020:   31 ff                           	xor edi, edi
0x804b022:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b028:   83 ec 04                        	sub esp, 4
0x804b02b:   55                              	push ebp
0x804b02c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b030:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b034:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b03b:   83 c7 01                        	add edi, 1
0x804b03e:   83 c4 10                        	add esp, 0x10
0x804b041:   39 fe                           	cmp esi, edi
0x804b043:   75 e3                           	jne 0x804b028 <__libc_csu_init+0x38>
0x804b045:   83 c4 0c                        	add esp, 0xc
0x804b048:   5b                              	pop ebx
0x804b049:   5e                              	pop esi
0x804b04a:   5f                              	pop edi
0x804b04b:   5d                              	pop ebp
0x804b04c:   c3                              	ret 
; data inside code section at 0x804b04d -- 0x804b050
0x804b04d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b050 -- 0x804b052
0x804b050:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b054 -- 0x804b068
0x804b054:   53                              	push ebx
0x804b055:   83 ec 08                        	sub esp, 8
0x804b058:   e8 33 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b05d:   81 c3 a3 2f 00 00               	add ebx, 0x2fa3
0x804b063:   83 c4 08                        	add esp, 8
0x804b066:   5b                              	pop ebx
0x804b067:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 6c b0 04 08  04 00 00 00 11 00 10 00   |....l...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b068:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b078:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b088:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b098:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0a8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0b8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0c8:   31 00 67 5f 32 35 00 67  5f 32 39 00 67 5f 34 32   |1.g_25.g_29.g_42|
0x804b0d8:   00 67 5f 34 37 00 67 5f  37 31 00 67 5f 38 36 00   |.g_47.g_71.g_86.|
0x804b0e8:   67 5f 38 38 00 67 5f 31  31 34 00 67 5f 31 31 35   |g_88.g_114.g_115|
0x804b0f8:   00 67 5f 31 34 35 00 67  5f 31 38 35 00 67 5f 31   |.g_145.g_185.g_1|
0x804b108:   38 36 00 67 5f 32 30 33  00 67 5f 32 30 35 00 67   |86.g_203.g_205.g|
0x804b118:   5f 32 34 38 00 67 5f 33  36 30 00 67 5f 34 36 30   |_248.g_360.g_460|
0x804b128:   00 67 5f 34 38 30 00 67  5f 35 30 31 00 67 5f 35   |.g_480.g_501.g_5|
0x804b138:   39 30 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |90.....?...~....|
0x804b148:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b158:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b168:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b178:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b188:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b198:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b1a8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b1a8:   01 1b 03 3b b8 02 00 00  56 00 00 00 48 d1 ff ff   |...;....V...H...|
0x804b1b8:   e8 02 00 00 88 d1 ff ff  0c 03 00 00 d8 d1 ff ff   |................|
0x804b1c8:   d4 02 00 00 ae d2 ff ff  20 03 00 00 be d2 ff ff   |........ .......|
0x804b1d8:   40 03 00 00 ec d2 ff ff  64 03 00 00 0a d3 ff ff   |@.......d.......|
0x804b1e8:   84 03 00 00 32 d3 ff ff  a4 03 00 00 5c d3 ff ff   |....2.......\...|
0x804b1f8:   c4 03 00 00 85 d3 ff ff  e4 03 00 00 c8 d3 ff ff   |................|
0x804b208:   04 04 00 00 09 d4 ff ff  24 04 00 00 61 d4 ff ff   |........$...a...|
0x804b218:   48 04 00 00 b3 d4 ff ff  6c 04 00 00 f0 d4 ff ff   |H.......l.......|
0x804b228:   8c 04 00 00 27 d5 ff ff  ac 04 00 00 46 d5 ff ff   |....'.......F...|
0x804b238:   cc 04 00 00 70 d5 ff ff  ec 04 00 00 9c d5 ff ff   |....p...........|
0x804b248:   0c 05 00 00 c7 d5 ff ff  2c 05 00 00 10 d6 ff ff   |........,.......|
0x804b258:   4c 05 00 00 57 d6 ff ff  6c 05 00 00 b1 d6 ff ff   |L...W...l.......|
0x804b268:   90 05 00 00 05 d7 ff ff  b4 05 00 00 44 d7 ff ff   |............D...|
0x804b278:   d4 05 00 00 7d d7 ff ff  f4 05 00 00 9f d7 ff ff   |....}...........|
0x804b288:   14 06 00 00 ed d7 ff ff  34 06 00 00 29 d8 ff ff   |........4...)...|
0x804b298:   54 06 00 00 b2 d8 ff ff  74 06 00 00 e4 d8 ff ff   |T.......t.......|
0x804b2a8:   94 06 00 00 14 d9 ff ff  b4 06 00 00 59 d9 ff ff   |............Y...|
0x804b2b8:   d4 06 00 00 98 d9 ff ff  f4 06 00 00 ca d9 ff ff   |................|
0x804b2c8:   14 07 00 00 f6 d9 ff ff  34 07 00 00 14 da ff ff   |........4.......|
0x804b2d8:   54 07 00 00 3c da ff ff  74 07 00 00 61 da ff ff   |T...<...t...a...|
0x804b2e8:   94 07 00 00 86 da ff ff  b4 07 00 00 bd da ff ff   |................|
0x804b2f8:   d4 07 00 00 f1 da ff ff  f4 07 00 00 43 db ff ff   |............C...|
0x804b308:   18 08 00 00 8f db ff ff  3c 08 00 00 c6 db ff ff   |........<.......|
0x804b318:   5c 08 00 00 f7 db ff ff  7c 08 00 00 16 dc ff ff   |\.......|.......|
0x804b328:   9c 08 00 00 40 dc ff ff  bc 08 00 00 68 dc ff ff   |....@.......h...|
0x804b338:   dc 08 00 00 91 dc ff ff  fc 08 00 00 cd dc ff ff   |................|
0x804b348:   1c 09 00 00 07 dd ff ff  3c 09 00 00 5a dd ff ff   |........<...Z...|
0x804b358:   60 09 00 00 a7 dd ff ff  84 09 00 00 df dd ff ff   |`...............|
0x804b368:   a4 09 00 00 11 de ff ff  c4 09 00 00 25 de ff ff   |............%...|
0x804b378:   e4 09 00 00 3c de ff ff  04 0a 00 00 51 de ff ff   |....<.......Q...|
0x804b388:   24 0a 00 00 67 de ff ff  44 0a 00 00 8e de ff ff   |$...g...D.......|
0x804b398:   64 0a 00 00 b3 de ff ff  84 0a 00 00 f2 de ff ff   |d...............|
0x804b3a8:   a4 0a 00 00 2b df ff ff  c4 0a 00 00 57 df ff ff   |....+.......W...|
0x804b3b8:   e4 0a 00 00 7d df ff ff  04 0b 00 00 bf df ff ff   |....}...........|
0x804b3c8:   24 0b 00 00 01 e0 ff ff  44 0b 00 00 43 e0 ff ff   |$.......D...C...|
0x804b3d8:   64 0b 00 00 b8 e0 ff ff  84 0b 00 00 15 e1 ff ff   |d...............|
0x804b3e8:   a4 0b 00 00 72 e1 ff ff  c4 0b 00 00 cf e1 ff ff   |....r...........|
0x804b3f8:   e4 0b 00 00 5f e2 ff ff  04 0c 00 00 c3 e2 ff ff   |...._...........|
0x804b408:   24 0c 00 00 33 e3 ff ff  44 0c 00 00 7a e3 ff ff   |$...3...D...z...|
0x804b418:   68 0c 00 00 cf e3 ff ff  88 0c 00 00 16 e4 ff ff   |h...............|
0x804b428:   ac 0c 00 00 7e e4 ff ff  d0 0c 00 00 ca e5 ff ff   |....~...........|
0x804b438:   00 0d 00 00 4e fb ff ff  30 0d 00 00 38 fe ff ff   |....N...0...8...|
0x804b448:   68 0d 00 00 3c fe ff ff  7c 0d 00 00 48 fe ff ff   |h...<...|...H...|
0x804b458:   90 0d 00 00 a8 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b464:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b474:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b484:   fc ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b494:   30 00 00 00 58 ce ff ff  40 00 00 00 00 0e 08 46   |0...X...@......F|
0x804b4a4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b4b4:   10 00 00 00 54 00 00 00  74 ce ff ff 08 00 00 00   |....T...t.......|
0x804b4c4:   00 00 00 00 1c 00 00 00  68 00 00 00 86 cf ff ff   |........h.......|
0x804b4d4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b4e4:   04 04 00 00 20 00 00 00  88 00 00 00 76 cf ff ff   |.... .......v...|
0x804b4f4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b504:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b514:   80 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b524:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b534:   7e cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |~...(....A....B.|
0x804b544:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b554:   86 cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b564:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b574:   90 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b584:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b594:   99 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b5a4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b5b4:   bc cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b5c4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b5d4:   dd cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b5e4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b5f4:   90 01 00 00 11 d0 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b604:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b614:   1c 00 00 00 b4 01 00 00  3f d0 ff ff 3d 00 00 00   |........?...=...|
0x804b624:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b634:   1c 00 00 00 d4 01 00 00  5c d0 ff ff 37 00 00 00   |........\...7...|
0x804b644:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b654:   1c 00 00 00 f4 01 00 00  73 d0 ff ff 1f 00 00 00   |........s.......|
0x804b664:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b674:   1c 00 00 00 14 02 00 00  72 d0 ff ff 2a 00 00 00   |........r...*...|
0x804b684:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b694:   1c 00 00 00 34 02 00 00  7c d0 ff ff 2c 00 00 00   |....4...|...,...|
0x804b6a4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b6b4:   1c 00 00 00 54 02 00 00  88 d0 ff ff 2b 00 00 00   |....T.......+...|
0x804b6c4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b6d4:   1c 00 00 00 74 02 00 00  93 d0 ff ff 49 00 00 00   |....t.......I...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b6f4:   1c 00 00 00 94 02 00 00  bc d0 ff ff 47 00 00 00   |............G...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b714:   20 00 00 00 b4 02 00 00  e3 d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b724:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b734:   c5 0c 04 04 20 00 00 00  d8 02 00 00 19 d1 ff ff   |.... ...........|
0x804b744:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b754:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b764:   49 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |I...?....A....B.|
0x804b774:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b784:   68 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |h...9....A....B.|
0x804b794:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b7a4:   81 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b7b4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b7c4:   83 d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b7d4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b7e4:   b1 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b7f4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b804:   cd d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b814:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b824:   36 d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |6...2....A....B.|
0x804b834:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b844:   48 d2 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |H...0....A....B.|
0x804b854:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b864:   58 d2 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |X...E....A....B.|
0x804b874:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b884:   7d d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |}...?....A....B.|
0x804b894:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b8a4:   9c d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8b4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b8c4:   ae d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b8d4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b8e4:   ba d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8f4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b904:   b8 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b914:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b924:   c0 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b934:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b944:   c5 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b954:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b964:   ca d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b974:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b984:   e1 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b994:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b9a4:   f5 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b9b4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b9c4:   60 05 00 00 23 d3 ff ff  4c 00 00 00 00 41 0e 08   |`...#...L....A..|
0x804b9d4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b9e4:   1c 00 00 00 84 05 00 00  4b d3 ff ff 37 00 00 00   |........K...7...|
0x804b9f4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba04:   1c 00 00 00 a4 05 00 00  62 d3 ff ff 31 00 00 00   |........b...1...|
0x804ba14:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba24:   1c 00 00 00 c4 05 00 00  73 d3 ff ff 1f 00 00 00   |........s.......|
0x804ba34:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba44:   1c 00 00 00 e4 05 00 00  72 d3 ff ff 2a 00 00 00   |........r...*...|
0x804ba54:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ba64:   1c 00 00 00 04 06 00 00  7c d3 ff ff 28 00 00 00   |........|...(...|
0x804ba74:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804ba84:   1c 00 00 00 24 06 00 00  84 d3 ff ff 29 00 00 00   |....$.......)...|
0x804ba94:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804baa4:   1c 00 00 00 44 06 00 00  8d d3 ff ff 3c 00 00 00   |....D.......<...|
0x804bab4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bac4:   1c 00 00 00 64 06 00 00  a9 d3 ff ff 3a 00 00 00   |....d.......:...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bae4:   20 00 00 00 84 06 00 00  c3 d3 ff ff 53 00 00 00   | ...........S...|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb04:   c5 0c 04 04 20 00 00 00  a8 06 00 00 f2 d3 ff ff   |.... ...........|
0x804bb14:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb24:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb34:   1b d4 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bb44:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bb54:   33 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |3...2....A....B.|
0x804bb64:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bb74:   45 d4 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804bb84:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bb94:   39 d4 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |9........A....B.|
0x804bba4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bbb4:   30 d4 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804bbc4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bbd4:   25 d4 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |%........A....B.|
0x804bbe4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bbf4:   1b d4 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc04:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bc14:   22 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |"...%....A....B.|
0x804bc24:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc34:   27 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |'...?....A....B.|
0x804bc44:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bc54:   46 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |F...9....A....B.|
0x804bc64:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bc74:   5f d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |_...,....A....B.|
0x804bc84:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bc94:   6b d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |k...&....A....B.|
0x804bca4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bcb4:   71 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |q...B....A....B.|
0x804bcc4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bcd4:   93 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bce4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bcf4:   b5 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd04:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bd14:   d7 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bd24:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd34:   2c d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |,...]....A....B.|
0x804bd44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bd54:   69 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |i...]....A....B.|
0x804bd64:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bd74:   a6 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd84:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bd94:   e3 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bda4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bdb4:   53 d6 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |S...d....A....B.|
0x804bdc4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bdd4:   97 d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bde4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bdf4:   e7 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804be04:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804be14:   b0 09 00 00 0a d7 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804be24:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be34:   d0 09 00 00 3f d7 ff ff  47 00 00 00 00 41 0e 08   |....?...G....A..|
0x804be44:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804be54:   20 00 00 00 f4 09 00 00  62 d7 ff ff 68 00 00 00   | .......b...h...|
0x804be64:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804be74:   0c 04 04 00 2c 00 00 00  18 0a 00 00 a6 d7 ff ff   |....,...........|
0x804be84:   4c 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |L....A....B..F..|
0x804be94:   86 04 83 05 03 3f 01 c3  41 c6 41 c7 41 c5 0c 04   |.....?..A.A.A...|
0x804bea4:   04 00 00 00 2c 00 00 00  48 0a 00 00 c2 d8 ff ff   |....,...H.......|
0x804beb4:   84 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bec4:   86 04 83 05 03 74 15 c3  41 c6 41 c7 41 c5 0c 04   |.....t..A.A.A...|
0x804bed4:   04 00 00 00 34 00 00 00  78 0a 00 00 16 ee ff ff   |....4...x.......|
0x804bee4:   ea 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bef4:   0f 03 75 78 06 10 03 02  75 7c 03 d5 02 c1 0c 01   |..ux....u|......|
0x804bf04:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bf14:   b0 0a 00 00 c8 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bf24:   10 00 00 00 c4 0a 00 00  b8 f0 ff ff 04 00 00 00   |................|
0x804bf34:   00 00 00 00 48 00 00 00  d8 0a 00 00 b0 f0 ff ff   |....H...........|
0x804bf44:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bf54:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bf64:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bf74:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bf84:   10 00 00 00 24 0b 00 00  c4 f0 ff ff 02 00 00 00   |....$...........|
0x804bf94:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 54 b0 04 08  19 00 00 00 0c df 04 08   |....T...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 46 00 f6 ff   |............F...|
0x804e028:   48 7b 00 00 60 c8 36 b0  01 00 00 00 09 53 c2 66   |H{..`.6......S.f|
0x804e038:   be 5a 78 2d f7 00 00 00  92 3b 27 f0 ff ff ff ff   |.Zx-.....;'.....|
0x804e048:   71 f6 b5 00 07 00 00 00  f0 f4 00 00 ff ff ff ff   |q...............|
0x804e058:   82 ff 00 00 f1 7d 5d b2  00                        |.....}]..       |
