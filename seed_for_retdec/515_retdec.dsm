;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:36:49
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 10 dc ff ff               	lea eax, [ebx - 0x23f0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 6f a7 04 08               	mov eax, 0x804a76f
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483a5:   3d 70 d0 04 08                  	cmp eax, 0x804d070
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 70 d0 04 08                  	push 0x804d070
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 70 d0 04 08                  	mov eax, 0x804d070
0x80483e5:   2d 70 d0 04 08                  	sub eax, 0x804d070
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 70 d0 04 08                  	push 0x804d070
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 45 27 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 31 27 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 30 dc ff ff               	lea edx, [eax - 0x23d0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 04 27 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 e6 26 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 be 26 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 94 26 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 6b 26 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 28 26 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 e6 25 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 8e 25 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 3d 25 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 00 25 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 c9 24 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 aa 24 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 80 24 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 54 24 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 29 24 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 e0 23 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 98 23 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 3e 23 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 eb 22 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 ac 22 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 76 22 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 54 22 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 06 22 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 ca 21 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 41 21 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 0f 21 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 df 20 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 9a 20 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 5b 20 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 29 20 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 fa 1f 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 dc 1f 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 b4 1f 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 8f 1f 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 6a 1f 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 33 1f 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 fe 1e 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 ac 1e 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 61 1e 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 2a 1e 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 f9 1d 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 da 1d 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 b0 1d 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 88 1d 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 5f 1d 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 23 1d 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 e8 1c 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 95 1c 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 49 1c 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 11 1c 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 e2 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 ce 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 b7 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 a2 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 8c 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 65 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 40 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 01 1b 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 c8 1a 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 9c 1a 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 76 1a 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 3c dd ff ff               	fld dword ptr [eax - 0x22c4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 3c dd ff ff               	fld dword ptr [eax - 0x22c4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 40 dd ff ff               	fld dword ptr [eax - 0x22c0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 34 1a 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 3c dd ff ff               	fld dword ptr [eax - 0x22c4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 3c dd ff ff               	fld dword ptr [eax - 0x22c4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 40 dd ff ff               	fld dword ptr [eax - 0x22c0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 f2 19 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 44 dd ff ff               	fld dword ptr [eax - 0x22bc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 48 dd ff ff               	fld dword ptr [eax - 0x22b8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 4c dd ff ff               	fld dword ptr [eax - 0x22b4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 b0 19 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 50 dd ff ff               	fld dword ptr [eax - 0x22b0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 54 dd ff ff               	fld dword ptr [eax - 0x22ac]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 58 dd ff ff               	fld dword ptr [eax - 0x22a8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 38 19 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 68 dd ff ff               	fld qword ptr [eax - 0x2298]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 db 18 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 68 dd ff ff               	fld qword ptr [eax - 0x2298]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 7e 18 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 70 dd ff ff               	fld qword ptr [eax - 0x2290]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 78 dd ff ff               	fld qword ptr [eax - 0x2288]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 80 dd ff ff               	fld qword ptr [eax - 0x2280]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 21 18 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 88 dd ff ff               	fld qword ptr [eax - 0x2278]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 90 dd ff ff               	fld qword ptr [eax - 0x2270]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 98 dd ff ff               	fld qword ptr [eax - 0x2268]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 91 17 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a0 dd ff ff               	fld dword ptr [eax - 0x2260]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 a4 dd ff ff               	fld dword ptr [eax - 0x225c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 2d 17 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 bc 16 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 79 16 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 40 dc ff ff               	lea eax, [ebx - 0x23c0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 64 dc ff ff               	lea eax, [ebx - 0x239c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804981b
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 73 15 00 00                  	call 0x804aba7 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x8049643:   8b 5d 24                        	mov ebx, dword ptr [ebp + 0x24]
0x8049646:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049649:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964c:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049682:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049685:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049689:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804968c:   89 c8                           	mov eax, ecx
0x804968e:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049692:   89 d8                           	mov eax, ebx
0x8049694:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049698:   89 f0                           	mov eax, esi
0x804969a:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804969e:   89 f8                           	mov eax, edi
0x80496a0:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496a4:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496a8:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496ac:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496b0:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496b3:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b7:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ba:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496be:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496c1:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496c5:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496c8:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496cc:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496cf:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d3:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496d6:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496da:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496dd:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e1:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496e7:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496f0:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496f6:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496f9:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496ff:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049703:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049709:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804970d:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049714:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049717:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804971d:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049720:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049726:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804972a:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049731:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049735:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x804973c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804973f:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049745:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049748:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x804974e:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049752:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x8049759:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804975c:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049762:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049766:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x804976d:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049770:   89 82 ac 04 00 00               	mov dword ptr [edx + 0x4ac], eax
0x8049776:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804977a:   88 82 4e 00 00 00               	mov byte ptr [edx + 0x4e], al
0x8049780:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049783:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049789:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804978c:   89 82 b0 04 00 00               	mov dword ptr [edx + 0x4b0], eax
0x8049792:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049795:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804979b:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804979f:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x80497a5:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497a9:   88 82 59 00 00 00               	mov byte ptr [edx + 0x59], al
0x80497af:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497b3:   88 82 5a 00 00 00               	mov byte ptr [edx + 0x5a], al
0x80497b9:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497bc:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497c2:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497c5:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497cb:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497ce:   89 82 b4 04 00 00               	mov dword ptr [edx + 0x4b4], eax
0x80497d4:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497d7:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497dd:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497e0:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497e6:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497ea:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x80497f0:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497f4:   88 82 6d 00 00 00               	mov byte ptr [edx + 0x6d], al
0x80497fa:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497fe:   88 82 6e 00 00 00               	mov byte ptr [edx + 0x6e], al
0x8049804:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049808:   88 82 6f 00 00 00               	mov byte ptr [edx + 0x6f], al
0x804980e:   b8 00 00 00 00                  	mov eax, 0
0x8049813:   83 c4 60                        	add esp, 0x60
0x8049816:   5b                              	pop ebx
0x8049817:   5e                              	pop esi
0x8049818:   5f                              	pop edi
0x8049819:   5d                              	pop ebp
0x804981a:   c3                              	ret 
; function: func_1 at 0x804981b -- 0x804a76f
0x804981b:   55                              	push ebp
0x804981c:   89 e5                           	mov ebp, esp
0x804981e:   57                              	push edi
0x804981f:   56                              	push esi
0x8049820:   53                              	push ebx
0x8049821:   81 ec 80 01 00 00               	sub esp, 0x180
0x8049827:   e8 77 13 00 00                  	call 0x804aba3 <__x86.get_pc_thunk.ax>
0x804982c:   05 d4 37 00 00                  	add eax, 0x37d4
0x8049831:   c7 45 90 25 f8 d7 40            	mov dword ptr [ebp - 0x70], 0x40d7f825
0x8049838:   c7 45 f0 ba 05 9d ce            	mov dword ptr [ebp - 0x10], 0xce9d05ba
0x804983f:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x8049846:   c6 45 eb 3a                     	mov byte ptr [ebp - 0x15], 0x3a
0x804984a:   66 c7 45 e8 00 00               	mov word ptr [ebp - 0x18], 0
0x8049850:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x8049857:   c7 45 e0 02 00 00 00            	mov dword ptr [ebp - 0x20], 2
0x804985e:   66 c7 45 8e f7 ff               	mov word ptr [ebp - 0x72], 0xfff7
0x8049864:   66 c7 45 de 1c b8               	mov word ptr [ebp - 0x22], 0xb81c
0x804986a:   c7 45 d8 e3 d0 28 08            	mov dword ptr [ebp - 0x28], 0x828d0e3
0x8049871:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x8049878:   66 c7 45 8c 01 00               	mov word ptr [ebp - 0x74], 1
0x804987e:   c7 45 d0 60 b2 f7 83            	mov dword ptr [ebp - 0x30], 0x83f7b260
0x8049885:   66 c7 45 ce 01 00               	mov word ptr [ebp - 0x32], 1
0x804988b:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x8049892:   c6 45 c7 01                     	mov byte ptr [ebp - 0x39], 1
0x8049896:   c7 45 c0 f8 ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffff8
0x804989d:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x80498a4:   c7 45 88 fe 30 7b 86            	mov dword ptr [ebp - 0x78], 0x867b30fe
0x80498ab:   c6 45 87 ff                     	mov byte ptr [ebp - 0x79], 0xff
0x80498af:   c6 45 86 01                     	mov byte ptr [ebp - 0x7a], 1
0x80498b3:   c6 45 85 69                     	mov byte ptr [ebp - 0x7b], 0x69
0x80498b7:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x80498be:   c7 85 7c ff ff ff f9 28 9e fa   	mov dword ptr [ebp - 0x84], 0xfa9e28f9
0x80498c8:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x80498d2:   c7 85 74 ff ff ff f8 9e a9 ac   	mov dword ptr [ebp - 0x8c], 0xaca99ef8
0x80498dc:   c7 85 70 ff ff ff 0a 7d 39 15   	mov dword ptr [ebp - 0x90], 0x15397d0a
0x80498e6:   c6 85 6f ff ff ff 22            	mov byte ptr [ebp - 0x91], 0x22
0x80498ed:   c6 85 6e ff ff ff fb            	mov byte ptr [ebp - 0x92], 0xfb
0x80498f4:   c6 85 6d ff ff ff ff            	mov byte ptr [ebp - 0x93], 0xff
0x80498fb:   c6 85 6c ff ff ff ff            	mov byte ptr [ebp - 0x94], 0xff
0x8049902:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049909:   c7 45 b4 d4 44 9c 91            	mov dword ptr [ebp - 0x4c], 0x919c44d4
0x8049910:   66 c7 45 b2 e3 9b               	mov word ptr [ebp - 0x4e], 0x9be3
0x8049916:   c7 85 68 ff ff ff 2b 3c ff 77   	mov dword ptr [ebp - 0x98], 0x77ff3c2b
0x8049920:   c7 85 64 ff ff ff 83 f0 80 12   	mov dword ptr [ebp - 0x9c], 0x1280f083
0x804992a:   66 c7 85 62 ff ff ff fd ff      	mov word ptr [ebp - 0x9e], 0xfffd
0x8049933:   c7 85 5c ff ff ff ee 39 3a 23   	mov dword ptr [ebp - 0xa4], 0x233a39ee
0x804993d:   66 c7 85 5a ff ff ff ff ff      	mov word ptr [ebp - 0xa6], 0xffff
0x8049946:   c7 85 54 ff ff ff 9a 60 62 ff   	mov dword ptr [ebp - 0xac], 0xff62609a
0x8049950:   c7 85 50 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffff8
0x804995a:   c6 85 4f ff ff ff f5            	mov byte ptr [ebp - 0xb1], 0xf5
0x8049961:   66 c7 85 4c ff ff ff 06 00      	mov word ptr [ebp - 0xb4], 6
0x804996a:   c7 85 48 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb8], 0
0x8049974:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804997b:   83 7d 90 f5                     	cmp dword ptr [ebp - 0x70], -0xb
0x804997f:   0f 85 3b 0c 00 00               	jne 0x804a5c0 <func_1+0xda5>
0x8049985:   66 c7 45 b0 03 88               	mov word ptr [ebp - 0x50], 0x8803
0x804998b:   c6 45 af cc                     	mov byte ptr [ebp - 0x51], 0xcc
0x804998f:   c7 45 a8 db 45 a8 5b            	mov dword ptr [ebp - 0x58], 0x5ba845db
0x8049996:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x804999d:   c7 85 44 ff ff ff a3 2b 32 06   	mov dword ptr [ebp - 0xbc], 0x6322ba3
0x80499a7:   c6 45 a3 27                     	mov byte ptr [ebp - 0x5d], 0x27
0x80499ab:   66 c7 85 42 ff ff ff 00 00      	mov word ptr [ebp - 0xbe], 0
0x80499b4:   c7 85 3c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xc4], 6
0x80499be:   c7 85 38 ff ff ff 43 4b 7f 44   	mov dword ptr [ebp - 0xc8], 0x447f4b43
0x80499c8:   c7 85 34 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xcc], 0xfffffff6
0x80499d2:   66 c7 85 32 ff ff ff dd 64      	mov word ptr [ebp - 0xce], 0x64dd
0x80499db:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x80499e5:   c7 85 28 ff ff ff 7b 9e b7 2c   	mov dword ptr [ebp - 0xd8], 0x2cb79e7b
0x80499ef:   c7 85 24 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xdc], 1
0x80499f9:   c6 85 23 ff ff ff 92            	mov byte ptr [ebp - 0xdd], 0x92
0x8049a00:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x8049a0a:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049a11:   e9 a2 05 00 00                  	jmp 0x8049fb8 <func_1+0x79d>
0x8049a16:   c6 45 a2 d0                     	mov byte ptr [ebp - 0x5e], 0xd0
0x8049a1a:   c7 45 9c f6 81 58 7b            	mov dword ptr [ebp - 0x64], 0x7b5881f6
0x8049a21:   66 c7 85 1a ff ff ff da 6b      	mov word ptr [ebp - 0xe6], 0x6bda
0x8049a2a:   0f be 45 a2                     	movsx eax, byte ptr [ebp - 0x5e]
0x8049a2e:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049a31:   0f 95 c0                        	setne al
0x8049a34:   0f b6 c0                        	movzx eax, al
0x8049a37:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049a3a:   66 c7 45 b0 02 3f               	mov word ptr [ebp - 0x50], 0x3f02
0x8049a40:   c7 45 ec 02 3f 00 00            	mov dword ptr [ebp - 0x14], 0x3f02
0x8049a47:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049a4a:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x8049a4d:   7d 11                           	jge 0x8049a60 <func_1+0x245>
0x8049a4f:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049a52:   98                              	cwde 
0x8049a53:   ba a9 e5 ff ff                  	mov edx, 0xffffe5a9
0x8049a58:   89 c1                           	mov ecx, eax
0x8049a5a:   d3 e2                           	shl edx, cl
0x8049a5c:   89 d0                           	mov eax, edx
0x8049a5e:   85 c0                           	test eax, eax
0x8049a60:   c6 45 eb 4a                     	mov byte ptr [ebp - 0x15], 0x4a
0x8049a64:   80 7d a2 1e                     	cmp byte ptr [ebp - 0x5e], 0x1e
0x8049a68:   0f 9e c0                        	setle al
0x8049a6b:   0f b6 d0                        	movzx edx, al
0x8049a6e:   0f be 45 a2                     	movsx eax, byte ptr [ebp - 0x5e]
0x8049a72:   39 c2                           	cmp edx, eax
0x8049a74:   0f 9c c0                        	setl al
0x8049a77:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x8049a7a:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x8049a7e:   74 07                           	je 0x8049a87 <func_1+0x26c>
0x8049a80:   b8 01 00 00 00                  	mov eax, 1
0x8049a85:   eb 05                           	jmp 0x8049a8c <func_1+0x271>
0x8049a87:   b8 00 00 00 00                  	mov eax, 0
0x8049a8c:   89 c2                           	mov edx, eax
0x8049a8e:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049a91:   01 d0                           	add eax, edx
0x8049a93:   0f be c0                        	movsx eax, al
0x8049a96:   c1 e0 02                        	shl eax, 2
0x8049a99:   85 c0                           	test eax, eax
0x8049a9b:   0f 84 42 02 00 00               	je 0x8049ce3 <func_1+0x4c8>
0x8049aa1:   c6 85 f5 fe ff ff cb            	mov byte ptr [ebp - 0x10b], 0xcb
0x8049aa8:   c7 85 f0 fe ff ff 71 ca 35 37   	mov dword ptr [ebp - 0x110], 0x3735ca71
0x8049ab2:   0f b6 9d f5 fe ff ff            	movzx ebx, byte ptr [ebp - 0x10b]
0x8049ab9:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049abc:   0f be 4d af                     	movsx ecx, byte ptr [ebp - 0x51]
0x8049ac0:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049ac4:   09 ca                           	or edx, ecx
0x8049ac6:   f7 d2                           	not edx
0x8049ac8:   89 d1                           	mov ecx, edx
0x8049aca:   ba 00 00 00 00                  	mov edx, 0
0x8049acf:   f7 f1                           	div ecx
0x8049ad1:   89 d0                           	mov eax, edx
0x8049ad3:   89 c2                           	mov edx, eax
0x8049ad5:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049ad8:   89 c1                           	mov ecx, eax
0x8049ada:   89 d0                           	mov eax, edx
0x8049adc:   ba 00 00 00 00                  	mov edx, 0
0x8049ae1:   66 f7 f1                        	div cx
0x8049ae4:   89 d0                           	mov eax, edx
0x8049ae6:   0f b7 c0                        	movzx eax, ax
0x8049ae9:   f7 d0                           	not eax
0x8049aeb:   89 c2                           	mov edx, eax
0x8049aed:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049af1:   39 c2                           	cmp edx, eax
0x8049af3:   75 0d                           	jne 0x8049b02 <func_1+0x2e7>
0x8049af5:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049af9:   74 07                           	je 0x8049b02 <func_1+0x2e7>
0x8049afb:   b8 01 00 00 00                  	mov eax, 1
0x8049b00:   eb 05                           	jmp 0x8049b07 <func_1+0x2ec>
0x8049b02:   b8 00 00 00 00                  	mov eax, 0
0x8049b07:   83 f0 37                        	xor eax, 0x37
0x8049b0a:   0f be d0                        	movsx edx, al
0x8049b0d:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049b11:   0f be c0                        	movsx eax, al
0x8049b14:   89 c1                           	mov ecx, eax
0x8049b16:   d3 fa                           	sar edx, cl
0x8049b18:   89 d0                           	mov eax, edx
0x8049b1a:   39 c3                           	cmp ebx, eax
0x8049b1c:   c7 85 ec fe ff ff 7a d6 e1 46   	mov dword ptr [ebp - 0x114], 0x46e1d67a
0x8049b26:   c7 85 e8 fe ff ff 67 6a 92 f4   	mov dword ptr [ebp - 0x118], 0xf4926a67
0x8049b30:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x8049b34:   8b 95 ec fe ff ff               	mov edx, dword ptr [ebp - 0x114]
0x8049b3a:   0f b7 d2                        	movzx edx, dx
0x8049b3d:   f7 da                           	neg edx
0x8049b3f:   83 fa fc                        	cmp edx, -4
0x8049b42:   74 0e                           	je 0x8049b52 <func_1+0x337>
0x8049b44:   66 83 7d b0 00                  	cmp word ptr [ebp - 0x50], 0
0x8049b49:   74 07                           	je 0x8049b52 <func_1+0x337>
0x8049b4b:   ba 01 00 00 00                  	mov edx, 1
0x8049b50:   eb 05                           	jmp 0x8049b57 <func_1+0x33c>
0x8049b52:   ba 00 00 00 00                  	mov edx, 0
0x8049b57:   21 95 e8 fe ff ff               	and dword ptr [ebp - 0x118], edx
0x8049b5d:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049b61:   89 55 b4                        	mov dword ptr [ebp - 0x4c], edx
0x8049b64:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8049b67:   89 55 9c                        	mov dword ptr [ebp - 0x64], edx
0x8049b6a:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049b6d:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049b70:   0f bf d0                        	movsx edx, ax
0x8049b73:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049b77:   98                              	cwde 
0x8049b78:   0f af c2                        	imul eax, edx
0x8049b7b:   85 c0                           	test eax, eax
0x8049b7d:   74 0f                           	je 0x8049b8e <func_1+0x373>
0x8049b7f:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x8049b83:   0f 84 13 01 00 00               	je 0x8049c9c <func_1+0x481>
0x8049b89:   e9 34 04 00 00                  	jmp 0x8049fc2 <func_1+0x7a7>
0x8049b8e:   c7 85 e4 fe ff ff de 0c b8 74   	mov dword ptr [ebp - 0x11c], 0x74b80cde
0x8049b98:   c7 85 f0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x110], 1
0x8049ba2:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x8049ba9:   0f b6 95 6d ff ff ff            	movzx edx, byte ptr [ebp - 0x93]
0x8049bb0:   0f b6 8d 6e ff ff ff            	movzx ecx, byte ptr [ebp - 0x92]
0x8049bb7:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x8049bbe:   0f b6 75 85                     	movzx esi, byte ptr [ebp - 0x7b]
0x8049bc2:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049bc8:   0f b6 7d 86                     	movzx edi, byte ptr [ebp - 0x7a]
0x8049bcc:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x8049bd2:   0f be 75 87                     	movsx esi, byte ptr [ebp - 0x79]
0x8049bd6:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x8049bdc:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049be0:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x8049be6:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x8049bea:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x8049bf0:   0f bf 7d 8c                     	movsx edi, word ptr [ebp - 0x74]
0x8049bf4:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x8049bfa:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x8049bfe:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x8049c04:   0f bf 7d 8e                     	movsx edi, word ptr [ebp - 0x72]
0x8049c08:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049c0e:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x8049c12:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x8049c16:   50                              	push eax
0x8049c17:   52                              	push edx
0x8049c18:   51                              	push ecx
0x8049c19:   53                              	push ebx
0x8049c1a:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049c20:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049c26:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049c2c:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049c32:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049c35:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049c3b:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049c41:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049c47:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049c4a:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049c4d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049c50:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049c56:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c59:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049c5f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c62:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049c68:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c6b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c6e:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049c74:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049c7a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c7d:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c80:   57                              	push edi
0x8049c81:   56                              	push esi
0x8049c82:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c85:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c88:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049c8b:   e8 96 f9 ff ff                  	call 0x8049626 <set_var>
0x8049c90:   83 c4 7c                        	add esp, 0x7c
0x8049c93:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049c97:   e9 cb 0a 00 00                  	jmp 0x804a767 <func_1+0xf4c>
0x8049c9c:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049c9f:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049ca2:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049ca6:   0f 85 01 03 00 00               	jne 0x8049fad <func_1+0x792>
0x8049cac:   c6 45 a2 fd                     	mov byte ptr [ebp - 0x5e], 0xfd
0x8049cb0:   eb 1d                           	jmp 0x8049ccf <func_1+0x4b4>
0x8049cb2:   c7 85 e0 fe ff ff 41 a2 6c 86   	mov dword ptr [ebp - 0x120], 0x866ca241
0x8049cbc:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049cbf:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049cc5:   0f b6 45 a2                     	movzx eax, byte ptr [ebp - 0x5e]
0x8049cc9:   83 c0 04                        	add eax, 4
0x8049ccc:   88 45 a2                        	mov byte ptr [ebp - 0x5e], al
0x8049ccf:   80 7d a2 01                     	cmp byte ptr [ebp - 0x5e], 1
0x8049cd3:   74 dd                           	je 0x8049cb2 <func_1+0x497>
0x8049cd5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049cd8:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x8049cde:   e9 d1 02 00 00                  	jmp 0x8049fb4 <func_1+0x799>
0x8049ce3:   66 c7 85 18 ff ff ff 06 00      	mov word ptr [ebp - 0xe8], 6
0x8049cec:   c7 45 98 04 b3 08 24            	mov dword ptr [ebp - 0x68], 0x2408b304
0x8049cf3:   c7 45 94 30 2d 0e 3b            	mov dword ptr [ebp - 0x6c], 0x3b0e2d30
0x8049cfa:   c6 45 af 00                     	mov byte ptr [ebp - 0x51], 0
0x8049cfe:   e9 ad 00 00 00                  	jmp 0x8049db0 <func_1+0x595>
0x8049d03:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x8049d07:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049d0a:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049d0e:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049d12:   89 c2                           	mov edx, eax
0x8049d14:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049d18:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049d1b:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049d1e:   01 d0                           	add eax, edx
0x8049d20:   83 c0 1c                        	add eax, 0x1c
0x8049d23:   0f be c0                        	movsx eax, al
0x8049d26:   0f b7 95 18 ff ff ff            	movzx edx, word ptr [ebp - 0xe8]
0x8049d2d:   0f be da                        	movsx ebx, dl
0x8049d30:   99                              	cdq 
0x8049d31:   f7 fb                           	idiv ebx
0x8049d33:   89 c2                           	mov edx, eax
0x8049d35:   0f bf 45 b0                     	movsx eax, word ptr [ebp - 0x50]
0x8049d39:   39 c2                           	cmp edx, eax
0x8049d3b:   0f 94 c0                        	sete al
0x8049d3e:   0f b6 c0                        	movzx eax, al
0x8049d41:   39 c1                           	cmp ecx, eax
0x8049d43:   0f 9e c0                        	setle al
0x8049d46:   0f b6 c0                        	movzx eax, al
0x8049d49:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x8049d4c:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049d50:   7f 11                           	jg 0x8049d63 <func_1+0x548>
0x8049d52:   66 83 bd 18 ff ff ff 00         	cmp word ptr [ebp - 0xe8], 0
0x8049d5a:   74 07                           	je 0x8049d63 <func_1+0x548>
0x8049d5c:   b8 01 00 00 00                  	mov eax, 1
0x8049d61:   eb 05                           	jmp 0x8049d68 <func_1+0x54d>
0x8049d63:   b8 00 00 00 00                  	mov eax, 0
0x8049d68:   83 f8 02                        	cmp eax, 2
0x8049d6b:   0f 95 c0                        	setne al
0x8049d6e:   0f b6 c0                        	movzx eax, al
0x8049d71:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049d74:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049d77:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049d7b:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049d7e:   89 c1                           	mov ecx, eax
0x8049d80:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d83:   31 c8                           	xor eax, ecx
0x8049d85:   98                              	cwde 
0x8049d86:   89 c1                           	mov ecx, eax
0x8049d88:   d3 e2                           	shl edx, cl
0x8049d8a:   89 d0                           	mov eax, edx
0x8049d8c:   85 c0                           	test eax, eax
0x8049d8e:   75 07                           	jne 0x8049d97 <func_1+0x57c>
0x8049d90:   66 83 7d e8 00                  	cmp word ptr [ebp - 0x18], 0
0x8049d95:   74 07                           	je 0x8049d9e <func_1+0x583>
0x8049d97:   b8 01 00 00 00                  	mov eax, 1
0x8049d9c:   eb 05                           	jmp 0x8049da3 <func_1+0x588>
0x8049d9e:   b8 00 00 00 00                  	mov eax, 0
0x8049da3:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049da6:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049daa:   83 c0 01                        	add eax, 1
0x8049dad:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x8049db0:   80 7d af 18                     	cmp byte ptr [ebp - 0x51], 0x18
0x8049db4:   0f 8e 49 ff ff ff               	jle 0x8049d03 <func_1+0x4e8>
0x8049dba:   66 c7 45 b2 00 00               	mov word ptr [ebp - 0x4e], 0
0x8049dc0:   e9 db 01 00 00                  	jmp 0x8049fa0 <func_1+0x785>
0x8049dc5:   c7 85 14 ff ff ff fe 53 c5 dc   	mov dword ptr [ebp - 0xec], 0xdcc553fe
0x8049dcf:   c7 85 10 ff ff ff 76 48 b4 ca   	mov dword ptr [ebp - 0xf0], 0xcab44876
0x8049dd9:   c7 85 0c ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xf4], 8
0x8049de3:   c7 85 08 ff ff ff ed 7d 43 c3   	mov dword ptr [ebp - 0xf8], 0xc3437ded
0x8049ded:   c6 85 07 ff ff ff 42            	mov byte ptr [ebp - 0xf9], 0x42
0x8049df4:   66 83 bd 18 ff ff ff 00         	cmp word ptr [ebp - 0xe8], 0
0x8049dfc:   0f 85 ae 01 00 00               	jne 0x8049fb0 <func_1+0x795>
0x8049e02:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049e05:   66 c1 f8 05                     	sar ax, 5
0x8049e09:   66 85 c0                        	test ax, ax
0x8049e0c:   74 1a                           	je 0x8049e28 <func_1+0x60d>
0x8049e0e:   c7 85 f8 fe ff ff 39 a8 4c 43   	mov dword ptr [ebp - 0x108], 0x434ca839
0x8049e18:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e1c:   83 e8 01                        	sub eax, 1
0x8049e1f:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049e23:   e9 ed 00 00 00                  	jmp 0x8049f15 <func_1+0x6fa>
0x8049e28:   c6 85 06 ff ff ff 05            	mov byte ptr [ebp - 0xfa], 5
0x8049e2f:   c6 85 05 ff ff ff ba            	mov byte ptr [ebp - 0xfb], 0xba
0x8049e36:   c7 85 00 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffffe
0x8049e40:   c7 85 fc fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x104], 2
0x8049e4a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049e4d:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049e50:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049e53:   66 83 7d e8 01                  	cmp word ptr [ebp - 0x18], 1
0x8049e58:   0f 9e c2                        	setle dl
0x8049e5b:   0f b6 ca                        	movzx ecx, dl
0x8049e5e:   0f be 95 06 ff ff ff            	movsx edx, byte ptr [ebp - 0xfa]
0x8049e65:   01 ca                           	add edx, ecx
0x8049e67:   39 d0                           	cmp eax, edx
0x8049e69:   0f 95 c0                        	setne al
0x8049e6c:   0f b6 d0                        	movzx edx, al
0x8049e6f:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e72:   0f b6 c0                        	movzx eax, al
0x8049e75:   01 d0                           	add eax, edx
0x8049e77:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049e7a:   0f b6 95 05 ff ff ff            	movzx edx, byte ptr [ebp - 0xfb]
0x8049e81:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e84:   0f b6 c0                        	movzx eax, al
0x8049e87:   0f af c2                        	imul eax, edx
0x8049e8a:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049e90:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049e94:   0f b6 c0                        	movzx eax, al
0x8049e97:   ba d7 00 00 00                  	mov edx, 0xd7
0x8049e9c:   89 c1                           	mov ecx, eax
0x8049e9e:   d3 e2                           	shl edx, cl
0x8049ea0:   89 d0                           	mov eax, edx
0x8049ea2:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x8049ea8:   b8 00 00 00 00                  	mov eax, 0
0x8049ead:   31 85 fc fe ff ff               	xor dword ptr [ebp - 0x104], eax
0x8049eb3:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049eb8:   0f 95 c0                        	setne al
0x8049ebb:   0f b6 d0                        	movzx edx, al
0x8049ebe:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049ec1:   0f be c0                        	movsx eax, al
0x8049ec4:   89 c1                           	mov ecx, eax
0x8049ec6:   d3 e2                           	shl edx, cl
0x8049ec8:   89 d0                           	mov eax, edx
0x8049eca:   3d ff 00 00 00                  	cmp eax, 0xff
0x8049ecf:   0f 94 c0                        	sete al
0x8049ed2:   0f b6 c0                        	movzx eax, al
0x8049ed5:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049edb:   c6 45 eb 9e                     	mov byte ptr [ebp - 0x15], 0x9e
0x8049edf:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ee2:   ba d6 ff ff ff                  	mov edx, 0xffffffd6
0x8049ee7:   0f af c2                        	imul eax, edx
0x8049eea:   0f be c0                        	movsx eax, al
0x8049eed:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8049ef0:   0f be ca                        	movsx ecx, dl
0x8049ef3:   99                              	cdq 
0x8049ef4:   f7 f9                           	idiv ecx
0x8049ef6:   89 d0                           	mov eax, edx
0x8049ef8:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049efb:   0f b7 85 18 ff ff ff            	movzx eax, word ptr [ebp - 0xe8]
0x8049f02:   0f b6 c0                        	movzx eax, al
0x8049f05:   83 c0 0a                        	add eax, 0xa
0x8049f08:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049f0b:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049f0f:   0f 85 9e 00 00 00               	jne 0x8049fb3 <func_1+0x798>
0x8049f15:   0f b6 45 a2                     	movzx eax, byte ptr [ebp - 0x5e]
0x8049f19:   88 85 07 ff ff ff               	mov byte ptr [ebp - 0xf9], al
0x8049f1f:   c7 45 94 16 00 00 00            	mov dword ptr [ebp - 0x6c], 0x16
0x8049f26:   eb 67                           	jmp 0x8049f8f <func_1+0x774>
0x8049f28:   66 c7 85 f6 fe ff ff fc ff      	mov word ptr [ebp - 0x10a], 0xfffc
0x8049f31:   c7 45 a8 0d 79 24 28            	mov dword ptr [ebp - 0x58], 0x2824790d
0x8049f38:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049f3c:   75 23                           	jne 0x8049f61 <func_1+0x746>
0x8049f3e:   66 83 bd f6 fe ff ff fd         	cmp word ptr [ebp - 0x10a], -3
0x8049f46:   7c 07                           	jl 0x8049f4f <func_1+0x734>
0x8049f48:   b8 00 00 00 00                  	mov eax, 0
0x8049f4d:   eb 05                           	jmp 0x8049f54 <func_1+0x739>
0x8049f4f:   b8 ff 00 00 00                  	mov eax, 0xff
0x8049f54:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x8049f58:   99                              	cdq 
0x8049f59:   f7 f9                           	idiv ecx
0x8049f5b:   89 d0                           	mov eax, edx
0x8049f5d:   85 c0                           	test eax, eax
0x8049f5f:   74 07                           	je 0x8049f68 <func_1+0x74d>
0x8049f61:   b8 01 00 00 00                  	mov eax, 1
0x8049f66:   eb 05                           	jmp 0x8049f6d <func_1+0x752>
0x8049f68:   b8 00 00 00 00                  	mov eax, 0
0x8049f6d:   83 f0 01                        	xor eax, 1
0x8049f70:   89 c2                           	mov edx, eax
0x8049f72:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f75:   89 c1                           	mov ecx, eax
0x8049f77:   89 d0                           	mov eax, edx
0x8049f79:   ba 00 00 00 00                  	mov edx, 0
0x8049f7e:   66 f7 f1                        	div cx
0x8049f81:   0f b7 c0                        	movzx eax, ax
0x8049f84:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049f87:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x8049f8b:   83 45 94 03                     	add dword ptr [ebp - 0x6c], 3
0x8049f8f:   83 7d 94 36                     	cmp dword ptr [ebp - 0x6c], 0x36
0x8049f93:   76 93                           	jbe 0x8049f28 <func_1+0x70d>
0x8049f95:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049f99:   83 c0 01                        	add eax, 1
0x8049f9c:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x8049fa0:   66 83 7d b2 2c                  	cmp word ptr [ebp - 0x4e], 0x2c
0x8049fa5:   0f 86 1a fe ff ff               	jbe 0x8049dc5 <func_1+0x5aa>
0x8049fab:   eb 07                           	jmp 0x8049fb4 <func_1+0x799>
0x8049fad:   90                              	nop 
0x8049fae:   eb 04                           	jmp 0x8049fb4 <func_1+0x799>
0x8049fb0:   90                              	nop 
0x8049fb1:   eb 01                           	jmp 0x8049fb4 <func_1+0x799>
0x8049fb3:   90                              	nop 
0x8049fb4:   83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x8049fb8:   83 7d f0 f5                     	cmp dword ptr [ebp - 0x10], -0xb
0x8049fbc:   0f 8c 54 fa ff ff               	jl 0x8049a16 <func_1+0x1fb>
0x8049fc2:   66 c7 45 e8 f5 ff               	mov word ptr [ebp - 0x18], 0xfff5
0x8049fc8:   e9 89 05 00 00                  	jmp 0x804a556 <func_1+0xd3b>
0x8049fcd:   c7 85 dc fe ff ff c6 02 b9 b7   	mov dword ptr [ebp - 0x124], 0xb7b902c6
0x8049fd7:   c7 85 d8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x128], 0xffffffff
0x8049fe1:   66 c7 85 d6 fe ff ff c8 35      	mov word ptr [ebp - 0x12a], 0x35c8
0x8049fea:   c7 85 d0 fe ff ff a1 85 a6 a8   	mov dword ptr [ebp - 0x130], 0xa8a685a1
0x8049ff4:   c6 85 cf fe ff ff f8            	mov byte ptr [ebp - 0x131], 0xf8
0x8049ffb:   c6 85 ce fe ff ff f7            	mov byte ptr [ebp - 0x132], 0xf7
0x804a002:   c7 85 c8 fe ff ff 56 f6 36 90   	mov dword ptr [ebp - 0x138], 0x9036f656
0x804a00c:   83 bd dc fe ff ff 00            	cmp dword ptr [ebp - 0x124], 0
0x804a013:   0f 84 15 02 00 00               	je 0x804a22e <func_1+0xa13>
0x804a019:   c7 85 a4 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffffc
0x804a023:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a029:   0f b7 d0                        	movzx edx, ax
0x804a02c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a02f:   83 c0 0a                        	add eax, 0xa
0x804a032:   0f b7 c0                        	movzx eax, ax
0x804a035:   89 c1                           	mov ecx, eax
0x804a037:   d3 e2                           	shl edx, cl
0x804a039:   89 d0                           	mov eax, edx
0x804a03b:   89 c2                           	mov edx, eax
0x804a03d:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a040:   89 c1                           	mov ecx, eax
0x804a042:   89 d0                           	mov eax, edx
0x804a044:   ba 00 00 00 00                  	mov edx, 0
0x804a049:   66 f7 f1                        	div cx
0x804a04c:   89 d0                           	mov eax, edx
0x804a04e:   0f b7 c0                        	movzx eax, ax
0x804a051:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a054:   0f 9d c0                        	setge al
0x804a057:   0f b6 d0                        	movzx edx, al
0x804a05a:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a060:   0f b6 c0                        	movzx eax, al
0x804a063:   89 c1                           	mov ecx, eax
0x804a065:   d3 e2                           	shl edx, cl
0x804a067:   89 d0                           	mov eax, edx
0x804a069:   39 85 dc fe ff ff               	cmp dword ptr [ebp - 0x124], eax
0x804a06f:   0f 94 c0                        	sete al
0x804a072:   0f b6 d0                        	movzx edx, al
0x804a075:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a07b:   0f be c0                        	movsx eax, al
0x804a07e:   0f af c2                        	imul eax, edx
0x804a081:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x804a084:   0b 85 a4 fe ff ff               	or eax, dword ptr [ebp - 0x15c]
0x804a08a:   89 c2                           	mov edx, eax
0x804a08c:   0f bf 45 b0                     	movsx eax, word ptr [ebp - 0x50]
0x804a090:   39 c2                           	cmp edx, eax
0x804a092:   0f 94 c0                        	sete al
0x804a095:   0f b6 c0                        	movzx eax, al
0x804a098:   39 85 d8 fe ff ff               	cmp dword ptr [ebp - 0x128], eax
0x804a09e:   0f 95 c0                        	setne al
0x804a0a1:   0f b6 c0                        	movzx eax, al
0x804a0a4:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a0a7:   80 6d a3 01                     	sub byte ptr [ebp - 0x5d], 1
0x804a0ab:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a0ae:   66 21 45 ce                     	and word ptr [ebp - 0x32], ax
0x804a0b2:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a0b8:   66 3d 56 13                     	cmp ax, 0x1356
0x804a0bc:   75 10                           	jne 0x804a0ce <func_1+0x8b3>
0x804a0be:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a0c5:   74 07                           	je 0x804a0ce <func_1+0x8b3>
0x804a0c7:   b8 01 00 00 00                  	mov eax, 1
0x804a0cc:   eb 05                           	jmp 0x804a0d3 <func_1+0x8b8>
0x804a0ce:   b8 00 00 00 00                  	mov eax, 0
0x804a0d3:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a0d6:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a0d9:   8d 50 01                        	lea edx, [eax + 1]
0x804a0dc:   89 55 d0                        	mov dword ptr [ebp - 0x30], edx
0x804a0df:   83 f8 f7                        	cmp eax, -9
0x804a0e2:   0f 95 c0                        	setne al
0x804a0e5:   0f b6 c0                        	movzx eax, al
0x804a0e8:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a0ee:   7d 0d                           	jge 0x804a0fd <func_1+0x8e2>
0x804a0f0:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a0f4:   74 07                           	je 0x804a0fd <func_1+0x8e2>
0x804a0f6:   b8 01 00 00 00                  	mov eax, 1
0x804a0fb:   eb 05                           	jmp 0x804a102 <func_1+0x8e7>
0x804a0fd:   b8 00 00 00 00                  	mov eax, 0
0x804a102:   89 c1                           	mov ecx, eax
0x804a104:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a10a:   89 c2                           	mov edx, eax
0x804a10c:   0f b6 c1                        	movzx eax, cl
0x804a10f:   f6 f2                           	div dl
0x804a111:   0f b6 c4                        	movzx eax, ah
0x804a114:   84 c0                           	test al, al
0x804a116:   0f 84 b8 00 00 00               	je 0x804a1d4 <func_1+0x9b9>
0x804a11c:   66 c7 85 9e fe ff ff e0 d7      	mov word ptr [ebp - 0x162], 0xd7e0
0x804a125:   66 c7 85 9c fe ff ff 00 00      	mov word ptr [ebp - 0x164], 0
0x804a12e:   66 83 bd d6 fe ff ff 00         	cmp word ptr [ebp - 0x12a], 0
0x804a136:   75 35                           	jne 0x804a16d <func_1+0x952>
0x804a138:   8b 95 dc fe ff ff               	mov edx, dword ptr [ebp - 0x124]
0x804a13e:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a144:   31 d0                           	xor eax, edx
0x804a146:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a14c:   81 bd a4 fe ff ff c0 c8 00 00   	cmp dword ptr [ebp - 0x15c], 0xc8c0
0x804a156:   0f 94 c0                        	sete al
0x804a159:   0f b6 c0                        	movzx eax, al
0x804a15c:   f7 d8                           	neg eax
0x804a15e:   0f b7 d0                        	movzx edx, ax
0x804a161:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a164:   29 c2                           	sub edx, eax
0x804a166:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a169:   39 c2                           	cmp edx, eax
0x804a16b:   74 07                           	je 0x804a174 <func_1+0x959>
0x804a16d:   ba 01 00 00 00                  	mov edx, 1
0x804a172:   eb 05                           	jmp 0x804a179 <func_1+0x95e>
0x804a174:   ba 00 00 00 00                  	mov edx, 0
0x804a179:   0f b7 85 9e fe ff ff            	movzx eax, word ptr [ebp - 0x162]
0x804a180:   39 c2                           	cmp edx, eax
0x804a182:   0f 9f c0                        	setg al
0x804a185:   0f b6 c0                        	movzx eax, al
0x804a188:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804a18b:   0f 94 c0                        	sete al
0x804a18e:   0f b6 c0                        	movzx eax, al
0x804a191:   89 c2                           	mov edx, eax
0x804a193:   0f b7 85 9c fe ff ff            	movzx eax, word ptr [ebp - 0x164]
0x804a19a:   09 d0                           	or eax, edx
0x804a19c:   66 89 85 9c fe ff ff            	mov word ptr [ebp - 0x164], ax
0x804a1a3:   0f b7 85 9c fe ff ff            	movzx eax, word ptr [ebp - 0x164]
0x804a1aa:   f7 d8                           	neg eax
0x804a1ac:   66 89 85 42 ff ff ff            	mov word ptr [ebp - 0xbe], ax
0x804a1b3:   0f be 85 cf fe ff ff            	movsx eax, byte ptr [ebp - 0x131]
0x804a1ba:   39 85 a4 fe ff ff               	cmp dword ptr [ebp - 0x15c], eax
0x804a1c0:   0f 9d c0                        	setge al
0x804a1c3:   0f b6 c0                        	movzx eax, al
0x804a1c6:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a1c9:   0f 95 c0                        	setne al
0x804a1cc:   0f b6 c0                        	movzx eax, al
0x804a1cf:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804a1d2:   eb 46                           	jmp 0x804a21a <func_1+0x9ff>
0x804a1d4:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a1db:   eb 37                           	jmp 0x804a214 <func_1+0x9f9>
0x804a1dd:   66 c7 85 a2 fe ff ff 01 00      	mov word ptr [ebp - 0x15e], 1
0x804a1e6:   66 c7 85 a0 fe ff ff d8 95      	mov word ptr [ebp - 0x160], 0x95d8
0x804a1ef:   66 c7 85 a2 fe ff ff c4 49      	mov word ptr [ebp - 0x15e], 0x49c4
0x804a1f8:   0f b7 85 a0 fe ff ff            	movzx eax, word ptr [ebp - 0x160]
0x804a1ff:   83 c0 01                        	add eax, 1
0x804a202:   66 89 85 a0 fe ff ff            	mov word ptr [ebp - 0x160], ax
0x804a209:   80 bd ce fe ff ff 00            	cmp byte ptr [ebp - 0x132], 0
0x804a210:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x804a214:   83 7d e0 f6                     	cmp dword ptr [ebp - 0x20], -0xa
0x804a218:   75 c3                           	jne 0x804a1dd <func_1+0x9c2>
0x804a21a:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a220:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a223:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a226:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a229:   e9 1d 03 00 00                  	jmp 0x804a54b <func_1+0xd30>
0x804a22e:   66 c7 85 c6 fe ff ff 00 00      	mov word ptr [ebp - 0x13a], 0
0x804a237:   c7 85 c0 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x140], 0xfffffff8
0x804a241:   c7 85 bc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x144], 1
0x804a24b:   c7 85 b8 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x148], 5
0x804a255:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a259:   0f 85 04 03 00 00               	jne 0x804a563 <func_1+0xd48>
0x804a25f:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804a266:   f7 d8                           	neg eax
0x804a268:   66 39 45 ce                     	cmp word ptr [ebp - 0x32], ax
0x804a26c:   0f 9e c0                        	setle al
0x804a26f:   0f b6 d0                        	movzx edx, al
0x804a272:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a275:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a278:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804a27c:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a283:   0f b6 c0                        	movzx eax, al
0x804a286:   01 c8                           	add eax, ecx
0x804a288:   39 c2                           	cmp edx, eax
0x804a28a:   7e 0d                           	jle 0x804a299 <func_1+0xa7e>
0x804a28c:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a290:   74 07                           	je 0x804a299 <func_1+0xa7e>
0x804a292:   b8 01 00 00 00                  	mov eax, 1
0x804a297:   eb 05                           	jmp 0x804a29e <func_1+0xa83>
0x804a299:   b8 00 00 00 00                  	mov eax, 0
0x804a29e:   39 85 c8 fe ff ff               	cmp dword ptr [ebp - 0x138], eax
0x804a2a4:   0f 95 c0                        	setne al
0x804a2a7:   0f b6 c0                        	movzx eax, al
0x804a2aa:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a2b0:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a2b4:   0f 84 77 02 00 00               	je 0x804a531 <func_1+0xd16>
0x804a2ba:   66 c7 85 b4 fe ff ff ad 0e      	mov word ptr [ebp - 0x14c], 0xead
0x804a2c3:   66 c7 85 b2 fe ff ff 9c 63      	mov word ptr [ebp - 0x14e], 0x639c
0x804a2cc:   c7 85 ac fe ff ff 09 a6 c8 b0   	mov dword ptr [ebp - 0x154], 0xb0c8a609
0x804a2d6:   66 c7 45 8c 29 51               	mov word ptr [ebp - 0x74], 0x5129
0x804a2dc:   80 7d a3 00                     	cmp byte ptr [ebp - 0x5d], 0
0x804a2e0:   75 0b                           	jne 0x804a2ed <func_1+0xad2>
0x804a2e2:   66 83 7d 8e 00                  	cmp word ptr [ebp - 0x72], 0
0x804a2e7:   0f 84 03 01 00 00               	je 0x804a3f0 <func_1+0xbd5>
0x804a2ed:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a2f1:   0f 85 6f 02 00 00               	jne 0x804a566 <func_1+0xd4b>
0x804a2f7:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804a2fe:   0f b6 95 6d ff ff ff            	movzx edx, byte ptr [ebp - 0x93]
0x804a305:   0f b6 8d 6e ff ff ff            	movzx ecx, byte ptr [ebp - 0x92]
0x804a30c:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x804a313:   0f b6 75 85                     	movzx esi, byte ptr [ebp - 0x7b]
0x804a317:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a31d:   0f b6 7d 86                     	movzx edi, byte ptr [ebp - 0x7a]
0x804a321:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a327:   0f be 75 87                     	movsx esi, byte ptr [ebp - 0x79]
0x804a32b:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a331:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a335:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a33b:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x804a33f:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a345:   0f bf 7d 8c                     	movsx edi, word ptr [ebp - 0x74]
0x804a349:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804a34f:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a353:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a359:   0f bf 7d 8e                     	movsx edi, word ptr [ebp - 0x72]
0x804a35d:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a363:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x804a367:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a36b:   50                              	push eax
0x804a36c:   52                              	push edx
0x804a36d:   51                              	push ecx
0x804a36e:   53                              	push ebx
0x804a36f:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a375:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a37b:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a381:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a387:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a38a:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a390:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a396:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a39c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a39f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a3a2:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a3a5:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a3ab:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a3ae:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a3b4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a3b7:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a3bd:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3c0:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a3c3:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a3c9:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a3cf:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3d2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3d5:   57                              	push edi
0x804a3d6:   56                              	push esi
0x804a3d7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3da:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a3dd:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a3e0:   e8 41 f2 ff ff                  	call 0x8049626 <set_var>
0x804a3e5:   83 c4 7c                        	add esp, 0x7c
0x804a3e8:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a3eb:   e9 77 03 00 00                  	jmp 0x804a767 <func_1+0xf4c>
0x804a3f0:   c7 85 a8 fe ff ff e3 7f 6e e1   	mov dword ptr [ebp - 0x158], 0xe16e7fe3
0x804a3fa:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a3fe:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a401:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a404:   89 c1                           	mov ecx, eax
0x804a406:   80 bd cf fe ff ff ff            	cmp byte ptr [ebp - 0x131], 0xff
0x804a40d:   74 09                           	je 0x804a418 <func_1+0xbfd>
0x804a40f:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804a416:   74 07                           	je 0x804a41f <func_1+0xc04>
0x804a418:   b8 01 00 00 00                  	mov eax, 1
0x804a41d:   eb 05                           	jmp 0x804a424 <func_1+0xc09>
0x804a41f:   b8 00 00 00 00                  	mov eax, 0
0x804a424:   89 c2                           	mov edx, eax
0x804a426:   89 c8                           	mov eax, ecx
0x804a428:   0f af c2                        	imul eax, edx
0x804a42b:   83 c0 04                        	add eax, 4
0x804a42e:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a431:   b8 01 00 00 00                  	mov eax, 1
0x804a436:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a43c:   83 7d d8 ff                     	cmp dword ptr [ebp - 0x28], -1
0x804a440:   75 07                           	jne 0x804a449 <func_1+0xc2e>
0x804a442:   66 83 7d 8c 00                  	cmp word ptr [ebp - 0x74], 0
0x804a447:   74 07                           	je 0x804a450 <func_1+0xc35>
0x804a449:   b8 01 00 00 00                  	mov eax, 1
0x804a44e:   eb 05                           	jmp 0x804a455 <func_1+0xc3a>
0x804a450:   b8 00 00 00 00                  	mov eax, 0
0x804a455:   83 f8 ff                        	cmp eax, -1
0x804a458:   0f 95 c0                        	setne al
0x804a45b:   0f b6 c0                        	movzx eax, al
0x804a45e:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a461:   b8 00 00 00 00                  	mov eax, 0
0x804a466:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a469:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804a46d:   0f 85 d7 00 00 00               	jne 0x804a54a <func_1+0xd2f>
0x804a473:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a477:   0f 85 ec 00 00 00               	jne 0x804a569 <func_1+0xd4e>
0x804a47d:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a484:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a488:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a48b:   77 07                           	ja 0x804a494 <func_1+0xc79>
0x804a48d:   66 83 7d 8c 00                  	cmp word ptr [ebp - 0x74], 0
0x804a492:   74 07                           	je 0x804a49b <func_1+0xc80>
0x804a494:   b8 01 00 00 00                  	mov eax, 1
0x804a499:   eb 05                           	jmp 0x804a4a0 <func_1+0xc85>
0x804a49b:   b8 00 00 00 00                  	mov eax, 0
0x804a4a0:   83 f0 08                        	xor eax, 8
0x804a4a3:   89 c2                           	mov edx, eax
0x804a4a5:   0f bf 85 b4 fe ff ff            	movsx eax, word ptr [ebp - 0x14c]
0x804a4ac:   39 c2                           	cmp edx, eax
0x804a4ae:   0f 9c c0                        	setl al
0x804a4b1:   0f b6 c0                        	movzx eax, al
0x804a4b4:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a4b7:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x804a4bb:   f7 d0                           	not eax
0x804a4bd:   0f bf d0                        	movsx edx, ax
0x804a4c0:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a4c3:   98                              	cwde 
0x804a4c4:   89 c1                           	mov ecx, eax
0x804a4c6:   d3 fa                           	sar edx, cl
0x804a4c8:   0f be 85 cf fe ff ff            	movsx eax, byte ptr [ebp - 0x131]
0x804a4cf:   39 c2                           	cmp edx, eax
0x804a4d1:   81 7d ec 3b 1b 00 00            	cmp dword ptr [ebp - 0x14], 0x1b3b
0x804a4d8:   0f 94 c0                        	sete al
0x804a4db:   0f b6 c0                        	movzx eax, al
0x804a4de:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a4e1:   73 06                           	jae 0x804a4e9 <func_1+0xcce>
0x804a4e3:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a4e7:   74 07                           	je 0x804a4f0 <func_1+0xcd5>
0x804a4e9:   b8 01 00 00 00                  	mov eax, 1
0x804a4ee:   eb 05                           	jmp 0x804a4f5 <func_1+0xcda>
0x804a4f0:   b8 00 00 00 00                  	mov eax, 0
0x804a4f5:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a4f8:   83 75 e4 fd                     	xor dword ptr [ebp - 0x1c], 0xfffffffd
0x804a4fc:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a501:   74 11                           	je 0x804a514 <func_1+0xcf9>
0x804a503:   66 83 bd b2 fe ff ff 00         	cmp word ptr [ebp - 0x14e], 0
0x804a50b:   74 07                           	je 0x804a514 <func_1+0xcf9>
0x804a50d:   b8 01 00 00 00                  	mov eax, 1
0x804a512:   eb 05                           	jmp 0x804a519 <func_1+0xcfe>
0x804a514:   b8 00 00 00 00                  	mov eax, 0
0x804a519:   3d 7c 68 4c df                  	cmp eax, 0xdf4c687c
0x804a51e:   76 06                           	jbe 0x804a526 <func_1+0xd0b>
0x804a520:   83 6d c0 01                     	sub dword ptr [ebp - 0x40], 1
0x804a524:   eb 25                           	jmp 0x804a54b <func_1+0xd30>
0x804a526:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x804a52d:   74 1c                           	je 0x804a54b <func_1+0xd30>
0x804a52f:   eb 39                           	jmp 0x804a56a <func_1+0xd4f>
0x804a531:   66 c7 85 b6 fe ff ff 26 76      	mov word ptr [ebp - 0x14a], 0x7626
0x804a53a:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a53d:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a540:   66 83 ad b6 fe ff ff 01         	sub word ptr [ebp - 0x14a], 1
0x804a548:   eb 01                           	jmp 0x804a54b <func_1+0xd30>
0x804a54a:   90                              	nop 
0x804a54b:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804a54f:   83 c0 01                        	add eax, 1
0x804a552:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x804a556:   66 83 7d e8 06                  	cmp word ptr [ebp - 0x18], 6
0x804a55b:   0f 84 6c fa ff ff               	je 0x8049fcd <func_1+0x7b2>
0x804a561:   eb 07                           	jmp 0x804a56a <func_1+0xd4f>
0x804a563:   90                              	nop 
0x804a564:   eb 04                           	jmp 0x804a56a <func_1+0xd4f>
0x804a566:   90                              	nop 
0x804a567:   eb 01                           	jmp 0x804a56a <func_1+0xd4f>
0x804a569:   90                              	nop 
0x804a56a:   66 c7 45 b2 f7 ff               	mov word ptr [ebp - 0x4e], 0xfff7
0x804a570:   66 c7 85 9a fe ff ff ff ff      	mov word ptr [ebp - 0x166], 0xffff
0x804a579:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a57c:   33 45 d0                        	xor eax, dword ptr [ebp - 0x30]
0x804a57f:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a582:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a585:   89 c2                           	mov edx, eax
0x804a587:   0f b7 85 9a fe ff ff            	movzx eax, word ptr [ebp - 0x166]
0x804a58e:   09 d0                           	or eax, edx
0x804a590:   89 c2                           	mov edx, eax
0x804a592:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a596:   01 d0                           	add eax, edx
0x804a598:   0f be d0                        	movsx edx, al
0x804a59b:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a59e:   0f be c0                        	movsx eax, al
0x804a5a1:   0f af c2                        	imul eax, edx
0x804a5a4:   83 f8 ff                        	cmp eax, -1
0x804a5a7:   0f 94 c0                        	sete al
0x804a5aa:   0f b6 d0                        	movzx edx, al
0x804a5ad:   0f b7 85 9a fe ff ff            	movzx eax, word ptr [ebp - 0x166]
0x804a5b4:   31 d0                           	xor eax, edx
0x804a5b6:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x804a5b9:   66 83 45 b2 04                  	add word ptr [ebp - 0x4e], 4
0x804a5be:   eb b0                           	jmp 0x804a570 <func_1+0xd55>
0x804a5c0:   0f b7 85 4c ff ff ff            	movzx eax, word ptr [ebp - 0xb4]
0x804a5c7:   0f be d0                        	movsx edx, al
0x804a5ca:   66 83 bd 4c ff ff ff 00         	cmp word ptr [ebp - 0xb4], 0
0x804a5d2:   0f 95 c0                        	setne al
0x804a5d5:   0f b6 c0                        	movzx eax, al
0x804a5d8:   09 45 b4                        	or dword ptr [ebp - 0x4c], eax
0x804a5db:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a5de:   88 85 6c ff ff ff               	mov byte ptr [ebp - 0x94], al
0x804a5e4:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804a5eb:   0f be c0                        	movsx eax, al
0x804a5ee:   0f af c2                        	imul eax, edx
0x804a5f1:   3d c9 95 00 00                  	cmp eax, 0x95c9
0x804a5f6:   0f 9e c0                        	setle al
0x804a5f9:   89 c2                           	mov edx, eax
0x804a5fb:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a601:   21 d0                           	and eax, edx
0x804a603:   0f be c0                        	movsx eax, al
0x804a606:   0f be 9d 4f ff ff ff            	movsx ebx, byte ptr [ebp - 0xb1]
0x804a60d:   99                              	cdq 
0x804a60e:   f7 fb                           	idiv ebx
0x804a610:   89 c2                           	mov edx, eax
0x804a612:   0f b6 45 85                     	movzx eax, byte ptr [ebp - 0x7b]
0x804a616:   39 c2                           	cmp edx, eax
0x804a618:   0f 9f c0                        	setg al
0x804a61b:   0f b6 d0                        	movzx edx, al
0x804a61e:   66 0f be 85 6f ff ff ff         	movsx ax, byte ptr [ebp - 0x91]
0x804a626:   31 d0                           	xor eax, edx
0x804a628:   0f bf d0                        	movsx edx, ax
0x804a62b:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a62f:   29 c2                           	sub edx, eax
0x804a631:   89 d0                           	mov eax, edx
0x804a633:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a636:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x804a63b:   75 09                           	jne 0x804a646 <func_1+0xe2b>
0x804a63d:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a644:   74 07                           	je 0x804a64d <func_1+0xe32>
0x804a646:   b8 01 00 00 00                  	mov eax, 1
0x804a64b:   eb 05                           	jmp 0x804a652 <func_1+0xe37>
0x804a64d:   b8 00 00 00 00                  	mov eax, 0
0x804a652:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a655:   0f 97 c0                        	seta al
0x804a658:   0f b6 c0                        	movzx eax, al
0x804a65b:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804a661:   0f 9c c0                        	setl al
0x804a664:   0f b6 c0                        	movzx eax, al
0x804a667:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a66a:   0f 9d c0                        	setge al
0x804a66d:   0f b6 c0                        	movzx eax, al
0x804a670:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x804a673:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804a67a:   0f b6 95 6d ff ff ff            	movzx edx, byte ptr [ebp - 0x93]
0x804a681:   0f b6 8d 6e ff ff ff            	movzx ecx, byte ptr [ebp - 0x92]
0x804a688:   0f be 9d 6f ff ff ff            	movsx ebx, byte ptr [ebp - 0x91]
0x804a68f:   0f b6 75 85                     	movzx esi, byte ptr [ebp - 0x7b]
0x804a693:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a699:   0f b6 7d 86                     	movzx edi, byte ptr [ebp - 0x7a]
0x804a69d:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804a6a3:   0f be 75 87                     	movsx esi, byte ptr [ebp - 0x79]
0x804a6a7:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a6ad:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a6b1:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804a6b7:   0f bf 75 ce                     	movsx esi, word ptr [ebp - 0x32]
0x804a6bb:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a6c1:   0f bf 7d 8c                     	movsx edi, word ptr [ebp - 0x74]
0x804a6c5:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804a6cb:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a6cf:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a6d5:   0f bf 7d 8e                     	movsx edi, word ptr [ebp - 0x72]
0x804a6d9:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a6df:   0f bf 7d e8                     	movsx edi, word ptr [ebp - 0x18]
0x804a6e3:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a6e7:   50                              	push eax
0x804a6e8:   52                              	push edx
0x804a6e9:   51                              	push ecx
0x804a6ea:   53                              	push ebx
0x804a6eb:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a6f1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a6f7:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a6fd:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a703:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a706:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a70c:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a712:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a718:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a71b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a71e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a721:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a727:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a72a:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a730:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a733:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a739:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a73c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a73f:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a745:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a74b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a74e:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a751:   57                              	push edi
0x804a752:   56                              	push esi
0x804a753:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a756:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a759:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a75c:   e8 c5 ee ff ff                  	call 0x8049626 <set_var>
0x804a761:   83 c4 7c                        	add esp, 0x7c
0x804a764:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a767:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a76a:   5b                              	pop ebx
0x804a76b:   5e                              	pop esi
0x804a76c:   5f                              	pop edi
0x804a76d:   5d                              	pop ebp
0x804a76e:   c3                              	ret 
; function: main at 0x804a76f -- 0x804aba3
0x804a76f:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a773:   83 e4 f0                        	and esp, 0xfffffff0
0x804a776:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a779:   55                              	push ebp
0x804a77a:   89 e5                           	mov ebp, esp
0x804a77c:   53                              	push ebx
0x804a77d:   51                              	push ecx
0x804a77e:   83 ec 10                        	sub esp, 0x10
0x804a781:   e8 0a dc ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a786:   81 c3 7a 28 00 00               	add ebx, 0x287a
0x804a78c:   89 c8                           	mov eax, ecx
0x804a78e:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a795:   83 38 02                        	cmp dword ptr [eax], 2
0x804a798:   75 26                           	jne 0x804a7c0 <main+0x51>
0x804a79a:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a79d:   83 c0 04                        	add eax, 4
0x804a7a0:   8b 00                           	mov eax, dword ptr [eax]
0x804a7a2:   83 ec 08                        	sub esp, 8
0x804a7a5:   8d 93 88 dc ff ff               	lea edx, [ebx - 0x2378]
0x804a7ab:   52                              	push edx
0x804a7ac:   50                              	push eax
0x804a7ad:   e8 4e db ff ff                  	call 0x8048300 <strcmp>
0x804a7b2:   83 c4 10                        	add esp, 0x10
0x804a7b5:   85 c0                           	test eax, eax
0x804a7b7:   75 07                           	jne 0x804a7c0 <main+0x51>
0x804a7b9:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a7c0:   e8 91 dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a7c5:   e8 a1 ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a7ca:   e8 4c f0 ff ff                  	call 0x804981b <func_1>
0x804a7cf:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a7d5:   89 c2                           	mov edx, eax
0x804a7d7:   83 ec 04                        	sub esp, 4
0x804a7da:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7dd:   8d 83 8a dc ff ff               	lea eax, [ebx - 0x2376]
0x804a7e3:   50                              	push eax
0x804a7e4:   52                              	push edx
0x804a7e5:   e8 8d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ea:   83 c4 10                        	add esp, 0x10
0x804a7ed:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a7f3:   89 c2                           	mov edx, eax
0x804a7f5:   83 ec 04                        	sub esp, 4
0x804a7f8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7fb:   8d 83 8e dc ff ff               	lea eax, [ebx - 0x2372]
0x804a801:   50                              	push eax
0x804a802:   52                              	push edx
0x804a803:   e8 6f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a808:   83 c4 10                        	add esp, 0x10
0x804a80b:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a811:   89 c2                           	mov edx, eax
0x804a813:   83 ec 04                        	sub esp, 4
0x804a816:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a819:   8d 83 92 dc ff ff               	lea eax, [ebx - 0x236e]
0x804a81f:   50                              	push eax
0x804a820:   52                              	push edx
0x804a821:   e8 51 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a826:   83 c4 10                        	add esp, 0x10
0x804a829:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804a830:   0f b6 c0                        	movzx eax, al
0x804a833:   83 ec 04                        	sub esp, 4
0x804a836:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a839:   8d 93 97 dc ff ff               	lea edx, [ebx - 0x2369]
0x804a83f:   52                              	push edx
0x804a840:   50                              	push eax
0x804a841:   e8 31 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a846:   83 c4 10                        	add esp, 0x10
0x804a849:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a850:   98                              	cwde 
0x804a851:   83 ec 04                        	sub esp, 4
0x804a854:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a857:   8d 93 9c dc ff ff               	lea edx, [ebx - 0x2364]
0x804a85d:   52                              	push edx
0x804a85e:   50                              	push eax
0x804a85f:   e8 13 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a864:   83 c4 10                        	add esp, 0x10
0x804a867:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a86d:   89 c2                           	mov edx, eax
0x804a86f:   83 ec 04                        	sub esp, 4
0x804a872:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a875:   8d 83 a1 dc ff ff               	lea eax, [ebx - 0x235f]
0x804a87b:   50                              	push eax
0x804a87c:   52                              	push edx
0x804a87d:   e8 f5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a882:   83 c4 10                        	add esp, 0x10
0x804a885:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a88b:   89 c2                           	mov edx, eax
0x804a88d:   83 ec 04                        	sub esp, 4
0x804a890:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a893:   8d 83 a6 dc ff ff               	lea eax, [ebx - 0x235a]
0x804a899:   50                              	push eax
0x804a89a:   52                              	push edx
0x804a89b:   e8 d7 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a0:   83 c4 10                        	add esp, 0x10
0x804a8a3:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a8aa:   98                              	cwde 
0x804a8ab:   83 ec 04                        	sub esp, 4
0x804a8ae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b1:   8d 93 ab dc ff ff               	lea edx, [ebx - 0x2355]
0x804a8b7:   52                              	push edx
0x804a8b8:   50                              	push eax
0x804a8b9:   e8 b9 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8be:   83 c4 10                        	add esp, 0x10
0x804a8c1:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804a8c8:   0f b7 c0                        	movzx eax, ax
0x804a8cb:   83 ec 04                        	sub esp, 4
0x804a8ce:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d1:   8d 93 b0 dc ff ff               	lea edx, [ebx - 0x2350]
0x804a8d7:   52                              	push edx
0x804a8d8:   50                              	push eax
0x804a8d9:   e8 99 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8de:   83 c4 10                        	add esp, 0x10
0x804a8e1:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a8e7:   89 c2                           	mov edx, eax
0x804a8e9:   83 ec 04                        	sub esp, 4
0x804a8ec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ef:   8d 83 b5 dc ff ff               	lea eax, [ebx - 0x234b]
0x804a8f5:   50                              	push eax
0x804a8f6:   52                              	push edx
0x804a8f7:   e8 7b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fc:   83 c4 10                        	add esp, 0x10
0x804a8ff:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a905:   83 ec 04                        	sub esp, 4
0x804a908:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90b:   8d 93 bb dc ff ff               	lea edx, [ebx - 0x2345]
0x804a911:   52                              	push edx
0x804a912:   50                              	push eax
0x804a913:   e8 5f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a918:   83 c4 10                        	add esp, 0x10
0x804a91b:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804a922:   98                              	cwde 
0x804a923:   83 ec 04                        	sub esp, 4
0x804a926:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a929:   8d 93 c1 dc ff ff               	lea edx, [ebx - 0x233f]
0x804a92f:   52                              	push edx
0x804a930:   50                              	push eax
0x804a931:   e8 41 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a936:   83 c4 10                        	add esp, 0x10
0x804a939:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a93f:   83 ec 04                        	sub esp, 4
0x804a942:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a945:   8d 93 c7 dc ff ff               	lea edx, [ebx - 0x2339]
0x804a94b:   52                              	push edx
0x804a94c:   50                              	push eax
0x804a94d:   e8 25 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a952:   83 c4 10                        	add esp, 0x10
0x804a955:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804a95c:   98                              	cwde 
0x804a95d:   83 ec 04                        	sub esp, 4
0x804a960:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a963:   8d 93 cd dc ff ff               	lea edx, [ebx - 0x2333]
0x804a969:   52                              	push edx
0x804a96a:   50                              	push eax
0x804a96b:   e8 07 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a970:   83 c4 10                        	add esp, 0x10
0x804a973:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804a979:   89 c2                           	mov edx, eax
0x804a97b:   83 ec 04                        	sub esp, 4
0x804a97e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a981:   8d 83 d3 dc ff ff               	lea eax, [ebx - 0x232d]
0x804a987:   50                              	push eax
0x804a988:   52                              	push edx
0x804a989:   e8 e9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a98e:   83 c4 10                        	add esp, 0x10
0x804a991:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804a998:   0f b6 c0                        	movzx eax, al
0x804a99b:   83 ec 04                        	sub esp, 4
0x804a99e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a1:   8d 93 d9 dc ff ff               	lea edx, [ebx - 0x2327]
0x804a9a7:   52                              	push edx
0x804a9a8:   50                              	push eax
0x804a9a9:   e8 c9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ae:   83 c4 10                        	add esp, 0x10
0x804a9b1:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a9b7:   83 ec 04                        	sub esp, 4
0x804a9ba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9bd:   8d 93 df dc ff ff               	lea edx, [ebx - 0x2321]
0x804a9c3:   52                              	push edx
0x804a9c4:   50                              	push eax
0x804a9c5:   e8 ad eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ca:   83 c4 10                        	add esp, 0x10
0x804a9cd:   8b 83 b0 04 00 00               	mov eax, dword ptr [ebx + 0x4b0]
0x804a9d3:   89 c2                           	mov edx, eax
0x804a9d5:   83 ec 04                        	sub esp, 4
0x804a9d8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9db:   8d 83 e5 dc ff ff               	lea eax, [ebx - 0x231b]
0x804a9e1:   50                              	push eax
0x804a9e2:   52                              	push edx
0x804a9e3:   e8 8f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9e8:   83 c4 10                        	add esp, 0x10
0x804a9eb:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a9f1:   89 c2                           	mov edx, eax
0x804a9f3:   83 ec 04                        	sub esp, 4
0x804a9f6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9f9:   8d 83 eb dc ff ff               	lea eax, [ebx - 0x2315]
0x804a9ff:   50                              	push eax
0x804aa00:   52                              	push edx
0x804aa01:   e8 71 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa06:   83 c4 10                        	add esp, 0x10
0x804aa09:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804aa10:   0f be c0                        	movsx eax, al
0x804aa13:   83 ec 04                        	sub esp, 4
0x804aa16:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa19:   8d 93 f1 dc ff ff               	lea edx, [ebx - 0x230f]
0x804aa1f:   52                              	push edx
0x804aa20:   50                              	push eax
0x804aa21:   e8 51 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa26:   83 c4 10                        	add esp, 0x10
0x804aa29:   0f b6 83 59 00 00 00            	movzx eax, byte ptr [ebx + 0x59]
0x804aa30:   0f b6 c0                        	movzx eax, al
0x804aa33:   83 ec 04                        	sub esp, 4
0x804aa36:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa39:   8d 93 f7 dc ff ff               	lea edx, [ebx - 0x2309]
0x804aa3f:   52                              	push edx
0x804aa40:   50                              	push eax
0x804aa41:   e8 31 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa46:   83 c4 10                        	add esp, 0x10
0x804aa49:   0f b6 83 5a 00 00 00            	movzx eax, byte ptr [ebx + 0x5a]
0x804aa50:   0f b6 c0                        	movzx eax, al
0x804aa53:   83 ec 04                        	sub esp, 4
0x804aa56:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa59:   8d 93 fd dc ff ff               	lea edx, [ebx - 0x2303]
0x804aa5f:   52                              	push edx
0x804aa60:   50                              	push eax
0x804aa61:   e8 11 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa66:   83 c4 10                        	add esp, 0x10
0x804aa69:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aa6f:   89 c2                           	mov edx, eax
0x804aa71:   83 ec 04                        	sub esp, 4
0x804aa74:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa77:   8d 83 03 dd ff ff               	lea eax, [ebx - 0x22fd]
0x804aa7d:   50                              	push eax
0x804aa7e:   52                              	push edx
0x804aa7f:   e8 f3 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa84:   83 c4 10                        	add esp, 0x10
0x804aa87:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aa8d:   89 c2                           	mov edx, eax
0x804aa8f:   83 ec 04                        	sub esp, 4
0x804aa92:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa95:   8d 83 09 dd ff ff               	lea eax, [ebx - 0x22f7]
0x804aa9b:   50                              	push eax
0x804aa9c:   52                              	push edx
0x804aa9d:   e8 d5 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa2:   83 c4 10                        	add esp, 0x10
0x804aaa5:   8b 83 b4 04 00 00               	mov eax, dword ptr [ebx + 0x4b4]
0x804aaab:   89 c2                           	mov edx, eax
0x804aaad:   83 ec 04                        	sub esp, 4
0x804aab0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab3:   8d 83 0f dd ff ff               	lea eax, [ebx - 0x22f1]
0x804aab9:   50                              	push eax
0x804aaba:   52                              	push edx
0x804aabb:   e8 b7 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac0:   83 c4 10                        	add esp, 0x10
0x804aac3:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804aac9:   89 c2                           	mov edx, eax
0x804aacb:   83 ec 04                        	sub esp, 4
0x804aace:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad1:   8d 83 15 dd ff ff               	lea eax, [ebx - 0x22eb]
0x804aad7:   50                              	push eax
0x804aad8:   52                              	push edx
0x804aad9:   e8 99 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aade:   83 c4 10                        	add esp, 0x10
0x804aae1:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aae7:   83 ec 04                        	sub esp, 4
0x804aaea:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaed:   8d 93 1b dd ff ff               	lea edx, [ebx - 0x22e5]
0x804aaf3:   52                              	push edx
0x804aaf4:   50                              	push eax
0x804aaf5:   e8 7d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafa:   83 c4 10                        	add esp, 0x10
0x804aafd:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804ab04:   0f be c0                        	movsx eax, al
0x804ab07:   83 ec 04                        	sub esp, 4
0x804ab0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0d:   8d 93 21 dd ff ff               	lea edx, [ebx - 0x22df]
0x804ab13:   52                              	push edx
0x804ab14:   50                              	push eax
0x804ab15:   e8 5d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1a:   83 c4 10                        	add esp, 0x10
0x804ab1d:   0f b6 83 6d 00 00 00            	movzx eax, byte ptr [ebx + 0x6d]
0x804ab24:   0f b6 c0                        	movzx eax, al
0x804ab27:   83 ec 04                        	sub esp, 4
0x804ab2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2d:   8d 93 27 dd ff ff               	lea edx, [ebx - 0x22d9]
0x804ab33:   52                              	push edx
0x804ab34:   50                              	push eax
0x804ab35:   e8 3d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab3a:   83 c4 10                        	add esp, 0x10
0x804ab3d:   0f b6 83 6e 00 00 00            	movzx eax, byte ptr [ebx + 0x6e]
0x804ab44:   0f b6 c0                        	movzx eax, al
0x804ab47:   83 ec 04                        	sub esp, 4
0x804ab4a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab4d:   8d 93 2d dd ff ff               	lea edx, [ebx - 0x22d3]
0x804ab53:   52                              	push edx
0x804ab54:   50                              	push eax
0x804ab55:   e8 1d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab5a:   83 c4 10                        	add esp, 0x10
0x804ab5d:   0f b6 83 6f 00 00 00            	movzx eax, byte ptr [ebx + 0x6f]
0x804ab64:   0f b6 c0                        	movzx eax, al
0x804ab67:   83 ec 04                        	sub esp, 4
0x804ab6a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab6d:   8d 93 33 dd ff ff               	lea edx, [ebx - 0x22cd]
0x804ab73:   52                              	push edx
0x804ab74:   50                              	push eax
0x804ab75:   e8 fd e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab7a:   83 c4 10                        	add esp, 0x10
0x804ab7d:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab83:   f7 d0                           	not eax
0x804ab85:   83 ec 08                        	sub esp, 8
0x804ab88:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab8b:   50                              	push eax
0x804ab8c:   e8 d5 d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab91:   83 c4 10                        	add esp, 0x10
0x804ab94:   b8 00 00 00 00                  	mov eax, 0
0x804ab99:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab9c:   59                              	pop ecx
0x804ab9d:   5b                              	pop ebx
0x804ab9e:   5d                              	pop ebp
0x804ab9f:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aba2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aba3 -- 0x804aba7
0x804aba3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aba6:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aba7 -- 0x804abab
0x804aba7:   8b 14 24                        	mov edx, dword ptr [esp]
0x804abaa:   c3                              	ret 
; data inside code section at 0x804abab -- 0x804abb0
0x804abab:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804abb0 -- 0x804ac0d
0x804abb0:   55                              	push ebp
0x804abb1:   57                              	push edi
0x804abb2:   56                              	push esi
0x804abb3:   53                              	push ebx
0x804abb4:   e8 d7 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abb9:   81 c3 47 24 00 00               	add ebx, 0x2447
0x804abbf:   83 ec 0c                        	sub esp, 0xc
0x804abc2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804abc6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804abcc:   e8 fb d6 ff ff                  	call 0x80482cc <_init>
0x804abd1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804abd7:   29 c6                           	sub esi, eax
0x804abd9:   c1 fe 02                        	sar esi, 2
0x804abdc:   85 f6                           	test esi, esi
0x804abde:   74 25                           	je 0x804ac05 <__libc_csu_init+0x55>
0x804abe0:   31 ff                           	xor edi, edi
0x804abe2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804abe8:   83 ec 04                        	sub esp, 4
0x804abeb:   55                              	push ebp
0x804abec:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abf0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abf4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804abfb:   83 c7 01                        	add edi, 1
0x804abfe:   83 c4 10                        	add esp, 0x10
0x804ac01:   39 fe                           	cmp esi, edi
0x804ac03:   75 e3                           	jne 0x804abe8 <__libc_csu_init+0x38>
0x804ac05:   83 c4 0c                        	add esp, 0xc
0x804ac08:   5b                              	pop ebx
0x804ac09:   5e                              	pop esi
0x804ac0a:   5f                              	pop edi
0x804ac0b:   5d                              	pop ebp
0x804ac0c:   c3                              	ret 
; data inside code section at 0x804ac0d -- 0x804ac10
0x804ac0d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ac10 -- 0x804ac12
0x804ac10:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ac14 -- 0x804ac28
0x804ac14:   53                              	push ebx
0x804ac15:   83 ec 08                        	sub esp, 8
0x804ac18:   e8 73 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac1d:   81 c3 e3 23 00 00               	add ebx, 0x23e3
0x804ac23:   83 c4 08                        	add esp, 8
0x804ac26:   5b                              	pop ebx
0x804ac27:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 2c ac 04 08  04 00 00 00 11 00 10 00   |....,...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ac28:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ac38:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ac48:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ac58:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac68:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac78:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac88:   31 00 67 5f 32 00 67 5f  35 00 67 5f 31 37 00 67   |1.g_2.g_5.g_17.g|
0x804ac98:   5f 32 30 00 67 5f 36 34  00 67 5f 38 38 00 67 5f   |_20.g_64.g_88.g_|
0x804aca8:   38 39 00 67 5f 39 30 00  67 5f 39 33 00 67 5f 31   |89.g_90.g_93.g_1|
0x804acb8:   32 36 00 67 5f 31 35 31  00 67 5f 31 37 36 00 67   |26.g_151.g_176.g|
0x804acc8:   5f 31 37 37 00 67 5f 31  39 34 00 67 5f 32 33 39   |_177.g_194.g_239|
0x804acd8:   00 67 5f 32 35 33 00 67  5f 32 37 35 00 67 5f 32   |.g_253.g_275.g_2|
0x804ace8:   39 37 00 67 5f 33 31 37  00 67 5f 33 37 33 00 67   |97.g_317.g_373.g|
0x804acf8:   5f 34 30 38 00 67 5f 34  34 32 00 67 5f 34 34 35   |_408.g_442.g_445|
0x804ad08:   00 67 5f 34 34 36 00 67  5f 34 35 36 00 67 5f 34   |.g_446.g_456.g_4|
0x804ad18:   35 37 00 67 5f 34 35 38  00 67 5f 34 37 38 00 67   |57.g_458.g_478.g|
0x804ad28:   5f 34 37 39 00 67 5f 34  38 38 00 67 5f 35 33 34   |_479.g_488.g_534|
0x804ad38:   00 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |.......?...~....|
0x804ad48:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804ad58:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804ad68:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ad78:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ad88:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ad98:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ada8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ada8:   01 1b 03 3b b8 02 00 00  56 00 00 00 48 d5 ff ff   |...;....V...H...|
0x804adb8:   e8 02 00 00 88 d5 ff ff  0c 03 00 00 d8 d5 ff ff   |................|
0x804adc8:   d4 02 00 00 ae d6 ff ff  20 03 00 00 be d6 ff ff   |........ .......|
0x804add8:   40 03 00 00 ec d6 ff ff  64 03 00 00 0a d7 ff ff   |@.......d.......|
0x804ade8:   84 03 00 00 32 d7 ff ff  a4 03 00 00 5c d7 ff ff   |....2.......\...|
0x804adf8:   c4 03 00 00 85 d7 ff ff  e4 03 00 00 c8 d7 ff ff   |................|
0x804ae08:   04 04 00 00 09 d8 ff ff  24 04 00 00 61 d8 ff ff   |........$...a...|
0x804ae18:   48 04 00 00 b3 d8 ff ff  6c 04 00 00 f0 d8 ff ff   |H.......l.......|
0x804ae28:   8c 04 00 00 27 d9 ff ff  ac 04 00 00 46 d9 ff ff   |....'.......F...|
0x804ae38:   cc 04 00 00 70 d9 ff ff  ec 04 00 00 9c d9 ff ff   |....p...........|
0x804ae48:   0c 05 00 00 c7 d9 ff ff  2c 05 00 00 10 da ff ff   |........,.......|
0x804ae58:   4c 05 00 00 57 da ff ff  6c 05 00 00 b1 da ff ff   |L...W...l.......|
0x804ae68:   90 05 00 00 05 db ff ff  b4 05 00 00 44 db ff ff   |............D...|
0x804ae78:   d4 05 00 00 7d db ff ff  f4 05 00 00 9f db ff ff   |....}...........|
0x804ae88:   14 06 00 00 ed db ff ff  34 06 00 00 29 dc ff ff   |........4...)...|
0x804ae98:   54 06 00 00 b2 dc ff ff  74 06 00 00 e4 dc ff ff   |T.......t.......|
0x804aea8:   94 06 00 00 14 dd ff ff  b4 06 00 00 59 dd ff ff   |............Y...|
0x804aeb8:   d4 06 00 00 98 dd ff ff  f4 06 00 00 ca dd ff ff   |................|
0x804aec8:   14 07 00 00 f6 dd ff ff  34 07 00 00 14 de ff ff   |........4.......|
0x804aed8:   54 07 00 00 3c de ff ff  74 07 00 00 61 de ff ff   |T...<...t...a...|
0x804aee8:   94 07 00 00 86 de ff ff  b4 07 00 00 bd de ff ff   |................|
0x804aef8:   d4 07 00 00 f1 de ff ff  f4 07 00 00 43 df ff ff   |............C...|
0x804af08:   18 08 00 00 8f df ff ff  3c 08 00 00 c6 df ff ff   |........<.......|
0x804af18:   5c 08 00 00 f7 df ff ff  7c 08 00 00 16 e0 ff ff   |\.......|.......|
0x804af28:   9c 08 00 00 40 e0 ff ff  bc 08 00 00 68 e0 ff ff   |....@.......h...|
0x804af38:   dc 08 00 00 91 e0 ff ff  fc 08 00 00 cd e0 ff ff   |................|
0x804af48:   1c 09 00 00 07 e1 ff ff  3c 09 00 00 5a e1 ff ff   |........<...Z...|
0x804af58:   60 09 00 00 a7 e1 ff ff  84 09 00 00 df e1 ff ff   |`...............|
0x804af68:   a4 09 00 00 11 e2 ff ff  c4 09 00 00 25 e2 ff ff   |............%...|
0x804af78:   e4 09 00 00 3c e2 ff ff  04 0a 00 00 51 e2 ff ff   |....<.......Q...|
0x804af88:   24 0a 00 00 67 e2 ff ff  44 0a 00 00 8e e2 ff ff   |$...g...D.......|
0x804af98:   64 0a 00 00 b3 e2 ff ff  84 0a 00 00 f2 e2 ff ff   |d...............|
0x804afa8:   a4 0a 00 00 2b e3 ff ff  c4 0a 00 00 57 e3 ff ff   |....+.......W...|
0x804afb8:   e4 0a 00 00 7d e3 ff ff  04 0b 00 00 bf e3 ff ff   |....}...........|
0x804afc8:   24 0b 00 00 01 e4 ff ff  44 0b 00 00 43 e4 ff ff   |$.......D...C...|
0x804afd8:   64 0b 00 00 b8 e4 ff ff  84 0b 00 00 15 e5 ff ff   |d...............|
0x804afe8:   a4 0b 00 00 72 e5 ff ff  c4 0b 00 00 cf e5 ff ff   |....r...........|
0x804aff8:   e4 0b 00 00 5f e6 ff ff  04 0c 00 00 c3 e6 ff ff   |...._...........|
0x804b008:   24 0c 00 00 33 e7 ff ff  44 0c 00 00 7a e7 ff ff   |$...3...D...z...|
0x804b018:   68 0c 00 00 cf e7 ff ff  88 0c 00 00 16 e8 ff ff   |h...............|
0x804b028:   ac 0c 00 00 7e e8 ff ff  d0 0c 00 00 73 ea ff ff   |....~.......s...|
0x804b038:   00 0d 00 00 c7 f9 ff ff  30 0d 00 00 fb fd ff ff   |........0.......|
0x804b048:   68 0d 00 00 ff fd ff ff  7c 0d 00 00 08 fe ff ff   |h.......|.......|
0x804b058:   90 0d 00 00 68 fe ff ff  dc 0d 00 00 14            |....h........   |
; section: .eh_frame
0x804b064:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b074:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b084:   fc d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b094:   30 00 00 00 58 d2 ff ff  40 00 00 00 00 0e 08 46   |0...X...@......F|
0x804b0a4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b0b4:   10 00 00 00 54 00 00 00  74 d2 ff ff 08 00 00 00   |....T...t.......|
0x804b0c4:   00 00 00 00 1c 00 00 00  68 00 00 00 86 d3 ff ff   |........h.......|
0x804b0d4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b0e4:   04 04 00 00 20 00 00 00  88 00 00 00 76 d3 ff ff   |.... .......v...|
0x804b0f4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b104:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b114:   80 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b124:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b134:   7e d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |~...(....A....B.|
0x804b144:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b154:   86 d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b164:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b174:   90 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b184:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b194:   99 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b1a4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b1b4:   bc d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b1c4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b1d4:   dd d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b1e4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b1f4:   90 01 00 00 11 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b204:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b214:   1c 00 00 00 b4 01 00 00  3f d4 ff ff 3d 00 00 00   |........?...=...|
0x804b224:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b234:   1c 00 00 00 d4 01 00 00  5c d4 ff ff 37 00 00 00   |........\...7...|
0x804b244:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b254:   1c 00 00 00 f4 01 00 00  73 d4 ff ff 1f 00 00 00   |........s.......|
0x804b264:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b274:   1c 00 00 00 14 02 00 00  72 d4 ff ff 2a 00 00 00   |........r...*...|
0x804b284:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b294:   1c 00 00 00 34 02 00 00  7c d4 ff ff 2c 00 00 00   |....4...|...,...|
0x804b2a4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b2b4:   1c 00 00 00 54 02 00 00  88 d4 ff ff 2b 00 00 00   |....T.......+...|
0x804b2c4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b2d4:   1c 00 00 00 74 02 00 00  93 d4 ff ff 49 00 00 00   |....t.......I...|
0x804b2e4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b2f4:   1c 00 00 00 94 02 00 00  bc d4 ff ff 47 00 00 00   |............G...|
0x804b304:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b314:   20 00 00 00 b4 02 00 00  e3 d4 ff ff 5a 00 00 00   | ...........Z...|
0x804b324:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b334:   c5 0c 04 04 20 00 00 00  d8 02 00 00 19 d5 ff ff   |.... ...........|
0x804b344:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b354:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b364:   49 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |I...?....A....B.|
0x804b374:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b384:   68 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |h...9....A....B.|
0x804b394:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b3a4:   81 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b3b4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b3c4:   83 d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b3d4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b3e4:   b1 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b3f4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b404:   cd d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b414:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b424:   36 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |6...2....A....B.|
0x804b434:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b444:   48 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |H...0....A....B.|
0x804b454:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b464:   58 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |X...E....A....B.|
0x804b474:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b484:   7d d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |}...?....A....B.|
0x804b494:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b4a4:   9c d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b4b4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b4c4:   ae d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b4d4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b4e4:   ba d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4f4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b504:   b8 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b514:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b524:   c0 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b534:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b544:   c5 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b554:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b564:   ca d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b574:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b584:   e1 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b594:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b5a4:   f5 d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b5b4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b5c4:   60 05 00 00 23 d7 ff ff  4c 00 00 00 00 41 0e 08   |`...#...L....A..|
0x804b5d4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b5e4:   1c 00 00 00 84 05 00 00  4b d7 ff ff 37 00 00 00   |........K...7...|
0x804b5f4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b604:   1c 00 00 00 a4 05 00 00  62 d7 ff ff 31 00 00 00   |........b...1...|
0x804b614:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b624:   1c 00 00 00 c4 05 00 00  73 d7 ff ff 1f 00 00 00   |........s.......|
0x804b634:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b644:   1c 00 00 00 e4 05 00 00  72 d7 ff ff 2a 00 00 00   |........r...*...|
0x804b654:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b664:   1c 00 00 00 04 06 00 00  7c d7 ff ff 28 00 00 00   |........|...(...|
0x804b674:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b684:   1c 00 00 00 24 06 00 00  84 d7 ff ff 29 00 00 00   |....$.......)...|
0x804b694:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b6a4:   1c 00 00 00 44 06 00 00  8d d7 ff ff 3c 00 00 00   |....D.......<...|
0x804b6b4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b6c4:   1c 00 00 00 64 06 00 00  a9 d7 ff ff 3a 00 00 00   |....d.......:...|
0x804b6d4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b6e4:   20 00 00 00 84 06 00 00  c3 d7 ff ff 53 00 00 00   | ...........S...|
0x804b6f4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b704:   c5 0c 04 04 20 00 00 00  a8 06 00 00 f2 d7 ff ff   |.... ...........|
0x804b714:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b724:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b734:   1b d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b744:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b754:   33 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |3...2....A....B.|
0x804b764:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b774:   45 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804b784:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b794:   39 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |9........A....B.|
0x804b7a4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b7b4:   30 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804b7c4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b7d4:   25 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |%........A....B.|
0x804b7e4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b7f4:   1b d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b804:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b814:   22 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |"...%....A....B.|
0x804b824:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b834:   27 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |'...?....A....B.|
0x804b844:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b854:   46 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |F...9....A....B.|
0x804b864:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b874:   5f d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |_...,....A....B.|
0x804b884:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b894:   6b d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |k...&....A....B.|
0x804b8a4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b8b4:   71 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |q...B....A....B.|
0x804b8c4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b8d4:   93 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8e4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b8f4:   b5 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b904:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b914:   d7 d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b924:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b934:   2c d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |,...]....A....B.|
0x804b944:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b954:   69 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |i...]....A....B.|
0x804b964:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b974:   a6 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b984:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b994:   e3 d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9a4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b9b4:   53 da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |S...d....A....B.|
0x804b9c4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b9d4:   97 da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b9e4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b9f4:   e7 da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804ba04:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804ba14:   b0 09 00 00 0a db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804ba24:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba34:   d0 09 00 00 3f db ff ff  47 00 00 00 00 41 0e 08   |....?...G....A..|
0x804ba44:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804ba54:   20 00 00 00 f4 09 00 00  62 db ff ff 68 00 00 00   | .......b...h...|
0x804ba64:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804ba74:   0c 04 04 00 2c 00 00 00  18 0a 00 00 a6 db ff ff   |....,...........|
0x804ba84:   f5 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804ba94:   86 04 83 05 03 e8 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804baa4:   04 00 00 00 2c 00 00 00  48 0a 00 00 6b dd ff ff   |....,...H...k...|
0x804bab4:   54 0f 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |T....A....B..I..|
0x804bac4:   86 04 83 05 03 44 0f c3  41 c6 41 c7 41 c5 0c 04   |.....D..A.A.A...|
0x804bad4:   04 00 00 00 34 00 00 00  78 0a 00 00 8f ec ff ff   |....4...x.......|
0x804bae4:   34 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |4....D...G...u.D|
0x804baf4:   0f 03 75 78 06 10 03 02  75 7c 03 1f 04 c1 0c 01   |..ux....u|......|
0x804bb04:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bb14:   b0 0a 00 00 8b f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bb24:   10 00 00 00 c4 0a 00 00  7b f0 ff ff 04 00 00 00   |........{.......|
0x804bb34:   00 00 00 00 48 00 00 00  d8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804bb44:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bb54:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bb64:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bb74:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bb84:   10 00 00 00 24 0b 00 00  84 f0 ff ff 02 00 00 00   |....$...........|
0x804bb94:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 14 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 25 f8 d7 40   |............%..@|
0x804d028:   ba 05 9d ce ff ff ff ff  3a 00 00 00 01 00 00 00   |........:.......|
0x804d038:   02 00 00 00 f7 ff 1c b8  e3 d0 28 08 01 00 00 00   |..........(.....|
0x804d048:   60 b2 f7 83 01 00 01 00  f8 ff ff ff fe 30 7b 86   |`............0{.|
0x804d058:   ff 01 69 00 01 00 00 00  f9 28 9e fa f8 9e a9 ac   |..i......(......|
0x804d068:   0a 7d 39 15 22 fb ff ff  ??                        |.}9."...?       |
