;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:59:36
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 60 d5 ff ff               	lea eax, [ebx - 0x2aa0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 d5 ff ff               	lea eax, [ebx - 0x2b00]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 a6 af 04 08               	mov eax, 0x804afa6
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 9c e0 04 08                  	mov eax, 0x804e09c
0x80483a5:   3d 9c e0 04 08                  	cmp eax, 0x804e09c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 9c e0 04 08                  	push 0x804e09c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 9c e0 04 08                  	mov eax, 0x804e09c
0x80483e5:   2d 9c e0 04 08                  	sub eax, 0x804e09c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 9c e0 04 08                  	push 0x804e09c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 90 30 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 7c 30 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 d5 ff ff               	lea edx, [eax - 0x2a80]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 4f 30 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 31 30 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 09 30 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 df 2f 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 b6 2f 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 73 2f 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 31 2f 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 d9 2e 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 88 2e 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 4b 2e 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 14 2e 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 f5 2d 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 cb 2d 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 9f 2d 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 74 2d 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 2b 2d 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e3 2c 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 89 2c 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 36 2c 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 f7 2b 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c1 2b 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 9f 2b 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 51 2b 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 15 2b 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 8c 2a 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5a 2a 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2a 2a 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 e5 29 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 a6 29 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 74 29 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 45 29 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 27 29 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 ff 28 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 da 28 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 b5 28 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 7e 28 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 49 28 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 f7 27 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 ac 27 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 75 27 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 44 27 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 25 27 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 fb 26 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d3 26 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 aa 26 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 6e 26 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 33 26 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e0 25 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 94 25 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 5c 25 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 2d 25 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 19 25 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 02 25 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 ed 24 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 d7 24 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b0 24 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 8b 24 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 4c 24 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 13 24 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 e7 23 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c1 23 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 c0 d6 ff ff               	fld dword ptr [eax - 0x2940]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 c0 d6 ff ff               	fld dword ptr [eax - 0x2940]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 c4 d6 ff ff               	fld dword ptr [eax - 0x293c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 7f 23 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 c0 d6 ff ff               	fld dword ptr [eax - 0x2940]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 c0 d6 ff ff               	fld dword ptr [eax - 0x2940]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 c4 d6 ff ff               	fld dword ptr [eax - 0x293c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 3d 23 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 c8 d6 ff ff               	fld dword ptr [eax - 0x2938]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 cc d6 ff ff               	fld dword ptr [eax - 0x2934]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 d0 d6 ff ff               	fld dword ptr [eax - 0x2930]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 fb 22 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 d4 d6 ff ff               	fld dword ptr [eax - 0x292c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 d8 d6 ff ff               	fld dword ptr [eax - 0x2928]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 dc d6 ff ff               	fld dword ptr [eax - 0x2924]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 83 22 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 e0 d6 ff ff               	fld qword ptr [eax - 0x2920]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 e0 d6 ff ff               	fld qword ptr [eax - 0x2920]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 e8 d6 ff ff               	fld qword ptr [eax - 0x2918]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 26 22 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 e0 d6 ff ff               	fld qword ptr [eax - 0x2920]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 e0 d6 ff ff               	fld qword ptr [eax - 0x2920]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 e8 d6 ff ff               	fld qword ptr [eax - 0x2918]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 c9 21 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 f0 d6 ff ff               	fld qword ptr [eax - 0x2910]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 f8 d6 ff ff               	fld qword ptr [eax - 0x2908]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 00 d7 ff ff               	fld qword ptr [eax - 0x2900]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 6c 21 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 08 d7 ff ff               	fld qword ptr [eax - 0x28f8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 10 d7 ff ff               	fld qword ptr [eax - 0x28f0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 18 d7 ff ff               	fld qword ptr [eax - 0x28e8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 dc 20 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 20 d7 ff ff               	fld dword ptr [eax - 0x28e0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 24 d7 ff ff               	fld dword ptr [eax - 0x28dc]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 78 20 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 07 20 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c4 1f 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 d5 ff ff               	lea eax, [ebx - 0x2a70]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 d5 ff ff               	lea eax, [ebx - 0x2a4c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80498f9
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 88 00 00 00               	sub esp, 0x88
0x8049632:   e8 bb 1e 00 00                  	call 0x804b4f2 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049640:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049643:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x8049646:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049649:   8b 75 30                        	mov esi, dword ptr [ebp + 0x30]
0x804964c:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964f:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049652:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049655:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049658:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965b:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804965e:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049661:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049664:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049667:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804966a:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804966d:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049670:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049673:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049676:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049679:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804967c:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804967f:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049682:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049685:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x804968b:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049691:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x8049697:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804969d:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x80496a3:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a9:   8b 85 9c 00 00 00               	mov eax, dword ptr [ebp + 0x9c]
0x80496af:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496b5:   8b 85 a4 00 00 00               	mov eax, dword ptr [ebp + 0xa4]
0x80496bb:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496c1:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c5:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496c9:   89 c8                           	mov eax, ecx
0x80496cb:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496ce:   89 d8                           	mov eax, ebx
0x80496d0:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496d3:   89 f0                           	mov eax, esi
0x80496d5:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496d8:   89 f8                           	mov eax, edi
0x80496da:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496dd:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496e1:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496e5:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496e9:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496ec:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496f0:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496f4:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496f8:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496fb:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496ff:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x8049703:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x8049707:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804970b:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x804970f:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x8049712:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049716:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804971a:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x804971e:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x8049721:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049728:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804972c:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x8049733:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049736:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804973d:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049741:   0f b6 85 70 ff ff ff            	movzx eax, byte ptr [ebp - 0x90]
0x8049748:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x804974b:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x8049752:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x8049756:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049759:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x804975f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049762:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049768:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804976b:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049771:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049774:   89 82 c4 04 00 00               	mov dword ptr [edx + 0x4c4], eax
0x804977a:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804977e:   66 89 82 c8 04 00 00            	mov word ptr [edx + 0x4c8], ax
0x8049785:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049789:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x804978f:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049793:   88 82 31 00 00 00               	mov byte ptr [edx + 0x31], al
0x8049799:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804979c:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80497a2:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x80497a5:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497ab:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x80497ae:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x80497b4:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x80497b8:   88 82 ca 04 00 00               	mov byte ptr [edx + 0x4ca], al
0x80497be:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x80497c2:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x80497c8:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497cb:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497d1:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497d4:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497da:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x80497de:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x80497e5:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x80497e9:   88 82 4e 00 00 00               	mov byte ptr [edx + 0x4e], al
0x80497ef:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497f3:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497fa:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80497fd:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049803:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049807:   88 82 cb 04 00 00               	mov byte ptr [edx + 0x4cb], al
0x804980d:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049810:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049816:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804981a:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x8049821:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049824:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x804982a:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804982e:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x8049835:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049838:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x804983e:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049842:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x8049848:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804984c:   66 89 82 6e 00 00 00            	mov word ptr [edx + 0x6e], ax
0x8049853:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049857:   88 82 cc 04 00 00               	mov byte ptr [edx + 0x4cc], al
0x804985d:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049860:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049866:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049869:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x804986f:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049872:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049878:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804987e:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049884:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049888:   66 89 82 80 00 00 00            	mov word ptr [edx + 0x80], ax
0x804988f:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x8049895:   89 82 d0 04 00 00               	mov dword ptr [edx + 0x4d0], eax
0x804989b:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x80498a1:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x80498a7:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80498ab:   88 82 88 00 00 00               	mov byte ptr [edx + 0x88], al
0x80498b1:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80498b5:   66 89 82 8a 00 00 00            	mov word ptr [edx + 0x8a], ax
0x80498bc:   8b 85 98 00 00 00               	mov eax, dword ptr [ebp + 0x98]
0x80498c2:   89 82 8c 00 00 00               	mov dword ptr [edx + 0x8c], eax
0x80498c8:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80498cc:   88 82 90 00 00 00               	mov byte ptr [edx + 0x90], al
0x80498d2:   8b 85 a0 00 00 00               	mov eax, dword ptr [ebp + 0xa0]
0x80498d8:   89 82 94 00 00 00               	mov dword ptr [edx + 0x94], eax
0x80498de:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80498e2:   66 89 82 98 00 00 00            	mov word ptr [edx + 0x98], ax
0x80498e9:   b8 00 00 00 00                  	mov eax, 0
0x80498ee:   81 c4 88 00 00 00               	add esp, 0x88
0x80498f4:   5b                              	pop ebx
0x80498f5:   5e                              	pop esi
0x80498f6:   5f                              	pop edi
0x80498f7:   5d                              	pop ebp
0x80498f8:   c3                              	ret 
; function: func_1 at 0x80498f9 -- 0x804afa6
0x80498f9:   55                              	push ebp
0x80498fa:   89 e5                           	mov ebp, esp
0x80498fc:   57                              	push edi
0x80498fd:   56                              	push esi
0x80498fe:   53                              	push ebx
0x80498ff:   81 ec 04 02 00 00               	sub esp, 0x204
0x8049905:   e8 e4 1b 00 00                  	call 0x804b4ee <__x86.get_pc_thunk.ax>
0x804990a:   05 f6 46 00 00                  	add eax, 0x46f6
0x804990f:   c7 85 5c ff ff ff 26 48 06 4e   	mov dword ptr [ebp - 0xa4], 0x4e064826
0x8049919:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x8049923:   c7 85 54 ff ff ff be 29 9d e1   	mov dword ptr [ebp - 0xac], 0xe19d29be
0x804992d:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x8049937:   66 c7 85 4e ff ff ff 00 00      	mov word ptr [ebp - 0xb2], 0
0x8049940:   c6 45 ab 1d                     	mov byte ptr [ebp - 0x55], 0x1d
0x8049944:   c6 45 aa 9d                     	mov byte ptr [ebp - 0x56], 0x9d
0x8049948:   c7 45 a4 f6 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffff6
0x804994f:   c7 45 a0 f6 6f 5e 3e            	mov dword ptr [ebp - 0x60], 0x3e5e6ff6
0x8049956:   c7 45 9c 7b 3c 1f 40            	mov dword ptr [ebp - 0x64], 0x401f3c7b
0x804995d:   c6 45 9b 00                     	mov byte ptr [ebp - 0x65], 0
0x8049961:   c6 45 9a fb                     	mov byte ptr [ebp - 0x66], 0xfb
0x8049965:   c7 45 94 56 dd ac e8            	mov dword ptr [ebp - 0x6c], 0xe8acdd56
0x804996c:   c7 45 90 08 00 00 00            	mov dword ptr [ebp - 0x70], 8
0x8049973:   66 c7 45 8e 92 60               	mov word ptr [ebp - 0x72], 0x6092
0x8049979:   c6 45 8d 5e                     	mov byte ptr [ebp - 0x73], 0x5e
0x804997d:   66 c7 45 8a 01 00               	mov word ptr [ebp - 0x76], 1
0x8049983:   c7 45 80 d6 20 a7 85            	mov dword ptr [ebp - 0x80], 0x85a720d6
0x804998a:   c6 85 7f ff ff ff 00            	mov byte ptr [ebp - 0x81], 0
0x8049991:   c7 45 84 dc 79 49 69            	mov dword ptr [ebp - 0x7c], 0x694979dc
0x8049998:   66 c7 45 da d9 9b               	mov word ptr [ebp - 0x26], 0x9bd9
0x804999e:   c7 45 d4 a5 0a 10 d5            	mov dword ptr [ebp - 0x2c], 0xd5100aa5
0x80499a5:   66 c7 85 4c ff ff ff 66 69      	mov word ptr [ebp - 0xb4], 0x6966
0x80499ae:   c7 85 48 ff ff ff 1f ff bc 40   	mov dword ptr [ebp - 0xb8], 0x40bcff1f
0x80499b8:   c6 85 7e ff ff ff 89            	mov byte ptr [ebp - 0x82], 0x89
0x80499bf:   66 c7 45 d2 6b 36               	mov word ptr [ebp - 0x2e], 0x366b
0x80499c5:   c6 45 d1 00                     	mov byte ptr [ebp - 0x2f], 0
0x80499c9:   c7 45 cc 16 c6 d4 23            	mov dword ptr [ebp - 0x34], 0x23d4c616
0x80499d0:   c7 45 c8 02 00 00 00            	mov dword ptr [ebp - 0x38], 2
0x80499d7:   c7 45 c4 76 91 52 e9            	mov dword ptr [ebp - 0x3c], 0xe9529176
0x80499de:   c7 45 c0 5c 7b 1a 12            	mov dword ptr [ebp - 0x40], 0x121a7b5c
0x80499e5:   66 c7 45 be 09 d3               	mov word ptr [ebp - 0x42], 0xd309
0x80499eb:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x80499f2:   c7 45 b4 50 aa fa b6            	mov dword ptr [ebp - 0x4c], 0xb6faaa50
0x80499f9:   c6 45 b3 82                     	mov byte ptr [ebp - 0x4d], 0x82
0x80499fd:   66 c7 45 b0 08 00               	mov word ptr [ebp - 0x50], 8
0x8049a03:   c7 45 ac fe ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffe
0x8049a0a:   c6 85 47 ff ff ff f8            	mov byte ptr [ebp - 0xb9], 0xf8
0x8049a11:   c7 85 40 ff ff ff 83 d6 15 ef   	mov dword ptr [ebp - 0xc0], 0xef15d683
0x8049a1b:   66 c7 85 3e ff ff ff 01 00      	mov word ptr [ebp - 0xc2], 1
0x8049a24:   66 c7 85 3c ff ff ff 01 00      	mov word ptr [ebp - 0xc4], 1
0x8049a2d:   c7 85 38 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xc8], 2
0x8049a37:   66 c7 85 36 ff ff ff 7a 84      	mov word ptr [ebp - 0xca], 0x847a
0x8049a40:   c6 85 7d ff ff ff 84            	mov byte ptr [ebp - 0x83], 0x84
0x8049a47:   c7 85 78 ff ff ff 58 28 be e3   	mov dword ptr [ebp - 0x88], 0xe3be2858
0x8049a51:   66 c7 85 76 ff ff ff fd 8d      	mov word ptr [ebp - 0x8a], 0x8dfd
0x8049a5a:   66 c7 85 74 ff ff ff 06 bb      	mov word ptr [ebp - 0x8c], 0xbb06
0x8049a63:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049a6a:   c7 85 70 ff ff ff 3a 6f d7 13   	mov dword ptr [ebp - 0x90], 0x13d76f3a
0x8049a74:   c6 85 6f ff ff ff 07            	mov byte ptr [ebp - 0x91], 7
0x8049a7b:   66 c7 85 6c ff ff ff fe ff      	mov word ptr [ebp - 0x94], 0xfffe
0x8049a84:   c6 85 6b ff ff ff 88            	mov byte ptr [ebp - 0x95], 0x88
0x8049a8b:   c7 85 64 ff ff ff 4f 48 de 05   	mov dword ptr [ebp - 0x9c], 0x5de484f
0x8049a95:   c6 85 63 ff ff ff 3c            	mov byte ptr [ebp - 0x9d], 0x3c
0x8049a9c:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x8049aa6:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x8049ab0:   e9 96 04 00 00                  	jmp 0x8049f4b <func_1+0x652>
0x8049ab5:   c7 85 58 fe ff ff f4 8c 7d 5b   	mov dword ptr [ebp - 0x1a8], 0x5b7d8cf4
0x8049abf:   c7 85 54 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x1ac], 0xfffffff6
0x8049ac9:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x8049ad0:   c6 85 53 fe ff ff b8            	mov byte ptr [ebp - 0x1ad], 0xb8
0x8049ad7:   c7 85 4c fe ff ff 3d 3d e9 4e   	mov dword ptr [ebp - 0x1b4], 0x4ee93d3d
0x8049ae1:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049ae7:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x8049aed:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x8049af4:   74 07                           	je 0x8049afd <func_1+0x204>
0x8049af6:   b8 01 00 00 00                  	mov eax, 1
0x8049afb:   eb 05                           	jmp 0x8049b02 <func_1+0x209>
0x8049afd:   b8 00 00 00 00                  	mov eax, 0
0x8049b02:   83 f8 f9                        	cmp eax, -7
0x8049b05:   66 c7 45 ea 37 02               	mov word ptr [ebp - 0x16], 0x237
0x8049b0b:   c7 85 48 fe ff ff 3f d8 58 66   	mov dword ptr [ebp - 0x1b8], 0x6658d83f
0x8049b15:   66 c7 85 46 fe ff ff fc ff      	mov word ptr [ebp - 0x1ba], 0xfffc
0x8049b1e:   c6 45 e9 fe                     	mov byte ptr [ebp - 0x17], 0xfe
0x8049b22:   c7 85 40 fe ff ff 22 4b 04 2c   	mov dword ptr [ebp - 0x1c0], 0x2c044b22
0x8049b2c:   c6 85 3f fe ff ff 00            	mov byte ptr [ebp - 0x1c1], 0
0x8049b33:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049b39:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x8049b3c:   89 c2                           	mov edx, eax
0x8049b3e:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049b44:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049b48:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049b4c:   39 c2                           	cmp edx, eax
0x8049b4e:   0f 9c c0                        	setl al
0x8049b51:   0f b6 c0                        	movzx eax, al
0x8049b54:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049b5a:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049b61:   0f 95 c0                        	setne al
0x8049b64:   0f b6 c0                        	movzx eax, al
0x8049b67:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x8049b6d:   83 bd 54 ff ff ff 01            	cmp dword ptr [ebp - 0xac], 1
0x8049b74:   0f 95 c0                        	setne al
0x8049b77:   0f b6 c0                        	movzx eax, al
0x8049b7a:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049b80:   0f 95 c0                        	setne al
0x8049b83:   89 c2                           	mov edx, eax
0x8049b85:   8b 85 54 fe ff ff               	mov eax, dword ptr [ebp - 0x1ac]
0x8049b8b:   29 c2                           	sub edx, eax
0x8049b8d:   89 d0                           	mov eax, edx
0x8049b8f:   0f b6 c0                        	movzx eax, al
0x8049b92:   c1 e0 07                        	shl eax, 7
0x8049b95:   0d 41 b4 00 00                  	or eax, 0xb441
0x8049b9a:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049ba0:   0f 9e c0                        	setle al
0x8049ba3:   0f b6 d0                        	movzx edx, al
0x8049ba6:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049baa:   39 c2                           	cmp edx, eax
0x8049bac:   0f 9c c0                        	setl al
0x8049baf:   0f b6 d0                        	movzx edx, al
0x8049bb2:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049bb8:   98                              	cwde 
0x8049bb9:   89 c1                           	mov ecx, eax
0x8049bbb:   d3 fa                           	sar edx, cl
0x8049bbd:   89 d0                           	mov eax, edx
0x8049bbf:   85 c0                           	test eax, eax
0x8049bc1:   0f 84 fc 02 00 00               	je 0x8049ec3 <func_1+0x5ca>
0x8049bc7:   c6 85 3e fe ff ff bf            	mov byte ptr [ebp - 0x1c2], 0xbf
0x8049bce:   c7 85 38 fe ff ff 3b b9 aa 3f   	mov dword ptr [ebp - 0x1c8], 0x3faab93b
0x8049bd8:   c7 85 48 fe ff ff 1b 00 00 00   	mov dword ptr [ebp - 0x1b8], 0x1b
0x8049be2:   83 bd 48 fe ff ff 06            	cmp dword ptr [ebp - 0x1b8], 6
0x8049be9:   0f 84 6f 01 00 00               	je 0x8049d5e <func_1+0x465>
0x8049bef:   c6 85 2f fe ff ff 01            	mov byte ptr [ebp - 0x1d1], 1
0x8049bf6:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x8049bfd:   0f be 95 47 ff ff ff            	movsx edx, byte ptr [ebp - 0xb9]
0x8049c04:   0f b7 4d b0                     	movzx ecx, word ptr [ebp - 0x50]
0x8049c08:   0f b6 5d b3                     	movzx ebx, byte ptr [ebp - 0x4d]
0x8049c0c:   0f bf 75 be                     	movsx esi, word ptr [ebp - 0x42]
0x8049c10:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x8049c14:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x8049c1a:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x8049c1e:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x8049c24:   0f b6 bd 7e ff ff ff            	movzx edi, byte ptr [ebp - 0x82]
0x8049c2b:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x8049c31:   0f b7 bd 4c ff ff ff            	movzx edi, word ptr [ebp - 0xb4]
0x8049c38:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x8049c3e:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x8049c42:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x8049c48:   0f be bd 7f ff ff ff            	movsx edi, byte ptr [ebp - 0x81]
0x8049c4f:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x8049c55:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x8049c59:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x8049c5f:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x8049c63:   89 bd 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], edi
0x8049c69:   0f b7 7d 8e                     	movzx edi, word ptr [ebp - 0x72]
0x8049c6d:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x8049c73:   0f b6 7d 9a                     	movzx edi, byte ptr [ebp - 0x66]
0x8049c77:   89 bd fc fd ff ff               	mov dword ptr [ebp - 0x204], edi
0x8049c7d:   0f be 7d 9b                     	movsx edi, byte ptr [ebp - 0x65]
0x8049c81:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x8049c87:   0f be 7d aa                     	movsx edi, byte ptr [ebp - 0x56]
0x8049c8b:   89 bd f4 fd ff ff               	mov dword ptr [ebp - 0x20c], edi
0x8049c91:   0f b6 7d ab                     	movzx edi, byte ptr [ebp - 0x55]
0x8049c95:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x8049c9b:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x8049ca2:   50                              	push eax
0x8049ca3:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x8049ca9:   52                              	push edx
0x8049caa:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049cad:   51                              	push ecx
0x8049cae:   53                              	push ebx
0x8049caf:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049cb2:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049cb5:   56                              	push esi
0x8049cb6:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049cb9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049cbc:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049cbf:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049cc2:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x8049cc8:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x8049cce:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x8049cd4:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x8049cda:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x8049ce0:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ce3:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x8049ce9:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049cec:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x8049cf2:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049cf5:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x8049cfb:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x8049d01:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x8049d07:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049d0a:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049d0d:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x8049d13:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x8049d19:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049d1c:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049d1f:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049d22:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x8049d28:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x8049d2e:   57                              	push edi
0x8049d2f:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049d35:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x8049d3b:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049d41:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049d47:   e8 da f8 ff ff                  	call 0x8049626 <set_var>
0x8049d4c:   81 c4 a0 00 00 00               	add esp, 0xa0
0x8049d52:   0f b6 85 2f fe ff ff            	movzx eax, byte ptr [ebp - 0x1d1]
0x8049d59:   e9 40 12 00 00                  	jmp 0x804af9e <func_1+0x16a5>
0x8049d5e:   66 c7 45 ea 06 00               	mov word ptr [ebp - 0x16], 6
0x8049d64:   e9 ee 00 00 00                  	jmp 0x8049e57 <func_1+0x55e>
0x8049d69:   66 c7 85 36 fe ff ff f2 f7      	mov word ptr [ebp - 0x1ca], 0xf7f2
0x8049d72:   c7 85 30 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x1d0], 0
0x8049d7c:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x8049d83:   66 33 85 46 fe ff ff            	xor ax, word ptr [ebp - 0x1ba]
0x8049d8a:   66 89 85 4e ff ff ff            	mov word ptr [ebp - 0xb2], ax
0x8049d91:   8b 85 54 fe ff ff               	mov eax, dword ptr [ebp - 0x1ac]
0x8049d97:   0f b7 d0                        	movzx edx, ax
0x8049d9a:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049da0:   0f b7 c0                        	movzx eax, ax
0x8049da3:   0f af c2                        	imul eax, edx
0x8049da6:   35 e7 bb 00 00                  	xor eax, 0xbbe7
0x8049dab:   0f b7 95 3c ff ff ff            	movzx edx, word ptr [ebp - 0xc4]
0x8049db2:   0f b7 d2                        	movzx edx, dx
0x8049db5:   f7 da                           	neg edx
0x8049db7:   89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x8049dba:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049dbd:   0f b7 da                        	movzx ebx, dx
0x8049dc0:   21 85 38 ff ff ff               	and dword ptr [ebp - 0xc8], eax
0x8049dc6:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049dcc:   0f be c0                        	movsx eax, al
0x8049dcf:   0f b6 95 3e fe ff ff            	movzx edx, byte ptr [ebp - 0x1c2]
0x8049dd6:   0f be f2                        	movsx esi, dl
0x8049dd9:   99                              	cdq 
0x8049dda:   f7 fe                           	idiv esi
0x8049ddc:   0f b7 c0                        	movzx eax, ax
0x8049ddf:   89 c1                           	mov ecx, eax
0x8049de1:   d3 fb                           	sar ebx, cl
0x8049de3:   89 d8                           	mov eax, ebx
0x8049de5:   c0 e8 03                        	shr al, 3
0x8049de8:   0f b6 c0                        	movzx eax, al
0x8049deb:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049df1:   0f 9f c0                        	setg al
0x8049df4:   88 45 ab                        	mov byte ptr [ebp - 0x55], al
0x8049df7:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x8049dfb:   89 85 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], eax
0x8049e01:   0f b6 85 3e fe ff ff            	movzx eax, byte ptr [ebp - 0x1c2]
0x8049e08:   89 85 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], eax
0x8049e0e:   80 7d ab 00                     	cmp byte ptr [ebp - 0x55], 0
0x8049e12:   75 07                           	jne 0x8049e1b <func_1+0x522>
0x8049e14:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x8049e1b:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049e1f:   39 85 30 fe ff ff               	cmp dword ptr [ebp - 0x1d0], eax
0x8049e25:   0f 95 c0                        	setne al
0x8049e28:   0f b6 c0                        	movzx eax, al
0x8049e2b:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x8049e31:   31 d0                           	xor eax, edx
0x8049e33:   0f bf d0                        	movsx edx, ax
0x8049e36:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049e3c:   98                              	cwde 
0x8049e3d:   01 d0                           	add eax, edx
0x8049e3f:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049e45:   83 8d 5c ff ff ff 01            	or dword ptr [ebp - 0xa4], 1
0x8049e4c:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049e50:   83 c0 06                        	add eax, 6
0x8049e53:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049e57:   66 83 7d ea 0c                  	cmp word ptr [ebp - 0x16], 0xc
0x8049e5c:   0f 8e 07 ff ff ff               	jle 0x8049d69 <func_1+0x470>
0x8049e62:   c6 45 e9 16                     	mov byte ptr [ebp - 0x17], 0x16
0x8049e66:   eb 14                           	jmp 0x8049e7c <func_1+0x583>
0x8049e68:   c7 85 58 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xa8], 0xfffffff6
0x8049e72:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049e76:   83 c0 01                        	add eax, 1
0x8049e79:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049e7c:   80 7d e9 21                     	cmp byte ptr [ebp - 0x17], 0x21
0x8049e80:   77 e6                           	ja 0x8049e68 <func_1+0x56f>
0x8049e82:   0f be 55 aa                     	movsx edx, byte ptr [ebp - 0x56]
0x8049e86:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x8049e8a:   39 c2                           	cmp edx, eax
0x8049e8c:   0f 9f c0                        	setg al
0x8049e8f:   0f b6 d0                        	movzx edx, al
0x8049e92:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x8049e96:   01 d0                           	add eax, edx
0x8049e98:   85 c0                           	test eax, eax
0x8049e9a:   74 0d                           	je 0x8049ea9 <func_1+0x5b0>
0x8049e9c:   80 7d ab 00                     	cmp byte ptr [ebp - 0x55], 0
0x8049ea0:   74 07                           	je 0x8049ea9 <func_1+0x5b0>
0x8049ea2:   b8 01 00 00 00                  	mov eax, 1
0x8049ea7:   eb 05                           	jmp 0x8049eae <func_1+0x5b5>
0x8049ea9:   b8 00 00 00 00                  	mov eax, 0
0x8049eae:   98                              	cwde 
0x8049eaf:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x8049eb2:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049eb5:   0f be c0                        	movsx eax, al
0x8049eb8:   6b c0 f6                        	imul eax, eax, -0xa
0x8049ebb:   89 85 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], eax
0x8049ec1:   eb 39                           	jmp 0x8049efc <func_1+0x603>
0x8049ec3:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ec6:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049ecc:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049ed2:   3b 85 50 ff ff ff               	cmp eax, dword ptr [ebp - 0xb0]
0x8049ed8:   0f 9e c0                        	setle al
0x8049edb:   88 45 ab                        	mov byte ptr [ebp - 0x55], al
0x8049ede:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x8049ee2:   0f bf 85 46 fe ff ff            	movsx eax, word ptr [ebp - 0x1ba]
0x8049ee9:   09 d0                           	or eax, edx
0x8049eeb:   3d 84 99 0a fc                  	cmp eax, 0xfc0a9984
0x8049ef0:   0f 96 c0                        	setbe al
0x8049ef3:   0f b6 c0                        	movzx eax, al
0x8049ef6:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049efc:   c7 85 40 fe ff ff 7d 11 00 00   	mov dword ptr [ebp - 0x1c0], 0x117d
0x8049f06:   8b 85 40 fe ff ff               	mov eax, dword ptr [ebp - 0x1c0]
0x8049f0c:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x8049f12:   66 83 bd 46 fe ff ff 08         	cmp word ptr [ebp - 0x1ba], 8
0x8049f1a:   0f 94 c0                        	sete al
0x8049f1d:   0f b6 c0                        	movzx eax, al
0x8049f20:   98                              	cwde 
0x8049f21:   8d 90 58 87 ff ff               	lea edx, [eax - 0x78a8]
0x8049f27:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x8049f2e:   39 c2                           	cmp edx, eax
0x8049f30:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049f33:   25 d5 bb 00 00                  	and eax, 0xbbd5
0x8049f38:   08 85 3f fe ff ff               	or byte ptr [ebp - 0x1c1], al
0x8049f3e:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049f41:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x8049f44:   83 85 50 ff ff ff 02            	add dword ptr [ebp - 0xb0], 2
0x8049f4b:   83 bd 50 ff ff ff 01            	cmp dword ptr [ebp - 0xb0], 1
0x8049f52:   0f 8e 5d fb ff ff               	jle 0x8049ab5 <func_1+0x1bc>
0x8049f58:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049f5e:   0f be c0                        	movsx eax, al
0x8049f61:   83 e0 01                        	and eax, 1
0x8049f64:   89 c2                           	mov edx, eax
0x8049f66:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049f6c:   0f be c0                        	movsx eax, al
0x8049f6f:   01 d0                           	add eax, edx
0x8049f71:   83 f8 09                        	cmp eax, 9
0x8049f74:   0f 9e c0                        	setle al
0x8049f77:   0f b6 c0                        	movzx eax, al
0x8049f7a:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x8049f80:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049f83:   0f be c0                        	movsx eax, al
0x8049f86:   ba f1 ff ff ff                  	mov edx, 0xfffffff1
0x8049f8b:   89 c1                           	mov ecx, eax
0x8049f8d:   d3 e2                           	shl edx, cl
0x8049f8f:   89 d0                           	mov eax, edx
0x8049f91:   89 c2                           	mov edx, eax
0x8049f93:   83 fa ff                        	cmp edx, -1
0x8049f96:   0f 93 c0                        	setae al
0x8049f99:   0f b6 c0                        	movzx eax, al
0x8049f9c:   f7 d8                           	neg eax
0x8049f9e:   29 c2                           	sub edx, eax
0x8049fa0:   89 d0                           	mov eax, edx
0x8049fa2:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049fa5:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049fa8:   83 e0 05                        	and eax, 5
0x8049fab:   89 c2                           	mov edx, eax
0x8049fad:   0f be 45 9b                     	movsx eax, byte ptr [ebp - 0x65]
0x8049fb1:   39 c2                           	cmp edx, eax
0x8049fb3:   0f 94 c0                        	sete al
0x8049fb6:   0f b6 c0                        	movzx eax, al
0x8049fb9:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049fbf:   0f 9e c0                        	setle al
0x8049fc2:   0f b6 c0                        	movzx eax, al
0x8049fc5:   31 85 38 ff ff ff               	xor dword ptr [ebp - 0xc8], eax
0x8049fcb:   c7 45 a4 ea ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffea
0x8049fd2:   e9 5b 0e 00 00                  	jmp 0x804ae32 <func_1+0x1539>
0x8049fd7:   c7 85 2c ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xd4], 0xfffffffd
0x8049fe1:   c7 45 e4 9b 61 4f 07            	mov dword ptr [ebp - 0x1c], 0x74f619b
0x8049fe8:   c6 85 2b ff ff ff ce            	mov byte ptr [ebp - 0xd5], 0xce
0x8049fef:   c7 85 24 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffff9
0x8049ff9:   c7 85 20 ff ff ff 03 f3 53 2c   	mov dword ptr [ebp - 0xe0], 0x2c53f303
0x804a003:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x804a00a:   c7 85 1c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe4], 1
0x804a014:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x804a01e:   c6 85 17 ff ff ff 01            	mov byte ptr [ebp - 0xe9], 1
0x804a025:   c7 45 dc f6 ff ff ff            	mov dword ptr [ebp - 0x24], 0xfffffff6
0x804a02c:   c7 85 10 ff ff ff 86 d5 94 8a   	mov dword ptr [ebp - 0xf0], 0x8a94d586
0x804a036:   c7 85 50 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb0], 0
0x804a040:   e9 bc 09 00 00                  	jmp 0x804aa01 <func_1+0x1108>
0x804a045:   66 c7 85 0e ff ff ff f7 ff      	mov word ptr [ebp - 0xf2], 0xfff7
0x804a04e:   c7 85 08 ff ff ff a0 e9 65 71   	mov dword ptr [ebp - 0xf8], 0x7165e9a0
0x804a058:   c7 85 04 ff ff ff fb 49 03 ea   	mov dword ptr [ebp - 0xfc], 0xea0349fb
0x804a062:   c7 85 00 ff ff ff 53 e6 3b 17   	mov dword ptr [ebp - 0x100], 0x173be653
0x804a06c:   c7 85 fc fe ff ff 68 13 2c ee   	mov dword ptr [ebp - 0x104], 0xee2c1368
0x804a076:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x804a080:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x804a08a:   c7 85 f0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x110], 0xffffffff
0x804a094:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x804a09e:   c7 85 e8 fe ff ff a4 e2 99 64   	mov dword ptr [ebp - 0x118], 0x6499e2a4
0x804a0a8:   66 c7 45 8e f0 0c               	mov word ptr [ebp - 0x72], 0xcf0
0x804a0ae:   c7 85 54 ff ff ff f0 0c 00 00   	mov dword ptr [ebp - 0xac], 0xcf0
0x804a0b8:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a0bf:   75 33                           	jne 0x804a0f4 <func_1+0x7fb>
0x804a0c1:   0f b7 8d 0e ff ff ff            	movzx ecx, word ptr [ebp - 0xf2]
0x804a0c8:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a0cc:   8d 50 ff                        	lea edx, [eax - 1]
0x804a0cf:   66 89 55 da                     	mov word ptr [ebp - 0x26], dx
0x804a0d3:   0f b7 c0                        	movzx eax, ax
0x804a0d6:   8d 50 01                        	lea edx, [eax + 1]
0x804a0d9:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a0df:   83 f8 05                        	cmp eax, 5
0x804a0e2:   0f 96 c0                        	setbe al
0x804a0e5:   0f b6 c0                        	movzx eax, al
0x804a0e8:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a0eb:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a0ee:   21 d0                           	and eax, edx
0x804a0f0:   39 c1                           	cmp ecx, eax
0x804a0f2:   74 07                           	je 0x804a0fb <func_1+0x802>
0x804a0f4:   b8 01 00 00 00                  	mov eax, 1
0x804a0f9:   eb 05                           	jmp 0x804a100 <func_1+0x807>
0x804a0fb:   b8 00 00 00 00                  	mov eax, 0
0x804a100:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a106:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804a10d:   0f 84 9f 00 00 00               	je 0x804a1b2 <func_1+0x8b9>
0x804a113:   c7 85 c8 fe ff ff 71 9c 12 98   	mov dword ptr [ebp - 0x138], 0x98129c71
0x804a11d:   0f bf 85 3c ff ff ff            	movsx eax, word ptr [ebp - 0xc4]
0x804a124:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a127:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a12a:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a130:   80 7d aa 00                     	cmp byte ptr [ebp - 0x56], 0
0x804a134:   74 30                           	je 0x804a166 <func_1+0x86d>
0x804a136:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a13c:   31 45 80                        	xor dword ptr [ebp - 0x80], eax
0x804a13f:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a142:   3b 85 c8 fe ff ff               	cmp eax, dword ptr [ebp - 0x138]
0x804a148:   74 0e                           	je 0x804a158 <func_1+0x85f>
0x804a14a:   66 83 7d 8a 00                  	cmp word ptr [ebp - 0x76], 0
0x804a14f:   74 07                           	je 0x804a158 <func_1+0x85f>
0x804a151:   b8 01 00 00 00                  	mov eax, 1
0x804a156:   eb 05                           	jmp 0x804a15d <func_1+0x864>
0x804a158:   b8 00 00 00 00                  	mov eax, 0
0x804a15d:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x804a160:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a166:   c6 45 9a 19                     	mov byte ptr [ebp - 0x66], 0x19
0x804a16a:   0f b6 45 9a                     	movzx eax, byte ptr [ebp - 0x66]
0x804a16e:   23 85 2c ff ff ff               	and eax, dword ptr [ebp - 0xd4]
0x804a174:   85 c0                           	test eax, eax
0x804a176:   0f 94 c0                        	sete al
0x804a179:   0f b6 d0                        	movzx edx, al
0x804a17c:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x804a180:   98                              	cwde 
0x804a181:   01 d0                           	add eax, edx
0x804a183:   33 85 38 ff ff ff               	xor eax, dword ptr [ebp - 0xc8]
0x804a189:   0d 0e da 00 00                  	or eax, 0xda0e
0x804a18e:   8b 4d a4                        	mov ecx, dword ptr [ebp - 0x5c]
0x804a191:   ba 00 00 00 00                  	mov edx, 0
0x804a196:   f7 f1                           	div ecx
0x804a198:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a19b:   21 d0                           	and eax, edx
0x804a19d:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a1a0:   80 bd 6b ff ff ff 00            	cmp byte ptr [ebp - 0x95], 0
0x804a1a7:   0f 84 c0 02 00 00               	je 0x804a46d <func_1+0xb74>
0x804a1ad:   e9 a4 02 00 00                  	jmp 0x804a456 <func_1+0xb5d>
0x804a1b2:   c6 85 e7 fe ff ff e8            	mov byte ptr [ebp - 0x119], 0xe8
0x804a1b9:   c7 85 e0 fe ff ff c5 e3 62 ca   	mov dword ptr [ebp - 0x120], 0xca62e3c5
0x804a1c3:   c7 85 dc fe ff ff 9f ab 24 c5   	mov dword ptr [ebp - 0x124], 0xc524ab9f
0x804a1cd:   83 75 84 01                     	xor dword ptr [ebp - 0x7c], 1
0x804a1d1:   c6 85 db fe ff ff 94            	mov byte ptr [ebp - 0x125], 0x94
0x804a1d8:   c7 85 d4 fe ff ff c6 bc 2d c2   	mov dword ptr [ebp - 0x12c], 0xc22dbcc6
0x804a1e2:   c6 85 d3 fe ff ff 28            	mov byte ptr [ebp - 0x12d], 0x28
0x804a1e9:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a1f0:   98                              	cwde 
0x804a1f1:   0f b7 55 8e                     	movzx edx, word ptr [ebp - 0x72]
0x804a1f5:   0f bf f2                        	movsx esi, dx
0x804a1f8:   99                              	cdq 
0x804a1f9:   f7 fe                           	idiv esi
0x804a1fb:   66 89 85 4c ff ff ff            	mov word ptr [ebp - 0xb4], ax
0x804a202:   66 c7 85 d0 fe ff ff 04 00      	mov word ptr [ebp - 0x130], 4
0x804a20b:   c7 85 cc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x134], 0
0x804a215:   66 83 ad d0 fe ff ff 01         	sub word ptr [ebp - 0x130], 1
0x804a21d:   0f b6 95 e7 fe ff ff            	movzx edx, byte ptr [ebp - 0x119]
0x804a224:   0f be 85 7f ff ff ff            	movsx eax, byte ptr [ebp - 0x81]
0x804a22b:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804a231:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a237:   0f b7 c0                        	movzx eax, ax
0x804a23a:   89 c1                           	mov ecx, eax
0x804a23c:   d3 e2                           	shl edx, cl
0x804a23e:   0f b6 85 e7 fe ff ff            	movzx eax, byte ptr [ebp - 0x119]
0x804a245:   89 d1                           	mov ecx, edx
0x804a247:   09 c1                           	or ecx, eax
0x804a249:   ba 56 55 55 55                  	mov edx, 0x55555556
0x804a24e:   89 c8                           	mov eax, ecx
0x804a250:   f7 ea                           	imul edx
0x804a252:   89 c8                           	mov eax, ecx
0x804a254:   c1 f8 1f                        	sar eax, 0x1f
0x804a257:   29 c2                           	sub edx, eax
0x804a259:   89 d0                           	mov eax, edx
0x804a25b:   01 c0                           	add eax, eax
0x804a25d:   01 d0                           	add eax, edx
0x804a25f:   29 c1                           	sub ecx, eax
0x804a261:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a265:   75 05                           	jne 0x804a26c <func_1+0x973>
0x804a267:   66 83 7d 8e 00                  	cmp word ptr [ebp - 0x72], 0
0x804a26c:   0f b6 45 9b                     	movzx eax, byte ptr [ebp - 0x65]
0x804a270:   83 c8 06                        	or eax, 6
0x804a273:   0f be d0                        	movsx edx, al
0x804a276:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a27c:   09 d0                           	or eax, edx
0x804a27e:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a284:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a28a:   0f b6 c0                        	movzx eax, al
0x804a28d:   c1 f8 06                        	sar eax, 6
0x804a290:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a296:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a29d:   0f bf f0                        	movsx esi, ax
0x804a2a0:   b8 fe ff ff ff                  	mov eax, 0xfffffffe
0x804a2a5:   99                              	cdq 
0x804a2a6:   f7 fe                           	idiv esi
0x804a2a8:   89 c2                           	mov edx, eax
0x804a2aa:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804a2b1:   39 c2                           	cmp edx, eax
0x804a2b3:   7c 0d                           	jl 0x804a2c2 <func_1+0x9c9>
0x804a2b5:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a2b9:   74 07                           	je 0x804a2c2 <func_1+0x9c9>
0x804a2bb:   b8 01 00 00 00                  	mov eax, 1
0x804a2c0:   eb 05                           	jmp 0x804a2c7 <func_1+0x9ce>
0x804a2c2:   b8 00 00 00 00                  	mov eax, 0
0x804a2c7:   89 c1                           	mov ecx, eax
0x804a2c9:   ba 25 49 92 24                  	mov edx, 0x24924925
0x804a2ce:   89 c8                           	mov eax, ecx
0x804a2d0:   f7 e2                           	mul edx
0x804a2d2:   89 c8                           	mov eax, ecx
0x804a2d4:   29 d0                           	sub eax, edx
0x804a2d6:   d1 e8                           	shr eax, 1
0x804a2d8:   01 d0                           	add eax, edx
0x804a2da:   c1 e8 02                        	shr eax, 2
0x804a2dd:   0f be d0                        	movsx edx, al
0x804a2e0:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a2e3:   0f be c0                        	movsx eax, al
0x804a2e6:   01 d0                           	add eax, edx
0x804a2e8:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a2ee:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a2f5:   0f be 95 47 ff ff ff            	movsx edx, byte ptr [ebp - 0xb9]
0x804a2fc:   0f b7 4d b0                     	movzx ecx, word ptr [ebp - 0x50]
0x804a300:   0f b6 5d b3                     	movzx ebx, byte ptr [ebp - 0x4d]
0x804a304:   0f bf 75 be                     	movsx esi, word ptr [ebp - 0x42]
0x804a308:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x804a30c:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x804a312:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804a316:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x804a31c:   0f b6 bd 7e ff ff ff            	movzx edi, byte ptr [ebp - 0x82]
0x804a323:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x804a329:   0f b7 bd 4c ff ff ff            	movzx edi, word ptr [ebp - 0xb4]
0x804a330:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x804a336:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a33a:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x804a340:   0f be bd 7f ff ff ff            	movsx edi, byte ptr [ebp - 0x81]
0x804a347:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x804a34d:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804a351:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x804a357:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a35b:   89 bd 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], edi
0x804a361:   0f b7 7d 8e                     	movzx edi, word ptr [ebp - 0x72]
0x804a365:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804a36b:   0f b6 7d 9a                     	movzx edi, byte ptr [ebp - 0x66]
0x804a36f:   89 bd fc fd ff ff               	mov dword ptr [ebp - 0x204], edi
0x804a375:   0f be 7d 9b                     	movsx edi, byte ptr [ebp - 0x65]
0x804a379:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804a37f:   0f be 7d aa                     	movsx edi, byte ptr [ebp - 0x56]
0x804a383:   89 bd f4 fd ff ff               	mov dword ptr [ebp - 0x20c], edi
0x804a389:   0f b6 7d ab                     	movzx edi, byte ptr [ebp - 0x55]
0x804a38d:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804a393:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x804a39a:   50                              	push eax
0x804a39b:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a3a1:   52                              	push edx
0x804a3a2:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a3a5:   51                              	push ecx
0x804a3a6:   53                              	push ebx
0x804a3a7:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3aa:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a3ad:   56                              	push esi
0x804a3ae:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a3b1:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a3b4:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a3b7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a3ba:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x804a3c0:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x804a3c6:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x804a3cc:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a3d2:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x804a3d8:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3db:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a3e1:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a3e4:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a3ea:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a3ed:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a3f3:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804a3f9:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804a3ff:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a402:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a405:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804a40b:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804a411:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a414:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a417:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a41a:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804a420:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804a426:   57                              	push edi
0x804a427:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a42d:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a433:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a439:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a43f:   e8 e2 f1 ff ff                  	call 0x8049626 <set_var>
0x804a444:   81 c4 a0 00 00 00               	add esp, 0xa0
0x804a44a:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a451:   e9 48 0b 00 00                  	jmp 0x804af9e <func_1+0x16a5>
0x804a456:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a45d:   20 45 d1                        	and byte ptr [ebp - 0x2f], al
0x804a460:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a464:   74 07                           	je 0x804a46d <func_1+0xb74>
0x804a466:   b8 01 00 00 00                  	mov eax, 1
0x804a46b:   eb 05                           	jmp 0x804a472 <func_1+0xb79>
0x804a46d:   b8 00 00 00 00                  	mov eax, 0
0x804a472:   98                              	cwde 
0x804a473:   c1 e0 03                        	shl eax, 3
0x804a476:   85 c0                           	test eax, eax
0x804a478:   0f 84 0a 02 00 00               	je 0x804a688 <func_1+0xd8f>
0x804a47e:   c7 85 c4 fe ff ff 90 a0 e3 ba   	mov dword ptr [ebp - 0x13c], 0xbae3a090
0x804a488:   c7 85 c0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x140], 0xffffffff
0x804a492:   c7 85 bc fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x144], 9
0x804a49c:   c7 85 b8 fe ff ff 86 46 40 8b   	mov dword ptr [ebp - 0x148], 0x8b404686
0x804a4a6:   80 bd 2b ff ff ff 00            	cmp byte ptr [ebp - 0xd5], 0
0x804a4ad:   0f 85 5d 05 00 00               	jne 0x804aa10 <func_1+0x1117>
0x804a4b3:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a4ba:   0f 84 75 01 00 00               	je 0x804a635 <func_1+0xd3c>
0x804a4c0:   c6 85 b3 fe ff ff 19            	mov byte ptr [ebp - 0x14d], 0x19
0x804a4c7:   c7 45 84 04 00 00 00            	mov dword ptr [ebp - 0x7c], 4
0x804a4ce:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a4d5:   0f be 95 47 ff ff ff            	movsx edx, byte ptr [ebp - 0xb9]
0x804a4dc:   0f b7 4d b0                     	movzx ecx, word ptr [ebp - 0x50]
0x804a4e0:   0f b6 5d b3                     	movzx ebx, byte ptr [ebp - 0x4d]
0x804a4e4:   0f bf 75 be                     	movsx esi, word ptr [ebp - 0x42]
0x804a4e8:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x804a4ec:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x804a4f2:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804a4f6:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x804a4fc:   0f b6 bd 7e ff ff ff            	movzx edi, byte ptr [ebp - 0x82]
0x804a503:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x804a509:   0f b7 bd 4c ff ff ff            	movzx edi, word ptr [ebp - 0xb4]
0x804a510:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x804a516:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804a51a:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x804a520:   0f be bd 7f ff ff ff            	movsx edi, byte ptr [ebp - 0x81]
0x804a527:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x804a52d:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804a531:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x804a537:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804a53b:   89 bd 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], edi
0x804a541:   0f b7 7d 8e                     	movzx edi, word ptr [ebp - 0x72]
0x804a545:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804a54b:   0f b6 7d 9a                     	movzx edi, byte ptr [ebp - 0x66]
0x804a54f:   89 bd fc fd ff ff               	mov dword ptr [ebp - 0x204], edi
0x804a555:   0f be 7d 9b                     	movsx edi, byte ptr [ebp - 0x65]
0x804a559:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804a55f:   0f be 7d aa                     	movsx edi, byte ptr [ebp - 0x56]
0x804a563:   89 bd f4 fd ff ff               	mov dword ptr [ebp - 0x20c], edi
0x804a569:   0f b6 7d ab                     	movzx edi, byte ptr [ebp - 0x55]
0x804a56d:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804a573:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x804a57a:   50                              	push eax
0x804a57b:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a581:   52                              	push edx
0x804a582:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a585:   51                              	push ecx
0x804a586:   53                              	push ebx
0x804a587:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a58a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a58d:   56                              	push esi
0x804a58e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a591:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a594:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a597:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a59a:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x804a5a0:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x804a5a6:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x804a5ac:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a5b2:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x804a5b8:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a5bb:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a5c1:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a5c4:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a5ca:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a5cd:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a5d3:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804a5d9:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804a5df:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a5e2:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a5e5:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804a5eb:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804a5f1:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a5f4:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a5f7:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a5fa:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804a600:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804a606:   57                              	push edi
0x804a607:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a60d:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a613:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a619:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a61f:   e8 02 f0 ff ff                  	call 0x8049626 <set_var>
0x804a624:   81 c4 a0 00 00 00               	add esp, 0xa0
0x804a62a:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a630:   e9 69 09 00 00                  	jmp 0x804af9e <func_1+0x16a5>
0x804a635:   c7 85 b4 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x14c], 0xfffffffe
0x804a63f:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a646:   21 85 00 ff ff ff               	and dword ptr [ebp - 0x100], eax
0x804a64c:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a652:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a655:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x804a659:   c7 45 f0 0c 00 00 00            	mov dword ptr [ebp - 0x10], 0xc
0x804a660:   eb 0c                           	jmp 0x804a66e <func_1+0xd75>
0x804a662:   83 6d b4 01                     	sub dword ptr [ebp - 0x4c], 1
0x804a666:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a66a:   83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x804a66e:   83 7d f0 e3                     	cmp dword ptr [ebp - 0x10], -0x1d
0x804a672:   7d ee                           	jge 0x804a662 <func_1+0xd69>
0x804a674:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804a678:   8d 50 ff                        	lea edx, [eax - 1]
0x804a67b:   88 55 ab                        	mov byte ptr [ebp - 0x55], dl
0x804a67e:   0f b6 c0                        	movzx eax, al
0x804a681:   f7 d8                           	neg eax
0x804a683:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a686:   eb 7c                           	jmp 0x804a704 <func_1+0xe0b>
0x804a688:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a68f:   0b 45 d4                        	or eax, dword ptr [ebp - 0x2c]
0x804a692:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a698:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x804a6a2:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a6a6:   0f 85 67 03 00 00               	jne 0x804aa13 <func_1+0x111a>
0x804a6ac:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a6af:   89 c3                           	mov ebx, eax
0x804a6b1:   0f b7 75 be                     	movzx esi, word ptr [ebp - 0x42]
0x804a6b5:   0f b7 85 0e ff ff ff            	movzx eax, word ptr [ebp - 0xf2]
0x804a6bc:   ba 00 00 00 00                  	mov edx, 0
0x804a6c1:   66 f7 f6                        	div si
0x804a6c4:   0f b7 c0                        	movzx eax, ax
0x804a6c7:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a6cd:   0f 94 c0                        	sete al
0x804a6d0:   0f b6 c0                        	movzx eax, al
0x804a6d3:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x804a6d9:   0f 9c c0                        	setl al
0x804a6dc:   0f b6 c0                        	movzx eax, al
0x804a6df:   0f b6 4d ab                     	movzx ecx, byte ptr [ebp - 0x55]
0x804a6e3:   99                              	cdq 
0x804a6e4:   f7 f9                           	idiv ecx
0x804a6e6:   89 d0                           	mov eax, edx
0x804a6e8:   38 c3                           	cmp bl, al
0x804a6ea:   74 0d                           	je 0x804a6f9 <func_1+0xe00>
0x804a6ec:   80 7d 9b 00                     	cmp byte ptr [ebp - 0x65], 0
0x804a6f0:   74 07                           	je 0x804a6f9 <func_1+0xe00>
0x804a6f2:   b8 01 00 00 00                  	mov eax, 1
0x804a6f7:   eb 05                           	jmp 0x804a6fe <func_1+0xe05>
0x804a6f9:   b8 00 00 00 00                  	mov eax, 0
0x804a6fe:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a704:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a707:   c1 e8 1f                        	shr eax, 0x1f
0x804a70a:   0f b6 d0                        	movzx edx, al
0x804a70d:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a710:   98                              	cwde 
0x804a711:   01 d0                           	add eax, edx
0x804a713:   85 c0                           	test eax, eax
0x804a715:   74 15                           	je 0x804a72c <func_1+0xe33>
0x804a717:   66 c7 85 86 fe ff ff cf e4      	mov word ptr [ebp - 0x17a], 0xe4cf
0x804a720:   83 85 ec fe ff ff 01            	add dword ptr [ebp - 0x114], 1
0x804a727:   e9 ce 02 00 00                  	jmp 0x804a9fa <func_1+0x1101>
0x804a72c:   66 c7 85 b0 fe ff ff a6 bd      	mov word ptr [ebp - 0x150], 0xbda6
0x804a735:   c7 85 ac fe ff ff 0f 2b 2f 6a   	mov dword ptr [ebp - 0x154], 0x6a2f2b0f
0x804a73f:   c6 85 ab fe ff ff 01            	mov byte ptr [ebp - 0x155], 1
0x804a746:   c7 85 a4 fe ff ff 01 1d 9b 4b   	mov dword ptr [ebp - 0x15c], 0x4b9b1d01
0x804a750:   c6 85 a3 fe ff ff fd            	mov byte ptr [ebp - 0x15d], 0xfd
0x804a757:   0f b7 85 b0 fe ff ff            	movzx eax, word ptr [ebp - 0x150]
0x804a75e:   83 f0 01                        	xor eax, 1
0x804a761:   22 85 2b ff ff ff               	and al, byte ptr [ebp - 0xd5]
0x804a767:   0f be c0                        	movsx eax, al
0x804a76a:   ba 29 00 00 00                  	mov edx, 0x29
0x804a76f:   89 c1                           	mov ecx, eax
0x804a771:   d3 fa                           	sar edx, cl
0x804a773:   0f be 45 d1                     	movsx eax, byte ptr [ebp - 0x2f]
0x804a777:   31 c2                           	xor edx, eax
0x804a779:   0f be 45 8d                     	movsx eax, byte ptr [ebp - 0x73]
0x804a77d:   39 c2                           	cmp edx, eax
0x804a77f:   0f 9d c0                        	setge al
0x804a782:   0f b6 c0                        	movzx eax, al
0x804a785:   66 09 45 d2                     	or word ptr [ebp - 0x2e], ax
0x804a789:   80 bd 2b ff ff ff 00            	cmp byte ptr [ebp - 0xd5], 0
0x804a790:   0f 95 c0                        	setne al
0x804a793:   0f b6 c0                        	movzx eax, al
0x804a796:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a79c:   0f 84 c7 00 00 00               	je 0x804a869 <func_1+0xf70>
0x804a7a2:   c7 85 94 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x16c], 3
0x804a7ac:   66 c7 85 92 fe ff ff 39 67      	mov word ptr [ebp - 0x16e], 0x6739
0x804a7b5:   c6 85 91 fe ff ff 04            	mov byte ptr [ebp - 0x16f], 4
0x804a7bc:   c7 85 8c fe ff ff 71 c7 5c 16   	mov dword ptr [ebp - 0x174], 0x165cc771
0x804a7c6:   c7 85 88 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x178], 0
0x804a7d0:   0f b6 95 91 fe ff ff            	movzx edx, byte ptr [ebp - 0x16f]
0x804a7d7:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a7db:   8d 48 ff                        	lea ecx, [eax - 1]
0x804a7de:   66 89 4d da                     	mov word ptr [ebp - 0x26], cx
0x804a7e2:   0f bf c8                        	movsx ecx, ax
0x804a7e5:   89 d0                           	mov eax, edx
0x804a7e7:   99                              	cdq 
0x804a7e8:   f7 f9                           	idiv ecx
0x804a7ea:   0f b7 85 b0 fe ff ff            	movzx eax, word ptr [ebp - 0x150]
0x804a7f1:   88 45 b3                        	mov byte ptr [ebp - 0x4d], al
0x804a7f4:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a7f8:   89 d1                           	mov ecx, edx
0x804a7fa:   09 c1                           	or ecx, eax
0x804a7fc:   0f b7 95 b0 fe ff ff            	movzx edx, word ptr [ebp - 0x150]
0x804a803:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x804a80a:   0f 95 c0                        	setne al
0x804a80d:   0f b6 c0                        	movzx eax, al
0x804a810:   39 c2                           	cmp edx, eax
0x804a812:   0f 9e c0                        	setle al
0x804a815:   0f b6 c0                        	movzx eax, al
0x804a818:   0f be 9d ab fe ff ff            	movsx ebx, byte ptr [ebp - 0x155]
0x804a81f:   99                              	cdq 
0x804a820:   f7 fb                           	idiv ebx
0x804a822:   c0 e8 03                        	shr al, 3
0x804a825:   0f b6 c0                        	movzx eax, al
0x804a828:   39 c1                           	cmp ecx, eax
0x804a82a:   0f 9d c0                        	setge al
0x804a82d:   0f b6 c0                        	movzx eax, al
0x804a830:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a836:   66 83 bd 92 fe ff ff 00         	cmp word ptr [ebp - 0x16e], 0
0x804a83e:   0f 85 b5 01 00 00               	jne 0x804a9f9 <func_1+0x1100>
0x804a844:   8b 4d 84                        	mov ecx, dword ptr [ebp - 0x7c]
0x804a847:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a84a:   8d 50 ff                        	lea edx, [eax - 1]
0x804a84d:   89 55 ac                        	mov dword ptr [ebp - 0x54], edx
0x804a850:   39 c1                           	cmp ecx, eax
0x804a852:   0f 95 c0                        	setne al
0x804a855:   0f b6 c0                        	movzx eax, al
0x804a858:   0f b6 c0                        	movzx eax, al
0x804a85b:   c1 e0 06                        	shl eax, 6
0x804a85e:   31 85 f4 fe ff ff               	xor dword ptr [ebp - 0x10c], eax
0x804a864:   e9 91 01 00 00                  	jmp 0x804a9fa <func_1+0x1101>
0x804a869:   c7 85 9c fe ff ff e7 d3 20 04   	mov dword ptr [ebp - 0x164], 0x420d3e7
0x804a873:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a877:   0f b6 d8                        	movzx ebx, al
0x804a87a:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a87d:   89 c1                           	mov ecx, eax
0x804a87f:   83 bd 9c fe ff ff 00            	cmp dword ptr [ebp - 0x164], 0
0x804a886:   0f 95 c0                        	setne al
0x804a889:   0f b6 c0                        	movzx eax, al
0x804a88c:   66 89 85 4e ff ff ff            	mov word ptr [ebp - 0xb2], ax
0x804a893:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a899:   89 c6                           	mov esi, eax
0x804a89b:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a8a2:   ba 00 00 00 00                  	mov edx, 0
0x804a8a7:   66 f7 f6                        	div si
0x804a8aa:   29 c1                           	sub ecx, eax
0x804a8ac:   89 c8                           	mov eax, ecx
0x804a8ae:   0f be d0                        	movsx edx, al
0x804a8b1:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804a8b7:   0f be c0                        	movsx eax, al
0x804a8ba:   89 c1                           	mov ecx, eax
0x804a8bc:   d3 fa                           	sar edx, cl
0x804a8be:   89 d0                           	mov eax, edx
0x804a8c0:   0f b6 4d 9a                     	movzx ecx, byte ptr [ebp - 0x66]
0x804a8c4:   99                              	cdq 
0x804a8c5:   f7 f9                           	idiv ecx
0x804a8c7:   89 d0                           	mov eax, edx
0x804a8c9:   0f b6 c0                        	movzx eax, al
0x804a8cc:   8d 14 03                        	lea edx, [ebx + eax]
0x804a8cf:   0f be 85 2b ff ff ff            	movsx eax, byte ptr [ebp - 0xd5]
0x804a8d6:   39 c2                           	cmp edx, eax
0x804a8d8:   0f 94 c0                        	sete al
0x804a8db:   0f b6 d0                        	movzx edx, al
0x804a8de:   0f b7 85 4c ff ff ff            	movzx eax, word ptr [ebp - 0xb4]
0x804a8e5:   01 c2                           	add edx, eax
0x804a8e7:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x804a8ee:   31 d0                           	xor eax, edx
0x804a8f0:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804a8f6:   0f 95 c0                        	setne al
0x804a8f9:   0f b6 c0                        	movzx eax, al
0x804a8fc:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a8ff:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a903:   75 09                           	jne 0x804a90e <func_1+0x1015>
0x804a905:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a90c:   74 07                           	je 0x804a915 <func_1+0x101c>
0x804a90e:   b8 01 00 00 00                  	mov eax, 1
0x804a913:   eb 05                           	jmp 0x804a91a <func_1+0x1021>
0x804a915:   b8 00 00 00 00                  	mov eax, 0
0x804a91a:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a91d:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a920:   0f be c0                        	movsx eax, al
0x804a923:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x804a926:   0f be da                        	movsx ebx, dl
0x804a929:   99                              	cdq 
0x804a92a:   f7 fb                           	idiv ebx
0x804a92c:   83 f8 05                        	cmp eax, 5
0x804a92f:   0f 8e b4 00 00 00               	jle 0x804a9e9 <func_1+0x10f0>
0x804a935:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a93b:   0f be d0                        	movsx edx, al
0x804a93e:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a944:   0f be c0                        	movsx eax, al
0x804a947:   29 c2                           	sub edx, eax
0x804a949:   89 d0                           	mov eax, edx
0x804a94b:   3d 56 69 00 00                  	cmp eax, 0x6956
0x804a950:   83 7d 90 01                     	cmp dword ptr [ebp - 0x70], 1
0x804a954:   0f 95 c0                        	setne al
0x804a957:   0f b6 d0                        	movzx edx, al
0x804a95a:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a95e:   39 c2                           	cmp edx, eax
0x804a960:   0f 94 c0                        	sete al
0x804a963:   0f b6 d0                        	movzx edx, al
0x804a966:   0f b7 85 4c ff ff ff            	movzx eax, word ptr [ebp - 0xb4]
0x804a96d:   31 d0                           	xor eax, edx
0x804a96f:   66 83 f8 f7                     	cmp ax, -9
0x804a973:   0f 93 c0                        	setae al
0x804a976:   0f b6 c0                        	movzx eax, al
0x804a979:   0f b7 d0                        	movzx edx, ax
0x804a97c:   0f be 45 8d                     	movsx eax, byte ptr [ebp - 0x73]
0x804a980:   39 c2                           	cmp edx, eax
0x804a982:   0f 9e c0                        	setle al
0x804a985:   0f b6 c0                        	movzx eax, al
0x804a988:   89 c2                           	mov edx, eax
0x804a98a:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a98d:   89 c1                           	mov ecx, eax
0x804a98f:   89 d0                           	mov eax, edx
0x804a991:   ba 00 00 00 00                  	mov edx, 0
0x804a996:   66 f7 f1                        	div cx
0x804a999:   0f b7 c0                        	movzx eax, ax
0x804a99c:   8b 75 b8                        	mov esi, dword ptr [ebp - 0x48]
0x804a99f:   ba 00 00 00 00                  	mov edx, 0
0x804a9a4:   f7 f6                           	div esi
0x804a9a6:   ba 01 00 00 00                  	mov edx, 1
0x804a9ab:   29 c2                           	sub edx, eax
0x804a9ad:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x804a9b3:   39 c2                           	cmp edx, eax
0x804a9b5:   0f 95 c0                        	setne al
0x804a9b8:   0f b6 d0                        	movzx edx, al
0x804a9bb:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a9be:   98                              	cwde 
0x804a9bf:   0f af c2                        	imul eax, edx
0x804a9c2:   85 c0                           	test eax, eax
0x804a9c4:   75 09                           	jne 0x804a9cf <func_1+0x10d6>
0x804a9c6:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a9cd:   74 07                           	je 0x804a9d6 <func_1+0x10dd>
0x804a9cf:   b8 01 00 00 00                  	mov eax, 1
0x804a9d4:   eb 05                           	jmp 0x804a9db <func_1+0x10e2>
0x804a9d6:   b8 00 00 00 00                  	mov eax, 0
0x804a9db:   83 f8 ff                        	cmp eax, -1
0x804a9de:   0f 9d c0                        	setge al
0x804a9e1:   0f b6 c0                        	movzx eax, al
0x804a9e4:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x804a9e7:   eb 11                           	jmp 0x804a9fa <func_1+0x1101>
0x804a9e9:   c6 85 9b fe ff ff a0            	mov byte ptr [ebp - 0x165], 0xa0
0x804a9f0:   80 8d 9b fe ff ff 01            	or byte ptr [ebp - 0x165], 1
0x804a9f7:   eb 01                           	jmp 0x804a9fa <func_1+0x1101>
0x804a9f9:   90                              	nop 
0x804a9fa:   83 85 50 ff ff ff 01            	add dword ptr [ebp - 0xb0], 1
0x804aa01:   83 bd 50 ff ff ff 0c            	cmp dword ptr [ebp - 0xb0], 0xc
0x804aa08:   0f 8f 37 f6 ff ff               	jg 0x804a045 <func_1+0x74c>
0x804aa0e:   eb 04                           	jmp 0x804aa14 <func_1+0x111b>
0x804aa10:   90                              	nop 
0x804aa11:   eb 01                           	jmp 0x804aa14 <func_1+0x111b>
0x804aa13:   90                              	nop 
0x804aa14:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x804aa1c:   0f 85 0b 04 00 00               	jne 0x804ae2d <func_1+0x1534>
0x804aa22:   c7 45 e4 ff ff ff ff            	mov dword ptr [ebp - 0x1c], 0xffffffff
0x804aa29:   e9 f3 03 00 00                  	jmp 0x804ae21 <func_1+0x1528>
0x804aa2e:   66 c7 85 84 fe ff ff 01 00      	mov word ptr [ebp - 0x17c], 1
0x804aa37:   c7 85 80 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x180], 0xfffffffa
0x804aa41:   c7 85 48 ff ff ff 11 00 00 00   	mov dword ptr [ebp - 0xb8], 0x11
0x804aa4b:   83 bd 48 ff ff ff 09            	cmp dword ptr [ebp - 0xb8], 9
0x804aa52:   0f 85 20 03 00 00               	jne 0x804ad78 <func_1+0x147f>
0x804aa58:   c7 85 7c fe ff ff 42 79 01 1c   	mov dword ptr [ebp - 0x184], 0x1c017942
0x804aa62:   c7 85 78 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x188], 0
0x804aa6c:   c7 85 74 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x18c], 3
0x804aa76:   c7 85 70 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x190], 8
0x804aa80:   81 bd 7c fe ff ff ff 00 00 00   	cmp dword ptr [ebp - 0x184], 0xff
0x804aa8a:   77 72                           	ja 0x804aafe <func_1+0x1205>
0x804aa8c:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804aa92:   0f be c0                        	movsx eax, al
0x804aa95:   83 bd 64 ff ff ff 01            	cmp dword ptr [ebp - 0x9c], 1
0x804aa9c:   0f 94 c2                        	sete dl
0x804aa9f:   89 d1                           	mov ecx, edx
0x804aaa1:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x804aaa8:   29 d1                           	sub ecx, edx
0x804aaaa:   89 ca                           	mov edx, ecx
0x804aaac:   0f be ca                        	movsx ecx, dl
0x804aaaf:   99                              	cdq 
0x804aab0:   f7 f9                           	idiv ecx
0x804aab2:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x804aab9:   39 c2                           	cmp edx, eax
0x804aabb:   0f 9c c0                        	setl al
0x804aabe:   0f b6 c0                        	movzx eax, al
0x804aac1:   31 85 78 fe ff ff               	xor dword ptr [ebp - 0x188], eax
0x804aac7:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804aaca:   0f be c8                        	movsx ecx, al
0x804aacd:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804aad0:   89 c2                           	mov edx, eax
0x804aad2:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x804aad9:   29 c2                           	sub edx, eax
0x804aadb:   89 d0                           	mov eax, edx
0x804aadd:   0f be c0                        	movsx eax, al
0x804aae0:   0f be 5d d1                     	movsx ebx, byte ptr [ebp - 0x2f]
0x804aae4:   99                              	cdq 
0x804aae5:   f7 fb                           	idiv ebx
0x804aae7:   89 d0                           	mov eax, edx
0x804aae9:   c0 f8 03                        	sar al, 3
0x804aaec:   0f be c0                        	movsx eax, al
0x804aaef:   0f af c1                        	imul eax, ecx
0x804aaf2:   66 09 85 84 fe ff ff            	or word ptr [ebp - 0x17c], ax
0x804aaf9:   e9 12 01 00 00                  	jmp 0x804ac10 <func_1+0x1317>
0x804aafe:   66 c7 85 6e fe ff ff d4 94      	mov word ptr [ebp - 0x192], 0x94d4
0x804ab07:   c7 85 68 fe ff ff 44 81 1b 65   	mov dword ptr [ebp - 0x198], 0x651b8144
0x804ab11:   83 85 40 ff ff ff 01            	add dword ptr [ebp - 0xc0], 1
0x804ab18:   66 c7 45 8a f6 ff               	mov word ptr [ebp - 0x76], 0xfff6
0x804ab1e:   e9 e2 00 00 00                  	jmp 0x804ac05 <func_1+0x130c>
0x804ab23:   c7 85 64 fe ff ff 72 9c 5a b5   	mov dword ptr [ebp - 0x19c], 0xb55a9c72
0x804ab2d:   c7 85 60 fe ff ff 39 66 69 a2   	mov dword ptr [ebp - 0x1a0], 0xa2696639
0x804ab37:   c7 85 5c fe ff ff 92 bc ba 6b   	mov dword ptr [ebp - 0x1a4], 0x6bbabc92
0x804ab41:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804ab45:   88 45 9a                        	mov byte ptr [ebp - 0x66], al
0x804ab48:   0f b6 55 9a                     	movzx edx, byte ptr [ebp - 0x66]
0x804ab4c:   81 bd 54 ff ff ff 2d 85 00 00   	cmp dword ptr [ebp - 0xac], 0x852d
0x804ab56:   7e 0a                           	jle 0x804ab62 <func_1+0x1269>
0x804ab58:   66 83 bd 84 fe ff ff 00         	cmp word ptr [ebp - 0x17c], 0
0x804ab60:   74 07                           	je 0x804ab69 <func_1+0x1270>
0x804ab62:   b8 01 00 00 00                  	mov eax, 1
0x804ab67:   eb 05                           	jmp 0x804ab6e <func_1+0x1275>
0x804ab69:   b8 00 00 00 00                  	mov eax, 0
0x804ab6e:   89 c1                           	mov ecx, eax
0x804ab70:   0f b6 85 7e ff ff ff            	movzx eax, byte ptr [ebp - 0x82]
0x804ab77:   01 c8                           	add eax, ecx
0x804ab79:   0f b6 c0                        	movzx eax, al
0x804ab7c:   89 c1                           	mov ecx, eax
0x804ab7e:   d3 fa                           	sar edx, cl
0x804ab80:   0f be 45 8d                     	movsx eax, byte ptr [ebp - 0x73]
0x804ab84:   39 c2                           	cmp edx, eax
0x804ab86:   0f be 45 9b                     	movsx eax, byte ptr [ebp - 0x65]
0x804ab8a:   ba fd ff ff ff                  	mov edx, 0xfffffffd
0x804ab8f:   29 c2                           	sub edx, eax
0x804ab91:   89 d0                           	mov eax, edx
0x804ab93:   33 85 50 ff ff ff               	xor eax, dword ptr [ebp - 0xb0]
0x804ab99:   39 85 10 ff ff ff               	cmp dword ptr [ebp - 0xf0], eax
0x804ab9f:   74 09                           	je 0x804abaa <func_1+0x12b1>
0x804aba1:   80 bd 6f ff ff ff 00            	cmp byte ptr [ebp - 0x91], 0
0x804aba8:   74 07                           	je 0x804abb1 <func_1+0x12b8>
0x804abaa:   b8 01 00 00 00                  	mov eax, 1
0x804abaf:   eb 05                           	jmp 0x804abb6 <func_1+0x12bd>
0x804abb1:   b8 00 00 00 00                  	mov eax, 0
0x804abb6:   89 c2                           	mov edx, eax
0x804abb8:   8b 85 80 fe ff ff               	mov eax, dword ptr [ebp - 0x180]
0x804abbe:   01 d0                           	add eax, edx
0x804abc0:   0f be c0                        	movsx eax, al
0x804abc3:   01 c0                           	add eax, eax
0x804abc5:   0f bf d0                        	movsx edx, ax
0x804abc8:   69 d2 56 55 00 00               	imul edx, edx, 0x5556
0x804abce:   c1 ea 10                        	shr edx, 0x10
0x804abd1:   66 c1 f8 0f                     	sar ax, 0xf
0x804abd5:   89 d6                           	mov esi, edx
0x804abd7:   29 c6                           	sub esi, eax
0x804abd9:   89 f0                           	mov eax, esi
0x804abdb:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804abdf:   c7 85 68 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x198], 0xffffffff
0x804abe9:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804abf0:   83 c0 01                        	add eax, 1
0x804abf3:   66 89 85 3e ff ff ff            	mov word ptr [ebp - 0xc2], ax
0x804abfa:   0f b7 45 8a                     	movzx eax, word ptr [ebp - 0x76]
0x804abfe:   83 c0 01                        	add eax, 1
0x804ac01:   66 89 45 8a                     	mov word ptr [ebp - 0x76], ax
0x804ac05:   66 83 7d 8a 17                  	cmp word ptr [ebp - 0x76], 0x17
0x804ac0a:   0f 8f 13 ff ff ff               	jg 0x804ab23 <func_1+0x122a>
0x804ac10:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804ac17:   0f be 95 47 ff ff ff            	movsx edx, byte ptr [ebp - 0xb9]
0x804ac1e:   0f b7 4d b0                     	movzx ecx, word ptr [ebp - 0x50]
0x804ac22:   0f b6 5d b3                     	movzx ebx, byte ptr [ebp - 0x4d]
0x804ac26:   0f bf 75 be                     	movsx esi, word ptr [ebp - 0x42]
0x804ac2a:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x804ac2e:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x804ac34:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804ac38:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x804ac3e:   0f b6 bd 7e ff ff ff            	movzx edi, byte ptr [ebp - 0x82]
0x804ac45:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x804ac4b:   0f b7 bd 4c ff ff ff            	movzx edi, word ptr [ebp - 0xb4]
0x804ac52:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x804ac58:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804ac5c:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x804ac62:   0f be bd 7f ff ff ff            	movsx edi, byte ptr [ebp - 0x81]
0x804ac69:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x804ac6f:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804ac73:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x804ac79:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804ac7d:   89 bd 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], edi
0x804ac83:   0f b7 7d 8e                     	movzx edi, word ptr [ebp - 0x72]
0x804ac87:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804ac8d:   0f b6 7d 9a                     	movzx edi, byte ptr [ebp - 0x66]
0x804ac91:   89 bd fc fd ff ff               	mov dword ptr [ebp - 0x204], edi
0x804ac97:   0f be 7d 9b                     	movsx edi, byte ptr [ebp - 0x65]
0x804ac9b:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804aca1:   0f be 7d aa                     	movsx edi, byte ptr [ebp - 0x56]
0x804aca5:   89 bd f4 fd ff ff               	mov dword ptr [ebp - 0x20c], edi
0x804acab:   0f b6 7d ab                     	movzx edi, byte ptr [ebp - 0x55]
0x804acaf:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804acb5:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x804acbc:   50                              	push eax
0x804acbd:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804acc3:   52                              	push edx
0x804acc4:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804acc7:   51                              	push ecx
0x804acc8:   53                              	push ebx
0x804acc9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804accc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804accf:   56                              	push esi
0x804acd0:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804acd3:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804acd6:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804acd9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804acdc:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x804ace2:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x804ace8:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x804acee:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804acf4:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x804acfa:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804acfd:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804ad03:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ad06:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804ad0c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ad0f:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804ad15:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804ad1b:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804ad21:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804ad24:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804ad27:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804ad2d:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804ad33:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804ad36:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804ad39:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804ad3c:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804ad42:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804ad48:   57                              	push edi
0x804ad49:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804ad4f:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804ad55:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804ad5b:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804ad61:   e8 c0 e8 ff ff                  	call 0x8049626 <set_var>
0x804ad66:   81 c4 a0 00 00 00               	add esp, 0xa0
0x804ad6c:   0f b6 85 7e ff ff ff            	movzx eax, byte ptr [ebp - 0x82]
0x804ad73:   e9 26 02 00 00                  	jmp 0x804af9e <func_1+0x16a5>
0x804ad78:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x804ad7f:   eb 1d                           	jmp 0x804ad9e <func_1+0x14a5>
0x804ad81:   c7 45 80 30 15 83 f6            	mov dword ptr [ebp - 0x80], 0xf6831530
0x804ad88:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804ad8e:   33 85 18 ff ff ff               	xor eax, dword ptr [ebp - 0xe8]
0x804ad94:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804ad9a:   83 45 dc 05                     	add dword ptr [ebp - 0x24], 5
0x804ad9e:   83 7d dc 05                     	cmp dword ptr [ebp - 0x24], 5
0x804ada2:   75 dd                           	jne 0x804ad81 <func_1+0x1488>
0x804ada4:   0f bf 85 84 fe ff ff            	movsx eax, word ptr [ebp - 0x17c]
0x804adab:   ba 00 00 00 00                  	mov edx, 0
0x804adb0:   f7 75 cc                        	div dword ptr [ebp - 0x34]
0x804adb3:   89 d0                           	mov eax, edx
0x804adb5:   0f b6 c0                        	movzx eax, al
0x804adb8:   69 c0 d9 00 00 00               	imul eax, eax, 0xd9
0x804adbe:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804adc1:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804adc4:   3d ba 59 6a ed                  	cmp eax, 0xed6a59ba
0x804adc9:   0f 96 c0                        	setbe al
0x804adcc:   0f b6 d0                        	movzx edx, al
0x804adcf:   0f be 45 9b                     	movsx eax, byte ptr [ebp - 0x65]
0x804add3:   39 c2                           	cmp edx, eax
0x804add5:   7e 04                           	jle 0x804addb <func_1+0x14e2>
0x804add7:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804addb:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804adde:   89 c2                           	mov edx, eax
0x804ade0:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804ade4:   09 d0                           	or eax, edx
0x804ade6:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804adea:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x804adef:   0f 94 c0                        	sete al
0x804adf2:   88 85 7e ff ff ff               	mov byte ptr [ebp - 0x82], al
0x804adf8:   c7 85 80 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x180], 0
0x804ae02:   83 bd 80 fe ff ff 08            	cmp dword ptr [ebp - 0x180], 8
0x804ae09:   7f 07                           	jg 0x804ae12 <func_1+0x1519>
0x804ae0b:   b8 59 ff ff ff                  	mov eax, 0xffffff59
0x804ae10:   eb 05                           	jmp 0x804ae17 <func_1+0x151e>
0x804ae12:   b8 58 ff ff ff                  	mov eax, 0xffffff58
0x804ae17:   21 85 50 ff ff ff               	and dword ptr [ebp - 0xb0], eax
0x804ae1d:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804ae21:   83 7d e4 0f                     	cmp dword ptr [ebp - 0x1c], 0xf
0x804ae25:   0f 8e 03 fc ff ff               	jle 0x804aa2e <func_1+0x1135>
0x804ae2b:   eb 01                           	jmp 0x804ae2e <func_1+0x1535>
0x804ae2d:   90                              	nop 
0x804ae2e:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804ae32:   83 7d a4 03                     	cmp dword ptr [ebp - 0x5c], 3
0x804ae36:   0f 8f 9b f1 ff ff               	jg 0x8049fd7 <func_1+0x6de>
0x804ae3c:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804ae43:   0f be 95 47 ff ff ff            	movsx edx, byte ptr [ebp - 0xb9]
0x804ae4a:   0f b7 4d b0                     	movzx ecx, word ptr [ebp - 0x50]
0x804ae4e:   0f b6 5d b3                     	movzx ebx, byte ptr [ebp - 0x4d]
0x804ae52:   0f bf 75 be                     	movsx esi, word ptr [ebp - 0x42]
0x804ae56:   0f be 7d d1                     	movsx edi, byte ptr [ebp - 0x2f]
0x804ae5a:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x804ae60:   0f bf 7d d2                     	movsx edi, word ptr [ebp - 0x2e]
0x804ae64:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x804ae6a:   0f b6 bd 7e ff ff ff            	movzx edi, byte ptr [ebp - 0x82]
0x804ae71:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x804ae77:   0f b7 bd 4c ff ff ff            	movzx edi, word ptr [ebp - 0xb4]
0x804ae7e:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x804ae84:   0f b7 7d da                     	movzx edi, word ptr [ebp - 0x26]
0x804ae88:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x804ae8e:   0f be bd 7f ff ff ff            	movsx edi, byte ptr [ebp - 0x81]
0x804ae95:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x804ae9b:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804ae9f:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x804aea5:   0f be 7d 8d                     	movsx edi, byte ptr [ebp - 0x73]
0x804aea9:   89 bd 04 fe ff ff               	mov dword ptr [ebp - 0x1fc], edi
0x804aeaf:   0f b7 7d 8e                     	movzx edi, word ptr [ebp - 0x72]
0x804aeb3:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804aeb9:   0f b6 7d 9a                     	movzx edi, byte ptr [ebp - 0x66]
0x804aebd:   89 bd fc fd ff ff               	mov dword ptr [ebp - 0x204], edi
0x804aec3:   0f be 7d 9b                     	movsx edi, byte ptr [ebp - 0x65]
0x804aec7:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804aecd:   0f be 7d aa                     	movsx edi, byte ptr [ebp - 0x56]
0x804aed1:   89 bd f4 fd ff ff               	mov dword ptr [ebp - 0x20c], edi
0x804aed7:   0f b6 7d ab                     	movzx edi, byte ptr [ebp - 0x55]
0x804aedb:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804aee1:   0f b7 bd 4e ff ff ff            	movzx edi, word ptr [ebp - 0xb2]
0x804aee8:   50                              	push eax
0x804aee9:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804aeef:   52                              	push edx
0x804aef0:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804aef3:   51                              	push ecx
0x804aef4:   53                              	push ebx
0x804aef5:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804aef8:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aefb:   56                              	push esi
0x804aefc:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aeff:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804af02:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804af05:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804af08:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x804af0e:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x804af14:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x804af1a:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804af20:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x804af26:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804af29:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804af2f:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804af32:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804af38:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804af3b:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804af41:   ff b5 04 fe ff ff               	push dword ptr [ebp - 0x1fc]
0x804af47:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804af4d:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804af50:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804af53:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804af59:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804af5f:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804af62:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804af65:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804af68:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804af6e:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804af74:   57                              	push edi
0x804af75:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804af7b:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804af81:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804af87:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804af8d:   e8 94 e6 ff ff                  	call 0x8049626 <set_var>
0x804af92:   81 c4 a0 00 00 00               	add esp, 0xa0
0x804af98:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804af9e:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804afa1:   5b                              	pop ebx
0x804afa2:   5e                              	pop esi
0x804afa3:   5f                              	pop edi
0x804afa4:   5d                              	pop ebp
0x804afa5:   c3                              	ret 
; function: main at 0x804afa6 -- 0x804b4ee
0x804afa6:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804afaa:   83 e4 f0                        	and esp, 0xfffffff0
0x804afad:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804afb0:   55                              	push ebp
0x804afb1:   89 e5                           	mov ebp, esp
0x804afb3:   53                              	push ebx
0x804afb4:   51                              	push ecx
0x804afb5:   83 ec 10                        	sub esp, 0x10
0x804afb8:   e8 d3 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804afbd:   81 c3 43 30 00 00               	add ebx, 0x3043
0x804afc3:   89 c8                           	mov eax, ecx
0x804afc5:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804afcc:   83 38 02                        	cmp dword ptr [eax], 2
0x804afcf:   75 26                           	jne 0x804aff7 <main+0x51>
0x804afd1:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804afd4:   83 c0 04                        	add eax, 4
0x804afd7:   8b 00                           	mov eax, dword ptr [eax]
0x804afd9:   83 ec 08                        	sub esp, 8
0x804afdc:   8d 93 d8 d5 ff ff               	lea edx, [ebx - 0x2a28]
0x804afe2:   52                              	push edx
0x804afe3:   50                              	push eax
0x804afe4:   e8 17 d3 ff ff                  	call 0x8048300 <strcmp>
0x804afe9:   83 c4 10                        	add esp, 0x10
0x804afec:   85 c0                           	test eax, eax
0x804afee:   75 07                           	jne 0x804aff7 <main+0x51>
0x804aff0:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aff7:   e8 5a d4 ff ff                  	call 0x8048456 <platform_main_begin>
0x804affc:   e8 6a e4 ff ff                  	call 0x804946b <crc32_gentab>
0x804b001:   e8 f3 e8 ff ff                  	call 0x80498f9 <func_1>
0x804b006:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804b00c:   89 c2                           	mov edx, eax
0x804b00e:   83 ec 04                        	sub esp, 4
0x804b011:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b014:   8d 83 da d5 ff ff               	lea eax, [ebx - 0x2a26]
0x804b01a:   50                              	push eax
0x804b01b:   52                              	push edx
0x804b01c:   e8 56 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b021:   83 c4 10                        	add esp, 0x10
0x804b024:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804b02a:   89 c2                           	mov edx, eax
0x804b02c:   83 ec 04                        	sub esp, 4
0x804b02f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b032:   8d 83 de d5 ff ff               	lea eax, [ebx - 0x2a22]
0x804b038:   50                              	push eax
0x804b039:   52                              	push edx
0x804b03a:   e8 38 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b03f:   83 c4 10                        	add esp, 0x10
0x804b042:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804b048:   89 c2                           	mov edx, eax
0x804b04a:   83 ec 04                        	sub esp, 4
0x804b04d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b050:   8d 83 e2 d5 ff ff               	lea eax, [ebx - 0x2a1e]
0x804b056:   50                              	push eax
0x804b057:   52                              	push edx
0x804b058:   e8 1a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b05d:   83 c4 10                        	add esp, 0x10
0x804b060:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804b066:   89 c2                           	mov edx, eax
0x804b068:   83 ec 04                        	sub esp, 4
0x804b06b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b06e:   8d 83 e6 d5 ff ff               	lea eax, [ebx - 0x2a1a]
0x804b074:   50                              	push eax
0x804b075:   52                              	push edx
0x804b076:   e8 fc e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b07b:   83 c4 10                        	add esp, 0x10
0x804b07e:   0f b7 83 c8 04 00 00            	movzx eax, word ptr [ebx + 0x4c8]
0x804b085:   0f b7 c0                        	movzx eax, ax
0x804b088:   83 ec 04                        	sub esp, 4
0x804b08b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b08e:   8d 93 ea d5 ff ff               	lea edx, [ebx - 0x2a16]
0x804b094:   52                              	push edx
0x804b095:   50                              	push eax
0x804b096:   e8 dc e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b09b:   83 c4 10                        	add esp, 0x10
0x804b09e:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804b0a5:   0f b6 c0                        	movzx eax, al
0x804b0a8:   83 ec 04                        	sub esp, 4
0x804b0ab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0ae:   8d 93 ef d5 ff ff               	lea edx, [ebx - 0x2a11]
0x804b0b4:   52                              	push edx
0x804b0b5:   50                              	push eax
0x804b0b6:   e8 bc e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0bb:   83 c4 10                        	add esp, 0x10
0x804b0be:   0f b6 83 31 00 00 00            	movzx eax, byte ptr [ebx + 0x31]
0x804b0c5:   0f be c0                        	movsx eax, al
0x804b0c8:   83 ec 04                        	sub esp, 4
0x804b0cb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0ce:   8d 93 f4 d5 ff ff               	lea edx, [ebx - 0x2a0c]
0x804b0d4:   52                              	push edx
0x804b0d5:   50                              	push eax
0x804b0d6:   e8 9c e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0db:   83 c4 10                        	add esp, 0x10
0x804b0de:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804b0e4:   89 c2                           	mov edx, eax
0x804b0e6:   83 ec 04                        	sub esp, 4
0x804b0e9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0ec:   8d 83 f9 d5 ff ff               	lea eax, [ebx - 0x2a07]
0x804b0f2:   50                              	push eax
0x804b0f3:   52                              	push edx
0x804b0f4:   e8 7e e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0f9:   83 c4 10                        	add esp, 0x10
0x804b0fc:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804b102:   89 c2                           	mov edx, eax
0x804b104:   83 ec 04                        	sub esp, 4
0x804b107:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b10a:   8d 83 fe d5 ff ff               	lea eax, [ebx - 0x2a02]
0x804b110:   50                              	push eax
0x804b111:   52                              	push edx
0x804b112:   e8 60 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b117:   83 c4 10                        	add esp, 0x10
0x804b11a:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804b120:   89 c2                           	mov edx, eax
0x804b122:   83 ec 04                        	sub esp, 4
0x804b125:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b128:   8d 83 04 d6 ff ff               	lea eax, [ebx - 0x29fc]
0x804b12e:   50                              	push eax
0x804b12f:   52                              	push edx
0x804b130:   e8 42 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b135:   83 c4 10                        	add esp, 0x10
0x804b138:   0f b6 83 ca 04 00 00            	movzx eax, byte ptr [ebx + 0x4ca]
0x804b13f:   0f be c0                        	movsx eax, al
0x804b142:   83 ec 04                        	sub esp, 4
0x804b145:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b148:   8d 93 0a d6 ff ff               	lea edx, [ebx - 0x29f6]
0x804b14e:   52                              	push edx
0x804b14f:   50                              	push eax
0x804b150:   e8 22 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b155:   83 c4 10                        	add esp, 0x10
0x804b158:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804b15f:   0f b6 c0                        	movzx eax, al
0x804b162:   83 ec 04                        	sub esp, 4
0x804b165:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b168:   8d 93 10 d6 ff ff               	lea edx, [ebx - 0x29f0]
0x804b16e:   52                              	push edx
0x804b16f:   50                              	push eax
0x804b170:   e8 02 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b175:   83 c4 10                        	add esp, 0x10
0x804b178:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804b17e:   89 c2                           	mov edx, eax
0x804b180:   83 ec 04                        	sub esp, 4
0x804b183:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b186:   8d 83 16 d6 ff ff               	lea eax, [ebx - 0x29ea]
0x804b18c:   50                              	push eax
0x804b18d:   52                              	push edx
0x804b18e:   e8 e4 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b193:   83 c4 10                        	add esp, 0x10
0x804b196:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b19c:   83 ec 04                        	sub esp, 4
0x804b19f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1a2:   8d 93 1c d6 ff ff               	lea edx, [ebx - 0x29e4]
0x804b1a8:   52                              	push edx
0x804b1a9:   50                              	push eax
0x804b1aa:   e8 c8 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1af:   83 c4 10                        	add esp, 0x10
0x804b1b2:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804b1b9:   0f b7 c0                        	movzx eax, ax
0x804b1bc:   83 ec 04                        	sub esp, 4
0x804b1bf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1c2:   8d 93 22 d6 ff ff               	lea edx, [ebx - 0x29de]
0x804b1c8:   52                              	push edx
0x804b1c9:   50                              	push eax
0x804b1ca:   e8 a8 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1cf:   83 c4 10                        	add esp, 0x10
0x804b1d2:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804b1d9:   0f be c0                        	movsx eax, al
0x804b1dc:   83 ec 04                        	sub esp, 4
0x804b1df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1e2:   8d 93 28 d6 ff ff               	lea edx, [ebx - 0x29d8]
0x804b1e8:   52                              	push edx
0x804b1e9:   50                              	push eax
0x804b1ea:   e8 88 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1ef:   83 c4 10                        	add esp, 0x10
0x804b1f2:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804b1f9:   98                              	cwde 
0x804b1fa:   83 ec 04                        	sub esp, 4
0x804b1fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b200:   8d 93 2e d6 ff ff               	lea edx, [ebx - 0x29d2]
0x804b206:   52                              	push edx
0x804b207:   50                              	push eax
0x804b208:   e8 6a e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b20d:   83 c4 10                        	add esp, 0x10
0x804b210:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b216:   89 c2                           	mov edx, eax
0x804b218:   83 ec 04                        	sub esp, 4
0x804b21b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b21e:   8d 83 34 d6 ff ff               	lea eax, [ebx - 0x29cc]
0x804b224:   50                              	push eax
0x804b225:   52                              	push edx
0x804b226:   e8 4c e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b22b:   83 c4 10                        	add esp, 0x10
0x804b22e:   0f b6 83 cb 04 00 00            	movzx eax, byte ptr [ebx + 0x4cb]
0x804b235:   0f be c0                        	movsx eax, al
0x804b238:   83 ec 04                        	sub esp, 4
0x804b23b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b23e:   8d 93 3a d6 ff ff               	lea edx, [ebx - 0x29c6]
0x804b244:   52                              	push edx
0x804b245:   50                              	push eax
0x804b246:   e8 2c e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b24b:   83 c4 10                        	add esp, 0x10
0x804b24e:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804b254:   89 c2                           	mov edx, eax
0x804b256:   83 ec 04                        	sub esp, 4
0x804b259:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b25c:   8d 83 40 d6 ff ff               	lea eax, [ebx - 0x29c0]
0x804b262:   50                              	push eax
0x804b263:   52                              	push edx
0x804b264:   e8 0e e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b269:   83 c4 10                        	add esp, 0x10
0x804b26c:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804b273:   0f b7 c0                        	movzx eax, ax
0x804b276:   83 ec 04                        	sub esp, 4
0x804b279:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b27c:   8d 93 46 d6 ff ff               	lea edx, [ebx - 0x29ba]
0x804b282:   52                              	push edx
0x804b283:   50                              	push eax
0x804b284:   e8 ee e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b289:   83 c4 10                        	add esp, 0x10
0x804b28c:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b292:   83 ec 04                        	sub esp, 4
0x804b295:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b298:   8d 93 4c d6 ff ff               	lea edx, [ebx - 0x29b4]
0x804b29e:   52                              	push edx
0x804b29f:   50                              	push eax
0x804b2a0:   e8 d2 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2a5:   83 c4 10                        	add esp, 0x10
0x804b2a8:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804b2af:   0f b7 c0                        	movzx eax, ax
0x804b2b2:   83 ec 04                        	sub esp, 4
0x804b2b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2b8:   8d 93 52 d6 ff ff               	lea edx, [ebx - 0x29ae]
0x804b2be:   52                              	push edx
0x804b2bf:   50                              	push eax
0x804b2c0:   e8 b2 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2c5:   83 c4 10                        	add esp, 0x10
0x804b2c8:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b2ce:   83 ec 04                        	sub esp, 4
0x804b2d1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2d4:   8d 93 58 d6 ff ff               	lea edx, [ebx - 0x29a8]
0x804b2da:   52                              	push edx
0x804b2db:   50                              	push eax
0x804b2dc:   e8 96 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2e1:   83 c4 10                        	add esp, 0x10
0x804b2e4:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804b2eb:   0f b6 c0                        	movzx eax, al
0x804b2ee:   83 ec 04                        	sub esp, 4
0x804b2f1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2f4:   8d 93 5e d6 ff ff               	lea edx, [ebx - 0x29a2]
0x804b2fa:   52                              	push edx
0x804b2fb:   50                              	push eax
0x804b2fc:   e8 76 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b301:   83 c4 10                        	add esp, 0x10
0x804b304:   0f b7 83 6e 00 00 00            	movzx eax, word ptr [ebx + 0x6e]
0x804b30b:   98                              	cwde 
0x804b30c:   83 ec 04                        	sub esp, 4
0x804b30f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b312:   8d 93 64 d6 ff ff               	lea edx, [ebx - 0x299c]
0x804b318:   52                              	push edx
0x804b319:   50                              	push eax
0x804b31a:   e8 58 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b31f:   83 c4 10                        	add esp, 0x10
0x804b322:   0f b6 83 cc 04 00 00            	movzx eax, byte ptr [ebx + 0x4cc]
0x804b329:   0f be c0                        	movsx eax, al
0x804b32c:   83 ec 04                        	sub esp, 4
0x804b32f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b332:   8d 93 6a d6 ff ff               	lea edx, [ebx - 0x2996]
0x804b338:   52                              	push edx
0x804b339:   50                              	push eax
0x804b33a:   e8 38 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b33f:   83 c4 10                        	add esp, 0x10
0x804b342:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b348:   83 ec 04                        	sub esp, 4
0x804b34b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b34e:   8d 93 70 d6 ff ff               	lea edx, [ebx - 0x2990]
0x804b354:   52                              	push edx
0x804b355:   50                              	push eax
0x804b356:   e8 1c e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b35b:   83 c4 10                        	add esp, 0x10
0x804b35e:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b364:   89 c2                           	mov edx, eax
0x804b366:   83 ec 04                        	sub esp, 4
0x804b369:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b36c:   8d 83 76 d6 ff ff               	lea eax, [ebx - 0x298a]
0x804b372:   50                              	push eax
0x804b373:   52                              	push edx
0x804b374:   e8 fe e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b379:   83 c4 10                        	add esp, 0x10
0x804b37c:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b382:   89 c2                           	mov edx, eax
0x804b384:   83 ec 04                        	sub esp, 4
0x804b387:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b38a:   8d 83 7c d6 ff ff               	lea eax, [ebx - 0x2984]
0x804b390:   50                              	push eax
0x804b391:   52                              	push edx
0x804b392:   e8 e0 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b397:   83 c4 10                        	add esp, 0x10
0x804b39a:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b3a0:   89 c2                           	mov edx, eax
0x804b3a2:   83 ec 04                        	sub esp, 4
0x804b3a5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3a8:   8d 83 82 d6 ff ff               	lea eax, [ebx - 0x297e]
0x804b3ae:   50                              	push eax
0x804b3af:   52                              	push edx
0x804b3b0:   e8 c2 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3b5:   83 c4 10                        	add esp, 0x10
0x804b3b8:   0f b7 83 80 00 00 00            	movzx eax, word ptr [ebx + 0x80]
0x804b3bf:   98                              	cwde 
0x804b3c0:   83 ec 04                        	sub esp, 4
0x804b3c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3c6:   8d 93 88 d6 ff ff               	lea edx, [ebx - 0x2978]
0x804b3cc:   52                              	push edx
0x804b3cd:   50                              	push eax
0x804b3ce:   e8 a4 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3d3:   83 c4 10                        	add esp, 0x10
0x804b3d6:   8b 83 d0 04 00 00               	mov eax, dword ptr [ebx + 0x4d0]
0x804b3dc:   89 c2                           	mov edx, eax
0x804b3de:   83 ec 04                        	sub esp, 4
0x804b3e1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3e4:   8d 83 8e d6 ff ff               	lea eax, [ebx - 0x2972]
0x804b3ea:   50                              	push eax
0x804b3eb:   52                              	push edx
0x804b3ec:   e8 86 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3f1:   83 c4 10                        	add esp, 0x10
0x804b3f4:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804b3fa:   83 ec 04                        	sub esp, 4
0x804b3fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b400:   8d 93 94 d6 ff ff               	lea edx, [ebx - 0x296c]
0x804b406:   52                              	push edx
0x804b407:   50                              	push eax
0x804b408:   e8 6a e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b40d:   83 c4 10                        	add esp, 0x10
0x804b410:   0f b6 83 88 00 00 00            	movzx eax, byte ptr [ebx + 0x88]
0x804b417:   0f b6 c0                        	movzx eax, al
0x804b41a:   83 ec 04                        	sub esp, 4
0x804b41d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b420:   8d 93 9a d6 ff ff               	lea edx, [ebx - 0x2966]
0x804b426:   52                              	push edx
0x804b427:   50                              	push eax
0x804b428:   e8 4a e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b42d:   83 c4 10                        	add esp, 0x10
0x804b430:   0f b7 83 8a 00 00 00            	movzx eax, word ptr [ebx + 0x8a]
0x804b437:   0f b7 c0                        	movzx eax, ax
0x804b43a:   83 ec 04                        	sub esp, 4
0x804b43d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b440:   8d 93 a0 d6 ff ff               	lea edx, [ebx - 0x2960]
0x804b446:   52                              	push edx
0x804b447:   50                              	push eax
0x804b448:   e8 2a e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b44d:   83 c4 10                        	add esp, 0x10
0x804b450:   8b 83 8c 00 00 00               	mov eax, dword ptr [ebx + 0x8c]
0x804b456:   83 ec 04                        	sub esp, 4
0x804b459:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b45c:   8d 93 a6 d6 ff ff               	lea edx, [ebx - 0x295a]
0x804b462:   52                              	push edx
0x804b463:   50                              	push eax
0x804b464:   e8 0e e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b469:   83 c4 10                        	add esp, 0x10
0x804b46c:   0f b6 83 90 00 00 00            	movzx eax, byte ptr [ebx + 0x90]
0x804b473:   0f be c0                        	movsx eax, al
0x804b476:   83 ec 04                        	sub esp, 4
0x804b479:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b47c:   8d 93 ac d6 ff ff               	lea edx, [ebx - 0x2954]
0x804b482:   52                              	push edx
0x804b483:   50                              	push eax
0x804b484:   e8 ee e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b489:   83 c4 10                        	add esp, 0x10
0x804b48c:   8b 83 94 00 00 00               	mov eax, dword ptr [ebx + 0x94]
0x804b492:   83 ec 04                        	sub esp, 4
0x804b495:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b498:   8d 93 b2 d6 ff ff               	lea edx, [ebx - 0x294e]
0x804b49e:   52                              	push edx
0x804b49f:   50                              	push eax
0x804b4a0:   e8 d2 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4a5:   83 c4 10                        	add esp, 0x10
0x804b4a8:   0f b7 83 98 00 00 00            	movzx eax, word ptr [ebx + 0x98]
0x804b4af:   0f b7 c0                        	movzx eax, ax
0x804b4b2:   83 ec 04                        	sub esp, 4
0x804b4b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4b8:   8d 93 b8 d6 ff ff               	lea edx, [ebx - 0x2948]
0x804b4be:   52                              	push edx
0x804b4bf:   50                              	push eax
0x804b4c0:   e8 b2 e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b4c5:   83 c4 10                        	add esp, 0x10
0x804b4c8:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b4ce:   f7 d0                           	not eax
0x804b4d0:   83 ec 08                        	sub esp, 8
0x804b4d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4d6:   50                              	push eax
0x804b4d7:   e8 8a cf ff ff                  	call 0x8048466 <platform_main_end>
0x804b4dc:   83 c4 10                        	add esp, 0x10
0x804b4df:   b8 00 00 00 00                  	mov eax, 0
0x804b4e4:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b4e7:   59                              	pop ecx
0x804b4e8:   5b                              	pop ebx
0x804b4e9:   5d                              	pop ebp
0x804b4ea:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b4ed:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b4ee -- 0x804b4f2
0x804b4ee:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b4f1:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b4f2 -- 0x804b4f6
0x804b4f2:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b4f5:   c3                              	ret 
; data inside code section at 0x804b4f6 -- 0x804b500
0x804b4f6:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804b500 -- 0x804b55d
0x804b500:   55                              	push ebp
0x804b501:   57                              	push edi
0x804b502:   56                              	push esi
0x804b503:   53                              	push ebx
0x804b504:   e8 87 ce ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b509:   81 c3 f7 2a 00 00               	add ebx, 0x2af7
0x804b50f:   83 ec 0c                        	sub esp, 0xc
0x804b512:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b516:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b51c:   e8 ab cd ff ff                  	call 0x80482cc <_init>
0x804b521:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b527:   29 c6                           	sub esi, eax
0x804b529:   c1 fe 02                        	sar esi, 2
0x804b52c:   85 f6                           	test esi, esi
0x804b52e:   74 25                           	je 0x804b555 <__libc_csu_init+0x55>
0x804b530:   31 ff                           	xor edi, edi
0x804b532:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b538:   83 ec 04                        	sub esp, 4
0x804b53b:   55                              	push ebp
0x804b53c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b540:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b544:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b54b:   83 c7 01                        	add edi, 1
0x804b54e:   83 c4 10                        	add esp, 0x10
0x804b551:   39 fe                           	cmp esi, edi
0x804b553:   75 e3                           	jne 0x804b538 <__libc_csu_init+0x38>
0x804b555:   83 c4 0c                        	add esp, 0xc
0x804b558:   5b                              	pop ebx
0x804b559:   5e                              	pop esi
0x804b55a:   5f                              	pop edi
0x804b55b:   5d                              	pop ebp
0x804b55c:   c3                              	ret 
; data inside code section at 0x804b55d -- 0x804b560
0x804b55d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b560 -- 0x804b562
0x804b560:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b564 -- 0x804b578
0x804b564:   53                              	push ebx
0x804b565:   83 ec 08                        	sub esp, 8
0x804b568:   e8 23 ce ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b56d:   81 c3 93 2a 00 00               	add ebx, 0x2a93
0x804b573:   83 c4 08                        	add esp, 8
0x804b576:   5b                              	pop ebx
0x804b577:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c b5 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b578:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b588:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b598:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b5a8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b5b8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b5c8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b5d8:   31 00 67 5f 32 00 67 5f  33 00 67 5f 34 00 67 5f   |1.g_2.g_3.g_4.g_|
0x804b5e8:   35 00 67 5f 35 32 00 67  5f 35 36 00 67 5f 37 30   |5.g_52.g_56.g_70|
0x804b5f8:   00 67 5f 38 39 00 67 5f  31 32 35 00 67 5f 31 32   |.g_89.g_125.g_12|
0x804b608:   36 00 67 5f 31 32 37 00  67 5f 31 33 36 00 67 5f   |6.g_127.g_136.g_|
0x804b618:   32 30 34 00 67 5f 32 30  36 00 67 5f 32 33 33 00   |204.g_206.g_233.|
0x804b628:   67 5f 32 33 38 00 67 5f  32 33 39 00 67 5f 32 34   |g_238.g_239.g_24|
0x804b638:   30 00 67 5f 32 34 31 00  67 5f 32 34 32 00 67 5f   |0.g_241.g_242.g_|
0x804b648:   32 34 33 00 67 5f 32 34  39 00 67 5f 32 36 38 00   |243.g_249.g_268.|
0x804b658:   67 5f 32 39 36 00 67 5f  33 33 35 00 67 5f 33 35   |g_296.g_335.g_35|
0x804b668:   38 00 67 5f 33 39 31 00  67 5f 34 30 38 00 67 5f   |8.g_391.g_408.g_|
0x804b678:   34 31 37 00 67 5f 34 31  38 00 67 5f 34 31 39 00   |417.g_418.g_419.|
0x804b688:   67 5f 34 32 31 00 67 5f  34 32 35 00 67 5f 34 32   |g_421.g_425.g_42|
0x804b698:   37 00 67 5f 34 37 39 00  67 5f 34 39 39 00 67 5f   |7.g_479.g_499.g_|
0x804b6a8:   35 31 36 00 67 5f 35 38  39 00 67 5f 35 39 32 00   |516.g_589.g_592.|
0x804b6b8:   67 5f 36 31 35 00 00 00  00 00 00 3f ff ff ff 7e   |g_615......?...~|
0x804b6c8:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b6d8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b6e8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b6f8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b708:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b718:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b728:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b728:   01 1b 03 3b b8 02 00 00  56 00 00 00 c8 cb ff ff   |...;....V.......|
0x804b738:   e8 02 00 00 08 cc ff ff  0c 03 00 00 58 cc ff ff   |............X...|
0x804b748:   d4 02 00 00 2e cd ff ff  20 03 00 00 3e cd ff ff   |........ ...>...|
0x804b758:   40 03 00 00 6c cd ff ff  64 03 00 00 8a cd ff ff   |@...l...d.......|
0x804b768:   84 03 00 00 b2 cd ff ff  a4 03 00 00 dc cd ff ff   |................|
0x804b778:   c4 03 00 00 05 ce ff ff  e4 03 00 00 48 ce ff ff   |............H...|
0x804b788:   04 04 00 00 89 ce ff ff  24 04 00 00 e1 ce ff ff   |........$.......|
0x804b798:   48 04 00 00 33 cf ff ff  6c 04 00 00 70 cf ff ff   |H...3...l...p...|
0x804b7a8:   8c 04 00 00 a7 cf ff ff  ac 04 00 00 c6 cf ff ff   |................|
0x804b7b8:   cc 04 00 00 f0 cf ff ff  ec 04 00 00 1c d0 ff ff   |................|
0x804b7c8:   0c 05 00 00 47 d0 ff ff  2c 05 00 00 90 d0 ff ff   |....G...,.......|
0x804b7d8:   4c 05 00 00 d7 d0 ff ff  6c 05 00 00 31 d1 ff ff   |L.......l...1...|
0x804b7e8:   90 05 00 00 85 d1 ff ff  b4 05 00 00 c4 d1 ff ff   |................|
0x804b7f8:   d4 05 00 00 fd d1 ff ff  f4 05 00 00 1f d2 ff ff   |................|
0x804b808:   14 06 00 00 6d d2 ff ff  34 06 00 00 a9 d2 ff ff   |....m...4.......|
0x804b818:   54 06 00 00 32 d3 ff ff  74 06 00 00 64 d3 ff ff   |T...2...t...d...|
0x804b828:   94 06 00 00 94 d3 ff ff  b4 06 00 00 d9 d3 ff ff   |................|
0x804b838:   d4 06 00 00 18 d4 ff ff  f4 06 00 00 4a d4 ff ff   |............J...|
0x804b848:   14 07 00 00 76 d4 ff ff  34 07 00 00 94 d4 ff ff   |....v...4.......|
0x804b858:   54 07 00 00 bc d4 ff ff  74 07 00 00 e1 d4 ff ff   |T.......t.......|
0x804b868:   94 07 00 00 06 d5 ff ff  b4 07 00 00 3d d5 ff ff   |............=...|
0x804b878:   d4 07 00 00 71 d5 ff ff  f4 07 00 00 c3 d5 ff ff   |....q...........|
0x804b888:   18 08 00 00 0f d6 ff ff  3c 08 00 00 46 d6 ff ff   |........<...F...|
0x804b898:   5c 08 00 00 77 d6 ff ff  7c 08 00 00 96 d6 ff ff   |\...w...|.......|
0x804b8a8:   9c 08 00 00 c0 d6 ff ff  bc 08 00 00 e8 d6 ff ff   |................|
0x804b8b8:   dc 08 00 00 11 d7 ff ff  fc 08 00 00 4d d7 ff ff   |............M...|
0x804b8c8:   1c 09 00 00 87 d7 ff ff  3c 09 00 00 da d7 ff ff   |........<.......|
0x804b8d8:   60 09 00 00 27 d8 ff ff  84 09 00 00 5f d8 ff ff   |`...'......._...|
0x804b8e8:   a4 09 00 00 91 d8 ff ff  c4 09 00 00 a5 d8 ff ff   |................|
0x804b8f8:   e4 09 00 00 bc d8 ff ff  04 0a 00 00 d1 d8 ff ff   |................|
0x804b908:   24 0a 00 00 e7 d8 ff ff  44 0a 00 00 0e d9 ff ff   |$.......D.......|
0x804b918:   64 0a 00 00 33 d9 ff ff  84 0a 00 00 72 d9 ff ff   |d...3.......r...|
0x804b928:   a4 0a 00 00 ab d9 ff ff  c4 0a 00 00 d7 d9 ff ff   |................|
0x804b938:   e4 0a 00 00 fd d9 ff ff  04 0b 00 00 3f da ff ff   |............?...|
0x804b948:   24 0b 00 00 81 da ff ff  44 0b 00 00 c3 da ff ff   |$.......D.......|
0x804b958:   64 0b 00 00 38 db ff ff  84 0b 00 00 95 db ff ff   |d...8...........|
0x804b968:   a4 0b 00 00 f2 db ff ff  c4 0b 00 00 4f dc ff ff   |............O...|
0x804b978:   e4 0b 00 00 df dc ff ff  04 0c 00 00 43 dd ff ff   |............C...|
0x804b988:   24 0c 00 00 b3 dd ff ff  44 0c 00 00 fa dd ff ff   |$.......D.......|
0x804b998:   68 0c 00 00 4f de ff ff  88 0c 00 00 96 de ff ff   |h...O...........|
0x804b9a8:   ac 0c 00 00 fe de ff ff  d0 0c 00 00 d1 e1 ff ff   |................|
0x804b9b8:   00 0d 00 00 7e f8 ff ff  30 0d 00 00 c6 fd ff ff   |....~...0.......|
0x804b9c8:   68 0d 00 00 ca fd ff ff  7c 0d 00 00 d8 fd ff ff   |h.......|.......|
0x804b9d8:   90 0d 00 00 38 fe ff ff  dc 0d 00 00 14            |....8........   |
; section: .eh_frame
0x804b9e4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b9f4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ba04:   7c c9 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   ||........... ...|
0x804ba14:   30 00 00 00 d8 c8 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804ba24:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804ba34:   10 00 00 00 54 00 00 00  f4 c8 ff ff 08 00 00 00   |....T...........|
0x804ba44:   00 00 00 00 1c 00 00 00  68 00 00 00 06 ca ff ff   |........h.......|
0x804ba54:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804ba64:   04 04 00 00 20 00 00 00  88 00 00 00 f6 c9 ff ff   |.... ...........|
0x804ba74:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ba84:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ba94:   00 ca ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804baa4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804bab4:   fe c9 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bac4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804bad4:   06 ca ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804bae4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804baf4:   10 ca ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804bb04:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804bb14:   19 ca ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804bb24:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804bb34:   3c ca ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |<...A....A....B.|
0x804bb44:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804bb54:   5d ca ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |]...X....A....B.|
0x804bb64:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804bb74:   90 01 00 00 91 ca ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804bb84:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804bb94:   1c 00 00 00 b4 01 00 00  bf ca ff ff 3d 00 00 00   |............=...|
0x804bba4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804bbb4:   1c 00 00 00 d4 01 00 00  dc ca ff ff 37 00 00 00   |............7...|
0x804bbc4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bbd4:   1c 00 00 00 f4 01 00 00  f3 ca ff ff 1f 00 00 00   |................|
0x804bbe4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bbf4:   1c 00 00 00 14 02 00 00  f2 ca ff ff 2a 00 00 00   |............*...|
0x804bc04:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bc14:   1c 00 00 00 34 02 00 00  fc ca ff ff 2c 00 00 00   |....4.......,...|
0x804bc24:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804bc34:   1c 00 00 00 54 02 00 00  08 cb ff ff 2b 00 00 00   |....T.......+...|
0x804bc44:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804bc54:   1c 00 00 00 74 02 00 00  13 cb ff ff 49 00 00 00   |....t.......I...|
0x804bc64:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804bc74:   1c 00 00 00 94 02 00 00  3c cb ff ff 47 00 00 00   |........<...G...|
0x804bc84:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804bc94:   20 00 00 00 b4 02 00 00  63 cb ff ff 5a 00 00 00   | .......c...Z...|
0x804bca4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804bcb4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 99 cb ff ff   |.... ...........|
0x804bcc4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804bcd4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804bce4:   c9 cb ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bcf4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804bd04:   e8 cb ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bd14:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804bd24:   01 cc ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804bd34:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804bd44:   03 cc ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804bd54:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804bd64:   31 cc ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |1...<....A....B.|
0x804bd74:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bd84:   4d cc ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804bd94:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bda4:   b6 cc ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bdb4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bdc4:   c8 cc ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804bdd4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bde4:   d8 cc ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804bdf4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804be04:   fd cc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804be14:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804be24:   1c cd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804be34:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804be44:   2e cd ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804be54:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804be64:   3a cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |:........A....B.|
0x804be74:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804be84:   38 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |8...(....A....B.|
0x804be94:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bea4:   40 cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |@...%....A....B.|
0x804beb4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bec4:   45 cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |E...%....A....B.|
0x804bed4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bee4:   4a cd ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |J...7....A....B.|
0x804bef4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bf04:   61 cd ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |a...4....A....B.|
0x804bf14:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bf24:   75 cd ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |u...R....A....B.|
0x804bf34:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bf44:   60 05 00 00 a3 cd ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bf54:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bf64:   1c 00 00 00 84 05 00 00  cb cd ff ff 37 00 00 00   |............7...|
0x804bf74:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bf84:   1c 00 00 00 a4 05 00 00  e2 cd ff ff 31 00 00 00   |............1...|
0x804bf94:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bfa4:   1c 00 00 00 c4 05 00 00  f3 cd ff ff 1f 00 00 00   |................|
0x804bfb4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bfc4:   1c 00 00 00 e4 05 00 00  f2 cd ff ff 2a 00 00 00   |............*...|
0x804bfd4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bfe4:   1c 00 00 00 04 06 00 00  fc cd ff ff 28 00 00 00   |............(...|
0x804bff4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804c004:   1c 00 00 00 24 06 00 00  04 ce ff ff 29 00 00 00   |....$.......)...|
0x804c014:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804c024:   1c 00 00 00 44 06 00 00  0d ce ff ff 3c 00 00 00   |....D.......<...|
0x804c034:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804c044:   1c 00 00 00 64 06 00 00  29 ce ff ff 3a 00 00 00   |....d...)...:...|
0x804c054:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804c064:   20 00 00 00 84 06 00 00  43 ce ff ff 53 00 00 00   | .......C...S...|
0x804c074:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804c084:   c5 0c 04 04 20 00 00 00  a8 06 00 00 72 ce ff ff   |.... .......r...|
0x804c094:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804c0a4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804c0b4:   9b ce ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804c0c4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804c0d4:   b3 ce ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804c0e4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804c0f4:   c5 ce ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c104:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804c114:   b9 ce ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c124:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804c134:   b0 ce ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c144:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804c154:   a5 ce ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c164:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804c174:   9b ce ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804c184:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804c194:   a2 ce ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804c1a4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804c1b4:   a7 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804c1c4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c1d4:   c6 ce ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804c1e4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c1f4:   df ce ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804c204:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c214:   eb ce ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804c224:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c234:   f1 ce ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c244:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c254:   13 cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c264:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c274:   35 cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |5...B....A....B.|
0x804c284:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c294:   57 cf ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |W...u....A....B.|
0x804c2a4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c2b4:   ac cf ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c2c4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c2d4:   e9 cf ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c2e4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c2f4:   26 d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |&...]....A....B.|
0x804c304:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c314:   63 d0 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |c........A....B.|
0x804c324:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c334:   d3 d0 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c344:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c354:   17 d1 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804c364:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c374:   67 d1 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |g...G....A....B.|
0x804c384:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c394:   b0 09 00 00 8a d1 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c3a4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c3b4:   d0 09 00 00 bf d1 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c3c4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c3d4:   20 00 00 00 f4 09 00 00  e2 d1 ff ff 68 00 00 00   | ...........h...|
0x804c3e4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c3f4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 26 d2 ff ff   |....,.......&...|
0x804c404:   d3 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c414:   86 04 83 05 03 c3 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c424:   04 00 00 00 2c 00 00 00  48 0a 00 00 c9 d4 ff ff   |....,...H.......|
0x804c434:   ad 16 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c444:   86 04 83 05 03 9d 16 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c454:   04 00 00 00 34 00 00 00  78 0a 00 00 46 eb ff ff   |....4...x...F...|
0x804c464:   48 05 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |H....D...G...u.D|
0x804c474:   0f 03 75 78 06 10 03 02  75 7c 03 33 05 c1 0c 01   |..ux....u|.3....|
0x804c484:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c494:   b0 0a 00 00 56 f0 ff ff  04 00 00 00 00 00 00 00   |....V...........|
0x804c4a4:   10 00 00 00 c4 0a 00 00  46 f0 ff ff 04 00 00 00   |........F.......|
0x804c4b4:   00 00 00 00 48 00 00 00  d8 0a 00 00 40 f0 ff ff   |....H.......@...|
0x804c4c4:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c4d4:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c4e4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c4f4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c504:   10 00 00 00 24 0b 00 00  54 f0 ff ff 02 00 00 00   |....$...T.......|
0x804c514:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 64 b5 04 08  19 00 00 00 0c df 04 08   |....d...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 26 48 06 4e   |............&H.N|
0x804e028:   01 00 00 00 be 29 9d e1  1d 9d 00 00 f6 ff ff ff   |.....)..........|
0x804e038:   f6 6f 5e 3e 7b 3c 1f 40  fb 00 00 00 56 dd ac e8   |.o^>{<.@....V...|
0x804e048:   08 00 00 00 92 60 5e 00  01 00 00 00 d6 20 a7 85   |.....`^...... ..|
0x804e058:   dc 79 49 69 d9 9b 00 00  a5 0a 10 d5 66 69 00 00   |.yIi........fi..|
0x804e068:   1f ff bc 40 89 00 6b 36  16 c6 d4 23 02 00 00 00   |...@..k6...#....|
0x804e078:   76 91 52 e9 5c 7b 1a 12  09 d3 00 00 50 aa fa b6   |v.R.\{......P...|
0x804e088:   82 00 08 00 fe ff ff ff  f8 00 00 00 83 d6 15 ef   |................|
0x804e098:   01 00 ??                                           |..?             |
