;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:37:30
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 db ff ff               	lea eax, [ebx - 0x24b0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 34 a8 04 08               	mov eax, 0x804a834
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 5c d0 04 08                  	mov eax, 0x804d05c
0x80483a5:   3d 5c d0 04 08                  	cmp eax, 0x804d05c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 5c d0 04 08                  	push 0x804d05c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 5c d0 04 08                  	mov eax, 0x804d05c
0x80483e5:   2d 5c d0 04 08                  	sub eax, 0x804d05c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 5c d0 04 08                  	push 0x804d05c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 dc 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 c8 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 db ff ff               	lea edx, [eax - 0x2430]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 9b 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 7d 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 55 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 2b 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 02 26 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 bf 25 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 7d 25 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 25 25 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 d4 24 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 97 24 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 60 24 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 41 24 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 17 24 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 eb 23 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c0 23 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 77 23 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 2f 23 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 d5 22 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 82 22 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 43 22 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 0d 22 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 eb 21 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 9d 21 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 61 21 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 d8 20 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 a6 20 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 76 20 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 31 20 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 f2 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c0 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 91 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 73 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 4b 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 26 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 01 1f 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 ca 1e 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 95 1e 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 43 1e 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 f8 1d 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 c1 1d 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 90 1d 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 71 1d 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 47 1d 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 1f 1d 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 f6 1c 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 ba 1c 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 7f 1c 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 2c 1c 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e0 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 a8 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 79 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 65 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 4e 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 39 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 23 1b 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 fc 1a 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 d7 1a 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 98 1a 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 5f 1a 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 33 1a 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 0d 1a 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 a0 dc ff ff               	fld dword ptr [eax - 0x2360]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 a0 dc ff ff               	fld dword ptr [eax - 0x2360]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 a4 dc ff ff               	fld dword ptr [eax - 0x235c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 cb 19 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 a0 dc ff ff               	fld dword ptr [eax - 0x2360]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 a0 dc ff ff               	fld dword ptr [eax - 0x2360]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 a4 dc ff ff               	fld dword ptr [eax - 0x235c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 89 19 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 a8 dc ff ff               	fld dword ptr [eax - 0x2358]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 b0 dc ff ff               	fld dword ptr [eax - 0x2350]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 47 19 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 b8 dc ff ff               	fld dword ptr [eax - 0x2348]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 bc dc ff ff               	fld dword ptr [eax - 0x2344]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 cf 18 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c0 dc ff ff               	fld qword ptr [eax - 0x2340]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c0 dc ff ff               	fld qword ptr [eax - 0x2340]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 c8 dc ff ff               	fld qword ptr [eax - 0x2338]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 72 18 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c0 dc ff ff               	fld qword ptr [eax - 0x2340]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c0 dc ff ff               	fld qword ptr [eax - 0x2340]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 c8 dc ff ff               	fld qword ptr [eax - 0x2338]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 15 18 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 b8 17 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f0 dc ff ff               	fld qword ptr [eax - 0x2310]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 f8 dc ff ff               	fld qword ptr [eax - 0x2308]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 28 17 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 00 dd ff ff               	fld dword ptr [eax - 0x2300]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 04 dd ff ff               	fld dword ptr [eax - 0x22fc]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 c4 16 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 53 16 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 10 16 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 db ff ff               	lea eax, [ebx - 0x2420]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 dc ff ff               	lea eax, [ebx - 0x23fc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804979f
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 4c                        	sub esp, 0x4c
0x804962f:   e8 0a 15 00 00                  	call 0x804ab3e <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049640:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049643:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049646:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x8049649:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804964c:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964f:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049652:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x8049655:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049658:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x804965b:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804965e:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049661:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049664:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x8049667:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x804966a:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x804966d:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049670:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049673:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049677:   89 c8                           	mov eax, ecx
0x8049679:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804967c:   89 d8                           	mov eax, ebx
0x804967e:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049681:   89 f0                           	mov eax, esi
0x8049683:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049687:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804968b:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x804968f:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049693:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x8049696:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804969a:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x804969d:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a1:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496a4:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496a8:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496ac:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496b0:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496b4:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b8:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496bc:   89 f8                           	mov eax, edi
0x80496be:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496c2:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496c6:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x80496cd:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496d1:   88 82 26 00 00 00               	mov byte ptr [edx + 0x26], al
0x80496d7:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496da:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496e0:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x80496e4:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x80496ea:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496ed:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496f3:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496f6:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x80496fc:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049700:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x8049707:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804970b:   66 89 82 36 00 00 00            	mov word ptr [edx + 0x36], ax
0x8049712:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049716:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804971c:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049720:   88 82 88 04 00 00               	mov byte ptr [edx + 0x488], al
0x8049726:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804972a:   88 82 39 00 00 00               	mov byte ptr [edx + 0x39], al
0x8049730:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049733:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049739:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804973c:   89 82 8c 04 00 00               	mov dword ptr [edx + 0x48c], eax
0x8049742:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049746:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804974d:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049751:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x8049758:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804975c:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x8049763:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049766:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804976c:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049770:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049777:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804977a:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049780:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049783:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049789:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804978c:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049792:   b8 00 00 00 00                  	mov eax, 0
0x8049797:   83 c4 4c                        	add esp, 0x4c
0x804979a:   5b                              	pop ebx
0x804979b:   5e                              	pop esi
0x804979c:   5f                              	pop edi
0x804979d:   5d                              	pop ebp
0x804979e:   c3                              	ret 
; function: func_1 at 0x804979f -- 0x804a834
0x804979f:   55                              	push ebp
0x80497a0:   89 e5                           	mov ebp, esp
0x80497a2:   57                              	push edi
0x80497a3:   56                              	push esi
0x80497a4:   53                              	push ebx
0x80497a5:   81 ec 58 01 00 00               	sub esp, 0x158
0x80497ab:   e8 8a 13 00 00                  	call 0x804ab3a <__x86.get_pc_thunk.ax>
0x80497b0:   05 50 38 00 00                  	add eax, 0x3850
0x80497b5:   66 c7 45 f2 b8 ff               	mov word ptr [ebp - 0xe], 0xffb8
0x80497bb:   c6 45 87 72                     	mov byte ptr [ebp - 0x79], 0x72
0x80497bf:   c7 45 ec ef ab 63 4f            	mov dword ptr [ebp - 0x14], 0x4f63abef
0x80497c6:   c6 45 eb 01                     	mov byte ptr [ebp - 0x15], 1
0x80497ca:   c7 45 e4 f8 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff8
0x80497d1:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x80497d8:   66 c7 45 de 91 26               	mov word ptr [ebp - 0x22], 0x2691
0x80497de:   66 c7 45 dc 08 00               	mov word ptr [ebp - 0x24], 8
0x80497e4:   c6 45 db 27                     	mov byte ptr [ebp - 0x25], 0x27
0x80497e8:   c6 45 da 00                     	mov byte ptr [ebp - 0x26], 0
0x80497ec:   c6 45 d9 55                     	mov byte ptr [ebp - 0x27], 0x55
0x80497f0:   c7 45 d4 06 00 00 00            	mov dword ptr [ebp - 0x2c], 6
0x80497f7:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x80497fe:   66 c7 45 d2 f7 ff               	mov word ptr [ebp - 0x2e], 0xfff7
0x8049804:   66 c7 85 7e ff ff ff e0 0a      	mov word ptr [ebp - 0x82], 0xae0
0x804980d:   66 c7 45 d0 c9 57               	mov word ptr [ebp - 0x30], 0x57c9
0x8049813:   c7 45 cc d6 5d 0c fb            	mov dword ptr [ebp - 0x34], 0xfb0c5dd6
0x804981a:   66 c7 45 ca fc ff               	mov word ptr [ebp - 0x36], 0xfffc
0x8049820:   c7 45 c4 f8 ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffff8
0x8049827:   c7 45 c0 ca 47 90 e1            	mov dword ptr [ebp - 0x40], 0xe19047ca
0x804982e:   c7 85 78 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x88], 6
0x8049838:   66 c7 85 76 ff ff ff 00 00      	mov word ptr [ebp - 0x8a], 0
0x8049841:   c7 45 bc f9 e2 17 3f            	mov dword ptr [ebp - 0x44], 0x3f17e2f9
0x8049848:   c7 45 b8 81 44 f1 b2            	mov dword ptr [ebp - 0x48], 0xb2f14481
0x804984f:   c6 85 75 ff ff ff 52            	mov byte ptr [ebp - 0x8b], 0x52
0x8049856:   c7 45 b4 90 13 d4 64            	mov dword ptr [ebp - 0x4c], 0x64d41390
0x804985d:   c7 85 70 ff ff ff 1c f0 6d b7   	mov dword ptr [ebp - 0x90], 0xb76df01c
0x8049867:   c6 85 6f ff ff ff 01            	mov byte ptr [ebp - 0x91], 1
0x804986e:   c6 85 6e ff ff ff b4            	mov byte ptr [ebp - 0x92], 0xb4
0x8049875:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x8049879:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049880:   0f be d8                        	movsx ebx, al
0x8049883:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804988a:   0f be c0                        	movsx eax, al
0x804988d:   89 c1                           	mov ecx, eax
0x804988f:   d3 e3                           	shl ebx, cl
0x8049891:   89 d8                           	mov eax, ebx
0x8049893:   88 45 87                        	mov byte ptr [ebp - 0x79], al
0x8049896:   0f b6 5d 87                     	movzx ebx, byte ptr [ebp - 0x79]
0x804989a:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x80498a1:   0f b6 c0                        	movzx eax, al
0x80498a4:   89 c1                           	mov ecx, eax
0x80498a6:   d3 fb                           	sar ebx, cl
0x80498a8:   89 d8                           	mov eax, ebx
0x80498aa:   39 c2                           	cmp edx, eax
0x80498ac:   0f 9d c0                        	setge al
0x80498af:   0f b6 d0                        	movzx edx, al
0x80498b2:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x80498b9:   09 d0                           	or eax, edx
0x80498bb:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x80498bf:   0f bf d2                        	movsx edx, dx
0x80498c2:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x80498c5:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x80498c8:   89 c1                           	mov ecx, eax
0x80498ca:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x80498ce:   01 c8                           	add eax, ecx
0x80498d0:   0f b6 c0                        	movzx eax, al
0x80498d3:   83 e8 01                        	sub eax, 1
0x80498d6:   98                              	cwde 
0x80498d7:   0f af d0                        	imul edx, eax
0x80498da:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x80498e1:   39 c2                           	cmp edx, eax
0x80498e3:   0f 84 3c 02 00 00               	je 0x8049b25 <func_1+0x386>
0x80498e9:   c7 85 c8 fe ff ff d1 c0 8b 6d   	mov dword ptr [ebp - 0x138], 0x6d8bc0d1
0x80498f3:   66 c7 85 c6 fe ff ff 48 28      	mov word ptr [ebp - 0x13a], 0x2848
0x80498fc:   c7 85 c0 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x140], 2
0x8049906:   c7 85 bc fe ff ff 65 4c 09 7b   	mov dword ptr [ebp - 0x144], 0x7b094c65
0x8049910:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x8049916:   8d 50 ff                        	lea edx, [eax - 1]
0x8049919:   89 95 c8 fe ff ff               	mov dword ptr [ebp - 0x138], edx
0x804991f:   0f be c0                        	movsx eax, al
0x8049922:   ba cc ff ff ff                  	mov edx, 0xffffffcc
0x8049927:   89 c1                           	mov ecx, eax
0x8049929:   d3 fa                           	sar edx, cl
0x804992b:   89 d0                           	mov eax, edx
0x804992d:   89 c3                           	mov ebx, eax
0x804992f:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x8049936:   0f b6 d0                        	movzx edx, al
0x8049939:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x804993d:   89 c1                           	mov ecx, eax
0x804993f:   d3 e2                           	shl edx, cl
0x8049941:   89 d0                           	mov eax, edx
0x8049943:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049949:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804994f:   01 d8                           	add eax, ebx
0x8049951:   83 f0 02                        	xor eax, 2
0x8049954:   0f b6 c0                        	movzx eax, al
0x8049957:   c1 e0 07                        	shl eax, 7
0x804995a:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804995d:   0f 9d c0                        	setge al
0x8049960:   0f b6 c0                        	movzx eax, al
0x8049963:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049966:   c7 45 b8 fc ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffffc
0x804996d:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x8049977:   83 bd c8 fe ff ff 3c            	cmp dword ptr [ebp - 0x138], 0x3c
0x804997e:   0f 85 fd 00 00 00               	jne 0x8049a81 <func_1+0x2e2>
0x8049984:   c6 85 bb fe ff ff 01            	mov byte ptr [ebp - 0x145], 1
0x804998b:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x8049992:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049995:   80 7d eb 01                     	cmp byte ptr [ebp - 0x15], 1
0x8049999:   74 07                           	je 0x80499a2 <func_1+0x203>
0x804999b:   b9 20 00 00 00                  	mov ecx, 0x20
0x80499a0:   eb 05                           	jmp 0x80499a7 <func_1+0x208>
0x80499a2:   b9 00 00 00 00                  	mov ecx, 0
0x80499a7:   0f b6 85 bb fe ff ff            	movzx eax, byte ptr [ebp - 0x145]
0x80499ae:   0f b6 c0                        	movzx eax, al
0x80499b1:   f6 75 87                        	div byte ptr [ebp - 0x79]
0x80499b4:   0f b6 d0                        	movzx edx, al
0x80499b7:   0f b6 85 bb fe ff ff            	movzx eax, byte ptr [ebp - 0x145]
0x80499be:   0f af d0                        	imul edx, eax
0x80499c1:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x80499c5:   39 c2                           	cmp edx, eax
0x80499c7:   0f 9c c0                        	setl al
0x80499ca:   0f b6 c0                        	movzx eax, al
0x80499cd:   31 c8                           	xor eax, ecx
0x80499cf:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x80499d2:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x80499d6:   0f bf 55 d0                     	movsx edx, word ptr [ebp - 0x30]
0x80499da:   0f bf 9d 7e ff ff ff            	movsx ebx, word ptr [ebp - 0x82]
0x80499e1:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x80499e5:   0f b6 75 d9                     	movzx esi, byte ptr [ebp - 0x27]
0x80499e9:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x80499ef:   0f be 4d da                     	movsx ecx, byte ptr [ebp - 0x26]
0x80499f3:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x80499f9:   0f b6 75 db                     	movzx esi, byte ptr [ebp - 0x25]
0x80499fd:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049a03:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x8049a07:   89 8d a4 fe ff ff               	mov dword ptr [ebp - 0x15c], ecx
0x8049a0d:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x8049a11:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049a17:   0f be 4d eb                     	movsx ecx, byte ptr [ebp - 0x15]
0x8049a1b:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x8049a21:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x8049a25:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x8049a29:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049a2f:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049a32:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049a35:   50                              	push eax
0x8049a36:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049a39:   52                              	push edx
0x8049a3a:   53                              	push ebx
0x8049a3b:   57                              	push edi
0x8049a3c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049a3f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049a42:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049a48:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049a4e:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049a54:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049a5a:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049a60:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049a63:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049a66:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049a6c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049a6f:   56                              	push esi
0x8049a70:   51                              	push ecx
0x8049a71:   e8 b0 fb ff ff                  	call 0x8049626 <set_var>
0x8049a76:   83 c4 54                        	add esp, 0x54
0x8049a79:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049a7c:   e9 ab 0d 00 00                  	jmp 0x804a82c <func_1+0x108d>
0x8049a81:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a85:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049a88:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049a8b:   0f b6 d0                        	movzx edx, al
0x8049a8e:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049a91:   0f b6 c0                        	movzx eax, al
0x8049a94:   89 c1                           	mov ecx, eax
0x8049a96:   d3 e2                           	shl edx, cl
0x8049a98:   89 d0                           	mov eax, edx
0x8049a9a:   3d 80 21 8a d2                  	cmp eax, 0xd28a2180
0x8049a9f:   0f 97 c0                        	seta al
0x8049aa2:   0f b6 c0                        	movzx eax, al
0x8049aa5:   f7 d0                           	not eax
0x8049aa7:   89 c2                           	mov edx, eax
0x8049aa9:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049aad:   31 d0                           	xor eax, edx
0x8049aaf:   2d 7f aa 74 41                  	sub eax, 0x4174aa7f
0x8049ab4:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049ab7:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049aba:   c0 e8 06                        	shr al, 6
0x8049abd:   0f b6 c0                        	movzx eax, al
0x8049ac0:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049ac3:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049ac6:   0f be d0                        	movsx edx, al
0x8049ac9:   89 d0                           	mov eax, edx
0x8049acb:   c1 e0 03                        	shl eax, 3
0x8049ace:   01 d0                           	add eax, edx
0x8049ad0:   c1 e0 02                        	shl eax, 2
0x8049ad3:   01 c2                           	add edx, eax
0x8049ad5:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049adc:   39 c2                           	cmp edx, eax
0x8049ade:   0f 9d c0                        	setge al
0x8049ae1:   0f b6 c0                        	movzx eax, al
0x8049ae4:   89 c1                           	mov ecx, eax
0x8049ae6:   66 0f be 45 eb                  	movsx ax, byte ptr [ebp - 0x15]
0x8049aeb:   89 c2                           	mov edx, eax
0x8049aed:   89 c8                           	mov eax, ecx
0x8049aef:   0f af c2                        	imul eax, edx
0x8049af2:   0f b6 d0                        	movzx edx, al
0x8049af5:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x8049afb:   0f b6 c0                        	movzx eax, al
0x8049afe:   89 c1                           	mov ecx, eax
0x8049b00:   d3 e2                           	shl edx, cl
0x8049b02:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x8049b09:   21 c2                           	and edx, eax
0x8049b0b:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x8049b12:   39 c2                           	cmp edx, eax
0x8049b14:   0f 95 c0                        	setne al
0x8049b17:   0f b6 c0                        	movzx eax, al
0x8049b1a:   31 85 bc fe ff ff               	xor dword ptr [ebp - 0x144], eax
0x8049b20:   e9 44 0c 00 00                  	jmp 0x804a769 <func_1+0xfca>
0x8049b25:   66 c7 45 b2 ff ff               	mov word ptr [ebp - 0x4e], 0xffff
0x8049b2b:   c7 85 68 ff ff ff 38 83 48 74   	mov dword ptr [ebp - 0x98], 0x74488338
0x8049b35:   c7 45 ac 42 ee 1b 38            	mov dword ptr [ebp - 0x54], 0x381bee42
0x8049b3c:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x8049b46:   c6 85 63 ff ff ff 99            	mov byte ptr [ebp - 0x9d], 0x99
0x8049b4d:   c6 85 62 ff ff ff 1d            	mov byte ptr [ebp - 0x9e], 0x1d
0x8049b54:   c7 85 5c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa4], 1
0x8049b5e:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049b63:   0f 84 03 05 00 00               	je 0x804a06c <func_1+0x8cd>
0x8049b69:   c7 85 0c ff ff ff 47 7f bb 4f   	mov dword ptr [ebp - 0xf4], 0x4fbb7f47
0x8049b73:   c7 45 a8 ff ff ff ff            	mov dword ptr [ebp - 0x58], 0xffffffff
0x8049b7a:   c7 45 a4 cb b6 62 27            	mov dword ptr [ebp - 0x5c], 0x2762b6cb
0x8049b81:   c7 45 a0 62 a5 09 12            	mov dword ptr [ebp - 0x60], 0x1209a562
0x8049b88:   c6 45 9f 9f                     	mov byte ptr [ebp - 0x61], 0x9f
0x8049b8c:   c7 85 08 ff ff ff cd c4 e4 ab   	mov dword ptr [ebp - 0xf8], 0xabe4c4cd
0x8049b96:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b99:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049b9c:   75 5e                           	jne 0x8049bfc <func_1+0x45d>
0x8049b9e:   c7 85 d0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x130], 0
0x8049ba8:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049baf:   eb 20                           	jmp 0x8049bd1 <func_1+0x432>
0x8049bb1:   c7 85 cc fe ff ff 08 9d 20 8d   	mov dword ptr [ebp - 0x134], 0x8d209d08
0x8049bbb:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049bbf:   83 e0 01                        	and eax, 1
0x8049bc2:   85 c0                           	test eax, eax
0x8049bc4:   0f 94 c0                        	sete al
0x8049bc7:   0f b6 c0                        	movzx eax, al
0x8049bca:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049bcd:   83 45 ec 05                     	add dword ptr [ebp - 0x14], 5
0x8049bd1:   83 7d ec 08                     	cmp dword ptr [ebp - 0x14], 8
0x8049bd5:   7e da                           	jle 0x8049bb1 <func_1+0x412>
0x8049bd7:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049bdd:   0f b7 c0                        	movzx eax, ax
0x8049be0:   c1 e0 03                        	shl eax, 3
0x8049be3:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x8049be6:   75 07                           	jne 0x8049bef <func_1+0x450>
0x8049be8:   b8 02 00 00 00                  	mov eax, 2
0x8049bed:   eb 05                           	jmp 0x8049bf4 <func_1+0x455>
0x8049bef:   b8 01 00 00 00                  	mov eax, 1
0x8049bf4:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049bf7:   e9 64 04 00 00                  	jmp 0x804a060 <func_1+0x8c1>
0x8049bfc:   c7 85 04 ff ff ff 18 8d a8 9a   	mov dword ptr [ebp - 0xfc], 0x9aa88d18
0x8049c06:   c7 45 98 0b a0 ae 56            	mov dword ptr [ebp - 0x68], 0x56aea00b
0x8049c0d:   c7 45 94 fd ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffffd
0x8049c14:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049c18:   81 bd 04 ff ff ff bb d1 e9 3c   	cmp dword ptr [ebp - 0xfc], 0x3ce9d1bb
0x8049c22:   0f 94 c2                        	sete dl
0x8049c25:   0f b6 d2                        	movzx edx, dl
0x8049c28:   8b 4d ec                        	mov ecx, dword ptr [ebp - 0x14]
0x8049c2b:   31 ca                           	xor edx, ecx
0x8049c2d:   0f b7 da                        	movzx ebx, dx
0x8049c30:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049c33:   0f b7 d2                        	movzx edx, dx
0x8049c36:   89 d1                           	mov ecx, edx
0x8049c38:   d3 fb                           	sar ebx, cl
0x8049c3a:   89 da                           	mov edx, ebx
0x8049c3c:   85 d2                           	test edx, edx
0x8049c3e:   75 06                           	jne 0x8049c46 <func_1+0x4a7>
0x8049c40:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049c44:   74 07                           	je 0x8049c4d <func_1+0x4ae>
0x8049c46:   ba 01 00 00 00                  	mov edx, 1
0x8049c4b:   eb 05                           	jmp 0x8049c52 <func_1+0x4b3>
0x8049c4d:   ba 00 00 00 00                  	mov edx, 0
0x8049c52:   0f b7 d2                        	movzx edx, dx
0x8049c55:   69 d2 4a 16 00 00               	imul edx, edx, 0x164a
0x8049c5b:   33 95 0c ff ff ff               	xor edx, dword ptr [ebp - 0xf4]
0x8049c61:   89 d1                           	mov ecx, edx
0x8049c63:   33 8d 04 ff ff ff               	xor ecx, dword ptr [ebp - 0xfc]
0x8049c69:   8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x8049c6c:   21 ca                           	and edx, ecx
0x8049c6e:   89 55 a8                        	mov dword ptr [ebp - 0x58], edx
0x8049c71:   8b 55 a8                        	mov edx, dword ptr [ebp - 0x58]
0x8049c74:   0f b6 d2                        	movzx edx, dl
0x8049c77:   01 d2                           	add edx, edx
0x8049c79:   89 d7                           	mov edi, edx
0x8049c7b:   ba 00 00 00 00                  	mov edx, 0
0x8049c80:   f7 f7                           	div edi
0x8049c82:   66 09 45 de                     	or word ptr [ebp - 0x22], ax
0x8049c86:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x8049c8c:   e9 ad 01 00 00                  	jmp 0x8049e3e <func_1+0x69f>
0x8049c91:   c7 85 ec fe ff ff 31 e6 5c d0   	mov dword ptr [ebp - 0x114], 0xd05ce631
0x8049c9b:   c7 85 e8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x118], 0xffffffff
0x8049ca5:   c6 85 e7 fe ff ff 05            	mov byte ptr [ebp - 0x119], 5
0x8049cac:   c7 85 e0 fe ff ff 87 a2 0f 73   	mov dword ptr [ebp - 0x120], 0x730fa287
0x8049cb6:   66 c7 85 de fe ff ff fd ff      	mov word ptr [ebp - 0x122], 0xfffd
0x8049cbf:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049cc3:   09 85 e8 fe ff ff               	or dword ptr [ebp - 0x118], eax
0x8049cc9:   81 bd e8 fe ff ff a2 75 e1 2a   	cmp dword ptr [ebp - 0x118], 0x2ae175a2
0x8049cd3:   0f 9f c0                        	setg al
0x8049cd6:   0f b6 d0                        	movzx edx, al
0x8049cd9:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049cdc:   0f b7 c0                        	movzx eax, ax
0x8049cdf:   01 d0                           	add eax, edx
0x8049ce1:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x8049ce4:   81 4d a4 19 ec 44 fa            	or dword ptr [ebp - 0x5c], 0xfa44ec19
0x8049ceb:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049cee:   83 c8 01                        	or eax, 1
0x8049cf1:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049cf4:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049cf9:   0f 95 c0                        	setne al
0x8049cfc:   0f b6 c0                        	movzx eax, al
0x8049cff:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049d02:   f7 95 e0 fe ff ff               	not dword ptr [ebp - 0x120]
0x8049d08:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049d0c:   0f b6 d0                        	movzx edx, al
0x8049d0f:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049d13:   0f b6 c0                        	movzx eax, al
0x8049d16:   0f af c2                        	imul eax, edx
0x8049d19:   3d 93 cb 00 00                  	cmp eax, 0xcb93
0x8049d1e:   7e 07                           	jle 0x8049d27 <func_1+0x588>
0x8049d20:   b8 09 00 00 00                  	mov eax, 9
0x8049d25:   eb 05                           	jmp 0x8049d2c <func_1+0x58d>
0x8049d27:   b8 08 00 00 00                  	mov eax, 8
0x8049d2c:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049d2f:   0f 9c c0                        	setl al
0x8049d32:   0f b6 c0                        	movzx eax, al
0x8049d35:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x8049d3b:   0f 9e c0                        	setle al
0x8049d3e:   0f b6 d0                        	movzx edx, al
0x8049d41:   0f be 85 75 ff ff ff            	movsx eax, byte ptr [ebp - 0x8b]
0x8049d48:   39 c2                           	cmp edx, eax
0x8049d4a:   0f 95 c0                        	setne al
0x8049d4d:   0f b6 d0                        	movzx edx, al
0x8049d50:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049d54:   39 c2                           	cmp edx, eax
0x8049d56:   0f 9d c0                        	setge al
0x8049d59:   0f b6 c0                        	movzx eax, al
0x8049d5c:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049d5f:   0f 94 c0                        	sete al
0x8049d62:   0f b6 d0                        	movzx edx, al
0x8049d65:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049d69:   39 c2                           	cmp edx, eax
0x8049d6b:   7f 0d                           	jg 0x8049d7a <func_1+0x5db>
0x8049d6d:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049d71:   74 07                           	je 0x8049d7a <func_1+0x5db>
0x8049d73:   b8 01 00 00 00                  	mov eax, 1
0x8049d78:   eb 05                           	jmp 0x8049d7f <func_1+0x5e0>
0x8049d7a:   b8 00 00 00 00                  	mov eax, 0
0x8049d7f:   98                              	cwde 
0x8049d80:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x8049d86:   7d 07                           	jge 0x8049d8f <func_1+0x5f0>
0x8049d88:   66 83 7d b2 00                  	cmp word ptr [ebp - 0x4e], 0
0x8049d8d:   74 7c                           	je 0x8049e0b <func_1+0x66c>
0x8049d8f:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x8049d99:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x8049d9d:   83 c0 01                        	add eax, 1
0x8049da0:   88 45 9f                        	mov byte ptr [ebp - 0x61], al
0x8049da3:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049da7:   74 47                           	je 0x8049df0 <func_1+0x651>
0x8049da9:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049dac:   83 c8 fc                        	or eax, 0xfffffffc
0x8049daf:   89 c1                           	mov ecx, eax
0x8049db1:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049db7:   33 85 d4 fe ff ff               	xor eax, dword ptr [ebp - 0x12c]
0x8049dbd:   89 c2                           	mov edx, eax
0x8049dbf:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049dc3:   39 c2                           	cmp edx, eax
0x8049dc5:   0f 92 c0                        	setb al
0x8049dc8:   0f b6 c0                        	movzx eax, al
0x8049dcb:   39 c1                           	cmp ecx, eax
0x8049dcd:   0f 94 c0                        	sete al
0x8049dd0:   0f b6 c0                        	movzx eax, al
0x8049dd3:   0b 85 08 ff ff ff               	or eax, dword ptr [ebp - 0xf8]
0x8049dd9:   21 85 e8 fe ff ff               	and dword ptr [ebp - 0x118], eax
0x8049ddf:   b8 01 00 00 00                  	mov eax, 1
0x8049de4:   ba 00 00 00 00                  	mov edx, 0
0x8049de9:   66 f7 75 b2                     	div word ptr [ebp - 0x4e]
0x8049ded:   66 85 c0                        	test ax, ax
0x8049df0:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x8049dfa:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049dfe:   83 e8 01                        	sub eax, 1
0x8049e01:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049e05:   80 7d 87 00                     	cmp byte ptr [ebp - 0x79], 0
0x8049e09:   eb 28                           	jmp 0x8049e33 <func_1+0x694>
0x8049e0b:   c7 85 d8 fe ff ff cc 2a d6 36   	mov dword ptr [ebp - 0x128], 0x36d62acc
0x8049e15:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049e19:   0f 95 c0                        	setne al
0x8049e1c:   0f b6 c0                        	movzx eax, al
0x8049e1f:   0f b7 d0                        	movzx edx, ax
0x8049e22:   66 0f be 85 75 ff ff ff         	movsx ax, byte ptr [ebp - 0x8b]
0x8049e2a:   0f b7 c0                        	movzx eax, ax
0x8049e2d:   0f af c2                        	imul eax, edx
0x8049e30:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049e33:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e37:   83 c0 01                        	add eax, 1
0x8049e3a:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049e3e:   66 83 7d de 1c                  	cmp word ptr [ebp - 0x22], 0x1c
0x8049e43:   0f 87 48 fe ff ff               	ja 0x8049c91 <func_1+0x4f2>
0x8049e49:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049e4d:   21 45 98                        	and dword ptr [ebp - 0x68], eax
0x8049e50:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049e53:   83 e8 07                        	sub eax, 7
0x8049e56:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x8049e59:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e5c:   0f b6 f8                        	movzx edi, al
0x8049e5f:   b8 01 00 00 00                  	mov eax, 1
0x8049e64:   99                              	cdq 
0x8049e65:   f7 ff                           	idiv edi
0x8049e67:   89 c2                           	mov edx, eax
0x8049e69:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e6c:   01 d0                           	add eax, edx
0x8049e6e:   84 c0                           	test al, al
0x8049e70:   0f 84 8e 00 00 00               	je 0x8049f04 <func_1+0x765>
0x8049e76:   c7 85 f0 fe ff ff b9 86 35 f9   	mov dword ptr [ebp - 0x110], 0xf93586b9
0x8049e80:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049e84:   74 05                           	je 0x8049e8b <func_1+0x6ec>
0x8049e86:   e9 fb fd ff ff                  	jmp 0x8049c86 <func_1+0x4e7>
0x8049e8b:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049e8f:   83 e8 01                        	sub eax, 1
0x8049e92:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049e95:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e98:   0f b7 d0                        	movzx edx, ax
0x8049e9b:   66 83 6d dc 01                  	sub word ptr [ebp - 0x24], 1
0x8049ea0:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049ea4:   b9 3d 00 00 00                  	mov ecx, 0x3d
0x8049ea9:   d3 f8                           	sar eax, cl
0x8049eab:   66 0f be c8                     	movsx cx, al
0x8049eaf:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049eb5:   66 98                           	cbw 
0x8049eb7:   0f af c1                        	imul eax, ecx
0x8049eba:   0f b7 c0                        	movzx eax, ax
0x8049ebd:   f7 d8                           	neg eax
0x8049ebf:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049ec2:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049ec5:   0f b7 c0                        	movzx eax, ax
0x8049ec8:   89 c1                           	mov ecx, eax
0x8049eca:   d3 fa                           	sar edx, cl
0x8049ecc:   89 d0                           	mov eax, edx
0x8049ece:   0f be f8                        	movsx edi, al
0x8049ed1:   b8 91 ff ff ff                  	mov eax, 0xffffff91
0x8049ed6:   99                              	cdq 
0x8049ed7:   f7 ff                           	idiv edi
0x8049ed9:   0f be c0                        	movsx eax, al
0x8049edc:   83 c0 1a                        	add eax, 0x1a
0x8049edf:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x8049ee2:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049ee6:   75 04                           	jne 0x8049eec <func_1+0x74d>
0x8049ee8:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049eec:   80 6d db 01                     	sub byte ptr [ebp - 0x25], 1
0x8049ef0:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049ef6:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049ef9:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049efc:   08 45 da                        	or byte ptr [ebp - 0x26], al
0x8049eff:   e9 5c 01 00 00                  	jmp 0x804a060 <func_1+0x8c1>
0x8049f04:   c7 85 00 ff ff ff 69 d9 30 9f   	mov dword ptr [ebp - 0x100], 0x9f30d969
0x8049f0e:   c7 85 fc fe ff ff d0 5a d7 c6   	mov dword ptr [ebp - 0x104], 0xc6d75ad0
0x8049f18:   c7 85 f8 fe ff ff 11 ba e7 b2   	mov dword ptr [ebp - 0x108], 0xb2e7ba11
0x8049f22:   c7 45 a0 f0 ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffff0
0x8049f29:   eb 79                           	jmp 0x8049fa4 <func_1+0x805>
0x8049f2b:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x8049f32:   75 78                           	jne 0x8049fac <func_1+0x80d>
0x8049f34:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049f38:   83 c0 01                        	add eax, 1
0x8049f3b:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049f3f:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049f43:   83 e8 01                        	sub eax, 1
0x8049f46:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049f4a:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x8049f4e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f51:   0f b6 c0                        	movzx eax, al
0x8049f54:   0f af d0                        	imul edx, eax
0x8049f57:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049f5b:   39 c2                           	cmp edx, eax
0x8049f5d:   0f 9c c0                        	setl al
0x8049f60:   0f b6 c0                        	movzx eax, al
0x8049f63:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f66:   0f be 85 75 ff ff ff            	movsx eax, byte ptr [ebp - 0x8b]
0x8049f6d:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x8049f71:   83 ea 06                        	sub edx, 6
0x8049f74:   89 d7                           	mov edi, edx
0x8049f76:   ba 00 00 00 00                  	mov edx, 0
0x8049f7b:   f7 f7                           	div edi
0x8049f7d:   0f be d0                        	movsx edx, al
0x8049f80:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f83:   89 c1                           	mov ecx, eax
0x8049f85:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049f88:   21 c8                           	and eax, ecx
0x8049f8a:   0f be c0                        	movsx eax, al
0x8049f8d:   29 c2                           	sub edx, eax
0x8049f8f:   89 d0                           	mov eax, edx
0x8049f91:   2b 45 94                        	sub eax, dword ptr [ebp - 0x6c]
0x8049f94:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049f9a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f9d:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049fa0:   83 45 a0 06                     	add dword ptr [ebp - 0x60], 6
0x8049fa4:   83 7d a0 18                     	cmp dword ptr [ebp - 0x60], 0x18
0x8049fa8:   7f 81                           	jg 0x8049f2b <func_1+0x78c>
0x8049faa:   eb 01                           	jmp 0x8049fad <func_1+0x80e>
0x8049fac:   90                              	nop 
0x8049fad:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049fb3:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049fb6:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049fba:   31 85 08 ff ff ff               	xor dword ptr [ebp - 0xf8], eax
0x8049fc0:   66 c7 45 b2 00 00               	mov word ptr [ebp - 0x4e], 0
0x8049fc6:   e9 8a 00 00 00                  	jmp 0x804a055 <func_1+0x8b6>
0x8049fcb:   66 c7 85 f6 fe ff ff 06 00      	mov word ptr [ebp - 0x10a], 6
0x8049fd4:   66 83 bd f6 fe ff ff 55         	cmp word ptr [ebp - 0x10a], 0x55
0x8049fdc:   0f 9f c0                        	setg al
0x8049fdf:   0f b6 c0                        	movzx eax, al
0x8049fe2:   09 45 b4                        	or dword ptr [ebp - 0x4c], eax
0x8049fe5:   0f b6 45 d9                     	movzx eax, byte ptr [ebp - 0x27]
0x8049fe9:   83 c0 01                        	add eax, 1
0x8049fec:   88 45 d9                        	mov byte ptr [ebp - 0x27], al
0x8049fef:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x8049ff3:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ff6:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x8049ffa:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049ffd:   0f b6 55 87                     	movzx edx, byte ptr [ebp - 0x79]
0x804a001:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a005:   29 c2                           	sub edx, eax
0x804a007:   89 d0                           	mov eax, edx
0x804a009:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a00c:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a00f:   0f bf d0                        	movsx edx, ax
0x804a012:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a015:   98                              	cwde 
0x804a016:   89 c1                           	mov ecx, eax
0x804a018:   d3 e2                           	shl edx, cl
0x804a01a:   89 d0                           	mov eax, edx
0x804a01c:   85 c0                           	test eax, eax
0x804a01e:   75 07                           	jne 0x804a027 <func_1+0x888>
0x804a020:   83 bd 00 ff ff ff 00            	cmp dword ptr [ebp - 0x100], 0
0x804a027:   90                              	nop 
0x804a028:   0f b6 55 87                     	movzx edx, byte ptr [ebp - 0x79]
0x804a02c:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a032:   0f b6 c0                        	movzx eax, al
0x804a035:   89 c1                           	mov ecx, eax
0x804a037:   d3 e2                           	shl edx, cl
0x804a039:   89 d0                           	mov eax, edx
0x804a03b:   0f b7 c0                        	movzx eax, ax
0x804a03e:   69 c0 f8 ff 00 00               	imul eax, eax, 0xfff8
0x804a044:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a047:   0f 94 c0                        	sete al
0x804a04a:   0f b6 c0                        	movzx eax, al
0x804a04d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a050:   66 83 45 b2 03                  	add word ptr [ebp - 0x4e], 3
0x804a055:   66 83 7d b2 23                  	cmp word ptr [ebp - 0x4e], 0x23
0x804a05a:   0f 86 6b ff ff ff               	jbe 0x8049fcb <func_1+0x82c>
0x804a060:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x804a067:   e9 8d 06 00 00                  	jmp 0x804a6f9 <func_1+0xf5a>
0x804a06c:   c7 85 58 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xa8], 0xfffffffa
0x804a076:   c7 85 54 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xac], 0xffffffff
0x804a080:   c7 45 90 52 8b e0 3d            	mov dword ptr [ebp - 0x70], 0x3de08b52
0x804a087:   66 c7 45 8e ff ff               	mov word ptr [ebp - 0x72], 0xffff
0x804a08d:   c7 85 50 ff ff ff 28 77 ca 54   	mov dword ptr [ebp - 0xb0], 0x54ca7728
0x804a097:   c6 85 4f ff ff ff 01            	mov byte ptr [ebp - 0xb1], 1
0x804a09e:   66 c7 85 4c ff ff ff ff ff      	mov word ptr [ebp - 0xb4], 0xffff
0x804a0a7:   c6 85 4b ff ff ff ff            	mov byte ptr [ebp - 0xb5], 0xff
0x804a0ae:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a0b2:   0f 84 13 01 00 00               	je 0x804a1cb <func_1+0xa2c>
0x804a0b8:   c6 85 2b ff ff ff 72            	mov byte ptr [ebp - 0xd5], 0x72
0x804a0bf:   c7 85 24 ff ff ff 57 72 f8 7e   	mov dword ptr [ebp - 0xdc], 0x7ef87257
0x804a0c9:   c7 45 ec a6 0a 2c 9d            	mov dword ptr [ebp - 0x14], 0x9d2c0aa6
0x804a0d0:   c6 45 eb 00                     	mov byte ptr [ebp - 0x15], 0
0x804a0d4:   eb 32                           	jmp 0x804a108 <func_1+0x969>
0x804a0d6:   66 c7 85 22 ff ff ff f7 ff      	mov word ptr [ebp - 0xde], 0xfff7
0x804a0df:   c7 45 ec 06 00 00 00            	mov dword ptr [ebp - 0x14], 6
0x804a0e6:   c7 45 ec f9 ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffff9
0x804a0ed:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a0f1:   0f 94 c0                        	sete al
0x804a0f4:   0f b6 c0                        	movzx eax, al
0x804a0f7:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a0fa:   83 45 90 01                     	add dword ptr [ebp - 0x70], 1
0x804a0fe:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a102:   83 e8 04                        	sub eax, 4
0x804a105:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a108:   80 7d eb fe                     	cmp byte ptr [ebp - 0x15], 0xfe
0x804a10c:   7d c8                           	jge 0x804a0d6 <func_1+0x937>
0x804a10e:   80 75 da fc                     	xor byte ptr [ebp - 0x26], 0xfc
0x804a112:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x804a116:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a119:   0f 9c c0                        	setl al
0x804a11c:   0f b6 c0                        	movzx eax, al
0x804a11f:   33 45 bc                        	xor eax, dword ptr [ebp - 0x44]
0x804a122:   89 c2                           	mov edx, eax
0x804a124:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a128:   21 d0                           	and eax, edx
0x804a12a:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a12e:   8b 4d bc                        	mov ecx, dword ptr [ebp - 0x44]
0x804a131:   b8 01 00 00 00                  	mov eax, 1
0x804a136:   ba 00 00 00 00                  	mov edx, 0
0x804a13b:   f7 f1                           	div ecx
0x804a13d:   89 d0                           	mov eax, edx
0x804a13f:   f7 d0                           	not eax
0x804a141:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a144:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a148:   74 07                           	je 0x804a151 <func_1+0x9b2>
0x804a14a:   b8 01 00 00 00                  	mov eax, 1
0x804a14f:   eb 05                           	jmp 0x804a156 <func_1+0x9b7>
0x804a151:   b8 00 00 00 00                  	mov eax, 0
0x804a156:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a159:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a15d:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a160:   29 c2                           	sub edx, eax
0x804a162:   89 d0                           	mov eax, edx
0x804a164:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a16a:   0f 97 c0                        	seta al
0x804a16d:   0f b6 c0                        	movzx eax, al
0x804a170:   66 2b 45 b2                     	sub ax, word ptr [ebp - 0x4e]
0x804a174:   66 2d 2b 09                     	sub ax, 0x92b
0x804a178:   0f bf d0                        	movsx edx, ax
0x804a17b:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a181:   98                              	cwde 
0x804a182:   01 c2                           	add edx, eax
0x804a184:   0f b6 85 2b ff ff ff            	movzx eax, byte ptr [ebp - 0xd5]
0x804a18b:   39 c2                           	cmp edx, eax
0x804a18d:   0f 9f c0                        	setg al
0x804a190:   0f b6 c0                        	movzx eax, al
0x804a193:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a196:   80 bd 75 ff ff ff 00            	cmp byte ptr [ebp - 0x8b], 0
0x804a19d:   75 0a                           	jne 0x804a1a9 <func_1+0xa0a>
0x804a19f:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x804a1a7:   74 07                           	je 0x804a1b0 <func_1+0xa11>
0x804a1a9:   b8 01 00 00 00                  	mov eax, 1
0x804a1ae:   eb 05                           	jmp 0x804a1b5 <func_1+0xa16>
0x804a1b0:   b8 00 00 00 00                  	mov eax, 0
0x804a1b5:   0f b7 c0                        	movzx eax, ax
0x804a1b8:   ba 1c 64 00 00                  	mov edx, 0x641c
0x804a1bd:   89 c1                           	mov ecx, eax
0x804a1bf:   d3 e2                           	shl edx, cl
0x804a1c1:   89 d0                           	mov eax, edx
0x804a1c3:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a1c6:   e9 28 01 00 00                  	jmp 0x804a2f3 <func_1+0xb54>
0x804a1cb:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x804a1d5:   c7 45 88 d5 a8 d4 c4            	mov dword ptr [ebp - 0x78], 0xc4d4a8d5
0x804a1dc:   c7 85 40 ff ff ff 5a 9d 48 4a   	mov dword ptr [ebp - 0xc0], 0x4a489d5a
0x804a1e6:   66 c7 45 8e f0 ff               	mov word ptr [ebp - 0x72], 0xfff0
0x804a1ec:   e9 f7 00 00 00                  	jmp 0x804a2e8 <func_1+0xb49>
0x804a1f1:   66 c7 85 3e ff ff ff 07 00      	mov word ptr [ebp - 0xc2], 7
0x804a1fa:   c7 85 38 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffb
0x804a204:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a208:   0f 84 8d 00 00 00               	je 0x804a29b <func_1+0xafc>
0x804a20e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a212:   8d 50 01                        	lea edx, [eax + 1]
0x804a215:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x804a219:   0f b7 c0                        	movzx eax, ax
0x804a21c:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a222:   66 c7 45 d2 01 00               	mov word ptr [ebp - 0x2e], 1
0x804a228:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a22c:   98                              	cwde 
0x804a22d:   c1 e0 08                        	shl eax, 8
0x804a230:   98                              	cwde 
0x804a231:   c1 e0 02                        	shl eax, 2
0x804a234:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a237:   76 0a                           	jbe 0x804a243 <func_1+0xaa4>
0x804a239:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a241:   74 07                           	je 0x804a24a <func_1+0xaab>
0x804a243:   ba 01 00 00 00                  	mov edx, 1
0x804a248:   eb 05                           	jmp 0x804a24f <func_1+0xab0>
0x804a24a:   ba 00 00 00 00                  	mov edx, 0
0x804a24f:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x804a253:   39 c2                           	cmp edx, eax
0x804a255:   0f 9d c0                        	setge al
0x804a258:   0f b6 d0                        	movzx edx, al
0x804a25b:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a25f:   0f b6 c0                        	movzx eax, al
0x804a262:   01 c2                           	add edx, eax
0x804a264:   0f b6 45 d9                     	movzx eax, byte ptr [ebp - 0x27]
0x804a268:   39 c2                           	cmp edx, eax
0x804a26a:   0f 95 c0                        	setne al
0x804a26d:   0f b6 d0                        	movzx edx, al
0x804a270:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a273:   0f b6 c0                        	movzx eax, al
0x804a276:   89 c1                           	mov ecx, eax
0x804a278:   d3 e2                           	shl edx, cl
0x804a27a:   89 d0                           	mov eax, edx
0x804a27c:   85 c0                           	test eax, eax
0x804a27e:   74 1b                           	je 0x804a29b <func_1+0xafc>
0x804a280:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a284:   74 15                           	je 0x804a29b <func_1+0xafc>
0x804a286:   66 c7 85 36 ff ff ff fc ff      	mov word ptr [ebp - 0xca], 0xfffc
0x804a28f:   66 83 bd 36 ff ff ff 00         	cmp word ptr [ebp - 0xca], 0
0x804a297:   74 18                           	je 0x804a2b1 <func_1+0xb12>
0x804a299:   eb 58                           	jmp 0x804a2f3 <func_1+0xb54>
0x804a29b:   c7 85 30 ff ff ff cf af 06 22   	mov dword ptr [ebp - 0xd0], 0x2206afcf
0x804a2a5:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a2a9:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804a2af:   eb 01                           	jmp 0x804a2b2 <func_1+0xb13>
0x804a2b1:   90                              	nop 
0x804a2b2:   83 45 88 01                     	add dword ptr [ebp - 0x78], 1
0x804a2b6:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a2b9:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a2bc:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804a2c3:   eb 12                           	jmp 0x804a2d7 <func_1+0xb38>
0x804a2c5:   c7 85 2c ff ff ff dd 78 fa 41   	mov dword ptr [ebp - 0xd4], 0x41fa78dd
0x804a2cf:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a2d3:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a2d7:   83 7d e4 12                     	cmp dword ptr [ebp - 0x1c], 0x12
0x804a2db:   7e e8                           	jle 0x804a2c5 <func_1+0xb26>
0x804a2dd:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x804a2e1:   83 c0 01                        	add eax, 1
0x804a2e4:   66 89 45 8e                     	mov word ptr [ebp - 0x72], ax
0x804a2e8:   66 83 7d 8e 36                  	cmp word ptr [ebp - 0x72], 0x36
0x804a2ed:   0f 85 fe fe ff ff               	jne 0x804a1f1 <func_1+0xa52>
0x804a2f3:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a2f9:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x804a2fc:   89 c2                           	mov edx, eax
0x804a2fe:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a304:   39 c2                           	cmp edx, eax
0x804a306:   0f 92 c0                        	setb al
0x804a309:   0f b6 d0                        	movzx edx, al
0x804a30c:   66 0f be 85 63 ff ff ff         	movsx ax, byte ptr [ebp - 0x9d]
0x804a314:   21 d0                           	and eax, edx
0x804a316:   66 83 f8 f5                     	cmp ax, -0xb
0x804a31a:   0f 86 37 03 00 00               	jbe 0x804a657 <func_1+0xeb8>
0x804a320:   c7 85 1c ff ff ff 33 25 67 5f   	mov dword ptr [ebp - 0xe4], 0x5f672533
0x804a32a:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x804a334:   83 bd 70 ff ff ff 1d            	cmp dword ptr [ebp - 0x90], 0x1d
0x804a33b:   0f 86 bb 02 00 00               	jbe 0x804a5fc <func_1+0xe5d>
0x804a341:   c7 85 14 ff ff ff eb 5e 89 72   	mov dword ptr [ebp - 0xec], 0x72895eeb
0x804a34b:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a351:   98                              	cwde 
0x804a352:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x804a355:   89 d1                           	mov ecx, edx
0x804a357:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x804a35d:   21 ca                           	and edx, ecx
0x804a35f:   0f bf fa                        	movsx edi, dx
0x804a362:   99                              	cdq 
0x804a363:   f7 ff                           	idiv edi
0x804a365:   09 85 64 ff ff ff               	or dword ptr [ebp - 0x9c], eax
0x804a36b:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a370:   0f 84 c6 00 00 00               	je 0x804a43c <func_1+0xc9d>
0x804a376:   66 c7 85 10 ff ff ff fb ff      	mov word ptr [ebp - 0xf0], 0xfffb
0x804a37f:   c7 85 68 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x98], 0xfffffffd
0x804a389:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a38d:   0f bf 55 d0                     	movsx edx, word ptr [ebp - 0x30]
0x804a391:   0f bf 9d 7e ff ff ff            	movsx ebx, word ptr [ebp - 0x82]
0x804a398:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x804a39c:   0f b6 75 d9                     	movzx esi, byte ptr [ebp - 0x27]
0x804a3a0:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a3a6:   0f be 4d da                     	movsx ecx, byte ptr [ebp - 0x26]
0x804a3aa:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x804a3b0:   0f b6 75 db                     	movzx esi, byte ptr [ebp - 0x25]
0x804a3b4:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a3ba:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a3be:   89 8d a4 fe ff ff               	mov dword ptr [ebp - 0x15c], ecx
0x804a3c4:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a3c8:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a3ce:   0f be 4d eb                     	movsx ecx, byte ptr [ebp - 0x15]
0x804a3d2:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a3d8:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a3dc:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x804a3e0:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a3e6:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a3e9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a3ec:   50                              	push eax
0x804a3ed:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a3f0:   52                              	push edx
0x804a3f1:   53                              	push ebx
0x804a3f2:   57                              	push edi
0x804a3f3:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a3f6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3f9:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a3ff:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a405:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a40b:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a411:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a417:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a41a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a41d:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a423:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a426:   56                              	push esi
0x804a427:   51                              	push ecx
0x804a428:   e8 f9 f1 ff ff                  	call 0x8049626 <set_var>
0x804a42d:   83 c4 54                        	add esp, 0x54
0x804a430:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804a437:   e9 f0 03 00 00                  	jmp 0x804a82c <func_1+0x108d>
0x804a43c:   c6 85 13 ff ff ff 01            	mov byte ptr [ebp - 0xed], 1
0x804a443:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x804a44a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a44d:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x804a453:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a459:   0b 85 1c ff ff ff               	or eax, dword ptr [ebp - 0xe4]
0x804a45f:   35 59 6b 0b 4e                  	xor eax, 0x4e0b6b59
0x804a464:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a467:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a46a:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a470:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a477:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a47d:   0f be c8                        	movsx ecx, al
0x804a480:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a484:   0f be d8                        	movsx ebx, al
0x804a487:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a48c:   99                              	cdq 
0x804a48d:   f7 fb                           	idiv ebx
0x804a48f:   89 d0                           	mov eax, edx
0x804a491:   0f b7 d0                        	movzx edx, ax
0x804a494:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a497:   0f b7 c0                        	movzx eax, ax
0x804a49a:   0f af c2                        	imul eax, edx
0x804a49d:   3d 82 23 00 00                  	cmp eax, 0x2382
0x804a4a2:   0f 95 c0                        	setne al
0x804a4a5:   0f b6 d0                        	movzx edx, al
0x804a4a8:   0f b7 85 4c ff ff ff            	movzx eax, word ptr [ebp - 0xb4]
0x804a4af:   39 c2                           	cmp edx, eax
0x804a4b1:   0f 95 c0                        	setne al
0x804a4b4:   89 c2                           	mov edx, eax
0x804a4b6:   0f b6 85 6f ff ff ff            	movzx eax, byte ptr [ebp - 0x91]
0x804a4bd:   01 d0                           	add eax, edx
0x804a4bf:   0f be c0                        	movsx eax, al
0x804a4c2:   0f af c1                        	imul eax, ecx
0x804a4c5:   89 c2                           	mov edx, eax
0x804a4c7:   0f b6 85 62 ff ff ff            	movzx eax, byte ptr [ebp - 0x9e]
0x804a4ce:   39 c2                           	cmp edx, eax
0x804a4d0:   75 06                           	jne 0x804a4d8 <func_1+0xd39>
0x804a4d2:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a4d6:   74 07                           	je 0x804a4df <func_1+0xd40>
0x804a4d8:   b8 01 00 00 00                  	mov eax, 1
0x804a4dd:   eb 05                           	jmp 0x804a4e4 <func_1+0xd45>
0x804a4df:   b8 00 00 00 00                  	mov eax, 0
0x804a4e4:   0f b6 d0                        	movzx edx, al
0x804a4e7:   89 d0                           	mov eax, edx
0x804a4e9:   c1 e0 03                        	shl eax, 3
0x804a4ec:   01 d0                           	add eax, edx
0x804a4ee:   01 c0                           	add eax, eax
0x804a4f0:   01 d0                           	add eax, edx
0x804a4f2:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x804a4f9:   01 d0                           	add eax, edx
0x804a4fb:   66 c1 e8 08                     	shr ax, 8
0x804a4ff:   c0 e8 02                        	shr al, 2
0x804a502:   0f b6 c0                        	movzx eax, al
0x804a505:   23 85 1c ff ff ff               	and eax, dword ptr [ebp - 0xe4]
0x804a50b:   85 c0                           	test eax, eax
0x804a50d:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a510:   8d 50 01                        	lea edx, [eax + 1]
0x804a513:   89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x804a516:   8b 95 68 ff ff ff               	mov edx, dword ptr [ebp - 0x98]
0x804a51c:   01 d0                           	add eax, edx
0x804a51e:   85 c0                           	test eax, eax
0x804a520:   74 07                           	je 0x804a529 <func_1+0xd8a>
0x804a522:   83 bd 1c ff ff ff 00            	cmp dword ptr [ebp - 0xe4], 0
0x804a529:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a52d:   0f be c0                        	movsx eax, al
0x804a530:   b9 00 00 00 00                  	mov ecx, 0
0x804a535:   99                              	cdq 
0x804a536:   f7 f9                           	idiv ecx
0x804a538:   89 d0                           	mov eax, edx
0x804a53a:   83 f0 08                        	xor eax, 8
0x804a53d:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a543:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a54a:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a54e:   0f bf 55 d0                     	movsx edx, word ptr [ebp - 0x30]
0x804a552:   0f bf 9d 7e ff ff ff            	movsx ebx, word ptr [ebp - 0x82]
0x804a559:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x804a55d:   0f b6 75 d9                     	movzx esi, byte ptr [ebp - 0x27]
0x804a561:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a567:   0f be 4d da                     	movsx ecx, byte ptr [ebp - 0x26]
0x804a56b:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x804a571:   0f b6 75 db                     	movzx esi, byte ptr [ebp - 0x25]
0x804a575:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a57b:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a57f:   89 8d a4 fe ff ff               	mov dword ptr [ebp - 0x15c], ecx
0x804a585:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a589:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a58f:   0f be 4d eb                     	movsx ecx, byte ptr [ebp - 0x15]
0x804a593:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a599:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a59d:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x804a5a1:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a5a7:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5aa:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a5ad:   50                              	push eax
0x804a5ae:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a5b1:   52                              	push edx
0x804a5b2:   53                              	push ebx
0x804a5b3:   57                              	push edi
0x804a5b4:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a5b7:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a5ba:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a5c0:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a5c6:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a5cc:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a5d2:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a5d8:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a5db:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a5de:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a5e4:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5e7:   56                              	push esi
0x804a5e8:   51                              	push ecx
0x804a5e9:   e8 38 f0 ff ff                  	call 0x8049626 <set_var>
0x804a5ee:   83 c4 54                        	add esp, 0x54
0x804a5f1:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a5f7:   e9 30 02 00 00                  	jmp 0x804a82c <func_1+0x108d>
0x804a5fc:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x804a601:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a608:   eb 3e                           	jmp 0x804a648 <func_1+0xea9>
0x804a60a:   c7 85 18 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffff6
0x804a614:   0f b6 55 87                     	movzx edx, byte ptr [ebp - 0x79]
0x804a618:   0f be 85 4b ff ff ff            	movsx eax, byte ptr [ebp - 0xb5]
0x804a61f:   39 c2                           	cmp edx, eax
0x804a621:   0f 9e c1                        	setle cl
0x804a624:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a627:   3b 85 18 ff ff ff               	cmp eax, dword ptr [ebp - 0xe8]
0x804a62d:   0f 9e c0                        	setle al
0x804a630:   0f b6 d0                        	movzx edx, al
0x804a633:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x804a637:   39 c2                           	cmp edx, eax
0x804a639:   0f 9f c0                        	setg al
0x804a63c:   31 c8                           	xor eax, ecx
0x804a63e:   0f b6 c0                        	movzx eax, al
0x804a641:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804a644:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a648:   83 7d d4 1d                     	cmp dword ptr [ebp - 0x2c], 0x1d
0x804a64c:   75 bc                           	jne 0x804a60a <func_1+0xe6b>
0x804a64e:   83 6d c0 01                     	sub dword ptr [ebp - 0x40], 1
0x804a652:   e9 92 00 00 00                  	jmp 0x804a6e9 <func_1+0xf4a>
0x804a657:   c6 85 21 ff ff ff 01            	mov byte ptr [ebp - 0xdf], 1
0x804a65e:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a661:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a665:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a669:   66 c1 f8 09                     	sar ax, 9
0x804a66d:   0f bf d0                        	movsx edx, ax
0x804a670:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a676:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a679:   0f 93 c0                        	setae al
0x804a67c:   0f b6 c0                        	movzx eax, al
0x804a67f:   21 d0                           	and eax, edx
0x804a681:   85 c0                           	test eax, eax
0x804a683:   0f 95 c0                        	setne al
0x804a686:   0f b6 c0                        	movzx eax, al
0x804a689:   89 c2                           	mov edx, eax
0x804a68b:   0f b6 45 d9                     	movzx eax, byte ptr [ebp - 0x27]
0x804a68f:   31 d0                           	xor eax, edx
0x804a691:   0f b6 d0                        	movzx edx, al
0x804a694:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a69a:   0f b6 c0                        	movzx eax, al
0x804a69d:   89 c1                           	mov ecx, eax
0x804a69f:   d3 e2                           	shl edx, cl
0x804a6a1:   89 d0                           	mov eax, edx
0x804a6a3:   85 c0                           	test eax, eax
0x804a6a5:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a6ab:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x804a6ae:   85 c0                           	test eax, eax
0x804a6b0:   75 09                           	jne 0x804a6bb <func_1+0xf1c>
0x804a6b2:   80 bd 21 ff ff ff 00            	cmp byte ptr [ebp - 0xdf], 0
0x804a6b9:   74 07                           	je 0x804a6c2 <func_1+0xf23>
0x804a6bb:   ba 01 00 00 00                  	mov edx, 1
0x804a6c0:   eb 05                           	jmp 0x804a6c7 <func_1+0xf28>
0x804a6c2:   ba 00 00 00 00                  	mov edx, 0
0x804a6c7:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a6cb:   31 c2                           	xor edx, eax
0x804a6cd:   0f b6 85 21 ff ff ff            	movzx eax, byte ptr [ebp - 0xdf]
0x804a6d4:   39 c2                           	cmp edx, eax
0x804a6d6:   0f 9e c0                        	setle al
0x804a6d9:   0f b6 c0                        	movzx eax, al
0x804a6dc:   09 85 54 ff ff ff               	or dword ptr [ebp - 0xac], eax
0x804a6e2:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a6e6:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a6e9:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x804a6f0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a6f3:   33 45 cc                        	xor eax, dword ptr [ebp - 0x34]
0x804a6f6:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a6f9:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x804a6fd:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a703:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a70a:   0f be c0                        	movsx eax, al
0x804a70d:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x804a710:   0f be ca                        	movsx ecx, dl
0x804a713:   99                              	cdq 
0x804a714:   f7 f9                           	idiv ecx
0x804a716:   89 d0                           	mov eax, edx
0x804a718:   0f b6 d0                        	movzx edx, al
0x804a71b:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x804a71f:   89 c1                           	mov ecx, eax
0x804a721:   d3 e2                           	shl edx, cl
0x804a723:   89 d0                           	mov eax, edx
0x804a725:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a728:   0f 9c c0                        	setl al
0x804a72b:   0f b6 c0                        	movzx eax, al
0x804a72e:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a734:   66 83 7d d0 00                  	cmp word ptr [ebp - 0x30], 0
0x804a739:   0f 94 c0                        	sete al
0x804a73c:   0f b6 d0                        	movzx edx, al
0x804a73f:   66 0f be 45 da                  	movsx ax, byte ptr [ebp - 0x26]
0x804a744:   0f b7 c0                        	movzx eax, ax
0x804a747:   89 c1                           	mov ecx, eax
0x804a749:   d3 fa                           	sar edx, cl
0x804a74b:   89 d0                           	mov eax, edx
0x804a74d:   3d 63 b3 f0 f8                  	cmp eax, 0xf8f0b363
0x804a752:   75 06                           	jne 0x804a75a <func_1+0xfbb>
0x804a754:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a758:   74 07                           	je 0x804a761 <func_1+0xfc2>
0x804a75a:   b8 01 00 00 00                  	mov eax, 1
0x804a75f:   eb 05                           	jmp 0x804a766 <func_1+0xfc7>
0x804a761:   b8 00 00 00 00                  	mov eax, 0
0x804a766:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a769:   83 85 78 ff ff ff 01            	add dword ptr [ebp - 0x88], 1
0x804a770:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a773:   23 85 78 ff ff ff               	and eax, dword ptr [ebp - 0x88]
0x804a779:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a77c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a77f:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804a782:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a786:   0f bf 55 d0                     	movsx edx, word ptr [ebp - 0x30]
0x804a78a:   0f bf 9d 7e ff ff ff            	movsx ebx, word ptr [ebp - 0x82]
0x804a791:   0f b7 7d d2                     	movzx edi, word ptr [ebp - 0x2e]
0x804a795:   0f b6 75 d9                     	movzx esi, byte ptr [ebp - 0x27]
0x804a799:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a79f:   0f be 4d da                     	movsx ecx, byte ptr [ebp - 0x26]
0x804a7a3:   89 8d ac fe ff ff               	mov dword ptr [ebp - 0x154], ecx
0x804a7a9:   0f b6 75 db                     	movzx esi, byte ptr [ebp - 0x25]
0x804a7ad:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a7b3:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a7b7:   89 8d a4 fe ff ff               	mov dword ptr [ebp - 0x15c], ecx
0x804a7bd:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x804a7c1:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a7c7:   0f be 4d eb                     	movsx ecx, byte ptr [ebp - 0x15]
0x804a7cb:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a7d1:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a7d5:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x804a7d9:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a7df:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7e2:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7e5:   50                              	push eax
0x804a7e6:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a7e9:   52                              	push edx
0x804a7ea:   53                              	push ebx
0x804a7eb:   57                              	push edi
0x804a7ec:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7ef:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a7f2:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a7f8:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a7fe:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a804:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a80a:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a810:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a813:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a816:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a81c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a81f:   56                              	push esi
0x804a820:   51                              	push ecx
0x804a821:   e8 00 ee ff ff                  	call 0x8049626 <set_var>
0x804a826:   83 c4 54                        	add esp, 0x54
0x804a829:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a82c:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a82f:   5b                              	pop ebx
0x804a830:   5e                              	pop esi
0x804a831:   5f                              	pop edi
0x804a832:   5d                              	pop ebp
0x804a833:   c3                              	ret 
; function: main at 0x804a834 -- 0x804ab3a
0x804a834:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a838:   83 e4 f0                        	and esp, 0xfffffff0
0x804a83b:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a83e:   55                              	push ebp
0x804a83f:   89 e5                           	mov ebp, esp
0x804a841:   53                              	push ebx
0x804a842:   51                              	push ecx
0x804a843:   83 ec 10                        	sub esp, 0x10
0x804a846:   e8 45 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a84b:   81 c3 b5 27 00 00               	add ebx, 0x27b5
0x804a851:   89 c8                           	mov eax, ecx
0x804a853:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a85a:   83 38 02                        	cmp dword ptr [eax], 2
0x804a85d:   75 26                           	jne 0x804a885 <main+0x51>
0x804a85f:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a862:   83 c0 04                        	add eax, 4
0x804a865:   8b 00                           	mov eax, dword ptr [eax]
0x804a867:   83 ec 08                        	sub esp, 8
0x804a86a:   8d 93 28 dc ff ff               	lea edx, [ebx - 0x23d8]
0x804a870:   52                              	push edx
0x804a871:   50                              	push eax
0x804a872:   e8 89 da ff ff                  	call 0x8048300 <strcmp>
0x804a877:   83 c4 10                        	add esp, 0x10
0x804a87a:   85 c0                           	test eax, eax
0x804a87c:   75 07                           	jne 0x804a885 <main+0x51>
0x804a87e:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a885:   e8 cc db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a88a:   e8 dc eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a88f:   e8 0b ef ff ff                  	call 0x804979f <func_1>
0x804a894:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a89b:   0f b7 c0                        	movzx eax, ax
0x804a89e:   83 ec 04                        	sub esp, 4
0x804a8a1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8a4:   8d 93 2a dc ff ff               	lea edx, [ebx - 0x23d6]
0x804a8aa:   52                              	push edx
0x804a8ab:   50                              	push eax
0x804a8ac:   e8 c6 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8b1:   83 c4 10                        	add esp, 0x10
0x804a8b4:   0f b6 83 26 00 00 00            	movzx eax, byte ptr [ebx + 0x26]
0x804a8bb:   0f b6 c0                        	movzx eax, al
0x804a8be:   83 ec 04                        	sub esp, 4
0x804a8c1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8c4:   8d 93 2e dc ff ff               	lea edx, [ebx - 0x23d2]
0x804a8ca:   52                              	push edx
0x804a8cb:   50                              	push eax
0x804a8cc:   e8 a6 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8d1:   83 c4 10                        	add esp, 0x10
0x804a8d4:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a8da:   89 c2                           	mov edx, eax
0x804a8dc:   83 ec 04                        	sub esp, 4
0x804a8df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8e2:   8d 83 33 dc ff ff               	lea eax, [ebx - 0x23cd]
0x804a8e8:   50                              	push eax
0x804a8e9:   52                              	push edx
0x804a8ea:   e8 88 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ef:   83 c4 10                        	add esp, 0x10
0x804a8f2:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a8f9:   0f be c0                        	movsx eax, al
0x804a8fc:   83 ec 04                        	sub esp, 4
0x804a8ff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a902:   8d 93 38 dc ff ff               	lea edx, [ebx - 0x23c8]
0x804a908:   52                              	push edx
0x804a909:   50                              	push eax
0x804a90a:   e8 68 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a90f:   83 c4 10                        	add esp, 0x10
0x804a912:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a918:   89 c2                           	mov edx, eax
0x804a91a:   83 ec 04                        	sub esp, 4
0x804a91d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a920:   8d 83 3d dc ff ff               	lea eax, [ebx - 0x23c3]
0x804a926:   50                              	push eax
0x804a927:   52                              	push edx
0x804a928:   e8 4a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a92d:   83 c4 10                        	add esp, 0x10
0x804a930:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804a936:   89 c2                           	mov edx, eax
0x804a938:   83 ec 04                        	sub esp, 4
0x804a93b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a93e:   8d 83 42 dc ff ff               	lea eax, [ebx - 0x23be]
0x804a944:   50                              	push eax
0x804a945:   52                              	push edx
0x804a946:   e8 2c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a94b:   83 c4 10                        	add esp, 0x10
0x804a94e:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804a955:   0f b7 c0                        	movzx eax, ax
0x804a958:   83 ec 04                        	sub esp, 4
0x804a95b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a95e:   8d 93 47 dc ff ff               	lea edx, [ebx - 0x23b9]
0x804a964:   52                              	push edx
0x804a965:   50                              	push eax
0x804a966:   e8 0c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a96b:   83 c4 10                        	add esp, 0x10
0x804a96e:   0f b7 83 36 00 00 00            	movzx eax, word ptr [ebx + 0x36]
0x804a975:   0f b7 c0                        	movzx eax, ax
0x804a978:   83 ec 04                        	sub esp, 4
0x804a97b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a97e:   8d 93 4c dc ff ff               	lea edx, [ebx - 0x23b4]
0x804a984:   52                              	push edx
0x804a985:   50                              	push eax
0x804a986:   e8 ec eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a98b:   83 c4 10                        	add esp, 0x10
0x804a98e:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a995:   0f b6 c0                        	movzx eax, al
0x804a998:   83 ec 04                        	sub esp, 4
0x804a99b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a99e:   8d 93 52 dc ff ff               	lea edx, [ebx - 0x23ae]
0x804a9a4:   52                              	push edx
0x804a9a5:   50                              	push eax
0x804a9a6:   e8 cc eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ab:   83 c4 10                        	add esp, 0x10
0x804a9ae:   0f b6 83 88 04 00 00            	movzx eax, byte ptr [ebx + 0x488]
0x804a9b5:   0f be c0                        	movsx eax, al
0x804a9b8:   83 ec 04                        	sub esp, 4
0x804a9bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9be:   8d 93 58 dc ff ff               	lea edx, [ebx - 0x23a8]
0x804a9c4:   52                              	push edx
0x804a9c5:   50                              	push eax
0x804a9c6:   e8 ac eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9cb:   83 c4 10                        	add esp, 0x10
0x804a9ce:   0f b6 83 39 00 00 00            	movzx eax, byte ptr [ebx + 0x39]
0x804a9d5:   0f b6 c0                        	movzx eax, al
0x804a9d8:   83 ec 04                        	sub esp, 4
0x804a9db:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9de:   8d 93 5e dc ff ff               	lea edx, [ebx - 0x23a2]
0x804a9e4:   52                              	push edx
0x804a9e5:   50                              	push eax
0x804a9e6:   e8 8c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9eb:   83 c4 10                        	add esp, 0x10
0x804a9ee:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a9f4:   83 ec 04                        	sub esp, 4
0x804a9f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fa:   8d 93 64 dc ff ff               	lea edx, [ebx - 0x239c]
0x804aa00:   52                              	push edx
0x804aa01:   50                              	push eax
0x804aa02:   e8 70 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa07:   83 c4 10                        	add esp, 0x10
0x804aa0a:   8b 83 8c 04 00 00               	mov eax, dword ptr [ebx + 0x48c]
0x804aa10:   83 ec 04                        	sub esp, 4
0x804aa13:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa16:   8d 93 6a dc ff ff               	lea edx, [ebx - 0x2396]
0x804aa1c:   52                              	push edx
0x804aa1d:   50                              	push eax
0x804aa1e:   e8 54 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa23:   83 c4 10                        	add esp, 0x10
0x804aa26:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804aa2d:   0f b7 c0                        	movzx eax, ax
0x804aa30:   83 ec 04                        	sub esp, 4
0x804aa33:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa36:   8d 93 70 dc ff ff               	lea edx, [ebx - 0x2390]
0x804aa3c:   52                              	push edx
0x804aa3d:   50                              	push eax
0x804aa3e:   e8 34 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa43:   83 c4 10                        	add esp, 0x10
0x804aa46:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804aa4d:   98                              	cwde 
0x804aa4e:   83 ec 04                        	sub esp, 4
0x804aa51:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa54:   8d 93 76 dc ff ff               	lea edx, [ebx - 0x238a]
0x804aa5a:   52                              	push edx
0x804aa5b:   50                              	push eax
0x804aa5c:   e8 16 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa61:   83 c4 10                        	add esp, 0x10
0x804aa64:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804aa6b:   98                              	cwde 
0x804aa6c:   83 ec 04                        	sub esp, 4
0x804aa6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa72:   8d 93 7c dc ff ff               	lea edx, [ebx - 0x2384]
0x804aa78:   52                              	push edx
0x804aa79:   50                              	push eax
0x804aa7a:   e8 f8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa7f:   83 c4 10                        	add esp, 0x10
0x804aa82:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804aa88:   83 ec 04                        	sub esp, 4
0x804aa8b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa8e:   8d 93 82 dc ff ff               	lea edx, [ebx - 0x237e]
0x804aa94:   52                              	push edx
0x804aa95:   50                              	push eax
0x804aa96:   e8 dc ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa9b:   83 c4 10                        	add esp, 0x10
0x804aa9e:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804aaa5:   0f b7 c0                        	movzx eax, ax
0x804aaa8:   83 ec 04                        	sub esp, 4
0x804aaab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaae:   8d 93 88 dc ff ff               	lea edx, [ebx - 0x2378]
0x804aab4:   52                              	push edx
0x804aab5:   50                              	push eax
0x804aab6:   e8 bc ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aabb:   83 c4 10                        	add esp, 0x10
0x804aabe:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804aac4:   89 c2                           	mov edx, eax
0x804aac6:   83 ec 04                        	sub esp, 4
0x804aac9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aacc:   8d 83 8e dc ff ff               	lea eax, [ebx - 0x2372]
0x804aad2:   50                              	push eax
0x804aad3:   52                              	push edx
0x804aad4:   e8 9e ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aad9:   83 c4 10                        	add esp, 0x10
0x804aadc:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804aae2:   83 ec 04                        	sub esp, 4
0x804aae5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae8:   8d 93 94 dc ff ff               	lea edx, [ebx - 0x236c]
0x804aaee:   52                              	push edx
0x804aaef:   50                              	push eax
0x804aaf0:   e8 82 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaf5:   83 c4 10                        	add esp, 0x10
0x804aaf8:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804aafe:   83 ec 04                        	sub esp, 4
0x804ab01:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab04:   8d 93 9a dc ff ff               	lea edx, [ebx - 0x2366]
0x804ab0a:   52                              	push edx
0x804ab0b:   50                              	push eax
0x804ab0c:   e8 66 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab11:   83 c4 10                        	add esp, 0x10
0x804ab14:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab1a:   f7 d0                           	not eax
0x804ab1c:   83 ec 08                        	sub esp, 8
0x804ab1f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab22:   50                              	push eax
0x804ab23:   e8 3e d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab28:   83 c4 10                        	add esp, 0x10
0x804ab2b:   b8 00 00 00 00                  	mov eax, 0
0x804ab30:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab33:   59                              	pop ecx
0x804ab34:   5b                              	pop ebx
0x804ab35:   5d                              	pop ebp
0x804ab36:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab39:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab3a -- 0x804ab3e
0x804ab3a:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab3d:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ab3e -- 0x804ab42
0x804ab3e:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ab41:   c3                              	ret 
; data inside code section at 0x804ab42 -- 0x804ab50
0x804ab42:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __libc_csu_init at 0x804ab50 -- 0x804abad
0x804ab50:   55                              	push ebp
0x804ab51:   57                              	push edi
0x804ab52:   56                              	push esi
0x804ab53:   53                              	push ebx
0x804ab54:   e8 37 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab59:   81 c3 a7 24 00 00               	add ebx, 0x24a7
0x804ab5f:   83 ec 0c                        	sub esp, 0xc
0x804ab62:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab66:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab6c:   e8 5b d7 ff ff                  	call 0x80482cc <_init>
0x804ab71:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab77:   29 c6                           	sub esi, eax
0x804ab79:   c1 fe 02                        	sar esi, 2
0x804ab7c:   85 f6                           	test esi, esi
0x804ab7e:   74 25                           	je 0x804aba5 <__libc_csu_init+0x55>
0x804ab80:   31 ff                           	xor edi, edi
0x804ab82:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ab88:   83 ec 04                        	sub esp, 4
0x804ab8b:   55                              	push ebp
0x804ab8c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab90:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab94:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ab9b:   83 c7 01                        	add edi, 1
0x804ab9e:   83 c4 10                        	add esp, 0x10
0x804aba1:   39 fe                           	cmp esi, edi
0x804aba3:   75 e3                           	jne 0x804ab88 <__libc_csu_init+0x38>
0x804aba5:   83 c4 0c                        	add esp, 0xc
0x804aba8:   5b                              	pop ebx
0x804aba9:   5e                              	pop esi
0x804abaa:   5f                              	pop edi
0x804abab:   5d                              	pop ebp
0x804abac:   c3                              	ret 
; data inside code section at 0x804abad -- 0x804abb0
0x804abad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804abb0 -- 0x804abb2
0x804abb0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804abb4 -- 0x804abc8
0x804abb4:   53                              	push ebx
0x804abb5:   83 ec 08                        	sub esp, 8
0x804abb8:   e8 d3 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abbd:   81 c3 43 24 00 00               	add ebx, 0x2443
0x804abc3:   83 c4 08                        	add esp, 8
0x804abc6:   5b                              	pop ebx
0x804abc7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804abc8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804abd8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804abe8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804abf8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac08:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac18:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac28:   31 00 67 5f 36 00 67 5f  31 38 00 67 5f 33 35 00   |1.g_6.g_18.g_35.|
0x804ac38:   67 5f 34 31 00 67 5f 36  30 00 67 5f 37 34 00 67   |g_41.g_60.g_74.g|
0x804ac48:   5f 39 30 00 67 5f 31 34  35 00 67 5f 31 38 31 00   |_90.g_145.g_181.|
0x804ac58:   67 5f 32 30 30 00 67 5f  32 33 30 00 67 5f 32 34   |g_200.g_230.g_24|
0x804ac68:   37 00 67 5f 32 37 33 00  67 5f 33 32 30 00 67 5f   |7.g_273.g_320.g_|
0x804ac78:   33 32 38 00 67 5f 33 32  39 00 67 5f 33 33 33 00   |328.g_329.g_333.|
0x804ac88:   67 5f 33 39 33 00 67 5f  34 30 30 00 67 5f 34 30   |g_393.g_400.g_40|
0x804ac98:   31 00 67 5f 34 33 36 00  00 00 00 3f ff ff ff 7e   |1.g_436....?...~|
0x804aca8:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804acb8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804acc8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804acd8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ace8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804acf8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ad08:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ad08:   01 1b 03 3b b8 02 00 00  56 00 00 00 e8 d5 ff ff   |...;....V.......|
0x804ad18:   e8 02 00 00 28 d6 ff ff  0c 03 00 00 78 d6 ff ff   |....(.......x...|
0x804ad28:   d4 02 00 00 4e d7 ff ff  20 03 00 00 5e d7 ff ff   |....N... ...^...|
0x804ad38:   40 03 00 00 8c d7 ff ff  64 03 00 00 aa d7 ff ff   |@.......d.......|
0x804ad48:   84 03 00 00 d2 d7 ff ff  a4 03 00 00 fc d7 ff ff   |................|
0x804ad58:   c4 03 00 00 25 d8 ff ff  e4 03 00 00 68 d8 ff ff   |....%.......h...|
0x804ad68:   04 04 00 00 a9 d8 ff ff  24 04 00 00 01 d9 ff ff   |........$.......|
0x804ad78:   48 04 00 00 53 d9 ff ff  6c 04 00 00 90 d9 ff ff   |H...S...l.......|
0x804ad88:   8c 04 00 00 c7 d9 ff ff  ac 04 00 00 e6 d9 ff ff   |................|
0x804ad98:   cc 04 00 00 10 da ff ff  ec 04 00 00 3c da ff ff   |............<...|
0x804ada8:   0c 05 00 00 67 da ff ff  2c 05 00 00 b0 da ff ff   |....g...,.......|
0x804adb8:   4c 05 00 00 f7 da ff ff  6c 05 00 00 51 db ff ff   |L.......l...Q...|
0x804adc8:   90 05 00 00 a5 db ff ff  b4 05 00 00 e4 db ff ff   |................|
0x804add8:   d4 05 00 00 1d dc ff ff  f4 05 00 00 3f dc ff ff   |............?...|
0x804ade8:   14 06 00 00 8d dc ff ff  34 06 00 00 c9 dc ff ff   |........4.......|
0x804adf8:   54 06 00 00 52 dd ff ff  74 06 00 00 84 dd ff ff   |T...R...t.......|
0x804ae08:   94 06 00 00 b4 dd ff ff  b4 06 00 00 f9 dd ff ff   |................|
0x804ae18:   d4 06 00 00 38 de ff ff  f4 06 00 00 6a de ff ff   |....8.......j...|
0x804ae28:   14 07 00 00 96 de ff ff  34 07 00 00 b4 de ff ff   |........4.......|
0x804ae38:   54 07 00 00 dc de ff ff  74 07 00 00 01 df ff ff   |T.......t.......|
0x804ae48:   94 07 00 00 26 df ff ff  b4 07 00 00 5d df ff ff   |....&.......]...|
0x804ae58:   d4 07 00 00 91 df ff ff  f4 07 00 00 e3 df ff ff   |................|
0x804ae68:   18 08 00 00 2f e0 ff ff  3c 08 00 00 66 e0 ff ff   |..../...<...f...|
0x804ae78:   5c 08 00 00 97 e0 ff ff  7c 08 00 00 b6 e0 ff ff   |\.......|.......|
0x804ae88:   9c 08 00 00 e0 e0 ff ff  bc 08 00 00 08 e1 ff ff   |................|
0x804ae98:   dc 08 00 00 31 e1 ff ff  fc 08 00 00 6d e1 ff ff   |....1.......m...|
0x804aea8:   1c 09 00 00 a7 e1 ff ff  3c 09 00 00 fa e1 ff ff   |........<.......|
0x804aeb8:   60 09 00 00 47 e2 ff ff  84 09 00 00 7f e2 ff ff   |`...G...........|
0x804aec8:   a4 09 00 00 b1 e2 ff ff  c4 09 00 00 c5 e2 ff ff   |................|
0x804aed8:   e4 09 00 00 dc e2 ff ff  04 0a 00 00 f1 e2 ff ff   |................|
0x804aee8:   24 0a 00 00 07 e3 ff ff  44 0a 00 00 2e e3 ff ff   |$.......D.......|
0x804aef8:   64 0a 00 00 53 e3 ff ff  84 0a 00 00 92 e3 ff ff   |d...S...........|
0x804af08:   a4 0a 00 00 cb e3 ff ff  c4 0a 00 00 f7 e3 ff ff   |................|
0x804af18:   e4 0a 00 00 1d e4 ff ff  04 0b 00 00 5f e4 ff ff   |............_...|
0x804af28:   24 0b 00 00 a1 e4 ff ff  44 0b 00 00 e3 e4 ff ff   |$.......D.......|
0x804af38:   64 0b 00 00 58 e5 ff ff  84 0b 00 00 b5 e5 ff ff   |d...X...........|
0x804af48:   a4 0b 00 00 12 e6 ff ff  c4 0b 00 00 6f e6 ff ff   |............o...|
0x804af58:   e4 0b 00 00 ff e6 ff ff  04 0c 00 00 63 e7 ff ff   |............c...|
0x804af68:   24 0c 00 00 d3 e7 ff ff  44 0c 00 00 1a e8 ff ff   |$.......D.......|
0x804af78:   68 0c 00 00 6f e8 ff ff  88 0c 00 00 b6 e8 ff ff   |h...o...........|
0x804af88:   ac 0c 00 00 1e e9 ff ff  d0 0c 00 00 97 ea ff ff   |................|
0x804af98:   00 0d 00 00 2c fb ff ff  30 0d 00 00 32 fe ff ff   |....,...0...2...|
0x804afa8:   68 0d 00 00 36 fe ff ff  7c 0d 00 00 48 fe ff ff   |h...6...|...H...|
0x804afb8:   90 0d 00 00 a8 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804afc4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804afd4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804afe4:   9c d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804aff4:   30 00 00 00 f8 d2 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b004:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b014:   10 00 00 00 54 00 00 00  14 d3 ff ff 08 00 00 00   |....T...........|
0x804b024:   00 00 00 00 1c 00 00 00  68 00 00 00 26 d4 ff ff   |........h...&...|
0x804b034:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b044:   04 04 00 00 20 00 00 00  88 00 00 00 16 d4 ff ff   |.... ...........|
0x804b054:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b064:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b074:   20 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   | ........A....B.|
0x804b084:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b094:   1e d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b0a4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b0b4:   26 d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |&...*....A....B.|
0x804b0c4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0d4:   30 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |0...)....A....B.|
0x804b0e4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b0f4:   39 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |9...C....A....B.|
0x804b104:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b114:   5c d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |\...A....A....B.|
0x804b124:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b134:   7d d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |}...X....A....B.|
0x804b144:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b154:   90 01 00 00 b1 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b164:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b174:   1c 00 00 00 b4 01 00 00  df d4 ff ff 3d 00 00 00   |............=...|
0x804b184:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b194:   1c 00 00 00 d4 01 00 00  fc d4 ff ff 37 00 00 00   |............7...|
0x804b1a4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1b4:   1c 00 00 00 f4 01 00 00  13 d5 ff ff 1f 00 00 00   |................|
0x804b1c4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1d4:   1c 00 00 00 14 02 00 00  12 d5 ff ff 2a 00 00 00   |............*...|
0x804b1e4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b1f4:   1c 00 00 00 34 02 00 00  1c d5 ff ff 2c 00 00 00   |....4.......,...|
0x804b204:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b214:   1c 00 00 00 54 02 00 00  28 d5 ff ff 2b 00 00 00   |....T...(...+...|
0x804b224:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b234:   1c 00 00 00 74 02 00 00  33 d5 ff ff 49 00 00 00   |....t...3...I...|
0x804b244:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b254:   1c 00 00 00 94 02 00 00  5c d5 ff ff 47 00 00 00   |........\...G...|
0x804b264:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b274:   20 00 00 00 b4 02 00 00  83 d5 ff ff 5a 00 00 00   | ...........Z...|
0x804b284:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b294:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b9 d5 ff ff   |.... ...........|
0x804b2a4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b2b4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2c4:   e9 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2d4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b2e4:   08 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b2f4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b304:   21 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |!..."....A....B.|
0x804b314:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b324:   23 d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |#...N....A....B.|
0x804b334:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b344:   51 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |Q...<....A....B.|
0x804b354:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b364:   6d d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |m........A....B.|
0x804b374:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b384:   d6 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b394:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b3a4:   e8 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b3b4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3c4:   f8 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3d4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b3e4:   1d d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b3f4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b404:   3c d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |<...2....A....B.|
0x804b414:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b424:   4e d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |N...,....A....B.|
0x804b434:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b444:   5a d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |Z........A....B.|
0x804b454:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b464:   58 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |X...(....A....B.|
0x804b474:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b484:   60 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |`...%....A....B.|
0x804b494:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b4a4:   65 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |e...%....A....B.|
0x804b4b4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4c4:   6a d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |j...7....A....B.|
0x804b4d4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b4e4:   81 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b4f4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b504:   95 d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b514:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b524:   60 05 00 00 c3 d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b534:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b544:   1c 00 00 00 84 05 00 00  eb d7 ff ff 37 00 00 00   |............7...|
0x804b554:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b564:   1c 00 00 00 a4 05 00 00  02 d8 ff ff 31 00 00 00   |............1...|
0x804b574:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b584:   1c 00 00 00 c4 05 00 00  13 d8 ff ff 1f 00 00 00   |................|
0x804b594:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b5a4:   1c 00 00 00 e4 05 00 00  12 d8 ff ff 2a 00 00 00   |............*...|
0x804b5b4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5c4:   1c 00 00 00 04 06 00 00  1c d8 ff ff 28 00 00 00   |............(...|
0x804b5d4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b5e4:   1c 00 00 00 24 06 00 00  24 d8 ff ff 29 00 00 00   |....$...$...)...|
0x804b5f4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b604:   1c 00 00 00 44 06 00 00  2d d8 ff ff 3c 00 00 00   |....D...-...<...|
0x804b614:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b624:   1c 00 00 00 64 06 00 00  49 d8 ff ff 3a 00 00 00   |....d...I...:...|
0x804b634:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b644:   20 00 00 00 84 06 00 00  63 d8 ff ff 53 00 00 00   | .......c...S...|
0x804b654:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b664:   c5 0c 04 04 20 00 00 00  a8 06 00 00 92 d8 ff ff   |.... ...........|
0x804b674:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b684:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b694:   bb d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b6a4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b6b4:   d3 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6c4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6d4:   e5 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6e4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b6f4:   d9 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b704:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b714:   d0 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b724:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b734:   c5 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b744:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b754:   bb d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b764:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b774:   c2 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b784:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b794:   c7 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7a4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b7b4:   e6 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7c4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7d4:   ff d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7e4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b7f4:   0b d9 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b804:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b814:   11 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b824:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b834:   33 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |3...B....A....B.|
0x804b844:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b854:   55 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |U...B....A....B.|
0x804b864:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b874:   77 d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |w...u....A....B.|
0x804b884:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b894:   cc d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8a4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b8b4:   09 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8c4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8d4:   46 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |F...]....A....B.|
0x804b8e4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b8f4:   83 da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b904:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b914:   f3 da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b924:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b934:   37 db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |7...p....A....B.|
0x804b944:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b954:   87 db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b964:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b974:   b0 09 00 00 aa db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b984:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b994:   d0 09 00 00 df db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b9a4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b9b4:   20 00 00 00 f4 09 00 00  02 dc ff ff 68 00 00 00   | ...........h...|
0x804b9c4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9d4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 46 dc ff ff   |....,.......F...|
0x804b9e4:   79 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |y....A....B..F..|
0x804b9f4:   86 04 83 05 03 6c 01 c3  41 c6 41 c7 41 c5 0c 04   |.....l..A.A.A...|
0x804ba04:   04 00 00 00 2c 00 00 00  48 0a 00 00 8f dd ff ff   |....,...H.......|
0x804ba14:   95 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804ba24:   86 04 83 05 03 85 10 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba34:   04 00 00 00 34 00 00 00  78 0a 00 00 f4 ed ff ff   |....4...x.......|
0x804ba44:   06 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804ba54:   0f 03 75 78 06 10 03 02  75 7c 03 f1 02 c1 0c 01   |..ux....u|......|
0x804ba64:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba74:   b0 0a 00 00 c2 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804ba84:   10 00 00 00 c4 0a 00 00  b2 f0 ff ff 04 00 00 00   |................|
0x804ba94:   00 00 00 00 48 00 00 00  d8 0a 00 00 b0 f0 ff ff   |....H...........|
0x804baa4:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bab4:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bac4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bad4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bae4:   10 00 00 00 24 0b 00 00  c4 f0 ff ff 02 00 00 00   |....$...........|
0x804baf4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff b8 ff 72 00   |..............r.|
0x804d028:   ef ab 63 4f 01 00 00 00  f8 ff ff ff 91 26 08 00   |..cO.........&..|
0x804d038:   27 55 00 00 06 00 00 00  f7 ff e0 0a c9 57 00 00   |'U...........W..|
0x804d048:   d6 5d 0c fb fc ff 00 00  f8 ff ff ff ca 47 90 e1   |.]...........G..|
0x804d058:   06 00 00 00 ??                                     |....?           |
