;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:34:00
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 80 d0 ff ff               	lea eax, [ebx - 0x2f80]
0x804835c:   50                              	push eax
0x804835d:   8d 83 20 d0 ff ff               	lea eax, [ebx - 0x2fe0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 51 aa 04 08               	mov eax, 0x804aa51
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 a4 e0 04 08                  	mov eax, 0x804e0a4
0x80483a5:   3d a4 e0 04 08                  	cmp eax, 0x804e0a4
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 a4 e0 04 08                  	push 0x804e0a4
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 a4 e0 04 08                  	mov eax, 0x804e0a4
0x80483e5:   2d a4 e0 04 08                  	sub eax, 0x804e0a4
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 a4 e0 04 08                  	push 0x804e0a4
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d c0 e0 04 08 00            	cmp byte ptr [0x804e0c0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 c0 e0 04 08 01            	mov byte ptr [0x804e0c0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 b0 2b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 9c 2b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 a0 d0 ff ff               	lea edx, [eax - 0x2f60]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 6f 2b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 51 2b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 29 2b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 ff 2a 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 d6 2a 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 93 2a 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 51 2a 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 f9 29 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 a8 29 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 6b 29 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 34 29 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 15 29 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 eb 28 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 bf 28 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 94 28 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 4b 28 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 03 28 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 a9 27 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 56 27 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 17 27 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 e1 26 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 bf 26 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 71 26 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 35 26 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 ac 25 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 7a 25 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 4a 25 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 05 25 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 c6 24 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 94 24 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 65 24 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 47 24 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 1f 24 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 fa 23 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 d5 23 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 9e 23 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 69 23 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 17 23 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 cc 22 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 95 22 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 64 22 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 45 22 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 1b 22 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 f3 21 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 ca 21 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 8e 21 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 53 21 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 00 21 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 b4 20 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 7c 20 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 4d 20 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 39 20 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 22 20 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 0d 20 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 f7 1f 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 d0 1f 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ab 1f 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 6c 1f 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 33 1f 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 07 1f 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 e1 1e 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 00 d2 ff ff               	fld dword ptr [eax - 0x2e00]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 9f 1e 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 fc d1 ff ff               	fld dword ptr [eax - 0x2e04]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 00 d2 ff ff               	fld dword ptr [eax - 0x2e00]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 5d 1e 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 04 d2 ff ff               	fld dword ptr [eax - 0x2dfc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 08 d2 ff ff               	fld dword ptr [eax - 0x2df8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 0c d2 ff ff               	fld dword ptr [eax - 0x2df4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 1b 1e 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 10 d2 ff ff               	fld dword ptr [eax - 0x2df0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 14 d2 ff ff               	fld dword ptr [eax - 0x2dec]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 18 d2 ff ff               	fld dword ptr [eax - 0x2de8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 a3 1d 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 28 d2 ff ff               	fld qword ptr [eax - 0x2dd8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 46 1d 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 20 d2 ff ff               	fld qword ptr [eax - 0x2de0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 28 d2 ff ff               	fld qword ptr [eax - 0x2dd8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 e9 1c 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 30 d2 ff ff               	fld qword ptr [eax - 0x2dd0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 38 d2 ff ff               	fld qword ptr [eax - 0x2dc8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 40 d2 ff ff               	fld qword ptr [eax - 0x2dc0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 8c 1c 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 48 d2 ff ff               	fld qword ptr [eax - 0x2db8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 50 d2 ff ff               	fld qword ptr [eax - 0x2db0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 fc 1b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 60 d2 ff ff               	fld dword ptr [eax - 0x2da0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 64 d2 ff ff               	fld dword ptr [eax - 0x2d9c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 98 1b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 e0 00 00 00            	mov dword ptr [eax + edx*4 + 0xe0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 27 1b 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 e0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xe0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 e4 1a 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 b0 d0 ff ff               	lea eax, [ebx - 0x2f50]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 d4 d0 ff ff               	lea eax, [ebx - 0x2f2c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804991b
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   81 ec 88 00 00 00               	sub esp, 0x88
0x8049632:   e8 db 19 00 00                  	call 0x804b012 <__x86.get_pc_thunk.dx>
0x8049637:   81 c2 c9 49 00 00               	add edx, 0x49c9
0x804963d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049640:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049643:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x8049646:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049649:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x804964c:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x804964f:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049652:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049655:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049658:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965b:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804965e:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049661:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049664:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049667:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804966a:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804966d:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049670:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049673:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049676:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049679:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804967c:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804967f:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049682:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049685:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049688:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804968e:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x8049694:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804969a:   8b 85 98 00 00 00               	mov eax, dword ptr [ebp + 0x98]
0x80496a0:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a6:   8b 85 9c 00 00 00               	mov eax, dword ptr [ebp + 0x9c]
0x80496ac:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80496b2:   8b 85 a8 00 00 00               	mov eax, dword ptr [ebp + 0xa8]
0x80496b8:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x80496be:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c2:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496c6:   89 c8                           	mov eax, ecx
0x80496c8:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496cb:   89 d8                           	mov eax, ebx
0x80496cd:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496d0:   89 f0                           	mov eax, esi
0x80496d2:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496d5:   89 f8                           	mov eax, edi
0x80496d7:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496da:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496de:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496e1:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496e5:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496e8:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496ec:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496f0:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496f4:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496f7:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496fb:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496fe:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x8049702:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x8049706:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x804970a:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x804970d:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049711:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049715:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x8049719:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x804971c:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049723:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049727:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x804972e:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049732:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x8049739:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x804973d:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x8049744:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x8049748:   0f b6 85 6c ff ff ff            	movzx eax, byte ptr [ebp - 0x94]
0x804974f:   88 45 a8                        	mov byte ptr [ebp - 0x58], al
0x8049752:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049756:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x804975d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049760:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049766:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049769:   89 82 e4 04 00 00               	mov dword ptr [edx + 0x4e4], eax
0x804976f:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049772:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049778:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x804977b:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049781:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049785:   88 82 34 00 00 00               	mov byte ptr [edx + 0x34], al
0x804978b:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804978f:   88 82 35 00 00 00               	mov byte ptr [edx + 0x35], al
0x8049795:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049798:   89 82 e8 04 00 00               	mov dword ptr [edx + 0x4e8], eax
0x804979e:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x80497a1:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80497a7:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x80497ab:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x80497b1:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x80497b5:   88 82 3d 00 00 00               	mov byte ptr [edx + 0x3d], al
0x80497bb:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x80497be:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497c4:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x80497c8:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x80497ce:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x80497d2:   88 82 45 00 00 00               	mov byte ptr [edx + 0x45], al
0x80497d8:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497db:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497e1:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497e5:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x80497ec:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497f0:   88 82 ec 04 00 00               	mov byte ptr [edx + 0x4ec], al
0x80497f6:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497fa:   88 82 4e 00 00 00               	mov byte ptr [edx + 0x4e], al
0x8049800:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049803:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049809:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804980d:   66 89 82 ee 04 00 00            	mov word ptr [edx + 0x4ee], ax
0x8049814:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x8049818:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x804981e:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049821:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049827:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804982a:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049830:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049833:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049839:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804983c:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049842:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049845:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x804984b:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804984f:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x8049856:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049859:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x804985f:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049863:   88 82 f0 04 00 00               	mov byte ptr [edx + 0x4f0], al
0x8049869:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804986d:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x8049874:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804987a:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049880:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x8049886:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x804988c:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x8049892:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x8049898:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x804989e:   89 82 f4 04 00 00               	mov dword ptr [edx + 0x4f4], eax
0x80498a4:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x80498aa:   89 82 84 00 00 00               	mov dword ptr [edx + 0x84], eax
0x80498b0:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80498b4:   66 89 82 88 00 00 00            	mov word ptr [edx + 0x88], ax
0x80498bb:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80498bf:   66 89 82 8a 00 00 00            	mov word ptr [edx + 0x8a], ax
0x80498c6:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80498ca:   66 89 82 8c 00 00 00            	mov word ptr [edx + 0x8c], ax
0x80498d1:   8b 85 a0 00 00 00               	mov eax, dword ptr [ebp + 0xa0]
0x80498d7:   89 82 90 00 00 00               	mov dword ptr [edx + 0x90], eax
0x80498dd:   8b 85 a4 00 00 00               	mov eax, dword ptr [ebp + 0xa4]
0x80498e3:   89 82 94 00 00 00               	mov dword ptr [edx + 0x94], eax
0x80498e9:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80498ed:   88 82 98 00 00 00               	mov byte ptr [edx + 0x98], al
0x80498f3:   8b 85 ac 00 00 00               	mov eax, dword ptr [ebp + 0xac]
0x80498f9:   89 82 9c 00 00 00               	mov dword ptr [edx + 0x9c], eax
0x80498ff:   8b 85 b0 00 00 00               	mov eax, dword ptr [ebp + 0xb0]
0x8049905:   89 82 a0 00 00 00               	mov dword ptr [edx + 0xa0], eax
0x804990b:   b8 00 00 00 00                  	mov eax, 0
0x8049910:   81 c4 88 00 00 00               	add esp, 0x88
0x8049916:   5b                              	pop ebx
0x8049917:   5e                              	pop esi
0x8049918:   5f                              	pop edi
0x8049919:   5d                              	pop ebp
0x804991a:   c3                              	ret 
; function: func_1 at 0x804991b -- 0x804aa51
0x804991b:   55                              	push ebp
0x804991c:   89 e5                           	mov ebp, esp
0x804991e:   57                              	push edi
0x804991f:   56                              	push esi
0x8049920:   53                              	push ebx
0x8049921:   81 ec c4 01 00 00               	sub esp, 0x1c4
0x8049927:   e8 e2 16 00 00                  	call 0x804b00e <__x86.get_pc_thunk.ax>
0x804992c:   05 d4 46 00 00                  	add eax, 0x46d4
0x8049931:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x8049937:   c7 45 ec 77 eb fd 28            	mov dword ptr [ebp - 0x14], 0x28fdeb77
0x804993e:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049945:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x804994f:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x8049956:   c6 85 0b ff ff ff 08            	mov byte ptr [ebp - 0xf5], 8
0x804995d:   c6 45 a3 e6                     	mov byte ptr [ebp - 0x5d], 0xe6
0x8049961:   c7 85 04 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xfc], 0
0x804996b:   c7 85 00 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x100], 1
0x8049975:   c6 85 62 ff ff ff 01            	mov byte ptr [ebp - 0x9e], 1
0x804997c:   c6 85 5f ff ff ff 51            	mov byte ptr [ebp - 0xa1], 0x51
0x8049983:   c7 45 9c a9 bc 61 87            	mov dword ptr [ebp - 0x64], 0x8761bca9
0x804998a:   c6 85 5e ff ff ff fe            	mov byte ptr [ebp - 0xa2], 0xfe
0x8049991:   c6 85 5d ff ff ff c9            	mov byte ptr [ebp - 0xa3], 0xc9
0x8049998:   c7 45 b8 03 00 00 00            	mov dword ptr [ebp - 0x48], 3
0x804999f:   66 c7 45 e2 ff ff               	mov word ptr [ebp - 0x1e], 0xffff
0x80499a5:   c6 85 5c ff ff ff 00            	mov byte ptr [ebp - 0xa4], 0
0x80499ac:   c6 85 77 ff ff ff 01            	mov byte ptr [ebp - 0x89], 1
0x80499b3:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x80499ba:   66 c7 45 da 00 00               	mov word ptr [ebp - 0x26], 0
0x80499c0:   c6 85 5b ff ff ff b6            	mov byte ptr [ebp - 0xa5], 0xb6
0x80499c7:   c7 85 54 ff ff ff 31 24 80 cc   	mov dword ptr [ebp - 0xac], 0xcc802431
0x80499d1:   c7 85 50 ff ff ff 7c d7 fa 8a   	mov dword ptr [ebp - 0xb0], 0x8afad77c
0x80499db:   c7 85 4c ff ff ff ed 6c ec ef   	mov dword ptr [ebp - 0xb4], 0xefec6ced
0x80499e5:   c7 85 48 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xb8], 0xfffffffa
0x80499ef:   c7 45 d4 01 00 00 00            	mov dword ptr [ebp - 0x2c], 1
0x80499f6:   66 c7 85 46 ff ff ff 4e 53      	mov word ptr [ebp - 0xba], 0x534e
0x80499ff:   c7 45 d0 d4 2c 07 d1            	mov dword ptr [ebp - 0x30], 0xd1072cd4
0x8049a06:   c6 85 45 ff ff ff 00            	mov byte ptr [ebp - 0xbb], 0
0x8049a0d:   66 c7 85 42 ff ff ff e9 f2      	mov word ptr [ebp - 0xbe], 0xf2e9
0x8049a16:   c7 85 3c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xc4], 0xfffffffc
0x8049a20:   c7 85 38 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xc8], 6
0x8049a2a:   c7 45 bc 64 c7 28 72            	mov dword ptr [ebp - 0x44], 0x7228c764
0x8049a31:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x8049a3b:   c7 45 c8 c4 ad bb ee            	mov dword ptr [ebp - 0x38], 0xeebbadc4
0x8049a42:   c7 45 c4 43 7c d5 e4            	mov dword ptr [ebp - 0x3c], 0xe4d57c43
0x8049a49:   66 c7 45 c2 41 83               	mov word ptr [ebp - 0x3e], 0x8341
0x8049a4f:   66 c7 45 c0 fb ff               	mov word ptr [ebp - 0x40], 0xfffb
0x8049a55:   66 c7 85 b8 fe ff ff fe 36      	mov word ptr [ebp - 0x148], 0x36fe
0x8049a5e:   c7 85 fc fe ff ff 3f a1 87 b4   	mov dword ptr [ebp - 0x104], 0xb487a13f
0x8049a68:   c7 85 b4 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x14c], 0xfffffffc
0x8049a72:   c6 85 b3 fe ff ff fc            	mov byte ptr [ebp - 0x14d], 0xfc
0x8049a79:   c7 85 ac fe ff ff a8 14 31 d9   	mov dword ptr [ebp - 0x154], 0xd93114a8
0x8049a83:   c7 45 cc ff ff ff ff            	mov dword ptr [ebp - 0x34], 0xffffffff
0x8049a8a:   c6 85 ab fe ff ff 34            	mov byte ptr [ebp - 0x155], 0x34
0x8049a91:   c7 85 a4 fe ff ff a3 07 43 e2   	mov dword ptr [ebp - 0x15c], 0xe24307a3
0x8049a9b:   c7 85 a0 fe ff ff 67 6a e8 9a   	mov dword ptr [ebp - 0x160], 0x9ae86a67
0x8049aa5:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x8049aaf:   c7 85 9c fe ff ff 89 d1 bd b9   	mov dword ptr [ebp - 0x164], 0xb9bdd189
0x8049ab9:   c7 85 98 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x168], 0xffffffff
0x8049ac3:   c7 85 94 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x16c], 8
0x8049acd:   c7 85 90 fe ff ff ce 64 d5 84   	mov dword ptr [ebp - 0x170], 0x84d564ce
0x8049ad7:   c6 85 8f fe ff ff 5f            	mov byte ptr [ebp - 0x171], 0x5f
0x8049ade:   c7 85 88 fe ff ff f1 89 38 38   	mov dword ptr [ebp - 0x178], 0x383889f1
0x8049ae8:   c7 45 b4 74 0d 73 56            	mov dword ptr [ebp - 0x4c], 0x56730d74
0x8049aef:   c7 45 ac 65 04 e6 60            	mov dword ptr [ebp - 0x54], 0x60e60465
0x8049af6:   c6 85 87 fe ff ff 08            	mov byte ptr [ebp - 0x179], 8
0x8049afd:   c7 85 bc fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x144], 5
0x8049b07:   c7 85 6c ff ff ff 25 6a 2c 7b   	mov dword ptr [ebp - 0x94], 0x7b2c6a25
0x8049b11:   66 c7 85 ba fe ff ff d1 2c      	mov word ptr [ebp - 0x146], 0x2cd1
0x8049b1a:   c6 85 f9 fe ff ff eb            	mov byte ptr [ebp - 0x107], 0xeb
0x8049b21:   c7 85 f4 fe ff ff a8 e6 7c 7c   	mov dword ptr [ebp - 0x10c], 0x7c7ce6a8
0x8049b2b:   c7 85 f0 fe ff ff c6 09 77 53   	mov dword ptr [ebp - 0x110], 0x537709c6
0x8049b35:   66 c7 85 ee fe ff ff 70 70      	mov word ptr [ebp - 0x112], 0x7070
0x8049b3e:   c7 85 e8 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x118], 0xfffffff8
0x8049b48:   c7 85 e4 fe ff ff 70 45 ec 58   	mov dword ptr [ebp - 0x11c], 0x58ec4570
0x8049b52:   c7 85 e0 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x120], 2
0x8049b5c:   c7 85 dc fe ff ff 32 d0 30 c5   	mov dword ptr [ebp - 0x124], 0xc530d032
0x8049b66:   c7 85 d8 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x128], 0xfffffff8
0x8049b70:   66 c7 45 f2 bc e0               	mov word ptr [ebp - 0xe], 0xe0bc
0x8049b76:   66 c7 85 d6 fe ff ff 6c b2      	mov word ptr [ebp - 0x12a], 0xb26c
0x8049b7f:   c7 85 d0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x130], 0
0x8049b89:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049b8e:   75 24                           	jne 0x8049bb4 <func_1+0x299>
0x8049b90:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049b94:   0f b6 c0                        	movzx eax, al
0x8049b97:   f6 b5 ab fe ff ff               	div byte ptr [ebp - 0x155]
0x8049b9d:   0f b6 c0                        	movzx eax, al
0x8049ba0:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ba3:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049ba7:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049bac:   75 06                           	jne 0x8049bb4 <func_1+0x299>
0x8049bae:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049bb2:   74 5c                           	je 0x8049c10 <func_1+0x2f5>
0x8049bb4:   c7 85 c4 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x13c], 2
0x8049bbe:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049bc1:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049bc7:   01 d0                           	add eax, edx
0x8049bc9:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049bcc:   81 7d e8 ff 00 00 00            	cmp dword ptr [ebp - 0x18], 0xff
0x8049bd3:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x8049bda:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x8049be0:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049be4:   0f 94 c0                        	sete al
0x8049be7:   0f b6 d0                        	movzx edx, al
0x8049bea:   0f b6 85 ab fe ff ff            	movzx eax, byte ptr [ebp - 0x155]
0x8049bf1:   c1 e0 04                        	shl eax, 4
0x8049bf4:   39 85 a0 fe ff ff               	cmp dword ptr [ebp - 0x160], eax
0x8049bfa:   0f 97 c0                        	seta al
0x8049bfd:   0f b6 c0                        	movzx eax, al
0x8049c00:   33 85 a4 fe ff ff               	xor eax, dword ptr [ebp - 0x15c]
0x8049c06:   09 d0                           	or eax, edx
0x8049c08:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049c0e:   eb 29                           	jmp 0x8049c39 <func_1+0x31e>
0x8049c10:   c7 85 cc fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x134], 0xfffffffb
0x8049c1a:   c7 85 c8 fe ff ff ec 9c bb 74   	mov dword ptr [ebp - 0x138], 0x74bb9cec
0x8049c24:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c27:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049c2d:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x8049c33:   09 85 c8 fe ff ff               	or dword ptr [ebp - 0x138], eax
0x8049c39:   c7 45 e8 09 00 00 00            	mov dword ptr [ebp - 0x18], 9
0x8049c40:   eb 4e                           	jmp 0x8049c90 <func_1+0x375>
0x8049c42:   66 c7 85 6e fe ff ff 00 00      	mov word ptr [ebp - 0x192], 0
0x8049c4b:   66 c7 85 d6 fe ff ff f4 ff      	mov word ptr [ebp - 0x12a], 0xfff4
0x8049c54:   eb 16                           	jmp 0x8049c6c <func_1+0x351>
0x8049c56:   83 bd a4 fe ff ff 00            	cmp dword ptr [ebp - 0x15c], 0
0x8049c5d:   74 05                           	je 0x8049c64 <func_1+0x349>
0x8049c5f:   e9 25 ff ff ff                  	jmp 0x8049b89 <func_1+0x26e>
0x8049c64:   66 83 85 d6 fe ff ff 06         	add word ptr [ebp - 0x12a], 6
0x8049c6c:   66 83 bd d6 fe ff ff 30         	cmp word ptr [ebp - 0x12a], 0x30
0x8049c74:   75 e0                           	jne 0x8049c56 <func_1+0x33b>
0x8049c76:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x8049c7a:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c7d:   22 85 0b ff ff ff               	and al, byte ptr [ebp - 0xf5]
0x8049c83:   83 e0 fe                        	and eax, 0xfffffffe
0x8049c86:   88 85 0b ff ff ff               	mov byte ptr [ebp - 0xf5], al
0x8049c8c:   83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x8049c90:   83 7d e8 fb                     	cmp dword ptr [ebp - 0x18], -5
0x8049c94:   7d ac                           	jge 0x8049c42 <func_1+0x327>
0x8049c96:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x8049c9c:   89 c2                           	mov edx, eax
0x8049c9e:   c1 e0 05                        	shl eax, 5
0x8049ca1:   29 c2                           	sub edx, eax
0x8049ca3:   89 d0                           	mov eax, edx
0x8049ca5:   89 c1                           	mov ecx, eax
0x8049ca7:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049caa:   89 c2                           	mov edx, eax
0x8049cac:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x8049cb3:   39 85 9c fe ff ff               	cmp dword ptr [ebp - 0x164], eax
0x8049cb9:   0f 96 c0                        	setbe al
0x8049cbc:   29 c2                           	sub edx, eax
0x8049cbe:   89 d0                           	mov eax, edx
0x8049cc0:   09 c8                           	or eax, ecx
0x8049cc2:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x8049cc5:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x8049ccc:   0f be d0                        	movsx edx, al
0x8049ccf:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049cd3:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x8049cd9:   0f 9f c0                        	setg al
0x8049cdc:   0f b6 c0                        	movzx eax, al
0x8049cdf:   89 c1                           	mov ecx, eax
0x8049ce1:   b8 06 00 00 00                  	mov eax, 6
0x8049ce6:   0f b6 c0                        	movzx eax, al
0x8049ce9:   f6 f1                           	div cl
0x8049ceb:   0f b6 d8                        	movzx ebx, al
0x8049cee:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x8049cf5:   0f b6 c0                        	movzx eax, al
0x8049cf8:   89 c1                           	mov ecx, eax
0x8049cfa:   d3 fb                           	sar ebx, cl
0x8049cfc:   89 d8                           	mov eax, ebx
0x8049cfe:   0f be c8                        	movsx ecx, al
0x8049d01:   89 d0                           	mov eax, edx
0x8049d03:   99                              	cdq 
0x8049d04:   f7 f9                           	idiv ecx
0x8049d06:   89 c2                           	mov edx, eax
0x8049d08:   0f b6 85 ab fe ff ff            	movzx eax, byte ptr [ebp - 0x155]
0x8049d0f:   29 c2                           	sub edx, eax
0x8049d11:   89 d0                           	mov eax, edx
0x8049d13:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049d19:   c6 85 5d ff ff ff 00            	mov byte ptr [ebp - 0xa3], 0
0x8049d20:   e9 a2 09 00 00                  	jmp 0x804a6c7 <func_1+0xdac>
0x8049d25:   c6 85 83 fe ff ff ca            	mov byte ptr [ebp - 0x17d], 0xca
0x8049d2c:   c7 85 7c fe ff ff d9 fc 15 8a   	mov dword ptr [ebp - 0x184], 0x8a15fcd9
0x8049d36:   c7 45 98 c7 76 b2 74            	mov dword ptr [ebp - 0x68], 0x74b276c7
0x8049d3d:   66 c7 85 7a fe ff ff d6 4d      	mov word ptr [ebp - 0x186], 0x4dd6
0x8049d46:   c7 85 74 fe ff ff 61 d1 44 f5   	mov dword ptr [ebp - 0x18c], 0xf544d161
0x8049d50:   0f be 95 83 fe ff ff            	movsx edx, byte ptr [ebp - 0x17d]
0x8049d57:   66 0f be 85 83 fe ff ff         	movsx ax, byte ptr [ebp - 0x17d]
0x8049d5f:   0f b7 c8                        	movzx ecx, ax
0x8049d62:   83 bd 94 fe ff ff 00            	cmp dword ptr [ebp - 0x16c], 0
0x8049d69:   75 0e                           	jne 0x8049d79 <func_1+0x45e>
0x8049d6b:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049d70:   74 07                           	je 0x8049d79 <func_1+0x45e>
0x8049d72:   bb 01 00 00 00                  	mov ebx, 1
0x8049d77:   eb 05                           	jmp 0x8049d7e <func_1+0x463>
0x8049d79:   bb 00 00 00 00                  	mov ebx, 0
0x8049d7e:   0f be 85 83 fe ff ff            	movsx eax, byte ptr [ebp - 0x17d]
0x8049d85:   39 c3                           	cmp ebx, eax
0x8049d87:   0f 9f c0                        	setg al
0x8049d8a:   0f b6 c0                        	movzx eax, al
0x8049d8d:   0f af c1                        	imul eax, ecx
0x8049d90:   21 d0                           	and eax, edx
0x8049d92:   85 c0                           	test eax, eax
0x8049d94:   0f 84 2f 05 00 00               	je 0x804a2c9 <func_1+0x9ae>
0x8049d9a:   c7 45 90 3a 86 99 25            	mov dword ptr [ebp - 0x70], 0x2599863a
0x8049da1:   66 c7 45 8e 01 00               	mov word ptr [ebp - 0x72], 1
0x8049da7:   c7 45 88 8e d7 7f d3            	mov dword ptr [ebp - 0x78], 0xd37fd78e
0x8049dae:   c6 45 87 fd                     	mov byte ptr [ebp - 0x79], 0xfd
0x8049db2:   c7 45 80 02 00 00 00            	mov dword ptr [ebp - 0x80], 2
0x8049db9:   8b 85 7c fe ff ff               	mov eax, dword ptr [ebp - 0x184]
0x8049dbf:   0f b7 d0                        	movzx edx, ax
0x8049dc2:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049dc6:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x8049dcc:   0f 94 c0                        	sete al
0x8049dcf:   0f b6 d8                        	movzx ebx, al
0x8049dd2:   0f be 8d 5c ff ff ff            	movsx ecx, byte ptr [ebp - 0xa4]
0x8049dd9:   8b 85 7c fe ff ff               	mov eax, dword ptr [ebp - 0x184]
0x8049ddf:   98                              	cwde 
0x8049de0:   0f af c8                        	imul ecx, eax
0x8049de3:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x8049dea:   39 c1                           	cmp ecx, eax
0x8049dec:   0f 9c c0                        	setl al
0x8049def:   0f b6 c0                        	movzx eax, al
0x8049df2:   39 85 bc fe ff ff               	cmp dword ptr [ebp - 0x144], eax
0x8049df8:   0f 97 c0                        	seta al
0x8049dfb:   0f b6 c0                        	movzx eax, al
0x8049dfe:   89 c1                           	mov ecx, eax
0x8049e00:   d3 e3                           	shl ebx, cl
0x8049e02:   89 d8                           	mov eax, ebx
0x8049e04:   66 0f be c8                     	movsx cx, al
0x8049e08:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049e0b:   66 98                           	cbw 
0x8049e0d:   0f af c1                        	imul eax, ecx
0x8049e10:   0f b7 c0                        	movzx eax, ax
0x8049e13:   89 c1                           	mov ecx, eax
0x8049e15:   d3 fa                           	sar edx, cl
0x8049e17:   89 d0                           	mov eax, edx
0x8049e19:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049e1c:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x8049e23:   74 35                           	je 0x8049e5a <func_1+0x53f>
0x8049e25:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e28:   23 85 a0 fe ff ff               	and eax, dword ptr [ebp - 0x160]
0x8049e2e:   85 c0                           	test eax, eax
0x8049e30:   74 28                           	je 0x8049e5a <func_1+0x53f>
0x8049e32:   66 c7 85 7e ff ff ff 33 23      	mov word ptr [ebp - 0x82], 0x2333
0x8049e3b:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049e41:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049e44:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x8049e4b:   83 c0 01                        	add eax, 1
0x8049e4e:   66 89 85 7e ff ff ff            	mov word ptr [ebp - 0x82], ax
0x8049e55:   e9 10 08 00 00                  	jmp 0x804a66a <func_1+0xd4f>
0x8049e5a:   c6 85 7d ff ff ff 01            	mov byte ptr [ebp - 0x83], 1
0x8049e61:   c7 85 78 ff ff ff cd 43 16 5d   	mov dword ptr [ebp - 0x88], 0x5d1643cd
0x8049e6b:   0f be 85 5c ff ff ff            	movsx eax, byte ptr [ebp - 0xa4]
0x8049e72:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049e75:   0f 9e c0                        	setle al
0x8049e78:   0f b6 d0                        	movzx edx, al
0x8049e7b:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x8049e7f:   21 d0                           	and eax, edx
0x8049e81:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049e87:   0f 95 c0                        	setne al
0x8049e8a:   0f b6 c0                        	movzx eax, al
0x8049e8d:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049e90:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049e93:   0f b7 d0                        	movzx edx, ax
0x8049e96:   8b 85 7c fe ff ff               	mov eax, dword ptr [ebp - 0x184]
0x8049e9c:   0f b7 c0                        	movzx eax, ax
0x8049e9f:   0f af d0                        	imul edx, eax
0x8049ea2:   8b 85 7c fe ff ff               	mov eax, dword ptr [ebp - 0x184]
0x8049ea8:   0f b7 d8                        	movzx ebx, ax
0x8049eab:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049eae:   88 85 77 ff ff ff               	mov byte ptr [ebp - 0x89], al
0x8049eb4:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x8049ebb:   75 09                           	jne 0x8049ec6 <func_1+0x5ab>
0x8049ebd:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049ec4:   74 07                           	je 0x8049ecd <func_1+0x5b2>
0x8049ec6:   b8 01 00 00 00                  	mov eax, 1
0x8049ecb:   eb 05                           	jmp 0x8049ed2 <func_1+0x5b7>
0x8049ecd:   b8 00 00 00 00                  	mov eax, 0
0x8049ed2:   0f b6 c8                        	movzx ecx, al
0x8049ed5:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049ed8:   0f b6 c0                        	movzx eax, al
0x8049edb:   01 c8                           	add eax, ecx
0x8049edd:   39 85 7c fe ff ff               	cmp dword ptr [ebp - 0x184], eax
0x8049ee3:   0f 93 c0                        	setae al
0x8049ee6:   0f b6 c0                        	movzx eax, al
0x8049ee9:   f7 d8                           	neg eax
0x8049eeb:   0f b7 c0                        	movzx eax, ax
0x8049eee:   89 c1                           	mov ecx, eax
0x8049ef0:   d3 fb                           	sar ebx, cl
0x8049ef2:   89 d8                           	mov eax, ebx
0x8049ef4:   85 c0                           	test eax, eax
0x8049ef6:   74 10                           	je 0x8049f08 <func_1+0x5ed>
0x8049ef8:   80 bd 7d ff ff ff 00            	cmp byte ptr [ebp - 0x83], 0
0x8049eff:   74 07                           	je 0x8049f08 <func_1+0x5ed>
0x8049f01:   b8 01 00 00 00                  	mov eax, 1
0x8049f06:   eb 05                           	jmp 0x8049f0d <func_1+0x5f2>
0x8049f08:   b8 00 00 00 00                  	mov eax, 0
0x8049f0d:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049f10:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049f17:   74 07                           	je 0x8049f20 <func_1+0x605>
0x8049f19:   b8 01 00 00 00                  	mov eax, 1
0x8049f1e:   eb 05                           	jmp 0x8049f25 <func_1+0x60a>
0x8049f20:   b8 00 00 00 00                  	mov eax, 0
0x8049f25:   0f bf c8                        	movsx ecx, ax
0x8049f28:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x8049f2f:   98                              	cwde 
0x8049f30:   0f af c8                        	imul ecx, eax
0x8049f33:   0f be 45 a3                     	movsx eax, byte ptr [ebp - 0x5d]
0x8049f37:   39 c1                           	cmp ecx, eax
0x8049f39:   0f 9e c0                        	setle al
0x8049f3c:   0f b6 c0                        	movzx eax, al
0x8049f3f:   39 c2                           	cmp edx, eax
0x8049f41:   0f 9e c0                        	setle al
0x8049f44:   0f b6 d0                        	movzx edx, al
0x8049f47:   0f be 85 5e ff ff ff            	movsx eax, byte ptr [ebp - 0xa2]
0x8049f4e:   39 c2                           	cmp edx, eax
0x8049f50:   0f 8d 83 01 00 00               	jge 0x804a0d9 <func_1+0x7be>
0x8049f56:   c7 85 70 fe ff ff c1 21 44 ca   	mov dword ptr [ebp - 0x190], 0xca4421c1
0x8049f60:   8b 85 70 fe ff ff               	mov eax, dword ptr [ebp - 0x190]
0x8049f66:   89 c1                           	mov ecx, eax
0x8049f68:   b8 03 00 00 00                  	mov eax, 3
0x8049f6d:   ba 00 00 00 00                  	mov edx, 0
0x8049f72:   66 f7 f1                        	div cx
0x8049f75:   89 d0                           	mov eax, edx
0x8049f77:   0f be d0                        	movsx edx, al
0x8049f7a:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049f80:   0f be c0                        	movsx eax, al
0x8049f83:   89 c1                           	mov ecx, eax
0x8049f85:   d3 fa                           	sar edx, cl
0x8049f87:   89 d0                           	mov eax, edx
0x8049f89:   98                              	cwde 
0x8049f8a:   0f b7 95 7a fe ff ff            	movzx edx, word ptr [ebp - 0x186]
0x8049f91:   0f bf ca                        	movsx ecx, dx
0x8049f94:   99                              	cdq 
0x8049f95:   f7 f9                           	idiv ecx
0x8049f97:   89 d0                           	mov eax, edx
0x8049f99:   0f b7 d0                        	movzx edx, ax
0x8049f9c:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x8049fa3:   89 c1                           	mov ecx, eax
0x8049fa5:   d3 e2                           	shl edx, cl
0x8049fa7:   89 d0                           	mov eax, edx
0x8049fa9:   0f be c0                        	movsx eax, al
0x8049fac:   f7 d8                           	neg eax
0x8049fae:   89 c2                           	mov edx, eax
0x8049fb0:   0f b7 45 8e                     	movzx eax, word ptr [ebp - 0x72]
0x8049fb4:   39 c2                           	cmp edx, eax
0x8049fb6:   0f 9d c0                        	setge al
0x8049fb9:   0f b6 c0                        	movzx eax, al
0x8049fbc:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x8049fc0:   0f b6 fa                        	movzx edi, dl
0x8049fc3:   99                              	cdq 
0x8049fc4:   f7 ff                           	idiv edi
0x8049fc6:   85 c0                           	test eax, eax
0x8049fc8:   0f 95 c0                        	setne al
0x8049fcb:   89 c2                           	mov edx, eax
0x8049fcd:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049fd0:   21 d0                           	and eax, edx
0x8049fd2:   89 c1                           	mov ecx, eax
0x8049fd4:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x8049fdb:   89 c2                           	mov edx, eax
0x8049fdd:   0f b6 c1                        	movzx eax, cl
0x8049fe0:   f6 f2                           	div dl
0x8049fe2:   0f b6 c4                        	movzx eax, ah
0x8049fe5:   0f be c0                        	movsx eax, al
0x8049fe8:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x8049feb:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x8049fef:   33 45 ac                        	xor eax, dword ptr [ebp - 0x54]
0x8049ff2:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x8049ff8:   7d 07                           	jge 0x804a001 <func_1+0x6e6>
0x8049ffa:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x8049fff:   eb 05                           	jmp 0x804a006 <func_1+0x6eb>
0x804a001:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x804a006:   0f be b5 5e ff ff ff            	movsx esi, byte ptr [ebp - 0xa2]
0x804a00d:   99                              	cdq 
0x804a00e:   f7 fe                           	idiv esi
0x804a010:   85 c0                           	test eax, eax
0x804a012:   74 72                           	je 0x804a086 <func_1+0x76b>
0x804a014:   c7 85 68 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x198], 4
0x804a01e:   c7 85 64 fe ff ff da 72 8e 22   	mov dword ptr [ebp - 0x19c], 0x228e72da
0x804a028:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804a02f:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a032:   0f 93 c0                        	setae al
0x804a035:   0f b6 c0                        	movzx eax, al
0x804a038:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a03b:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804a03f:   75 1e                           	jne 0x804a05f <func_1+0x744>
0x804a041:   83 bd 9c fe ff ff 00            	cmp dword ptr [ebp - 0x164], 0
0x804a048:   74 0d                           	je 0x804a057 <func_1+0x73c>
0x804a04a:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a04e:   74 07                           	je 0x804a057 <func_1+0x73c>
0x804a050:   b8 01 00 00 00                  	mov eax, 1
0x804a055:   eb 05                           	jmp 0x804a05c <func_1+0x741>
0x804a057:   b8 00 00 00 00                  	mov eax, 0
0x804a05c:   83 f8 01                        	cmp eax, 1
0x804a05f:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x804a066:   8d 90 25 13 e0 21               	lea edx, [eax + 0x21e01325]
0x804a06c:   0f be 85 83 fe ff ff            	movsx eax, byte ptr [ebp - 0x17d]
0x804a073:   09 d0                           	or eax, edx
0x804a075:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a078:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a07b:   21 85 64 fe ff ff               	and dword ptr [ebp - 0x19c], eax
0x804a081:   e9 a9 00 00 00                  	jmp 0x804a12f <func_1+0x814>
0x804a086:   c6 45 ab b2                     	mov byte ptr [ebp - 0x55], 0xb2
0x804a08a:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x804a091:   66 c7 45 e2 00 00               	mov word ptr [ebp - 0x1e], 0
0x804a097:   c6 45 a3 00                     	mov byte ptr [ebp - 0x5d], 0
0x804a09b:   c6 45 ab 00                     	mov byte ptr [ebp - 0x55], 0
0x804a09f:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a0a6:   74 07                           	je 0x804a0af <func_1+0x794>
0x804a0a8:   b8 01 00 00 00                  	mov eax, 1
0x804a0ad:   eb 05                           	jmp 0x804a0b4 <func_1+0x799>
0x804a0af:   b8 00 00 00 00                  	mov eax, 0
0x804a0b4:   0d 03 db f1 2b                  	or eax, 0x2bf1db03
0x804a0b9:   0f b7 bd 7a fe ff ff            	movzx edi, word ptr [ebp - 0x186]
0x804a0c0:   99                              	cdq 
0x804a0c1:   f7 ff                           	idiv edi
0x804a0c3:   85 c0                           	test eax, eax
0x804a0c5:   74 07                           	je 0x804a0ce <func_1+0x7b3>
0x804a0c7:   80 bd 5c ff ff ff 00            	cmp byte ptr [ebp - 0xa4], 0
0x804a0ce:   8b 85 70 fe ff ff               	mov eax, dword ptr [ebp - 0x190]
0x804a0d4:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x804a0d7:   eb 56                           	jmp 0x804a12f <func_1+0x814>
0x804a0d9:   83 ad 70 ff ff ff 01            	sub dword ptr [ebp - 0x90], 1
0x804a0e0:   c7 85 6c ff ff ff 3f 00 00 00   	mov dword ptr [ebp - 0x94], 0x3f
0x804a0ea:   66 83 45 f2 01                  	add word ptr [ebp - 0xe], 1
0x804a0ef:   66 81 4d da 52 90               	or word ptr [ebp - 0x26], 0x9052
0x804a0f5:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a0f9:   88 85 0b ff ff ff               	mov byte ptr [ebp - 0xf5], al
0x804a0ff:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x804a106:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a10c:   0f 9e c0                        	setle al
0x804a10f:   0f b6 c0                        	movzx eax, al
0x804a112:   39 85 a0 fe ff ff               	cmp dword ptr [ebp - 0x160], eax
0x804a118:   77 0d                           	ja 0x804a127 <func_1+0x80c>
0x804a11a:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a11e:   74 07                           	je 0x804a127 <func_1+0x80c>
0x804a120:   b8 01 00 00 00                  	mov eax, 1
0x804a125:   eb 05                           	jmp 0x804a12c <func_1+0x811>
0x804a127:   b8 00 00 00 00                  	mov eax, 0
0x804a12c:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a12f:   0f be 85 b3 fe ff ff            	movsx eax, byte ptr [ebp - 0x14d]
0x804a136:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x804a13c:   0f b7 85 b8 fe ff ff            	movzx eax, word ptr [ebp - 0x148]
0x804a143:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x804a149:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a14d:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x804a153:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a157:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804a15d:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a164:   89 85 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], eax
0x804a16a:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x804a171:   89 85 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], eax
0x804a177:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a17e:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x804a184:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804a18b:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x804a191:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804a195:   89 95 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edx
0x804a19b:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x804a1a2:   0f be 8d 5c ff ff ff            	movsx ecx, byte ptr [ebp - 0xa4]
0x804a1a9:   89 8d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ecx
0x804a1af:   0f b7 4d e2                     	movzx ecx, word ptr [ebp - 0x1e]
0x804a1b3:   0f b6 9d 5d ff ff ff            	movzx ebx, byte ptr [ebp - 0xa3]
0x804a1ba:   89 9d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ebx
0x804a1c0:   0f be 9d 5e ff ff ff            	movsx ebx, byte ptr [ebp - 0xa2]
0x804a1c7:   0f be b5 5f ff ff ff            	movsx esi, byte ptr [ebp - 0xa1]
0x804a1ce:   89 b5 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], esi
0x804a1d4:   0f be b5 62 ff ff ff            	movsx esi, byte ptr [ebp - 0x9e]
0x804a1db:   0f be 7d a3                     	movsx edi, byte ptr [ebp - 0x5d]
0x804a1df:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804a1e5:   0f b6 bd 0b ff ff ff            	movzx edi, byte ptr [ebp - 0xf5]
0x804a1ec:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a1f0:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a1f3:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a1f9:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a1ff:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a205:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a20b:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a211:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a217:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a21d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a220:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a226:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a229:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a22f:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804a235:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a23b:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a241:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a244:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a24a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a24d:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a253:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a259:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a25f:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a265:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804a26b:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a271:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a274:   52                              	push edx
0x804a275:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804a27b:   51                              	push ecx
0x804a27c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a27f:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804a285:   53                              	push ebx
0x804a286:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a289:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804a28f:   56                              	push esi
0x804a290:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a296:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a29c:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a2a2:   57                              	push edi
0x804a2a3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a2a6:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a2ac:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a2af:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a2b2:   50                              	push eax
0x804a2b3:   e8 6e f3 ff ff                  	call 0x8049626 <set_var>
0x804a2b8:   81 c4 ac 00 00 00               	add esp, 0xac
0x804a2be:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x804a2c4:   e9 80 07 00 00                  	jmp 0x804aa49 <func_1+0x112e>
0x804a2c9:   66 c7 85 84 fe ff ff 5c 65      	mov word ptr [ebp - 0x17c], 0x655c
0x804a2d2:   c6 85 62 ff ff ff 00            	mov byte ptr [ebp - 0x9e], 0
0x804a2d9:   e9 f2 02 00 00                  	jmp 0x804a5d0 <func_1+0xcb5>
0x804a2de:   c6 85 63 ff ff ff 4c            	mov byte ptr [ebp - 0x9d], 0x4c
0x804a2e5:   c7 45 b0 a8 93 ef bf            	mov dword ptr [ebp - 0x50], 0xbfef93a8
0x804a2ec:   c7 45 b8 ef ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffef
0x804a2f3:   e9 67 02 00 00                  	jmp 0x804a55f <func_1+0xc44>
0x804a2f8:   66 c7 85 60 ff ff ff 01 00      	mov word ptr [ebp - 0xa0], 1
0x804a301:   66 c7 45 a0 01 00               	mov word ptr [ebp - 0x60], 1
0x804a307:   83 bd a0 fe ff ff 00            	cmp dword ptr [ebp - 0x160], 0
0x804a30e:   74 05                           	je 0x804a315 <func_1+0x9fa>
0x804a310:   e9 5b f8 ff ff                  	jmp 0x8049b70 <func_1+0x255>
0x804a315:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804a31c:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a320:   0f 8e 97 01 00 00               	jle 0x804a4bd <func_1+0xba2>
0x804a326:   0f be 85 b3 fe ff ff            	movsx eax, byte ptr [ebp - 0x14d]
0x804a32d:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x804a333:   0f b7 85 b8 fe ff ff            	movzx eax, word ptr [ebp - 0x148]
0x804a33a:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x804a340:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a344:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x804a34a:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a34e:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804a354:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a35b:   89 85 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], eax
0x804a361:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x804a368:   89 85 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], eax
0x804a36e:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a375:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x804a37b:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804a382:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x804a388:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804a38c:   89 95 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edx
0x804a392:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x804a399:   0f be 8d 5c ff ff ff            	movsx ecx, byte ptr [ebp - 0xa4]
0x804a3a0:   89 8d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ecx
0x804a3a6:   0f b7 4d e2                     	movzx ecx, word ptr [ebp - 0x1e]
0x804a3aa:   0f b6 9d 5d ff ff ff            	movzx ebx, byte ptr [ebp - 0xa3]
0x804a3b1:   89 9d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ebx
0x804a3b7:   0f be 9d 5e ff ff ff            	movsx ebx, byte ptr [ebp - 0xa2]
0x804a3be:   0f be b5 5f ff ff ff            	movsx esi, byte ptr [ebp - 0xa1]
0x804a3c5:   89 b5 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], esi
0x804a3cb:   0f be b5 62 ff ff ff            	movsx esi, byte ptr [ebp - 0x9e]
0x804a3d2:   0f be 7d a3                     	movsx edi, byte ptr [ebp - 0x5d]
0x804a3d6:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804a3dc:   0f b6 bd 0b ff ff ff            	movzx edi, byte ptr [ebp - 0xf5]
0x804a3e3:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a3e7:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a3ea:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a3f0:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a3f6:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a3fc:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a402:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a408:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a40e:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a414:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a417:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a41d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a420:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a426:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804a42c:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a432:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a438:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a43b:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a441:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a444:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a44a:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a450:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a456:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a45c:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804a462:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a468:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a46b:   52                              	push edx
0x804a46c:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804a472:   51                              	push ecx
0x804a473:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a476:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804a47c:   53                              	push ebx
0x804a47d:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a480:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804a486:   56                              	push esi
0x804a487:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a48d:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a493:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a499:   57                              	push edi
0x804a49a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a49d:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a4a3:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a4a6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4a9:   50                              	push eax
0x804a4aa:   e8 77 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4af:   81 c4 ac 00 00 00               	add esp, 0xac
0x804a4b5:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a4b8:   e9 8c 05 00 00                  	jmp 0x804aa49 <func_1+0x112e>
0x804a4bd:   66 83 bd 7a fe ff ff 00         	cmp word ptr [ebp - 0x186], 0
0x804a4c5:   74 05                           	je 0x804a4cc <func_1+0xbb1>
0x804a4c7:   e9 a4 f6 ff ff                  	jmp 0x8049b70 <func_1+0x255>
0x804a4cc:   0f bf 45 a0                     	movsx eax, word ptr [ebp - 0x60]
0x804a4d0:   21 45 98                        	and dword ptr [ebp - 0x68], eax
0x804a4d3:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a4d6:   0b 45 b4                        	or eax, dword ptr [ebp - 0x4c]
0x804a4d9:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a4dc:   8b 95 0c ff ff ff               	mov edx, dword ptr [ebp - 0xf4]
0x804a4e2:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a4e5:   01 d0                           	add eax, edx
0x804a4e7:   85 c0                           	test eax, eax
0x804a4e9:   74 0e                           	je 0x804a4f9 <func_1+0xbde>
0x804a4eb:   66 83 7d a0 00                  	cmp word ptr [ebp - 0x60], 0
0x804a4f0:   74 07                           	je 0x804a4f9 <func_1+0xbde>
0x804a4f2:   80 bd 5f ff ff ff 00            	cmp byte ptr [ebp - 0xa1], 0
0x804a4f9:   80 bd 62 ff ff ff fa            	cmp byte ptr [ebp - 0x9e], 0xfa
0x804a500:   75 12                           	jne 0x804a514 <func_1+0xbf9>
0x804a502:   c6 45 97 fc                     	mov byte ptr [ebp - 0x69], 0xfc
0x804a506:   0f be 45 97                     	movsx eax, byte ptr [ebp - 0x69]
0x804a50a:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a50d:   66 83 6d c0 01                  	sub word ptr [ebp - 0x40], 1
0x804a512:   eb 47                           	jmp 0x804a55b <func_1+0xc40>
0x804a514:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a517:   83 c8 fb                        	or eax, 0xfffffffb
0x804a51a:   89 c1                           	mov ecx, eax
0x804a51c:   81 bd 94 fe ff ff 40 27 00 00   	cmp dword ptr [ebp - 0x16c], 0x2740
0x804a526:   0f 9e c0                        	setle al
0x804a529:   0f b6 d0                        	movzx edx, al
0x804a52c:   0f b7 85 60 ff ff ff            	movzx eax, word ptr [ebp - 0xa0]
0x804a533:   0f b6 c0                        	movzx eax, al
0x804a536:   01 c2                           	add edx, eax
0x804a538:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a53c:   39 c2                           	cmp edx, eax
0x804a53e:   0f 95 c0                        	setne al
0x804a541:   0f b6 c0                        	movzx eax, al
0x804a544:   39 c1                           	cmp ecx, eax
0x804a546:   0f 93 c0                        	setae al
0x804a549:   0f b6 c0                        	movzx eax, al
0x804a54c:   39 85 c0 fe ff ff               	cmp dword ptr [ebp - 0x140], eax
0x804a552:   0f 92 c0                        	setb al
0x804a555:   0f b6 c0                        	movzx eax, al
0x804a558:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a55b:   83 45 b8 03                     	add dword ptr [ebp - 0x48], 3
0x804a55f:   83 7d b8 0e                     	cmp dword ptr [ebp - 0x48], 0xe
0x804a563:   0f 84 8f fd ff ff               	je 0x804a2f8 <func_1+0x9dd>
0x804a569:   0f be 85 87 fe ff ff            	movsx eax, byte ptr [ebp - 0x179]
0x804a570:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a573:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x804a576:   66 0f be 85 62 ff ff ff         	movsx ax, byte ptr [ebp - 0x9e]
0x804a57e:   0f b7 c0                        	movzx eax, ax
0x804a581:   89 d1                           	mov ecx, edx
0x804a583:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x804a587:   31 ca                           	xor edx, ecx
0x804a589:   66 89 55 f2                     	mov word ptr [ebp - 0xe], dx
0x804a58d:   0f b7 75 f2                     	movzx esi, word ptr [ebp - 0xe]
0x804a591:   99                              	cdq 
0x804a592:   f7 fe                           	idiv esi
0x804a594:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a597:   66 83 bd 7a fe ff ff 00         	cmp word ptr [ebp - 0x186], 0
0x804a59f:   0f 95 c0                        	setne al
0x804a5a2:   0f b6 d0                        	movzx edx, al
0x804a5a5:   0f b7 85 84 fe ff ff            	movzx eax, word ptr [ebp - 0x17c]
0x804a5ac:   39 c2                           	cmp edx, eax
0x804a5ae:   0f 95 c0                        	setne al
0x804a5b1:   0f b6 c0                        	movzx eax, al
0x804a5b4:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a5b7:   0f 96 c0                        	setbe al
0x804a5ba:   0f b6 c0                        	movzx eax, al
0x804a5bd:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a5c0:   0f b6 85 62 ff ff ff            	movzx eax, byte ptr [ebp - 0x9e]
0x804a5c7:   83 c0 01                        	add eax, 1
0x804a5ca:   88 85 62 ff ff ff               	mov byte ptr [ebp - 0x9e], al
0x804a5d0:   80 bd 62 ff ff ff 03            	cmp byte ptr [ebp - 0x9e], 3
0x804a5d7:   0f 8f 01 fd ff ff               	jg 0x804a2de <func_1+0x9c3>
0x804a5dd:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a5e3:   88 85 0b ff ff ff               	mov byte ptr [ebp - 0xf5], al
0x804a5e9:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x804a5f0:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x804a5f4:   8b 95 c0 fe ff ff               	mov edx, dword ptr [ebp - 0x140]
0x804a5fa:   f7 d2                           	not edx
0x804a5fc:   0f be d2                        	movsx edx, dl
0x804a5ff:   c1 e2 06                        	shl edx, 6
0x804a602:   39 55 9c                        	cmp dword ptr [ebp - 0x64], edx
0x804a605:   0f 9c c2                        	setl dl
0x804a608:   0f b6 d2                        	movzx edx, dl
0x804a60b:   21 ca                           	and edx, ecx
0x804a60d:   39 55 ec                        	cmp dword ptr [ebp - 0x14], edx
0x804a610:   75 07                           	jne 0x804a619 <func_1+0xcfe>
0x804a612:   ba 80 00 00 00                  	mov edx, 0x80
0x804a617:   eb 05                           	jmp 0x804a61e <func_1+0xd03>
0x804a619:   ba 00 00 00 00                  	mov edx, 0
0x804a61e:   21 d0                           	and eax, edx
0x804a620:   89 c1                           	mov ecx, eax
0x804a622:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x804a628:   89 c2                           	mov edx, eax
0x804a62a:   89 c8                           	mov eax, ecx
0x804a62c:   0f af c2                        	imul eax, edx
0x804a62f:   0f b7 95 84 fe ff ff            	movzx edx, word ptr [ebp - 0x17c]
0x804a636:   0f b6 c0                        	movzx eax, al
0x804a639:   f6 f2                           	div dl
0x804a63b:   0f b6 c4                        	movzx eax, ah
0x804a63e:   0f b6 c0                        	movzx eax, al
0x804a641:   66 39 85 b8 fe ff ff            	cmp word ptr [ebp - 0x148], ax
0x804a648:   75 09                           	jne 0x804a653 <func_1+0xd38>
0x804a64a:   80 bd ab fe ff ff 00            	cmp byte ptr [ebp - 0x155], 0
0x804a651:   74 07                           	je 0x804a65a <func_1+0xd3f>
0x804a653:   ba 01 00 00 00                  	mov edx, 1
0x804a658:   eb 05                           	jmp 0x804a65f <func_1+0xd44>
0x804a65a:   ba 00 00 00 00                  	mov edx, 0
0x804a65f:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a665:   01 d0                           	add eax, edx
0x804a667:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a66a:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x804a671:   83 c0 01                        	add eax, 1
0x804a674:   88 85 0b ff ff ff               	mov byte ptr [ebp - 0xf5], al
0x804a67a:   66 83 45 f2 01                  	add word ptr [ebp - 0xe], 1
0x804a67f:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a683:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x804a686:   66 69 d2 53 93                  	imul dx, dx, 0x9353
0x804a68b:   21 d0                           	and eax, edx
0x804a68d:   66 3d df 10                     	cmp ax, 0x10df
0x804a691:   76 04                           	jbe 0x804a697 <func_1+0xd7c>
0x804a693:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a697:   b8 00 00 00 00                  	mov eax, 0
0x804a69c:   0f b6 8d ab fe ff ff            	movzx ecx, byte ptr [ebp - 0x155]
0x804a6a3:   99                              	cdq 
0x804a6a4:   f7 f9                           	idiv ecx
0x804a6a6:   89 d0                           	mov eax, edx
0x804a6a8:   3d aa a9 00 00                  	cmp eax, 0xa9aa
0x804a6ad:   0f 9e c0                        	setle al
0x804a6b0:   0f b6 c0                        	movzx eax, al
0x804a6b3:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a6b9:   80 bd 83 fe ff ff 00            	cmp byte ptr [ebp - 0x17d], 0
0x804a6c0:   80 85 5d ff ff ff 01            	add byte ptr [ebp - 0xa3], 1
0x804a6c7:   80 bd 5d ff ff ff 1a            	cmp byte ptr [ebp - 0xa3], 0x1a
0x804a6ce:   0f 86 51 f6 ff ff               	jbe 0x8049d25 <func_1+0x40a>
0x804a6d4:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a6da:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x804a6e1:   0f b6 c0                        	movzx eax, al
0x804a6e4:   f6 f2                           	div dl
0x804a6e6:   84 c0                           	test al, al
0x804a6e8:   74 0e                           	je 0x804a6f8 <func_1+0xddd>
0x804a6ea:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x804a6ef:   74 07                           	je 0x804a6f8 <func_1+0xddd>
0x804a6f1:   b8 01 00 00 00                  	mov eax, 1
0x804a6f6:   eb 05                           	jmp 0x804a6fd <func_1+0xde2>
0x804a6f8:   b8 00 00 00 00                  	mov eax, 0
0x804a6fd:   3b 85 4c ff ff ff               	cmp eax, dword ptr [ebp - 0xb4]
0x804a703:   0f 94 c0                        	sete al
0x804a706:   0f b6 c0                        	movzx eax, al
0x804a709:   8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0x804a70f:   0f be fa                        	movsx edi, dl
0x804a712:   99                              	cdq 
0x804a713:   f7 ff                           	idiv edi
0x804a715:   0f b6 d0                        	movzx edx, al
0x804a718:   0f b6 85 5b ff ff ff            	movzx eax, byte ptr [ebp - 0xa5]
0x804a71f:   0f b6 c0                        	movzx eax, al
0x804a722:   0f af c2                        	imul eax, edx
0x804a725:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a728:   0f be b5 77 ff ff ff            	movsx esi, byte ptr [ebp - 0x89]
0x804a72f:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804a736:   39 85 98 fe ff ff               	cmp dword ptr [ebp - 0x168], eax
0x804a73c:   0f 97 c0                        	seta al
0x804a73f:   0f b6 d8                        	movzx ebx, al
0x804a742:   81 7d bc 05 55 00 00            	cmp dword ptr [ebp - 0x44], 0x5505
0x804a749:   75 07                           	jne 0x804a752 <func_1+0xe37>
0x804a74b:   ba 00 10 00 00                  	mov edx, 0x1000
0x804a750:   eb 05                           	jmp 0x804a757 <func_1+0xe3c>
0x804a752:   ba 00 00 00 00                  	mov edx, 0
0x804a757:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a75a:   0f b7 c0                        	movzx eax, ax
0x804a75d:   89 c1                           	mov ecx, eax
0x804a75f:   d3 fa                           	sar edx, cl
0x804a761:   89 d0                           	mov eax, edx
0x804a763:   0f be bd 8f fe ff ff            	movsx edi, byte ptr [ebp - 0x171]
0x804a76a:   99                              	cdq 
0x804a76b:   f7 ff                           	idiv edi
0x804a76d:   0f b7 f8                        	movzx edi, ax
0x804a770:   89 d8                           	mov eax, ebx
0x804a772:   99                              	cdq 
0x804a773:   f7 ff                           	idiv edi
0x804a775:   31 f0                           	xor eax, esi
0x804a777:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x804a77d:   89 c2                           	mov edx, eax
0x804a77f:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a785:   31 d0                           	xor eax, edx
0x804a787:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a78d:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x804a794:   0f 84 c2 00 00 00               	je 0x804a85c <func_1+0xf41>
0x804a79a:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x804a7a4:   c6 85 2f ff ff ff c3            	mov byte ptr [ebp - 0xd1], 0xc3
0x804a7ab:   c7 85 68 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0x98], 3
0x804a7b5:   c7 85 28 ff ff ff 18 ba 5f cb   	mov dword ptr [ebp - 0xd8], 0xcb5fba18
0x804a7bf:   c7 85 24 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffffb
0x804a7c9:   c7 85 20 ff ff ff 46 c5 65 64   	mov dword ptr [ebp - 0xe0], 0x6465c546
0x804a7d3:   c7 85 1c ff ff ff dd 58 0c 57   	mov dword ptr [ebp - 0xe4], 0x570c58dd
0x804a7dd:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x804a7e7:   66 c7 85 16 ff ff ff 85 31      	mov word ptr [ebp - 0xea], 0x3185
0x804a7f0:   c7 85 10 ff ff ff 74 63 9f bf   	mov dword ptr [ebp - 0xf0], 0xbf9f6374
0x804a7fa:   c7 85 64 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x9c], 0xfffffffe
0x804a804:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a80a:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x804a810:   0f 97 c0                        	seta al
0x804a813:   0f b6 c0                        	movzx eax, al
0x804a816:   23 45 b8                        	and eax, dword ptr [ebp - 0x48]
0x804a819:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a81c:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a81f:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a825:   0f be 85 8f fe ff ff            	movsx eax, byte ptr [ebp - 0x171]
0x804a82c:   39 85 90 fe ff ff               	cmp dword ptr [ebp - 0x170], eax
0x804a832:   0f 93 c0                        	setae al
0x804a835:   0f b6 c0                        	movzx eax, al
0x804a838:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a83e:   0f 95 c0                        	setne al
0x804a841:   0f b6 c0                        	movzx eax, al
0x804a844:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a847:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a84d:   c1 e8 1f                        	shr eax, 0x1f
0x804a850:   0f b6 c0                        	movzx eax, al
0x804a853:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a856:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x804a85a:   eb 5b                           	jmp 0x804a8b7 <func_1+0xf9c>
0x804a85c:   66 c7 85 fa fe ff ff 2d 32      	mov word ptr [ebp - 0x106], 0x322d
0x804a865:   c7 85 34 ff ff ff 86 9b be cf   	mov dword ptr [ebp - 0xcc], 0xcfbe9b86
0x804a86f:   66 83 6d f2 01                  	sub word ptr [ebp - 0xe], 1
0x804a874:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a879:   75 0d                           	jne 0x804a888 <func_1+0xf6d>
0x804a87b:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a87e:   0f b6 c0                        	movzx eax, al
0x804a881:   c1 e0 06                        	shl eax, 6
0x804a884:   85 c0                           	test eax, eax
0x804a886:   74 07                           	je 0x804a88f <func_1+0xf74>
0x804a888:   b8 01 00 00 00                  	mov eax, 1
0x804a88d:   eb 05                           	jmp 0x804a894 <func_1+0xf79>
0x804a88f:   b8 00 00 00 00                  	mov eax, 0
0x804a894:   98                              	cwde 
0x804a895:   f7 d8                           	neg eax
0x804a897:   89 c2                           	mov edx, eax
0x804a899:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x804a89f:   66 09 85 fa fe ff ff            	or word ptr [ebp - 0x106], ax
0x804a8a6:   0f b7 85 fa fe ff ff            	movzx eax, word ptr [ebp - 0x106]
0x804a8ad:   29 c2                           	sub edx, eax
0x804a8af:   89 d0                           	mov eax, edx
0x804a8b1:   31 85 34 ff ff ff               	xor dword ptr [ebp - 0xcc], eax
0x804a8b7:   0f be 85 b3 fe ff ff            	movsx eax, byte ptr [ebp - 0x14d]
0x804a8be:   89 85 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], eax
0x804a8c4:   0f b7 85 b8 fe ff ff            	movzx eax, word ptr [ebp - 0x148]
0x804a8cb:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x804a8d1:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a8d5:   89 85 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], eax
0x804a8db:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a8df:   89 85 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], eax
0x804a8e5:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x804a8ec:   89 85 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], eax
0x804a8f2:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x804a8f9:   89 85 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], eax
0x804a8ff:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a906:   89 85 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], eax
0x804a90c:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804a913:   89 85 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], eax
0x804a919:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804a91d:   89 95 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edx
0x804a923:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x804a92a:   0f be 8d 5c ff ff ff            	movsx ecx, byte ptr [ebp - 0xa4]
0x804a931:   89 8d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ecx
0x804a937:   0f b7 4d e2                     	movzx ecx, word ptr [ebp - 0x1e]
0x804a93b:   0f b6 9d 5d ff ff ff            	movzx ebx, byte ptr [ebp - 0xa3]
0x804a942:   89 9d 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], ebx
0x804a948:   0f be 9d 5e ff ff ff            	movsx ebx, byte ptr [ebp - 0xa2]
0x804a94f:   0f be b5 5f ff ff ff            	movsx esi, byte ptr [ebp - 0xa1]
0x804a956:   89 b5 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], esi
0x804a95c:   0f be b5 62 ff ff ff            	movsx esi, byte ptr [ebp - 0x9e]
0x804a963:   0f be 7d a3                     	movsx edi, byte ptr [ebp - 0x5d]
0x804a967:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804a96d:   0f b6 bd 0b ff ff ff            	movzx edi, byte ptr [ebp - 0xf5]
0x804a974:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a978:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a97b:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a981:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a987:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a98d:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a993:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a999:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a99f:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a9a5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a9a8:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a9ae:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a9b1:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a9b7:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804a9bd:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a9c3:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a9c9:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a9cc:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a9d2:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a9d5:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a9db:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a9e1:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a9e7:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a9ed:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804a9f3:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a9f9:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a9fc:   52                              	push edx
0x804a9fd:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804aa03:   51                              	push ecx
0x804aa04:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aa07:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804aa0d:   53                              	push ebx
0x804aa0e:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804aa11:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804aa17:   56                              	push esi
0x804aa18:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804aa1e:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804aa24:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804aa2a:   57                              	push edi
0x804aa2b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804aa2e:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804aa34:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aa37:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa3a:   50                              	push eax
0x804aa3b:   e8 e6 eb ff ff                  	call 0x8049626 <set_var>
0x804aa40:   81 c4 ac 00 00 00               	add esp, 0xac
0x804aa46:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804aa49:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804aa4c:   5b                              	pop ebx
0x804aa4d:   5e                              	pop esi
0x804aa4e:   5f                              	pop edi
0x804aa4f:   5d                              	pop ebp
0x804aa50:   c3                              	ret 
; function: main at 0x804aa51 -- 0x804b00e
0x804aa51:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804aa55:   83 e4 f0                        	and esp, 0xfffffff0
0x804aa58:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aa5b:   55                              	push ebp
0x804aa5c:   89 e5                           	mov ebp, esp
0x804aa5e:   53                              	push ebx
0x804aa5f:   51                              	push ecx
0x804aa60:   83 ec 10                        	sub esp, 0x10
0x804aa63:   e8 28 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa68:   81 c3 98 35 00 00               	add ebx, 0x3598
0x804aa6e:   89 c8                           	mov eax, ecx
0x804aa70:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aa77:   83 38 02                        	cmp dword ptr [eax], 2
0x804aa7a:   75 26                           	jne 0x804aaa2 <main+0x51>
0x804aa7c:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aa7f:   83 c0 04                        	add eax, 4
0x804aa82:   8b 00                           	mov eax, dword ptr [eax]
0x804aa84:   83 ec 08                        	sub esp, 8
0x804aa87:   8d 93 fc d0 ff ff               	lea edx, [ebx - 0x2f04]
0x804aa8d:   52                              	push edx
0x804aa8e:   50                              	push eax
0x804aa8f:   e8 6c d8 ff ff                  	call 0x8048300 <strcmp>
0x804aa94:   83 c4 10                        	add esp, 0x10
0x804aa97:   85 c0                           	test eax, eax
0x804aa99:   75 07                           	jne 0x804aaa2 <main+0x51>
0x804aa9b:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aaa2:   e8 af d9 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aaa7:   e8 bf e9 ff ff                  	call 0x804946b <crc32_gentab>
0x804aaac:   e8 6a ee ff ff                  	call 0x804991b <func_1>
0x804aab1:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804aab8:   0f b7 c0                        	movzx eax, ax
0x804aabb:   83 ec 04                        	sub esp, 4
0x804aabe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac1:   8d 93 fe d0 ff ff               	lea edx, [ebx - 0x2f02]
0x804aac7:   52                              	push edx
0x804aac8:   50                              	push eax
0x804aac9:   e8 a9 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aace:   83 c4 10                        	add esp, 0x10
0x804aad1:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aad7:   83 ec 04                        	sub esp, 4
0x804aada:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aadd:   8d 93 02 d1 ff ff               	lea edx, [ebx - 0x2efe]
0x804aae3:   52                              	push edx
0x804aae4:   50                              	push eax
0x804aae5:   e8 8d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaea:   83 c4 10                        	add esp, 0x10
0x804aaed:   8b 83 e4 04 00 00               	mov eax, dword ptr [ebx + 0x4e4]
0x804aaf3:   89 c2                           	mov edx, eax
0x804aaf5:   83 ec 04                        	sub esp, 4
0x804aaf8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aafb:   8d 83 06 d1 ff ff               	lea eax, [ebx - 0x2efa]
0x804ab01:   50                              	push eax
0x804ab02:   52                              	push edx
0x804ab03:   e8 6f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab08:   83 c4 10                        	add esp, 0x10
0x804ab0b:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ab11:   89 c2                           	mov edx, eax
0x804ab13:   83 ec 04                        	sub esp, 4
0x804ab16:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab19:   8d 83 0b d1 ff ff               	lea eax, [ebx - 0x2ef5]
0x804ab1f:   50                              	push eax
0x804ab20:   52                              	push edx
0x804ab21:   e8 51 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab26:   83 c4 10                        	add esp, 0x10
0x804ab29:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ab2f:   83 ec 04                        	sub esp, 4
0x804ab32:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab35:   8d 93 10 d1 ff ff               	lea edx, [ebx - 0x2ef0]
0x804ab3b:   52                              	push edx
0x804ab3c:   50                              	push eax
0x804ab3d:   e8 35 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab42:   83 c4 10                        	add esp, 0x10
0x804ab45:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804ab4c:   0f b6 c0                        	movzx eax, al
0x804ab4f:   83 ec 04                        	sub esp, 4
0x804ab52:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab55:   8d 93 15 d1 ff ff               	lea edx, [ebx - 0x2eeb]
0x804ab5b:   52                              	push edx
0x804ab5c:   50                              	push eax
0x804ab5d:   e8 15 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab62:   83 c4 10                        	add esp, 0x10
0x804ab65:   0f b6 83 35 00 00 00            	movzx eax, byte ptr [ebx + 0x35]
0x804ab6c:   0f be c0                        	movsx eax, al
0x804ab6f:   83 ec 04                        	sub esp, 4
0x804ab72:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab75:   8d 93 1a d1 ff ff               	lea edx, [ebx - 0x2ee6]
0x804ab7b:   52                              	push edx
0x804ab7c:   50                              	push eax
0x804ab7d:   e8 f5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab82:   83 c4 10                        	add esp, 0x10
0x804ab85:   8b 83 e8 04 00 00               	mov eax, dword ptr [ebx + 0x4e8]
0x804ab8b:   89 c2                           	mov edx, eax
0x804ab8d:   83 ec 04                        	sub esp, 4
0x804ab90:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab93:   8d 83 1f d1 ff ff               	lea eax, [ebx - 0x2ee1]
0x804ab99:   50                              	push eax
0x804ab9a:   52                              	push edx
0x804ab9b:   e8 d7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba0:   83 c4 10                        	add esp, 0x10
0x804aba3:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804aba9:   83 ec 04                        	sub esp, 4
0x804abac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abaf:   8d 93 24 d1 ff ff               	lea edx, [ebx - 0x2edc]
0x804abb5:   52                              	push edx
0x804abb6:   50                              	push eax
0x804abb7:   e8 bb e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abbc:   83 c4 10                        	add esp, 0x10
0x804abbf:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804abc6:   0f be c0                        	movsx eax, al
0x804abc9:   83 ec 04                        	sub esp, 4
0x804abcc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abcf:   8d 93 29 d1 ff ff               	lea edx, [ebx - 0x2ed7]
0x804abd5:   52                              	push edx
0x804abd6:   50                              	push eax
0x804abd7:   e8 9b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abdc:   83 c4 10                        	add esp, 0x10
0x804abdf:   0f b6 83 3d 00 00 00            	movzx eax, byte ptr [ebx + 0x3d]
0x804abe6:   0f be c0                        	movsx eax, al
0x804abe9:   83 ec 04                        	sub esp, 4
0x804abec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abef:   8d 93 2f d1 ff ff               	lea edx, [ebx - 0x2ed1]
0x804abf5:   52                              	push edx
0x804abf6:   50                              	push eax
0x804abf7:   e8 7b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abfc:   83 c4 10                        	add esp, 0x10
0x804abff:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ac05:   89 c2                           	mov edx, eax
0x804ac07:   83 ec 04                        	sub esp, 4
0x804ac0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac0d:   8d 83 35 d1 ff ff               	lea eax, [ebx - 0x2ecb]
0x804ac13:   50                              	push eax
0x804ac14:   52                              	push edx
0x804ac15:   e8 5d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac1a:   83 c4 10                        	add esp, 0x10
0x804ac1d:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804ac24:   0f be c0                        	movsx eax, al
0x804ac27:   83 ec 04                        	sub esp, 4
0x804ac2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac2d:   8d 93 3b d1 ff ff               	lea edx, [ebx - 0x2ec5]
0x804ac33:   52                              	push edx
0x804ac34:   50                              	push eax
0x804ac35:   e8 3d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac3a:   83 c4 10                        	add esp, 0x10
0x804ac3d:   0f b6 83 45 00 00 00            	movzx eax, byte ptr [ebx + 0x45]
0x804ac44:   0f b6 c0                        	movzx eax, al
0x804ac47:   83 ec 04                        	sub esp, 4
0x804ac4a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac4d:   8d 93 41 d1 ff ff               	lea edx, [ebx - 0x2ebf]
0x804ac53:   52                              	push edx
0x804ac54:   50                              	push eax
0x804ac55:   e8 1d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac5a:   83 c4 10                        	add esp, 0x10
0x804ac5d:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ac63:   83 ec 04                        	sub esp, 4
0x804ac66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac69:   8d 93 47 d1 ff ff               	lea edx, [ebx - 0x2eb9]
0x804ac6f:   52                              	push edx
0x804ac70:   50                              	push eax
0x804ac71:   e8 01 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac76:   83 c4 10                        	add esp, 0x10
0x804ac79:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804ac80:   0f b7 c0                        	movzx eax, ax
0x804ac83:   83 ec 04                        	sub esp, 4
0x804ac86:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac89:   8d 93 4d d1 ff ff               	lea edx, [ebx - 0x2eb3]
0x804ac8f:   52                              	push edx
0x804ac90:   50                              	push eax
0x804ac91:   e8 e1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac96:   83 c4 10                        	add esp, 0x10
0x804ac99:   0f b6 83 ec 04 00 00            	movzx eax, byte ptr [ebx + 0x4ec]
0x804aca0:   0f be c0                        	movsx eax, al
0x804aca3:   83 ec 04                        	sub esp, 4
0x804aca6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca9:   8d 93 53 d1 ff ff               	lea edx, [ebx - 0x2ead]
0x804acaf:   52                              	push edx
0x804acb0:   50                              	push eax
0x804acb1:   e8 c1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acb6:   83 c4 10                        	add esp, 0x10
0x804acb9:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804acc0:   0f be c0                        	movsx eax, al
0x804acc3:   83 ec 04                        	sub esp, 4
0x804acc6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acc9:   8d 93 59 d1 ff ff               	lea edx, [ebx - 0x2ea7]
0x804accf:   52                              	push edx
0x804acd0:   50                              	push eax
0x804acd1:   e8 a1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd6:   83 c4 10                        	add esp, 0x10
0x804acd9:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804acdf:   89 c2                           	mov edx, eax
0x804ace1:   83 ec 04                        	sub esp, 4
0x804ace4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace7:   8d 83 5f d1 ff ff               	lea eax, [ebx - 0x2ea1]
0x804aced:   50                              	push eax
0x804acee:   52                              	push edx
0x804acef:   e8 83 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acf4:   83 c4 10                        	add esp, 0x10
0x804acf7:   0f b7 83 ee 04 00 00            	movzx eax, word ptr [ebx + 0x4ee]
0x804acfe:   98                              	cwde 
0x804acff:   83 ec 04                        	sub esp, 4
0x804ad02:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad05:   8d 93 65 d1 ff ff               	lea edx, [ebx - 0x2e9b]
0x804ad0b:   52                              	push edx
0x804ad0c:   50                              	push eax
0x804ad0d:   e8 65 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad12:   83 c4 10                        	add esp, 0x10
0x804ad15:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804ad1c:   0f be c0                        	movsx eax, al
0x804ad1f:   83 ec 04                        	sub esp, 4
0x804ad22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad25:   8d 93 6b d1 ff ff               	lea edx, [ebx - 0x2e95]
0x804ad2b:   52                              	push edx
0x804ad2c:   50                              	push eax
0x804ad2d:   e8 45 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad32:   83 c4 10                        	add esp, 0x10
0x804ad35:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ad3b:   89 c2                           	mov edx, eax
0x804ad3d:   83 ec 04                        	sub esp, 4
0x804ad40:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad43:   8d 83 71 d1 ff ff               	lea eax, [ebx - 0x2e8f]
0x804ad49:   50                              	push eax
0x804ad4a:   52                              	push edx
0x804ad4b:   e8 27 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad50:   83 c4 10                        	add esp, 0x10
0x804ad53:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ad59:   89 c2                           	mov edx, eax
0x804ad5b:   83 ec 04                        	sub esp, 4
0x804ad5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad61:   8d 83 77 d1 ff ff               	lea eax, [ebx - 0x2e89]
0x804ad67:   50                              	push eax
0x804ad68:   52                              	push edx
0x804ad69:   e8 09 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad6e:   83 c4 10                        	add esp, 0x10
0x804ad71:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ad77:   89 c2                           	mov edx, eax
0x804ad79:   83 ec 04                        	sub esp, 4
0x804ad7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad7f:   8d 83 7d d1 ff ff               	lea eax, [ebx - 0x2e83]
0x804ad85:   50                              	push eax
0x804ad86:   52                              	push edx
0x804ad87:   e8 eb e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad8c:   83 c4 10                        	add esp, 0x10
0x804ad8f:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ad95:   89 c2                           	mov edx, eax
0x804ad97:   83 ec 04                        	sub esp, 4
0x804ad9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad9d:   8d 83 83 d1 ff ff               	lea eax, [ebx - 0x2e7d]
0x804ada3:   50                              	push eax
0x804ada4:   52                              	push edx
0x804ada5:   e8 cd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adaa:   83 c4 10                        	add esp, 0x10
0x804adad:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804adb3:   83 ec 04                        	sub esp, 4
0x804adb6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adb9:   8d 93 89 d1 ff ff               	lea edx, [ebx - 0x2e77]
0x804adbf:   52                              	push edx
0x804adc0:   50                              	push eax
0x804adc1:   e8 b1 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adc6:   83 c4 10                        	add esp, 0x10
0x804adc9:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804add0:   0f b7 c0                        	movzx eax, ax
0x804add3:   83 ec 04                        	sub esp, 4
0x804add6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804add9:   8d 93 8f d1 ff ff               	lea edx, [ebx - 0x2e71]
0x804addf:   52                              	push edx
0x804ade0:   50                              	push eax
0x804ade1:   e8 91 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ade6:   83 c4 10                        	add esp, 0x10
0x804ade9:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804adef:   89 c2                           	mov edx, eax
0x804adf1:   83 ec 04                        	sub esp, 4
0x804adf4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adf7:   8d 83 95 d1 ff ff               	lea eax, [ebx - 0x2e6b]
0x804adfd:   50                              	push eax
0x804adfe:   52                              	push edx
0x804adff:   e8 73 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae04:   83 c4 10                        	add esp, 0x10
0x804ae07:   0f b6 83 f0 04 00 00            	movzx eax, byte ptr [ebx + 0x4f0]
0x804ae0e:   0f b6 c0                        	movzx eax, al
0x804ae11:   83 ec 04                        	sub esp, 4
0x804ae14:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae17:   8d 93 9b d1 ff ff               	lea edx, [ebx - 0x2e65]
0x804ae1d:   52                              	push edx
0x804ae1e:   50                              	push eax
0x804ae1f:   e8 53 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae24:   83 c4 10                        	add esp, 0x10
0x804ae27:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804ae2e:   98                              	cwde 
0x804ae2f:   83 ec 04                        	sub esp, 4
0x804ae32:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae35:   8d 93 a1 d1 ff ff               	lea edx, [ebx - 0x2e5f]
0x804ae3b:   52                              	push edx
0x804ae3c:   50                              	push eax
0x804ae3d:   e8 35 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae42:   83 c4 10                        	add esp, 0x10
0x804ae45:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804ae4b:   83 ec 04                        	sub esp, 4
0x804ae4e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae51:   8d 93 a7 d1 ff ff               	lea edx, [ebx - 0x2e59]
0x804ae57:   52                              	push edx
0x804ae58:   50                              	push eax
0x804ae59:   e8 19 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae5e:   83 c4 10                        	add esp, 0x10
0x804ae61:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804ae67:   89 c2                           	mov edx, eax
0x804ae69:   83 ec 04                        	sub esp, 4
0x804ae6c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae6f:   8d 83 ad d1 ff ff               	lea eax, [ebx - 0x2e53]
0x804ae75:   50                              	push eax
0x804ae76:   52                              	push edx
0x804ae77:   e8 fb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae7c:   83 c4 10                        	add esp, 0x10
0x804ae7f:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804ae85:   89 c2                           	mov edx, eax
0x804ae87:   83 ec 04                        	sub esp, 4
0x804ae8a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae8d:   8d 83 b3 d1 ff ff               	lea eax, [ebx - 0x2e4d]
0x804ae93:   50                              	push eax
0x804ae94:   52                              	push edx
0x804ae95:   e8 dd e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae9a:   83 c4 10                        	add esp, 0x10
0x804ae9d:   8b 83 f4 04 00 00               	mov eax, dword ptr [ebx + 0x4f4]
0x804aea3:   83 ec 04                        	sub esp, 4
0x804aea6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aea9:   8d 93 b9 d1 ff ff               	lea edx, [ebx - 0x2e47]
0x804aeaf:   52                              	push edx
0x804aeb0:   50                              	push eax
0x804aeb1:   e8 c1 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeb6:   83 c4 10                        	add esp, 0x10
0x804aeb9:   b8 c4 ad bb ee                  	mov eax, 0xeebbadc4
0x804aebe:   89 c2                           	mov edx, eax
0x804aec0:   83 ec 04                        	sub esp, 4
0x804aec3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aec6:   8d 83 bf d1 ff ff               	lea eax, [ebx - 0x2e41]
0x804aecc:   50                              	push eax
0x804aecd:   52                              	push edx
0x804aece:   e8 a4 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aed3:   83 c4 10                        	add esp, 0x10
0x804aed6:   8b 83 84 00 00 00               	mov eax, dword ptr [ebx + 0x84]
0x804aedc:   89 c2                           	mov edx, eax
0x804aede:   83 ec 04                        	sub esp, 4
0x804aee1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aee4:   8d 83 c5 d1 ff ff               	lea eax, [ebx - 0x2e3b]
0x804aeea:   50                              	push eax
0x804aeeb:   52                              	push edx
0x804aeec:   e8 86 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef1:   83 c4 10                        	add esp, 0x10
0x804aef4:   0f b7 83 88 00 00 00            	movzx eax, word ptr [ebx + 0x88]
0x804aefb:   98                              	cwde 
0x804aefc:   83 ec 04                        	sub esp, 4
0x804aeff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af02:   8d 93 cb d1 ff ff               	lea edx, [ebx - 0x2e35]
0x804af08:   52                              	push edx
0x804af09:   50                              	push eax
0x804af0a:   e8 68 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af0f:   83 c4 10                        	add esp, 0x10
0x804af12:   0f b7 83 8a 00 00 00            	movzx eax, word ptr [ebx + 0x8a]
0x804af19:   0f b7 c0                        	movzx eax, ax
0x804af1c:   83 ec 04                        	sub esp, 4
0x804af1f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af22:   8d 93 d1 d1 ff ff               	lea edx, [ebx - 0x2e2f]
0x804af28:   52                              	push edx
0x804af29:   50                              	push eax
0x804af2a:   e8 48 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af2f:   83 c4 10                        	add esp, 0x10
0x804af32:   0f b7 83 8c 00 00 00            	movzx eax, word ptr [ebx + 0x8c]
0x804af39:   0f b7 c0                        	movzx eax, ax
0x804af3c:   83 ec 04                        	sub esp, 4
0x804af3f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af42:   8d 93 d7 d1 ff ff               	lea edx, [ebx - 0x2e29]
0x804af48:   52                              	push edx
0x804af49:   50                              	push eax
0x804af4a:   e8 28 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af4f:   83 c4 10                        	add esp, 0x10
0x804af52:   8b 83 90 00 00 00               	mov eax, dword ptr [ebx + 0x90]
0x804af58:   89 c2                           	mov edx, eax
0x804af5a:   83 ec 04                        	sub esp, 4
0x804af5d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af60:   8d 83 dd d1 ff ff               	lea eax, [ebx - 0x2e23]
0x804af66:   50                              	push eax
0x804af67:   52                              	push edx
0x804af68:   e8 0a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af6d:   83 c4 10                        	add esp, 0x10
0x804af70:   8b 83 94 00 00 00               	mov eax, dword ptr [ebx + 0x94]
0x804af76:   89 c2                           	mov edx, eax
0x804af78:   83 ec 04                        	sub esp, 4
0x804af7b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af7e:   8d 83 e3 d1 ff ff               	lea eax, [ebx - 0x2e1d]
0x804af84:   50                              	push eax
0x804af85:   52                              	push edx
0x804af86:   e8 ec e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af8b:   83 c4 10                        	add esp, 0x10
0x804af8e:   0f b6 83 98 00 00 00            	movzx eax, byte ptr [ebx + 0x98]
0x804af95:   0f be c0                        	movsx eax, al
0x804af98:   83 ec 04                        	sub esp, 4
0x804af9b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af9e:   8d 93 e9 d1 ff ff               	lea edx, [ebx - 0x2e17]
0x804afa4:   52                              	push edx
0x804afa5:   50                              	push eax
0x804afa6:   e8 cc e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afab:   83 c4 10                        	add esp, 0x10
0x804afae:   8b 83 9c 00 00 00               	mov eax, dword ptr [ebx + 0x9c]
0x804afb4:   89 c2                           	mov edx, eax
0x804afb6:   83 ec 04                        	sub esp, 4
0x804afb9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afbc:   8d 83 ef d1 ff ff               	lea eax, [ebx - 0x2e11]
0x804afc2:   50                              	push eax
0x804afc3:   52                              	push edx
0x804afc4:   e8 ae e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afc9:   83 c4 10                        	add esp, 0x10
0x804afcc:   8b 83 a0 00 00 00               	mov eax, dword ptr [ebx + 0xa0]
0x804afd2:   83 ec 04                        	sub esp, 4
0x804afd5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd8:   8d 93 f5 d1 ff ff               	lea edx, [ebx - 0x2e0b]
0x804afde:   52                              	push edx
0x804afdf:   50                              	push eax
0x804afe0:   e8 92 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afe5:   83 c4 10                        	add esp, 0x10
0x804afe8:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804afee:   f7 d0                           	not eax
0x804aff0:   83 ec 08                        	sub esp, 8
0x804aff3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff6:   50                              	push eax
0x804aff7:   e8 6a d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804affc:   83 c4 10                        	add esp, 0x10
0x804afff:   b8 00 00 00 00                  	mov eax, 0
0x804b004:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b007:   59                              	pop ecx
0x804b008:   5b                              	pop ebx
0x804b009:   5d                              	pop ebp
0x804b00a:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b00d:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b00e -- 0x804b012
0x804b00e:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b011:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b012 -- 0x804b016
0x804b012:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b015:   c3                              	ret 
; data inside code section at 0x804b016 -- 0x804b020
0x804b016:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804b020 -- 0x804b07d
0x804b020:   55                              	push ebp
0x804b021:   57                              	push edi
0x804b022:   56                              	push esi
0x804b023:   53                              	push ebx
0x804b024:   e8 67 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b029:   81 c3 d7 2f 00 00               	add ebx, 0x2fd7
0x804b02f:   83 ec 0c                        	sub esp, 0xc
0x804b032:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b036:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b03c:   e8 8b d2 ff ff                  	call 0x80482cc <_init>
0x804b041:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b047:   29 c6                           	sub esi, eax
0x804b049:   c1 fe 02                        	sar esi, 2
0x804b04c:   85 f6                           	test esi, esi
0x804b04e:   74 25                           	je 0x804b075 <__libc_csu_init+0x55>
0x804b050:   31 ff                           	xor edi, edi
0x804b052:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b058:   83 ec 04                        	sub esp, 4
0x804b05b:   55                              	push ebp
0x804b05c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b060:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b064:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b06b:   83 c7 01                        	add edi, 1
0x804b06e:   83 c4 10                        	add esp, 0x10
0x804b071:   39 fe                           	cmp esi, edi
0x804b073:   75 e3                           	jne 0x804b058 <__libc_csu_init+0x38>
0x804b075:   83 c4 0c                        	add esp, 0xc
0x804b078:   5b                              	pop ebx
0x804b079:   5e                              	pop esi
0x804b07a:   5f                              	pop edi
0x804b07b:   5d                              	pop ebp
0x804b07c:   c3                              	ret 
; data inside code section at 0x804b07d -- 0x804b080
0x804b07d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b080 -- 0x804b082
0x804b080:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b084 -- 0x804b098
0x804b084:   53                              	push ebx
0x804b085:   83 ec 08                        	sub esp, 8
0x804b088:   e8 03 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b08d:   81 c3 73 2f 00 00               	add ebx, 0x2f73
0x804b093:   83 c4 08                        	add esp, 8
0x804b096:   5b                              	pop ebx
0x804b097:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 9c b0 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b098:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b0a8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b0b8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b0c8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0d8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0e8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0f8:   c4 ad bb ee 31 00 67 5f  32 00 67 5f 38 00 67 5f   |....1.g_2.g_8.g_|
0x804b108:   32 30 00 67 5f 33 31 00  67 5f 33 32 00 67 5f 34   |20.g_31.g_32.g_4|
0x804b118:   30 00 67 5f 34 38 00 67  5f 36 31 00 67 5f 37 30   |0.g_48.g_61.g_70|
0x804b128:   00 67 5f 31 31 35 00 67  5f 31 32 38 00 67 5f 31   |.g_115.g_128.g_1|
0x804b138:   33 34 00 67 5f 31 34 38  00 67 5f 31 36 34 00 67   |34.g_148.g_164.g|
0x804b148:   5f 31 37 33 00 67 5f 31  37 35 00 67 5f 32 30 34   |_173.g_175.g_204|
0x804b158:   00 67 5f 32 32 30 00 67  5f 32 34 32 00 67 5f 32   |.g_220.g_242.g_2|
0x804b168:   35 37 00 67 5f 32 37 31  00 67 5f 32 37 36 00 67   |57.g_271.g_276.g|
0x804b178:   5f 32 37 37 00 67 5f 32  37 39 00 67 5f 32 38 30   |_277.g_279.g_280|
0x804b188:   00 67 5f 32 38 31 00 67  5f 33 37 34 00 67 5f 33   |.g_281.g_374.g_3|
0x804b198:   37 39 00 67 5f 33 38 30  00 67 5f 34 32 30 00 67   |79.g_380.g_420.g|
0x804b1a8:   5f 34 32 32 00 67 5f 35  30 39 00 67 5f 35 31 31   |_422.g_509.g_511|
0x804b1b8:   00 67 5f 35 31 32 00 67  5f 35 32 39 00 67 5f 35   |.g_512.g_529.g_5|
0x804b1c8:   34 39 00 67 5f 35 35 30  00 67 5f 35 35 31 00 67   |49.g_550.g_551.g|
0x804b1d8:   5f 35 36 38 00 67 5f 36  31 32 00 67 5f 36 33 35   |_568.g_612.g_635|
0x804b1e8:   00 67 5f 36 34 30 00 67  5f 36 34 33 00 67 5f 36   |.g_640.g_643.g_6|
0x804b1f8:   34 34 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |44.....?...~....|
0x804b208:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b218:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b228:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b238:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b248:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b258:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b268:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b268:   01 1b 03 3b b8 02 00 00  56 00 00 00 88 d0 ff ff   |...;....V.......|
0x804b278:   e8 02 00 00 c8 d0 ff ff  0c 03 00 00 18 d1 ff ff   |................|
0x804b288:   d4 02 00 00 ee d1 ff ff  20 03 00 00 fe d1 ff ff   |........ .......|
0x804b298:   40 03 00 00 2c d2 ff ff  64 03 00 00 4a d2 ff ff   |@...,...d...J...|
0x804b2a8:   84 03 00 00 72 d2 ff ff  a4 03 00 00 9c d2 ff ff   |....r...........|
0x804b2b8:   c4 03 00 00 c5 d2 ff ff  e4 03 00 00 08 d3 ff ff   |................|
0x804b2c8:   04 04 00 00 49 d3 ff ff  24 04 00 00 a1 d3 ff ff   |....I...$.......|
0x804b2d8:   48 04 00 00 f3 d3 ff ff  6c 04 00 00 30 d4 ff ff   |H.......l...0...|
0x804b2e8:   8c 04 00 00 67 d4 ff ff  ac 04 00 00 86 d4 ff ff   |....g...........|
0x804b2f8:   cc 04 00 00 b0 d4 ff ff  ec 04 00 00 dc d4 ff ff   |................|
0x804b308:   0c 05 00 00 07 d5 ff ff  2c 05 00 00 50 d5 ff ff   |........,...P...|
0x804b318:   4c 05 00 00 97 d5 ff ff  6c 05 00 00 f1 d5 ff ff   |L.......l.......|
0x804b328:   90 05 00 00 45 d6 ff ff  b4 05 00 00 84 d6 ff ff   |....E...........|
0x804b338:   d4 05 00 00 bd d6 ff ff  f4 05 00 00 df d6 ff ff   |................|
0x804b348:   14 06 00 00 2d d7 ff ff  34 06 00 00 69 d7 ff ff   |....-...4...i...|
0x804b358:   54 06 00 00 f2 d7 ff ff  74 06 00 00 24 d8 ff ff   |T.......t...$...|
0x804b368:   94 06 00 00 54 d8 ff ff  b4 06 00 00 99 d8 ff ff   |....T...........|
0x804b378:   d4 06 00 00 d8 d8 ff ff  f4 06 00 00 0a d9 ff ff   |................|
0x804b388:   14 07 00 00 36 d9 ff ff  34 07 00 00 54 d9 ff ff   |....6...4...T...|
0x804b398:   54 07 00 00 7c d9 ff ff  74 07 00 00 a1 d9 ff ff   |T...|...t.......|
0x804b3a8:   94 07 00 00 c6 d9 ff ff  b4 07 00 00 fd d9 ff ff   |................|
0x804b3b8:   d4 07 00 00 31 da ff ff  f4 07 00 00 83 da ff ff   |....1...........|
0x804b3c8:   18 08 00 00 cf da ff ff  3c 08 00 00 06 db ff ff   |........<.......|
0x804b3d8:   5c 08 00 00 37 db ff ff  7c 08 00 00 56 db ff ff   |\...7...|...V...|
0x804b3e8:   9c 08 00 00 80 db ff ff  bc 08 00 00 a8 db ff ff   |................|
0x804b3f8:   dc 08 00 00 d1 db ff ff  fc 08 00 00 0d dc ff ff   |................|
0x804b408:   1c 09 00 00 47 dc ff ff  3c 09 00 00 9a dc ff ff   |....G...<.......|
0x804b418:   60 09 00 00 e7 dc ff ff  84 09 00 00 1f dd ff ff   |`...............|
0x804b428:   a4 09 00 00 51 dd ff ff  c4 09 00 00 65 dd ff ff   |....Q.......e...|
0x804b438:   e4 09 00 00 7c dd ff ff  04 0a 00 00 91 dd ff ff   |....|...........|
0x804b448:   24 0a 00 00 a7 dd ff ff  44 0a 00 00 ce dd ff ff   |$.......D.......|
0x804b458:   64 0a 00 00 f3 dd ff ff  84 0a 00 00 32 de ff ff   |d...........2...|
0x804b468:   a4 0a 00 00 6b de ff ff  c4 0a 00 00 97 de ff ff   |....k...........|
0x804b478:   e4 0a 00 00 bd de ff ff  04 0b 00 00 ff de ff ff   |................|
0x804b488:   24 0b 00 00 41 df ff ff  44 0b 00 00 83 df ff ff   |$...A...D.......|
0x804b498:   64 0b 00 00 f8 df ff ff  84 0b 00 00 55 e0 ff ff   |d...........U...|
0x804b4a8:   a4 0b 00 00 b2 e0 ff ff  c4 0b 00 00 0f e1 ff ff   |................|
0x804b4b8:   e4 0b 00 00 9f e1 ff ff  04 0c 00 00 03 e2 ff ff   |................|
0x804b4c8:   24 0c 00 00 73 e2 ff ff  44 0c 00 00 ba e2 ff ff   |$...s...D.......|
0x804b4d8:   68 0c 00 00 0f e3 ff ff  88 0c 00 00 56 e3 ff ff   |h...........V...|
0x804b4e8:   ac 0c 00 00 be e3 ff ff  d0 0c 00 00 b3 e6 ff ff   |................|
0x804b4f8:   00 0d 00 00 e9 f7 ff ff  30 0d 00 00 a6 fd ff ff   |........0.......|
0x804b508:   68 0d 00 00 aa fd ff ff  7c 0d 00 00 b8 fd ff ff   |h.......|.......|
0x804b518:   90 0d 00 00 18 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b524:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b534:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b544:   3c ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |<........... ...|
0x804b554:   30 00 00 00 98 cd ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b564:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b574:   10 00 00 00 54 00 00 00  b4 cd ff ff 08 00 00 00   |....T...........|
0x804b584:   00 00 00 00 1c 00 00 00  68 00 00 00 c6 ce ff ff   |........h.......|
0x804b594:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5a4:   04 04 00 00 20 00 00 00  88 00 00 00 b6 ce ff ff   |.... ...........|
0x804b5b4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b5c4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b5d4:   c0 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b5f4:   be ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b604:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b614:   c6 ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b624:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b634:   d0 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b644:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b654:   d9 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b664:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b674:   fc ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b684:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b694:   1d cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6a4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b6b4:   90 01 00 00 51 cf ff ff  52 00 00 00 00 41 0e 08   |....Q...R....A..|
0x804b6c4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b6d4:   1c 00 00 00 b4 01 00 00  7f cf ff ff 3d 00 00 00   |............=...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b6f4:   1c 00 00 00 d4 01 00 00  9c cf ff ff 37 00 00 00   |............7...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b714:   1c 00 00 00 f4 01 00 00  b3 cf ff ff 1f 00 00 00   |................|
0x804b724:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b734:   1c 00 00 00 14 02 00 00  b2 cf ff ff 2a 00 00 00   |............*...|
0x804b744:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b754:   1c 00 00 00 34 02 00 00  bc cf ff ff 2c 00 00 00   |....4.......,...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b774:   1c 00 00 00 54 02 00 00  c8 cf ff ff 2b 00 00 00   |....T.......+...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b794:   1c 00 00 00 74 02 00 00  d3 cf ff ff 49 00 00 00   |....t.......I...|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b7b4:   1c 00 00 00 94 02 00 00  fc cf ff ff 47 00 00 00   |............G...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b7d4:   20 00 00 00 b4 02 00 00  23 d0 ff ff 5a 00 00 00   | .......#...Z...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b7f4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 59 d0 ff ff   |.... .......Y...|
0x804b804:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b814:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b824:   89 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b834:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b844:   a8 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b854:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b864:   c1 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b874:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b884:   c3 d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b894:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8a4:   f1 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b8b4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b8c4:   0d d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8d4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b8e4:   76 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |v...2....A....B.|
0x804b8f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b904:   88 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b914:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b924:   98 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b934:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b944:   bd d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b954:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b964:   dc d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b974:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b984:   ee d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b994:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9a4:   fa d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b9b4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b9c4:   f8 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b9d4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b9e4:   00 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b9f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba04:   05 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba14:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba24:   0a d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba34:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba44:   21 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |!...4....A....B.|
0x804ba54:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ba64:   35 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |5...R....A....B.|
0x804ba74:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba84:   60 05 00 00 63 d2 ff ff  4c 00 00 00 00 41 0e 08   |`...c...L....A..|
0x804ba94:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804baa4:   1c 00 00 00 84 05 00 00  8b d2 ff ff 37 00 00 00   |............7...|
0x804bab4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bac4:   1c 00 00 00 a4 05 00 00  a2 d2 ff ff 31 00 00 00   |............1...|
0x804bad4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bae4:   1c 00 00 00 c4 05 00 00  b3 d2 ff ff 1f 00 00 00   |................|
0x804baf4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb04:   1c 00 00 00 e4 05 00 00  b2 d2 ff ff 2a 00 00 00   |............*...|
0x804bb14:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb24:   1c 00 00 00 04 06 00 00  bc d2 ff ff 28 00 00 00   |............(...|
0x804bb34:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb44:   1c 00 00 00 24 06 00 00  c4 d2 ff ff 29 00 00 00   |....$.......)...|
0x804bb54:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bb64:   1c 00 00 00 44 06 00 00  cd d2 ff ff 3c 00 00 00   |....D.......<...|
0x804bb74:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb84:   1c 00 00 00 64 06 00 00  e9 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bb94:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bba4:   20 00 00 00 84 06 00 00  03 d3 ff ff 53 00 00 00   | ...........S...|
0x804bbb4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bbc4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 32 d3 ff ff   |.... .......2...|
0x804bbd4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bbe4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bbf4:   5b d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |[...8....A....B.|
0x804bc04:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc14:   73 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |s...2....A....B.|
0x804bc24:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc34:   85 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc44:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bc54:   79 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |y........A....B.|
0x804bc64:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc74:   70 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804bc84:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc94:   65 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804bca4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bcb4:   5b d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |[...'....A....B.|
0x804bcc4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bcd4:   62 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |b...%....A....B.|
0x804bce4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bcf4:   67 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |g...?....A....B.|
0x804bd04:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd14:   86 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bd24:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd34:   9f d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bd44:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bd54:   ab d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bd64:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd74:   b1 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd84:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd94:   d3 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bda4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bdb4:   f5 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bdc4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bdd4:   17 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bde4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bdf4:   6c d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |l...]....A....B.|
0x804be04:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be14:   a9 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be24:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be34:   e6 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be44:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804be54:   23 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |#........A....B.|
0x804be64:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be74:   93 d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be84:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be94:   d7 d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bea4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804beb4:   27 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |'...G....A....B.|
0x804bec4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bed4:   b0 09 00 00 4a d6 ff ff  55 00 00 00 00 41 0e 08   |....J...U....A..|
0x804bee4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bef4:   d0 09 00 00 7f d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bf04:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf14:   20 00 00 00 f4 09 00 00  a2 d6 ff ff 68 00 00 00   | ...........h...|
0x804bf24:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf34:   0c 04 04 00 2c 00 00 00  18 0a 00 00 e6 d6 ff ff   |....,...........|
0x804bf44:   f5 02 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bf54:   86 04 83 05 03 e5 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf64:   04 00 00 00 2c 00 00 00  48 0a 00 00 ab d9 ff ff   |....,...H.......|
0x804bf74:   36 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |6....A....B..I..|
0x804bf84:   86 04 83 05 03 26 11 c3  41 c6 41 c7 41 c5 0c 04   |.....&..A.A.A...|
0x804bf94:   04 00 00 00 34 00 00 00  78 0a 00 00 b1 ea ff ff   |....4...x.......|
0x804bfa4:   bd 05 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bfb4:   0f 03 75 78 06 10 03 02  75 7c 03 a8 05 c1 0c 01   |..ux....u|......|
0x804bfc4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bfd4:   b0 0a 00 00 36 f0 ff ff  04 00 00 00 00 00 00 00   |....6...........|
0x804bfe4:   10 00 00 00 c4 0a 00 00  26 f0 ff ff 04 00 00 00   |........&.......|
0x804bff4:   00 00 00 00 48 00 00 00  d8 0a 00 00 20 f0 ff ff   |....H....... ...|
0x804c004:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c014:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c024:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c034:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c044:   10 00 00 00 24 0b 00 00  34 f0 ff ff 02 00 00 00   |....$...4.......|
0x804c054:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 84 b0 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff 00 00   |................|
0x804e028:   77 eb fd 28 ff ff ff ff  01 00 00 00 08 e6 00 00   |w..(............|
0x804e038:   01 00 00 00 01 51 00 00  a9 bc 61 87 fe c9 00 00   |.....Q....a.....|
0x804e048:   03 00 00 00 ff ff 01 00  ff ff ff ff b6 00 00 00   |................|
0x804e058:   31 24 80 cc 7c d7 fa 8a  ed 6c ec ef fa ff ff ff   |1$..|....l......|
0x804e068:   01 00 00 00 4e 53 00 00  d4 2c 07 d1 e9 f2 00 00   |....NS...,......|
0x804e078:   fc ff ff ff 06 00 00 00  64 c7 28 72 43 7c d5 e4   |........d.(rC|..|
0x804e088:   41 83 fb ff fe 36 00 00  3f a1 87 b4 fc ff ff ff   |A....6..?.......|
0x804e098:   fc 00 00 00 a8 14 31 d9  ff ff ff ff ??            |......1.....?   |
