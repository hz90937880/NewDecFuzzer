;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:50:31
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 e0 dd ff ff               	lea eax, [ebx - 0x2220]
0x804835c:   50                              	push eax
0x804835d:   8d 83 80 dd ff ff               	lea eax, [ebx - 0x2280]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 45 a9 04 08               	mov eax, 0x804a945
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 84 d0 04 08                  	mov eax, 0x804d084
0x80483a5:   3d 84 d0 04 08                  	cmp eax, 0x804d084
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 84 d0 04 08                  	push 0x804d084
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 84 d0 04 08                  	mov eax, 0x804d084
0x80483e5:   2d 84 d0 04 08                  	sub eax, 0x804d084
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 84 d0 04 08                  	push 0x804d084
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 d0 04 08 00            	cmp byte ptr [0x804d0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 d0 04 08 01            	mov byte ptr [0x804d0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 13 29 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 ff 28 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 00 de ff ff               	lea edx, [eax - 0x2200]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 d2 28 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 b4 28 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 8c 28 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 62 28 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 39 28 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 f6 27 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 b4 27 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 5c 27 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 0b 27 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 ce 26 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 97 26 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 78 26 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 4e 26 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 22 26 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 f7 25 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 ae 25 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 66 25 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 0c 25 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 b9 24 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 7a 24 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 44 24 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 22 24 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 d4 23 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 98 23 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 0f 23 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 dd 22 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 ad 22 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 68 22 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 29 22 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 f7 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 c8 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 aa 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 82 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 5d 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 38 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 01 21 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 cc 20 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 7a 20 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 2f 20 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 f8 1f 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 c7 1f 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 a8 1f 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 7e 1f 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 56 1f 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 2d 1f 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 f1 1e 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 b6 1e 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 63 1e 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 17 1e 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 df 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 b0 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 9c 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 85 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 70 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 5a 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 33 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 0e 1d 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 cf 1c 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 96 1c 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 6a 1c 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 44 1c 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 10 df ff ff               	fld dword ptr [eax - 0x20f0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 02 1c 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 10 df ff ff               	fld dword ptr [eax - 0x20f0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 c0 1b 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 14 df ff ff               	fld dword ptr [eax - 0x20ec]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 18 df ff ff               	fld dword ptr [eax - 0x20e8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 1c df ff ff               	fld dword ptr [eax - 0x20e4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 7e 1b 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 20 df ff ff               	fld dword ptr [eax - 0x20e0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 24 df ff ff               	fld dword ptr [eax - 0x20dc]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 28 df ff ff               	fld dword ptr [eax - 0x20d8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 06 1b 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 38 df ff ff               	fld qword ptr [eax - 0x20c8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 a9 1a 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 38 df ff ff               	fld qword ptr [eax - 0x20c8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 4c 1a 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 40 df ff ff               	fld qword ptr [eax - 0x20c0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 48 df ff ff               	fld qword ptr [eax - 0x20b8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 50 df ff ff               	fld qword ptr [eax - 0x20b0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 ef 19 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 58 df ff ff               	fld qword ptr [eax - 0x20a8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 60 df ff ff               	fld qword ptr [eax - 0x20a0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 68 df ff ff               	fld qword ptr [eax - 0x2098]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 5f 19 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 70 df ff ff               	fld dword ptr [eax - 0x2090]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 74 df ff ff               	fld dword ptr [eax - 0x208c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 fb 18 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 8a 18 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 47 18 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 10 de ff ff               	lea eax, [ebx - 0x21f0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 34 de ff ff               	lea eax, [ebx - 0x21cc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049807
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 54                        	sub esp, 0x54
0x804962f:   e8 3d 17 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804963c:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x804963f:   8b 5d 34                        	mov ebx, dword ptr [ebp + 0x34]
0x8049642:   8b 75 40                        	mov esi, dword ptr [ebp + 0x40]
0x8049645:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049648:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804964b:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x804964e:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049651:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x8049654:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049657:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x804965a:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804965d:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x8049660:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049663:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x8049666:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049669:   8b 7d 74                        	mov edi, dword ptr [ebp + 0x74]
0x804966c:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x804966f:   8b 7d 78                        	mov edi, dword ptr [ebp + 0x78]
0x8049672:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x8049675:   8b 7d 7c                        	mov edi, dword ptr [ebp + 0x7c]
0x8049678:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x804967b:   89 ca                           	mov edx, ecx
0x804967d:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x8049681:   89 da                           	mov edx, ebx
0x8049683:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x8049686:   89 f2                           	mov edx, esi
0x8049688:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x804968b:   0f b7 55 bc                     	movzx edx, word ptr [ebp - 0x44]
0x804968f:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x8049693:   0f b7 55 b8                     	movzx edx, word ptr [ebp - 0x48]
0x8049697:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x804969b:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x804969f:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x80496a3:   0f b6 55 b0                     	movzx edx, byte ptr [ebp - 0x50]
0x80496a7:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x80496aa:   0f b6 55 ac                     	movzx edx, byte ptr [ebp - 0x54]
0x80496ae:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496b1:   0f b6 55 a8                     	movzx edx, byte ptr [ebp - 0x58]
0x80496b5:   88 55 cc                        	mov byte ptr [ebp - 0x34], dl
0x80496b8:   0f b7 55 a4                     	movzx edx, word ptr [ebp - 0x5c]
0x80496bc:   66 89 55 c8                     	mov word ptr [ebp - 0x38], dx
0x80496c0:   0f b6 55 a0                     	movzx edx, byte ptr [ebp - 0x60]
0x80496c4:   88 55 c4                        	mov byte ptr [ebp - 0x3c], dl
0x80496c7:   89 fa                           	mov edx, edi
0x80496c9:   66 89 55 c0                     	mov word ptr [ebp - 0x40], dx
0x80496cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496d0:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496d6:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496d9:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496df:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496e3:   88 90 2c 00 00 00               	mov byte ptr [eax + 0x2c], dl
0x80496e9:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496ec:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496f2:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496f6:   66 89 90 c4 04 00 00            	mov word ptr [eax + 0x4c4], dx
0x80496fd:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x8049700:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x8049706:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x8049709:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x804970f:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x8049712:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x8049718:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x804971b:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x8049721:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x8049724:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x804972a:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x804972d:   89 90 c8 04 00 00               	mov dword ptr [eax + 0x4c8], edx
0x8049733:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x8049737:   88 90 cc 04 00 00               	mov byte ptr [eax + 0x4cc], dl
0x804973d:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x8049740:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x8049746:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x8049749:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x804974f:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x8049753:   88 90 50 00 00 00               	mov byte ptr [eax + 0x50], dl
0x8049759:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x804975c:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x8049762:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049765:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x804976b:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x804976f:   66 89 90 ce 04 00 00            	mov word ptr [eax + 0x4ce], dx
0x8049776:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x804977a:   66 89 90 d0 04 00 00            	mov word ptr [eax + 0x4d0], dx
0x8049781:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x8049785:   66 89 90 5c 00 00 00            	mov word ptr [eax + 0x5c], dx
0x804978c:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049790:   88 90 5e 00 00 00               	mov byte ptr [eax + 0x5e], dl
0x8049796:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x8049799:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x804979f:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x80497a3:   88 90 64 00 00 00               	mov byte ptr [eax + 0x64], dl
0x80497a9:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x80497ac:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x80497b2:   8b 55 68                        	mov edx, dword ptr [ebp + 0x68]
0x80497b5:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x80497bb:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x80497bf:   88 90 70 00 00 00               	mov byte ptr [eax + 0x70], dl
0x80497c5:   8b 55 70                        	mov edx, dword ptr [ebp + 0x70]
0x80497c8:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x80497ce:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x80497d2:   66 89 90 78 00 00 00            	mov word ptr [eax + 0x78], dx
0x80497d9:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x80497dd:   88 90 7a 00 00 00               	mov byte ptr [eax + 0x7a], dl
0x80497e3:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x80497e7:   66 89 90 7c 00 00 00            	mov word ptr [eax + 0x7c], dx
0x80497ee:   8b 95 80 00 00 00               	mov edx, dword ptr [ebp + 0x80]
0x80497f4:   89 90 80 00 00 00               	mov dword ptr [eax + 0x80], edx
0x80497fa:   b8 00 00 00 00                  	mov eax, 0
0x80497ff:   83 c4 54                        	add esp, 0x54
0x8049802:   5b                              	pop ebx
0x8049803:   5e                              	pop esi
0x8049804:   5f                              	pop edi
0x8049805:   5d                              	pop ebp
0x8049806:   c3                              	ret 
; function: func_1 at 0x8049807 -- 0x804a945
0x8049807:   55                              	push ebp
0x8049808:   89 e5                           	mov ebp, esp
0x804980a:   57                              	push edi
0x804980b:   56                              	push esi
0x804980c:   53                              	push ebx
0x804980d:   81 ec 8c 01 00 00               	sub esp, 0x18c
0x8049813:   e8 59 15 00 00                  	call 0x804ad71 <__x86.get_pc_thunk.ax>
0x8049818:   05 e8 37 00 00                  	add eax, 0x37e8
0x804981d:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x8049824:   c7 45 98 12 22 db c2            	mov dword ptr [ebp - 0x68], 0xc2db2212
0x804982b:   c6 45 ef 80                     	mov byte ptr [ebp - 0x11], 0x80
0x804982f:   c7 45 e8 ca f4 9f 16            	mov dword ptr [ebp - 0x18], 0x169ff4ca
0x8049836:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x804983c:   c7 45 e0 33 0c 91 b6            	mov dword ptr [ebp - 0x20], 0xb6910c33
0x8049843:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x804984a:   c7 45 94 f7 ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffff7
0x8049851:   c7 45 90 fb af 15 4d            	mov dword ptr [ebp - 0x70], 0x4d15affb
0x8049858:   c7 45 8c 7d 8f 7a e4            	mov dword ptr [ebp - 0x74], 0xe47a8f7d
0x804985f:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049866:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x804986a:   c7 45 f0 ce 6f af 0d            	mov dword ptr [ebp - 0x10], 0xdaf6fce
0x8049871:   c7 45 d0 70 0b 2f 48            	mov dword ptr [ebp - 0x30], 0x482f0b70
0x8049878:   c6 45 87 c0                     	mov byte ptr [ebp - 0x79], 0xc0
0x804987c:   c7 45 80 d5 85 d5 02            	mov dword ptr [ebp - 0x80], 0x2d585d5
0x8049883:   c7 85 7c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x84], 1
0x804988d:   66 c7 45 ce 00 00               	mov word ptr [ebp - 0x32], 0
0x8049893:   66 c7 45 cc 00 00               	mov word ptr [ebp - 0x34], 0
0x8049899:   66 c7 45 d8 81 0a               	mov word ptr [ebp - 0x28], 0xa81
0x804989f:   c6 45 d7 8e                     	mov byte ptr [ebp - 0x29], 0x8e
0x80498a3:   c7 45 b4 27 bc 16 4b            	mov dword ptr [ebp - 0x4c], 0x4b16bc27
0x80498aa:   c6 45 b3 e8                     	mov byte ptr [ebp - 0x4d], 0xe8
0x80498ae:   c7 85 78 ff ff ff d7 6f 62 55   	mov dword ptr [ebp - 0x88], 0x55626fd7
0x80498b8:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x80498c2:   c6 45 b2 09                     	mov byte ptr [ebp - 0x4e], 9
0x80498c6:   c7 85 70 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x90], 8
0x80498d0:   66 c7 85 6e ff ff ff 70 2a      	mov word ptr [ebp - 0x92], 0x2a70
0x80498d9:   c6 85 6d ff ff ff 73            	mov byte ptr [ebp - 0x93], 0x73
0x80498e0:   66 c7 85 6a ff ff ff 2c 95      	mov word ptr [ebp - 0x96], 0x952c
0x80498e9:   c7 45 ac fd ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffd
0x80498f0:   66 c7 85 68 ff ff ff b0 b0      	mov word ptr [ebp - 0x98], 0xb0b0
0x80498f9:   c7 45 a8 a3 a2 ee 34            	mov dword ptr [ebp - 0x58], 0x34eea2a3
0x8049900:   66 c7 45 a6 8d b6               	mov word ptr [ebp - 0x5a], 0xb68d
0x8049906:   c6 85 67 ff ff ff ff            	mov byte ptr [ebp - 0x99], 0xff
0x804990d:   66 c7 85 64 ff ff ff 00 00      	mov word ptr [ebp - 0x9c], 0
0x8049916:   c7 45 a0 aa 04 0b fb            	mov dword ptr [ebp - 0x60], 0xfb0b04aa
0x804991d:   66 c7 85 62 ff ff ff 09 43      	mov word ptr [ebp - 0x9e], 0x4309
0x8049926:   c7 85 5c ff ff ff d2 76 9a d9   	mov dword ptr [ebp - 0xa4], 0xd99a76d2
0x8049930:   c7 85 58 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xa8], 9
0x804993a:   c7 85 54 ff ff ff 58 79 52 78   	mov dword ptr [ebp - 0xac], 0x78527958
0x8049944:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x8049948:   81 7d 98 c1 80 d0 9e            	cmp dword ptr [ebp - 0x68], 0x9ed080c1
0x804994f:   0f 95 c0                        	setne al
0x8049952:   0f b6 c0                        	movzx eax, al
0x8049955:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049958:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804995c:   0f be c0                        	movsx eax, al
0x804995f:   ba eb ff ff ff                  	mov edx, 0xffffffeb
0x8049964:   89 c1                           	mov ecx, eax
0x8049966:   d3 fa                           	sar edx, cl
0x8049968:   89 d0                           	mov eax, edx
0x804996a:   0f b6 d0                        	movzx edx, al
0x804996d:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049970:   0f b6 c0                        	movzx eax, al
0x8049973:   89 c1                           	mov ecx, eax
0x8049975:   d3 e2                           	shl edx, cl
0x8049977:   89 d0                           	mov eax, edx
0x8049979:   85 c0                           	test eax, eax
0x804997b:   74 0d                           	je 0x804998a <func_1+0x183>
0x804997d:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049981:   74 07                           	je 0x804998a <func_1+0x183>
0x8049983:   b8 01 00 00 00                  	mov eax, 1
0x8049988:   eb 05                           	jmp 0x804998f <func_1+0x188>
0x804998a:   b8 00 00 00 00                  	mov eax, 0
0x804998f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049992:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049996:   0f 84 60 0e 00 00               	je 0x804a7fc <func_1+0xff5>
0x804999c:   66 c7 85 42 ff ff ff 04 00      	mov word ptr [ebp - 0xbe], 4
0x80499a5:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x80499ac:   c7 85 3c ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xc4], 7
0x80499b6:   c6 85 3b ff ff ff fe            	mov byte ptr [ebp - 0xc5], 0xfe
0x80499bd:   c7 85 34 ff ff ff d3 e0 22 39   	mov dword ptr [ebp - 0xcc], 0x3922e0d3
0x80499c7:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x80499d1:   c6 85 2f ff ff ff ff            	mov byte ptr [ebp - 0xd1], 0xff
0x80499d8:   c7 85 28 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xd8], 9
0x80499e2:   c6 85 27 ff ff ff a5            	mov byte ptr [ebp - 0xd9], 0xa5
0x80499e9:   66 c7 85 24 ff ff ff 00 00      	mov word ptr [ebp - 0xdc], 0
0x80499f2:   c7 85 20 ff ff ff ab 36 9f 27   	mov dword ptr [ebp - 0xe0], 0x279f36ab
0x80499fc:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x8049a03:   20 45 ef                        	and byte ptr [ebp - 0x11], al
0x8049a06:   c7 85 1c ff ff ff 4a 7f 23 aa   	mov dword ptr [ebp - 0xe4], 0xaa237f4a
0x8049a10:   66 c7 45 c6 4f 2f               	mov word ptr [ebp - 0x3a], 0x2f4f
0x8049a16:   83 85 1c ff ff ff 01            	add dword ptr [ebp - 0xe4], 1
0x8049a1d:   66 c7 45 a6 06 00               	mov word ptr [ebp - 0x5a], 6
0x8049a23:   e9 d6 00 00 00                  	jmp 0x8049afe <func_1+0x2f7>
0x8049a28:   c7 85 90 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x170], 0xffffffff
0x8049a32:   c6 85 8f fe ff ff 1f            	mov byte ptr [ebp - 0x171], 0x1f
0x8049a39:   c7 85 88 fe ff ff bb 17 b8 bd   	mov dword ptr [ebp - 0x178], 0xbdb817bb
0x8049a43:   83 bd 90 fe ff ff 00            	cmp dword ptr [ebp - 0x170], 0
0x8049a4a:   75 1e                           	jne 0x8049a6a <func_1+0x263>
0x8049a4c:   66 c7 45 e6 f9 ff               	mov word ptr [ebp - 0x1a], 0xfff9
0x8049a52:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a55:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x8049a59:   83 7d 98 01                     	cmp dword ptr [ebp - 0x68], 1
0x8049a5d:   0f 96 c0                        	setbe al
0x8049a60:   0f b6 c0                        	movzx eax, al
0x8049a63:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049a66:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049a6a:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a6d:   0f b7 d0                        	movzx edx, ax
0x8049a70:   66 0f be 85 8f fe ff ff         	movsx ax, byte ptr [ebp - 0x171]
0x8049a78:   0f b7 c0                        	movzx eax, ax
0x8049a7b:   89 c1                           	mov ecx, eax
0x8049a7d:   d3 e2                           	shl edx, cl
0x8049a7f:   89 d0                           	mov eax, edx
0x8049a81:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049a84:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049a88:   89 85 88 fe ff ff               	mov dword ptr [ebp - 0x178], eax
0x8049a8e:   8b 85 88 fe ff ff               	mov eax, dword ptr [ebp - 0x178]
0x8049a94:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049a97:   8b b5 1c ff ff ff               	mov esi, dword ptr [ebp - 0xe4]
0x8049a9d:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049aa0:   99                              	cdq 
0x8049aa1:   f7 fe                           	idiv esi
0x8049aa3:   0f be d0                        	movsx edx, al
0x8049aa6:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049aac:   0f b7 d8                        	movzx ebx, ax
0x8049aaf:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049ab3:   0f b7 c0                        	movzx eax, ax
0x8049ab6:   89 c1                           	mov ecx, eax
0x8049ab8:   d3 e3                           	shl ebx, cl
0x8049aba:   89 d9                           	mov ecx, ebx
0x8049abc:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x8049ac3:   39 c1                           	cmp ecx, eax
0x8049ac5:   7e 07                           	jle 0x8049ace <func_1+0x2c7>
0x8049ac7:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x8049acc:   eb 05                           	jmp 0x8049ad3 <func_1+0x2cc>
0x8049ace:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x8049ad3:   29 c2                           	sub edx, eax
0x8049ad5:   89 d0                           	mov eax, edx
0x8049ad7:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x8049adb:   99                              	cdq 
0x8049adc:   f7 fe                           	idiv esi
0x8049ade:   0f b6 c0                        	movzx eax, al
0x8049ae1:   69 c0 fa 00 00 00               	imul eax, eax, 0xfa
0x8049ae7:   83 f8 ff                        	cmp eax, -1
0x8049aea:   0f 9c c0                        	setl al
0x8049aed:   0f b6 c0                        	movzx eax, al
0x8049af0:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049af3:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049af7:   83 c0 03                        	add eax, 3
0x8049afa:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x8049afe:   66 83 7d a6 1b                  	cmp word ptr [ebp - 0x5a], 0x1b
0x8049b03:   0f 8e 1f ff ff ff               	jle 0x8049a28 <func_1+0x221>
0x8049b09:   c6 85 67 ff ff ff 00            	mov byte ptr [ebp - 0x99], 0
0x8049b10:   80 bd 67 ff ff ff e7            	cmp byte ptr [ebp - 0x99], 0xe7
0x8049b17:   0f 8d 90 03 00 00               	jge 0x8049ead <func_1+0x6a6>
0x8049b1d:   c6 85 a3 fe ff ff ff            	mov byte ptr [ebp - 0x15d], 0xff
0x8049b24:   c6 45 ef 1c                     	mov byte ptr [ebp - 0x11], 0x1c
0x8049b28:   80 7d ef 03                     	cmp byte ptr [ebp - 0x11], 3
0x8049b2c:   0f 8f 10 01 00 00               	jg 0x8049c42 <func_1+0x43b>
0x8049b32:   c7 85 94 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x16c], 0
0x8049b3c:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x8049b42:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049b45:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049b4b:   66 89 85 64 ff ff ff            	mov word ptr [ebp - 0x9c], ax
0x8049b52:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049b59:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x8049b60:   0f be 95 6d ff ff ff            	movsx edx, byte ptr [ebp - 0x93]
0x8049b67:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x8049b6e:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x8049b72:   0f be 7d b3                     	movsx edi, byte ptr [ebp - 0x4d]
0x8049b76:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049b7c:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x8049b80:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x8049b86:   0f b7 7d d8                     	movzx edi, word ptr [ebp - 0x28]
0x8049b8a:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x8049b90:   0f b7 5d cc                     	movzx ebx, word ptr [ebp - 0x34]
0x8049b94:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x8049b9a:   0f bf 7d ce                     	movsx edi, word ptr [ebp - 0x32]
0x8049b9e:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x8049ba4:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x8049ba8:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x8049bae:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x8049bb2:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049bb8:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x8049bbc:   0f be 5d ef                     	movsx ebx, byte ptr [ebp - 0x11]
0x8049bc0:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049bc3:   50                              	push eax
0x8049bc4:   52                              	push edx
0x8049bc5:   51                              	push ecx
0x8049bc6:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049bcc:   56                              	push esi
0x8049bcd:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049bd3:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049bd9:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049bdf:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049be2:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049be8:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049bee:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049bf4:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049bfa:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049c00:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049c03:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049c09:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c0c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c0f:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049c15:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049c18:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049c1b:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049c1e:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049c21:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049c24:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c27:   57                              	push edi
0x8049c28:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c2b:   53                              	push ebx
0x8049c2c:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049c2f:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049c32:   e8 ef f9 ff ff                  	call 0x8049626 <set_var>
0x8049c37:   83 c4 7c                        	add esp, 0x7c
0x8049c3a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c3d:   e9 fb 0c 00 00                  	jmp 0x804a93d <func_1+0x1136>
0x8049c42:   c7 45 e8 0c 00 00 00            	mov dword ptr [ebp - 0x18], 0xc
0x8049c49:   e9 6b 01 00 00                  	jmp 0x8049db9 <func_1+0x5b2>
0x8049c4e:   c7 85 9c fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x164], 2
0x8049c58:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049c5f:   0f b6 85 a3 fe ff ff            	movzx eax, byte ptr [ebp - 0x15d]
0x8049c66:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x8049c6a:   29 d0                           	sub eax, edx
0x8049c6c:   89 c2                           	mov edx, eax
0x8049c6e:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x8049c72:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x8049c75:   0f 94 c0                        	sete al
0x8049c78:   29 c2                           	sub edx, eax
0x8049c7a:   89 d0                           	mov eax, edx
0x8049c7c:   0f be c0                        	movsx eax, al
0x8049c7f:   83 c0 52                        	add eax, 0x52
0x8049c82:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049c85:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x8049c8c:   83 7d c8 0d                     	cmp dword ptr [ebp - 0x38], 0xd
0x8049c90:   0f 8f 1b 01 00 00               	jg 0x8049db1 <func_1+0x5aa>
0x8049c96:   66 c7 85 9a fe ff ff b5 b7      	mov word ptr [ebp - 0x166], 0xb7b5
0x8049c9f:   0f be 8d a3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x15d]
0x8049ca6:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x8049cac:   99                              	cdq 
0x8049cad:   f7 f9                           	idiv ecx
0x8049caf:   89 d0                           	mov eax, edx
0x8049cb1:   85 c0                           	test eax, eax
0x8049cb3:   0f 95 c0                        	setne al
0x8049cb6:   0f b6 d0                        	movzx edx, al
0x8049cb9:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x8049cbd:   31 d0                           	xor eax, edx
0x8049cbf:   23 85 9c fe ff ff               	and eax, dword ptr [ebp - 0x164]
0x8049cc5:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049cc8:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x8049ccf:   0f be 95 6d ff ff ff            	movsx edx, byte ptr [ebp - 0x93]
0x8049cd6:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x8049cdd:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x8049ce1:   0f be 7d b3                     	movsx edi, byte ptr [ebp - 0x4d]
0x8049ce5:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049ceb:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x8049cef:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x8049cf5:   0f b7 7d d8                     	movzx edi, word ptr [ebp - 0x28]
0x8049cf9:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x8049cff:   0f b7 5d cc                     	movzx ebx, word ptr [ebp - 0x34]
0x8049d03:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x8049d09:   0f bf 7d ce                     	movsx edi, word ptr [ebp - 0x32]
0x8049d0d:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x8049d13:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x8049d17:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x8049d1d:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x8049d21:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x8049d27:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x8049d2b:   0f be 5d ef                     	movsx ebx, byte ptr [ebp - 0x11]
0x8049d2f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049d32:   50                              	push eax
0x8049d33:   52                              	push edx
0x8049d34:   51                              	push ecx
0x8049d35:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049d3b:   56                              	push esi
0x8049d3c:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049d42:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049d48:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049d4e:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049d51:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049d57:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049d5d:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049d63:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049d69:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049d6f:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049d72:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049d78:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d7b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049d7e:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049d84:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049d87:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049d8a:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049d8d:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049d90:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d93:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049d96:   57                              	push edi
0x8049d97:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d9a:   53                              	push ebx
0x8049d9b:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049d9e:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049da1:   e8 80 f8 ff ff                  	call 0x8049626 <set_var>
0x8049da6:   83 c4 7c                        	add esp, 0x7c
0x8049da9:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049dac:   e9 8c 0b 00 00                  	jmp 0x804a93d <func_1+0x1136>
0x8049db1:   83 4d dc 01                     	or dword ptr [ebp - 0x24], 1
0x8049db5:   83 6d e8 08                     	sub dword ptr [ebp - 0x18], 8
0x8049db9:   83 7d e8 fc                     	cmp dword ptr [ebp - 0x18], -4
0x8049dbd:   0f 85 8b fe ff ff               	jne 0x8049c4e <func_1+0x447>
0x8049dc3:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x8049dca:   0f be 95 6d ff ff ff            	movsx edx, byte ptr [ebp - 0x93]
0x8049dd1:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x8049dd8:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x8049ddc:   0f be 5d b3                     	movsx ebx, byte ptr [ebp - 0x4d]
0x8049de0:   89 9d 80 fe ff ff               	mov dword ptr [ebp - 0x180], ebx
0x8049de6:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x8049dea:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x8049df0:   0f b7 5d d8                     	movzx ebx, word ptr [ebp - 0x28]
0x8049df4:   89 9d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ebx
0x8049dfa:   0f b7 7d cc                     	movzx edi, word ptr [ebp - 0x34]
0x8049dfe:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x8049e04:   0f bf 5d ce                     	movsx ebx, word ptr [ebp - 0x32]
0x8049e08:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x8049e0e:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x8049e12:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x8049e18:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x8049e1c:   89 9d 68 fe ff ff               	mov dword ptr [ebp - 0x198], ebx
0x8049e22:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x8049e26:   0f be 5d ef                     	movsx ebx, byte ptr [ebp - 0x11]
0x8049e2a:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049e2d:   50                              	push eax
0x8049e2e:   52                              	push edx
0x8049e2f:   51                              	push ecx
0x8049e30:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049e36:   56                              	push esi
0x8049e37:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049e3d:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049e43:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049e49:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e4c:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049e52:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049e58:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049e5e:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049e64:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049e6a:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049e6d:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049e73:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049e76:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049e79:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049e7f:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049e82:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049e85:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049e88:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049e8b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e8e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e91:   57                              	push edi
0x8049e92:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049e95:   53                              	push ebx
0x8049e96:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049e99:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049e9c:   e8 85 f7 ff ff                  	call 0x8049626 <set_var>
0x8049ea1:   83 c4 7c                        	add esp, 0x7c
0x8049ea4:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049ea8:   e9 90 0a 00 00                  	jmp 0x804a93d <func_1+0x1136>
0x8049ead:   0f bf 8d 68 ff ff ff            	movsx ecx, word ptr [ebp - 0x98]
0x8049eb4:   66 83 65 ce 01                  	and word ptr [ebp - 0x32], 1
0x8049eb9:   0f bf 45 ce                     	movsx eax, word ptr [ebp - 0x32]
0x8049ebd:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049ec0:   0f 9e c0                        	setle al
0x8049ec3:   0f b6 c0                        	movzx eax, al
0x8049ec6:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049ecc:   0f 94 c0                        	sete al
0x8049ecf:   0f b6 c0                        	movzx eax, al
0x8049ed2:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049ed5:   b8 35 86 ff ff                  	mov eax, 0xffff8635
0x8049eda:   ba 00 00 00 00                  	mov edx, 0
0x8049edf:   f7 75 8c                        	div dword ptr [ebp - 0x74]
0x8049ee2:   2b 45 e0                        	sub eax, dword ptr [ebp - 0x20]
0x8049ee5:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049ee8:   39 4d c8                        	cmp dword ptr [ebp - 0x38], ecx
0x8049eeb:   0f 8e c2 08 00 00               	jle 0x804a7b3 <func_1+0xfac>
0x8049ef1:   66 c7 85 16 ff ff ff ff ff      	mov word ptr [ebp - 0xea], 0xffff
0x8049efa:   c7 45 c0 08 00 00 00            	mov dword ptr [ebp - 0x40], 8
0x8049f01:   66 c7 85 14 ff ff ff 9a 5b      	mov word ptr [ebp - 0xec], 0x5b9a
0x8049f0a:   c7 85 10 ff ff ff c5 ee 83 c6   	mov dword ptr [ebp - 0xf0], 0xc683eec5
0x8049f14:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x8049f1b:   c6 45 bb 20                     	mov byte ptr [ebp - 0x45], 0x20
0x8049f1f:   c7 85 0c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffffc
0x8049f29:   66 c7 85 0a ff ff ff c8 dd      	mov word ptr [ebp - 0xf6], 0xddc8
0x8049f32:   c7 85 04 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xfc], 0
0x8049f3c:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x8049f46:   81 65 e8 83 97 61 67            	and dword ptr [ebp - 0x18], 0x67619783
0x8049f4d:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049f51:   74 0b                           	je 0x8049f5e <func_1+0x757>
0x8049f53:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049f56:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x8049f59:   e9 a5 00 00 00                  	jmp 0x804a003 <func_1+0x7fc>
0x8049f5e:   c6 85 ff fe ff ff 01            	mov byte ptr [ebp - 0x101], 1
0x8049f65:   c6 85 fe fe ff ff 01            	mov byte ptr [ebp - 0x102], 1
0x8049f6c:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f6f:   0f b6 d0                        	movzx edx, al
0x8049f72:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049f75:   0f b7 c8                        	movzx ecx, ax
0x8049f78:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049f7b:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049f81:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049f87:   0f b7 c0                        	movzx eax, ax
0x8049f8a:   29 c1                           	sub ecx, eax
0x8049f8c:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049f90:   39 c1                           	cmp ecx, eax
0x8049f92:   0f 9c c0                        	setl al
0x8049f95:   0f b6 c0                        	movzx eax, al
0x8049f98:   89 c3                           	mov ebx, eax
0x8049f9a:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049f9d:   89 c1                           	mov ecx, eax
0x8049f9f:   89 d8                           	mov eax, ebx
0x8049fa1:   0f af c1                        	imul eax, ecx
0x8049fa4:   0f b6 c0                        	movzx eax, al
0x8049fa7:   89 c1                           	mov ecx, eax
0x8049fa9:   d3 fa                           	sar edx, cl
0x8049fab:   89 d0                           	mov eax, edx
0x8049fad:   f7 d8                           	neg eax
0x8049faf:   0f be c0                        	movsx eax, al
0x8049fb2:   f7 d8                           	neg eax
0x8049fb4:   20 85 ff fe ff ff               	and byte ptr [ebp - 0x101], al
0x8049fba:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049fbd:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x8049fc0:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x8049fc4:   0f b6 85 fe fe ff ff            	movzx eax, byte ptr [ebp - 0x102]
0x8049fcb:   83 e0 01                        	and eax, 1
0x8049fce:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049fd1:   7c 07                           	jl 0x8049fda <func_1+0x7d3>
0x8049fd3:   ba 04 ef ff ff                  	mov edx, 0xffffef04
0x8049fd8:   eb 05                           	jmp 0x8049fdf <func_1+0x7d8>
0x8049fda:   ba 03 ef ff ff                  	mov edx, 0xffffef03
0x8049fdf:   66 0f be 85 ff fe ff ff         	movsx ax, byte ptr [ebp - 0x101]
0x8049fe7:   21 d0                           	and eax, edx
0x8049fe9:   0f bf d0                        	movsx edx, ax
0x8049fec:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x8049ff2:   98                              	cwde 
0x8049ff3:   01 d0                           	add eax, edx
0x8049ff5:   3d 27 aa fa 23                  	cmp eax, 0x23faaa27
0x8049ffa:   0f 9f c0                        	setg al
0x8049ffd:   0f b6 c0                        	movzx eax, al
0x804a000:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a003:   83 bd 10 ff ff ff 00            	cmp dword ptr [ebp - 0xf0], 0
0x804a00a:   0f 84 c1 01 00 00               	je 0x804a1d1 <func_1+0x9ca>
0x804a010:   c7 85 bc fe ff ff 00 77 68 e6   	mov dword ptr [ebp - 0x144], 0xe6687700
0x804a01a:   66 c7 85 ba fe ff ff ff 73      	mov word ptr [ebp - 0x146], 0x73ff
0x804a023:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a027:   0f 9f c0                        	setg al
0x804a02a:   0f b6 c0                        	movzx eax, al
0x804a02d:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a030:   c7 45 c8 06 00 00 00            	mov dword ptr [ebp - 0x38], 6
0x804a037:   e9 86 01 00 00                  	jmp 0x804a1c2 <func_1+0x9bb>
0x804a03c:   c6 85 b9 fe ff ff 03            	mov byte ptr [ebp - 0x147], 3
0x804a043:   c7 85 b4 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x14c], 3
0x804a04d:   c6 85 b3 fe ff ff 02            	mov byte ptr [ebp - 0x14d], 2
0x804a054:   83 bd bc fe ff ff 00            	cmp dword ptr [ebp - 0x144], 0
0x804a05b:   0f 84 09 01 00 00               	je 0x804a16a <func_1+0x963>
0x804a061:   c7 85 ac fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x154], 0xfffffff8
0x804a06b:   66 c7 85 aa fe ff ff ff ff      	mov word ptr [ebp - 0x156], 0xffff
0x804a074:   c7 85 a4 fe ff ff 2f 40 ee 03   	mov dword ptr [ebp - 0x15c], 0x3ee402f
0x804a07e:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x804a085:   75 0a                           	jne 0x804a091 <func_1+0x88a>
0x804a087:   80 65 ef 72                     	and byte ptr [ebp - 0x11], 0x72
0x804a08b:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a08f:   74 07                           	je 0x804a098 <func_1+0x891>
0x804a091:   b8 01 00 00 00                  	mov eax, 1
0x804a096:   eb 05                           	jmp 0x804a09d <func_1+0x896>
0x804a098:   b8 00 00 00 00                  	mov eax, 0
0x804a09d:   08 85 b9 fe ff ff               	or byte ptr [ebp - 0x147], al
0x804a0a3:   0f b7 85 aa fe ff ff            	movzx eax, word ptr [ebp - 0x156]
0x804a0aa:   83 e8 01                        	sub eax, 1
0x804a0ad:   66 89 85 aa fe ff ff            	mov word ptr [ebp - 0x156], ax
0x804a0b4:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a0b7:   98                              	cwde 
0x804a0b8:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a0bb:   39 55 c0                        	cmp dword ptr [ebp - 0x40], edx
0x804a0be:   77 10                           	ja 0x804a0d0 <func_1+0x8c9>
0x804a0c0:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x804a0c7:   74 07                           	je 0x804a0d0 <func_1+0x8c9>
0x804a0c9:   ba 01 00 00 00                  	mov edx, 1
0x804a0ce:   eb 05                           	jmp 0x804a0d5 <func_1+0x8ce>
0x804a0d0:   ba 00 00 00 00                  	mov edx, 0
0x804a0d5:   81 fa b7 bd b5 f7               	cmp edx, 0xf7b5bdb7
0x804a0db:   0f 95 c2                        	setne dl
0x804a0de:   0f b6 d2                        	movzx edx, dl
0x804a0e1:   66 31 55 e6                     	xor word ptr [ebp - 0x1a], dx
0x804a0e5:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a0e9:   66 81 ea a6 38                  	sub dx, 0x38a6
0x804a0ee:   0f bf ca                        	movsx ecx, dx
0x804a0f1:   99                              	cdq 
0x804a0f2:   f7 f9                           	idiv ecx
0x804a0f4:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804a0f7:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a0fd:   0b 85 10 ff ff ff               	or eax, dword ptr [ebp - 0xf0]
0x804a103:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a109:   66 83 6d cc 01                  	sub word ptr [ebp - 0x34], 1
0x804a10e:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x804a112:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a115:   8d 0c 02                        	lea ecx, [edx + eax]
0x804a118:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a11c:   8d 50 ff                        	lea edx, [eax - 1]
0x804a11f:   88 55 db                        	mov byte ptr [ebp - 0x25], dl
0x804a122:   0f b6 c0                        	movzx eax, al
0x804a125:   39 c1                           	cmp ecx, eax
0x804a127:   8b 85 ac fe ff ff               	mov eax, dword ptr [ebp - 0x154]
0x804a12d:   0f be f0                        	movsx esi, al
0x804a130:   b8 50 00 00 00                  	mov eax, 0x50
0x804a135:   99                              	cdq 
0x804a136:   f7 fe                           	idiv esi
0x804a138:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a13b:   0f 95 c0                        	setne al
0x804a13e:   0f b6 c0                        	movzx eax, al
0x804a141:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a144:   74 07                           	je 0x804a14d <func_1+0x946>
0x804a146:   b8 09 ff ff ff                  	mov eax, 0xffffff09
0x804a14b:   eb 05                           	jmp 0x804a152 <func_1+0x94b>
0x804a14d:   b8 08 ff ff ff                  	mov eax, 0xffffff08
0x804a152:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804a155:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a158:   0f bf d0                        	movsx edx, ax
0x804a15b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a15e:   98                              	cwde 
0x804a15f:   89 c1                           	mov ecx, eax
0x804a161:   d3 fa                           	sar edx, cl
0x804a163:   89 d0                           	mov eax, edx
0x804a165:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a168:   eb 4d                           	jmp 0x804a1b7 <func_1+0x9b0>
0x804a16a:   c6 85 b2 fe ff ff fc            	mov byte ptr [ebp - 0x14e], 0xfc
0x804a171:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a177:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a17a:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a17e:   74 11                           	je 0x804a191 <func_1+0x98a>
0x804a180:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a186:   89 c2                           	mov edx, eax
0x804a188:   89 d0                           	mov eax, edx
0x804a18a:   c1 e0 03                        	shl eax, 3
0x804a18d:   01 d0                           	add eax, edx
0x804a18f:   84 c0                           	test al, al
0x804a191:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a194:   98                              	cwde 
0x804a195:   ba 01 00 00 00                  	mov edx, 1
0x804a19a:   89 c1                           	mov ecx, eax
0x804a19c:   d3 e2                           	shl edx, cl
0x804a19e:   89 d0                           	mov eax, edx
0x804a1a0:   89 c2                           	mov edx, eax
0x804a1a2:   0f b7 85 ba fe ff ff            	movzx eax, word ptr [ebp - 0x146]
0x804a1a9:   09 d0                           	or eax, edx
0x804a1ab:   0f b7 c0                        	movzx eax, ax
0x804a1ae:   c1 e0 0f                        	shl eax, 0xf
0x804a1b1:   88 85 b2 fe ff ff               	mov byte ptr [ebp - 0x14e], al
0x804a1b7:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a1be:   83 45 c8 03                     	add dword ptr [ebp - 0x38], 3
0x804a1c2:   83 7d c8 19                     	cmp dword ptr [ebp - 0x38], 0x19
0x804a1c6:   0f 8f 70 fe ff ff               	jg 0x804a03c <func_1+0x835>
0x804a1cc:   e9 9d 05 00 00                  	jmp 0x804a76e <func_1+0xf67>
0x804a1d1:   66 c7 85 fc fe ff ff 6e a8      	mov word ptr [ebp - 0x104], 0xa86e
0x804a1da:   66 c7 85 fa fe ff ff 71 62      	mov word ptr [ebp - 0x106], 0x6271
0x804a1e3:   c7 85 f4 fe ff ff f2 97 76 7e   	mov dword ptr [ebp - 0x10c], 0x7e7697f2
0x804a1ed:   c7 85 f0 fe ff ff e3 60 6f 32   	mov dword ptr [ebp - 0x110], 0x326f60e3
0x804a1f7:   c7 85 ec fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x114], 0xffffffff
0x804a201:   c7 85 e8 fe ff ff 4f 83 6e 4f   	mov dword ptr [ebp - 0x118], 0x4f6e834f
0x804a20b:   c6 45 ba 3c                     	mov byte ptr [ebp - 0x46], 0x3c
0x804a20f:   c7 85 e4 fe ff ff 68 e0 11 2b   	mov dword ptr [ebp - 0x11c], 0x2b11e068
0x804a219:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x804a220:   66 89 85 fc fe ff ff            	mov word ptr [ebp - 0x104], ax
0x804a227:   0f b7 95 fc fe ff ff            	movzx edx, word ptr [ebp - 0x104]
0x804a22e:   0f bf 45 ce                     	movsx eax, word ptr [ebp - 0x32]
0x804a232:   39 c2                           	cmp edx, eax
0x804a234:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a237:   89 c2                           	mov edx, eax
0x804a239:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x804a240:   01 d0                           	add eax, edx
0x804a242:   0f be d0                        	movsx edx, al
0x804a245:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x804a24c:   0f be c0                        	movsx eax, al
0x804a24f:   0f af c2                        	imul eax, edx
0x804a252:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804a258:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a25c:   b8 52 f2 ff ff                  	mov eax, 0xfffff252
0x804a261:   99                              	cdq 
0x804a262:   f7 fe                           	idiv esi
0x804a264:   30 45 bb                        	xor byte ptr [ebp - 0x45], al
0x804a267:   66 83 bd fc fe ff ff 00         	cmp word ptr [ebp - 0x104], 0
0x804a26f:   0f 84 7b 03 00 00               	je 0x804a5f0 <func_1+0xde9>
0x804a275:   c6 85 cf fe ff ff ff            	mov byte ptr [ebp - 0x131], 0xff
0x804a27c:   c7 85 c8 fe ff ff b0 2b 9a cf   	mov dword ptr [ebp - 0x138], 0xcf9a2bb0
0x804a286:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a28e:   74 05                           	je 0x804a295 <func_1+0xa8e>
0x804a290:   e9 b1 fc ff ff                  	jmp 0x8049f46 <func_1+0x73f>
0x804a295:   83 7d c0 16                     	cmp dword ptr [ebp - 0x40], 0x16
0x804a299:   66 c7 45 cc 70 b4               	mov word ptr [ebp - 0x34], 0xb470
0x804a29f:   80 bd 2f ff ff ff 01            	cmp byte ptr [ebp - 0xd1], 1
0x804a2a6:   0f 95 c0                        	setne al
0x804a2a9:   0f b6 c0                        	movzx eax, al
0x804a2ac:   66 33 85 fa fe ff ff            	xor ax, word ptr [ebp - 0x106]
0x804a2b3:   98                              	cwde 
0x804a2b4:   8d 90 08 ad ff ff               	lea edx, [eax - 0x52f8]
0x804a2ba:   0f be 85 cf fe ff ff            	movsx eax, byte ptr [ebp - 0x131]
0x804a2c1:   39 c2                           	cmp edx, eax
0x804a2c3:   7e 10                           	jle 0x804a2d5 <func_1+0xace>
0x804a2c5:   80 bd cf fe ff ff 00            	cmp byte ptr [ebp - 0x131], 0
0x804a2cc:   74 07                           	je 0x804a2d5 <func_1+0xace>
0x804a2ce:   b8 01 00 00 00                  	mov eax, 1
0x804a2d3:   eb 05                           	jmp 0x804a2da <func_1+0xad3>
0x804a2d5:   b8 00 00 00 00                  	mov eax, 0
0x804a2da:   89 c2                           	mov edx, eax
0x804a2dc:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a2df:   29 c2                           	sub edx, eax
0x804a2e1:   89 d0                           	mov eax, edx
0x804a2e3:   0f be c0                        	movsx eax, al
0x804a2e6:   c1 e0 05                        	shl eax, 5
0x804a2e9:   85 c0                           	test eax, eax
0x804a2eb:   0f 84 0b 01 00 00               	je 0x804a3fc <func_1+0xbf5>
0x804a2f1:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a2f4:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a2f7:   0f 97 c0                        	seta al
0x804a2fa:   0f b6 c0                        	movzx eax, al
0x804a2fd:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a300:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a303:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a306:   b8 01 00 00 00                  	mov eax, 1
0x804a30b:   99                              	cdq 
0x804a30c:   f7 7d a0                        	idiv dword ptr [ebp - 0x60]
0x804a30f:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x804a312:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x804a319:   0f be 95 6d ff ff ff            	movsx edx, byte ptr [ebp - 0x93]
0x804a320:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x804a327:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a32b:   0f be 7d b3                     	movsx edi, byte ptr [ebp - 0x4d]
0x804a32f:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a335:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x804a339:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a33f:   0f b7 7d d8                     	movzx edi, word ptr [ebp - 0x28]
0x804a343:   89 bd 78 fe ff ff               	mov dword ptr [ebp - 0x188], edi
0x804a349:   0f b7 5d cc                     	movzx ebx, word ptr [ebp - 0x34]
0x804a34d:   89 9d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ebx
0x804a353:   0f bf 7d ce                     	movsx edi, word ptr [ebp - 0x32]
0x804a357:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a35d:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x804a361:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a367:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a36b:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804a371:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804a375:   0f be 5d ef                     	movsx ebx, byte ptr [ebp - 0x11]
0x804a379:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a37c:   50                              	push eax
0x804a37d:   52                              	push edx
0x804a37e:   51                              	push ecx
0x804a37f:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a385:   56                              	push esi
0x804a386:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a38c:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a392:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a398:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a39b:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a3a1:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a3a7:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a3ad:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a3b3:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a3b9:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a3bc:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a3c2:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a3c5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a3c8:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a3ce:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a3d1:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a3d4:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a3d7:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a3da:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a3dd:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3e0:   57                              	push edi
0x804a3e1:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3e4:   53                              	push ebx
0x804a3e5:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a3e8:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a3eb:   e8 36 f2 ff ff                  	call 0x8049626 <set_var>
0x804a3f0:   83 c4 7c                        	add esp, 0x7c
0x804a3f3:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a3f7:   e9 41 05 00 00                  	jmp 0x804a93d <func_1+0x1136>
0x804a3fc:   80 4d ef 68                     	or byte ptr [ebp - 0x11], 0x68
0x804a400:   0f be 5d ef                     	movsx ebx, byte ptr [ebp - 0x11]
0x804a404:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a407:   89 c6                           	mov esi, eax
0x804a409:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a40c:   89 c7                           	mov edi, eax
0x804a40e:   8b 4d c0                        	mov ecx, dword ptr [ebp - 0x40]
0x804a411:   ba ab aa aa 2a                  	mov edx, 0x2aaaaaab
0x804a416:   89 c8                           	mov eax, ecx
0x804a418:   f7 ea                           	imul edx
0x804a41a:   89 c8                           	mov eax, ecx
0x804a41c:   c1 f8 1f                        	sar eax, 0x1f
0x804a41f:   29 d0                           	sub eax, edx
0x804a421:   89 c2                           	mov edx, eax
0x804a423:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a427:   39 c2                           	cmp edx, eax
0x804a429:   0f 9c c0                        	setl al
0x804a42c:   0f b6 c0                        	movzx eax, al
0x804a42f:   29 c7                           	sub edi, eax
0x804a431:   89 fa                           	mov edx, edi
0x804a433:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a436:   89 d1                           	mov ecx, edx
0x804a438:   21 c1                           	and ecx, eax
0x804a43a:   89 f0                           	mov eax, esi
0x804a43c:   ba 00 00 00 00                  	mov edx, 0
0x804a441:   66 f7 f1                        	div cx
0x804a444:   89 d0                           	mov eax, edx
0x804a446:   0f b7 c0                        	movzx eax, ax
0x804a449:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a44c:   0f 9f c0                        	setg al
0x804a44f:   0f b6 c0                        	movzx eax, al
0x804a452:   8d 14 03                        	lea edx, [ebx + eax]
0x804a455:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804a459:   31 d0                           	xor eax, edx
0x804a45b:   83 f8 07                        	cmp eax, 7
0x804a45e:   0f 9f c0                        	setg al
0x804a461:   0f b6 d0                        	movzx edx, al
0x804a464:   0f b6 85 2f ff ff ff            	movzx eax, byte ptr [ebp - 0xd1]
0x804a46b:   39 c2                           	cmp edx, eax
0x804a46d:   0f 9d c0                        	setge al
0x804a470:   0f b6 d0                        	movzx edx, al
0x804a473:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x804a47a:   09 d0                           	or eax, edx
0x804a47c:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a47f:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x804a486:   0f b6 d0                        	movzx edx, al
0x804a489:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a48c:   0f b6 c0                        	movzx eax, al
0x804a48f:   01 d0                           	add eax, edx
0x804a491:   85 c0                           	test eax, eax
0x804a493:   74 0e                           	je 0x804a4a3 <func_1+0xc9c>
0x804a495:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804a49a:   74 07                           	je 0x804a4a3 <func_1+0xc9c>
0x804a49c:   b8 01 00 00 00                  	mov eax, 1
0x804a4a1:   eb 05                           	jmp 0x804a4a8 <func_1+0xca1>
0x804a4a3:   b8 00 00 00 00                  	mov eax, 0
0x804a4a8:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a4ab:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a4ae:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x804a4b1:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a4b4:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x804a4b7:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a4be:   0f 84 a1 00 00 00               	je 0x804a565 <func_1+0xd5e>
0x804a4c4:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a4c7:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a4ca:   0f b6 85 27 ff ff ff            	movzx eax, byte ptr [ebp - 0xd9]
0x804a4d1:   83 f0 58                        	xor eax, 0x58
0x804a4d4:   88 85 27 ff ff ff               	mov byte ptr [ebp - 0xd9], al
0x804a4da:   0f b6 95 27 ff ff ff            	movzx edx, byte ptr [ebp - 0xd9]
0x804a4e1:   0f be 85 cf fe ff ff            	movsx eax, byte ptr [ebp - 0x131]
0x804a4e8:   39 c2                           	cmp edx, eax
0x804a4ea:   0f b6 85 cf fe ff ff            	movzx eax, byte ptr [ebp - 0x131]
0x804a4f1:   0f b6 c0                        	movzx eax, al
0x804a4f4:   8d 50 f0                        	lea edx, [eax - 0x10]
0x804a4f7:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a4fb:   29 c2                           	sub edx, eax
0x804a4fd:   89 d0                           	mov eax, edx
0x804a4ff:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a502:   0f 95 c0                        	setne al
0x804a505:   0f b6 c0                        	movzx eax, al
0x804a508:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a50e:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a514:   66 2b 85 fc fe ff ff            	sub ax, word ptr [ebp - 0x104]
0x804a51b:   89 c1                           	mov ecx, eax
0x804a51d:   0f bf c1                        	movsx eax, cx
0x804a520:   69 c0 72 1c 00 00               	imul eax, eax, 0x1c72
0x804a526:   c1 e8 10                        	shr eax, 0x10
0x804a529:   89 c2                           	mov edx, eax
0x804a52b:   89 c8                           	mov eax, ecx
0x804a52d:   66 c1 f8 0f                     	sar ax, 0xf
0x804a531:   29 c2                           	sub edx, eax
0x804a533:   89 d0                           	mov eax, edx
0x804a535:   c1 e0 03                        	shl eax, 3
0x804a538:   01 d0                           	add eax, edx
0x804a53a:   29 c1                           	sub ecx, eax
0x804a53c:   89 ca                           	mov edx, ecx
0x804a53e:   0f bf c2                        	movsx eax, dx
0x804a541:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x804a544:   85 c0                           	test eax, eax
0x804a546:   75 06                           	jne 0x804a54e <func_1+0xd47>
0x804a548:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a54c:   74 07                           	je 0x804a555 <func_1+0xd4e>
0x804a54e:   b8 01 00 00 00                  	mov eax, 1
0x804a553:   eb 05                           	jmp 0x804a55a <func_1+0xd53>
0x804a555:   b8 00 00 00 00                  	mov eax, 0
0x804a55a:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a560:   e9 d4 01 00 00                  	jmp 0x804a739 <func_1+0xf32>
0x804a565:   c7 85 c4 fe ff ff f8 4b 60 17   	mov dword ptr [ebp - 0x13c], 0x17604bf8
0x804a56f:   c7 85 c0 fe ff ff 48 35 57 bd   	mov dword ptr [ebp - 0x140], 0xbd573548
0x804a579:   c7 85 c0 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x140], 0xfffffffe
0x804a583:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a589:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a58c:   0f 96 c0                        	setbe al
0x804a58f:   0f b6 d0                        	movzx edx, al
0x804a592:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a596:   0f b6 c0                        	movzx eax, al
0x804a599:   89 c1                           	mov ecx, eax
0x804a59b:   d3 e2                           	shl edx, cl
0x804a59d:   89 d0                           	mov eax, edx
0x804a59f:   3d bd 00 00 00                  	cmp eax, 0xbd
0x804a5a4:   0f 9e c0                        	setle al
0x804a5a7:   0f b6 c0                        	movzx eax, al
0x804a5aa:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x804a5ad:   85 c0                           	test eax, eax
0x804a5af:   75 09                           	jne 0x804a5ba <func_1+0xdb3>
0x804a5b1:   80 bd 67 ff ff ff 00            	cmp byte ptr [ebp - 0x99], 0
0x804a5b8:   74 07                           	je 0x804a5c1 <func_1+0xdba>
0x804a5ba:   b8 01 00 00 00                  	mov eax, 1
0x804a5bf:   eb 05                           	jmp 0x804a5c6 <func_1+0xdbf>
0x804a5c1:   b8 00 00 00 00                  	mov eax, 0
0x804a5c6:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a5cc:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a5d2:   8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x804a5d5:   ba 00 00 00 00                  	mov edx, 0
0x804a5da:   f7 f1                           	div ecx
0x804a5dc:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a5e0:   39 c2                           	cmp edx, eax
0x804a5e2:   0f 94 c0                        	sete al
0x804a5e5:   0f b6 c0                        	movzx eax, al
0x804a5e8:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a5eb:   e9 49 01 00 00                  	jmp 0x804a739 <func_1+0xf32>
0x804a5f0:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a5fa:   c7 85 dc fe ff ff fe 81 47 68   	mov dword ptr [ebp - 0x124], 0x684781fe
0x804a604:   c7 85 d8 fe ff ff ab 9b 4c 2b   	mov dword ptr [ebp - 0x128], 0x2b4c9bab
0x804a60e:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x804a618:   83 7d e0 01                     	cmp dword ptr [ebp - 0x20], 1
0x804a61c:   0f 84 84 00 00 00               	je 0x804a6a6 <func_1+0xe9f>
0x804a622:   c7 85 d0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x130], 0xffffffff
0x804a62c:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a62f:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x804a632:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a635:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a638:   66 c7 45 cc 65 c0               	mov word ptr [ebp - 0x34], 0xc065
0x804a63e:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804a644:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a647:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a64a:   30 45 d7                        	xor byte ptr [ebp - 0x29], al
0x804a64d:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a653:   89 c2                           	mov edx, eax
0x804a655:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a658:   09 d0                           	or eax, edx
0x804a65a:   0f be d0                        	movsx edx, al
0x804a65d:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a663:   0f be c0                        	movsx eax, al
0x804a666:   29 c2                           	sub edx, eax
0x804a668:   89 d0                           	mov eax, edx
0x804a66a:   20 45 ef                        	and byte ptr [ebp - 0x11], al
0x804a66d:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x804a671:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a674:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a677:   3c e3                           	cmp al, 0xe3
0x804a679:   74 0d                           	je 0x804a688 <func_1+0xe81>
0x804a67b:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a67f:   74 07                           	je 0x804a688 <func_1+0xe81>
0x804a681:   b8 01 00 00 00                  	mov eax, 1
0x804a686:   eb 05                           	jmp 0x804a68d <func_1+0xe86>
0x804a688:   b8 00 00 00 00                  	mov eax, 0
0x804a68d:   85 c0                           	test eax, eax
0x804a68f:   0f 95 c0                        	setne al
0x804a692:   0f b6 c0                        	movzx eax, al
0x804a695:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a698:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a69e:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a6a4:   eb 19                           	jmp 0x804a6bf <func_1+0xeb8>
0x804a6a6:   66 83 7d d8 00                  	cmp word ptr [ebp - 0x28], 0
0x804a6ab:   74 07                           	je 0x804a6b4 <func_1+0xead>
0x804a6ad:   b8 95 a7 f5 7f                  	mov eax, 0x7ff5a795
0x804a6b2:   eb 05                           	jmp 0x804a6b9 <func_1+0xeb2>
0x804a6b4:   b8 94 a7 f5 7f                  	mov eax, 0x7ff5a794
0x804a6b9:   21 85 e0 fe ff ff               	and dword ptr [ebp - 0x120], eax
0x804a6bf:   0f bf 45 a6                     	movsx eax, word ptr [ebp - 0x5a]
0x804a6c3:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a6c6:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a6cc:   89 c2                           	mov edx, eax
0x804a6ce:   89 d0                           	mov eax, edx
0x804a6d0:   01 c0                           	add eax, eax
0x804a6d2:   01 c2                           	add edx, eax
0x804a6d4:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a6da:   01 d0                           	add eax, edx
0x804a6dc:   08 45 b3                        	or byte ptr [ebp - 0x4d], al
0x804a6df:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a6e5:   83 c0 01                        	add eax, 1
0x804a6e8:   88 45 b2                        	mov byte ptr [ebp - 0x4e], al
0x804a6eb:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a6ef:   8d 50 01                        	lea edx, [eax + 1]
0x804a6f2:   88 55 ba                        	mov byte ptr [ebp - 0x46], dl
0x804a6f5:   0f b6 c0                        	movzx eax, al
0x804a6f8:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a6fe:   0f bf 45 ce                     	movsx eax, word ptr [ebp - 0x32]
0x804a702:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a708:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a70e:   0f b7 4d cc                     	movzx ecx, word ptr [ebp - 0x34]
0x804a712:   8b 95 e8 fe ff ff               	mov edx, dword ptr [ebp - 0x118]
0x804a718:   0f b7 d2                        	movzx edx, dx
0x804a71b:   01 ca                           	add edx, ecx
0x804a71d:   81 e2 8c 00 00 00               	and edx, 0x8c
0x804a723:   81 f2 66 7d d8 ac               	xor edx, 0xacd87d66
0x804a729:   21 d0                           	and eax, edx
0x804a72b:   3d f7 98 00 00                  	cmp eax, 0x98f7
0x804a730:   0f 95 c0                        	setne al
0x804a733:   0f b6 c0                        	movzx eax, al
0x804a736:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a739:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a73d:   83 e8 01                        	sub eax, 1
0x804a740:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x804a744:   80 7d db 45                     	cmp byte ptr [ebp - 0x25], 0x45
0x804a748:   74 04                           	je 0x804a74e <func_1+0xf47>
0x804a74a:   80 7d ba 00                     	cmp byte ptr [ebp - 0x46], 0
0x804a74e:   c7 85 34 ff ff ff 46 5e 84 87   	mov dword ptr [ebp - 0xcc], 0x87845e46
0x804a758:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a75e:   83 e8 01                        	sub eax, 1
0x804a761:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804a767:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x804a76e:   0f be 55 bb                     	movsx edx, byte ptr [ebp - 0x45]
0x804a772:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a778:   23 45 9c                        	and eax, dword ptr [ebp - 0x64]
0x804a77b:   85 c0                           	test eax, eax
0x804a77d:   75 06                           	jne 0x804a785 <func_1+0xf7e>
0x804a77f:   80 7d b2 00                     	cmp byte ptr [ebp - 0x4e], 0
0x804a783:   74 07                           	je 0x804a78c <func_1+0xf85>
0x804a785:   b8 01 00 00 00                  	mov eax, 1
0x804a78a:   eb 05                           	jmp 0x804a791 <func_1+0xf8a>
0x804a78c:   b8 00 00 00 00                  	mov eax, 0
0x804a791:   39 d0                           	cmp eax, edx
0x804a793:   0f 9e c0                        	setle al
0x804a796:   0f b6 c0                        	movzx eax, al
0x804a799:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x804a79c:   0f b6 f2                        	movzx esi, dl
0x804a79f:   99                              	cdq 
0x804a7a0:   f7 fe                           	idiv esi
0x804a7a2:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x804a7a5:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a7ab:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a7b1:   eb 19                           	jmp 0x804a7cc <func_1+0xfc5>
0x804a7b3:   c7 85 18 ff ff ff 6d 45 fb 00   	mov dword ptr [ebp - 0xe8], 0xfb456d
0x804a7bd:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a7c3:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a7c6:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a7c9:   21 45 c8                        	and dword ptr [ebp - 0x38], eax
0x804a7cc:   0f bf 45 a6                     	movsx eax, word ptr [ebp - 0x5a]
0x804a7d0:   83 e0 07                        	and eax, 7
0x804a7d3:   89 c2                           	mov edx, eax
0x804a7d5:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a7db:   39 c2                           	cmp edx, eax
0x804a7dd:   0f 92 c0                        	setb al
0x804a7e0:   0f b6 c0                        	movzx eax, al
0x804a7e3:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a7e6:   0f 94 c0                        	sete al
0x804a7e9:   0f b6 c0                        	movzx eax, al
0x804a7ec:   66 89 85 24 ff ff ff            	mov word ptr [ebp - 0xdc], ax
0x804a7f3:   83 85 20 ff ff ff 01            	add dword ptr [ebp - 0xe0], 1
0x804a7fa:   eb 5d                           	jmp 0x804a859 <func_1+0x1052>
0x804a7fc:   c7 85 50 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0xb0], 0xfffffff9
0x804a806:   c7 85 4c ff ff ff be 71 37 68   	mov dword ptr [ebp - 0xb4], 0x683771be
0x804a810:   c7 85 48 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xb8], 7
0x804a81a:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x804a824:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a827:   89 c2                           	mov edx, eax
0x804a829:   b8 01 00 00 00                  	mov eax, 1
0x804a82e:   0f b6 c0                        	movzx eax, al
0x804a831:   f6 f2                           	div dl
0x804a833:   84 c0                           	test al, al
0x804a835:   75 06                           	jne 0x804a83d <func_1+0x1036>
0x804a837:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804a83b:   74 07                           	je 0x804a844 <func_1+0x103d>
0x804a83d:   b8 01 00 00 00                  	mov eax, 1
0x804a842:   eb 05                           	jmp 0x804a849 <func_1+0x1042>
0x804a844:   b8 00 00 00 00                  	mov eax, 0
0x804a849:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x804a84c:   0f 9d c0                        	setge al
0x804a84f:   0f b6 c0                        	movzx eax, al
0x804a852:   09 45 a0                        	or dword ptr [ebp - 0x60], eax
0x804a855:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x804a859:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x804a860:   0f be 95 6d ff ff ff            	movsx edx, byte ptr [ebp - 0x93]
0x804a867:   0f bf 8d 6e ff ff ff            	movsx ecx, word ptr [ebp - 0x92]
0x804a86e:   0f be 75 b2                     	movsx esi, byte ptr [ebp - 0x4e]
0x804a872:   0f be 5d b3                     	movsx ebx, byte ptr [ebp - 0x4d]
0x804a876:   89 9d 80 fe ff ff               	mov dword ptr [ebp - 0x180], ebx
0x804a87c:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804a880:   89 bd 7c fe ff ff               	mov dword ptr [ebp - 0x184], edi
0x804a886:   0f b7 5d d8                     	movzx ebx, word ptr [ebp - 0x28]
0x804a88a:   89 9d 78 fe ff ff               	mov dword ptr [ebp - 0x188], ebx
0x804a890:   0f b7 7d cc                     	movzx edi, word ptr [ebp - 0x34]
0x804a894:   89 bd 74 fe ff ff               	mov dword ptr [ebp - 0x18c], edi
0x804a89a:   0f bf 5d ce                     	movsx ebx, word ptr [ebp - 0x32]
0x804a89e:   89 9d 70 fe ff ff               	mov dword ptr [ebp - 0x190], ebx
0x804a8a4:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x804a8a8:   89 bd 6c fe ff ff               	mov dword ptr [ebp - 0x194], edi
0x804a8ae:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a8b2:   89 9d 68 fe ff ff               	mov dword ptr [ebp - 0x198], ebx
0x804a8b8:   0f bf 7d e6                     	movsx edi, word ptr [ebp - 0x1a]
0x804a8bc:   0f be 5d ef                     	movsx ebx, byte ptr [ebp - 0x11]
0x804a8c0:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a8c3:   50                              	push eax
0x804a8c4:   52                              	push edx
0x804a8c5:   51                              	push ecx
0x804a8c6:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a8cc:   56                              	push esi
0x804a8cd:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a8d3:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a8d9:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a8df:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a8e2:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a8e8:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a8ee:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a8f4:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a8fa:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a900:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a903:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a909:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a90c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a90f:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a915:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a918:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a91b:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a91e:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a921:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a924:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a927:   57                              	push edi
0x804a928:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a92b:   53                              	push ebx
0x804a92c:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a92f:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a932:   e8 ef ec ff ff                  	call 0x8049626 <set_var>
0x804a937:   83 c4 7c                        	add esp, 0x7c
0x804a93a:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a93d:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a940:   5b                              	pop ebx
0x804a941:   5e                              	pop esi
0x804a942:   5f                              	pop edi
0x804a943:   5d                              	pop ebp
0x804a944:   c3                              	ret 
; function: main at 0x804a945 -- 0x804ad71
0x804a945:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a949:   83 e4 f0                        	and esp, 0xfffffff0
0x804a94c:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a94f:   55                              	push ebp
0x804a950:   89 e5                           	mov ebp, esp
0x804a952:   53                              	push ebx
0x804a953:   51                              	push ecx
0x804a954:   83 ec 10                        	sub esp, 0x10
0x804a957:   e8 34 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a95c:   81 c3 a4 26 00 00               	add ebx, 0x26a4
0x804a962:   89 c8                           	mov eax, ecx
0x804a964:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a96b:   83 38 02                        	cmp dword ptr [eax], 2
0x804a96e:   75 26                           	jne 0x804a996 <main+0x51>
0x804a970:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a973:   83 c0 04                        	add eax, 4
0x804a976:   8b 00                           	mov eax, dword ptr [eax]
0x804a978:   83 ec 08                        	sub esp, 8
0x804a97b:   8d 93 58 de ff ff               	lea edx, [ebx - 0x21a8]
0x804a981:   52                              	push edx
0x804a982:   50                              	push eax
0x804a983:   e8 78 d9 ff ff                  	call 0x8048300 <strcmp>
0x804a988:   83 c4 10                        	add esp, 0x10
0x804a98b:   85 c0                           	test eax, eax
0x804a98d:   75 07                           	jne 0x804a996 <main+0x51>
0x804a98f:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a996:   e8 bb da ff ff                  	call 0x8048456 <platform_main_begin>
0x804a99b:   e8 cb ea ff ff                  	call 0x804946b <crc32_gentab>
0x804a9a0:   e8 62 ee ff ff                  	call 0x8049807 <func_1>
0x804a9a5:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a9ab:   89 c2                           	mov edx, eax
0x804a9ad:   83 ec 04                        	sub esp, 4
0x804a9b0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9b3:   8d 83 5a de ff ff               	lea eax, [ebx - 0x21a6]
0x804a9b9:   50                              	push eax
0x804a9ba:   52                              	push edx
0x804a9bb:   e8 b7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9c0:   83 c4 10                        	add esp, 0x10
0x804a9c3:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a9c9:   83 ec 04                        	sub esp, 4
0x804a9cc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9cf:   8d 93 5e de ff ff               	lea edx, [ebx - 0x21a2]
0x804a9d5:   52                              	push edx
0x804a9d6:   50                              	push eax
0x804a9d7:   e8 9b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9dc:   83 c4 10                        	add esp, 0x10
0x804a9df:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a9e6:   0f be c0                        	movsx eax, al
0x804a9e9:   83 ec 04                        	sub esp, 4
0x804a9ec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ef:   8d 93 62 de ff ff               	lea edx, [ebx - 0x219e]
0x804a9f5:   52                              	push edx
0x804a9f6:   50                              	push eax
0x804a9f7:   e8 7b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9fc:   83 c4 10                        	add esp, 0x10
0x804a9ff:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aa05:   89 c2                           	mov edx, eax
0x804aa07:   83 ec 04                        	sub esp, 4
0x804aa0a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa0d:   8d 83 67 de ff ff               	lea eax, [ebx - 0x2199]
0x804aa13:   50                              	push eax
0x804aa14:   52                              	push edx
0x804aa15:   e8 5d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa1a:   83 c4 10                        	add esp, 0x10
0x804aa1d:   0f b7 83 c4 04 00 00            	movzx eax, word ptr [ebx + 0x4c4]
0x804aa24:   98                              	cwde 
0x804aa25:   83 ec 04                        	sub esp, 4
0x804aa28:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa2b:   8d 93 6c de ff ff               	lea edx, [ebx - 0x2194]
0x804aa31:   52                              	push edx
0x804aa32:   50                              	push eax
0x804aa33:   e8 3f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa38:   83 c4 10                        	add esp, 0x10
0x804aa3b:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aa41:   89 c2                           	mov edx, eax
0x804aa43:   83 ec 04                        	sub esp, 4
0x804aa46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa49:   8d 83 71 de ff ff               	lea eax, [ebx - 0x218f]
0x804aa4f:   50                              	push eax
0x804aa50:   52                              	push edx
0x804aa51:   e8 21 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa56:   83 c4 10                        	add esp, 0x10
0x804aa59:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804aa5f:   89 c2                           	mov edx, eax
0x804aa61:   83 ec 04                        	sub esp, 4
0x804aa64:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa67:   8d 83 76 de ff ff               	lea eax, [ebx - 0x218a]
0x804aa6d:   50                              	push eax
0x804aa6e:   52                              	push edx
0x804aa6f:   e8 03 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa74:   83 c4 10                        	add esp, 0x10
0x804aa77:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aa7d:   83 ec 04                        	sub esp, 4
0x804aa80:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa83:   8d 93 7b de ff ff               	lea edx, [ebx - 0x2185]
0x804aa89:   52                              	push edx
0x804aa8a:   50                              	push eax
0x804aa8b:   e8 e7 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa90:   83 c4 10                        	add esp, 0x10
0x804aa93:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aa99:   83 ec 04                        	sub esp, 4
0x804aa9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9f:   8d 93 81 de ff ff               	lea edx, [ebx - 0x217f]
0x804aaa5:   52                              	push edx
0x804aaa6:   50                              	push eax
0x804aaa7:   e8 cb ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaac:   83 c4 10                        	add esp, 0x10
0x804aaaf:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aab5:   83 ec 04                        	sub esp, 4
0x804aab8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aabb:   8d 93 87 de ff ff               	lea edx, [ebx - 0x2179]
0x804aac1:   52                              	push edx
0x804aac2:   50                              	push eax
0x804aac3:   e8 af ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac8:   83 c4 10                        	add esp, 0x10
0x804aacb:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804aad1:   83 ec 04                        	sub esp, 4
0x804aad4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad7:   8d 93 8d de ff ff               	lea edx, [ebx - 0x2173]
0x804aadd:   52                              	push edx
0x804aade:   50                              	push eax
0x804aadf:   e8 93 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae4:   83 c4 10                        	add esp, 0x10
0x804aae7:   0f b6 83 cc 04 00 00            	movzx eax, byte ptr [ebx + 0x4cc]
0x804aaee:   0f b6 c0                        	movzx eax, al
0x804aaf1:   83 ec 04                        	sub esp, 4
0x804aaf4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf7:   8d 93 93 de ff ff               	lea edx, [ebx - 0x216d]
0x804aafd:   52                              	push edx
0x804aafe:   50                              	push eax
0x804aaff:   e8 73 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab04:   83 c4 10                        	add esp, 0x10
0x804ab07:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ab0d:   89 c2                           	mov edx, eax
0x804ab0f:   83 ec 04                        	sub esp, 4
0x804ab12:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab15:   8d 83 99 de ff ff               	lea eax, [ebx - 0x2167]
0x804ab1b:   50                              	push eax
0x804ab1c:   52                              	push edx
0x804ab1d:   e8 55 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab22:   83 c4 10                        	add esp, 0x10
0x804ab25:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ab2b:   89 c2                           	mov edx, eax
0x804ab2d:   83 ec 04                        	sub esp, 4
0x804ab30:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab33:   8d 83 9f de ff ff               	lea eax, [ebx - 0x2161]
0x804ab39:   50                              	push eax
0x804ab3a:   52                              	push edx
0x804ab3b:   e8 37 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab40:   83 c4 10                        	add esp, 0x10
0x804ab43:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804ab4a:   0f be c0                        	movsx eax, al
0x804ab4d:   83 ec 04                        	sub esp, 4
0x804ab50:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab53:   8d 93 a5 de ff ff               	lea edx, [ebx - 0x215b]
0x804ab59:   52                              	push edx
0x804ab5a:   50                              	push eax
0x804ab5b:   e8 17 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab60:   83 c4 10                        	add esp, 0x10
0x804ab63:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ab69:   89 c2                           	mov edx, eax
0x804ab6b:   83 ec 04                        	sub esp, 4
0x804ab6e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab71:   8d 83 ab de ff ff               	lea eax, [ebx - 0x2155]
0x804ab77:   50                              	push eax
0x804ab78:   52                              	push edx
0x804ab79:   e8 f9 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab7e:   83 c4 10                        	add esp, 0x10
0x804ab81:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ab87:   83 ec 04                        	sub esp, 4
0x804ab8a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab8d:   8d 93 b1 de ff ff               	lea edx, [ebx - 0x214f]
0x804ab93:   52                              	push edx
0x804ab94:   50                              	push eax
0x804ab95:   e8 dd e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab9a:   83 c4 10                        	add esp, 0x10
0x804ab9d:   0f b7 83 ce 04 00 00            	movzx eax, word ptr [ebx + 0x4ce]
0x804aba4:   98                              	cwde 
0x804aba5:   83 ec 04                        	sub esp, 4
0x804aba8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abab:   8d 93 b7 de ff ff               	lea edx, [ebx - 0x2149]
0x804abb1:   52                              	push edx
0x804abb2:   50                              	push eax
0x804abb3:   e8 bf e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb8:   83 c4 10                        	add esp, 0x10
0x804abbb:   0f b7 83 d0 04 00 00            	movzx eax, word ptr [ebx + 0x4d0]
0x804abc2:   0f b7 c0                        	movzx eax, ax
0x804abc5:   83 ec 04                        	sub esp, 4
0x804abc8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abcb:   8d 93 bd de ff ff               	lea edx, [ebx - 0x2143]
0x804abd1:   52                              	push edx
0x804abd2:   50                              	push eax
0x804abd3:   e8 9f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd8:   83 c4 10                        	add esp, 0x10
0x804abdb:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804abe2:   0f b7 c0                        	movzx eax, ax
0x804abe5:   83 ec 04                        	sub esp, 4
0x804abe8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abeb:   8d 93 c3 de ff ff               	lea edx, [ebx - 0x213d]
0x804abf1:   52                              	push edx
0x804abf2:   50                              	push eax
0x804abf3:   e8 7f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf8:   83 c4 10                        	add esp, 0x10
0x804abfb:   0f b6 83 5e 00 00 00            	movzx eax, byte ptr [ebx + 0x5e]
0x804ac02:   0f be c0                        	movsx eax, al
0x804ac05:   83 ec 04                        	sub esp, 4
0x804ac08:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac0b:   8d 93 c9 de ff ff               	lea edx, [ebx - 0x2137]
0x804ac11:   52                              	push edx
0x804ac12:   50                              	push eax
0x804ac13:   e8 5f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac18:   83 c4 10                        	add esp, 0x10
0x804ac1b:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ac21:   89 c2                           	mov edx, eax
0x804ac23:   83 ec 04                        	sub esp, 4
0x804ac26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac29:   8d 83 cf de ff ff               	lea eax, [ebx - 0x2131]
0x804ac2f:   50                              	push eax
0x804ac30:   52                              	push edx
0x804ac31:   e8 41 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac36:   83 c4 10                        	add esp, 0x10
0x804ac39:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804ac40:   0f be c0                        	movsx eax, al
0x804ac43:   83 ec 04                        	sub esp, 4
0x804ac46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac49:   8d 93 d5 de ff ff               	lea edx, [ebx - 0x212b]
0x804ac4f:   52                              	push edx
0x804ac50:   50                              	push eax
0x804ac51:   e8 21 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac56:   83 c4 10                        	add esp, 0x10
0x804ac59:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ac5f:   89 c2                           	mov edx, eax
0x804ac61:   83 ec 04                        	sub esp, 4
0x804ac64:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac67:   8d 83 db de ff ff               	lea eax, [ebx - 0x2125]
0x804ac6d:   50                              	push eax
0x804ac6e:   52                              	push edx
0x804ac6f:   e8 03 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac74:   83 c4 10                        	add esp, 0x10
0x804ac77:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ac7d:   89 c2                           	mov edx, eax
0x804ac7f:   83 ec 04                        	sub esp, 4
0x804ac82:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac85:   8d 83 e1 de ff ff               	lea eax, [ebx - 0x211f]
0x804ac8b:   50                              	push eax
0x804ac8c:   52                              	push edx
0x804ac8d:   e8 e5 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac92:   83 c4 10                        	add esp, 0x10
0x804ac95:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804ac9c:   0f be c0                        	movsx eax, al
0x804ac9f:   83 ec 04                        	sub esp, 4
0x804aca2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca5:   8d 93 e7 de ff ff               	lea edx, [ebx - 0x2119]
0x804acab:   52                              	push edx
0x804acac:   50                              	push eax
0x804acad:   e8 c5 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acb2:   83 c4 10                        	add esp, 0x10
0x804acb5:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804acbb:   89 c2                           	mov edx, eax
0x804acbd:   83 ec 04                        	sub esp, 4
0x804acc0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acc3:   8d 83 ed de ff ff               	lea eax, [ebx - 0x2113]
0x804acc9:   50                              	push eax
0x804acca:   52                              	push edx
0x804accb:   e8 a7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd0:   83 c4 10                        	add esp, 0x10
0x804acd3:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804acda:   98                              	cwde 
0x804acdb:   83 ec 04                        	sub esp, 4
0x804acde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace1:   8d 93 f3 de ff ff               	lea edx, [ebx - 0x210d]
0x804ace7:   52                              	push edx
0x804ace8:   50                              	push eax
0x804ace9:   e8 89 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acee:   83 c4 10                        	add esp, 0x10
0x804acf1:   0f b6 83 7a 00 00 00            	movzx eax, byte ptr [ebx + 0x7a]
0x804acf8:   0f be c0                        	movsx eax, al
0x804acfb:   83 ec 04                        	sub esp, 4
0x804acfe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad01:   8d 93 f9 de ff ff               	lea edx, [ebx - 0x2107]
0x804ad07:   52                              	push edx
0x804ad08:   50                              	push eax
0x804ad09:   e8 69 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad0e:   83 c4 10                        	add esp, 0x10
0x804ad11:   0f b7 83 7c 00 00 00            	movzx eax, word ptr [ebx + 0x7c]
0x804ad18:   98                              	cwde 
0x804ad19:   83 ec 04                        	sub esp, 4
0x804ad1c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad1f:   8d 93 ff de ff ff               	lea edx, [ebx - 0x2101]
0x804ad25:   52                              	push edx
0x804ad26:   50                              	push eax
0x804ad27:   e8 4b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad2c:   83 c4 10                        	add esp, 0x10
0x804ad2f:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804ad35:   83 ec 04                        	sub esp, 4
0x804ad38:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad3b:   8d 93 05 df ff ff               	lea edx, [ebx - 0x20fb]
0x804ad41:   52                              	push edx
0x804ad42:   50                              	push eax
0x804ad43:   e8 2f e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad48:   83 c4 10                        	add esp, 0x10
0x804ad4b:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ad51:   f7 d0                           	not eax
0x804ad53:   83 ec 08                        	sub esp, 8
0x804ad56:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad59:   50                              	push eax
0x804ad5a:   e8 07 d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ad5f:   83 c4 10                        	add esp, 0x10
0x804ad62:   b8 00 00 00 00                  	mov eax, 0
0x804ad67:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ad6a:   59                              	pop ecx
0x804ad6b:   5b                              	pop ebx
0x804ad6c:   5d                              	pop ebp
0x804ad6d:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ad70:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ad71 -- 0x804ad75
0x804ad71:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ad74:   c3                              	ret 
; data inside code section at 0x804ad75 -- 0x804ad80
0x804ad75:   66 90 66 90 66 90 66 90  66 90 90                  |f.f.f.f.f..     |
; function: __libc_csu_init at 0x804ad80 -- 0x804addd
0x804ad80:   55                              	push ebp
0x804ad81:   57                              	push edi
0x804ad82:   56                              	push esi
0x804ad83:   53                              	push ebx
0x804ad84:   e8 07 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad89:   81 c3 77 22 00 00               	add ebx, 0x2277
0x804ad8f:   83 ec 0c                        	sub esp, 0xc
0x804ad92:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ad96:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ad9c:   e8 2b d5 ff ff                  	call 0x80482cc <_init>
0x804ada1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ada7:   29 c6                           	sub esi, eax
0x804ada9:   c1 fe 02                        	sar esi, 2
0x804adac:   85 f6                           	test esi, esi
0x804adae:   74 25                           	je 0x804add5 <__libc_csu_init+0x55>
0x804adb0:   31 ff                           	xor edi, edi
0x804adb2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804adb8:   83 ec 04                        	sub esp, 4
0x804adbb:   55                              	push ebp
0x804adbc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804adc0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804adc4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804adcb:   83 c7 01                        	add edi, 1
0x804adce:   83 c4 10                        	add esp, 0x10
0x804add1:   39 fe                           	cmp esi, edi
0x804add3:   75 e3                           	jne 0x804adb8 <__libc_csu_init+0x38>
0x804add5:   83 c4 0c                        	add esp, 0xc
0x804add8:   5b                              	pop ebx
0x804add9:   5e                              	pop esi
0x804adda:   5f                              	pop edi
0x804addb:   5d                              	pop ebp
0x804addc:   c3                              	ret 
; data inside code section at 0x804addd -- 0x804ade0
0x804addd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ade0 -- 0x804ade2
0x804ade0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ade4 -- 0x804adf8
0x804ade4:   53                              	push ebx
0x804ade5:   83 ec 08                        	sub esp, 8
0x804ade8:   e8 a3 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aded:   81 c3 13 22 00 00               	add ebx, 0x2213
0x804adf3:   83 c4 08                        	add esp, 8
0x804adf6:   5b                              	pop ebx
0x804adf7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 fc ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804adf8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ae08:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ae18:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ae28:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ae38:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ae48:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ae58:   31 00 67 5f 32 00 67 5f  34 00 67 5f 32 30 00 67   |1.g_2.g_4.g_20.g|
0x804ae68:   5f 32 31 00 67 5f 34 30  00 67 5f 34 32 00 67 5f   |_21.g_40.g_42.g_|
0x804ae78:   38 34 00 67 5f 31 34 34  00 67 5f 31 36 39 00 67   |84.g_144.g_169.g|
0x804ae88:   5f 31 37 33 00 67 5f 32  30 33 00 67 5f 32 31 35   |_173.g_203.g_215|
0x804ae98:   00 67 5f 32 31 37 00 67  5f 32 31 38 00 67 5f 32   |.g_217.g_218.g_2|
0x804aea8:   32 31 00 67 5f 32 32 33  00 67 5f 32 32 34 00 67   |21.g_223.g_224.g|
0x804aeb8:   5f 32 33 37 00 67 5f 32  39 33 00 67 5f 33 35 30   |_237.g_293.g_350|
0x804aec8:   00 67 5f 34 30 35 00 67  5f 34 31 34 00 67 5f 34   |.g_405.g_414.g_4|
0x804aed8:   31 35 00 67 5f 34 31 38  00 67 5f 34 31 39 00 67   |15.g_418.g_419.g|
0x804aee8:   5f 34 33 39 00 67 5f 34  36 36 00 67 5f 34 36 37   |_439.g_466.g_467|
0x804aef8:   00 67 5f 34 36 38 00 67  5f 34 38 37 00 67 5f 34   |.g_468.g_487.g_4|
0x804af08:   38 38 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |88.....?...~....|
0x804af18:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804af28:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804af38:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804af48:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804af58:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804af68:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804af78:   01                                                 |.               |
; section: .eh_frame_hdr
0x804af78:   01 1b 03 3b b0 02 00 00  55 00 00 00 78 d3 ff ff   |...;....U...x...|
0x804af88:   e0 02 00 00 b8 d3 ff ff  04 03 00 00 08 d4 ff ff   |................|
0x804af98:   cc 02 00 00 de d4 ff ff  18 03 00 00 ee d4 ff ff   |................|
0x804afa8:   38 03 00 00 1c d5 ff ff  5c 03 00 00 3a d5 ff ff   |8.......\...:...|
0x804afb8:   7c 03 00 00 62 d5 ff ff  9c 03 00 00 8c d5 ff ff   ||...b...........|
0x804afc8:   bc 03 00 00 b5 d5 ff ff  dc 03 00 00 f8 d5 ff ff   |................|
0x804afd8:   fc 03 00 00 39 d6 ff ff  1c 04 00 00 91 d6 ff ff   |....9...........|
0x804afe8:   40 04 00 00 e3 d6 ff ff  64 04 00 00 20 d7 ff ff   |@.......d... ...|
0x804aff8:   84 04 00 00 57 d7 ff ff  a4 04 00 00 76 d7 ff ff   |....W.......v...|
0x804b008:   c4 04 00 00 a0 d7 ff ff  e4 04 00 00 cc d7 ff ff   |................|
0x804b018:   04 05 00 00 f7 d7 ff ff  24 05 00 00 40 d8 ff ff   |........$...@...|
0x804b028:   44 05 00 00 87 d8 ff ff  64 05 00 00 e1 d8 ff ff   |D.......d.......|
0x804b038:   88 05 00 00 35 d9 ff ff  ac 05 00 00 74 d9 ff ff   |....5.......t...|
0x804b048:   cc 05 00 00 ad d9 ff ff  ec 05 00 00 cf d9 ff ff   |................|
0x804b058:   0c 06 00 00 1d da ff ff  2c 06 00 00 59 da ff ff   |........,...Y...|
0x804b068:   4c 06 00 00 e2 da ff ff  6c 06 00 00 14 db ff ff   |L.......l.......|
0x804b078:   8c 06 00 00 44 db ff ff  ac 06 00 00 89 db ff ff   |....D...........|
0x804b088:   cc 06 00 00 c8 db ff ff  ec 06 00 00 fa db ff ff   |................|
0x804b098:   0c 07 00 00 26 dc ff ff  2c 07 00 00 44 dc ff ff   |....&...,...D...|
0x804b0a8:   4c 07 00 00 6c dc ff ff  6c 07 00 00 91 dc ff ff   |L...l...l.......|
0x804b0b8:   8c 07 00 00 b6 dc ff ff  ac 07 00 00 ed dc ff ff   |................|
0x804b0c8:   cc 07 00 00 21 dd ff ff  ec 07 00 00 73 dd ff ff   |....!.......s...|
0x804b0d8:   10 08 00 00 bf dd ff ff  34 08 00 00 f6 dd ff ff   |........4.......|
0x804b0e8:   54 08 00 00 27 de ff ff  74 08 00 00 46 de ff ff   |T...'...t...F...|
0x804b0f8:   94 08 00 00 70 de ff ff  b4 08 00 00 98 de ff ff   |....p...........|
0x804b108:   d4 08 00 00 c1 de ff ff  f4 08 00 00 fd de ff ff   |................|
0x804b118:   14 09 00 00 37 df ff ff  34 09 00 00 8a df ff ff   |....7...4.......|
0x804b128:   58 09 00 00 d7 df ff ff  7c 09 00 00 0f e0 ff ff   |X.......|.......|
0x804b138:   9c 09 00 00 41 e0 ff ff  bc 09 00 00 55 e0 ff ff   |....A.......U...|
0x804b148:   dc 09 00 00 6c e0 ff ff  fc 09 00 00 81 e0 ff ff   |....l...........|
0x804b158:   1c 0a 00 00 97 e0 ff ff  3c 0a 00 00 be e0 ff ff   |........<.......|
0x804b168:   5c 0a 00 00 e3 e0 ff ff  7c 0a 00 00 22 e1 ff ff   |\.......|..."...|
0x804b178:   9c 0a 00 00 5b e1 ff ff  bc 0a 00 00 87 e1 ff ff   |....[...........|
0x804b188:   dc 0a 00 00 ad e1 ff ff  fc 0a 00 00 ef e1 ff ff   |................|
0x804b198:   1c 0b 00 00 31 e2 ff ff  3c 0b 00 00 73 e2 ff ff   |....1...<...s...|
0x804b1a8:   5c 0b 00 00 e8 e2 ff ff  7c 0b 00 00 45 e3 ff ff   |\.......|...E...|
0x804b1b8:   9c 0b 00 00 a2 e3 ff ff  bc 0b 00 00 ff e3 ff ff   |................|
0x804b1c8:   dc 0b 00 00 8f e4 ff ff  fc 0b 00 00 f3 e4 ff ff   |................|
0x804b1d8:   1c 0c 00 00 63 e5 ff ff  3c 0c 00 00 aa e5 ff ff   |....c...<.......|
0x804b1e8:   60 0c 00 00 ff e5 ff ff  80 0c 00 00 46 e6 ff ff   |`...........F...|
0x804b1f8:   a4 0c 00 00 ae e6 ff ff  c8 0c 00 00 8f e8 ff ff   |................|
0x804b208:   f8 0c 00 00 cd f9 ff ff  28 0d 00 00 f9 fd ff ff   |........(.......|
0x804b218:   60 0d 00 00 08 fe ff ff  74 0d 00 00 68 fe ff ff   |`.......t...h...|
0x804b228:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804b22c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b23c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b24c:   34 d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |4........... ...|
0x804b25c:   30 00 00 00 90 d0 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b26c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b27c:   10 00 00 00 54 00 00 00  ac d0 ff ff 08 00 00 00   |....T...........|
0x804b28c:   00 00 00 00 1c 00 00 00  68 00 00 00 be d1 ff ff   |........h.......|
0x804b29c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b2ac:   04 04 00 00 20 00 00 00  88 00 00 00 ae d1 ff ff   |.... ...........|
0x804b2bc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b2cc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b2dc:   b8 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b2ec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b2fc:   b6 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b30c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b31c:   be d1 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b32c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b33c:   c8 d1 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b34c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b35c:   d1 d1 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b36c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b37c:   f4 d1 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b38c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b39c:   15 d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b3ac:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b3bc:   90 01 00 00 49 d2 ff ff  52 00 00 00 00 41 0e 08   |....I...R....A..|
0x804b3cc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b3dc:   1c 00 00 00 b4 01 00 00  77 d2 ff ff 3d 00 00 00   |........w...=...|
0x804b3ec:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b3fc:   1c 00 00 00 d4 01 00 00  94 d2 ff ff 37 00 00 00   |............7...|
0x804b40c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b41c:   1c 00 00 00 f4 01 00 00  ab d2 ff ff 1f 00 00 00   |................|
0x804b42c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b43c:   1c 00 00 00 14 02 00 00  aa d2 ff ff 2a 00 00 00   |............*...|
0x804b44c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b45c:   1c 00 00 00 34 02 00 00  b4 d2 ff ff 2c 00 00 00   |....4.......,...|
0x804b46c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b47c:   1c 00 00 00 54 02 00 00  c0 d2 ff ff 2b 00 00 00   |....T.......+...|
0x804b48c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b49c:   1c 00 00 00 74 02 00 00  cb d2 ff ff 49 00 00 00   |....t.......I...|
0x804b4ac:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b4bc:   1c 00 00 00 94 02 00 00  f4 d2 ff ff 47 00 00 00   |............G...|
0x804b4cc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b4dc:   20 00 00 00 b4 02 00 00  1b d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b4ec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b4fc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 51 d3 ff ff   |.... .......Q...|
0x804b50c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b51c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b52c:   81 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b53c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b54c:   a0 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b55c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b56c:   b9 d3 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b57c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b58c:   bb d3 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b59c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b5ac:   e9 d3 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b5bc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b5cc:   05 d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5dc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b5ec:   6e d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |n...2....A....B.|
0x804b5fc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b60c:   80 d4 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b61c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b62c:   90 d4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b63c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b64c:   b5 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b65c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b66c:   d4 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b67c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b68c:   e6 d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b69c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b6ac:   f2 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6bc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b6cc:   f0 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b6dc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b6ec:   f8 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b6fc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b70c:   fd d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b71c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b72c:   02 d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b73c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b74c:   19 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b75c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b76c:   2d d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |-...R....A....B.|
0x804b77c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b78c:   60 05 00 00 5b d5 ff ff  4c 00 00 00 00 41 0e 08   |`...[...L....A..|
0x804b79c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b7ac:   1c 00 00 00 84 05 00 00  83 d5 ff ff 37 00 00 00   |............7...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b7cc:   1c 00 00 00 a4 05 00 00  9a d5 ff ff 31 00 00 00   |............1...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b7ec:   1c 00 00 00 c4 05 00 00  ab d5 ff ff 1f 00 00 00   |................|
0x804b7fc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b80c:   1c 00 00 00 e4 05 00 00  aa d5 ff ff 2a 00 00 00   |............*...|
0x804b81c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b82c:   1c 00 00 00 04 06 00 00  b4 d5 ff ff 28 00 00 00   |............(...|
0x804b83c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b84c:   1c 00 00 00 24 06 00 00  bc d5 ff ff 29 00 00 00   |....$.......)...|
0x804b85c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b86c:   1c 00 00 00 44 06 00 00  c5 d5 ff ff 3c 00 00 00   |....D.......<...|
0x804b87c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b88c:   1c 00 00 00 64 06 00 00  e1 d5 ff ff 3a 00 00 00   |....d.......:...|
0x804b89c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b8ac:   20 00 00 00 84 06 00 00  fb d5 ff ff 53 00 00 00   | ...........S...|
0x804b8bc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b8cc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 2a d6 ff ff   |.... .......*...|
0x804b8dc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b8ec:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b8fc:   53 d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |S...8....A....B.|
0x804b90c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b91c:   6b d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |k...2....A....B.|
0x804b92c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b93c:   7d d6 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b94c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b95c:   71 d6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |q........A....B.|
0x804b96c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b97c:   68 d6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804b98c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b99c:   5d d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804b9ac:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b9bc:   53 d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |S...'....A....B.|
0x804b9cc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b9dc:   5a d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |Z...%....A....B.|
0x804b9ec:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b9fc:   5f d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |_...?....A....B.|
0x804ba0c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804ba1c:   7e d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |~...9....A....B.|
0x804ba2c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804ba3c:   97 d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804ba4c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804ba5c:   a3 d6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804ba6c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804ba7c:   a9 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba8c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804ba9c:   cb d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804baac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804babc:   ed d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bacc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804badc:   0f d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804baec:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bafc:   64 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |d...]....A....B.|
0x804bb0c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bb1c:   a1 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb2c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bb3c:   de d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb4c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bb5c:   1b d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb6c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bb7c:   8b d8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bb8c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bb9c:   cf d8 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bbac:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bbbc:   1f d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bbcc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bbdc:   b0 09 00 00 42 d9 ff ff  55 00 00 00 00 41 0e 08   |....B...U....A..|
0x804bbec:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bbfc:   d0 09 00 00 77 d9 ff ff  47 00 00 00 00 41 0e 08   |....w...G....A..|
0x804bc0c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bc1c:   20 00 00 00 f4 09 00 00  9a d9 ff ff 68 00 00 00   | ...........h...|
0x804bc2c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bc3c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 de d9 ff ff   |....,...........|
0x804bc4c:   e1 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bc5c:   86 04 83 05 03 d4 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bc6c:   04 00 00 00 2c 00 00 00  48 0a 00 00 8f db ff ff   |....,...H.......|
0x804bc7c:   3e 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |>....A....B..I..|
0x804bc8c:   86 04 83 05 03 2e 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bc9c:   04 00 00 00 34 00 00 00  78 0a 00 00 9d ec ff ff   |....4...x.......|
0x804bcac:   2c 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |,....D...G...u.D|
0x804bcbc:   0f 03 75 78 06 10 03 02  75 7c 03 17 04 c1 0c 01   |..ux....u|......|
0x804bccc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bcdc:   b0 0a 00 00 91 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bcec:   48 00 00 00 c4 0a 00 00  8c f0 ff ff 5d 00 00 00   |H...........]...|
0x804bcfc:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804bd0c:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804bd1c:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804bd2c:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804bd3c:   10 0b 00 00 a0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804bd4c:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 e4 ad 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804d028:   12 22 db c2 80 00 00 00  ca f4 9f 16 33 0c 91 b6   |."..........3...|
0x804d038:   ff ff ff ff f7 ff ff ff  fb af 15 4d 7d 8f 7a e4   |...........M}.z.|
0x804d048:   ce 6f af 0d 70 0b 2f 48  c0 00 00 00 d5 85 d5 02   |.o..p./H........|
0x804d058:   01 00 00 00 81 0a 8e 00  27 bc 16 4b e8 00 00 00   |........'..K....|
0x804d068:   d7 6f 62 55 01 00 00 00  09 00 00 00 08 00 00 00   |.obU............|
0x804d078:   70 2a 73 00 2c 95 00 00  fd ff ff ff ??            |p*s.,.......?   |
