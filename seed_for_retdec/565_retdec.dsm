;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:50:10
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 a0 da ff ff               	lea eax, [ebx - 0x2560]
0x804835c:   50                              	push eax
0x804835d:   8d 83 40 da ff ff               	lea eax, [ebx - 0x25c0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 a3 a6 04 08               	mov eax, 0x804a6a3
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483a5:   3d 74 d0 04 08                  	cmp eax, 0x804d074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 d0 04 08                  	push 0x804d074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483e5:   2d 74 d0 04 08                  	sub eax, 0x804d074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 d0 04 08                  	push 0x804d074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 d9 25 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 c5 25 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 c0 da ff ff               	lea edx, [eax - 0x2540]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 98 25 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 7a 25 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 52 25 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 28 25 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 ff 24 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 bc 24 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 7a 24 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 22 24 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 d1 23 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 94 23 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 5d 23 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 3e 23 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 14 23 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 e8 22 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 bd 22 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 74 22 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 2c 22 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 d2 21 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 7f 21 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 40 21 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 0a 21 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 e8 20 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 9a 20 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 5e 20 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 d5 1f 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 a3 1f 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 73 1f 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 2e 1f 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ef 1e 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 bd 1e 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 8e 1e 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 70 1e 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 48 1e 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 23 1e 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 fe 1d 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 c7 1d 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 92 1d 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 40 1d 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 f5 1c 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 be 1c 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 8d 1c 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 6e 1c 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 44 1c 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 1c 1c 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 f3 1b 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 b7 1b 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 7c 1b 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 29 1b 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 dd 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 a5 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 76 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 62 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 4b 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 36 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 20 1a 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 f9 19 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 d4 19 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 95 19 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 5c 19 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 30 19 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 0a 19 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 a8 db ff ff               	fld dword ptr [eax - 0x2458]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 a8 db ff ff               	fld dword ptr [eax - 0x2458]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 ac db ff ff               	fld dword ptr [eax - 0x2454]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 c8 18 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 a8 db ff ff               	fld dword ptr [eax - 0x2458]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 a8 db ff ff               	fld dword ptr [eax - 0x2458]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 ac db ff ff               	fld dword ptr [eax - 0x2454]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 86 18 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 b0 db ff ff               	fld dword ptr [eax - 0x2450]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 b4 db ff ff               	fld dword ptr [eax - 0x244c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 b8 db ff ff               	fld dword ptr [eax - 0x2448]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 44 18 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 bc db ff ff               	fld dword ptr [eax - 0x2444]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 c0 db ff ff               	fld dword ptr [eax - 0x2440]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 c4 db ff ff               	fld dword ptr [eax - 0x243c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 cc 17 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c8 db ff ff               	fld qword ptr [eax - 0x2438]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c8 db ff ff               	fld qword ptr [eax - 0x2438]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 d0 db ff ff               	fld qword ptr [eax - 0x2430]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 6f 17 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c8 db ff ff               	fld qword ptr [eax - 0x2438]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c8 db ff ff               	fld qword ptr [eax - 0x2438]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 d0 db ff ff               	fld qword ptr [eax - 0x2430]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 12 17 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d8 db ff ff               	fld qword ptr [eax - 0x2428]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 e0 db ff ff               	fld qword ptr [eax - 0x2420]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e8 db ff ff               	fld qword ptr [eax - 0x2418]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 b5 16 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 f0 db ff ff               	fld qword ptr [eax - 0x2410]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f8 db ff ff               	fld qword ptr [eax - 0x2408]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 00 dc ff ff               	fld qword ptr [eax - 0x2400]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 25 16 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 08 dc ff ff               	fld dword ptr [eax - 0x23f8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 0c dc ff ff               	fld dword ptr [eax - 0x23f4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 c1 15 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 50 15 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 0d 15 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 d0 da ff ff               	lea eax, [ebx - 0x2530]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 f4 da ff ff               	lea eax, [ebx - 0x250c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804978b
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 2c                        	sub esp, 0x2c
0x804962f:   e8 03 14 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x804963c:   8b 4d 38                        	mov ecx, dword ptr [ebp + 0x38]
0x804963f:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049642:   8b 5d 44                        	mov ebx, dword ptr [ebp + 0x44]
0x8049645:   89 5d d0                        	mov dword ptr [ebp - 0x30], ebx
0x8049648:   8b 75 58                        	mov esi, dword ptr [ebp + 0x58]
0x804964b:   89 75 cc                        	mov dword ptr [ebp - 0x34], esi
0x804964e:   8b 5d 60                        	mov ebx, dword ptr [ebp + 0x60]
0x8049651:   89 5d c8                        	mov dword ptr [ebp - 0x38], ebx
0x8049654:   8b 75 68                        	mov esi, dword ptr [ebp + 0x68]
0x8049657:   8b 5d 6c                        	mov ebx, dword ptr [ebp + 0x6c]
0x804965a:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x804965d:   89 ca                           	mov edx, ecx
0x804965f:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049662:   89 fa                           	mov edx, edi
0x8049664:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x8049667:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x804966b:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x804966f:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x8049673:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x8049676:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x804967a:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x804967e:   89 f2                           	mov edx, esi
0x8049680:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x8049683:   89 da                           	mov edx, ebx
0x8049685:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x8049689:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804968c:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x8049692:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049695:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x804969b:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804969e:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496a4:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496a7:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496ad:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496b0:   89 90 a8 04 00 00               	mov dword ptr [eax + 0x4a8], edx
0x80496b6:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496b9:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496bf:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496c2:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496c8:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496cb:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496d1:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x80496d4:   89 90 ac 04 00 00               	mov dword ptr [eax + 0x4ac], edx
0x80496da:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496de:   88 90 3c 00 00 00               	mov byte ptr [eax + 0x3c], dl
0x80496e4:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496e7:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496ed:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x80496f0:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x80496f6:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496fa:   88 90 48 00 00 00               	mov byte ptr [eax + 0x48], dl
0x8049700:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x8049704:   88 90 49 00 00 00               	mov byte ptr [eax + 0x49], dl
0x804970a:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x804970d:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049713:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049717:   66 89 90 b0 04 00 00            	mov word ptr [eax + 0x4b0], dx
0x804971e:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049721:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x8049727:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x804972a:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x8049730:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x8049733:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x8049739:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804973c:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049742:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x8049746:   88 90 60 00 00 00               	mov byte ptr [eax + 0x60], dl
0x804974c:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x804974f:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049755:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x8049759:   66 89 90 68 00 00 00            	mov word ptr [eax + 0x68], dx
0x8049760:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x8049763:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x8049769:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x804976d:   88 90 b2 04 00 00               	mov byte ptr [eax + 0x4b2], dl
0x8049773:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049777:   66 89 90 70 00 00 00            	mov word ptr [eax + 0x70], dx
0x804977e:   b8 00 00 00 00                  	mov eax, 0
0x8049783:   83 c4 2c                        	add esp, 0x2c
0x8049786:   5b                              	pop ebx
0x8049787:   5e                              	pop esi
0x8049788:   5f                              	pop edi
0x8049789:   5d                              	pop ebp
0x804978a:   c3                              	ret 
; function: func_1 at 0x804978b -- 0x804a6a3
0x804978b:   55                              	push ebp
0x804978c:   89 e5                           	mov ebp, esp
0x804978e:   57                              	push edi
0x804978f:   56                              	push esi
0x8049790:   53                              	push ebx
0x8049791:   81 ec 38 01 00 00               	sub esp, 0x138
0x8049797:   e8 9b 12 00 00                  	call 0x804aa37 <__x86.get_pc_thunk.ax>
0x804979c:   05 64 38 00 00                  	add eax, 0x3864
0x80497a1:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x80497a8:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80497af:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x80497b6:   c7 45 e8 84 33 c6 33            	mov dword ptr [ebp - 0x18], 0x33c63384
0x80497bd:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x80497c4:   c7 45 e0 52 d9 9d 6b            	mov dword ptr [ebp - 0x20], 0x6b9dd952
0x80497cb:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x80497d2:   c7 45 88 d1 47 cc 83            	mov dword ptr [ebp - 0x78], 0x83cc47d1
0x80497d9:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x80497e0:   c6 45 d7 ff                     	mov byte ptr [ebp - 0x29], 0xff
0x80497e4:   c7 45 d0 bd 52 be ba            	mov dword ptr [ebp - 0x30], 0xbabe52bd
0x80497eb:   c7 45 cc 5c 0e a4 85            	mov dword ptr [ebp - 0x34], 0x85a40e5c
0x80497f2:   c6 45 cb 01                     	mov byte ptr [ebp - 0x35], 1
0x80497f6:   c6 45 ca a4                     	mov byte ptr [ebp - 0x36], 0xa4
0x80497fa:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x8049801:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x8049807:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x804980e:   c7 45 bc 44 7f a5 d2            	mov dword ptr [ebp - 0x44], 0xd2a57f44
0x8049815:   c7 45 b8 19 20 3d 7f            	mov dword ptr [ebp - 0x48], 0x7f3d2019
0x804981c:   c7 45 80 ac 47 cd 64            	mov dword ptr [ebp - 0x80], 0x64cd47ac
0x8049823:   c6 45 b7 fe                     	mov byte ptr [ebp - 0x49], 0xfe
0x8049827:   c7 85 7c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x84], 0xfffffffb
0x8049831:   66 c7 85 7a ff ff ff ff ff      	mov word ptr [ebp - 0x86], 0xffff
0x804983a:   c7 85 74 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffb
0x8049844:   c6 45 b6 00                     	mov byte ptr [ebp - 0x4a], 0
0x8049848:   66 c7 45 b4 f9 ff               	mov word ptr [ebp - 0x4c], 0xfff9
0x804984e:   c7 85 70 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x90], 2
0x8049858:   c6 85 6f ff ff ff 03            	mov byte ptr [ebp - 0x91], 3
0x804985f:   c7 45 b0 71 3d 78 09            	mov dword ptr [ebp - 0x50], 0x9783d71
0x8049866:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804986d:   c7 85 68 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0x98], 0xfffffffc
0x8049877:   c7 85 64 ff ff ff 0f d5 8d 8b   	mov dword ptr [ebp - 0x9c], 0x8b8dd50f
0x8049881:   c6 85 63 ff ff ff 01            	mov byte ptr [ebp - 0x9d], 1
0x8049888:   c7 85 5c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa4], 0xffffffff
0x8049892:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049896:   0f 84 6a 0d 00 00               	je 0x804a606 <func_1+0xe7b>
0x804989c:   c7 45 a8 06 00 00 00            	mov dword ptr [ebp - 0x58], 6
0x80498a3:   66 c7 45 a6 ff ff               	mov word ptr [ebp - 0x5a], 0xffff
0x80498a9:   66 c7 85 56 ff ff ff 82 59      	mov word ptr [ebp - 0xaa], 0x5982
0x80498b2:   c6 45 a5 ee                     	mov byte ptr [ebp - 0x5b], 0xee
0x80498b6:   c7 85 50 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb0], 0xffffffff
0x80498c0:   c6 45 a4 63                     	mov byte ptr [ebp - 0x5c], 0x63
0x80498c4:   66 c7 85 4e ff ff ff 01 00      	mov word ptr [ebp - 0xb2], 1
0x80498cd:   c6 85 4d ff ff ff 04            	mov byte ptr [ebp - 0xb3], 4
0x80498d4:   66 c7 85 4a ff ff ff 78 d7      	mov word ptr [ebp - 0xb6], 0xd778
0x80498dd:   c7 85 44 ff ff ff 64 41 73 a0   	mov dword ptr [ebp - 0xbc], 0xa0734164
0x80498e7:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80498ee:   e9 3e 01 00 00                  	jmp 0x8049a31 <func_1+0x2a6>
0x80498f3:   66 c7 85 d2 fe ff ff 03 00      	mov word ptr [ebp - 0x12e], 3
0x80498fc:   c7 45 f0 1d 00 00 00            	mov dword ptr [ebp - 0x10], 0x1d
0x8049903:   e9 1b 01 00 00                  	jmp 0x8049a23 <func_1+0x298>
0x8049908:   c6 85 d1 fe ff ff 00            	mov byte ptr [ebp - 0x12f], 0
0x804990f:   66 c7 45 a2 df 8c               	mov word ptr [ebp - 0x5e], 0x8cdf
0x8049915:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x804991c:   e9 f1 00 00 00                  	jmp 0x8049a12 <func_1+0x287>
0x8049921:   c6 85 d0 fe ff ff 51            	mov byte ptr [ebp - 0x130], 0x51
0x8049928:   c7 85 cc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x134], 1
0x8049932:   80 bd d0 fe ff ff 00            	cmp byte ptr [ebp - 0x130], 0
0x8049939:   74 13                           	je 0x804994e <func_1+0x1c3>
0x804993b:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x804993f:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049943:   0f 84 b3 00 00 00               	je 0x80499fc <func_1+0x271>
0x8049949:   e9 d1 00 00 00                  	jmp 0x8049a1f <func_1+0x294>
0x804994e:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x8049958:   c6 85 c7 fe ff ff 01            	mov byte ptr [ebp - 0x139], 1
0x804995f:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049963:   75 5e                           	jne 0x80499c3 <func_1+0x238>
0x8049965:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804996b:   0f be c8                        	movsx ecx, al
0x804996e:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049971:   99                              	cdq 
0x8049972:   f7 7d ec                        	idiv dword ptr [ebp - 0x14]
0x8049975:   0d ff ff 00 00                  	or eax, 0xffff
0x804997a:   3d ff 00 00 00                  	cmp eax, 0xff
0x804997f:   76 0d                           	jbe 0x804998e <func_1+0x203>
0x8049981:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049985:   74 07                           	je 0x804998e <func_1+0x203>
0x8049987:   b8 01 00 00 00                  	mov eax, 1
0x804998c:   eb 05                           	jmp 0x8049993 <func_1+0x208>
0x804998e:   b8 00 00 00 00                  	mov eax, 0
0x8049993:   08 45 d7                        	or byte ptr [ebp - 0x29], al
0x8049996:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804999a:   83 e8 08                        	sub eax, 8
0x804999d:   0f be d8                        	movsx ebx, al
0x80499a0:   89 c8                           	mov eax, ecx
0x80499a2:   99                              	cdq 
0x80499a3:   f7 fb                           	idiv ebx
0x80499a5:   89 d0                           	mov eax, edx
0x80499a7:   3d dd ca 00 00                  	cmp eax, 0xcadd
0x80499ac:   0f 9f c0                        	setg al
0x80499af:   0f b6 c0                        	movzx eax, al
0x80499b2:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x80499b8:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x80499be:   83 f8 07                        	cmp eax, 7
0x80499c1:   76 07                           	jbe 0x80499ca <func_1+0x23f>
0x80499c3:   b8 01 00 00 00                  	mov eax, 1
0x80499c8:   eb 05                           	jmp 0x80499cf <func_1+0x244>
0x80499ca:   b8 00 00 00 00                  	mov eax, 0
0x80499cf:   0f be d0                        	movsx edx, al
0x80499d2:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x80499d8:   0f be c0                        	movsx eax, al
0x80499db:   01 d0                           	add eax, edx
0x80499dd:   89 c2                           	mov edx, eax
0x80499df:   0f b6 85 c7 fe ff ff            	movzx eax, byte ptr [ebp - 0x139]
0x80499e6:   21 d0                           	and eax, edx
0x80499e8:   88 85 c7 fe ff ff               	mov byte ptr [ebp - 0x139], al
0x80499ee:   0f b6 85 c7 fe ff ff            	movzx eax, byte ptr [ebp - 0x139]
0x80499f5:   0f b6 c0                        	movzx eax, al
0x80499f8:   66 21 45 a2                     	and word ptr [ebp - 0x5e], ax
0x80499fc:   c7 45 e0 ca 11 96 8f            	mov dword ptr [ebp - 0x20], 0x8f9611ca
0x8049a03:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049a08:   75 14                           	jne 0x8049a1e <func_1+0x293>
0x8049a0a:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049a0e:   83 45 dc 04                     	add dword ptr [ebp - 0x24], 4
0x8049a12:   83 7d dc 13                     	cmp dword ptr [ebp - 0x24], 0x13
0x8049a16:   0f 8f 05 ff ff ff               	jg 0x8049921 <func_1+0x196>
0x8049a1c:   eb 01                           	jmp 0x8049a1f <func_1+0x294>
0x8049a1e:   90                              	nop 
0x8049a1f:   83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x8049a23:   83 7d f0 08                     	cmp dword ptr [ebp - 0x10], 8
0x8049a27:   0f 8e db fe ff ff               	jle 0x8049908 <func_1+0x17d>
0x8049a2d:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049a31:   83 7d ec 05                     	cmp dword ptr [ebp - 0x14], 5
0x8049a35:   0f 84 b8 fe ff ff               	je 0x80498f3 <func_1+0x168>
0x8049a3b:   90                              	nop 
0x8049a3c:   c7 45 ec 02 00 00 00            	mov dword ptr [ebp - 0x14], 2
0x8049a43:   e9 f3 0a 00 00                  	jmp 0x804a53b <func_1+0xdb0>
0x8049a48:   c6 85 43 ff ff ff 99            	mov byte ptr [ebp - 0xbd], 0x99
0x8049a4f:   c6 45 a1 ff                     	mov byte ptr [ebp - 0x5f], 0xff
0x8049a53:   c7 85 3c ff ff ff bf 58 8f d2   	mov dword ptr [ebp - 0xc4], 0xd28f58bf
0x8049a5d:   c7 85 38 ff ff ff d4 2e 64 4b   	mov dword ptr [ebp - 0xc8], 0x4b642ed4
0x8049a67:   c7 85 34 ff ff ff c8 9a 58 ec   	mov dword ptr [ebp - 0xcc], 0xec589ac8
0x8049a71:   66 c7 85 32 ff ff ff f7 ff      	mov word ptr [ebp - 0xce], 0xfff7
0x8049a7a:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x8049a84:   c7 85 28 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd8], 0
0x8049a8e:   80 a5 43 ff ff ff 01            	and byte ptr [ebp - 0xbd], 1
0x8049a95:   0f be 95 43 ff ff ff            	movsx edx, byte ptr [ebp - 0xbd]
0x8049a9c:   0f b6 85 6f ff ff ff            	movzx eax, byte ptr [ebp - 0x91]
0x8049aa3:   39 c2                           	cmp edx, eax
0x8049aa5:   0f 84 0e 01 00 00               	je 0x8049bb9 <func_1+0x42e>
0x8049aab:   c7 85 d4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x12c], 0xffffffff
0x8049ab5:   c7 45 f0 ae ff 0c a9            	mov dword ptr [ebp - 0x10], 0xa90cffae
0x8049abc:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049abf:   0f bf d0                        	movsx edx, ax
0x8049ac2:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ac5:   98                              	cwde 
0x8049ac6:   01 d0                           	add eax, edx
0x8049ac8:   3d 51 00 f3 56                  	cmp eax, 0x56f30051
0x8049acd:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049ad1:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x8049ad7:   0f 94 c0                        	sete al
0x8049ada:   0f b6 d0                        	movzx edx, al
0x8049add:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049ae1:   39 c2                           	cmp edx, eax
0x8049ae3:   0f 9f c0                        	setg al
0x8049ae6:   0f b6 d0                        	movzx edx, al
0x8049ae9:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x8049af0:   39 c2                           	cmp edx, eax
0x8049af2:   0f 9c c0                        	setl al
0x8049af5:   0f b6 d0                        	movzx edx, al
0x8049af8:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x8049aff:   39 c2                           	cmp edx, eax
0x8049b01:   75 05                           	jne 0x8049b08 <func_1+0x37d>
0x8049b03:   66 83 7d a6 00                  	cmp word ptr [ebp - 0x5a], 0
0x8049b08:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b0b:   66 85 c0                        	test ax, ax
0x8049b0e:   74 07                           	je 0x8049b17 <func_1+0x38c>
0x8049b10:   80 bd 43 ff ff ff 00            	cmp byte ptr [ebp - 0xbd], 0
0x8049b17:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b1a:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x8049b1d:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049b20:   3d ef 6b 1b 91                  	cmp eax, 0x911b6bef
0x8049b25:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049b29:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b2c:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x8049b30:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x8049b34:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049b3a:   0f bf bd 7a ff ff ff            	movsx edi, word ptr [ebp - 0x86]
0x8049b41:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049b47:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x8049b4b:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x8049b4f:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x8049b53:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x8049b57:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049b5b:   52                              	push edx
0x8049b5c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049b62:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049b68:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049b6e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049b74:   57                              	push edi
0x8049b75:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049b78:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049b7b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049b7e:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049b81:   56                              	push esi
0x8049b82:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049b85:   53                              	push ebx
0x8049b86:   51                              	push ecx
0x8049b87:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049b8a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049b8d:   50                              	push eax
0x8049b8e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b91:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049b94:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049b97:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049b9a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049b9d:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ba0:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049ba3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049ba6:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049ba9:   e8 78 fa ff ff                  	call 0x8049626 <set_var>
0x8049bae:   83 c4 68                        	add esp, 0x68
0x8049bb1:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049bb4:   e9 e2 0a 00 00                  	jmp 0x804a69b <func_1+0xf10>
0x8049bb9:   66 c7 85 26 ff ff ff 9b 71      	mov word ptr [ebp - 0xda], 0x719b
0x8049bc2:   66 c7 85 24 ff ff ff 9c 6a      	mov word ptr [ebp - 0xdc], 0x6a9c
0x8049bcb:   c7 45 9c 00 84 b4 e4            	mov dword ptr [ebp - 0x64], 0xe4b48400
0x8049bd2:   c7 45 98 4b bf 9d 59            	mov dword ptr [ebp - 0x68], 0x599dbf4b
0x8049bd9:   c6 85 23 ff ff ff b0            	mov byte ptr [ebp - 0xdd], 0xb0
0x8049be0:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049be3:   84 c0                           	test al, al
0x8049be5:   74 6b                           	je 0x8049c52 <func_1+0x4c7>
0x8049be7:   66 c7 45 a6 f0 ff               	mov word ptr [ebp - 0x5a], 0xfff0
0x8049bed:   eb 1f                           	jmp 0x8049c0e <func_1+0x483>
0x8049bef:   c7 85 1c ff ff ff a1 a5 03 95   	mov dword ptr [ebp - 0xe4], 0x9503a5a1
0x8049bf9:   81 b5 1c ff ff ff ca 97 aa 5e   	xor dword ptr [ebp - 0xe4], 0x5eaa97ca
0x8049c03:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049c07:   83 c0 01                        	add eax, 1
0x8049c0a:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x8049c0e:   66 83 7d a6 08                  	cmp word ptr [ebp - 0x5a], 8
0x8049c13:   7f da                           	jg 0x8049bef <func_1+0x464>
0x8049c15:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x8049c19:   80 bd 6f ff ff ff 00            	cmp byte ptr [ebp - 0x91], 0
0x8049c20:   0f 95 c0                        	setne al
0x8049c23:   0f b6 c0                        	movzx eax, al
0x8049c26:   39 c2                           	cmp edx, eax
0x8049c28:   0f 9f c0                        	setg al
0x8049c2b:   0f b6 c0                        	movzx eax, al
0x8049c2e:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049c31:   0f 9f c0                        	setg al
0x8049c34:   0f b6 c0                        	movzx eax, al
0x8049c37:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049c3a:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x8049c41:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c44:   0f 9c c0                        	setl al
0x8049c47:   0f b6 c0                        	movzx eax, al
0x8049c4a:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049c4d:   e9 2f 01 00 00                  	jmp 0x8049d81 <func_1+0x5f6>
0x8049c52:   c7 45 dc 10 00 00 00            	mov dword ptr [ebp - 0x24], 0x10
0x8049c59:   83 7d dc 08                     	cmp dword ptr [ebp - 0x24], 8
0x8049c5d:   0f 84 8e 00 00 00               	je 0x8049cf1 <func_1+0x566>
0x8049c63:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x8049c67:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x8049c6b:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049c71:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x8049c78:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x8049c7e:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x8049c82:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x8049c86:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x8049c8a:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x8049c8e:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049c92:   52                              	push edx
0x8049c93:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049c99:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049c9f:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049ca5:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049cab:   57                              	push edi
0x8049cac:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049caf:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049cb2:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049cb5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049cb8:   56                              	push esi
0x8049cb9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049cbc:   53                              	push ebx
0x8049cbd:   51                              	push ecx
0x8049cbe:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049cc1:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049cc4:   50                              	push eax
0x8049cc5:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049cc8:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049ccb:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049cce:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049cd1:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049cd4:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049cd7:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049cda:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049cdd:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049ce0:   e8 41 f9 ff ff                  	call 0x8049626 <set_var>
0x8049ce5:   83 c4 68                        	add esp, 0x68
0x8049ce8:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049cec:   e9 aa 09 00 00                  	jmp 0x804a69b <func_1+0xf10>
0x8049cf1:   80 45 a1 01                     	add byte ptr [ebp - 0x5f], 1
0x8049cf5:   80 bd 6f ff ff ff 00            	cmp byte ptr [ebp - 0x91], 0
0x8049cfc:   74 0b                           	je 0x8049d09 <func_1+0x57e>
0x8049cfe:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049d02:   74 63                           	je 0x8049d67 <func_1+0x5dc>
0x8049d04:   e9 de fb ff ff                  	jmp 0x80498e7 <func_1+0x15c>
0x8049d09:   80 7d a1 01                     	cmp byte ptr [ebp - 0x5f], 1
0x8049d0d:   76 0a                           	jbe 0x8049d19 <func_1+0x58e>
0x8049d0f:   66 83 bd 56 ff ff ff 00         	cmp word ptr [ebp - 0xaa], 0
0x8049d17:   74 07                           	je 0x8049d20 <func_1+0x595>
0x8049d19:   b8 01 00 00 00                  	mov eax, 1
0x8049d1e:   eb 05                           	jmp 0x8049d25 <func_1+0x59a>
0x8049d20:   b8 00 00 00 00                  	mov eax, 0
0x8049d25:   89 c1                           	mov ecx, eax
0x8049d27:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d2a:   89 c2                           	mov edx, eax
0x8049d2c:   89 c8                           	mov eax, ecx
0x8049d2e:   0f af c2                        	imul eax, edx
0x8049d31:   0f be c8                        	movsx ecx, al
0x8049d34:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049d39:   99                              	cdq 
0x8049d3a:   f7 f9                           	idiv ecx
0x8049d3c:   89 d0                           	mov eax, edx
0x8049d3e:   3d 0c 69 00 00                  	cmp eax, 0x690c
0x8049d43:   0f 9f c0                        	setg al
0x8049d46:   0f b6 c0                        	movzx eax, al
0x8049d49:   31 45 9c                        	xor dword ptr [ebp - 0x64], eax
0x8049d4c:   0f b6 45 a1                     	movzx eax, byte ptr [ebp - 0x5f]
0x8049d50:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049d53:   0f 9c c0                        	setl al
0x8049d56:   0f b6 c0                        	movzx eax, al
0x8049d59:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x8049d5c:   80 7d d7 00                     	cmp byte ptr [ebp - 0x29], 0
0x8049d60:   74 05                           	je 0x8049d67 <func_1+0x5dc>
0x8049d62:   e9 80 fb ff ff                  	jmp 0x80498e7 <func_1+0x15c>
0x8049d67:   0f be 55 d7                     	movsx edx, byte ptr [ebp - 0x29]
0x8049d6b:   0f b6 45 a1                     	movzx eax, byte ptr [ebp - 0x5f]
0x8049d6f:   39 c2                           	cmp edx, eax
0x8049d71:   0f 9c c0                        	setl al
0x8049d74:   0f b6 c0                        	movzx eax, al
0x8049d77:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049d7a:   c7 45 98 f9 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff9
0x8049d81:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049d85:   74 05                           	je 0x8049d8c <func_1+0x601>
0x8049d87:   e9 b0 fc ff ff                  	jmp 0x8049a3c <func_1+0x2b1>
0x8049d8c:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049d8f:   8d 50 ff                        	lea edx, [eax - 1]
0x8049d92:   89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x8049d95:   85 c0                           	test eax, eax
0x8049d97:   74 17                           	je 0x8049db0 <func_1+0x625>
0x8049d99:   81 65 9c 8e a8 d8 20            	and dword ptr [ebp - 0x64], 0x20d8a88e
0x8049da0:   81 7d 9c 01 48 52 ff            	cmp dword ptr [ebp - 0x64], 0xff524801
0x8049da7:   7c 07                           	jl 0x8049db0 <func_1+0x625>
0x8049da9:   b8 01 00 00 00                  	mov eax, 1
0x8049dae:   eb 05                           	jmp 0x8049db5 <func_1+0x62a>
0x8049db0:   b8 00 00 00 00                  	mov eax, 0
0x8049db5:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x8049db8:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049dbc:   75 0f                           	jne 0x8049dcd <func_1+0x642>
0x8049dbe:   80 45 cb 01                     	add byte ptr [ebp - 0x35], 1
0x8049dc2:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x8049dc6:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049dc9:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049dcd:   b8 cf dd 00 00                  	mov eax, 0xddcf
0x8049dd2:   89 c2                           	mov edx, eax
0x8049dd4:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x8049dd8:   21 d0                           	and eax, edx
0x8049dda:   88 45 ca                        	mov byte ptr [ebp - 0x36], al
0x8049ddd:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049de0:   0f b7 c0                        	movzx eax, ax
0x8049de3:   ba d3 52 00 00                  	mov edx, 0x52d3
0x8049de8:   89 c1                           	mov ecx, eax
0x8049dea:   d3 fa                           	sar edx, cl
0x8049dec:   89 d0                           	mov eax, edx
0x8049dee:   09 45 d0                        	or dword ptr [ebp - 0x30], eax
0x8049df1:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049df4:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049df7:   0f be 95 43 ff ff ff            	movsx edx, byte ptr [ebp - 0xbd]
0x8049dfe:   0f b6 4d a1                     	movzx ecx, byte ptr [ebp - 0x5f]
0x8049e02:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049e06:   0f 9f c0                        	setg al
0x8049e09:   0f b6 d8                        	movzx ebx, al
0x8049e0c:   0f bf 85 56 ff ff ff            	movsx eax, word ptr [ebp - 0xaa]
0x8049e13:   39 c3                           	cmp ebx, eax
0x8049e15:   0f 9c c0                        	setl al
0x8049e18:   0f b6 d8                        	movzx ebx, al
0x8049e1b:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049e1e:   98                              	cwde 
0x8049e1f:   0f af c3                        	imul eax, ebx
0x8049e22:   39 c1                           	cmp ecx, eax
0x8049e24:   0f 9c c0                        	setl al
0x8049e27:   0f b6 c0                        	movzx eax, al
0x8049e2a:   39 c2                           	cmp edx, eax
0x8049e2c:   0f 9e c0                        	setle al
0x8049e2f:   89 c2                           	mov edx, eax
0x8049e31:   0f b6 45 a5                     	movzx eax, byte ptr [ebp - 0x5b]
0x8049e35:   09 d0                           	or eax, edx
0x8049e37:   88 45 a5                        	mov byte ptr [ebp - 0x5b], al
0x8049e3a:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x8049e41:   eb 67                           	jmp 0x8049eaa <func_1+0x71f>
0x8049e43:   c6 85 db fe ff ff 45            	mov byte ptr [ebp - 0x125], 0x45
0x8049e4a:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049e4e:   98                              	cwde 
0x8049e4f:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x8049e52:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049e58:   83 c0 78                        	add eax, 0x78
0x8049e5b:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e5e:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x8049e62:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049e65:   89 c2                           	mov edx, eax
0x8049e67:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x8049e6b:   31 d0                           	xor eax, edx
0x8049e6d:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x8049e70:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x8049e74:   ba ff ff 00 00                  	mov edx, 0xffff
0x8049e79:   89 d1                           	mov ecx, edx
0x8049e7b:   d3 f8                           	sar eax, cl
0x8049e7d:   66 c1 e8 0b                     	shr ax, 0xb
0x8049e81:   0f be d0                        	movsx edx, al
0x8049e84:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049e87:   0f be c0                        	movsx eax, al
0x8049e8a:   89 c1                           	mov ecx, eax
0x8049e8c:   d3 fa                           	sar edx, cl
0x8049e8e:   89 d0                           	mov eax, edx
0x8049e90:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049e96:   0f 96 c0                        	setbe al
0x8049e99:   0f b6 c0                        	movzx eax, al
0x8049e9c:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049e9f:   c7 45 e0 04 00 00 00            	mov dword ptr [ebp - 0x20], 4
0x8049ea6:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x8049eaa:   83 7d cc 0c                     	cmp dword ptr [ebp - 0x34], 0xc
0x8049eae:   75 93                           	jne 0x8049e43 <func_1+0x6b8>
0x8049eb0:   66 83 7d c2 00                  	cmp word ptr [ebp - 0x3e], 0
0x8049eb5:   0f 84 68 06 00 00               	je 0x804a523 <func_1+0xd98>
0x8049ebb:   c7 85 14 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xec], 1
0x8049ec5:   c7 45 94 05 00 00 00            	mov dword ptr [ebp - 0x6c], 5
0x8049ecc:   c7 45 90 f9 ff ff ff            	mov dword ptr [ebp - 0x70], 0xfffffff9
0x8049ed3:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x8049eda:   0f 84 a6 00 00 00               	je 0x8049f86 <func_1+0x7fb>
0x8049ee0:   c7 85 08 ff ff ff fc b3 b4 b6   	mov dword ptr [ebp - 0xf8], 0xb6b4b3fc
0x8049eea:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049eee:   74 5e                           	je 0x8049f4e <func_1+0x7c3>
0x8049ef0:   c7 85 00 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0x100], 4
0x8049efa:   83 ad 00 ff ff ff 01            	sub dword ptr [ebp - 0x100], 1
0x8049f01:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049f05:   74 06                           	je 0x8049f0d <func_1+0x782>
0x8049f07:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049f0b:   74 07                           	je 0x8049f14 <func_1+0x789>
0x8049f0d:   b8 01 00 00 00                  	mov eax, 1
0x8049f12:   eb 05                           	jmp 0x8049f19 <func_1+0x78e>
0x8049f14:   b8 00 00 00 00                  	mov eax, 0
0x8049f19:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049f1c:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f1f:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x8049f22:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049f28:   0d b5 fc ff ff                  	or eax, 0xfffffcb5
0x8049f2d:   89 c2                           	mov edx, eax
0x8049f2f:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049f32:   39 c2                           	cmp edx, eax
0x8049f34:   0f 97 c0                        	seta al
0x8049f37:   0f b6 c0                        	movzx eax, al
0x8049f3a:   09 85 38 ff ff ff               	or dword ptr [ebp - 0xc8], eax
0x8049f40:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049f47:   74 19                           	je 0x8049f62 <func_1+0x7d7>
0x8049f49:   e9 e9 05 00 00                  	jmp 0x804a537 <func_1+0xdac>
0x8049f4e:   c6 85 07 ff ff ff 00            	mov byte ptr [ebp - 0xf9], 0
0x8049f55:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f58:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f5b:   80 85 07 ff ff ff 01            	add byte ptr [ebp - 0xf9], 1
0x8049f62:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049f68:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049f6b:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049f71:   0f b7 c8                        	movzx ecx, ax
0x8049f74:   b8 01 00 00 00                  	mov eax, 1
0x8049f79:   99                              	cdq 
0x8049f7a:   f7 f9                           	idiv ecx
0x8049f7c:   89 d0                           	mov eax, edx
0x8049f7e:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x8049f81:   e9 7a 01 00 00                  	jmp 0x804a100 <func_1+0x975>
0x8049f86:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x8049f8d:   e9 8c 00 00 00                  	jmp 0x804a01e <func_1+0x893>
0x8049f92:   c7 85 0c ff ff ff 7d 32 f3 c7   	mov dword ptr [ebp - 0xf4], 0xc7f3327d
0x8049f9c:   c6 45 d7 00                     	mov byte ptr [ebp - 0x29], 0
0x8049fa0:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049fa3:   f7 d0                           	not eax
0x8049fa5:   c1 e8 1f                        	shr eax, 0x1f
0x8049fa8:   0f b6 c0                        	movzx eax, al
0x8049fab:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049fae:   0f 94 c0                        	sete al
0x8049fb1:   0f b6 c0                        	movzx eax, al
0x8049fb4:   0b 85 38 ff ff ff               	or eax, dword ptr [ebp - 0xc8]
0x8049fba:   85 c0                           	test eax, eax
0x8049fbc:   74 07                           	je 0x8049fc5 <func_1+0x83a>
0x8049fbe:   b8 01 00 00 00                  	mov eax, 1
0x8049fc3:   eb 05                           	jmp 0x8049fca <func_1+0x83f>
0x8049fc5:   b8 00 00 00 00                  	mov eax, 0
0x8049fca:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049fcd:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049fd0:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049fd3:   c6 45 d7 0a                     	mov byte ptr [ebp - 0x29], 0xa
0x8049fd7:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049fdd:   0f be d0                        	movsx edx, al
0x8049fe0:   0f b6 45 ca                     	movzx eax, byte ptr [ebp - 0x36]
0x8049fe4:   0f be c0                        	movsx eax, al
0x8049fe7:   01 d0                           	add eax, edx
0x8049fe9:   83 f8 0a                        	cmp eax, 0xa
0x8049fec:   0f 94 c0                        	sete al
0x8049fef:   0f b6 c0                        	movzx eax, al
0x8049ff2:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049ff5:   75 0d                           	jne 0x804a004 <func_1+0x879>
0x8049ff7:   80 7d a1 00                     	cmp byte ptr [ebp - 0x5f], 0
0x8049ffb:   74 07                           	je 0x804a004 <func_1+0x879>
0x8049ffd:   b8 01 00 00 00                  	mov eax, 1
0x804a002:   eb 05                           	jmp 0x804a009 <func_1+0x87e>
0x804a004:   b8 00 00 00 00                  	mov eax, 0
0x804a009:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a00c:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a010:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a014:   0f be c0                        	movsx eax, al
0x804a017:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x804a01a:   83 45 94 06                     	add dword ptr [ebp - 0x6c], 6
0x804a01e:   83 7d 94 18                     	cmp dword ptr [ebp - 0x6c], 0x18
0x804a022:   0f 8e 6a ff ff ff               	jle 0x8049f92 <func_1+0x807>
0x804a028:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a02c:   83 e8 01                        	sub eax, 1
0x804a02f:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a032:   66 c7 85 4e ff ff ff 00 00      	mov word ptr [ebp - 0xb2], 0
0x804a03b:   66 83 bd 4e ff ff ff e5         	cmp word ptr [ebp - 0xb2], -0x1b
0x804a043:   0f 85 ad 00 00 00               	jne 0x804a0f6 <func_1+0x96b>
0x804a049:   c7 85 10 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xf0], 0xfffffffb
0x804a053:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a05a:   0b 85 68 ff ff ff               	or eax, dword ptr [ebp - 0x98]
0x804a060:   89 85 10 ff ff ff               	mov dword ptr [ebp - 0xf0], eax
0x804a066:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x804a06a:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a06e:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a074:   0f bf bd 7a ff ff ff            	movsx edi, word ptr [ebp - 0x86]
0x804a07b:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a081:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a085:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x804a089:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x804a08d:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x804a091:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a095:   52                              	push edx
0x804a096:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a09c:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a0a2:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a0a8:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a0ae:   57                              	push edi
0x804a0af:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a0b2:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0b5:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a0b8:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a0bb:   56                              	push esi
0x804a0bc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0bf:   53                              	push ebx
0x804a0c0:   51                              	push ecx
0x804a0c1:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a0c4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a0c7:   50                              	push eax
0x804a0c8:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a0cb:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a0ce:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a0d1:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0d4:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0d7:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a0da:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a0dd:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0e0:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a0e3:   e8 3e f5 ff ff                  	call 0x8049626 <set_var>
0x804a0e8:   83 c4 68                        	add esp, 0x68
0x804a0eb:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a0f1:   e9 a5 05 00 00                  	jmp 0x804a69b <func_1+0xf10>
0x804a0f6:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a0fa:   0f 85 33 04 00 00               	jne 0x804a533 <func_1+0xda8>
0x804a100:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a104:   74 05                           	je 0x804a10b <func_1+0x980>
0x804a106:   e9 dc f7 ff ff                  	jmp 0x80498e7 <func_1+0x15c>
0x804a10b:   0f b6 45 a1                     	movzx eax, byte ptr [ebp - 0x5f]
0x804a10f:   30 45 ca                        	xor byte ptr [ebp - 0x36], al
0x804a112:   0f b6 45 a1                     	movzx eax, byte ptr [ebp - 0x5f]
0x804a116:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804a11c:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a122:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a126:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a12a:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a12d:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x804a134:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a137:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a13d:   c7 85 38 ff ff ff 1d 00 00 00   	mov dword ptr [ebp - 0xc8], 0x1d
0x804a147:   83 bd 38 ff ff ff ee            	cmp dword ptr [ebp - 0xc8], -0x12
0x804a14e:   0f 8c e3 03 00 00               	jl 0x804a537 <func_1+0xdac>
0x804a154:   66 c7 85 fe fe ff ff 64 13      	mov word ptr [ebp - 0x102], 0x1364
0x804a15d:   c7 85 f8 fe ff ff a3 15 19 6f   	mov dword ptr [ebp - 0x108], 0x6f1915a3
0x804a167:   c7 85 f4 fe ff ff c6 01 bb 16   	mov dword ptr [ebp - 0x10c], 0x16bb01c6
0x804a171:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x804a17b:   c6 85 ef fe ff ff 00            	mov byte ptr [ebp - 0x111], 0
0x804a182:   c7 85 34 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xcc], 0
0x804a18c:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a18f:   c0 e8 05                        	shr al, 5
0x804a192:   83 f0 07                        	xor eax, 7
0x804a195:   0f b6 c0                        	movzx eax, al
0x804a198:   09 45 ac                        	or dword ptr [ebp - 0x54], eax
0x804a19b:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a19e:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x804a1a1:   0f 85 bf 00 00 00               	jne 0x804a266 <func_1+0xadb>
0x804a1a7:   c7 85 e0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x120], 0
0x804a1b1:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a1b4:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a1b7:   81 7d ac cb 34 be 45            	cmp dword ptr [ebp - 0x54], 0x45be34cb
0x804a1be:   7e 2a                           	jle 0x804a1ea <func_1+0xa5f>
0x804a1c0:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a1c6:   3d 62 5f e7 96                  	cmp eax, 0x96e75f62
0x804a1cb:   0f 96 c0                        	setbe al
0x804a1ce:   0f b6 c0                        	movzx eax, al
0x804a1d1:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a1d4:   0f 95 c0                        	setne al
0x804a1d7:   0f b6 c0                        	movzx eax, al
0x804a1da:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a1dd:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a1e1:   74 07                           	je 0x804a1ea <func_1+0xa5f>
0x804a1e3:   b8 01 00 00 00                  	mov eax, 1
0x804a1e8:   eb 05                           	jmp 0x804a1ef <func_1+0xa64>
0x804a1ea:   b8 00 00 00 00                  	mov eax, 0
0x804a1ef:   0f b7 d0                        	movzx edx, ax
0x804a1f2:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a1f8:   0f b7 c0                        	movzx eax, ax
0x804a1fb:   0f af c2                        	imul eax, edx
0x804a1fe:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a201:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a205:   0f 85 2b 03 00 00               	jne 0x804a536 <func_1+0xdab>
0x804a20b:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a20f:   8d 50 ff                        	lea edx, [eax - 1]
0x804a212:   88 55 cb                        	mov byte ptr [ebp - 0x35], dl
0x804a215:   84 c0                           	test al, al
0x804a217:   74 29                           	je 0x804a242 <func_1+0xab7>
0x804a219:   0f b7 85 fe fe ff ff            	movzx eax, word ptr [ebp - 0x102]
0x804a220:   0f b6 d0                        	movzx edx, al
0x804a223:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a226:   0f b6 c0                        	movzx eax, al
0x804a229:   0f af c2                        	imul eax, edx
0x804a22c:   23 45 8c                        	and eax, dword ptr [ebp - 0x74]
0x804a22f:   89 c2                           	mov edx, eax
0x804a231:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a234:   39 c2                           	cmp edx, eax
0x804a236:   0f 92 c0                        	setb al
0x804a239:   0f b6 c0                        	movzx eax, al
0x804a23c:   99                              	cdq 
0x804a23d:   f7 7d c4                        	idiv dword ptr [ebp - 0x3c]
0x804a240:   85 c0                           	test eax, eax
0x804a242:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x804a249:   83 a5 f8 fe ff ff 06            	and dword ptr [ebp - 0x108], 6
0x804a250:   83 85 f0 fe ff ff 01            	add dword ptr [ebp - 0x110], 1
0x804a257:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a25b:   0f 85 9c 01 00 00               	jne 0x804a3fd <func_1+0xc72>
0x804a261:   e9 09 01 00 00                  	jmp 0x804a36f <func_1+0xbe4>
0x804a266:   c7 85 e8 fe ff ff 8b db 5e 63   	mov dword ptr [ebp - 0x118], 0x635edb8b
0x804a270:   c7 85 e4 fe ff ff 57 89 84 88   	mov dword ptr [ebp - 0x11c], 0x88848957
0x804a27a:   83 ad e8 fe ff ff 01            	sub dword ptr [ebp - 0x118], 1
0x804a281:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a287:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a28d:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a290:   0f be d0                        	movsx edx, al
0x804a293:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a296:   34 fa                           	xor al, 0xfa
0x804a298:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a29b:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a29e:   0f be c0                        	movsx eax, al
0x804a2a1:   89 c1                           	mov ecx, eax
0x804a2a3:   d3 e2                           	shl edx, cl
0x804a2a5:   89 d0                           	mov eax, edx
0x804a2a7:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a2aa:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a2ad:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a2b3:   01 d0                           	add eax, edx
0x804a2b5:   3d 75 11 66 27                  	cmp eax, 0x27661175
0x804a2ba:   0f 94 c0                        	sete al
0x804a2bd:   0f b6 d0                        	movzx edx, al
0x804a2c0:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a2c3:   0f be c0                        	movsx eax, al
0x804a2c6:   01 d0                           	add eax, edx
0x804a2c8:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x804a2ce:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x804a2d5:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a2d9:   0f be c0                        	movsx eax, al
0x804a2dc:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a2df:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x804a2e3:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a2e7:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a2ed:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x804a2f4:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a2fa:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a2fe:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x804a302:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x804a306:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x804a30a:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a30e:   52                              	push edx
0x804a30f:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a315:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a31b:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a321:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a327:   57                              	push edi
0x804a328:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a32b:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a32e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a331:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a334:   56                              	push esi
0x804a335:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a338:   53                              	push ebx
0x804a339:   51                              	push ecx
0x804a33a:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a33d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a340:   50                              	push eax
0x804a341:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a344:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a347:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a34a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a34d:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a350:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a353:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a356:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a359:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a35c:   e8 c5 f2 ff ff                  	call 0x8049626 <set_var>
0x804a361:   83 c4 68                        	add esp, 0x68
0x804a364:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a36a:   e9 2c 03 00 00                  	jmp 0x804a69b <func_1+0xf10>
0x804a36f:   0f b6 5d cb                     	movzx ebx, byte ptr [ebp - 0x35]
0x804a373:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a377:   8d 50 ff                        	lea edx, [eax - 1]
0x804a37a:   88 55 b6                        	mov byte ptr [ebp - 0x4a], dl
0x804a37d:   0f b6 c0                        	movzx eax, al
0x804a380:   66 09 45 b4                     	or word ptr [ebp - 0x4c], ax
0x804a384:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a388:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804a38b:   81 f2 2e 4a 7b 85               	xor edx, 0x857b4a2e
0x804a391:   83 e2 fc                        	and edx, 0xfffffffc
0x804a394:   85 d2                           	test edx, edx
0x804a396:   75 06                           	jne 0x804a39e <func_1+0xc13>
0x804a398:   80 7d a5 00                     	cmp byte ptr [ebp - 0x5b], 0
0x804a39c:   74 07                           	je 0x804a3a5 <func_1+0xc1a>
0x804a39e:   ba 01 00 00 00                  	mov edx, 1
0x804a3a3:   eb 05                           	jmp 0x804a3aa <func_1+0xc1f>
0x804a3a5:   ba 00 00 00 00                  	mov edx, 0
0x804a3aa:   39 c2                           	cmp edx, eax
0x804a3ac:   7e 06                           	jle 0x804a3b4 <func_1+0xc29>
0x804a3ae:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a3b2:   74 07                           	je 0x804a3bb <func_1+0xc30>
0x804a3b4:   b8 01 00 00 00                  	mov eax, 1
0x804a3b9:   eb 05                           	jmp 0x804a3c0 <func_1+0xc35>
0x804a3bb:   b8 00 00 00 00                  	mov eax, 0
0x804a3c0:   66 c1 e8 0b                     	shr ax, 0xb
0x804a3c4:   0f bf d0                        	movsx edx, ax
0x804a3c7:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a3ca:   98                              	cwde 
0x804a3cb:   89 c1                           	mov ecx, eax
0x804a3cd:   d3 fa                           	sar edx, cl
0x804a3cf:   89 d0                           	mov eax, edx
0x804a3d1:   3d f8 00 00 00                  	cmp eax, 0xf8
0x804a3d6:   0f 97 c0                        	seta al
0x804a3d9:   0f b6 c0                        	movzx eax, al
0x804a3dc:   39 c3                           	cmp ebx, eax
0x804a3de:   0f 9d c0                        	setge al
0x804a3e1:   0f b6 c0                        	movzx eax, al
0x804a3e4:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804a3e7:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a3ea:   0f 94 c0                        	sete al
0x804a3ed:   0f b6 c0                        	movzx eax, al
0x804a3f0:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a3f3:   7c 04                           	jl 0x804a3f9 <func_1+0xc6e>
0x804a3f5:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a3f9:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a3fd:   b8 98 02 00 00                  	mov eax, 0x298
0x804a402:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x804a405:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a408:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a40e:   c7 85 dc fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x124], 0xfffffffe
0x804a418:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a41c:   0f b7 c8                        	movzx ecx, ax
0x804a41f:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a422:   c0 f8 05                        	sar al, 5
0x804a425:   0f be d8                        	movsx ebx, al
0x804a428:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a42c:   66 39 45 b4                     	cmp word ptr [ebp - 0x4c], ax
0x804a430:   0f 92 c0                        	setb al
0x804a433:   0f b6 c0                        	movzx eax, al
0x804a436:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a439:   0f 9c c0                        	setl al
0x804a43c:   0f b6 c0                        	movzx eax, al
0x804a43f:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a442:   0f 9c c0                        	setl al
0x804a445:   0f b6 d0                        	movzx edx, al
0x804a448:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a44c:   0f be c0                        	movsx eax, al
0x804a44f:   8d 34 02                        	lea esi, [edx + eax]
0x804a452:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a455:   99                              	cdq 
0x804a456:   f7 fe                           	idiv esi
0x804a458:   89 d0                           	mov eax, edx
0x804a45a:   85 c0                           	test eax, eax
0x804a45c:   0f 94 c0                        	sete al
0x804a45f:   0f b6 c0                        	movzx eax, al
0x804a462:   f7 d0                           	not eax
0x804a464:   89 c2                           	mov edx, eax
0x804a466:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a46c:   29 c2                           	sub edx, eax
0x804a46e:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a471:   39 c2                           	cmp edx, eax
0x804a473:   0f 93 c0                        	setae al
0x804a476:   0f b6 c0                        	movzx eax, al
0x804a479:   39 c3                           	cmp ebx, eax
0x804a47b:   0f 9e c0                        	setle al
0x804a47e:   0f b6 c0                        	movzx eax, al
0x804a481:   8d 14 01                        	lea edx, [ecx + eax]
0x804a484:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a488:   39 c2                           	cmp edx, eax
0x804a48a:   0f 94 c0                        	sete al
0x804a48d:   0f b6 c0                        	movzx eax, al
0x804a490:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x804a493:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x804a497:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a49b:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a4a1:   0f bf bd 7a ff ff ff            	movsx edi, word ptr [ebp - 0x86]
0x804a4a8:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a4ae:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a4b2:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x804a4b6:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x804a4ba:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x804a4be:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a4c2:   52                              	push edx
0x804a4c3:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a4c9:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a4cf:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a4d5:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a4db:   57                              	push edi
0x804a4dc:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a4df:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a4e2:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a4e5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a4e8:   56                              	push esi
0x804a4e9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a4ec:   53                              	push ebx
0x804a4ed:   51                              	push ecx
0x804a4ee:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a4f1:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a4f4:   50                              	push eax
0x804a4f5:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a4f8:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a4fb:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a4fe:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a501:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a504:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a507:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a50a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a50d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a510:   e8 11 f1 ff ff                  	call 0x8049626 <set_var>
0x804a515:   83 c4 68                        	add esp, 0x68
0x804a518:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x804a51e:   e9 78 01 00 00                  	jmp 0x804a69b <func_1+0xf10>
0x804a523:   c6 85 1b ff ff ff 08            	mov byte ptr [ebp - 0xe5], 8
0x804a52a:   80 85 1b ff ff ff 01            	add byte ptr [ebp - 0xe5], 1
0x804a531:   eb 04                           	jmp 0x804a537 <func_1+0xdac>
0x804a533:   90                              	nop 
0x804a534:   eb 01                           	jmp 0x804a537 <func_1+0xdac>
0x804a536:   90                              	nop 
0x804a537:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x804a53b:   83 7d ec 0c                     	cmp dword ptr [ebp - 0x14], 0xc
0x804a53f:   0f 84 03 f5 ff ff               	je 0x8049a48 <func_1+0x2bd>
0x804a545:   c6 45 d7 00                     	mov byte ptr [ebp - 0x29], 0
0x804a549:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a54c:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804a54f:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804a555:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a55b:   0f be d0                        	movsx edx, al
0x804a55e:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a561:   0f be c0                        	movsx eax, al
0x804a564:   0f af c2                        	imul eax, edx
0x804a567:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x804a56a:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a56d:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x804a570:   0f 9c c0                        	setl al
0x804a573:   0f b6 c0                        	movzx eax, al
0x804a576:   31 45 c4                        	xor dword ptr [ebp - 0x3c], eax
0x804a579:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x804a57d:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a581:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a587:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x804a58e:   89 b5 bc fe ff ff               	mov dword ptr [ebp - 0x144], esi
0x804a594:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a598:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x804a59c:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x804a5a0:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x804a5a4:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a5a8:   52                              	push edx
0x804a5a9:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a5af:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a5b5:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a5bb:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a5c1:   57                              	push edi
0x804a5c2:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a5c5:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a5c8:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a5cb:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a5ce:   56                              	push esi
0x804a5cf:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a5d2:   53                              	push ebx
0x804a5d3:   51                              	push ecx
0x804a5d4:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a5d7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a5da:   50                              	push eax
0x804a5db:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a5de:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a5e1:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a5e4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a5e7:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a5ea:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a5ed:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5f0:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5f3:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a5f6:   e8 2b f0 ff ff                  	call 0x8049626 <set_var>
0x804a5fb:   83 c4 68                        	add esp, 0x68
0x804a5fe:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a601:   e9 95 00 00 00                  	jmp 0x804a69b <func_1+0xf10>
0x804a606:   c7 85 58 ff ff ff 69 2c 33 4f   	mov dword ptr [ebp - 0xa8], 0x4f332c69
0x804a610:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x804a614:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a618:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804a61e:   0f bf bd 7a ff ff ff            	movsx edi, word ptr [ebp - 0x86]
0x804a625:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a62b:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a62f:   0f bf 75 c2                     	movsx esi, word ptr [ebp - 0x3e]
0x804a633:   0f b6 5d ca                     	movzx ebx, byte ptr [ebp - 0x36]
0x804a637:   0f b6 4d cb                     	movzx ecx, byte ptr [ebp - 0x35]
0x804a63b:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a63f:   52                              	push edx
0x804a640:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a646:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a64c:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a652:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a658:   57                              	push edi
0x804a659:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a65c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a65f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a662:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a665:   56                              	push esi
0x804a666:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a669:   53                              	push ebx
0x804a66a:   51                              	push ecx
0x804a66b:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a66e:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a671:   50                              	push eax
0x804a672:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a675:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a678:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a67b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a67e:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a681:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a684:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a687:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a68a:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a68d:   e8 94 ef ff ff                  	call 0x8049626 <set_var>
0x804a692:   83 c4 68                        	add esp, 0x68
0x804a695:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a69b:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a69e:   5b                              	pop ebx
0x804a69f:   5e                              	pop esi
0x804a6a0:   5f                              	pop edi
0x804a6a1:   5d                              	pop ebp
0x804a6a2:   c3                              	ret 
; function: main at 0x804a6a3 -- 0x804aa37
0x804a6a3:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a6a7:   83 e4 f0                        	and esp, 0xfffffff0
0x804a6aa:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a6ad:   55                              	push ebp
0x804a6ae:   89 e5                           	mov ebp, esp
0x804a6b0:   53                              	push ebx
0x804a6b1:   51                              	push ecx
0x804a6b2:   83 ec 10                        	sub esp, 0x10
0x804a6b5:   e8 d6 dc ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a6ba:   81 c3 46 29 00 00               	add ebx, 0x2946
0x804a6c0:   89 c8                           	mov eax, ecx
0x804a6c2:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a6c9:   83 38 02                        	cmp dword ptr [eax], 2
0x804a6cc:   75 26                           	jne 0x804a6f4 <main+0x51>
0x804a6ce:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a6d1:   83 c0 04                        	add eax, 4
0x804a6d4:   8b 00                           	mov eax, dword ptr [eax]
0x804a6d6:   83 ec 08                        	sub esp, 8
0x804a6d9:   8d 93 18 db ff ff               	lea edx, [ebx - 0x24e8]
0x804a6df:   52                              	push edx
0x804a6e0:   50                              	push eax
0x804a6e1:   e8 1a dc ff ff                  	call 0x8048300 <strcmp>
0x804a6e6:   83 c4 10                        	add esp, 0x10
0x804a6e9:   85 c0                           	test eax, eax
0x804a6eb:   75 07                           	jne 0x804a6f4 <main+0x51>
0x804a6ed:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a6f4:   e8 5d dd ff ff                  	call 0x8048456 <platform_main_begin>
0x804a6f9:   e8 6d ed ff ff                  	call 0x804946b <crc32_gentab>
0x804a6fe:   e8 88 f0 ff ff                  	call 0x804978b <func_1>
0x804a703:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a709:   83 ec 04                        	sub esp, 4
0x804a70c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a70f:   8d 93 1a db ff ff               	lea edx, [ebx - 0x24e6]
0x804a715:   52                              	push edx
0x804a716:   50                              	push eax
0x804a717:   e8 5b ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a71c:   83 c4 10                        	add esp, 0x10
0x804a71f:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a725:   89 c2                           	mov edx, eax
0x804a727:   83 ec 04                        	sub esp, 4
0x804a72a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a72d:   8d 83 1e db ff ff               	lea eax, [ebx - 0x24e2]
0x804a733:   50                              	push eax
0x804a734:   52                              	push edx
0x804a735:   e8 3d ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a73a:   83 c4 10                        	add esp, 0x10
0x804a73d:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a743:   89 c2                           	mov edx, eax
0x804a745:   83 ec 04                        	sub esp, 4
0x804a748:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a74b:   8d 83 22 db ff ff               	lea eax, [ebx - 0x24de]
0x804a751:   50                              	push eax
0x804a752:   52                              	push edx
0x804a753:   e8 1f ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a758:   83 c4 10                        	add esp, 0x10
0x804a75b:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a761:   89 c2                           	mov edx, eax
0x804a763:   83 ec 04                        	sub esp, 4
0x804a766:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a769:   8d 83 26 db ff ff               	lea eax, [ebx - 0x24da]
0x804a76f:   50                              	push eax
0x804a770:   52                              	push edx
0x804a771:   e8 01 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a776:   83 c4 10                        	add esp, 0x10
0x804a779:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a77f:   89 c2                           	mov edx, eax
0x804a781:   83 ec 04                        	sub esp, 4
0x804a784:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a787:   8d 83 2a db ff ff               	lea eax, [ebx - 0x24d6]
0x804a78d:   50                              	push eax
0x804a78e:   52                              	push edx
0x804a78f:   e8 e3 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a794:   83 c4 10                        	add esp, 0x10
0x804a797:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a79d:   89 c2                           	mov edx, eax
0x804a79f:   83 ec 04                        	sub esp, 4
0x804a7a2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7a5:   8d 83 2f db ff ff               	lea eax, [ebx - 0x24d1]
0x804a7ab:   50                              	push eax
0x804a7ac:   52                              	push edx
0x804a7ad:   e8 c5 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7b2:   83 c4 10                        	add esp, 0x10
0x804a7b5:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a7bb:   89 c2                           	mov edx, eax
0x804a7bd:   83 ec 04                        	sub esp, 4
0x804a7c0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7c3:   8d 83 34 db ff ff               	lea eax, [ebx - 0x24cc]
0x804a7c9:   50                              	push eax
0x804a7ca:   52                              	push edx
0x804a7cb:   e8 a7 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7d0:   83 c4 10                        	add esp, 0x10
0x804a7d3:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a7d9:   89 c2                           	mov edx, eax
0x804a7db:   83 ec 04                        	sub esp, 4
0x804a7de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7e1:   8d 83 39 db ff ff               	lea eax, [ebx - 0x24c7]
0x804a7e7:   50                              	push eax
0x804a7e8:   52                              	push edx
0x804a7e9:   e8 89 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ee:   83 c4 10                        	add esp, 0x10
0x804a7f1:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804a7f7:   83 ec 04                        	sub esp, 4
0x804a7fa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7fd:   8d 93 3e db ff ff               	lea edx, [ebx - 0x24c2]
0x804a803:   52                              	push edx
0x804a804:   50                              	push eax
0x804a805:   e8 6d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a80a:   83 c4 10                        	add esp, 0x10
0x804a80d:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a814:   0f be c0                        	movsx eax, al
0x804a817:   83 ec 04                        	sub esp, 4
0x804a81a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a81d:   8d 93 43 db ff ff               	lea edx, [ebx - 0x24bd]
0x804a823:   52                              	push edx
0x804a824:   50                              	push eax
0x804a825:   e8 4d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a82a:   83 c4 10                        	add esp, 0x10
0x804a82d:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a833:   89 c2                           	mov edx, eax
0x804a835:   83 ec 04                        	sub esp, 4
0x804a838:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a83b:   8d 83 48 db ff ff               	lea eax, [ebx - 0x24b8]
0x804a841:   50                              	push eax
0x804a842:   52                              	push edx
0x804a843:   e8 2f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a848:   83 c4 10                        	add esp, 0x10
0x804a84b:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a851:   83 ec 04                        	sub esp, 4
0x804a854:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a857:   8d 93 4d db ff ff               	lea edx, [ebx - 0x24b3]
0x804a85d:   52                              	push edx
0x804a85e:   50                              	push eax
0x804a85f:   e8 13 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a864:   83 c4 10                        	add esp, 0x10
0x804a867:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804a86e:   0f b6 c0                        	movzx eax, al
0x804a871:   83 ec 04                        	sub esp, 4
0x804a874:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a877:   8d 93 52 db ff ff               	lea edx, [ebx - 0x24ae]
0x804a87d:   52                              	push edx
0x804a87e:   50                              	push eax
0x804a87f:   e8 f3 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a884:   83 c4 10                        	add esp, 0x10
0x804a887:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804a88e:   0f b6 c0                        	movzx eax, al
0x804a891:   83 ec 04                        	sub esp, 4
0x804a894:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a897:   8d 93 58 db ff ff               	lea edx, [ebx - 0x24a8]
0x804a89d:   52                              	push edx
0x804a89e:   50                              	push eax
0x804a89f:   e8 d3 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a4:   83 c4 10                        	add esp, 0x10
0x804a8a7:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a8ad:   89 c2                           	mov edx, eax
0x804a8af:   83 ec 04                        	sub esp, 4
0x804a8b2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b5:   8d 83 5e db ff ff               	lea eax, [ebx - 0x24a2]
0x804a8bb:   50                              	push eax
0x804a8bc:   52                              	push edx
0x804a8bd:   e8 b5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c2:   83 c4 10                        	add esp, 0x10
0x804a8c5:   0f b7 83 b0 04 00 00            	movzx eax, word ptr [ebx + 0x4b0]
0x804a8cc:   98                              	cwde 
0x804a8cd:   83 ec 04                        	sub esp, 4
0x804a8d0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d3:   8d 93 64 db ff ff               	lea edx, [ebx - 0x249c]
0x804a8d9:   52                              	push edx
0x804a8da:   50                              	push eax
0x804a8db:   e8 97 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e0:   83 c4 10                        	add esp, 0x10
0x804a8e3:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a8e9:   89 c2                           	mov edx, eax
0x804a8eb:   83 ec 04                        	sub esp, 4
0x804a8ee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f1:   8d 83 6a db ff ff               	lea eax, [ebx - 0x2496]
0x804a8f7:   50                              	push eax
0x804a8f8:   52                              	push edx
0x804a8f9:   e8 79 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fe:   83 c4 10                        	add esp, 0x10
0x804a901:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a907:   83 ec 04                        	sub esp, 4
0x804a90a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90d:   8d 93 70 db ff ff               	lea edx, [ebx - 0x2490]
0x804a913:   52                              	push edx
0x804a914:   50                              	push eax
0x804a915:   e8 5d ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91a:   83 c4 10                        	add esp, 0x10
0x804a91d:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a923:   89 c2                           	mov edx, eax
0x804a925:   83 ec 04                        	sub esp, 4
0x804a928:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92b:   8d 83 76 db ff ff               	lea eax, [ebx - 0x248a]
0x804a931:   50                              	push eax
0x804a932:   52                              	push edx
0x804a933:   e8 3f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a938:   83 c4 10                        	add esp, 0x10
0x804a93b:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a941:   89 c2                           	mov edx, eax
0x804a943:   83 ec 04                        	sub esp, 4
0x804a946:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a949:   8d 83 7c db ff ff               	lea eax, [ebx - 0x2484]
0x804a94f:   50                              	push eax
0x804a950:   52                              	push edx
0x804a951:   e8 21 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a956:   83 c4 10                        	add esp, 0x10
0x804a959:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804a960:   0f b6 c0                        	movzx eax, al
0x804a963:   83 ec 04                        	sub esp, 4
0x804a966:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a969:   8d 93 82 db ff ff               	lea edx, [ebx - 0x247e]
0x804a96f:   52                              	push edx
0x804a970:   50                              	push eax
0x804a971:   e8 01 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a976:   83 c4 10                        	add esp, 0x10
0x804a979:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a97f:   83 ec 04                        	sub esp, 4
0x804a982:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a985:   8d 93 88 db ff ff               	lea edx, [ebx - 0x2478]
0x804a98b:   52                              	push edx
0x804a98c:   50                              	push eax
0x804a98d:   e8 e5 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a992:   83 c4 10                        	add esp, 0x10
0x804a995:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804a99c:   98                              	cwde 
0x804a99d:   83 ec 04                        	sub esp, 4
0x804a9a0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a3:   8d 93 8e db ff ff               	lea edx, [ebx - 0x2472]
0x804a9a9:   52                              	push edx
0x804a9aa:   50                              	push eax
0x804a9ab:   e8 c7 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b0:   83 c4 10                        	add esp, 0x10
0x804a9b3:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804a9b9:   89 c2                           	mov edx, eax
0x804a9bb:   83 ec 04                        	sub esp, 4
0x804a9be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c1:   8d 83 94 db ff ff               	lea eax, [ebx - 0x246c]
0x804a9c7:   50                              	push eax
0x804a9c8:   52                              	push edx
0x804a9c9:   e8 a9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ce:   83 c4 10                        	add esp, 0x10
0x804a9d1:   0f b6 83 b2 04 00 00            	movzx eax, byte ptr [ebx + 0x4b2]
0x804a9d8:   0f b6 c0                        	movzx eax, al
0x804a9db:   83 ec 04                        	sub esp, 4
0x804a9de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e1:   8d 93 9a db ff ff               	lea edx, [ebx - 0x2466]
0x804a9e7:   52                              	push edx
0x804a9e8:   50                              	push eax
0x804a9e9:   e8 89 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ee:   83 c4 10                        	add esp, 0x10
0x804a9f1:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804a9f8:   0f b7 c0                        	movzx eax, ax
0x804a9fb:   83 ec 04                        	sub esp, 4
0x804a9fe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa01:   8d 93 a0 db ff ff               	lea edx, [ebx - 0x2460]
0x804aa07:   52                              	push edx
0x804aa08:   50                              	push eax
0x804aa09:   e8 69 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa0e:   83 c4 10                        	add esp, 0x10
0x804aa11:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aa17:   f7 d0                           	not eax
0x804aa19:   83 ec 08                        	sub esp, 8
0x804aa1c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa1f:   50                              	push eax
0x804aa20:   e8 41 da ff ff                  	call 0x8048466 <platform_main_end>
0x804aa25:   83 c4 10                        	add esp, 0x10
0x804aa28:   b8 00 00 00 00                  	mov eax, 0
0x804aa2d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aa30:   59                              	pop ecx
0x804aa31:   5b                              	pop ebx
0x804aa32:   5d                              	pop ebp
0x804aa33:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aa36:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aa37 -- 0x804aa3b
0x804aa37:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aa3a:   c3                              	ret 
; data inside code section at 0x804aa3b -- 0x804aa40
0x804aa3b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804aa40 -- 0x804aa9d
0x804aa40:   55                              	push ebp
0x804aa41:   57                              	push edi
0x804aa42:   56                              	push esi
0x804aa43:   53                              	push ebx
0x804aa44:   e8 47 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa49:   81 c3 b7 25 00 00               	add ebx, 0x25b7
0x804aa4f:   83 ec 0c                        	sub esp, 0xc
0x804aa52:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aa56:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804aa5c:   e8 6b d8 ff ff                  	call 0x80482cc <_init>
0x804aa61:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804aa67:   29 c6                           	sub esi, eax
0x804aa69:   c1 fe 02                        	sar esi, 2
0x804aa6c:   85 f6                           	test esi, esi
0x804aa6e:   74 25                           	je 0x804aa95 <__libc_csu_init+0x55>
0x804aa70:   31 ff                           	xor edi, edi
0x804aa72:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aa78:   83 ec 04                        	sub esp, 4
0x804aa7b:   55                              	push ebp
0x804aa7c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa80:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa84:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aa8b:   83 c7 01                        	add edi, 1
0x804aa8e:   83 c4 10                        	add esp, 0x10
0x804aa91:   39 fe                           	cmp esi, edi
0x804aa93:   75 e3                           	jne 0x804aa78 <__libc_csu_init+0x38>
0x804aa95:   83 c4 0c                        	add esp, 0xc
0x804aa98:   5b                              	pop ebx
0x804aa99:   5e                              	pop esi
0x804aa9a:   5f                              	pop edi
0x804aa9b:   5d                              	pop ebp
0x804aa9c:   c3                              	ret 
; data inside code section at 0x804aa9d -- 0x804aaa0
0x804aa9d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804aaa0 -- 0x804aaa2
0x804aaa0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804aaa4 -- 0x804aab8
0x804aaa4:   53                              	push ebx
0x804aaa5:   83 ec 08                        	sub esp, 8
0x804aaa8:   e8 e3 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aaad:   81 c3 53 25 00 00               	add ebx, 0x2553
0x804aab3:   83 c4 08                        	add esp, 8
0x804aab6:   5b                              	pop ebx
0x804aab7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 bc aa 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aab8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aac8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aad8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aae8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aaf8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ab08:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ab18:   31 00 67 5f 32 00 67 5f  33 00 67 5f 36 00 67 5f   |1.g_2.g_3.g_6.g_|
0x804ab28:   39 00 67 5f 31 30 00 67  5f 31 31 00 67 5f 31 32   |9.g_10.g_11.g_12|
0x804ab38:   00 67 5f 32 30 00 67 5f  32 31 00 67 5f 33 34 00   |.g_20.g_21.g_34.|
0x804ab48:   67 5f 39 32 00 67 5f 39  33 00 67 5f 31 30 32 00   |g_92.g_93.g_102.|
0x804ab58:   67 5f 31 30 35 00 67 5f  31 34 37 00 67 5f 31 34   |g_105.g_147.g_14|
0x804ab68:   38 00 67 5f 31 34 39 00  67 5f 31 35 31 00 67 5f   |8.g_149.g_151.g_|
0x804ab78:   31 39 31 00 67 5f 32 32  30 00 67 5f 32 32 31 00   |191.g_220.g_221.|
0x804ab88:   67 5f 32 37 33 00 67 5f  32 38 37 00 67 5f 32 38   |g_273.g_287.g_28|
0x804ab98:   38 00 67 5f 32 39 38 00  67 5f 33 30 31 00 00 00   |8.g_298.g_301...|
0x804aba8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804abb8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804abc8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804abd8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804abe8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804abf8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ac08:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ac10:   01 1b 03 3b b0 02 00 00  55 00 00 00 e0 d6 ff ff   |...;....U.......|
0x804ac20:   e0 02 00 00 20 d7 ff ff  04 03 00 00 70 d7 ff ff   |.... .......p...|
0x804ac30:   cc 02 00 00 46 d8 ff ff  18 03 00 00 56 d8 ff ff   |....F.......V...|
0x804ac40:   38 03 00 00 84 d8 ff ff  5c 03 00 00 a2 d8 ff ff   |8.......\.......|
0x804ac50:   7c 03 00 00 ca d8 ff ff  9c 03 00 00 f4 d8 ff ff   ||...............|
0x804ac60:   bc 03 00 00 1d d9 ff ff  dc 03 00 00 60 d9 ff ff   |............`...|
0x804ac70:   fc 03 00 00 a1 d9 ff ff  1c 04 00 00 f9 d9 ff ff   |................|
0x804ac80:   40 04 00 00 4b da ff ff  64 04 00 00 88 da ff ff   |@...K...d.......|
0x804ac90:   84 04 00 00 bf da ff ff  a4 04 00 00 de da ff ff   |................|
0x804aca0:   c4 04 00 00 08 db ff ff  e4 04 00 00 34 db ff ff   |............4...|
0x804acb0:   04 05 00 00 5f db ff ff  24 05 00 00 a8 db ff ff   |...._...$.......|
0x804acc0:   44 05 00 00 ef db ff ff  64 05 00 00 49 dc ff ff   |D.......d...I...|
0x804acd0:   88 05 00 00 9d dc ff ff  ac 05 00 00 dc dc ff ff   |................|
0x804ace0:   cc 05 00 00 15 dd ff ff  ec 05 00 00 37 dd ff ff   |............7...|
0x804acf0:   0c 06 00 00 85 dd ff ff  2c 06 00 00 c1 dd ff ff   |........,.......|
0x804ad00:   4c 06 00 00 4a de ff ff  6c 06 00 00 7c de ff ff   |L...J...l...|...|
0x804ad10:   8c 06 00 00 ac de ff ff  ac 06 00 00 f1 de ff ff   |................|
0x804ad20:   cc 06 00 00 30 df ff ff  ec 06 00 00 62 df ff ff   |....0.......b...|
0x804ad30:   0c 07 00 00 8e df ff ff  2c 07 00 00 ac df ff ff   |........,.......|
0x804ad40:   4c 07 00 00 d4 df ff ff  6c 07 00 00 f9 df ff ff   |L.......l.......|
0x804ad50:   8c 07 00 00 1e e0 ff ff  ac 07 00 00 55 e0 ff ff   |............U...|
0x804ad60:   cc 07 00 00 89 e0 ff ff  ec 07 00 00 db e0 ff ff   |................|
0x804ad70:   10 08 00 00 27 e1 ff ff  34 08 00 00 5e e1 ff ff   |....'...4...^...|
0x804ad80:   54 08 00 00 8f e1 ff ff  74 08 00 00 ae e1 ff ff   |T.......t.......|
0x804ad90:   94 08 00 00 d8 e1 ff ff  b4 08 00 00 00 e2 ff ff   |................|
0x804ada0:   d4 08 00 00 29 e2 ff ff  f4 08 00 00 65 e2 ff ff   |....).......e...|
0x804adb0:   14 09 00 00 9f e2 ff ff  34 09 00 00 f2 e2 ff ff   |........4.......|
0x804adc0:   58 09 00 00 3f e3 ff ff  7c 09 00 00 77 e3 ff ff   |X...?...|...w...|
0x804add0:   9c 09 00 00 a9 e3 ff ff  bc 09 00 00 bd e3 ff ff   |................|
0x804ade0:   dc 09 00 00 d4 e3 ff ff  fc 09 00 00 e9 e3 ff ff   |................|
0x804adf0:   1c 0a 00 00 ff e3 ff ff  3c 0a 00 00 26 e4 ff ff   |........<...&...|
0x804ae00:   5c 0a 00 00 4b e4 ff ff  7c 0a 00 00 8a e4 ff ff   |\...K...|.......|
0x804ae10:   9c 0a 00 00 c3 e4 ff ff  bc 0a 00 00 ef e4 ff ff   |................|
0x804ae20:   dc 0a 00 00 15 e5 ff ff  fc 0a 00 00 57 e5 ff ff   |............W...|
0x804ae30:   1c 0b 00 00 99 e5 ff ff  3c 0b 00 00 db e5 ff ff   |........<.......|
0x804ae40:   5c 0b 00 00 50 e6 ff ff  7c 0b 00 00 ad e6 ff ff   |\...P...|.......|
0x804ae50:   9c 0b 00 00 0a e7 ff ff  bc 0b 00 00 67 e7 ff ff   |............g...|
0x804ae60:   dc 0b 00 00 f7 e7 ff ff  fc 0b 00 00 5b e8 ff ff   |............[...|
0x804ae70:   1c 0c 00 00 cb e8 ff ff  3c 0c 00 00 12 e9 ff ff   |........<.......|
0x804ae80:   60 0c 00 00 67 e9 ff ff  80 0c 00 00 ae e9 ff ff   |`...g...........|
0x804ae90:   a4 0c 00 00 16 ea ff ff  c8 0c 00 00 7b eb ff ff   |............{...|
0x804aea0:   f8 0c 00 00 93 fa ff ff  28 0d 00 00 27 fe ff ff   |........(...'...|
0x804aeb0:   60 0d 00 00 30 fe ff ff  74 0d 00 00 90 fe ff ff   |`...0...t.......|
0x804aec0:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804aec4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804aed4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804aee4:   9c d4 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804aef4:   30 00 00 00 f8 d3 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804af04:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804af14:   10 00 00 00 54 00 00 00  14 d4 ff ff 08 00 00 00   |....T...........|
0x804af24:   00 00 00 00 1c 00 00 00  68 00 00 00 26 d5 ff ff   |........h...&...|
0x804af34:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804af44:   04 04 00 00 20 00 00 00  88 00 00 00 16 d5 ff ff   |.... ...........|
0x804af54:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804af64:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804af74:   20 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   | ........A....B.|
0x804af84:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804af94:   1e d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804afa4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804afb4:   26 d5 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |&...*....A....B.|
0x804afc4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804afd4:   30 d5 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |0...)....A....B.|
0x804afe4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804aff4:   39 d5 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |9...C....A....B.|
0x804b004:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b014:   5c d5 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |\...A....A....B.|
0x804b024:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b034:   7d d5 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |}...X....A....B.|
0x804b044:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b054:   90 01 00 00 b1 d5 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b064:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b074:   1c 00 00 00 b4 01 00 00  df d5 ff ff 3d 00 00 00   |............=...|
0x804b084:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b094:   1c 00 00 00 d4 01 00 00  fc d5 ff ff 37 00 00 00   |............7...|
0x804b0a4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b0b4:   1c 00 00 00 f4 01 00 00  13 d6 ff ff 1f 00 00 00   |................|
0x804b0c4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b0d4:   1c 00 00 00 14 02 00 00  12 d6 ff ff 2a 00 00 00   |............*...|
0x804b0e4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b0f4:   1c 00 00 00 34 02 00 00  1c d6 ff ff 2c 00 00 00   |....4.......,...|
0x804b104:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b114:   1c 00 00 00 54 02 00 00  28 d6 ff ff 2b 00 00 00   |....T...(...+...|
0x804b124:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b134:   1c 00 00 00 74 02 00 00  33 d6 ff ff 49 00 00 00   |....t...3...I...|
0x804b144:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b154:   1c 00 00 00 94 02 00 00  5c d6 ff ff 47 00 00 00   |........\...G...|
0x804b164:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b174:   20 00 00 00 b4 02 00 00  83 d6 ff ff 5a 00 00 00   | ...........Z...|
0x804b184:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b194:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b9 d6 ff ff   |.... ...........|
0x804b1a4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b1b4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b1c4:   e9 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b1d4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b1e4:   08 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b1f4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b204:   21 d7 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |!..."....A....B.|
0x804b214:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b224:   23 d7 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |#...N....A....B.|
0x804b234:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b244:   51 d7 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |Q...<....A....B.|
0x804b254:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b264:   6d d7 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |m........A....B.|
0x804b274:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b284:   d6 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b294:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b2a4:   e8 d7 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b2b4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b2c4:   f8 d7 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b2d4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b2e4:   1d d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2f4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b304:   3c d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |<...2....A....B.|
0x804b314:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b324:   4e d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |N...,....A....B.|
0x804b334:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b344:   5a d8 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |Z........A....B.|
0x804b354:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b364:   58 d8 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |X...(....A....B.|
0x804b374:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b384:   60 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |`...%....A....B.|
0x804b394:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b3a4:   65 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |e...%....A....B.|
0x804b3b4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b3c4:   6a d8 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |j...7....A....B.|
0x804b3d4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b3e4:   81 d8 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b3f4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b404:   95 d8 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b414:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b424:   60 05 00 00 c3 d8 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b434:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b444:   1c 00 00 00 84 05 00 00  eb d8 ff ff 37 00 00 00   |............7...|
0x804b454:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b464:   1c 00 00 00 a4 05 00 00  02 d9 ff ff 31 00 00 00   |............1...|
0x804b474:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b484:   1c 00 00 00 c4 05 00 00  13 d9 ff ff 1f 00 00 00   |................|
0x804b494:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b4a4:   1c 00 00 00 e4 05 00 00  12 d9 ff ff 2a 00 00 00   |............*...|
0x804b4b4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b4c4:   1c 00 00 00 04 06 00 00  1c d9 ff ff 28 00 00 00   |............(...|
0x804b4d4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b4e4:   1c 00 00 00 24 06 00 00  24 d9 ff ff 29 00 00 00   |....$...$...)...|
0x804b4f4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b504:   1c 00 00 00 44 06 00 00  2d d9 ff ff 3c 00 00 00   |....D...-...<...|
0x804b514:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b524:   1c 00 00 00 64 06 00 00  49 d9 ff ff 3a 00 00 00   |....d...I...:...|
0x804b534:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b544:   20 00 00 00 84 06 00 00  63 d9 ff ff 53 00 00 00   | .......c...S...|
0x804b554:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b564:   c5 0c 04 04 20 00 00 00  a8 06 00 00 92 d9 ff ff   |.... ...........|
0x804b574:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b584:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b594:   bb d9 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b5a4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b5b4:   d3 d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b5c4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b5d4:   e5 d9 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5e4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b5f4:   d9 d9 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b604:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b614:   d0 d9 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b624:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b634:   c5 d9 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b644:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b654:   bb d9 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b664:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b674:   c2 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b684:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b694:   c7 d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b6a4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b6b4:   e6 d9 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b6c4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b6d4:   ff d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b6e4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b6f4:   0b da ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b704:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b714:   11 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b724:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b734:   33 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |3...B....A....B.|
0x804b744:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b754:   55 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |U...B....A....B.|
0x804b764:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b774:   77 da ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |w...u....A....B.|
0x804b784:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b794:   cc da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b7a4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b7b4:   09 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b7c4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b7d4:   46 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |F...]....A....B.|
0x804b7e4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b7f4:   83 db ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b804:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b814:   f3 db ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b824:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b834:   37 dc ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |7...p....A....B.|
0x804b844:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b854:   87 dc ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b864:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b874:   b0 09 00 00 aa dc ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b884:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b894:   d0 09 00 00 df dc ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b8a4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b8b4:   20 00 00 00 f4 09 00 00  02 dd ff ff 68 00 00 00   | ...........h...|
0x804b8c4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b8d4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 46 dd ff ff   |....,.......F...|
0x804b8e4:   65 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |e....A....B..F..|
0x804b8f4:   86 04 83 05 03 58 01 c3  41 c6 41 c7 41 c5 0c 04   |.....X..A.A.A...|
0x804b904:   04 00 00 00 2c 00 00 00  48 0a 00 00 7b de ff ff   |....,...H...{...|
0x804b914:   18 0f 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804b924:   86 04 83 05 03 08 0f c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b934:   04 00 00 00 34 00 00 00  78 0a 00 00 63 ed ff ff   |....4...x...c...|
0x804b944:   94 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b954:   0f 03 75 78 06 10 03 02  75 7c 03 7f 03 c1 0c 01   |..ux....u|......|
0x804b964:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b974:   b0 0a 00 00 bf f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b984:   48 00 00 00 c4 0a 00 00  b4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804b994:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b9a4:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b9b4:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b9c4:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b9d4:   10 0b 00 00 c8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b9e4:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 a4 aa 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804d028:   01 00 00 00 84 33 c6 33  52 d9 9d 6b ff ff ff ff   |.....3.3R..k....|
0x804d038:   d1 47 cc 83 ff 00 00 00  bd 52 be ba 5c 0e a4 85   |.G.......R..\...|
0x804d048:   01 a4 00 00 01 00 00 00  ff ff ff ff 44 7f a5 d2   |............D...|
0x804d058:   19 20 3d 7f ac 47 cd 64  fe 00 00 00 fb ff ff ff   |. =..G.d........|
0x804d068:   ff ff 00 00 fb ff ff ff  f9 ff ??                  |..........?     |
