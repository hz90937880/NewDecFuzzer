;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:40:56
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 90 d2 ff ff               	lea eax, [ebx - 0x2d70]
0x804835c:   50                              	push eax
0x804835d:   8d 83 30 d2 ff ff               	lea eax, [ebx - 0x2dd0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 86 ae 04 08               	mov eax, 0x804ae86
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 e0 04 08                  	mov eax, 0x804e078
0x80483a5:   3d 78 e0 04 08                  	cmp eax, 0x804e078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 e0 04 08                  	push 0x804e078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 e0 04 08                  	mov eax, 0x804e078
0x80483e5:   2d 78 e0 04 08                  	sub eax, 0x804e078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 e0 04 08                  	push 0x804e078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 be 2d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 aa 2d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 b0 d2 ff ff               	lea edx, [eax - 0x2d50]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 7d 2d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 5f 2d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 37 2d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 0d 2d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 e4 2c 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 a1 2c 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 5f 2c 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 07 2c 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 b6 2b 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 79 2b 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 42 2b 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 23 2b 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 f9 2a 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 cd 2a 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 a2 2a 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 59 2a 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 11 2a 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 b7 29 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 64 29 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 25 29 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 ef 28 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 cd 28 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 7f 28 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 43 28 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 ba 27 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 88 27 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 58 27 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 13 27 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 d4 26 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 a2 26 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 73 26 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 55 26 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 2d 26 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 08 26 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 e3 25 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 ac 25 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 77 25 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 25 25 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 da 24 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 a3 24 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 72 24 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 53 24 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 29 24 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 01 24 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 d8 23 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 9c 23 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 61 23 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 0e 23 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 c2 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 8a 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 5b 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 47 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 30 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 1b 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 05 22 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 de 21 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 b9 21 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 7a 21 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 41 21 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 15 21 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 ef 20 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 a0 d3 ff ff               	fld dword ptr [eax - 0x2c60]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 a0 d3 ff ff               	fld dword ptr [eax - 0x2c60]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 a4 d3 ff ff               	fld dword ptr [eax - 0x2c5c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 ad 20 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 a0 d3 ff ff               	fld dword ptr [eax - 0x2c60]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 a0 d3 ff ff               	fld dword ptr [eax - 0x2c60]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 a4 d3 ff ff               	fld dword ptr [eax - 0x2c5c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 6b 20 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 a8 d3 ff ff               	fld dword ptr [eax - 0x2c58]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 ac d3 ff ff               	fld dword ptr [eax - 0x2c54]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 b0 d3 ff ff               	fld dword ptr [eax - 0x2c50]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 29 20 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 b4 d3 ff ff               	fld dword ptr [eax - 0x2c4c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 b8 d3 ff ff               	fld dword ptr [eax - 0x2c48]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 bc d3 ff ff               	fld dword ptr [eax - 0x2c44]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 b1 1f 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 c8 d3 ff ff               	fld qword ptr [eax - 0x2c38]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 54 1f 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 c8 d3 ff ff               	fld qword ptr [eax - 0x2c38]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 f7 1e 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 d0 d3 ff ff               	fld qword ptr [eax - 0x2c30]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 d8 d3 ff ff               	fld qword ptr [eax - 0x2c28]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 e0 d3 ff ff               	fld qword ptr [eax - 0x2c20]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 9a 1e 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 e8 d3 ff ff               	fld qword ptr [eax - 0x2c18]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 f0 d3 ff ff               	fld qword ptr [eax - 0x2c10]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 f8 d3 ff ff               	fld qword ptr [eax - 0x2c08]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 0a 1e 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 00 d4 ff ff               	fld dword ptr [eax - 0x2c00]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 04 d4 ff ff               	fld dword ptr [eax - 0x2bfc]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 a6 1d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 35 1d 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 f2 1c 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 c0 d2 ff ff               	lea eax, [ebx - 0x2d40]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 e4 d2 ff ff               	lea eax, [ebx - 0x2d1c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 ea 1b 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 49 00 00                  	add eax, 0x49ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 08 d3 ff ff               	lea edx, [eax - 0x2cf8]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x8049806
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 54                        	sub esp, 0x54
0x804965d:   e8 be 1b 00 00                  	call 0x804b220 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 49 00 00               	add edx, 0x499e
0x8049668:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804966b:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x804966e:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049671:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049674:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x8049677:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804967a:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804967d:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049680:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x8049683:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049686:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049689:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804968c:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x804968f:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049692:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x8049695:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049698:   8b 7d 5c                        	mov edi, dword ptr [ebp + 0x5c]
0x804969b:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x804969e:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x80496a1:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x80496a4:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x80496a7:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496ab:   89 c8                           	mov eax, ecx
0x80496ad:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496b1:   89 d8                           	mov eax, ebx
0x80496b3:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496b6:   89 f0                           	mov eax, esi
0x80496b8:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496bb:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80496bf:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496c2:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x80496c6:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496c9:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496cd:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496d1:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496d5:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496d9:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496dd:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496e1:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496e5:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496e8:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496ec:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496ef:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496f3:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496f6:   89 f8                           	mov eax, edi
0x80496f8:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496ff:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049705:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049709:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x8049710:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049714:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x804971b:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804971f:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x8049725:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049728:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804972e:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049731:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049737:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804973b:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049741:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049744:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804974a:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804974e:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x8049754:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049758:   88 82 41 00 00 00               	mov byte ptr [edx + 0x41], al
0x804975e:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049761:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049767:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804976a:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049770:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049773:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049779:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804977c:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049782:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049786:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x804978d:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049791:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x8049798:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804979c:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x80497a3:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80497a6:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497ac:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497af:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497b5:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497b8:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497be:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497c2:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497c8:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497cc:   88 82 a8 04 00 00               	mov byte ptr [edx + 0x4a8], al
0x80497d2:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497d5:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497db:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497df:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x80497e5:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497e8:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497ee:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497f2:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x80497f9:   b8 00 00 00 00                  	mov eax, 0
0x80497fe:   83 c4 54                        	add esp, 0x54
0x8049801:   5b                              	pop ebx
0x8049802:   5e                              	pop esi
0x8049803:   5f                              	pop edi
0x8049804:   5d                              	pop ebp
0x8049805:   c3                              	ret 
; function: func_1 at 0x8049806 -- 0x804ae86
0x8049806:   55                              	push ebp
0x8049807:   89 e5                           	mov ebp, esp
0x8049809:   57                              	push edi
0x804980a:   56                              	push esi
0x804980b:   53                              	push ebx
0x804980c:   81 ec 6c 01 00 00               	sub esp, 0x16c
0x8049812:   e8 05 1a 00 00                  	call 0x804b21c <__x86.get_pc_thunk.ax>
0x8049817:   05 e9 47 00 00                  	add eax, 0x47e9
0x804981c:   c7 85 64 ff ff ff 3e b1 c8 ea   	mov dword ptr [ebp - 0x9c], 0xeac8b13e
0x8049826:   66 c7 45 f0 09 00               	mov word ptr [ebp - 0x10], 9
0x804982c:   66 c7 45 f2 f8 ff               	mov word ptr [ebp - 0xe], 0xfff8
0x8049832:   c6 45 ef 3d                     	mov byte ptr [ebp - 0x11], 0x3d
0x8049836:   c7 45 e8 fa ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffa
0x804983d:   c7 45 e4 96 90 87 ee            	mov dword ptr [ebp - 0x1c], 0xee879096
0x8049844:   c6 45 e3 79                     	mov byte ptr [ebp - 0x1d], 0x79
0x8049848:   c7 45 dc a8 a5 d6 40            	mov dword ptr [ebp - 0x24], 0x40d6a5a8
0x804984f:   c6 45 db 01                     	mov byte ptr [ebp - 0x25], 1
0x8049853:   c6 45 da ff                     	mov byte ptr [ebp - 0x26], 0xff
0x8049857:   c7 45 d4 ba c0 6e 61            	mov dword ptr [ebp - 0x2c], 0x616ec0ba
0x804985e:   c7 45 d0 fe ff ff ff            	mov dword ptr [ebp - 0x30], 0xfffffffe
0x8049865:   c7 45 cc c2 92 f8 c2            	mov dword ptr [ebp - 0x34], 0xc2f892c2
0x804986c:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x8049876:   66 c7 85 5e ff ff ff c1 df      	mov word ptr [ebp - 0xa2], 0xdfc1
0x804987f:   66 c7 45 ca ff ff               	mov word ptr [ebp - 0x36], 0xffff
0x8049885:   66 c7 45 c8 fb ff               	mov word ptr [ebp - 0x38], 0xfffb
0x804988b:   c7 45 c4 02 00 00 00            	mov dword ptr [ebp - 0x3c], 2
0x8049892:   c7 45 c0 ff ff ff ff            	mov dword ptr [ebp - 0x40], 0xffffffff
0x8049899:   c7 45 bc f6 ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffff6
0x80498a0:   c6 45 bb ff                     	mov byte ptr [ebp - 0x45], 0xff
0x80498a4:   c6 85 5d ff ff ff 00            	mov byte ptr [ebp - 0xa3], 0
0x80498ab:   c7 45 b4 39 c1 b6 eb            	mov dword ptr [ebp - 0x4c], 0xebb6c139
0x80498b2:   c6 85 5c ff ff ff 01            	mov byte ptr [ebp - 0xa4], 1
0x80498b9:   c7 45 b0 9e b5 78 b6            	mov dword ptr [ebp - 0x50], 0xb678b59e
0x80498c0:   66 c7 45 ae fe ff               	mov word ptr [ebp - 0x52], 0xfffe
0x80498c6:   66 c7 45 ac fe ff               	mov word ptr [ebp - 0x54], 0xfffe
0x80498cc:   c7 45 a8 6b ef 08 87            	mov dword ptr [ebp - 0x58], 0x8708ef6b
0x80498d3:   c7 45 a4 ea 0a 3f 7a            	mov dword ptr [ebp - 0x5c], 0x7a3f0aea
0x80498da:   66 c7 45 a2 01 00               	mov word ptr [ebp - 0x5e], 1
0x80498e0:   c7 45 9c f8 ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffff8
0x80498e7:   c7 45 98 18 2a 96 35            	mov dword ptr [ebp - 0x68], 0x35962a18
0x80498ee:   66 c7 85 5a ff ff ff fd ff      	mov word ptr [ebp - 0xa6], 0xfffd
0x80498f7:   c7 85 54 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffffa
0x8049901:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049907:   89 c2                           	mov edx, eax
0x8049909:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804990d:   31 d0                           	xor eax, edx
0x804990f:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049913:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049917:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804991a:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049920:   89 c2                           	mov edx, eax
0x8049922:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049926:   21 d0                           	and eax, edx
0x8049928:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804992c:   b8 01 00 00 00                  	mov eax, 1
0x8049931:   0f bf d0                        	movsx edx, ax
0x8049934:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x8049938:   89 c1                           	mov ecx, eax
0x804993a:   d3 fa                           	sar edx, cl
0x804993c:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049940:   39 c2                           	cmp edx, eax
0x8049942:   0f 9e c0                        	setle al
0x8049945:   0f b6 d0                        	movzx edx, al
0x8049948:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804994c:   0f b7 c0                        	movzx eax, ax
0x804994f:   29 c2                           	sub edx, eax
0x8049951:   89 d0                           	mov eax, edx
0x8049953:   23 45 a8                        	and eax, dword ptr [ebp - 0x58]
0x8049956:   3d fe ff 00 00                  	cmp eax, 0xfffe
0x804995b:   0f 86 ee 00 00 00               	jbe 0x8049a4f <func_1+0x249>
0x8049961:   c7 85 14 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xec], 6
0x804996b:   c7 85 10 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf0], 1
0x8049975:   c7 85 0c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xf4], 9
0x804997f:   c7 85 08 ff ff ff 2f 07 98 bc   	mov dword ptr [ebp - 0xf8], 0xbc98072f
0x8049989:   c7 85 04 ff ff ff 30 f2 e1 0f   	mov dword ptr [ebp - 0xfc], 0xfe1f230
0x8049993:   c7 85 00 ff ff ff 2a ae 86 b7   	mov dword ptr [ebp - 0x100], 0xb786ae2a
0x804999d:   66 c7 85 fe fe ff ff 51 1f      	mov word ptr [ebp - 0x102], 0x1f51
0x80499a6:   80 65 ef 06                     	and byte ptr [ebp - 0x11], 6
0x80499aa:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x80499b0:   e9 82 00 00 00                  	jmp 0x8049a37 <func_1+0x231>
0x80499b5:   c6 85 fd fe ff ff 78            	mov byte ptr [ebp - 0x103], 0x78
0x80499bc:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x80499c3:   75 50                           	jne 0x8049a15 <func_1+0x20f>
0x80499c5:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x80499ca:   75 09                           	jne 0x80499d5 <func_1+0x1cf>
0x80499cc:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x80499d3:   74 07                           	je 0x80499dc <func_1+0x1d6>
0x80499d5:   b8 01 00 00 00                  	mov eax, 1
0x80499da:   eb 05                           	jmp 0x80499e1 <func_1+0x1db>
0x80499dc:   b8 00 00 00 00                  	mov eax, 0
0x80499e1:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x80499e4:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x80499e8:   0b 85 14 ff ff ff               	or eax, dword ptr [ebp - 0xec]
0x80499ee:   83 f8 1c                        	cmp eax, 0x1c
0x80499f1:   77 06                           	ja 0x80499f9 <func_1+0x1f3>
0x80499f3:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x80499f7:   74 07                           	je 0x8049a00 <func_1+0x1fa>
0x80499f9:   b8 01 00 00 00                  	mov eax, 1
0x80499fe:   eb 05                           	jmp 0x8049a05 <func_1+0x1ff>
0x8049a00:   b8 00 00 00 00                  	mov eax, 0
0x8049a05:   3d f2 4c 2b 84                  	cmp eax, 0x842b4cf2
0x8049a0a:   75 09                           	jne 0x8049a15 <func_1+0x20f>
0x8049a0c:   80 bd fd fe ff ff 00            	cmp byte ptr [ebp - 0x103], 0
0x8049a13:   74 07                           	je 0x8049a1c <func_1+0x216>
0x8049a15:   b8 01 00 00 00                  	mov eax, 1
0x8049a1a:   eb 05                           	jmp 0x8049a21 <func_1+0x21b>
0x8049a1c:   b8 00 00 00 00                  	mov eax, 0
0x8049a21:   98                              	cwde 
0x8049a22:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x8049a26:   99                              	cdq 
0x8049a27:   f7 fe                           	idiv esi
0x8049a29:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049a2c:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a30:   83 e8 04                        	sub eax, 4
0x8049a33:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049a37:   66 83 7d f2 ef                  	cmp word ptr [ebp - 0xe], -0x11
0x8049a3c:   0f 8c 73 ff ff ff               	jl 0x80499b5 <func_1+0x1af>
0x8049a42:   66 83 ad fe fe ff ff 01         	sub word ptr [ebp - 0x102], 1
0x8049a4a:   e9 df 07 00 00                  	jmp 0x804a22e <func_1+0xa28>
0x8049a4f:   66 c7 45 96 00 00               	mov word ptr [ebp - 0x6a], 0
0x8049a55:   c7 85 50 ff ff ff fa ea 23 ef   	mov dword ptr [ebp - 0xb0], 0xef23eafa
0x8049a5f:   c7 45 90 06 58 84 07            	mov dword ptr [ebp - 0x70], 0x7845806
0x8049a66:   c7 45 8c 32 99 d2 92            	mov dword ptr [ebp - 0x74], 0x92d29932
0x8049a6d:   66 c7 85 4e ff ff ff f6 ff      	mov word ptr [ebp - 0xb2], 0xfff6
0x8049a76:   c6 85 4d ff ff ff 59            	mov byte ptr [ebp - 0xb3], 0x59
0x8049a7d:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x8049a84:   e9 f5 06 00 00                  	jmp 0x804a17e <func_1+0x978>
0x8049a89:   c6 85 4c ff ff ff 3a            	mov byte ptr [ebp - 0xb4], 0x3a
0x8049a90:   c7 85 48 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xb8], 9
0x8049a9a:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049aa1:   0f bf 4d f0                     	movsx ecx, word ptr [ebp - 0x10]
0x8049aa5:   b8 01 00 00 00                  	mov eax, 1
0x8049aaa:   99                              	cdq 
0x8049aab:   f7 7d e8                        	idiv dword ptr [ebp - 0x18]
0x8049aae:   0f bf d8                        	movsx ebx, ax
0x8049ab1:   89 c8                           	mov eax, ecx
0x8049ab3:   99                              	cdq 
0x8049ab4:   f7 fb                           	idiv ebx
0x8049ab6:   89 d0                           	mov eax, edx
0x8049ab8:   3d d3 58 00 00                  	cmp eax, 0x58d3
0x8049abd:   75 07                           	jne 0x8049ac6 <func_1+0x2c0>
0x8049abf:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049ac4:   74 07                           	je 0x8049acd <func_1+0x2c7>
0x8049ac6:   b8 01 00 00 00                  	mov eax, 1
0x8049acb:   eb 05                           	jmp 0x8049ad2 <func_1+0x2cc>
0x8049acd:   b8 00 00 00 00                  	mov eax, 0
0x8049ad2:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x8049ad8:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x8049ade:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x8049ae4:   0f 95 c0                        	setne al
0x8049ae7:   89 c2                           	mov edx, eax
0x8049ae9:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049aed:   29 c2                           	sub edx, eax
0x8049aef:   89 d0                           	mov eax, edx
0x8049af1:   0f be c0                        	movsx eax, al
0x8049af4:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x8049af7:   0f be ca                        	movsx ecx, dl
0x8049afa:   99                              	cdq 
0x8049afb:   f7 f9                           	idiv ecx
0x8049afd:   89 d0                           	mov eax, edx
0x8049aff:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049b02:   0f 94 c0                        	sete al
0x8049b05:   0f b6 d0                        	movzx edx, al
0x8049b08:   0f b6 85 4c ff ff ff            	movzx eax, byte ptr [ebp - 0xb4]
0x8049b0f:   89 c1                           	mov ecx, eax
0x8049b11:   d3 fa                           	sar edx, cl
0x8049b13:   89 d0                           	mov eax, edx
0x8049b15:   85 c0                           	test eax, eax
0x8049b17:   74 07                           	je 0x8049b20 <func_1+0x31a>
0x8049b19:   b8 01 00 00 00                  	mov eax, 1
0x8049b1e:   eb 05                           	jmp 0x8049b25 <func_1+0x31f>
0x8049b20:   b8 00 00 00 00                  	mov eax, 0
0x8049b25:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049b28:   0f 9f c0                        	setg al
0x8049b2b:   0f b6 d0                        	movzx edx, al
0x8049b2e:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x8049b32:   09 d0                           	or eax, edx
0x8049b34:   85 c0                           	test eax, eax
0x8049b36:   75 09                           	jne 0x8049b41 <func_1+0x33b>
0x8049b38:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x8049b3f:   74 07                           	je 0x8049b48 <func_1+0x342>
0x8049b41:   b8 01 00 00 00                  	mov eax, 1
0x8049b46:   eb 05                           	jmp 0x8049b4d <func_1+0x347>
0x8049b48:   b8 00 00 00 00                  	mov eax, 0
0x8049b4d:   3b 45 a8                        	cmp eax, dword ptr [ebp - 0x58]
0x8049b50:   75 67                           	jne 0x8049bb9 <func_1+0x3b3>
0x8049b52:   c7 85 20 ff ff ff d5 cd 28 0d   	mov dword ptr [ebp - 0xe0], 0xd28cdd5
0x8049b5c:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049b61:   0f 85 23 06 00 00               	jne 0x804a18a <func_1+0x984>
0x8049b67:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x8049b6e:   0f 85 05 06 00 00               	jne 0x804a179 <func_1+0x973>
0x8049b74:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049b7a:   35 ea c9 a2 70                  	xor eax, 0x70a2c9ea
0x8049b7f:   0d f6 f9 00 00                  	or eax, 0xf9f6
0x8049b84:   85 c0                           	test eax, eax
0x8049b86:   0f 9f c0                        	setg al
0x8049b89:   0f b6 c0                        	movzx eax, al
0x8049b8c:   66 89 45 96                     	mov word ptr [ebp - 0x6a], ax
0x8049b90:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x8049b96:   eb 15                           	jmp 0x8049bad <func_1+0x3a7>
0x8049b98:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049b9c:   0f 85 7f 04 00 00               	jne 0x804a021 <func_1+0x81b>
0x8049ba2:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049ba6:   83 c0 01                        	add eax, 1
0x8049ba9:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049bad:   66 83 7d f2 0b                  	cmp word ptr [ebp - 0xe], 0xb
0x8049bb2:   7e e4                           	jle 0x8049b98 <func_1+0x392>
0x8049bb4:   e9 69 04 00 00                  	jmp 0x804a022 <func_1+0x81c>
0x8049bb9:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x8049bc3:   c7 85 40 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xc0], 0xfffffffc
0x8049bcd:   66 c7 85 3e ff ff ff 48 c8      	mov word ptr [ebp - 0xc2], 0xc848
0x8049bd6:   c6 85 3d ff ff ff f9            	mov byte ptr [ebp - 0xc3], 0xf9
0x8049bdd:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049be1:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049be5:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049be9:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049bed:   0f bf 4d f0                     	movsx ecx, word ptr [ebp - 0x10]
0x8049bf1:   83 7d e4 5e                     	cmp dword ptr [ebp - 0x1c], 0x5e
0x8049bf5:   0f 94 c0                        	sete al
0x8049bf8:   0f b6 c0                        	movzx eax, al
0x8049bfb:   8b 95 48 ff ff ff               	mov edx, dword ptr [ebp - 0xb8]
0x8049c01:   0f be f2                        	movsx esi, dl
0x8049c04:   99                              	cdq 
0x8049c05:   f7 fe                           	idiv esi
0x8049c07:   39 c1                           	cmp ecx, eax
0x8049c09:   0f 94 c0                        	sete al
0x8049c0c:   0f b6 c0                        	movzx eax, al
0x8049c0f:   89 c2                           	mov edx, eax
0x8049c11:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049c15:   31 d0                           	xor eax, edx
0x8049c17:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049c1a:   0f b7 55 ac                     	movzx edx, word ptr [ebp - 0x54]
0x8049c1e:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x8049c22:   31 d0                           	xor eax, edx
0x8049c24:   09 85 44 ff ff ff               	or dword ptr [ebp - 0xbc], eax
0x8049c2a:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049c30:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049c33:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049c37:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049c3a:   8b 95 50 ff ff ff               	mov edx, dword ptr [ebp - 0xb0]
0x8049c40:   8d b2 51 41 2c 8d               	lea esi, [edx - 0x72d3beaf]
0x8049c46:   ba 00 00 00 00                  	mov edx, 0
0x8049c4b:   f7 f6                           	div esi
0x8049c4d:   66 85 c0                        	test ax, ax
0x8049c50:   0f 84 38 02 00 00               	je 0x8049e8e <func_1+0x688>
0x8049c56:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x8049c60:   c6 45 87 01                     	mov byte ptr [ebp - 0x79], 1
0x8049c64:   c7 85 2c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xd4], 0xfffffffa
0x8049c6e:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049c73:   0f 84 c0 00 00 00               	je 0x8049d39 <func_1+0x533>
0x8049c79:   c7 85 24 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xdc], 0xffffffff
0x8049c83:   83 ad 24 ff ff ff 01            	sub dword ptr [ebp - 0xdc], 1
0x8049c8a:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x8049c8e:   0f 94 c0                        	sete al
0x8049c91:   0f b6 c0                        	movzx eax, al
0x8049c94:   21 85 48 ff ff ff               	and dword ptr [ebp - 0xb8], eax
0x8049c9a:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x8049ca0:   83 f8 01                        	cmp eax, 1
0x8049ca3:   0f 96 c0                        	setbe al
0x8049ca6:   0f b6 c0                        	movzx eax, al
0x8049ca9:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049cad:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049cb2:   75 07                           	jne 0x8049cbb <func_1+0x4b5>
0x8049cb4:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049cb9:   74 07                           	je 0x8049cc2 <func_1+0x4bc>
0x8049cbb:   b8 01 00 00 00                  	mov eax, 1
0x8049cc0:   eb 05                           	jmp 0x8049cc7 <func_1+0x4c1>
0x8049cc2:   b8 00 00 00 00                  	mov eax, 0
0x8049cc7:   0f b6 d0                        	movzx edx, al
0x8049cca:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049cd0:   0f b6 c0                        	movzx eax, al
0x8049cd3:   89 c1                           	mov ecx, eax
0x8049cd5:   d3 e2                           	shl edx, cl
0x8049cd7:   89 d0                           	mov eax, edx
0x8049cd9:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x8049cdf:   74 04                           	je 0x8049ce5 <func_1+0x4df>
0x8049ce1:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049ce5:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x8049ce9:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049ced:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x8049cf3:   0f 95 c0                        	setne al
0x8049cf6:   0f b6 c8                        	movzx ecx, al
0x8049cf9:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049cff:   0f b7 c0                        	movzx eax, ax
0x8049d02:   0f af c1                        	imul eax, ecx
0x8049d05:   c1 e8 1f                        	shr eax, 0x1f
0x8049d08:   0f b6 c0                        	movzx eax, al
0x8049d0b:   39 c2                           	cmp edx, eax
0x8049d0d:   0f 9c c0                        	setl al
0x8049d10:   0f b6 c0                        	movzx eax, al
0x8049d13:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x8049d19:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049d1f:   32 45 e3                        	xor al, byte ptr [ebp - 0x1d]
0x8049d22:   f7 d8                           	neg eax
0x8049d24:   20 45 da                        	and byte ptr [ebp - 0x26], al
0x8049d27:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x8049d2b:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049d2e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d31:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x8049d34:   e9 81 00 00 00                  	jmp 0x8049dba <func_1+0x5b4>
0x8049d39:   c7 85 28 ff ff ff 72 d2 bf 43   	mov dword ptr [ebp - 0xd8], 0x43bfd272
0x8049d43:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049d46:   0f be d0                        	movsx edx, al
0x8049d49:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049d4c:   89 c3                           	mov ebx, eax
0x8049d4e:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049d54:   89 c1                           	mov ecx, eax
0x8049d56:   89 d8                           	mov eax, ebx
0x8049d58:   0f af c1                        	imul eax, ecx
0x8049d5b:   0f b6 c8                        	movzx ecx, al
0x8049d5e:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049d62:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049d65:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049d69:   0f af c1                        	imul eax, ecx
0x8049d6c:   85 c0                           	test eax, eax
0x8049d6e:   75 09                           	jne 0x8049d79 <func_1+0x573>
0x8049d70:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049d77:   74 07                           	je 0x8049d80 <func_1+0x57a>
0x8049d79:   b8 01 00 00 00                  	mov eax, 1
0x8049d7e:   eb 05                           	jmp 0x8049d85 <func_1+0x57f>
0x8049d80:   b8 00 00 00 00                  	mov eax, 0
0x8049d85:   0f be c8                        	movsx ecx, al
0x8049d88:   89 d0                           	mov eax, edx
0x8049d8a:   99                              	cdq 
0x8049d8b:   f7 f9                           	idiv ecx
0x8049d8d:   89 d0                           	mov eax, edx
0x8049d8f:   85 c0                           	test eax, eax
0x8049d91:   0f 94 c0                        	sete al
0x8049d94:   0f b6 c0                        	movzx eax, al
0x8049d97:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049d9a:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049d9d:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049da0:   81 8d 28 ff ff ff 6c d9 ed dc   	or dword ptr [ebp - 0xd8], 0xdcedd96c
0x8049daa:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049db1:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049db7:   88 45 87                        	mov byte ptr [ebp - 0x79], al
0x8049dba:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x8049dc1:   74 1d                           	je 0x8049de0 <func_1+0x5da>
0x8049dc3:   80 65 da 5c                     	and byte ptr [ebp - 0x26], 0x5c
0x8049dc7:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x8049dcb:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049dce:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049dd1:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049dd5:   0f be c0                        	movsx eax, al
0x8049dd8:   89 c1                           	mov ecx, eax
0x8049dda:   d3 e2                           	shl edx, cl
0x8049ddc:   89 d0                           	mov eax, edx
0x8049dde:   85 c0                           	test eax, eax
0x8049de0:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049de5:   74 26                           	je 0x8049e0d <func_1+0x607>
0x8049de7:   66 c7 45 a2 f6 ff               	mov word ptr [ebp - 0x5e], 0xfff6
0x8049ded:   c7 85 40 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xc0], 7
0x8049df7:   c7 45 90 36 00 00 00            	mov dword ptr [ebp - 0x70], 0x36
0x8049dfe:   c7 45 8c c6 ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffc6
0x8049e05:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049e08:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049e0b:   eb 72                           	jmp 0x8049e7f <func_1+0x679>
0x8049e0d:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049e10:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049e13:   0f b6 8d 4c ff ff ff            	movzx ecx, byte ptr [ebp - 0xb4]
0x8049e1a:   ba 67 66 66 66                  	mov edx, 0x66666667
0x8049e1f:   89 c8                           	mov eax, ecx
0x8049e21:   f7 ea                           	imul edx
0x8049e23:   c1 fa 02                        	sar edx, 2
0x8049e26:   89 c8                           	mov eax, ecx
0x8049e28:   c1 f8 1f                        	sar eax, 0x1f
0x8049e2b:   29 c2                           	sub edx, eax
0x8049e2d:   89 d0                           	mov eax, edx
0x8049e2f:   c1 e0 02                        	shl eax, 2
0x8049e32:   01 d0                           	add eax, edx
0x8049e34:   01 c0                           	add eax, eax
0x8049e36:   29 c1                           	sub ecx, eax
0x8049e38:   81 75 a4 e6 00 00 00            	xor dword ptr [ebp - 0x5c], 0xe6
0x8049e3f:   83 7d a8 ff                     	cmp dword ptr [ebp - 0x58], -1
0x8049e43:   0f 9d c0                        	setge al
0x8049e46:   0f b6 d0                        	movzx edx, al
0x8049e49:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049e4f:   0f be c0                        	movsx eax, al
0x8049e52:   0f af c2                        	imul eax, edx
0x8049e55:   3d 91 00 00 00                  	cmp eax, 0x91
0x8049e5a:   7f 0d                           	jg 0x8049e69 <func_1+0x663>
0x8049e5c:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049e60:   74 07                           	je 0x8049e69 <func_1+0x663>
0x8049e62:   b8 01 00 00 00                  	mov eax, 1
0x8049e67:   eb 05                           	jmp 0x8049e6e <func_1+0x668>
0x8049e69:   b8 00 00 00 00                  	mov eax, 0
0x8049e6e:   3d 89 00 00 00                  	cmp eax, 0x89
0x8049e73:   0f 9f c0                        	setg al
0x8049e76:   0f b6 c0                        	movzx eax, al
0x8049e79:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x8049e7f:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049e83:   0f 84 99 01 00 00               	je 0x804a022 <func_1+0x81c>
0x8049e89:   e9 06 03 00 00                  	jmp 0x804a194 <func_1+0x98e>
0x8049e8e:   c7 85 38 ff ff ff e9 3e bc 26   	mov dword ptr [ebp - 0xc8], 0x26bc3ee9
0x8049e98:   c7 85 34 ff ff ff 9d 30 af fd   	mov dword ptr [ebp - 0xcc], 0xfdaf309d
0x8049ea2:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x8049ea6:   0f 85 e1 02 00 00               	jne 0x804a18d <func_1+0x987>
0x8049eac:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049eaf:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049eb2:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049eb6:   74 21                           	je 0x8049ed9 <func_1+0x6d3>
0x8049eb8:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049ebc:   75 07                           	jne 0x8049ec5 <func_1+0x6bf>
0x8049ebe:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x8049ec5:   b8 01 00 00 00                  	mov eax, 1
0x8049eca:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x8049ecd:   83 f8 fa                        	cmp eax, -6
0x8049ed0:   77 07                           	ja 0x8049ed9 <func_1+0x6d3>
0x8049ed2:   b8 01 00 00 00                  	mov eax, 1
0x8049ed7:   eb 05                           	jmp 0x8049ede <func_1+0x6d8>
0x8049ed9:   b8 00 00 00 00                  	mov eax, 0
0x8049ede:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x8049ee4:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049eea:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x8049ef0:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049ef3:   0f b7 c0                        	movzx eax, ax
0x8049ef6:   c1 e0 0b                        	shl eax, 0xb
0x8049ef9:   3d 40 41 cc 85                  	cmp eax, 0x85cc4140
0x8049efe:   0f 96 c0                        	setbe al
0x8049f01:   0f b6 c0                        	movzx eax, al
0x8049f04:   66 89 85 3e ff ff ff            	mov word ptr [ebp - 0xc2], ax
0x8049f0b:   b8 00 00 00 00                  	mov eax, 0
0x8049f10:   20 85 3d ff ff ff               	and byte ptr [ebp - 0xc3], al
0x8049f16:   0f b6 85 4c ff ff ff            	movzx eax, byte ptr [ebp - 0xb4]
0x8049f1d:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049f20:   0f 82 dc 00 00 00               	jb 0x804a002 <func_1+0x7fc>
0x8049f26:   83 ad 60 ff ff ff 01            	sub dword ptr [ebp - 0xa0], 1
0x8049f2d:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049f31:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x8049f38:   0f be 8d 5d ff ff ff            	movsx ecx, byte ptr [ebp - 0xa3]
0x8049f3f:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x8049f43:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x8049f47:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049f4d:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x8049f51:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x8049f57:   0f bf bd 5e ff ff ff            	movsx edi, word ptr [ebp - 0xa2]
0x8049f5e:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049f64:   0f be 5d da                     	movsx ebx, byte ptr [ebp - 0x26]
0x8049f68:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049f6e:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x8049f72:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049f78:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x8049f7c:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049f82:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x8049f86:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x8049f8c:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x8049f90:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x8049f94:   50                              	push eax
0x8049f95:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049f98:   52                              	push edx
0x8049f99:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049f9c:   51                              	push ecx
0x8049f9d:   56                              	push esi
0x8049f9e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049fa1:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049fa4:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049fa7:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049fad:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049fb3:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049fb9:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049fbf:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049fc2:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049fc5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049fc8:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049fce:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049fd4:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049fd7:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049fdd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049fe0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049fe3:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049fe9:   57                              	push edi
0x8049fea:   53                              	push ebx
0x8049feb:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049ff1:   e8 5e f6 ff ff                  	call 0x8049654 <set_var>
0x8049ff6:   83 c4 68                        	add esp, 0x68
0x8049ff9:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049ffd:   e9 7c 0e 00 00                  	jmp 0x804ae7e <func_1+0x1678>
0x804a002:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a006:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a009:   0f 9d c0                        	setge al
0x804a00c:   0f b6 c0                        	movzx eax, al
0x804a00f:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a015:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a019:   0f 85 71 01 00 00               	jne 0x804a190 <func_1+0x98a>
0x804a01f:   eb 01                           	jmp 0x804a022 <func_1+0x81c>
0x804a021:   90                              	nop 
0x804a022:   83 6d 9c 01                     	sub dword ptr [ebp - 0x64], 1
0x804a026:   80 7d db 01                     	cmp byte ptr [ebp - 0x25], 1
0x804a02a:   0f 95 c0                        	setne al
0x804a02d:   0f b6 c0                        	movzx eax, al
0x804a030:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a033:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a039:   89 c6                           	mov esi, eax
0x804a03b:   80 45 db 01                     	add byte ptr [ebp - 0x25], 1
0x804a03f:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a043:   0f 94 c0                        	sete al
0x804a046:   89 c2                           	mov edx, eax
0x804a048:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x804a04d:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a051:   01 d0                           	add eax, edx
0x804a053:   83 c8 58                        	or eax, 0x58
0x804a056:   0f be d8                        	movsx ebx, al
0x804a059:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x804a05d:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a060:   0f bf c8                        	movsx ecx, ax
0x804a063:   0f bf 85 4e ff ff ff            	movsx eax, word ptr [ebp - 0xb2]
0x804a06a:   0f af c1                        	imul eax, ecx
0x804a06d:   39 c2                           	cmp edx, eax
0x804a06f:   0f 9c c0                        	setl al
0x804a072:   0f b6 c0                        	movzx eax, al
0x804a075:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x804a078:   0f bf ca                        	movsx ecx, dx
0x804a07b:   99                              	cdq 
0x804a07c:   f7 f9                           	idiv ecx
0x804a07e:   89 d0                           	mov eax, edx
0x804a080:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x804a083:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a087:   0f be c0                        	movsx eax, al
0x804a08a:   89 c1                           	mov ecx, eax
0x804a08c:   d3 fb                           	sar ebx, cl
0x804a08e:   89 d8                           	mov eax, ebx
0x804a090:   0f af c6                        	imul eax, esi
0x804a093:   0f bf d0                        	movsx edx, ax
0x804a096:   0f b6 85 4c ff ff ff            	movzx eax, byte ptr [ebp - 0xb4]
0x804a09d:   0f af c2                        	imul eax, edx
0x804a0a0:   85 c0                           	test eax, eax
0x804a0a2:   0f 84 b1 00 00 00               	je 0x804a159 <func_1+0x953>
0x804a0a8:   c7 85 1c ff ff ff 27 ac 36 2b   	mov dword ptr [ebp - 0xe4], 0x2b36ac27
0x804a0b2:   c7 85 18 ff ff ff e7 5a 12 ae   	mov dword ptr [ebp - 0xe8], 0xae125ae7
0x804a0bc:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a0c0:   31 85 1c ff ff ff               	xor dword ptr [ebp - 0xe4], eax
0x804a0c6:   83 bd 1c ff ff ff 00            	cmp dword ptr [ebp - 0xe4], 0
0x804a0cd:   74 07                           	je 0x804a0d6 <func_1+0x8d0>
0x804a0cf:   b8 01 00 00 00                  	mov eax, 1
0x804a0d4:   eb 05                           	jmp 0x804a0db <func_1+0x8d5>
0x804a0d6:   b8 00 00 00 00                  	mov eax, 0
0x804a0db:   09 45 88                        	or dword ptr [ebp - 0x78], eax
0x804a0de:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a0e1:   89 c2                           	mov edx, eax
0x804a0e3:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a0e6:   31 d0                           	xor eax, edx
0x804a0e8:   0f b7 c0                        	movzx eax, ax
0x804a0eb:   05 5f 8f 00 00                  	add eax, 0x8f5f
0x804a0f0:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a0f6:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a0fa:   75 06                           	jne 0x804a102 <func_1+0x8fc>
0x804a0fc:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a100:   74 07                           	je 0x804a109 <func_1+0x903>
0x804a102:   b8 01 00 00 00                  	mov eax, 1
0x804a107:   eb 05                           	jmp 0x804a10e <func_1+0x908>
0x804a109:   b8 00 00 00 00                  	mov eax, 0
0x804a10e:   0f be d0                        	movsx edx, al
0x804a111:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a114:   83 f0 01                        	xor eax, 1
0x804a117:   0f be c0                        	movsx eax, al
0x804a11a:   29 c2                           	sub edx, eax
0x804a11c:   89 d0                           	mov eax, edx
0x804a11e:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a124:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a127:   0d 96 52 7c 99                  	or eax, 0x997c5296
0x804a12c:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a12f:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a132:   89 c1                           	mov ecx, eax
0x804a134:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a13b:   89 c2                           	mov edx, eax
0x804a13d:   0f bf 85 4e ff ff ff            	movsx eax, word ptr [ebp - 0xb2]
0x804a144:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a147:   0f 9f c0                        	setg al
0x804a14a:   29 c2                           	sub edx, eax
0x804a14c:   0f b6 c1                        	movzx eax, cl
0x804a14f:   f6 f2                           	div dl
0x804a151:   0f b6 c0                        	movzx eax, al
0x804a154:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a157:   eb 14                           	jmp 0x804a16d <func_1+0x967>
0x804a159:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a15d:   74 05                           	je 0x804a164 <func_1+0x95e>
0x804a15f:   e9 9d f7 ff ff                  	jmp 0x8049901 <func_1+0xfb>
0x804a164:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a16b:   75 26                           	jne 0x804a193 <func_1+0x98d>
0x804a16d:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x804a172:   74 06                           	je 0x804a17a <func_1+0x974>
0x804a174:   e9 88 f7 ff ff                  	jmp 0x8049901 <func_1+0xfb>
0x804a179:   90                              	nop 
0x804a17a:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a17e:   83 7d e4 13                     	cmp dword ptr [ebp - 0x1c], 0x13
0x804a182:   0f 8f 01 f9 ff ff               	jg 0x8049a89 <func_1+0x283>
0x804a188:   eb 0a                           	jmp 0x804a194 <func_1+0x98e>
0x804a18a:   90                              	nop 
0x804a18b:   eb 07                           	jmp 0x804a194 <func_1+0x98e>
0x804a18d:   90                              	nop 
0x804a18e:   eb 04                           	jmp 0x804a194 <func_1+0x98e>
0x804a190:   90                              	nop 
0x804a191:   eb 01                           	jmp 0x804a194 <func_1+0x98e>
0x804a193:   90                              	nop 
0x804a194:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a197:   0f b6 c0                        	movzx eax, al
0x804a19a:   69 c0 dc 00 00 00               	imul eax, eax, 0xdc
0x804a1a0:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a1a3:   0f 97 c0                        	seta al
0x804a1a6:   0f b6 c0                        	movzx eax, al
0x804a1a9:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a1ad:   0f b6 4d e3                     	movzx ecx, byte ptr [ebp - 0x1d]
0x804a1b1:   ba 81 80 80 80                  	mov edx, 0x80808081
0x804a1b6:   89 c8                           	mov eax, ecx
0x804a1b8:   f7 ea                           	imul edx
0x804a1ba:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a1bd:   c1 f8 07                        	sar eax, 7
0x804a1c0:   89 c2                           	mov edx, eax
0x804a1c2:   89 c8                           	mov eax, ecx
0x804a1c4:   c1 f8 1f                        	sar eax, 0x1f
0x804a1c7:   29 c2                           	sub edx, eax
0x804a1c9:   89 d0                           	mov eax, edx
0x804a1cb:   89 c2                           	mov edx, eax
0x804a1cd:   c1 e2 08                        	shl edx, 8
0x804a1d0:   29 c2                           	sub edx, eax
0x804a1d2:   89 c8                           	mov eax, ecx
0x804a1d4:   29 d0                           	sub eax, edx
0x804a1d6:   89 c2                           	mov edx, eax
0x804a1d8:   89 d0                           	mov eax, edx
0x804a1da:   66 c1 f8 0f                     	sar ax, 0xf
0x804a1de:   66 c1 e8 0f                     	shr ax, 0xf
0x804a1e2:   01 c2                           	add edx, eax
0x804a1e4:   83 e2 01                        	and edx, 1
0x804a1e7:   29 c2                           	sub edx, eax
0x804a1e9:   89 d0                           	mov eax, edx
0x804a1eb:   98                              	cwde 
0x804a1ec:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a1ef:   81 7d a4 8d 00 00 00            	cmp dword ptr [ebp - 0x5c], 0x8d
0x804a1f6:   0f 9f c0                        	setg al
0x804a1f9:   0f b6 c0                        	movzx eax, al
0x804a1fc:   f7 d0                           	not eax
0x804a1fe:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a201:   66 83 6d c8 01                  	sub word ptr [ebp - 0x38], 1
0x804a206:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a20a:   89 c2                           	mov edx, eax
0x804a20c:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a213:   29 c2                           	sub edx, eax
0x804a215:   89 d0                           	mov eax, edx
0x804a217:   0f b6 d0                        	movzx edx, al
0x804a21a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a21d:   0f b6 c0                        	movzx eax, al
0x804a220:   0f af c2                        	imul eax, edx
0x804a223:   85 c0                           	test eax, eax
0x804a225:   0f 95 c0                        	setne al
0x804a228:   0f b6 c0                        	movzx eax, al
0x804a22b:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a22e:   66 c7 45 ca 00 00               	mov word ptr [ebp - 0x36], 0
0x804a234:   e9 ef 0a 00 00                  	jmp 0x804ad28 <func_1+0x1522>
0x804a239:   c7 45 80 a1 8f c4 cd            	mov dword ptr [ebp - 0x80], 0xcdc48fa1
0x804a240:   c7 85 7c ff ff ff 7f 2b 4a 95   	mov dword ptr [ebp - 0x84], 0x954a2b7f
0x804a24a:   c7 85 ec fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffffb
0x804a254:   66 c7 85 ea fe ff ff 08 00      	mov word ptr [ebp - 0x116], 8
0x804a25d:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a260:   98                              	cwde 
0x804a261:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a264:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a268:   74 0d                           	je 0x804a277 <func_1+0xa71>
0x804a26a:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a26e:   74 07                           	je 0x804a277 <func_1+0xa71>
0x804a270:   b8 01 00 00 00                  	mov eax, 1
0x804a275:   eb 05                           	jmp 0x804a27c <func_1+0xa76>
0x804a277:   b8 00 00 00 00                  	mov eax, 0
0x804a27c:   98                              	cwde 
0x804a27d:   c1 e0 0d                        	shl eax, 0xd
0x804a280:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a283:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a286:   0f b7 b5 5e ff ff ff            	movzx esi, word ptr [ebp - 0xa2]
0x804a28d:   ba 00 00 00 00                  	mov edx, 0
0x804a292:   66 f7 f6                        	div si
0x804a295:   89 c2                           	mov edx, eax
0x804a297:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a29b:   09 d0                           	or eax, edx
0x804a29d:   0f b7 d0                        	movzx edx, ax
0x804a2a0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a2a3:   0f b7 c0                        	movzx eax, ax
0x804a2a6:   89 c1                           	mov ecx, eax
0x804a2a8:   d3 e2                           	shl edx, cl
0x804a2aa:   89 d0                           	mov eax, edx
0x804a2ac:   85 c0                           	test eax, eax
0x804a2ae:   74 07                           	je 0x804a2b7 <func_1+0xab1>
0x804a2b0:   b8 01 00 00 00                  	mov eax, 1
0x804a2b5:   eb 05                           	jmp 0x804a2bc <func_1+0xab6>
0x804a2b7:   b8 00 00 00 00                  	mov eax, 0
0x804a2bc:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804a2c2:   83 7d 80 01                     	cmp dword ptr [ebp - 0x80], 1
0x804a2c6:   75 10                           	jne 0x804a2d8 <func_1+0xad2>
0x804a2c8:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a2cf:   74 07                           	je 0x804a2d8 <func_1+0xad2>
0x804a2d1:   b8 01 00 00 00                  	mov eax, 1
0x804a2d6:   eb 05                           	jmp 0x804a2dd <func_1+0xad7>
0x804a2d8:   b8 00 00 00 00                  	mov eax, 0
0x804a2dd:   3b 45 80                        	cmp eax, dword ptr [ebp - 0x80]
0x804a2e0:   0f 84 53 09 00 00               	je 0x804ac39 <func_1+0x1433>
0x804a2e6:   66 c7 85 7a ff ff ff 97 c4      	mov word ptr [ebp - 0x86], 0xc497
0x804a2ef:   c7 85 74 ff ff ff 7b 68 26 83   	mov dword ptr [ebp - 0x8c], 0x8326687b
0x804a2f9:   c7 85 70 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x90], 0xfffffffd
0x804a303:   66 c7 85 6e ff ff ff ff ff      	mov word ptr [ebp - 0x92], 0xffff
0x804a30c:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x804a313:   e9 2b 02 00 00                  	jmp 0x804a543 <func_1+0xd3d>
0x804a318:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a31c:   0f 85 2d 02 00 00               	jne 0x804a54f <func_1+0xd49>
0x804a322:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804a329:   e9 f9 01 00 00                  	jmp 0x804a527 <func_1+0xd21>
0x804a32e:   c7 85 68 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x98], 1
0x804a338:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a33f:   83 7d a4 0d                     	cmp dword ptr [ebp - 0x5c], 0xd
0x804a343:   0f 85 d4 00 00 00               	jne 0x804a41d <func_1+0xc17>
0x804a349:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a34d:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x804a354:   0f be 8d 5d ff ff ff            	movsx ecx, byte ptr [ebp - 0xa3]
0x804a35b:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a35f:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804a363:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a369:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a36d:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a373:   0f bf bd 5e ff ff ff            	movsx edi, word ptr [ebp - 0xa2]
0x804a37a:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a380:   0f be 5d da                     	movsx ebx, byte ptr [ebp - 0x26]
0x804a384:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a38a:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a38e:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a394:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804a398:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a39e:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a3a2:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a3a8:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a3ac:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a3b0:   50                              	push eax
0x804a3b1:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a3b4:   52                              	push edx
0x804a3b5:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3b8:   51                              	push ecx
0x804a3b9:   56                              	push esi
0x804a3ba:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a3bd:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a3c0:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a3c3:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a3c9:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a3cf:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a3d5:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a3db:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a3de:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a3e1:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3e4:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a3ea:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a3f0:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a3f3:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a3f9:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3fc:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3ff:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a405:   57                              	push edi
0x804a406:   53                              	push ebx
0x804a407:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a40d:   e8 42 f2 ff ff                  	call 0x8049654 <set_var>
0x804a412:   83 c4 68                        	add esp, 0x68
0x804a415:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a418:   e9 61 0a 00 00                  	jmp 0x804ae7e <func_1+0x1678>
0x804a41d:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a427:   eb 0e                           	jmp 0x804a437 <func_1+0xc31>
0x804a429:   83 85 68 ff ff ff 01            	add dword ptr [ebp - 0x98], 1
0x804a430:   83 ad 7c ff ff ff 01            	sub dword ptr [ebp - 0x84], 1
0x804a437:   83 bd 7c ff ff ff f8            	cmp dword ptr [ebp - 0x84], -8
0x804a43e:   7c e9                           	jl 0x804a429 <func_1+0xc23>
0x804a440:   c6 45 db 0c                     	mov byte ptr [ebp - 0x25], 0xc
0x804a444:   80 7d db 39                     	cmp byte ptr [ebp - 0x25], 0x39
0x804a448:   0f 86 d5 00 00 00               	jbe 0x804a523 <func_1+0xd1d>
0x804a44e:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a452:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x804a459:   0f be 8d 5d ff ff ff            	movsx ecx, byte ptr [ebp - 0xa3]
0x804a460:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a464:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804a468:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a46e:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a472:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a478:   0f bf bd 5e ff ff ff            	movsx edi, word ptr [ebp - 0xa2]
0x804a47f:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a485:   0f be 5d da                     	movsx ebx, byte ptr [ebp - 0x26]
0x804a489:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a48f:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a493:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a499:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804a49d:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a4a3:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a4a7:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a4ad:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a4b1:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a4b5:   50                              	push eax
0x804a4b6:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a4b9:   52                              	push edx
0x804a4ba:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a4bd:   51                              	push ecx
0x804a4be:   56                              	push esi
0x804a4bf:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a4c2:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a4c5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a4c8:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a4ce:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a4d4:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a4da:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a4e0:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a4e3:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a4e6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a4e9:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a4ef:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a4f5:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a4f8:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a4fe:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a501:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a504:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a50a:   57                              	push edi
0x804a50b:   53                              	push ebx
0x804a50c:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a512:   e8 3d f1 ff ff                  	call 0x8049654 <set_var>
0x804a517:   83 c4 68                        	add esp, 0x68
0x804a51a:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a51e:   e9 5b 09 00 00                  	jmp 0x804ae7e <func_1+0x1678>
0x804a523:   83 45 cc 09                     	add dword ptr [ebp - 0x34], 9
0x804a527:   83 7d cc 02                     	cmp dword ptr [ebp - 0x34], 2
0x804a52b:   0f 8f fd fd ff ff               	jg 0x804a32e <func_1+0xb28>
0x804a531:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a535:   75 1b                           	jne 0x804a552 <func_1+0xd4c>
0x804a537:   66 83 85 7a ff ff ff 01         	add word ptr [ebp - 0x86], 1
0x804a53f:   83 45 80 06                     	add dword ptr [ebp - 0x80], 6
0x804a543:   83 7d 80 19                     	cmp dword ptr [ebp - 0x80], 0x19
0x804a547:   0f 8f cb fd ff ff               	jg 0x804a318 <func_1+0xb12>
0x804a54d:   eb 04                           	jmp 0x804a553 <func_1+0xd4d>
0x804a54f:   90                              	nop 
0x804a550:   eb 01                           	jmp 0x804a553 <func_1+0xd4d>
0x804a552:   90                              	nop 
0x804a553:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a556:   09 45 bc                        	or dword ptr [ebp - 0x44], eax
0x804a559:   b8 06 00 00 00                  	mov eax, 6
0x804a55e:   ba 00 00 00 00                  	mov edx, 0
0x804a563:   f7 75 dc                        	div dword ptr [ebp - 0x24]
0x804a566:   89 c2                           	mov edx, eax
0x804a568:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a56b:   39 c2                           	cmp edx, eax
0x804a56d:   0f 93 c0                        	setae al
0x804a570:   0f b6 c0                        	movzx eax, al
0x804a573:   0f bf 4d a2                     	movsx ecx, word ptr [ebp - 0x5e]
0x804a577:   99                              	cdq 
0x804a578:   f7 f9                           	idiv ecx
0x804a57a:   89 d0                           	mov eax, edx
0x804a57c:   89 c2                           	mov edx, eax
0x804a57e:   66 81 fa de fc                  	cmp dx, 0xfcde
0x804a583:   0f 93 c0                        	setae al
0x804a586:   0f b6 c0                        	movzx eax, al
0x804a589:   66 69 c0 de fc                  	imul ax, ax, 0xfcde
0x804a58e:   29 c2                           	sub edx, eax
0x804a590:   89 d0                           	mov eax, edx
0x804a592:   66 3d 95 e2                     	cmp ax, 0xe295
0x804a596:   0f 94 c0                        	sete al
0x804a599:   0f b6 c0                        	movzx eax, al
0x804a59c:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x804a5a2:   09 d0                           	or eax, edx
0x804a5a4:   66 c1 e8 0d                     	shr ax, 0xd
0x804a5a8:   0f b7 c0                        	movzx eax, ax
0x804a5ab:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a5ae:   0f 9c c0                        	setl al
0x804a5b1:   0f b6 d0                        	movzx edx, al
0x804a5b4:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a5b7:   0f b7 c0                        	movzx eax, ax
0x804a5ba:   29 c2                           	sub edx, eax
0x804a5bc:   89 d0                           	mov eax, edx
0x804a5be:   3d 80 2d 00 00                  	cmp eax, 0x2d80
0x804a5c3:   7e 07                           	jle 0x804a5cc <func_1+0xdc6>
0x804a5c5:   ba 0e 00 00 00                  	mov edx, 0xe
0x804a5ca:   eb 05                           	jmp 0x804a5d1 <func_1+0xdcb>
0x804a5cc:   ba 0f 00 00 00                  	mov edx, 0xf
0x804a5d1:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a5d4:   0f be c0                        	movsx eax, al
0x804a5d7:   0f af c2                        	imul eax, edx
0x804a5da:   3d c4 81 00 00                  	cmp eax, 0x81c4
0x804a5df:   0f 9e c0                        	setle al
0x804a5e2:   0f b6 c0                        	movzx eax, al
0x804a5e5:   8b 95 ec fe ff ff               	mov edx, dword ptr [ebp - 0x114]
0x804a5eb:   0f b6 f2                        	movzx esi, dl
0x804a5ee:   99                              	cdq 
0x804a5ef:   f7 fe                           	idiv esi
0x804a5f1:   85 c0                           	test eax, eax
0x804a5f3:   75 0a                           	jne 0x804a5ff <func_1+0xdf9>
0x804a5f5:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x804a5fd:   74 07                           	je 0x804a606 <func_1+0xe00>
0x804a5ff:   b8 01 00 00 00                  	mov eax, 1
0x804a604:   eb 05                           	jmp 0x804a60b <func_1+0xe05>
0x804a606:   b8 00 00 00 00                  	mov eax, 0
0x804a60b:   3b 85 7c ff ff ff               	cmp eax, dword ptr [ebp - 0x84]
0x804a611:   7d 07                           	jge 0x804a61a <func_1+0xe14>
0x804a613:   b8 02 00 00 00                  	mov eax, 2
0x804a618:   eb 05                           	jmp 0x804a61f <func_1+0xe19>
0x804a61a:   b8 00 00 00 00                  	mov eax, 0
0x804a61f:   3b 45 98                        	cmp eax, dword ptr [ebp - 0x68]
0x804a622:   0f 9d c0                        	setge al
0x804a625:   0f b6 c0                        	movzx eax, al
0x804a628:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a62b:   c6 45 da fd                     	mov byte ptr [ebp - 0x26], 0xfd
0x804a62f:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a632:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a635:   66 81 bd 7a ff ff ff 83 00      	cmp word ptr [ebp - 0x86], 0x83
0x804a63e:   0f 97 c0                        	seta al
0x804a641:   0f b6 d0                        	movzx edx, al
0x804a644:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x804a64b:   31 d0                           	xor eax, edx
0x804a64d:   66 89 85 ea fe ff ff            	mov word ptr [ebp - 0x116], ax
0x804a654:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a657:   66 39 85 7a ff ff ff            	cmp word ptr [ebp - 0x86], ax
0x804a65e:   0f 92 c0                        	setb al
0x804a661:   0f b6 d0                        	movzx edx, al
0x804a664:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a667:   0f b6 c0                        	movzx eax, al
0x804a66a:   0f af c2                        	imul eax, edx
0x804a66d:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a670:   0f 95 c0                        	setne al
0x804a673:   0f b6 c0                        	movzx eax, al
0x804a676:   f7 d0                           	not eax
0x804a678:   89 c1                           	mov ecx, eax
0x804a67a:   80 45 e3 01                     	add byte ptr [ebp - 0x1d], 1
0x804a67e:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a682:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a688:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a68e:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a694:   8b 95 70 ff ff ff               	mov edx, dword ptr [ebp - 0x90]
0x804a69a:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a69e:   09 c8                           	or eax, ecx
0x804a6a0:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x804a6a3:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a6a7:   23 85 60 ff ff ff               	and eax, dword ptr [ebp - 0xa0]
0x804a6ad:   39 c2                           	cmp edx, eax
0x804a6af:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x804a6b3:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x804a6b6:   85 c0                           	test eax, eax
0x804a6b8:   0f 84 c3 01 00 00               	je 0x804a881 <func_1+0x107b>
0x804a6be:   c7 85 e0 fe ff ff 3f e3 5b 42   	mov dword ptr [ebp - 0x120], 0x425be33f
0x804a6c8:   c6 85 df fe ff ff f6            	mov byte ptr [ebp - 0x121], 0xf6
0x804a6cf:   8b 75 d0                        	mov esi, dword ptr [ebp - 0x30]
0x804a6d2:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a6d5:   99                              	cdq 
0x804a6d6:   f7 fe                           	idiv esi
0x804a6d8:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a6db:   0f 95 c0                        	setne al
0x804a6de:   0f b6 c0                        	movzx eax, al
0x804a6e1:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a6e4:   0f b7 f2                        	movzx esi, dx
0x804a6e7:   99                              	cdq 
0x804a6e8:   f7 fe                           	idiv esi
0x804a6ea:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a6ee:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a6f8:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a6ff:   75 07                           	jne 0x804a708 <func_1+0xf02>
0x804a701:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x804a706:   74 07                           	je 0x804a70f <func_1+0xf09>
0x804a708:   b8 01 00 00 00                  	mov eax, 1
0x804a70d:   eb 05                           	jmp 0x804a714 <func_1+0xf0e>
0x804a70f:   b8 00 00 00 00                  	mov eax, 0
0x804a714:   20 45 da                        	and byte ptr [ebp - 0x26], al
0x804a717:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x804a71b:   0f b6 55 bb                     	movzx edx, byte ptr [ebp - 0x45]
0x804a71f:   0f be f2                        	movsx esi, dl
0x804a722:   99                              	cdq 
0x804a723:   f7 fe                           	idiv esi
0x804a725:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a72b:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x804a735:   eb 65                           	jmp 0x804a79c <func_1+0xf96>
0x804a737:   c7 85 ac fe ff ff d7 f8 60 cb   	mov dword ptr [ebp - 0x154], 0xcb60f8d7
0x804a741:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x804a745:   eb 3e                           	jmp 0x804a785 <func_1+0xf7f>
0x804a747:   c7 85 a8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x158], 0xffffffff
0x804a751:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a755:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804a75c:   75 22                           	jne 0x804a780 <func_1+0xf7a>
0x804a75e:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x804a762:   0f b6 c0                        	movzx eax, al
0x804a765:   f6 75 bb                        	div byte ptr [ebp - 0x45]
0x804a768:   0f b6 c4                        	movzx eax, ah
0x804a76b:   0f b6 c0                        	movzx eax, al
0x804a76e:   66 39 45 ac                     	cmp word ptr [ebp - 0x54], ax
0x804a772:   0f 96 c0                        	setbe al
0x804a775:   0f b6 c0                        	movzx eax, al
0x804a778:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a77e:   eb 01                           	jmp 0x804a781 <func_1+0xf7b>
0x804a780:   90                              	nop 
0x804a781:   80 45 db 01                     	add byte ptr [ebp - 0x25], 1
0x804a785:   80 7d db 1f                     	cmp byte ptr [ebp - 0x25], 0x1f
0x804a789:   74 bc                           	je 0x804a747 <func_1+0xf41>
0x804a78b:   c7 85 ac fe ff ff ee d6 ff ff   	mov dword ptr [ebp - 0x154], 0xffffd6ee
0x804a795:   83 85 70 ff ff ff 01            	add dword ptr [ebp - 0x90], 1
0x804a79c:   83 bd 70 ff ff ff 18            	cmp dword ptr [ebp - 0x90], 0x18
0x804a7a3:   74 92                           	je 0x804a737 <func_1+0xf31>
0x804a7a5:   0f b6 9d df fe ff ff            	movzx ebx, byte ptr [ebp - 0x121]
0x804a7ac:   0f b6 85 5c ff ff ff            	movzx eax, byte ptr [ebp - 0xa4]
0x804a7b3:   89 c2                           	mov edx, eax
0x804a7b5:   c0 fa 07                        	sar dl, 7
0x804a7b8:   c0 ea 05                        	shr dl, 5
0x804a7bb:   01 d0                           	add eax, edx
0x804a7bd:   83 e0 07                        	and eax, 7
0x804a7c0:   29 d0                           	sub eax, edx
0x804a7c2:   66 98                           	cbw 
0x804a7c4:   66 39 45 a2                     	cmp word ptr [ebp - 0x5e], ax
0x804a7c8:   0f 9e c0                        	setle al
0x804a7cb:   0f b6 c0                        	movzx eax, al
0x804a7ce:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a7d1:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a7d5:   0f 9e c0                        	setle al
0x804a7d8:   0f b6 d0                        	movzx edx, al
0x804a7db:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a7de:   0f be c0                        	movsx eax, al
0x804a7e1:   01 d0                           	add eax, edx
0x804a7e3:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a7e9:   0f 9d c0                        	setge al
0x804a7ec:   0f b6 c0                        	movzx eax, al
0x804a7ef:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a7f2:   0f 92 c0                        	setb al
0x804a7f5:   0f b6 c0                        	movzx eax, al
0x804a7f8:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a7fb:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a7fe:   0f b7 d0                        	movzx edx, ax
0x804a801:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a804:   0f b7 c0                        	movzx eax, ax
0x804a807:   89 c1                           	mov ecx, eax
0x804a809:   d3 e2                           	shl edx, cl
0x804a80b:   89 d0                           	mov eax, edx
0x804a80d:   85 c0                           	test eax, eax
0x804a80f:   75 09                           	jne 0x804a81a <func_1+0x1014>
0x804a811:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a818:   74 07                           	je 0x804a821 <func_1+0x101b>
0x804a81a:   b8 01 00 00 00                  	mov eax, 1
0x804a81f:   eb 05                           	jmp 0x804a826 <func_1+0x1020>
0x804a821:   b8 00 00 00 00                  	mov eax, 0
0x804a826:   31 d8                           	xor eax, ebx
0x804a828:   35 ab 22 00 00                  	xor eax, 0x22ab
0x804a82d:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a833:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a83d:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a844:   89 c2                           	mov edx, eax
0x804a846:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a84a:   31 d0                           	xor eax, edx
0x804a84c:   0f be c0                        	movsx eax, al
0x804a84f:   c1 e0 05                        	shl eax, 5
0x804a852:   3d 34 2f 00 00                  	cmp eax, 0x2f34
0x804a857:   0f 9f c0                        	setg al
0x804a85a:   0f b6 c0                        	movzx eax, al
0x804a85d:   39 85 ec fe ff ff               	cmp dword ptr [ebp - 0x114], eax
0x804a863:   0f 9e c0                        	setle al
0x804a866:   0f b6 c0                        	movzx eax, al
0x804a869:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a86f:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a876:   0f 84 09 01 00 00               	je 0x804a985 <func_1+0x117f>
0x804a87c:   e9 e7 00 00 00                  	jmp 0x804a968 <func_1+0x1162>
0x804a881:   c7 85 e4 fe ff ff 36 62 10 f8   	mov dword ptr [ebp - 0x11c], 0xf8106236
0x804a88b:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a891:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a894:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a898:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x804a89f:   0f be 8d 5d ff ff ff            	movsx ecx, byte ptr [ebp - 0xa3]
0x804a8a6:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a8aa:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804a8ae:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a8b4:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a8b8:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a8be:   0f bf bd 5e ff ff ff            	movsx edi, word ptr [ebp - 0xa2]
0x804a8c5:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a8cb:   0f be 5d da                     	movsx ebx, byte ptr [ebp - 0x26]
0x804a8cf:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a8d5:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a8d9:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a8df:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804a8e3:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a8e9:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804a8ed:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a8f3:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a8f7:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804a8fb:   50                              	push eax
0x804a8fc:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a8ff:   52                              	push edx
0x804a900:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a903:   51                              	push ecx
0x804a904:   56                              	push esi
0x804a905:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a908:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a90b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a90e:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a914:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a91a:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a920:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a926:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a929:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a92c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a92f:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a935:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a93b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a93e:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a944:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a947:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a94a:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a950:   57                              	push edi
0x804a951:   53                              	push ebx
0x804a952:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a958:   e8 f7 ec ff ff                  	call 0x8049654 <set_var>
0x804a95d:   83 c4 68                        	add esp, 0x68
0x804a960:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a963:   e9 16 05 00 00                  	jmp 0x804ae7e <func_1+0x1678>
0x804a968:   66 c7 45 ac 00 00               	mov word ptr [ebp - 0x54], 0
0x804a96e:   eb 09                           	jmp 0x804a979 <func_1+0x1173>
0x804a970:   83 4d cc 01                     	or dword ptr [ebp - 0x34], 1
0x804a974:   66 83 45 ac 02                  	add word ptr [ebp - 0x54], 2
0x804a979:   66 83 7d ac 34                  	cmp word ptr [ebp - 0x54], 0x34
0x804a97e:   74 f0                           	je 0x804a970 <func_1+0x116a>
0x804a980:   e9 c5 02 00 00                  	jmp 0x804ac4a <func_1+0x1444>
0x804a985:   c7 85 d8 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x128], 7
0x804a98f:   c7 85 d4 fe ff ff 63 27 eb e2   	mov dword ptr [ebp - 0x12c], 0xe2eb2763
0x804a999:   66 c7 85 d2 fe ff ff 01 00      	mov word ptr [ebp - 0x12e], 1
0x804a9a2:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a9a9:   83 e8 01                        	sub eax, 1
0x804a9ac:   66 89 85 6e ff ff ff            	mov word ptr [ebp - 0x92], ax
0x804a9b3:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a9b7:   66 c1 e8 0f                     	shr ax, 0xf
0x804a9bb:   0f b6 c0                        	movzx eax, al
0x804a9be:   23 85 64 ff ff ff               	and eax, dword ptr [ebp - 0x9c]
0x804a9c4:   89 c2                           	mov edx, eax
0x804a9c6:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a9cc:   31 d0                           	xor eax, edx
0x804a9ce:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a9d4:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a9db:   0f 84 cb 00 00 00               	je 0x804aaac <func_1+0x12a6>
0x804a9e1:   c7 85 b4 fe ff ff 30 72 f6 5e   	mov dword ptr [ebp - 0x14c], 0x5ef67230
0x804a9eb:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a9f5:   eb 29                           	jmp 0x804aa20 <func_1+0x121a>
0x804a9f7:   66 c7 85 b0 fe ff ff 67 ed      	mov word ptr [ebp - 0x150], 0xed67
0x804aa00:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x804aa04:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804aa0a:   b8 00 00 00 00                  	mov eax, 0
0x804aa0f:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x804aa12:   c7 45 cc 1a 8e 2a 20            	mov dword ptr [ebp - 0x34], 0x202a8e1a
0x804aa19:   83 ad 7c ff ff ff 01            	sub dword ptr [ebp - 0x84], 1
0x804aa20:   83 bd 7c ff ff ff f7            	cmp dword ptr [ebp - 0x84], -9
0x804aa27:   7c ce                           	jl 0x804a9f7 <func_1+0x11f1>
0x804aa29:   66 c7 85 6e ff ff ff 00 00      	mov word ptr [ebp - 0x92], 0
0x804aa32:   eb 69                           	jmp 0x804aa9d <func_1+0x1297>
0x804aa34:   c6 85 b3 fe ff ff c2            	mov byte ptr [ebp - 0x14d], 0xc2
0x804aa3b:   80 7d ef 00                     	cmp byte ptr [ebp - 0x11], 0
0x804aa3f:   75 2a                           	jne 0x804aa6b <func_1+0x1265>
0x804aa41:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804aa44:   89 c1                           	mov ecx, eax
0x804aa46:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804aa4c:   89 c2                           	mov edx, eax
0x804aa4e:   0f b6 c1                        	movzx eax, cl
0x804aa51:   f6 f2                           	div dl
0x804aa53:   0f b6 c4                        	movzx eax, ah
0x804aa56:   84 c0                           	test al, al
0x804aa58:   0f 94 c0                        	sete al
0x804aa5b:   0f b6 c0                        	movzx eax, al
0x804aa5e:   0b 85 7c ff ff ff               	or eax, dword ptr [ebp - 0x84]
0x804aa64:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x804aa67:   85 c0                           	test eax, eax
0x804aa69:   74 07                           	je 0x804aa72 <func_1+0x126c>
0x804aa6b:   b8 01 00 00 00                  	mov eax, 1
0x804aa70:   eb 05                           	jmp 0x804aa77 <func_1+0x1271>
0x804aa72:   b8 00 00 00 00                  	mov eax, 0
0x804aa77:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x804aa7a:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x804aa7e:   25 4f c0 50 18                  	and eax, 0x1850c04f
0x804aa83:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804aa86:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804aa89:   f7 d0                           	not eax
0x804aa8b:   98                              	cwde 
0x804aa8c:   c1 e0 09                        	shl eax, 9
0x804aa8f:   88 85 b3 fe ff ff               	mov byte ptr [ebp - 0x14d], al
0x804aa95:   66 83 85 6e ff ff ff 07         	add word ptr [ebp - 0x92], 7
0x804aa9d:   66 83 bd 6e ff ff ff 0a         	cmp word ptr [ebp - 0x92], 0xa
0x804aaa5:   76 8d                           	jbe 0x804aa34 <func_1+0x122e>
0x804aaa7:   e9 7a 01 00 00                  	jmp 0x804ac26 <func_1+0x1420>
0x804aaac:   c7 85 cc fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x134], 0xfffffffe
0x804aab6:   c7 85 c8 fe ff ff e9 9f ba 79   	mov dword ptr [ebp - 0x138], 0x79ba9fe9
0x804aac0:   c7 85 c4 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x13c], 4
0x804aaca:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804aacf:   74 77                           	je 0x804ab48 <func_1+0x1342>
0x804aad1:   c7 85 bc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x144], 0
0x804aadb:   66 c7 85 ba fe ff ff f9 d3      	mov word ptr [ebp - 0x146], 0xd3f9
0x804aae4:   83 6d b0 01                     	sub dword ptr [ebp - 0x50], 1
0x804aae8:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x804aaef:   0f 85 2a 02 00 00               	jne 0x804ad1f <func_1+0x1519>
0x804aaf5:   83 bd bc fe ff ff 00            	cmp dword ptr [ebp - 0x144], 0
0x804aafc:   0f 85 20 02 00 00               	jne 0x804ad22 <func_1+0x151c>
0x804ab02:   0f b6 85 5d ff ff ff            	movzx eax, byte ptr [ebp - 0xa3]
0x804ab09:   0f b6 d0                        	movzx edx, al
0x804ab0c:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804ab12:   83 f0 01                        	xor eax, 1
0x804ab15:   0f bf c8                        	movsx ecx, ax
0x804ab18:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804ab1e:   98                              	cwde 
0x804ab1f:   0f af c1                        	imul eax, ecx
0x804ab22:   31 85 7c ff ff ff               	xor dword ptr [ebp - 0x84], eax
0x804ab28:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804ab2e:   0f b6 c0                        	movzx eax, al
0x804ab31:   01 d0                           	add eax, edx
0x804ab33:   85 c0                           	test eax, eax
0x804ab35:   75 08                           	jne 0x804ab3f <func_1+0x1339>
0x804ab37:   66 83 bd ba fe ff ff 00         	cmp word ptr [ebp - 0x146], 0
0x804ab3f:   c7 45 a8 b4 51 c2 d6            	mov dword ptr [ebp - 0x58], 0xd6c251b4
0x804ab46:   eb 39                           	jmp 0x804ab81 <func_1+0x137b>
0x804ab48:   c7 85 c0 fe ff ff 70 c0 e3 90   	mov dword ptr [ebp - 0x140], 0x90e3c070
0x804ab52:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804ab55:   0f b6 c0                        	movzx eax, al
0x804ab58:   c1 e0 06                        	shl eax, 6
0x804ab5b:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804ab61:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804ab68:   0f b6 85 5c ff ff ff            	movzx eax, byte ptr [ebp - 0xa4]
0x804ab6f:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804ab75:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804ab7b:   98                              	cwde 
0x804ab7c:   f7 d8                           	neg eax
0x804ab7e:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804ab81:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804ab85:   83 e8 01                        	sub eax, 1
0x804ab88:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x804ab8c:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x804ab93:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x804ab9a:   74 5f                           	je 0x804abfb <func_1+0x13f5>
0x804ab9c:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804aba2:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804aba8:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804abab:   99                              	cdq 
0x804abac:   f7 7d c0                        	idiv dword ptr [ebp - 0x40]
0x804abaf:   89 d0                           	mov eax, edx
0x804abb1:   c0 e8 02                        	shr al, 2
0x804abb4:   0f b6 c0                        	movzx eax, al
0x804abb7:   66 0b 85 d2 fe ff ff            	or ax, word ptr [ebp - 0x12e]
0x804abbe:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x804abc1:   89 d1                           	mov ecx, edx
0x804abc3:   ba 00 00 00 00                  	mov edx, 0
0x804abc8:   66 f7 f1                        	div cx
0x804abcb:   89 d0                           	mov eax, edx
0x804abcd:   0f b7 d0                        	movzx edx, ax
0x804abd0:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804abd3:   01 d0                           	add eax, edx
0x804abd5:   09 85 ec fe ff ff               	or dword ptr [ebp - 0x114], eax
0x804abdb:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804abe2:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804abe6:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804abe9:   0f 92 c0                        	setb al
0x804abec:   0f b6 c0                        	movzx eax, al
0x804abef:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x804abf2:   33 85 74 ff ff ff               	xor eax, dword ptr [ebp - 0x8c]
0x804abf8:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804abfb:   b8 00 00 00 00                  	mov eax, 0
0x804ac00:   09 85 70 ff ff ff               	or dword ptr [ebp - 0x90], eax
0x804ac06:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804ac09:   3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x804ac0c:   75 0d                           	jne 0x804ac1b <func_1+0x1415>
0x804ac0e:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804ac12:   74 07                           	je 0x804ac1b <func_1+0x1415>
0x804ac14:   b8 01 00 00 00                  	mov eax, 1
0x804ac19:   eb 05                           	jmp 0x804ac20 <func_1+0x141a>
0x804ac1b:   b8 00 00 00 00                  	mov eax, 0
0x804ac20:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804ac26:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804ac2a:   74 05                           	je 0x804ac31 <func_1+0x142b>
0x804ac2c:   e9 e2 ec ff ff                  	jmp 0x8049913 <func_1+0x10d>
0x804ac31:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804ac34:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804ac37:   eb 11                           	jmp 0x804ac4a <func_1+0x1444>
0x804ac39:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804ac40:   0f b6 85 5c ff ff ff            	movzx eax, byte ptr [ebp - 0xa4]
0x804ac47:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804ac4a:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804ac4e:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x804ac55:   0f be 8d 5d ff ff ff            	movsx ecx, byte ptr [ebp - 0xa3]
0x804ac5c:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804ac60:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804ac64:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804ac6a:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804ac6e:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804ac74:   0f bf bd 5e ff ff ff            	movsx edi, word ptr [ebp - 0xa2]
0x804ac7b:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804ac81:   0f be 5d da                     	movsx ebx, byte ptr [ebp - 0x26]
0x804ac85:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804ac8b:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804ac8f:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804ac95:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804ac99:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804ac9f:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804aca3:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804aca9:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804acad:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804acb1:   50                              	push eax
0x804acb2:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804acb5:   52                              	push edx
0x804acb6:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804acb9:   51                              	push ecx
0x804acba:   56                              	push esi
0x804acbb:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804acbe:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804acc1:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804acc4:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804acca:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804acd0:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804acd6:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804acdc:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804acdf:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ace2:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ace5:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aceb:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804acf1:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804acf4:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804acfa:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804acfd:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ad00:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804ad06:   57                              	push edi
0x804ad07:   53                              	push ebx
0x804ad08:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804ad0e:   e8 41 e9 ff ff                  	call 0x8049654 <set_var>
0x804ad13:   83 c4 68                        	add esp, 0x68
0x804ad16:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804ad1a:   e9 5f 01 00 00                  	jmp 0x804ae7e <func_1+0x1678>
0x804ad1f:   90                              	nop 
0x804ad20:   eb 01                           	jmp 0x804ad23 <func_1+0x151d>
0x804ad22:   90                              	nop 
0x804ad23:   66 83 45 ca 01                  	add word ptr [ebp - 0x36], 1
0x804ad28:   66 83 7d ca 1f                  	cmp word ptr [ebp - 0x36], 0x1f
0x804ad2d:   0f 84 06 f5 ff ff               	je 0x804a239 <func_1+0xa33>
0x804ad33:   c7 45 bc 1c 00 00 00            	mov dword ptr [ebp - 0x44], 0x1c
0x804ad3a:   eb 6d                           	jmp 0x804ada9 <func_1+0x15a3>
0x804ad3c:   66 c7 85 fa fe ff ff d7 f0      	mov word ptr [ebp - 0x106], 0xf0d7
0x804ad45:   c7 85 f4 fe ff ff ce 1d 34 17   	mov dword ptr [ebp - 0x10c], 0x17341dce
0x804ad4f:   c6 85 f3 fe ff ff 69            	mov byte ptr [ebp - 0x10d], 0x69
0x804ad56:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804ad59:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x804ad5d:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x804ad61:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x804ad65:   0f af c2                        	imul eax, edx
0x804ad68:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804ad6b:   c6 85 f2 fe ff ff 5e            	mov byte ptr [ebp - 0x10e], 0x5e
0x804ad72:   c7 85 f4 fe ff ff 6c dc 0a 85   	mov dword ptr [ebp - 0x10c], 0x850adc6c
0x804ad7c:   c6 45 bb 00                     	mov byte ptr [ebp - 0x45], 0
0x804ad80:   eb 16                           	jmp 0x804ad98 <func_1+0x1592>
0x804ad82:   66 c7 85 f0 fe ff ff 00 00      	mov word ptr [ebp - 0x110], 0
0x804ad8b:   66 c7 85 f0 fe ff ff 00 00      	mov word ptr [ebp - 0x110], 0
0x804ad94:   80 45 bb 06                     	add byte ptr [ebp - 0x45], 6
0x804ad98:   80 7d bb 0c                     	cmp byte ptr [ebp - 0x45], 0xc
0x804ad9c:   75 e4                           	jne 0x804ad82 <func_1+0x157c>
0x804ad9e:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804ada5:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x804ada9:   83 7d bc ed                     	cmp dword ptr [ebp - 0x44], -0x13
0x804adad:   7d 8d                           	jge 0x804ad3c <func_1+0x1536>
0x804adaf:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804adb3:   0f b6 95 5c ff ff ff            	movzx edx, byte ptr [ebp - 0xa4]
0x804adba:   0f be 8d 5d ff ff ff            	movsx ecx, byte ptr [ebp - 0xa3]
0x804adc1:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804adc5:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804adc9:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804adcf:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804add3:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804add9:   0f bf bd 5e ff ff ff            	movsx edi, word ptr [ebp - 0xa2]
0x804ade0:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804ade6:   0f be 5d da                     	movsx ebx, byte ptr [ebp - 0x26]
0x804adea:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804adf0:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804adf4:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804adfa:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804adfe:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804ae04:   0f be 7d ef                     	movsx edi, byte ptr [ebp - 0x11]
0x804ae08:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804ae0e:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804ae12:   0f bf 5d f0                     	movsx ebx, word ptr [ebp - 0x10]
0x804ae16:   50                              	push eax
0x804ae17:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ae1a:   52                              	push edx
0x804ae1b:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ae1e:   51                              	push ecx
0x804ae1f:   56                              	push esi
0x804ae20:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ae23:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ae26:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ae29:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804ae2f:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804ae35:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804ae3b:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804ae41:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ae44:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ae47:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ae4a:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804ae50:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804ae56:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ae59:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804ae5f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ae62:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ae65:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804ae6b:   57                              	push edi
0x804ae6c:   53                              	push ebx
0x804ae6d:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804ae73:   e8 dc e7 ff ff                  	call 0x8049654 <set_var>
0x804ae78:   83 c4 68                        	add esp, 0x68
0x804ae7b:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804ae7e:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ae81:   5b                              	pop ebx
0x804ae82:   5e                              	pop esi
0x804ae83:   5f                              	pop edi
0x804ae84:   5d                              	pop ebp
0x804ae85:   c3                              	ret 
; function: main at 0x804ae86 -- 0x804b21c
0x804ae86:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ae8a:   83 e4 f0                        	and esp, 0xfffffff0
0x804ae8d:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ae90:   55                              	push ebp
0x804ae91:   89 e5                           	mov ebp, esp
0x804ae93:   53                              	push ebx
0x804ae94:   51                              	push ecx
0x804ae95:   83 ec 10                        	sub esp, 0x10
0x804ae98:   e8 f3 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae9d:   81 c3 63 31 00 00               	add ebx, 0x3163
0x804aea3:   89 c8                           	mov eax, ecx
0x804aea5:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aeac:   83 38 02                        	cmp dword ptr [eax], 2
0x804aeaf:   75 26                           	jne 0x804aed7 <main+0x51>
0x804aeb1:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aeb4:   83 c0 04                        	add eax, 4
0x804aeb7:   8b 00                           	mov eax, dword ptr [eax]
0x804aeb9:   83 ec 08                        	sub esp, 8
0x804aebc:   8d 93 0c d3 ff ff               	lea edx, [ebx - 0x2cf4]
0x804aec2:   52                              	push edx
0x804aec3:   50                              	push eax
0x804aec4:   e8 37 d4 ff ff                  	call 0x8048300 <strcmp>
0x804aec9:   83 c4 10                        	add esp, 0x10
0x804aecc:   85 c0                           	test eax, eax
0x804aece:   75 07                           	jne 0x804aed7 <main+0x51>
0x804aed0:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aed7:   e8 7a d5 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aedc:   e8 8a e5 ff ff                  	call 0x804946b <crc32_gentab>
0x804aee1:   e8 20 e9 ff ff                  	call 0x8049806 <func_1>
0x804aee6:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aeec:   83 ec 04                        	sub esp, 4
0x804aeef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef2:   8d 93 0e d3 ff ff               	lea edx, [ebx - 0x2cf2]
0x804aef8:   52                              	push edx
0x804aef9:   50                              	push eax
0x804aefa:   e8 78 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeff:   83 c4 10                        	add esp, 0x10
0x804af02:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804af09:   98                              	cwde 
0x804af0a:   83 ec 04                        	sub esp, 4
0x804af0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af10:   8d 93 12 d3 ff ff               	lea edx, [ebx - 0x2cee]
0x804af16:   52                              	push edx
0x804af17:   50                              	push eax
0x804af18:   e8 5a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1d:   83 c4 10                        	add esp, 0x10
0x804af20:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804af27:   98                              	cwde 
0x804af28:   83 ec 04                        	sub esp, 4
0x804af2b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2e:   8d 93 16 d3 ff ff               	lea edx, [ebx - 0x2cea]
0x804af34:   52                              	push edx
0x804af35:   50                              	push eax
0x804af36:   e8 3c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3b:   83 c4 10                        	add esp, 0x10
0x804af3e:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804af45:   0f be c0                        	movsx eax, al
0x804af48:   83 ec 04                        	sub esp, 4
0x804af4b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4e:   8d 93 1b d3 ff ff               	lea edx, [ebx - 0x2ce5]
0x804af54:   52                              	push edx
0x804af55:   50                              	push eax
0x804af56:   e8 1c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5b:   83 c4 10                        	add esp, 0x10
0x804af5e:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804af64:   89 c2                           	mov edx, eax
0x804af66:   83 ec 04                        	sub esp, 4
0x804af69:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6c:   8d 83 20 d3 ff ff               	lea eax, [ebx - 0x2ce0]
0x804af72:   50                              	push eax
0x804af73:   52                              	push edx
0x804af74:   e8 fe e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af79:   83 c4 10                        	add esp, 0x10
0x804af7c:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804af82:   89 c2                           	mov edx, eax
0x804af84:   83 ec 04                        	sub esp, 4
0x804af87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af8a:   8d 83 25 d3 ff ff               	lea eax, [ebx - 0x2cdb]
0x804af90:   50                              	push eax
0x804af91:   52                              	push edx
0x804af92:   e8 e0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af97:   83 c4 10                        	add esp, 0x10
0x804af9a:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804afa1:   0f b6 c0                        	movzx eax, al
0x804afa4:   83 ec 04                        	sub esp, 4
0x804afa7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afaa:   8d 93 2a d3 ff ff               	lea edx, [ebx - 0x2cd6]
0x804afb0:   52                              	push edx
0x804afb1:   50                              	push eax
0x804afb2:   e8 c0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb7:   83 c4 10                        	add esp, 0x10
0x804afba:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804afc0:   83 ec 04                        	sub esp, 4
0x804afc3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc6:   8d 93 2f d3 ff ff               	lea edx, [ebx - 0x2cd1]
0x804afcc:   52                              	push edx
0x804afcd:   50                              	push eax
0x804afce:   e8 a4 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd3:   83 c4 10                        	add esp, 0x10
0x804afd6:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804afdd:   0f b6 c0                        	movzx eax, al
0x804afe0:   83 ec 04                        	sub esp, 4
0x804afe3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe6:   8d 93 34 d3 ff ff               	lea edx, [ebx - 0x2ccc]
0x804afec:   52                              	push edx
0x804afed:   50                              	push eax
0x804afee:   e8 84 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804aff3:   83 c4 10                        	add esp, 0x10
0x804aff6:   0f b6 83 41 00 00 00            	movzx eax, byte ptr [ebx + 0x41]
0x804affd:   0f be c0                        	movsx eax, al
0x804b000:   83 ec 04                        	sub esp, 4
0x804b003:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b006:   8d 93 39 d3 ff ff               	lea edx, [ebx - 0x2cc7]
0x804b00c:   52                              	push edx
0x804b00d:   50                              	push eax
0x804b00e:   e8 64 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b013:   83 c4 10                        	add esp, 0x10
0x804b016:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804b01c:   83 ec 04                        	sub esp, 4
0x804b01f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b022:   8d 93 3e d3 ff ff               	lea edx, [ebx - 0x2cc2]
0x804b028:   52                              	push edx
0x804b029:   50                              	push eax
0x804b02a:   e8 48 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02f:   83 c4 10                        	add esp, 0x10
0x804b032:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b038:   83 ec 04                        	sub esp, 4
0x804b03b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03e:   8d 93 43 d3 ff ff               	lea edx, [ebx - 0x2cbd]
0x804b044:   52                              	push edx
0x804b045:   50                              	push eax
0x804b046:   e8 2c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b04b:   83 c4 10                        	add esp, 0x10
0x804b04e:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804b054:   89 c2                           	mov edx, eax
0x804b056:   83 ec 04                        	sub esp, 4
0x804b059:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05c:   8d 83 49 d3 ff ff               	lea eax, [ebx - 0x2cb7]
0x804b062:   50                              	push eax
0x804b063:   52                              	push edx
0x804b064:   e8 0e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b069:   83 c4 10                        	add esp, 0x10
0x804b06c:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804b072:   83 ec 04                        	sub esp, 4
0x804b075:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b078:   8d 93 4f d3 ff ff               	lea edx, [ebx - 0x2cb1]
0x804b07e:   52                              	push edx
0x804b07f:   50                              	push eax
0x804b080:   e8 f2 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b085:   83 c4 10                        	add esp, 0x10
0x804b088:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804b08f:   98                              	cwde 
0x804b090:   83 ec 04                        	sub esp, 4
0x804b093:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b096:   8d 93 55 d3 ff ff               	lea edx, [ebx - 0x2cab]
0x804b09c:   52                              	push edx
0x804b09d:   50                              	push eax
0x804b09e:   e8 d4 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a3:   83 c4 10                        	add esp, 0x10
0x804b0a6:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804b0ad:   0f b7 c0                        	movzx eax, ax
0x804b0b0:   83 ec 04                        	sub esp, 4
0x804b0b3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0b6:   8d 93 5b d3 ff ff               	lea edx, [ebx - 0x2ca5]
0x804b0bc:   52                              	push edx
0x804b0bd:   50                              	push eax
0x804b0be:   e8 b4 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0c3:   83 c4 10                        	add esp, 0x10
0x804b0c6:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804b0cd:   0f b7 c0                        	movzx eax, ax
0x804b0d0:   83 ec 04                        	sub esp, 4
0x804b0d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0d6:   8d 93 61 d3 ff ff               	lea edx, [ebx - 0x2c9f]
0x804b0dc:   52                              	push edx
0x804b0dd:   50                              	push eax
0x804b0de:   e8 94 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0e3:   83 c4 10                        	add esp, 0x10
0x804b0e6:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804b0ec:   83 ec 04                        	sub esp, 4
0x804b0ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0f2:   8d 93 67 d3 ff ff               	lea edx, [ebx - 0x2c99]
0x804b0f8:   52                              	push edx
0x804b0f9:   50                              	push eax
0x804b0fa:   e8 78 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0ff:   83 c4 10                        	add esp, 0x10
0x804b102:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b108:   89 c2                           	mov edx, eax
0x804b10a:   83 ec 04                        	sub esp, 4
0x804b10d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b110:   8d 83 6d d3 ff ff               	lea eax, [ebx - 0x2c93]
0x804b116:   50                              	push eax
0x804b117:   52                              	push edx
0x804b118:   e8 5a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b11d:   83 c4 10                        	add esp, 0x10
0x804b120:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b126:   89 c2                           	mov edx, eax
0x804b128:   83 ec 04                        	sub esp, 4
0x804b12b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b12e:   8d 83 73 d3 ff ff               	lea eax, [ebx - 0x2c8d]
0x804b134:   50                              	push eax
0x804b135:   52                              	push edx
0x804b136:   e8 3c e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b13b:   83 c4 10                        	add esp, 0x10
0x804b13e:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804b145:   0f b6 c0                        	movzx eax, al
0x804b148:   83 ec 04                        	sub esp, 4
0x804b14b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b14e:   8d 93 79 d3 ff ff               	lea edx, [ebx - 0x2c87]
0x804b154:   52                              	push edx
0x804b155:   50                              	push eax
0x804b156:   e8 1c e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b15b:   83 c4 10                        	add esp, 0x10
0x804b15e:   0f b6 83 a8 04 00 00            	movzx eax, byte ptr [ebx + 0x4a8]
0x804b165:   0f be c0                        	movsx eax, al
0x804b168:   83 ec 04                        	sub esp, 4
0x804b16b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b16e:   8d 93 7f d3 ff ff               	lea edx, [ebx - 0x2c81]
0x804b174:   52                              	push edx
0x804b175:   50                              	push eax
0x804b176:   e8 fc e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b17b:   83 c4 10                        	add esp, 0x10
0x804b17e:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b184:   83 ec 04                        	sub esp, 4
0x804b187:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b18a:   8d 93 85 d3 ff ff               	lea edx, [ebx - 0x2c7b]
0x804b190:   52                              	push edx
0x804b191:   50                              	push eax
0x804b192:   e8 e0 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b197:   83 c4 10                        	add esp, 0x10
0x804b19a:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804b1a1:   0f b6 c0                        	movzx eax, al
0x804b1a4:   83 ec 04                        	sub esp, 4
0x804b1a7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1aa:   8d 93 8b d3 ff ff               	lea edx, [ebx - 0x2c75]
0x804b1b0:   52                              	push edx
0x804b1b1:   50                              	push eax
0x804b1b2:   e8 c0 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1b7:   83 c4 10                        	add esp, 0x10
0x804b1ba:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b1c0:   83 ec 04                        	sub esp, 4
0x804b1c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1c6:   8d 93 91 d3 ff ff               	lea edx, [ebx - 0x2c6f]
0x804b1cc:   52                              	push edx
0x804b1cd:   50                              	push eax
0x804b1ce:   e8 a4 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1d3:   83 c4 10                        	add esp, 0x10
0x804b1d6:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804b1dd:   0f b7 c0                        	movzx eax, ax
0x804b1e0:   83 ec 04                        	sub esp, 4
0x804b1e3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1e6:   8d 93 97 d3 ff ff               	lea edx, [ebx - 0x2c69]
0x804b1ec:   52                              	push edx
0x804b1ed:   50                              	push eax
0x804b1ee:   e8 84 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1f3:   83 c4 10                        	add esp, 0x10
0x804b1f6:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b1fc:   f7 d0                           	not eax
0x804b1fe:   83 ec 08                        	sub esp, 8
0x804b201:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b204:   50                              	push eax
0x804b205:   e8 5c d2 ff ff                  	call 0x8048466 <platform_main_end>
0x804b20a:   83 c4 10                        	add esp, 0x10
0x804b20d:   b8 00 00 00 00                  	mov eax, 0
0x804b212:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b215:   59                              	pop ecx
0x804b216:   5b                              	pop ebx
0x804b217:   5d                              	pop ebp
0x804b218:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b21b:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b21c -- 0x804b220
0x804b21c:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b21f:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b220 -- 0x804b224
0x804b220:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b223:   c3                              	ret 
; data inside code section at 0x804b224 -- 0x804b230
0x804b224:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804b230 -- 0x804b28d
0x804b230:   55                              	push ebp
0x804b231:   57                              	push edi
0x804b232:   56                              	push esi
0x804b233:   53                              	push ebx
0x804b234:   e8 57 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b239:   81 c3 c7 2d 00 00               	add ebx, 0x2dc7
0x804b23f:   83 ec 0c                        	sub esp, 0xc
0x804b242:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b246:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b24c:   e8 7b d0 ff ff                  	call 0x80482cc <_init>
0x804b251:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b257:   29 c6                           	sub esi, eax
0x804b259:   c1 fe 02                        	sar esi, 2
0x804b25c:   85 f6                           	test esi, esi
0x804b25e:   74 25                           	je 0x804b285 <__libc_csu_init+0x55>
0x804b260:   31 ff                           	xor edi, edi
0x804b262:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b268:   83 ec 04                        	sub esp, 4
0x804b26b:   55                              	push ebp
0x804b26c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b270:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b274:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b27b:   83 c7 01                        	add edi, 1
0x804b27e:   83 c4 10                        	add esp, 0x10
0x804b281:   39 fe                           	cmp esi, edi
0x804b283:   75 e3                           	jne 0x804b268 <__libc_csu_init+0x38>
0x804b285:   83 c4 0c                        	add esp, 0xc
0x804b288:   5b                              	pop ebx
0x804b289:   5e                              	pop esi
0x804b28a:   5f                              	pop edi
0x804b28b:   5d                              	pop ebp
0x804b28c:   c3                              	ret 
; data inside code section at 0x804b28d -- 0x804b290
0x804b28d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b290 -- 0x804b292
0x804b290:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b294 -- 0x804b2a8
0x804b294:   53                              	push ebx
0x804b295:   83 ec 08                        	sub esp, 8
0x804b298:   e8 f3 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b29d:   81 c3 63 2d 00 00               	add ebx, 0x2d63
0x804b2a3:   83 c4 08                        	add esp, 8
0x804b2a6:   5b                              	pop ebx
0x804b2a7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ac b2 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b2a8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b2b8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b2c8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b2d8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b2e8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b2f8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b308:   25 64 0a 00 31 00 67 5f  32 00 67 5f 33 00 67 5f   |%d..1.g_2.g_3.g_|
0x804b318:   31 30 00 67 5f 31 31 00  67 5f 32 34 00 67 5f 33   |10.g_11.g_24.g_3|
0x804b328:   30 00 67 5f 35 37 00 67  5f 37 33 00 67 5f 37 34   |0.g_57.g_73.g_74|
0x804b338:   00 67 5f 39 38 00 67 5f  39 39 00 67 5f 31 30 30   |.g_98.g_99.g_100|
0x804b348:   00 67 5f 31 30 38 00 67  5f 31 35 36 00 67 5f 31   |.g_108.g_156.g_1|
0x804b358:   37 37 00 67 5f 31 37 38  00 67 5f 32 31 34 00 67   |77.g_178.g_214.g|
0x804b368:   5f 32 33 33 00 67 5f 32  34 34 00 67 5f 32 35 33   |_233.g_244.g_253|
0x804b378:   00 67 5f 32 38 32 00 67  5f 32 39 39 00 67 5f 33   |.g_282.g_299.g_3|
0x804b388:   30 30 00 67 5f 33 32 34  00 67 5f 33 36 38 00 67   |00.g_324.g_368.g|
0x804b398:   5f 34 30 33 00 00 00 00  00 00 00 3f ff ff ff 7e   |_403.......?...~|
0x804b3a8:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b3b8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b3c8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b3d8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b3e8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b3f8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b408:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b408:   01 1b 03 3b c0 02 00 00  57 00 00 00 e8 ce ff ff   |...;....W.......|
0x804b418:   f0 02 00 00 28 cf ff ff  14 03 00 00 78 cf ff ff   |....(.......x...|
0x804b428:   dc 02 00 00 4e d0 ff ff  28 03 00 00 5e d0 ff ff   |....N...(...^...|
0x804b438:   48 03 00 00 8c d0 ff ff  6c 03 00 00 aa d0 ff ff   |H.......l.......|
0x804b448:   8c 03 00 00 d2 d0 ff ff  ac 03 00 00 fc d0 ff ff   |................|
0x804b458:   cc 03 00 00 25 d1 ff ff  ec 03 00 00 68 d1 ff ff   |....%.......h...|
0x804b468:   0c 04 00 00 a9 d1 ff ff  2c 04 00 00 01 d2 ff ff   |........,.......|
0x804b478:   50 04 00 00 53 d2 ff ff  74 04 00 00 90 d2 ff ff   |P...S...t.......|
0x804b488:   94 04 00 00 c7 d2 ff ff  b4 04 00 00 e6 d2 ff ff   |................|
0x804b498:   d4 04 00 00 10 d3 ff ff  f4 04 00 00 3c d3 ff ff   |............<...|
0x804b4a8:   14 05 00 00 67 d3 ff ff  34 05 00 00 b0 d3 ff ff   |....g...4.......|
0x804b4b8:   54 05 00 00 f7 d3 ff ff  74 05 00 00 51 d4 ff ff   |T.......t...Q...|
0x804b4c8:   98 05 00 00 a5 d4 ff ff  bc 05 00 00 e4 d4 ff ff   |................|
0x804b4d8:   dc 05 00 00 1d d5 ff ff  fc 05 00 00 3f d5 ff ff   |............?...|
0x804b4e8:   1c 06 00 00 8d d5 ff ff  3c 06 00 00 c9 d5 ff ff   |........<.......|
0x804b4f8:   5c 06 00 00 52 d6 ff ff  7c 06 00 00 84 d6 ff ff   |\...R...|.......|
0x804b508:   9c 06 00 00 b4 d6 ff ff  bc 06 00 00 f9 d6 ff ff   |................|
0x804b518:   dc 06 00 00 38 d7 ff ff  fc 06 00 00 6a d7 ff ff   |....8.......j...|
0x804b528:   1c 07 00 00 96 d7 ff ff  3c 07 00 00 b4 d7 ff ff   |........<.......|
0x804b538:   5c 07 00 00 dc d7 ff ff  7c 07 00 00 01 d8 ff ff   |\.......|.......|
0x804b548:   9c 07 00 00 26 d8 ff ff  bc 07 00 00 5d d8 ff ff   |....&.......]...|
0x804b558:   dc 07 00 00 91 d8 ff ff  fc 07 00 00 e3 d8 ff ff   |................|
0x804b568:   20 08 00 00 2f d9 ff ff  44 08 00 00 66 d9 ff ff   | .../...D...f...|
0x804b578:   64 08 00 00 97 d9 ff ff  84 08 00 00 b6 d9 ff ff   |d...............|
0x804b588:   a4 08 00 00 e0 d9 ff ff  c4 08 00 00 08 da ff ff   |................|
0x804b598:   e4 08 00 00 31 da ff ff  04 09 00 00 6d da ff ff   |....1.......m...|
0x804b5a8:   24 09 00 00 a7 da ff ff  44 09 00 00 fa da ff ff   |$.......D.......|
0x804b5b8:   68 09 00 00 47 db ff ff  8c 09 00 00 7f db ff ff   |h...G...........|
0x804b5c8:   ac 09 00 00 b1 db ff ff  cc 09 00 00 c5 db ff ff   |................|
0x804b5d8:   ec 09 00 00 dc db ff ff  0c 0a 00 00 f1 db ff ff   |................|
0x804b5e8:   2c 0a 00 00 07 dc ff ff  4c 0a 00 00 2e dc ff ff   |,.......L.......|
0x804b5f8:   6c 0a 00 00 53 dc ff ff  8c 0a 00 00 92 dc ff ff   |l...S...........|
0x804b608:   ac 0a 00 00 cb dc ff ff  cc 0a 00 00 f7 dc ff ff   |................|
0x804b618:   ec 0a 00 00 1d dd ff ff  0c 0b 00 00 5f dd ff ff   |............_...|
0x804b628:   2c 0b 00 00 a1 dd ff ff  4c 0b 00 00 e3 dd ff ff   |,.......L.......|
0x804b638:   6c 0b 00 00 58 de ff ff  8c 0b 00 00 b5 de ff ff   |l...X...........|
0x804b648:   ac 0b 00 00 12 df ff ff  cc 0b 00 00 6f df ff ff   |............o...|
0x804b658:   ec 0b 00 00 ff df ff ff  0c 0c 00 00 63 e0 ff ff   |............c...|
0x804b668:   2c 0c 00 00 d3 e0 ff ff  4c 0c 00 00 1a e1 ff ff   |,.......L.......|
0x804b678:   70 0c 00 00 6f e1 ff ff  90 0c 00 00 b6 e1 ff ff   |p...o...........|
0x804b688:   b4 0c 00 00 1e e2 ff ff  d8 0c 00 00 4c e2 ff ff   |............L...|
0x804b698:   fc 0c 00 00 fe e3 ff ff  2c 0d 00 00 7e fa ff ff   |........,...~...|
0x804b6a8:   5c 0d 00 00 14 fe ff ff  94 0d 00 00 18 fe ff ff   |\...............|
0x804b6b8:   a8 0d 00 00 28 fe ff ff  bc 0d 00 00 88 fe ff ff   |....(...........|
0x804b6c8:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b6cc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b6dc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b6ec:   94 cc ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b6fc:   30 00 00 00 f0 cb ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b70c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b71c:   10 00 00 00 54 00 00 00  0c cc ff ff 08 00 00 00   |....T...........|
0x804b72c:   00 00 00 00 1c 00 00 00  68 00 00 00 1e cd ff ff   |........h.......|
0x804b73c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b74c:   04 04 00 00 20 00 00 00  88 00 00 00 0e cd ff ff   |.... ...........|
0x804b75c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b76c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b77c:   18 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b78c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b79c:   16 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b7ac:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b7bc:   1e cd ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b7cc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b7dc:   28 cd ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |(...)....A....B.|
0x804b7ec:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b7fc:   31 cd ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |1...C....A....B.|
0x804b80c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b81c:   54 cd ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |T...A....A....B.|
0x804b82c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b83c:   75 cd ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |u...X....A....B.|
0x804b84c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b85c:   90 01 00 00 a9 cd ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b86c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b87c:   1c 00 00 00 b4 01 00 00  d7 cd ff ff 3d 00 00 00   |............=...|
0x804b88c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b89c:   1c 00 00 00 d4 01 00 00  f4 cd ff ff 37 00 00 00   |............7...|
0x804b8ac:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b8bc:   1c 00 00 00 f4 01 00 00  0b ce ff ff 1f 00 00 00   |................|
0x804b8cc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b8dc:   1c 00 00 00 14 02 00 00  0a ce ff ff 2a 00 00 00   |............*...|
0x804b8ec:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b8fc:   1c 00 00 00 34 02 00 00  14 ce ff ff 2c 00 00 00   |....4.......,...|
0x804b90c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b91c:   1c 00 00 00 54 02 00 00  20 ce ff ff 2b 00 00 00   |....T... ...+...|
0x804b92c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b93c:   1c 00 00 00 74 02 00 00  2b ce ff ff 49 00 00 00   |....t...+...I...|
0x804b94c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b95c:   1c 00 00 00 94 02 00 00  54 ce ff ff 47 00 00 00   |........T...G...|
0x804b96c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b97c:   20 00 00 00 b4 02 00 00  7b ce ff ff 5a 00 00 00   | .......{...Z...|
0x804b98c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b99c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 b1 ce ff ff   |.... ...........|
0x804b9ac:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b9bc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b9cc:   e1 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b9dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b9ec:   00 cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b9fc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804ba0c:   19 cf ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804ba1c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804ba2c:   1b cf ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804ba3c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ba4c:   49 cf ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |I...<....A....B.|
0x804ba5c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ba6c:   65 cf ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |e........A....B.|
0x804ba7c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ba8c:   ce cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba9c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804baac:   e0 cf ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804babc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bacc:   f0 cf ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804badc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804baec:   15 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bafc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bb0c:   34 d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |4...2....A....B.|
0x804bb1c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bb2c:   46 d0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |F...,....A....B.|
0x804bb3c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bb4c:   52 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |R........A....B.|
0x804bb5c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bb6c:   50 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |P...(....A....B.|
0x804bb7c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bb8c:   58 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |X...%....A....B.|
0x804bb9c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bbac:   5d d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |]...%....A....B.|
0x804bbbc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bbcc:   62 d0 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |b...7....A....B.|
0x804bbdc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bbec:   79 d0 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |y...4....A....B.|
0x804bbfc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bc0c:   8d d0 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bc1c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bc2c:   60 05 00 00 bb d0 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bc3c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bc4c:   1c 00 00 00 84 05 00 00  e3 d0 ff ff 37 00 00 00   |............7...|
0x804bc5c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bc6c:   1c 00 00 00 a4 05 00 00  fa d0 ff ff 31 00 00 00   |............1...|
0x804bc7c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bc8c:   1c 00 00 00 c4 05 00 00  0b d1 ff ff 1f 00 00 00   |................|
0x804bc9c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bcac:   1c 00 00 00 e4 05 00 00  0a d1 ff ff 2a 00 00 00   |............*...|
0x804bcbc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bccc:   1c 00 00 00 04 06 00 00  14 d1 ff ff 28 00 00 00   |............(...|
0x804bcdc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bcec:   1c 00 00 00 24 06 00 00  1c d1 ff ff 29 00 00 00   |....$.......)...|
0x804bcfc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bd0c:   1c 00 00 00 44 06 00 00  25 d1 ff ff 3c 00 00 00   |....D...%...<...|
0x804bd1c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bd2c:   1c 00 00 00 64 06 00 00  41 d1 ff ff 3a 00 00 00   |....d...A...:...|
0x804bd3c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bd4c:   20 00 00 00 84 06 00 00  5b d1 ff ff 53 00 00 00   | .......[...S...|
0x804bd5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bd6c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 8a d1 ff ff   |.... ...........|
0x804bd7c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bd8c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bd9c:   b3 d1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bdac:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bdbc:   cb d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bdcc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bddc:   dd d1 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdec:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bdfc:   d1 d1 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be0c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804be1c:   c8 d1 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be2c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804be3c:   bd d1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be4c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804be5c:   b3 d1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804be6c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804be7c:   ba d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804be9c:   bf d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804beac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bebc:   de d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804becc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bedc:   f7 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804beec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804befc:   03 d2 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bf0c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bf1c:   09 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bf2c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bf3c:   2b d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |+...B....A....B.|
0x804bf4c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bf5c:   4d d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |M...B....A....B.|
0x804bf6c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bf7c:   6f d2 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |o...u....A....B.|
0x804bf8c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bf9c:   c4 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bfac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bfbc:   01 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bfcc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bfdc:   3e d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |>...]....A....B.|
0x804bfec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bffc:   7b d3 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |{........A....B.|
0x804c00c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c01c:   eb d3 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c02c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c03c:   2f d4 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |/...p....A....B.|
0x804c04c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c05c:   7f d4 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c06c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c07c:   b0 09 00 00 a2 d4 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c08c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c09c:   d0 09 00 00 d7 d4 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c0ac:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c0bc:   20 00 00 00 f4 09 00 00  fa d4 ff ff 68 00 00 00   | ...........h...|
0x804c0cc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c0dc:   0c 04 04 00 20 00 00 00  18 0a 00 00 3e d5 ff ff   |.... .......>...|
0x804c0ec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804c0fc:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804c10c:   48 d5 ff ff b2 01 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804c11c:   05 46 87 03 86 04 83 05  03 a5 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804c12c:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804c13c:   ca d6 ff ff 80 16 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c14c:   05 49 87 03 86 04 83 05  03 70 16 c3 41 c6 41 c7   |.I.......p..A.A.|
0x804c15c:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804c16c:   1a ed ff ff 96 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804c17c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 81   |.u.D..ux....u|..|
0x804c18c:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804c19c:   10 00 00 00 d4 0a 00 00  78 f0 ff ff 04 00 00 00   |........x.......|
0x804c1ac:   00 00 00 00 10 00 00 00  e8 0a 00 00 68 f0 ff ff   |............h...|
0x804c1bc:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804c1cc:   64 f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |d...]....A....A.|
0x804c1dc:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804c1ec:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804c1fc:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804c20c:   0e 04 00 00 10 00 00 00  48 0b 00 00 78 f0 ff ff   |........H...x...|
0x804c21c:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 94 b2 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 3e b1 c8 ea   |............>...|
0x804e028:   09 00 f8 ff 3d 00 00 00  fa ff ff ff 96 90 87 ee   |....=...........|
0x804e038:   79 00 00 00 a8 a5 d6 40  01 ff 00 00 ba c0 6e 61   |y......@......na|
0x804e048:   fe ff ff ff c2 92 f8 c2  c1 df ff ff fb ff 00 00   |................|
0x804e058:   02 00 00 00 ff ff ff ff  f6 ff ff ff ff 00 00 00   |................|
0x804e068:   39 c1 b6 eb 01 00 00 00  9e b5 78 b6 fe ff ??      |9.........x...? |
