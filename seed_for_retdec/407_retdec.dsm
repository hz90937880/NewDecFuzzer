;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:20:57
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 60 da ff ff               	lea eax, [ebx - 0x25a0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 da ff ff               	lea eax, [ebx - 0x2600]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 9f a5 04 08               	mov eax, 0x804a59f
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 95 25 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 81 25 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 da ff ff               	lea edx, [eax - 0x2580]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 54 25 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 36 25 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0e 25 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e4 24 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 bb 24 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 78 24 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 36 24 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 de 23 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 8d 23 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 50 23 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 19 23 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 fa 22 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 d0 22 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a4 22 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 79 22 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 30 22 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e8 21 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8e 21 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 3b 21 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 fc 20 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c6 20 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a4 20 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 56 20 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 1a 20 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 91 1f 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5f 1f 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2f 1f 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ea 1e 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ab 1e 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 79 1e 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 4a 1e 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 2c 1e 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 04 1e 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 df 1d 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ba 1d 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 83 1d 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4e 1d 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 fc 1c 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 b1 1c 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 7a 1c 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 49 1c 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 2a 1c 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 00 1c 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d8 1b 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 af 1b 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 73 1b 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 38 1b 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e5 1a 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 99 1a 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 61 1a 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 32 1a 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1e 1a 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 07 1a 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 f2 19 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 dc 19 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b5 19 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 90 19 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 51 19 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 18 19 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ec 18 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c6 18 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 90 db ff ff               	fld dword ptr [eax - 0x2470]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 90 db ff ff               	fld dword ptr [eax - 0x2470]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 94 db ff ff               	fld dword ptr [eax - 0x246c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 84 18 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 90 db ff ff               	fld dword ptr [eax - 0x2470]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 90 db ff ff               	fld dword ptr [eax - 0x2470]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 94 db ff ff               	fld dword ptr [eax - 0x246c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 42 18 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 98 db ff ff               	fld dword ptr [eax - 0x2468]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 9c db ff ff               	fld dword ptr [eax - 0x2464]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a0 db ff ff               	fld dword ptr [eax - 0x2460]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 00 18 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a4 db ff ff               	fld dword ptr [eax - 0x245c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a8 db ff ff               	fld dword ptr [eax - 0x2458]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 ac db ff ff               	fld dword ptr [eax - 0x2454]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 88 17 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b0 db ff ff               	fld qword ptr [eax - 0x2450]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b0 db ff ff               	fld qword ptr [eax - 0x2450]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b8 db ff ff               	fld qword ptr [eax - 0x2448]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 2b 17 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b0 db ff ff               	fld qword ptr [eax - 0x2450]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b0 db ff ff               	fld qword ptr [eax - 0x2450]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b8 db ff ff               	fld qword ptr [eax - 0x2448]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 ce 16 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c0 db ff ff               	fld qword ptr [eax - 0x2440]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c8 db ff ff               	fld qword ptr [eax - 0x2438]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d0 db ff ff               	fld qword ptr [eax - 0x2430]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 71 16 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d8 db ff ff               	fld qword ptr [eax - 0x2428]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e0 db ff ff               	fld qword ptr [eax - 0x2420]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e8 db ff ff               	fld qword ptr [eax - 0x2418]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 e1 15 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f0 db ff ff               	fld dword ptr [eax - 0x2410]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 f4 db ff ff               	fld dword ptr [eax - 0x240c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 7d 15 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 0c 15 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c9 14 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 da ff ff               	lea eax, [ebx - 0x2570]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 da ff ff               	lea eax, [ebx - 0x254c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049863
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 78                        	sub esp, 0x78
0x804962f:   e8 c3 13 00 00                  	call 0x804a9f7 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049640:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049643:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049646:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049649:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x804964c:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804964f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049652:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049655:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049658:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804965b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804965e:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049661:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049664:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049667:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804966a:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804966d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049670:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049673:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049676:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049679:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804967c:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804967f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049682:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049685:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049688:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804968b:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804968e:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049694:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804969a:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x804969e:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496a1:   89 c8                           	mov eax, ecx
0x80496a3:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496a6:   89 d8                           	mov eax, ebx
0x80496a8:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496ab:   89 f0                           	mov eax, esi
0x80496ad:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496b1:   89 f8                           	mov eax, edi
0x80496b3:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496b7:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496bb:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496bf:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c3:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c7:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496cb:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496cf:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d3:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496d7:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496db:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496de:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e2:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e5:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e9:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496ed:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f1:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496f5:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496f9:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496fd:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049701:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049704:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049708:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804970c:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049713:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049717:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804971b:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x8049721:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049725:   88 82 25 00 00 00               	mov byte ptr [edx + 0x25], al
0x804972b:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804972e:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049734:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049738:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x804973e:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049742:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049749:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804974d:   66 89 82 2e 00 00 00            	mov word ptr [edx + 0x2e], ax
0x8049754:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049757:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804975d:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049761:   66 89 82 a6 04 00 00            	mov word ptr [edx + 0x4a6], ax
0x8049768:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804976c:   66 89 82 a8 04 00 00            	mov word ptr [edx + 0x4a8], ax
0x8049773:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049776:   89 82 ac 04 00 00               	mov dword ptr [edx + 0x4ac], eax
0x804977c:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804977f:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049785:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049789:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049790:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049794:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x804979b:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804979e:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x80497a4:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497a7:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497ad:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497b0:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497b6:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497ba:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x80497c0:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c4:   88 82 49 00 00 00               	mov byte ptr [edx + 0x49], al
0x80497ca:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497cd:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497d3:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497d7:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497de:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497e1:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497e7:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497eb:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497f2:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497f5:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497fb:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497ff:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x8049806:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804980a:   88 82 62 00 00 00               	mov byte ptr [edx + 0x62], al
0x8049810:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049813:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049819:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804981c:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049822:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049825:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x804982b:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804982f:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x8049836:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049839:   89 82 b0 04 00 00               	mov dword ptr [edx + 0x4b0], eax
0x804983f:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049843:   66 89 82 72 00 00 00            	mov word ptr [edx + 0x72], ax
0x804984a:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x8049850:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049856:   b8 00 00 00 00                  	mov eax, 0
0x804985b:   83 c4 78                        	add esp, 0x78
0x804985e:   5b                              	pop ebx
0x804985f:   5e                              	pop esi
0x8049860:   5f                              	pop edi
0x8049861:   5d                              	pop ebp
0x8049862:   c3                              	ret 
; function: func_1 at 0x8049863 -- 0x804a59f
0x8049863:   55                              	push ebp
0x8049864:   89 e5                           	mov ebp, esp
0x8049866:   57                              	push edi
0x8049867:   56                              	push esi
0x8049868:   53                              	push ebx
0x8049869:   81 ec 2c 01 00 00               	sub esp, 0x12c
0x804986f:   e8 7f 11 00 00                  	call 0x804a9f3 <__x86.get_pc_thunk.ax>
0x8049874:   05 8c 37 00 00                  	add eax, 0x378c
0x8049879:   c6 45 f3 f2                     	mov byte ptr [ebp - 0xd], 0xf2
0x804987d:   c6 45 f2 48                     	mov byte ptr [ebp - 0xe], 0x48
0x8049881:   c7 45 84 67 83 43 81            	mov dword ptr [ebp - 0x7c], 0x81438367
0x8049888:   c6 45 83 3c                     	mov byte ptr [ebp - 0x7d], 0x3c
0x804988c:   66 c7 45 f0 00 00               	mov word ptr [ebp - 0x10], 0
0x8049892:   66 c7 45 ee b2 5c               	mov word ptr [ebp - 0x12], 0x5cb2
0x8049898:   c7 45 e8 07 00 00 00            	mov dword ptr [ebp - 0x18], 7
0x804989f:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x80498a5:   66 c7 45 e4 00 00               	mov word ptr [ebp - 0x1c], 0
0x80498ab:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x80498b2:   c7 45 dc e7 05 07 31            	mov dword ptr [ebp - 0x24], 0x310705e7
0x80498b9:   66 c7 45 da 6a ca               	mov word ptr [ebp - 0x26], 0xca6a
0x80498bf:   66 c7 45 d8 16 24               	mov word ptr [ebp - 0x28], 0x2416
0x80498c5:   c7 45 d4 45 29 ad fb            	mov dword ptr [ebp - 0x2c], 0xfbad2945
0x80498cc:   c7 45 d0 ff ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffff
0x80498d3:   c7 45 cc 02 00 00 00            	mov dword ptr [ebp - 0x34], 2
0x80498da:   c6 45 cb 6a                     	mov byte ptr [ebp - 0x35], 0x6a
0x80498de:   c6 45 ca 7f                     	mov byte ptr [ebp - 0x36], 0x7f
0x80498e2:   c7 45 c4 94 b3 a5 8a            	mov dword ptr [ebp - 0x3c], 0x8aa5b394
0x80498e9:   66 c7 45 c2 01 00               	mov word ptr [ebp - 0x3e], 1
0x80498ef:   c7 45 bc 7b ef 64 6e            	mov dword ptr [ebp - 0x44], 0x6e64ef7b
0x80498f6:   66 c7 45 80 96 25               	mov word ptr [ebp - 0x80], 0x2596
0x80498fc:   c7 45 b8 e9 51 0a 9b            	mov dword ptr [ebp - 0x48], 0x9b0a51e9
0x8049903:   66 c7 45 b6 01 00               	mov word ptr [ebp - 0x4a], 1
0x8049909:   c6 45 b5 ce                     	mov byte ptr [ebp - 0x4b], 0xce
0x804990d:   c7 85 7c ff ff ff 41 14 09 d9   	mov dword ptr [ebp - 0x84], 0xd9091441
0x8049917:   c7 85 78 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x88], 0xfffffffe
0x8049921:   c7 45 b0 d2 fb 99 3a            	mov dword ptr [ebp - 0x50], 0x3a99fbd2
0x8049928:   66 c7 45 ae 9b b0               	mov word ptr [ebp - 0x52], 0xb09b
0x804992e:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049935:   66 c7 45 a6 a3 6b               	mov word ptr [ebp - 0x5a], 0x6ba3
0x804993b:   c7 85 74 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffe
0x8049945:   c7 85 70 ff ff ff 65 7d ef bb   	mov dword ptr [ebp - 0x90], 0xbbef7d65
0x804994f:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x8049956:   c7 45 9c e5 c0 f8 23            	mov dword ptr [ebp - 0x64], 0x23f8c0e5
0x804995d:   c6 85 6f ff ff ff fb            	mov byte ptr [ebp - 0x91], 0xfb
0x8049964:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049968:   74 4f                           	je 0x80499b9 <func_1+0x156>
0x804996a:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049970:   89 c2                           	mov edx, eax
0x8049972:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049976:   21 d0                           	and eax, edx
0x8049978:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x804997b:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x804997f:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049982:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x8049987:   0f b7 d0                        	movzx edx, ax
0x804998a:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x804998f:   0f b7 c0                        	movzx eax, ax
0x8049992:   0f af d0                        	imul edx, eax
0x8049995:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049999:   39 c2                           	cmp edx, eax
0x804999b:   0f 9f c0                        	setg al
0x804999e:   0f b6 c0                        	movzx eax, al
0x80499a1:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x80499a4:   0f 95 c0                        	setne al
0x80499a7:   0f b6 d0                        	movzx edx, al
0x80499aa:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x80499b0:   98                              	cwde 
0x80499b1:   89 c1                           	mov ecx, eax
0x80499b3:   d3 fa                           	sar edx, cl
0x80499b5:   89 d0                           	mov eax, edx
0x80499b7:   85 c0                           	test eax, eax
0x80499b9:   c7 85 68 ff ff ff 8e b2 74 08   	mov dword ptr [ebp - 0x98], 0x874b28e
0x80499c3:   c7 45 98 7d 22 ab 70            	mov dword ptr [ebp - 0x68], 0x70ab227d
0x80499ca:   c7 85 64 ff ff ff c9 a4 73 63   	mov dword ptr [ebp - 0x9c], 0x6373a4c9
0x80499d4:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x80499db:   66 c7 85 62 ff ff ff ff ff      	mov word ptr [ebp - 0x9e], 0xffff
0x80499e4:   66 c7 85 60 ff ff ff 64 08      	mov word ptr [ebp - 0xa0], 0x864
0x80499ed:   66 c7 85 5e ff ff ff 4d cb      	mov word ptr [ebp - 0xa2], 0xcb4d
0x80499f6:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049a00:   c7 85 54 ff ff ff 62 6d 02 58   	mov dword ptr [ebp - 0xac], 0x58026d62
0x8049a0a:   c6 85 53 ff ff ff 04            	mov byte ptr [ebp - 0xad], 4
0x8049a11:   66 c7 85 50 ff ff ff 26 bc      	mov word ptr [ebp - 0xb0], 0xbc26
0x8049a1a:   66 c7 85 4e ff ff ff 9d 2d      	mov word ptr [ebp - 0xb2], 0x2d9d
0x8049a23:   66 83 45 f0 01                  	add word ptr [ebp - 0x10], 1
0x8049a28:   0f b7 4d f0                     	movzx ecx, word ptr [ebp - 0x10]
0x8049a2c:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x8049a31:   0f b7 d8                        	movzx ebx, ax
0x8049a34:   b8 f2 0e 00 00                  	mov eax, 0xef2
0x8049a39:   99                              	cdq 
0x8049a3a:   f7 fb                           	idiv ebx
0x8049a3c:   89 d0                           	mov eax, edx
0x8049a3e:   0f bf d0                        	movsx edx, ax
0x8049a41:   69 d2 ab 4f 00 00               	imul edx, edx, 0x4fab
0x8049a47:   c1 ea 10                        	shr edx, 0x10
0x8049a4a:   66 c1 fa 0c                     	sar dx, 0xc
0x8049a4e:   66 c1 f8 0f                     	sar ax, 0xf
0x8049a52:   29 c2                           	sub edx, eax
0x8049a54:   89 d0                           	mov eax, edx
0x8049a56:   0f b6 c0                        	movzx eax, al
0x8049a59:   f7 d8                           	neg eax
0x8049a5b:   66 c1 e8 03                     	shr ax, 3
0x8049a5f:   66 83 f8 02                     	cmp ax, 2
0x8049a63:   0f 97 c0                        	seta al
0x8049a66:   0f b6 c0                        	movzx eax, al
0x8049a69:   01 c8                           	add eax, ecx
0x8049a6b:   85 c0                           	test eax, eax
0x8049a6d:   0f 84 00 06 00 00               	je 0x804a073 <func_1+0x810>
0x8049a73:   c7 45 90 c1 3c 5d ef            	mov dword ptr [ebp - 0x70], 0xef5d3cc1
0x8049a7a:   c6 45 8f 08                     	mov byte ptr [ebp - 0x71], 8
0x8049a7e:   c7 45 88 4a 0f 78 1e            	mov dword ptr [ebp - 0x78], 0x1e780f4a
0x8049a85:   c7 45 94 fa ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffffa
0x8049a8c:   e9 c2 05 00 00                  	jmp 0x804a053 <func_1+0x7f0>
0x8049a91:   c6 85 2f ff ff ff c0            	mov byte ptr [ebp - 0xd1], 0xc0
0x8049a98:   c7 85 28 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffff7
0x8049aa2:   66 c7 85 26 ff ff ff 07 00      	mov word ptr [ebp - 0xda], 7
0x8049aab:   c6 85 25 ff ff ff 03            	mov byte ptr [ebp - 0xdb], 3
0x8049ab2:   0f b6 85 2f ff ff ff            	movzx eax, byte ptr [ebp - 0xd1]
0x8049ab9:   32 45 83                        	xor al, byte ptr [ebp - 0x7d]
0x8049abc:   88 85 2f ff ff ff               	mov byte ptr [ebp - 0xd1], al
0x8049ac2:   0f b6 85 2f ff ff ff            	movzx eax, byte ptr [ebp - 0xd1]
0x8049ac9:   d0 e8                           	shr al, 1
0x8049acb:   0f b6 d0                        	movzx edx, al
0x8049ace:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ad1:   88 85 f0 fe ff ff               	mov byte ptr [ebp - 0x110], al
0x8049ad7:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049adb:   b9 73 3d d3 ad                  	mov ecx, 0xadd33d73
0x8049ae0:   29 c1                           	sub ecx, eax
0x8049ae2:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049ae8:   39 c1                           	cmp ecx, eax
0x8049aea:   74 06                           	je 0x8049af2 <func_1+0x28f>
0x8049aec:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049af0:   74 07                           	je 0x8049af9 <func_1+0x296>
0x8049af2:   b8 01 00 00 00                  	mov eax, 1
0x8049af7:   eb 05                           	jmp 0x8049afe <func_1+0x29b>
0x8049af9:   b8 00 00 00 00                  	mov eax, 0
0x8049afe:   89 c3                           	mov ebx, eax
0x8049b00:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049b03:   89 c1                           	mov ecx, eax
0x8049b05:   0f b6 c3                        	movzx eax, bl
0x8049b08:   f6 f1                           	div cl
0x8049b0a:   89 c1                           	mov ecx, eax
0x8049b0c:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049b10:   01 c8                           	add eax, ecx
0x8049b12:   0f b6 d8                        	movzx ebx, al
0x8049b15:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049b1b:   0f b6 c0                        	movzx eax, al
0x8049b1e:   89 c1                           	mov ecx, eax
0x8049b20:   d3 e3                           	shl ebx, cl
0x8049b22:   89 d8                           	mov eax, ebx
0x8049b24:   38 85 f0 fe ff ff               	cmp byte ptr [ebp - 0x110], al
0x8049b2a:   0f 94 c0                        	sete al
0x8049b2d:   0f b6 c0                        	movzx eax, al
0x8049b30:   29 c2                           	sub edx, eax
0x8049b32:   89 d0                           	mov eax, edx
0x8049b34:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049b38:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049b3c:   74 28                           	je 0x8049b66 <func_1+0x303>
0x8049b3e:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049b42:   0f be d0                        	movsx edx, al
0x8049b45:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049b48:   0f be c0                        	movsx eax, al
0x8049b4b:   89 c1                           	mov ecx, eax
0x8049b4d:   d3 fa                           	sar edx, cl
0x8049b4f:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049b52:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049b55:   39 55 90                        	cmp dword ptr [ebp - 0x70], edx
0x8049b58:   0f 9e c0                        	setle al
0x8049b5b:   0f b6 c0                        	movzx eax, al
0x8049b5e:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b61:   e9 73 02 00 00                  	jmp 0x8049dd9 <func_1+0x576>
0x8049b66:   c6 85 24 ff ff ff 01            	mov byte ptr [ebp - 0xdc], 1
0x8049b6d:   0f be 5d 83                     	movsx ebx, byte ptr [ebp - 0x7d]
0x8049b71:   0f b6 85 2f ff ff ff            	movzx eax, byte ptr [ebp - 0xd1]
0x8049b78:   0f b6 95 24 ff ff ff            	movzx edx, byte ptr [ebp - 0xdc]
0x8049b7f:   3a 55 f3                        	cmp dl, byte ptr [ebp - 0xd]
0x8049b82:   0f 95 c2                        	setne dl
0x8049b85:   0f b6 f2                        	movzx esi, dl
0x8049b88:   66 0f be 95 24 ff ff ff         	movsx dx, byte ptr [ebp - 0xdc]
0x8049b90:   0f b7 d2                        	movzx edx, dx
0x8049b93:   89 d1                           	mov ecx, edx
0x8049b95:   d3 fe                           	sar esi, cl
0x8049b97:   89 f2                           	mov edx, esi
0x8049b99:   89 d7                           	mov edi, edx
0x8049b9b:   ba 00 00 00 00                  	mov edx, 0
0x8049ba0:   f7 f7                           	div edi
0x8049ba2:   85 c0                           	test eax, eax
0x8049ba4:   0f 95 c0                        	setne al
0x8049ba7:   0f b6 d0                        	movzx edx, al
0x8049baa:   0f b6 85 24 ff ff ff            	movzx eax, byte ptr [ebp - 0xdc]
0x8049bb1:   0f b6 c0                        	movzx eax, al
0x8049bb4:   01 d0                           	add eax, edx
0x8049bb6:   85 c0                           	test eax, eax
0x8049bb8:   74 0e                           	je 0x8049bc8 <func_1+0x365>
0x8049bba:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x8049bbf:   74 07                           	je 0x8049bc8 <func_1+0x365>
0x8049bc1:   b8 01 00 00 00                  	mov eax, 1
0x8049bc6:   eb 05                           	jmp 0x8049bcd <func_1+0x36a>
0x8049bc8:   b8 00 00 00 00                  	mov eax, 0
0x8049bcd:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049bd1:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049bd5:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049bd9:   0f bf 55 e4                     	movsx edx, word ptr [ebp - 0x1c]
0x8049bdd:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049be1:   01 d0                           	add eax, edx
0x8049be3:   31 d8                           	xor eax, ebx
0x8049be5:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049be8:   0f 93 c0                        	setae al
0x8049beb:   0f b6 c0                        	movzx eax, al
0x8049bee:   99                              	cdq 
0x8049bef:   f7 7d a0                        	idiv dword ptr [ebp - 0x60]
0x8049bf2:   31 45 9c                        	xor dword ptr [ebp - 0x64], eax
0x8049bf5:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049bf8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049bfb:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049bff:   0b 85 70 ff ff ff               	or eax, dword ptr [ebp - 0x90]
0x8049c05:   89 c2                           	mov edx, eax
0x8049c07:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c0a:   21 d0                           	and eax, edx
0x8049c0c:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049c0f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049c13:   83 f0 01                        	xor eax, 1
0x8049c16:   0f b7 c0                        	movzx eax, ax
0x8049c19:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049c1f:   0f 96 c0                        	setbe al
0x8049c22:   0f b6 c0                        	movzx eax, al
0x8049c25:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049c28:   0f 9e c0                        	setle al
0x8049c2b:   0f b6 d0                        	movzx edx, al
0x8049c2e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c31:   0f b7 c0                        	movzx eax, ax
0x8049c34:   89 c1                           	mov ecx, eax
0x8049c36:   d3 fa                           	sar edx, cl
0x8049c38:   89 d0                           	mov eax, edx
0x8049c3a:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049c3e:   0f bf 55 e4                     	movsx edx, word ptr [ebp - 0x1c]
0x8049c42:   0f be 45 f2                     	movsx eax, byte ptr [ebp - 0xe]
0x8049c46:   09 d0                           	or eax, edx
0x8049c48:   85 c0                           	test eax, eax
0x8049c4a:   0f 84 ae 00 00 00               	je 0x8049cfe <func_1+0x49b>
0x8049c50:   c7 85 18 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xe8], 2
0x8049c5a:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049c5d:   0f b6 d0                        	movzx edx, al
0x8049c60:   0f bf 45 e4                     	movsx eax, word ptr [ebp - 0x1c]
0x8049c64:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049c67:   7f 0e                           	jg 0x8049c77 <func_1+0x414>
0x8049c69:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049c6e:   74 07                           	je 0x8049c77 <func_1+0x414>
0x8049c70:   b8 01 00 00 00                  	mov eax, 1
0x8049c75:   eb 05                           	jmp 0x8049c7c <func_1+0x419>
0x8049c77:   b8 00 00 00 00                  	mov eax, 0
0x8049c7c:   89 c1                           	mov ecx, eax
0x8049c7e:   b8 08 00 00 00                  	mov eax, 8
0x8049c83:   0f b6 c0                        	movzx eax, al
0x8049c86:   f6 f1                           	div cl
0x8049c88:   0f b6 c4                        	movzx eax, ah
0x8049c8b:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049c8e:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049c92:   0f b6 c0                        	movzx eax, al
0x8049c95:   8d 0c 02                        	lea ecx, [edx + eax]
0x8049c98:   ba a1 fe d5 7d                  	mov edx, 0x7dd5fea1
0x8049c9d:   89 c8                           	mov eax, ecx
0x8049c9f:   f7 ea                           	imul edx
0x8049ca1:   c1 fa 1a                        	sar edx, 0x1a
0x8049ca4:   89 c8                           	mov eax, ecx
0x8049ca6:   c1 f8 1f                        	sar eax, 0x1f
0x8049ca9:   29 c2                           	sub edx, eax
0x8049cab:   89 d0                           	mov eax, edx
0x8049cad:   21 45 dc                        	and dword ptr [ebp - 0x24], eax
0x8049cb0:   0f bf 55 e4                     	movsx edx, word ptr [ebp - 0x1c]
0x8049cb4:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049cb7:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x8049cbb:   c7 45 9c bb 00 00 00            	mov dword ptr [ebp - 0x64], 0xbb
0x8049cc2:   0f bf 45 e4                     	movsx eax, word ptr [ebp - 0x1c]
0x8049cc6:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049cc9:   0f 9f c0                        	setg al
0x8049ccc:   0f b6 c0                        	movzx eax, al
0x8049ccf:   39 c2                           	cmp edx, eax
0x8049cd1:   0f 9e c0                        	setle al
0x8049cd4:   0f b6 c0                        	movzx eax, al
0x8049cd7:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x8049cdd:   75 04                           	jne 0x8049ce3 <func_1+0x480>
0x8049cdf:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049ce3:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049ce8:   75 07                           	jne 0x8049cf1 <func_1+0x48e>
0x8049cea:   b8 01 00 00 00                  	mov eax, 1
0x8049cef:   eb 05                           	jmp 0x8049cf6 <func_1+0x493>
0x8049cf1:   b8 00 00 00 00                  	mov eax, 0
0x8049cf6:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049cf9:   e9 db 00 00 00                  	jmp 0x8049dd9 <func_1+0x576>
0x8049cfe:   c7 85 20 ff ff ff eb b8 4b 53   	mov dword ptr [ebp - 0xe0], 0x534bb8eb
0x8049d08:   c6 85 1f ff ff ff f7            	mov byte ptr [ebp - 0xe1], 0xf7
0x8049d0f:   66 c7 85 1c ff ff ff d3 16      	mov word ptr [ebp - 0xe4], 0x16d3
0x8049d18:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049d1c:   74 36                           	je 0x8049d54 <func_1+0x4f1>
0x8049d1e:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049d21:   89 c1                           	mov ecx, eax
0x8049d23:   b8 2f 8b ff ff                  	mov eax, 0xffff8b2f
0x8049d28:   ba 00 00 00 00                  	mov edx, 0
0x8049d2d:   66 f7 f1                        	div cx
0x8049d30:   89 d0                           	mov eax, edx
0x8049d32:   66 3d fe 00                     	cmp ax, 0xfe
0x8049d36:   0f 97 c0                        	seta al
0x8049d39:   0f b6 d0                        	movzx edx, al
0x8049d3c:   0f be 85 1f ff ff ff            	movsx eax, byte ptr [ebp - 0xe1]
0x8049d43:   89 c1                           	mov ecx, eax
0x8049d45:   d3 e2                           	shl edx, cl
0x8049d47:   89 d0                           	mov eax, edx
0x8049d49:   85 c0                           	test eax, eax
0x8049d4b:   74 07                           	je 0x8049d54 <func_1+0x4f1>
0x8049d4d:   b8 01 00 00 00                  	mov eax, 1
0x8049d52:   eb 05                           	jmp 0x8049d59 <func_1+0x4f6>
0x8049d54:   b8 00 00 00 00                  	mov eax, 0
0x8049d59:   3d 3f d3 00 00                  	cmp eax, 0xd33f
0x8049d5e:   0f 94 c0                        	sete al
0x8049d61:   0f b6 c0                        	movzx eax, al
0x8049d64:   0b 85 28 ff ff ff               	or eax, dword ptr [ebp - 0xd8]
0x8049d6a:   85 c0                           	test eax, eax
0x8049d6c:   75 06                           	jne 0x8049d74 <func_1+0x511>
0x8049d6e:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049d72:   74 07                           	je 0x8049d7b <func_1+0x518>
0x8049d74:   b8 01 00 00 00                  	mov eax, 1
0x8049d79:   eb 05                           	jmp 0x8049d80 <func_1+0x51d>
0x8049d7b:   b8 00 00 00 00                  	mov eax, 0
0x8049d80:   89 c2                           	mov edx, eax
0x8049d82:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049d86:   21 d0                           	and eax, edx
0x8049d88:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049d8c:   c6 45 8f 01                     	mov byte ptr [ebp - 0x71], 1
0x8049d90:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049d94:   0f 95 c0                        	setne al
0x8049d97:   0f b6 d0                        	movzx edx, al
0x8049d9a:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049d9d:   98                              	cwde 
0x8049d9e:   29 c2                           	sub edx, eax
0x8049da0:   89 d0                           	mov eax, edx
0x8049da2:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049da5:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049da9:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049dac:   0f be 95 1f ff ff ff            	movsx edx, byte ptr [ebp - 0xe1]
0x8049db3:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049db9:   98                              	cwde 
0x8049dba:   39 c2                           	cmp edx, eax
0x8049dbc:   74 0d                           	je 0x8049dcb <func_1+0x568>
0x8049dbe:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049dc2:   74 07                           	je 0x8049dcb <func_1+0x568>
0x8049dc4:   b8 01 00 00 00                  	mov eax, 1
0x8049dc9:   eb 05                           	jmp 0x8049dd0 <func_1+0x56d>
0x8049dcb:   b8 00 00 00 00                  	mov eax, 0
0x8049dd0:   0f be c0                        	movsx eax, al
0x8049dd3:   c1 e0 07                        	shl eax, 7
0x8049dd6:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049dd9:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049ddf:   0f b7 d0                        	movzx edx, ax
0x8049de2:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049de5:   c0 e8 05                        	shr al, 5
0x8049de8:   83 c8 01                        	or eax, 1
0x8049deb:   3c 01                           	cmp al, 1
0x8049ded:   0f 96 c0                        	setbe al
0x8049df0:   0f b6 d8                        	movzx ebx, al
0x8049df3:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049df7:   0f b6 c0                        	movzx eax, al
0x8049dfa:   89 c1                           	mov ecx, eax
0x8049dfc:   d3 fb                           	sar ebx, cl
0x8049dfe:   89 d8                           	mov eax, ebx
0x8049e00:   0f be c0                        	movsx eax, al
0x8049e03:   83 c0 15                        	add eax, 0x15
0x8049e06:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049e09:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049e0d:   74 06                           	je 0x8049e15 <func_1+0x5b2>
0x8049e0f:   80 7d 8f 00                     	cmp byte ptr [ebp - 0x71], 0
0x8049e13:   75 07                           	jne 0x8049e1c <func_1+0x5b9>
0x8049e15:   b8 01 00 00 00                  	mov eax, 1
0x8049e1a:   eb 05                           	jmp 0x8049e21 <func_1+0x5be>
0x8049e1c:   b8 00 00 00 00                  	mov eax, 0
0x8049e21:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049e24:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049e27:   3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x8049e2a:   0f 9c c0                        	setl al
0x8049e2d:   0f b6 c0                        	movzx eax, al
0x8049e30:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049e33:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e36:   0f b6 c8                        	movzx ecx, al
0x8049e39:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049e3c:   0f b6 c0                        	movzx eax, al
0x8049e3f:   0f af c1                        	imul eax, ecx
0x8049e42:   89 c1                           	mov ecx, eax
0x8049e44:   66 0f be 45 f2                  	movsx ax, byte ptr [ebp - 0xe]
0x8049e49:   21 c8                           	and eax, ecx
0x8049e4b:   0f b7 c0                        	movzx eax, ax
0x8049e4e:   29 c2                           	sub edx, eax
0x8049e50:   89 d0                           	mov eax, edx
0x8049e52:   83 f8 07                        	cmp eax, 7
0x8049e55:   0f 85 7d 01 00 00               	jne 0x8049fd8 <func_1+0x775>
0x8049e5b:   c7 85 10 ff ff ff 77 e0 3f 7a   	mov dword ptr [ebp - 0xf0], 0x7a3fe077
0x8049e65:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x8049e6f:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e72:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049e75:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049e79:   0f 84 c8 00 00 00               	je 0x8049f47 <func_1+0x6e4>
0x8049e7f:   c7 85 04 ff ff ff 3e e5 87 d4   	mov dword ptr [ebp - 0xfc], 0xd487e53e
0x8049e89:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049e8d:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049e90:   83 7d 94 ff                     	cmp dword ptr [ebp - 0x6c], -1
0x8049e94:   0f 9d c0                        	setge al
0x8049e97:   0f b6 c0                        	movzx eax, al
0x8049e9a:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049e9d:   74 07                           	je 0x8049ea6 <func_1+0x643>
0x8049e9f:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x8049ea6:   c6 45 cb 00                     	mov byte ptr [ebp - 0x35], 0
0x8049eaa:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049eae:   0f 94 c0                        	sete al
0x8049eb1:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x8049eb4:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049eb8:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049ebb:   0f 9f c0                        	setg al
0x8049ebe:   88 45 ca                        	mov byte ptr [ebp - 0x36], al
0x8049ec1:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x8049ec7:   0f bf d0                        	movsx edx, ax
0x8049eca:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049ece:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049ed1:   0f 94 c0                        	sete al
0x8049ed4:   0f b6 c0                        	movzx eax, al
0x8049ed7:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049eda:   80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x8049ede:   74 07                           	je 0x8049ee7 <func_1+0x684>
0x8049ee0:   b8 01 00 00 00                  	mov eax, 1
0x8049ee5:   eb 05                           	jmp 0x8049eec <func_1+0x689>
0x8049ee7:   b8 00 00 00 00                  	mov eax, 0
0x8049eec:   83 c8 f8                        	or eax, 0xfffffff8
0x8049eef:   89 c1                           	mov ecx, eax
0x8049ef1:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049ef7:   31 c1                           	xor ecx, eax
0x8049ef9:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x8049eff:   31 c8                           	xor eax, ecx
0x8049f01:   98                              	cwde 
0x8049f02:   89 c1                           	mov ecx, eax
0x8049f04:   d3 e2                           	shl edx, cl
0x8049f06:   89 d0                           	mov eax, edx
0x8049f08:   89 c2                           	mov edx, eax
0x8049f0a:   0f b7 85 62 ff ff ff            	movzx eax, word ptr [ebp - 0x9e]
0x8049f11:   09 d0                           	or eax, edx
0x8049f13:   ba 2a 00 00 00                  	mov edx, 0x2a
0x8049f18:   29 c2                           	sub edx, eax
0x8049f1a:   89 d0                           	mov eax, edx
0x8049f1c:   0f be c0                        	movsx eax, al
0x8049f1f:   0f be 4d f2                     	movsx ecx, byte ptr [ebp - 0xe]
0x8049f23:   99                              	cdq 
0x8049f24:   f7 f9                           	idiv ecx
0x8049f26:   89 d0                           	mov eax, edx
0x8049f28:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049f2b:   74 0d                           	je 0x8049f3a <func_1+0x6d7>
0x8049f2d:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049f31:   74 07                           	je 0x8049f3a <func_1+0x6d7>
0x8049f33:   b8 01 00 00 00                  	mov eax, 1
0x8049f38:   eb 05                           	jmp 0x8049f3f <func_1+0x6dc>
0x8049f3a:   b8 00 00 00 00                  	mov eax, 0
0x8049f3f:   31 45 c4                        	xor dword ptr [ebp - 0x3c], eax
0x8049f42:   e9 cf 00 00 00                  	jmp 0x804a016 <func_1+0x7b3>
0x8049f47:   c7 85 08 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf8], 1
0x8049f51:   0f bf 85 26 ff ff ff            	movsx eax, word ptr [ebp - 0xda]
0x8049f58:   ba 3f 8f ff ff                  	mov edx, 0xffff8f3f
0x8049f5d:   89 c1                           	mov ecx, eax
0x8049f5f:   d3 fa                           	sar edx, cl
0x8049f61:   89 d0                           	mov eax, edx
0x8049f63:   66 09 45 c2                     	or word ptr [ebp - 0x3e], ax
0x8049f67:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049f6b:   83 e8 01                        	sub eax, 1
0x8049f6e:   66 89 45 b6                     	mov word ptr [ebp - 0x4a], ax
0x8049f72:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f75:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049f79:   0f bf 55 c2                     	movsx edx, word ptr [ebp - 0x3e]
0x8049f7d:   0f b7 4d ee                     	movzx ecx, word ptr [ebp - 0x12]
0x8049f81:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049f87:   0f b6 5d f3                     	movzx ebx, byte ptr [ebp - 0xd]
0x8049f8b:   0f b6 c0                        	movzx eax, al
0x8049f8e:   f6 f3                           	div bl
0x8049f90:   0f b6 c4                        	movzx eax, ah
0x8049f93:   0f b6 c0                        	movzx eax, al
0x8049f96:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x8049f9c:   0f 9c c0                        	setl al
0x8049f9f:   0f b6 c0                        	movzx eax, al
0x8049fa2:   39 c1                           	cmp ecx, eax
0x8049fa4:   0f 9d c0                        	setge al
0x8049fa7:   0f b6 c0                        	movzx eax, al
0x8049faa:   39 c2                           	cmp edx, eax
0x8049fac:   0f 94 c0                        	sete al
0x8049faf:   0f b6 c0                        	movzx eax, al
0x8049fb2:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x8049fb8:   0f 92 c0                        	setb al
0x8049fbb:   0f b6 c0                        	movzx eax, al
0x8049fbe:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049fc1:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049fc4:   89 c2                           	mov edx, eax
0x8049fc6:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049fca:   09 d0                           	or eax, edx
0x8049fcc:   88 45 b5                        	mov byte ptr [ebp - 0x4b], al
0x8049fcf:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049fd3:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049fd6:   eb 3e                           	jmp 0x804a016 <func_1+0x7b3>
0x8049fd8:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x8049fe2:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049fec:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049fef:   89 c2                           	mov edx, eax
0x8049ff1:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049ff7:   31 d0                           	xor eax, edx
0x8049ff9:   0f bf d0                        	movsx edx, ax
0x8049ffc:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a000:   98                              	cwde 
0x804a001:   89 c1                           	mov ecx, eax
0x804a003:   d3 e2                           	shl edx, cl
0x804a005:   89 d0                           	mov eax, edx
0x804a007:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a00d:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a010:   88 85 25 ff ff ff               	mov byte ptr [ebp - 0xdb], al
0x804a016:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a01a:   74 2c                           	je 0x804a048 <func_1+0x7e5>
0x804a01c:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x804a026:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a029:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a02f:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a035:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a03b:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a03f:   c7 45 98 f8 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff8
0x804a046:   eb 07                           	jmp 0x804a04f <func_1+0x7ec>
0x804a048:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804a04c:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a04f:   83 6d 94 01                     	sub dword ptr [ebp - 0x6c], 1
0x804a053:   83 7d 94 f2                     	cmp dword ptr [ebp - 0x6c], -0xe
0x804a057:   0f 84 34 fa ff ff               	je 0x8049a91 <func_1+0x22e>
0x804a05d:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a061:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a064:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a068:   23 45 88                        	and eax, dword ptr [ebp - 0x78]
0x804a06b:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a06e:   e9 b2 03 00 00                  	jmp 0x804a425 <func_1+0xbc2>
0x804a073:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x804a07d:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a081:   74 05                           	je 0x804a088 <func_1+0x825>
0x804a083:   e9 9b f9 ff ff                  	jmp 0x8049a23 <func_1+0x1c0>
0x804a088:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a08e:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a091:   0b 55 cc                        	or edx, dword ptr [ebp - 0x34]
0x804a094:   23 95 48 ff ff ff               	and edx, dword ptr [ebp - 0xb8]
0x804a09a:   89 d7                           	mov edi, edx
0x804a09c:   81 e7 ae 81 00 00               	and edi, 0x81ae
0x804a0a2:   ba 00 00 00 00                  	mov edx, 0
0x804a0a7:   f7 f7                           	div edi
0x804a0a9:   89 c2                           	mov edx, eax
0x804a0ab:   0f be 45 ca                     	movsx eax, byte ptr [ebp - 0x36]
0x804a0af:   39 c2                           	cmp edx, eax
0x804a0b1:   0f 96 c0                        	setbe al
0x804a0b4:   0f b6 c0                        	movzx eax, al
0x804a0b7:   09 45 a0                        	or dword ptr [ebp - 0x60], eax
0x804a0ba:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a0c1:   e9 52 03 00 00                  	jmp 0x804a418 <func_1+0xbb5>
0x804a0c6:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x804a0d0:   66 c7 85 42 ff ff ff 00 00      	mov word ptr [ebp - 0xbe], 0
0x804a0d9:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a0dd:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x804a0e4:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a0e7:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a0ea:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a0ed:   0b 45 d4                        	or eax, dword ptr [ebp - 0x2c]
0x804a0f0:   89 c2                           	mov edx, eax
0x804a0f2:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a0f5:   21 d0                           	and eax, edx
0x804a0f7:   85 c0                           	test eax, eax
0x804a0f9:   75 10                           	jne 0x804a10b <func_1+0x8a8>
0x804a0fb:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a102:   74 07                           	je 0x804a10b <func_1+0x8a8>
0x804a104:   b8 01 00 00 00                  	mov eax, 1
0x804a109:   eb 05                           	jmp 0x804a110 <func_1+0x8ad>
0x804a10b:   b8 00 00 00 00                  	mov eax, 0
0x804a110:   83 f8 05                        	cmp eax, 5
0x804a113:   74 07                           	je 0x804a11c <func_1+0x8b9>
0x804a115:   b8 02 00 00 00                  	mov eax, 2
0x804a11a:   eb 05                           	jmp 0x804a121 <func_1+0x8be>
0x804a11c:   b8 01 00 00 00                  	mov eax, 1
0x804a121:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a127:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a12b:   74 07                           	je 0x804a134 <func_1+0x8d1>
0x804a12d:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x804a134:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x804a13c:   74 04                           	je 0x804a142 <func_1+0x8df>
0x804a13e:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a142:   b8 01 00 00 00                  	mov eax, 1
0x804a147:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x804a14b:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a151:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a154:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a15a:   89 c3                           	mov ebx, eax
0x804a15c:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a15f:   89 c2                           	mov edx, eax
0x804a161:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a165:   21 d0                           	and eax, edx
0x804a167:   0f be d0                        	movsx edx, al
0x804a16a:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a16e:   89 c1                           	mov ecx, eax
0x804a170:   d3 e2                           	shl edx, cl
0x804a172:   89 d0                           	mov eax, edx
0x804a174:   38 c3                           	cmp bl, al
0x804a176:   75 04                           	jne 0x804a17c <func_1+0x919>
0x804a178:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a17c:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x804a180:   0f bf 45 e4                     	movsx eax, word ptr [ebp - 0x1c]
0x804a184:   bb 6a 70 00 00                  	mov ebx, 0x706a
0x804a189:   89 c1                           	mov ecx, eax
0x804a18b:   d3 fb                           	sar ebx, cl
0x804a18d:   89 d8                           	mov eax, ebx
0x804a18f:   0f b6 d8                        	movzx ebx, al
0x804a192:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a196:   0f b6 c0                        	movzx eax, al
0x804a199:   89 c1                           	mov ecx, eax
0x804a19b:   d3 e3                           	shl ebx, cl
0x804a19d:   89 d8                           	mov eax, ebx
0x804a19f:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a1a5:   0f 94 c0                        	sete al
0x804a1a8:   0f b6 c0                        	movzx eax, al
0x804a1ab:   39 c2                           	cmp edx, eax
0x804a1ad:   0f 8c 34 01 00 00               	jl 0x804a2e7 <func_1+0xa84>
0x804a1b3:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x804a1b7:   74 05                           	je 0x804a1be <func_1+0x95b>
0x804a1b9:   e9 65 f8 ff ff                  	jmp 0x8049a23 <func_1+0x1c0>
0x804a1be:   c7 45 98 85 15 2e ac            	mov dword ptr [ebp - 0x68], 0xac2e1585
0x804a1c5:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a1cc:   0f 85 52 02 00 00               	jne 0x804a424 <func_1+0xbc1>
0x804a1d2:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a1d6:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a1dc:   0f bf 45 ae                     	movsx eax, word ptr [ebp - 0x52]
0x804a1e0:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a1e6:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804a1ea:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804a1f0:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a1f4:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a1fa:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x804a1fe:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a204:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a208:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a20e:   0f be 45 ca                     	movsx eax, byte ptr [ebp - 0x36]
0x804a212:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a218:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a21c:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804a220:   89 95 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edx
0x804a226:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804a22a:   0f bf 4d e4                     	movsx ecx, word ptr [ebp - 0x1c]
0x804a22e:   89 8d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ecx
0x804a234:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804a238:   0f b7 5d ee                     	movzx ebx, word ptr [ebp - 0x12]
0x804a23c:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a242:   0f b7 5d f0                     	movzx ebx, word ptr [ebp - 0x10]
0x804a246:   0f be 75 83                     	movsx esi, byte ptr [ebp - 0x7d]
0x804a24a:   89 b5 c8 fe ff ff               	mov dword ptr [ebp - 0x138], esi
0x804a250:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x804a254:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x804a258:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a25e:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a264:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a267:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a26d:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a270:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a276:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a27c:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a282:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a288:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a28b:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a291:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a294:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a29a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a29d:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a2a3:   50                              	push eax
0x804a2a4:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a2a7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a2aa:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a2ad:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a2b3:   52                              	push edx
0x804a2b4:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a2b7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a2ba:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a2c0:   51                              	push ecx
0x804a2c1:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a2c4:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a2ca:   53                              	push ebx
0x804a2cb:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a2d1:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a2d4:   56                              	push esi
0x804a2d5:   57                              	push edi
0x804a2d6:   e8 4b f3 ff ff                  	call 0x8049626 <set_var>
0x804a2db:   83 ec 80                        	sub esp, -0x80
0x804a2de:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804a2e2:   e9 b0 02 00 00                  	jmp 0x804a597 <func_1+0xd34>
0x804a2e7:   c7 85 3c ff ff ff 96 fa 65 24   	mov dword ptr [ebp - 0xc4], 0x2465fa96
0x804a2f1:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a2f4:   08 45 f3                        	or byte ptr [ebp - 0xd], al
0x804a2f7:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a2fb:   08 45 cb                        	or byte ptr [ebp - 0x35], al
0x804a2fe:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a302:   39 85 44 ff ff ff               	cmp dword ptr [ebp - 0xbc], eax
0x804a308:   0f 9f c0                        	setg al
0x804a30b:   0f b6 c0                        	movzx eax, al
0x804a30e:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a314:   0f 94 c0                        	sete al
0x804a317:   0f b6 c0                        	movzx eax, al
0x804a31a:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a31d:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a323:   3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x804a326:   0f 9d c0                        	setge al
0x804a329:   0f b6 d0                        	movzx edx, al
0x804a32c:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a330:   39 c2                           	cmp edx, eax
0x804a332:   75 07                           	jne 0x804a33b <func_1+0xad8>
0x804a334:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a33b:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a33f:   0f 94 c0                        	sete al
0x804a342:   0f b6 c0                        	movzx eax, al
0x804a345:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x804a348:   c7 45 9c 10 00 00 00            	mov dword ptr [ebp - 0x64], 0x10
0x804a34f:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a357:   74 2f                           	je 0x804a388 <func_1+0xb25>
0x804a359:   66 c7 85 34 ff ff ff bf 40      	mov word ptr [ebp - 0xcc], 0x40bf
0x804a362:   c7 85 30 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xd0], 0xfffffffb
0x804a36c:   83 6d a8 01                     	sub dword ptr [ebp - 0x58], 1
0x804a370:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x804a377:   83 e8 01                        	sub eax, 1
0x804a37a:   66 89 85 34 ff ff ff            	mov word ptr [ebp - 0xcc], ax
0x804a381:   66 83 6d a6 01                  	sub word ptr [ebp - 0x5a], 1
0x804a386:   eb 6c                           	jmp 0x804a3f4 <func_1+0xb91>
0x804a388:   c7 85 38 ff ff ff 95 90 68 91   	mov dword ptr [ebp - 0xc8], 0x91689095
0x804a392:   c6 85 37 ff ff ff ff            	mov byte ptr [ebp - 0xc9], 0xff
0x804a399:   83 ad 38 ff ff ff 01            	sub dword ptr [ebp - 0xc8], 1
0x804a3a0:   81 bd 3c ff ff ff f0 00 00 00   	cmp dword ptr [ebp - 0xc4], 0xf0
0x804a3aa:   0f 95 c0                        	setne al
0x804a3ad:   0f b6 d0                        	movzx edx, al
0x804a3b0:   0f be 85 37 ff ff ff            	movsx eax, byte ptr [ebp - 0xc9]
0x804a3b7:   21 d0                           	and eax, edx
0x804a3b9:   85 c0                           	test eax, eax
0x804a3bb:   74 10                           	je 0x804a3cd <func_1+0xb6a>
0x804a3bd:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x804a3c4:   74 07                           	je 0x804a3cd <func_1+0xb6a>
0x804a3c6:   b8 01 00 00 00                  	mov eax, 1
0x804a3cb:   eb 05                           	jmp 0x804a3d2 <func_1+0xb6f>
0x804a3cd:   b8 00 00 00 00                  	mov eax, 0
0x804a3d2:   33 85 70 ff ff ff               	xor eax, dword ptr [ebp - 0x90]
0x804a3d8:   83 e0 01                        	and eax, 1
0x804a3db:   89 c2                           	mov edx, eax
0x804a3dd:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a3e0:   39 c2                           	cmp edx, eax
0x804a3e2:   0f 92 c0                        	setb al
0x804a3e5:   0f b6 c0                        	movzx eax, al
0x804a3e8:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x804a3eb:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a3f1:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a3f4:   0f b6 85 53 ff ff ff            	movzx eax, byte ptr [ebp - 0xad]
0x804a3fb:   ba 01 00 00 00                  	mov edx, 1
0x804a400:   29 c2                           	sub edx, eax
0x804a402:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a406:   39 c2                           	cmp edx, eax
0x804a408:   0f 9f c0                        	setg al
0x804a40b:   0f b6 c0                        	movzx eax, al
0x804a40e:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a414:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x804a418:   83 7d a0 13                     	cmp dword ptr [ebp - 0x60], 0x13
0x804a41c:   0f 8e a4 fc ff ff               	jle 0x804a0c6 <func_1+0x863>
0x804a422:   eb 01                           	jmp 0x804a425 <func_1+0xbc2>
0x804a424:   90                              	nop 
0x804a425:   83 ad 74 ff ff ff 01            	sub dword ptr [ebp - 0x8c], 1
0x804a42c:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a42f:   0f be c0                        	movsx eax, al
0x804a432:   c1 e0 04                        	shl eax, 4
0x804a435:   c1 e8 1f                        	shr eax, 0x1f
0x804a438:   0f b6 c0                        	movzx eax, al
0x804a43b:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a441:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804a445:   83 e8 01                        	sub eax, 1
0x804a448:   88 45 b5                        	mov byte ptr [ebp - 0x4b], al
0x804a44b:   66 83 45 e6 01                  	add word ptr [ebp - 0x1a], 1
0x804a450:   b8 01 00 00 00                  	mov eax, 1
0x804a455:   83 f8 fe                        	cmp eax, -2
0x804a458:   0f 93 c0                        	setae al
0x804a45b:   0f b6 c0                        	movzx eax, al
0x804a45e:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a461:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a464:   89 c2                           	mov edx, eax
0x804a466:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a46c:   29 c2                           	sub edx, eax
0x804a46e:   89 d0                           	mov eax, edx
0x804a470:   0f be c0                        	movsx eax, al
0x804a473:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a479:   0f 97 c0                        	seta al
0x804a47c:   0f b6 c0                        	movzx eax, al
0x804a47f:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a485:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x804a489:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a48f:   0f bf 45 ae                     	movsx eax, word ptr [ebp - 0x52]
0x804a493:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a499:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804a49d:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x804a4a3:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a4a7:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a4ad:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x804a4b1:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a4b7:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a4bb:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a4c1:   0f be 45 ca                     	movsx eax, byte ptr [ebp - 0x36]
0x804a4c5:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a4cb:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a4cf:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804a4d3:   89 95 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edx
0x804a4d9:   0f bf 55 da                     	movsx edx, word ptr [ebp - 0x26]
0x804a4dd:   0f bf 4d e4                     	movsx ecx, word ptr [ebp - 0x1c]
0x804a4e1:   89 8d d0 fe ff ff               	mov dword ptr [ebp - 0x130], ecx
0x804a4e7:   0f b7 4d e6                     	movzx ecx, word ptr [ebp - 0x1a]
0x804a4eb:   0f b7 5d ee                     	movzx ebx, word ptr [ebp - 0x12]
0x804a4ef:   89 9d cc fe ff ff               	mov dword ptr [ebp - 0x134], ebx
0x804a4f5:   0f b7 5d f0                     	movzx ebx, word ptr [ebp - 0x10]
0x804a4f9:   0f be 75 83                     	movsx esi, byte ptr [ebp - 0x7d]
0x804a4fd:   89 b5 c8 fe ff ff               	mov dword ptr [ebp - 0x138], esi
0x804a503:   0f be 75 f2                     	movsx esi, byte ptr [ebp - 0xe]
0x804a507:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x804a50b:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a511:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a517:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a51a:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a520:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a523:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a529:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a52f:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a535:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a53b:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a53e:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a544:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a547:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a54d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a550:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a556:   50                              	push eax
0x804a557:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a55a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a55d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a560:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a566:   52                              	push edx
0x804a567:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a56a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a56d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a573:   51                              	push ecx
0x804a574:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a577:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a57d:   53                              	push ebx
0x804a57e:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a584:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a587:   56                              	push esi
0x804a588:   57                              	push edi
0x804a589:   e8 98 f0 ff ff                  	call 0x8049626 <set_var>
0x804a58e:   83 ec 80                        	sub esp, -0x80
0x804a591:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a597:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a59a:   5b                              	pop ebx
0x804a59b:   5e                              	pop esi
0x804a59c:   5f                              	pop edi
0x804a59d:   5d                              	pop ebp
0x804a59e:   c3                              	ret 
; function: main at 0x804a59f -- 0x804a9f3
0x804a59f:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a5a3:   83 e4 f0                        	and esp, 0xfffffff0
0x804a5a6:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a5a9:   55                              	push ebp
0x804a5aa:   89 e5                           	mov ebp, esp
0x804a5ac:   53                              	push ebx
0x804a5ad:   51                              	push ecx
0x804a5ae:   83 ec 10                        	sub esp, 0x10
0x804a5b1:   e8 da dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a5b6:   81 c3 4a 2a 00 00               	add ebx, 0x2a4a
0x804a5bc:   89 c8                           	mov eax, ecx
0x804a5be:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a5c5:   83 38 02                        	cmp dword ptr [eax], 2
0x804a5c8:   75 26                           	jne 0x804a5f0 <main+0x51>
0x804a5ca:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a5cd:   83 c0 04                        	add eax, 4
0x804a5d0:   8b 00                           	mov eax, dword ptr [eax]
0x804a5d2:   83 ec 08                        	sub esp, 8
0x804a5d5:   8d 93 d8 da ff ff               	lea edx, [ebx - 0x2528]
0x804a5db:   52                              	push edx
0x804a5dc:   50                              	push eax
0x804a5dd:   e8 1e dd ff ff                  	call 0x8048300 <strcmp>
0x804a5e2:   83 c4 10                        	add esp, 0x10
0x804a5e5:   85 c0                           	test eax, eax
0x804a5e7:   75 07                           	jne 0x804a5f0 <main+0x51>
0x804a5e9:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a5f0:   e8 61 de ff ff                  	call 0x8048456 <platform_main_begin>
0x804a5f5:   e8 71 ee ff ff                  	call 0x804946b <crc32_gentab>
0x804a5fa:   e8 64 f2 ff ff                  	call 0x8049863 <func_1>
0x804a5ff:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a606:   0f be c0                        	movsx eax, al
0x804a609:   83 ec 04                        	sub esp, 4
0x804a60c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a60f:   8d 93 da da ff ff               	lea edx, [ebx - 0x2526]
0x804a615:   52                              	push edx
0x804a616:   50                              	push eax
0x804a617:   e8 5b ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a61c:   83 c4 10                        	add esp, 0x10
0x804a61f:   0f b6 83 25 00 00 00            	movzx eax, byte ptr [ebx + 0x25]
0x804a626:   0f be c0                        	movsx eax, al
0x804a629:   83 ec 04                        	sub esp, 4
0x804a62c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a62f:   8d 93 de da ff ff               	lea edx, [ebx - 0x2522]
0x804a635:   52                              	push edx
0x804a636:   50                              	push eax
0x804a637:   e8 3b ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a63c:   83 c4 10                        	add esp, 0x10
0x804a63f:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a645:   89 c2                           	mov edx, eax
0x804a647:   83 ec 04                        	sub esp, 4
0x804a64a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a64d:   8d 83 e3 da ff ff               	lea eax, [ebx - 0x251d]
0x804a653:   50                              	push eax
0x804a654:   52                              	push edx
0x804a655:   e8 1d ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a65a:   83 c4 10                        	add esp, 0x10
0x804a65d:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804a664:   0f be c0                        	movsx eax, al
0x804a667:   83 ec 04                        	sub esp, 4
0x804a66a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a66d:   8d 93 e8 da ff ff               	lea edx, [ebx - 0x2518]
0x804a673:   52                              	push edx
0x804a674:   50                              	push eax
0x804a675:   e8 fd ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a67a:   83 c4 10                        	add esp, 0x10
0x804a67d:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a684:   0f b7 c0                        	movzx eax, ax
0x804a687:   83 ec 04                        	sub esp, 4
0x804a68a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a68d:   8d 93 ed da ff ff               	lea edx, [ebx - 0x2513]
0x804a693:   52                              	push edx
0x804a694:   50                              	push eax
0x804a695:   e8 dd ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a69a:   83 c4 10                        	add esp, 0x10
0x804a69d:   0f b7 83 2e 00 00 00            	movzx eax, word ptr [ebx + 0x2e]
0x804a6a4:   0f b7 c0                        	movzx eax, ax
0x804a6a7:   83 ec 04                        	sub esp, 4
0x804a6aa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ad:   8d 93 f2 da ff ff               	lea edx, [ebx - 0x250e]
0x804a6b3:   52                              	push edx
0x804a6b4:   50                              	push eax
0x804a6b5:   e8 bd ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6ba:   83 c4 10                        	add esp, 0x10
0x804a6bd:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a6c3:   83 ec 04                        	sub esp, 4
0x804a6c6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6c9:   8d 93 f7 da ff ff               	lea edx, [ebx - 0x2509]
0x804a6cf:   52                              	push edx
0x804a6d0:   50                              	push eax
0x804a6d1:   e8 a1 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6d6:   83 c4 10                        	add esp, 0x10
0x804a6d9:   0f b7 83 a6 04 00 00            	movzx eax, word ptr [ebx + 0x4a6]
0x804a6e0:   0f b7 c0                        	movzx eax, ax
0x804a6e3:   83 ec 04                        	sub esp, 4
0x804a6e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6e9:   8d 93 fc da ff ff               	lea edx, [ebx - 0x2504]
0x804a6ef:   52                              	push edx
0x804a6f0:   50                              	push eax
0x804a6f1:   e8 81 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f6:   83 c4 10                        	add esp, 0x10
0x804a6f9:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804a700:   98                              	cwde 
0x804a701:   83 ec 04                        	sub esp, 4
0x804a704:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a707:   8d 93 01 db ff ff               	lea edx, [ebx - 0x24ff]
0x804a70d:   52                              	push edx
0x804a70e:   50                              	push eax
0x804a70f:   e8 63 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a714:   83 c4 10                        	add esp, 0x10
0x804a717:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804a71d:   89 c2                           	mov edx, eax
0x804a71f:   83 ec 04                        	sub esp, 4
0x804a722:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a725:   8d 83 06 db ff ff               	lea eax, [ebx - 0x24fa]
0x804a72b:   50                              	push eax
0x804a72c:   52                              	push edx
0x804a72d:   e8 45 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a732:   83 c4 10                        	add esp, 0x10
0x804a735:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a73b:   89 c2                           	mov edx, eax
0x804a73d:   83 ec 04                        	sub esp, 4
0x804a740:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a743:   8d 83 0b db ff ff               	lea eax, [ebx - 0x24f5]
0x804a749:   50                              	push eax
0x804a74a:   52                              	push edx
0x804a74b:   e8 27 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a750:   83 c4 10                        	add esp, 0x10
0x804a753:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804a75a:   98                              	cwde 
0x804a75b:   83 ec 04                        	sub esp, 4
0x804a75e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a761:   8d 93 10 db ff ff               	lea edx, [ebx - 0x24f0]
0x804a767:   52                              	push edx
0x804a768:   50                              	push eax
0x804a769:   e8 09 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a76e:   83 c4 10                        	add esp, 0x10
0x804a771:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804a778:   0f b7 c0                        	movzx eax, ax
0x804a77b:   83 ec 04                        	sub esp, 4
0x804a77e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a781:   8d 93 15 db ff ff               	lea edx, [ebx - 0x24eb]
0x804a787:   52                              	push edx
0x804a788:   50                              	push eax
0x804a789:   e8 e9 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a78e:   83 c4 10                        	add esp, 0x10
0x804a791:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a797:   83 ec 04                        	sub esp, 4
0x804a79a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a79d:   8d 93 1b db ff ff               	lea edx, [ebx - 0x24e5]
0x804a7a3:   52                              	push edx
0x804a7a4:   50                              	push eax
0x804a7a5:   e8 cd ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7aa:   83 c4 10                        	add esp, 0x10
0x804a7ad:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a7b3:   89 c2                           	mov edx, eax
0x804a7b5:   83 ec 04                        	sub esp, 4
0x804a7b8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7bb:   8d 83 21 db ff ff               	lea eax, [ebx - 0x24df]
0x804a7c1:   50                              	push eax
0x804a7c2:   52                              	push edx
0x804a7c3:   e8 af ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7c8:   83 c4 10                        	add esp, 0x10
0x804a7cb:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a7d1:   89 c2                           	mov edx, eax
0x804a7d3:   83 ec 04                        	sub esp, 4
0x804a7d6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7d9:   8d 83 27 db ff ff               	lea eax, [ebx - 0x24d9]
0x804a7df:   50                              	push eax
0x804a7e0:   52                              	push edx
0x804a7e1:   e8 91 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7e6:   83 c4 10                        	add esp, 0x10
0x804a7e9:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804a7f0:   0f be c0                        	movsx eax, al
0x804a7f3:   83 ec 04                        	sub esp, 4
0x804a7f6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7f9:   8d 93 2d db ff ff               	lea edx, [ebx - 0x24d3]
0x804a7ff:   52                              	push edx
0x804a800:   50                              	push eax
0x804a801:   e8 71 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a806:   83 c4 10                        	add esp, 0x10
0x804a809:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804a810:   0f be c0                        	movsx eax, al
0x804a813:   83 ec 04                        	sub esp, 4
0x804a816:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a819:   8d 93 33 db ff ff               	lea edx, [ebx - 0x24cd]
0x804a81f:   52                              	push edx
0x804a820:   50                              	push eax
0x804a821:   e8 51 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a826:   83 c4 10                        	add esp, 0x10
0x804a829:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a82f:   89 c2                           	mov edx, eax
0x804a831:   83 ec 04                        	sub esp, 4
0x804a834:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a837:   8d 83 39 db ff ff               	lea eax, [ebx - 0x24c7]
0x804a83d:   50                              	push eax
0x804a83e:   52                              	push edx
0x804a83f:   e8 33 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a844:   83 c4 10                        	add esp, 0x10
0x804a847:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a84e:   98                              	cwde 
0x804a84f:   83 ec 04                        	sub esp, 4
0x804a852:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a855:   8d 93 3f db ff ff               	lea edx, [ebx - 0x24c1]
0x804a85b:   52                              	push edx
0x804a85c:   50                              	push eax
0x804a85d:   e8 15 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a862:   83 c4 10                        	add esp, 0x10
0x804a865:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a86b:   89 c2                           	mov edx, eax
0x804a86d:   83 ec 04                        	sub esp, 4
0x804a870:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a873:   8d 83 45 db ff ff               	lea eax, [ebx - 0x24bb]
0x804a879:   50                              	push eax
0x804a87a:   52                              	push edx
0x804a87b:   e8 f7 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a880:   83 c4 10                        	add esp, 0x10
0x804a883:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804a88a:   98                              	cwde 
0x804a88b:   83 ec 04                        	sub esp, 4
0x804a88e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a891:   8d 93 4b db ff ff               	lea edx, [ebx - 0x24b5]
0x804a897:   52                              	push edx
0x804a898:   50                              	push eax
0x804a899:   e8 d9 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a89e:   83 c4 10                        	add esp, 0x10
0x804a8a1:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a8a7:   89 c2                           	mov edx, eax
0x804a8a9:   83 ec 04                        	sub esp, 4
0x804a8ac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8af:   8d 83 51 db ff ff               	lea eax, [ebx - 0x24af]
0x804a8b5:   50                              	push eax
0x804a8b6:   52                              	push edx
0x804a8b7:   e8 bb ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8bc:   83 c4 10                        	add esp, 0x10
0x804a8bf:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804a8c6:   0f b7 c0                        	movzx eax, ax
0x804a8c9:   83 ec 04                        	sub esp, 4
0x804a8cc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8cf:   8d 93 57 db ff ff               	lea edx, [ebx - 0x24a9]
0x804a8d5:   52                              	push edx
0x804a8d6:   50                              	push eax
0x804a8d7:   e8 9b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8dc:   83 c4 10                        	add esp, 0x10
0x804a8df:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804a8e6:   0f b6 c0                        	movzx eax, al
0x804a8e9:   83 ec 04                        	sub esp, 4
0x804a8ec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ef:   8d 93 5d db ff ff               	lea edx, [ebx - 0x24a3]
0x804a8f5:   52                              	push edx
0x804a8f6:   50                              	push eax
0x804a8f7:   e8 7b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fc:   83 c4 10                        	add esp, 0x10
0x804a8ff:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a905:   89 c2                           	mov edx, eax
0x804a907:   83 ec 04                        	sub esp, 4
0x804a90a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90d:   8d 83 63 db ff ff               	lea eax, [ebx - 0x249d]
0x804a913:   50                              	push eax
0x804a914:   52                              	push edx
0x804a915:   e8 5d ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91a:   83 c4 10                        	add esp, 0x10
0x804a91d:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a923:   89 c2                           	mov edx, eax
0x804a925:   83 ec 04                        	sub esp, 4
0x804a928:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92b:   8d 83 69 db ff ff               	lea eax, [ebx - 0x2497]
0x804a931:   50                              	push eax
0x804a932:   52                              	push edx
0x804a933:   e8 3f ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a938:   83 c4 10                        	add esp, 0x10
0x804a93b:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804a941:   83 ec 04                        	sub esp, 4
0x804a944:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a947:   8d 93 6f db ff ff               	lea edx, [ebx - 0x2491]
0x804a94d:   52                              	push edx
0x804a94e:   50                              	push eax
0x804a94f:   e8 23 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a954:   83 c4 10                        	add esp, 0x10
0x804a957:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804a95e:   98                              	cwde 
0x804a95f:   83 ec 04                        	sub esp, 4
0x804a962:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a965:   8d 93 75 db ff ff               	lea edx, [ebx - 0x248b]
0x804a96b:   52                              	push edx
0x804a96c:   50                              	push eax
0x804a96d:   e8 05 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a972:   83 c4 10                        	add esp, 0x10
0x804a975:   8b 83 b0 04 00 00               	mov eax, dword ptr [ebx + 0x4b0]
0x804a97b:   83 ec 04                        	sub esp, 4
0x804a97e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a981:   8d 93 7b db ff ff               	lea edx, [ebx - 0x2485]
0x804a987:   52                              	push edx
0x804a988:   50                              	push eax
0x804a989:   e8 e9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a98e:   83 c4 10                        	add esp, 0x10
0x804a991:   0f b7 83 72 00 00 00            	movzx eax, word ptr [ebx + 0x72]
0x804a998:   0f b7 c0                        	movzx eax, ax
0x804a99b:   83 ec 04                        	sub esp, 4
0x804a99e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a1:   8d 93 81 db ff ff               	lea edx, [ebx - 0x247f]
0x804a9a7:   52                              	push edx
0x804a9a8:   50                              	push eax
0x804a9a9:   e8 c9 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ae:   83 c4 10                        	add esp, 0x10
0x804a9b1:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804a9b7:   83 ec 04                        	sub esp, 4
0x804a9ba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9bd:   8d 93 87 db ff ff               	lea edx, [ebx - 0x2479]
0x804a9c3:   52                              	push edx
0x804a9c4:   50                              	push eax
0x804a9c5:   e8 ad eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ca:   83 c4 10                        	add esp, 0x10
0x804a9cd:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a9d3:   f7 d0                           	not eax
0x804a9d5:   83 ec 08                        	sub esp, 8
0x804a9d8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9db:   50                              	push eax
0x804a9dc:   e8 85 da ff ff                  	call 0x8048466 <platform_main_end>
0x804a9e1:   83 c4 10                        	add esp, 0x10
0x804a9e4:   b8 00 00 00 00                  	mov eax, 0
0x804a9e9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a9ec:   59                              	pop ecx
0x804a9ed:   5b                              	pop ebx
0x804a9ee:   5d                              	pop ebp
0x804a9ef:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a9f2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a9f3 -- 0x804a9f7
0x804a9f3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a9f6:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804a9f7 -- 0x804a9fb
0x804a9f7:   8b 14 24                        	mov edx, dword ptr [esp]
0x804a9fa:   c3                              	ret 
; data inside code section at 0x804a9fb -- 0x804aa00
0x804a9fb:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804aa00 -- 0x804aa5d
0x804aa00:   55                              	push ebp
0x804aa01:   57                              	push edi
0x804aa02:   56                              	push esi
0x804aa03:   53                              	push ebx
0x804aa04:   e8 87 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa09:   81 c3 f7 25 00 00               	add ebx, 0x25f7
0x804aa0f:   83 ec 0c                        	sub esp, 0xc
0x804aa12:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aa16:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804aa1c:   e8 ab d8 ff ff                  	call 0x80482cc <_init>
0x804aa21:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804aa27:   29 c6                           	sub esi, eax
0x804aa29:   c1 fe 02                        	sar esi, 2
0x804aa2c:   85 f6                           	test esi, esi
0x804aa2e:   74 25                           	je 0x804aa55 <__libc_csu_init+0x55>
0x804aa30:   31 ff                           	xor edi, edi
0x804aa32:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aa38:   83 ec 04                        	sub esp, 4
0x804aa3b:   55                              	push ebp
0x804aa3c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa40:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa44:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aa4b:   83 c7 01                        	add edi, 1
0x804aa4e:   83 c4 10                        	add esp, 0x10
0x804aa51:   39 fe                           	cmp esi, edi
0x804aa53:   75 e3                           	jne 0x804aa38 <__libc_csu_init+0x38>
0x804aa55:   83 c4 0c                        	add esp, 0xc
0x804aa58:   5b                              	pop ebx
0x804aa59:   5e                              	pop esi
0x804aa5a:   5f                              	pop edi
0x804aa5b:   5d                              	pop ebp
0x804aa5c:   c3                              	ret 
; data inside code section at 0x804aa5d -- 0x804aa60
0x804aa5d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804aa60 -- 0x804aa62
0x804aa60:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804aa64 -- 0x804aa78
0x804aa64:   53                              	push ebx
0x804aa65:   83 ec 08                        	sub esp, 8
0x804aa68:   e8 23 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa6d:   81 c3 93 25 00 00               	add ebx, 0x2593
0x804aa73:   83 c4 08                        	add esp, 8
0x804aa76:   5b                              	pop ebx
0x804aa77:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c aa 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aa78:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aa88:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aa98:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aaa8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aab8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804aac8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804aad8:   31 00 67 5f 36 00 67 5f  31 30 00 67 5f 32 30 00   |1.g_6.g_10.g_20.|
0x804aae8:   67 5f 32 31 00 67 5f 32  32 00 67 5f 35 38 00 67   |g_21.g_22.g_58.g|
0x804aaf8:   5f 36 32 00 67 5f 37 34  00 67 5f 37 35 00 67 5f   |_62.g_74.g_75.g_|
0x804ab08:   37 37 00 67 5f 38 38 00  67 5f 39 30 00 67 5f 31   |77.g_88.g_90.g_1|
0x804ab18:   30 30 00 67 5f 31 31 31  00 67 5f 31 31 32 00 67   |00.g_111.g_112.g|
0x804ab28:   5f 31 33 34 00 67 5f 31  34 31 00 67 5f 31 34 33   |_134.g_141.g_143|
0x804ab38:   00 67 5f 31 35 32 00 67  5f 31 36 32 00 67 5f 31   |.g_152.g_162.g_1|
0x804ab48:   36 33 00 67 5f 31 36 34  00 67 5f 31 36 35 00 67   |63.g_164.g_165.g|
0x804ab58:   5f 31 36 36 00 67 5f 31  37 34 00 67 5f 31 38 38   |_166.g_174.g_188|
0x804ab68:   00 67 5f 31 39 34 00 67  5f 31 39 35 00 67 5f 32   |.g_194.g_195.g_2|
0x804ab78:   32 33 00 67 5f 32 33 39  00 67 5f 32 34 36 00 67   |23.g_239.g_246.g|
0x804ab88:   5f 32 36 32 00 00 00 00  00 00 00 3f ff ff ff 7e   |_262.......?...~|
0x804ab98:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804aba8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804abb8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804abc8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804abd8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804abe8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804abf8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804abf8:   01 1b 03 3b b8 02 00 00  56 00 00 00 f8 d6 ff ff   |...;....V.......|
0x804ac08:   e8 02 00 00 38 d7 ff ff  0c 03 00 00 88 d7 ff ff   |....8...........|
0x804ac18:   d4 02 00 00 5e d8 ff ff  20 03 00 00 6e d8 ff ff   |....^... ...n...|
0x804ac28:   40 03 00 00 9c d8 ff ff  64 03 00 00 ba d8 ff ff   |@.......d.......|
0x804ac38:   84 03 00 00 e2 d8 ff ff  a4 03 00 00 0c d9 ff ff   |................|
0x804ac48:   c4 03 00 00 35 d9 ff ff  e4 03 00 00 78 d9 ff ff   |....5.......x...|
0x804ac58:   04 04 00 00 b9 d9 ff ff  24 04 00 00 11 da ff ff   |........$.......|
0x804ac68:   48 04 00 00 63 da ff ff  6c 04 00 00 a0 da ff ff   |H...c...l.......|
0x804ac78:   8c 04 00 00 d7 da ff ff  ac 04 00 00 f6 da ff ff   |................|
0x804ac88:   cc 04 00 00 20 db ff ff  ec 04 00 00 4c db ff ff   |.... .......L...|
0x804ac98:   0c 05 00 00 77 db ff ff  2c 05 00 00 c0 db ff ff   |....w...,.......|
0x804aca8:   4c 05 00 00 07 dc ff ff  6c 05 00 00 61 dc ff ff   |L.......l...a...|
0x804acb8:   90 05 00 00 b5 dc ff ff  b4 05 00 00 f4 dc ff ff   |................|
0x804acc8:   d4 05 00 00 2d dd ff ff  f4 05 00 00 4f dd ff ff   |....-.......O...|
0x804acd8:   14 06 00 00 9d dd ff ff  34 06 00 00 d9 dd ff ff   |........4.......|
0x804ace8:   54 06 00 00 62 de ff ff  74 06 00 00 94 de ff ff   |T...b...t.......|
0x804acf8:   94 06 00 00 c4 de ff ff  b4 06 00 00 09 df ff ff   |................|
0x804ad08:   d4 06 00 00 48 df ff ff  f4 06 00 00 7a df ff ff   |....H.......z...|
0x804ad18:   14 07 00 00 a6 df ff ff  34 07 00 00 c4 df ff ff   |........4.......|
0x804ad28:   54 07 00 00 ec df ff ff  74 07 00 00 11 e0 ff ff   |T.......t.......|
0x804ad38:   94 07 00 00 36 e0 ff ff  b4 07 00 00 6d e0 ff ff   |....6.......m...|
0x804ad48:   d4 07 00 00 a1 e0 ff ff  f4 07 00 00 f3 e0 ff ff   |................|
0x804ad58:   18 08 00 00 3f e1 ff ff  3c 08 00 00 76 e1 ff ff   |....?...<...v...|
0x804ad68:   5c 08 00 00 a7 e1 ff ff  7c 08 00 00 c6 e1 ff ff   |\.......|.......|
0x804ad78:   9c 08 00 00 f0 e1 ff ff  bc 08 00 00 18 e2 ff ff   |................|
0x804ad88:   dc 08 00 00 41 e2 ff ff  fc 08 00 00 7d e2 ff ff   |....A.......}...|
0x804ad98:   1c 09 00 00 b7 e2 ff ff  3c 09 00 00 0a e3 ff ff   |........<.......|
0x804ada8:   60 09 00 00 57 e3 ff ff  84 09 00 00 8f e3 ff ff   |`...W...........|
0x804adb8:   a4 09 00 00 c1 e3 ff ff  c4 09 00 00 d5 e3 ff ff   |................|
0x804adc8:   e4 09 00 00 ec e3 ff ff  04 0a 00 00 01 e4 ff ff   |................|
0x804add8:   24 0a 00 00 17 e4 ff ff  44 0a 00 00 3e e4 ff ff   |$.......D...>...|
0x804ade8:   64 0a 00 00 63 e4 ff ff  84 0a 00 00 a2 e4 ff ff   |d...c...........|
0x804adf8:   a4 0a 00 00 db e4 ff ff  c4 0a 00 00 07 e5 ff ff   |................|
0x804ae08:   e4 0a 00 00 2d e5 ff ff  04 0b 00 00 6f e5 ff ff   |....-.......o...|
0x804ae18:   24 0b 00 00 b1 e5 ff ff  44 0b 00 00 f3 e5 ff ff   |$.......D.......|
0x804ae28:   64 0b 00 00 68 e6 ff ff  84 0b 00 00 c5 e6 ff ff   |d...h...........|
0x804ae38:   a4 0b 00 00 22 e7 ff ff  c4 0b 00 00 7f e7 ff ff   |...."...........|
0x804ae48:   e4 0b 00 00 0f e8 ff ff  04 0c 00 00 73 e8 ff ff   |............s...|
0x804ae58:   24 0c 00 00 e3 e8 ff ff  44 0c 00 00 2a e9 ff ff   |$.......D...*...|
0x804ae68:   68 0c 00 00 7f e9 ff ff  88 0c 00 00 c6 e9 ff ff   |h...............|
0x804ae78:   ac 0c 00 00 2e ea ff ff  d0 0c 00 00 6b ec ff ff   |............k...|
0x804ae88:   00 0d 00 00 a7 f9 ff ff  30 0d 00 00 fb fd ff ff   |........0.......|
0x804ae98:   68 0d 00 00 ff fd ff ff  7c 0d 00 00 08 fe ff ff   |h.......|.......|
0x804aea8:   90 0d 00 00 68 fe ff ff  dc 0d 00 00 14            |....h........   |
; section: .eh_frame
0x804aeb4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804aec4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804aed4:   ac d4 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804aee4:   30 00 00 00 08 d4 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804aef4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804af04:   10 00 00 00 54 00 00 00  24 d4 ff ff 08 00 00 00   |....T...$.......|
0x804af14:   00 00 00 00 1c 00 00 00  68 00 00 00 36 d5 ff ff   |........h...6...|
0x804af24:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804af34:   04 04 00 00 20 00 00 00  88 00 00 00 26 d5 ff ff   |.... .......&...|
0x804af44:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804af54:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804af64:   30 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804af74:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804af84:   2e d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804af94:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804afa4:   36 d5 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |6...*....A....B.|
0x804afb4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804afc4:   40 d5 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |@...)....A....B.|
0x804afd4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804afe4:   49 d5 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |I...C....A....B.|
0x804aff4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b004:   6c d5 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |l...A....A....B.|
0x804b014:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b024:   8d d5 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b034:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b044:   90 01 00 00 c1 d5 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b054:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b064:   1c 00 00 00 b4 01 00 00  ef d5 ff ff 3d 00 00 00   |............=...|
0x804b074:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b084:   1c 00 00 00 d4 01 00 00  0c d6 ff ff 37 00 00 00   |............7...|
0x804b094:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b0a4:   1c 00 00 00 f4 01 00 00  23 d6 ff ff 1f 00 00 00   |........#.......|
0x804b0b4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b0c4:   1c 00 00 00 14 02 00 00  22 d6 ff ff 2a 00 00 00   |........"...*...|
0x804b0d4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b0e4:   1c 00 00 00 34 02 00 00  2c d6 ff ff 2c 00 00 00   |....4...,...,...|
0x804b0f4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b104:   1c 00 00 00 54 02 00 00  38 d6 ff ff 2b 00 00 00   |....T...8...+...|
0x804b114:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b124:   1c 00 00 00 74 02 00 00  43 d6 ff ff 49 00 00 00   |....t...C...I...|
0x804b134:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b144:   1c 00 00 00 94 02 00 00  6c d6 ff ff 47 00 00 00   |........l...G...|
0x804b154:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b164:   20 00 00 00 b4 02 00 00  93 d6 ff ff 5a 00 00 00   | ...........Z...|
0x804b174:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b184:   c5 0c 04 04 20 00 00 00  d8 02 00 00 c9 d6 ff ff   |.... ...........|
0x804b194:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b1a4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b1b4:   f9 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b1c4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b1d4:   18 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b1e4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b1f4:   31 d7 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |1..."....A....B.|
0x804b204:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b214:   33 d7 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |3...N....A....B.|
0x804b224:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b234:   61 d7 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |a...<....A....B.|
0x804b244:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b254:   7d d7 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b264:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b274:   e6 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b284:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b294:   f8 d7 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b2a4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b2b4:   08 d8 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b2c4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b2d4:   2d d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |-...?....A....B.|
0x804b2e4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b2f4:   4c d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |L...2....A....B.|
0x804b304:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b314:   5e d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |^...,....A....B.|
0x804b324:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b334:   6a d8 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |j........A....B.|
0x804b344:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b354:   68 d8 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |h...(....A....B.|
0x804b364:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b374:   70 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |p...%....A....B.|
0x804b384:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b394:   75 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |u...%....A....B.|
0x804b3a4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b3b4:   7a d8 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |z...7....A....B.|
0x804b3c4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b3d4:   91 d8 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b3e4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b3f4:   a5 d8 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b404:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b414:   60 05 00 00 d3 d8 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b424:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b434:   1c 00 00 00 84 05 00 00  fb d8 ff ff 37 00 00 00   |............7...|
0x804b444:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b454:   1c 00 00 00 a4 05 00 00  12 d9 ff ff 31 00 00 00   |............1...|
0x804b464:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b474:   1c 00 00 00 c4 05 00 00  23 d9 ff ff 1f 00 00 00   |........#.......|
0x804b484:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b494:   1c 00 00 00 e4 05 00 00  22 d9 ff ff 2a 00 00 00   |........"...*...|
0x804b4a4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b4b4:   1c 00 00 00 04 06 00 00  2c d9 ff ff 28 00 00 00   |........,...(...|
0x804b4c4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b4d4:   1c 00 00 00 24 06 00 00  34 d9 ff ff 29 00 00 00   |....$...4...)...|
0x804b4e4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b4f4:   1c 00 00 00 44 06 00 00  3d d9 ff ff 3c 00 00 00   |....D...=...<...|
0x804b504:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b514:   1c 00 00 00 64 06 00 00  59 d9 ff ff 3a 00 00 00   |....d...Y...:...|
0x804b524:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b534:   20 00 00 00 84 06 00 00  73 d9 ff ff 53 00 00 00   | .......s...S...|
0x804b544:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b554:   c5 0c 04 04 20 00 00 00  a8 06 00 00 a2 d9 ff ff   |.... ...........|
0x804b564:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b574:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b584:   cb d9 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b594:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b5a4:   e3 d9 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b5b4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b5c4:   f5 d9 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5d4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b5e4:   e9 d9 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5f4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b604:   e0 d9 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b614:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b624:   d5 d9 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b634:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b644:   cb d9 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b654:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b664:   d2 d9 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b674:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b684:   d7 d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b694:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b6a4:   f6 d9 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b6b4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b6c4:   0f da ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b6d4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b6e4:   1b da ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b6f4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b704:   21 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |!...B....A....B.|
0x804b714:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b724:   43 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |C...B....A....B.|
0x804b734:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b744:   65 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |e...B....A....B.|
0x804b754:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b764:   87 da ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b774:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b784:   dc da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b794:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b7a4:   19 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b7b4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b7c4:   56 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |V...]....A....B.|
0x804b7d4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b7e4:   93 db ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7f4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b804:   03 dc ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b814:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b824:   47 dc ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |G...p....A....B.|
0x804b834:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b844:   97 dc ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b854:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b864:   b0 09 00 00 ba dc ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b874:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b884:   d0 09 00 00 ef dc ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b894:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b8a4:   20 00 00 00 f4 09 00 00  12 dd ff ff 68 00 00 00   | ...........h...|
0x804b8b4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b8c4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 56 dd ff ff   |....,.......V...|
0x804b8d4:   3d 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |=....A....B..F..|
0x804b8e4:   86 04 83 05 03 30 02 c3  41 c6 41 c7 41 c5 0c 04   |.....0..A.A.A...|
0x804b8f4:   04 00 00 00 2c 00 00 00  48 0a 00 00 63 df ff ff   |....,...H...c...|
0x804b904:   3c 0d 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |<....A....B..I..|
0x804b914:   86 04 83 05 03 2c 0d c3  41 c6 41 c7 41 c5 0c 04   |.....,..A.A.A...|
0x804b924:   04 00 00 00 34 00 00 00  78 0a 00 00 6f ec ff ff   |....4...x...o...|
0x804b934:   54 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |T....D...G...u.D|
0x804b944:   0f 03 75 78 06 10 03 02  75 7c 03 3f 04 c1 0c 01   |..ux....u|.?....|
0x804b954:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b964:   b0 0a 00 00 8b f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b974:   10 00 00 00 c4 0a 00 00  7b f0 ff ff 04 00 00 00   |........{.......|
0x804b984:   00 00 00 00 48 00 00 00  d8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804b994:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804b9a4:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804b9b4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804b9c4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804b9d4:   10 00 00 00 24 0b 00 00  84 f0 ff ff 02 00 00 00   |....$...........|
0x804b9e4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 64 aa 04 08  19 00 00 00 0c cf 04 08   |....d...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff f2 48 00 00   |.............H..|
0x804d028:   67 83 43 81 3c 00 b2 5c  07 00 00 00 e7 05 07 31   |g.C.<..\.......1|
0x804d038:   6a ca 16 24 45 29 ad fb  ff ff ff ff 02 00 00 00   |j..$E)..........|
0x804d048:   6a 7f 00 00 94 b3 a5 8a  01 00 00 00 7b ef 64 6e   |j...........{.dn|
0x804d058:   96 25 00 00 e9 51 0a 9b  01 00 ce 00 41 14 09 d9   |.%...Q......A...|
0x804d068:   fe ff ff ff d2 fb 99 3a  9b b0 a3 6b fe ff ff ff   |.......:...k....|
0x804d078:   ??                                                 |?               |
