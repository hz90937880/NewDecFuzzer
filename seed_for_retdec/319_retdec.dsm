;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:36
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 b0 d3 ff ff               	lea eax, [ebx - 0x2c50]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 d3 ff ff               	lea eax, [ebx - 0x2cb0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 4c ae 04 08               	mov eax, 0x804ae4c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 98 e0 04 08                  	mov eax, 0x804e098
0x80483a5:   3d 98 e0 04 08                  	cmp eax, 0x804e098
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 98 e0 04 08                  	push 0x804e098
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 98 e0 04 08                  	mov eax, 0x804e098
0x80483e5:   2d 98 e0 04 08                  	sub eax, 0x804e098
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 98 e0 04 08                  	push 0x804e098
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 e2 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 ce 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 d3 ff ff               	lea edx, [eax - 0x2c30]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 a1 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 83 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 5b 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 31 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 08 2e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 c5 2d 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 83 2d 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 2b 2d 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 da 2c 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 9d 2c 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 66 2c 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 47 2c 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 1d 2c 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 f1 2b 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c6 2b 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 7d 2b 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 35 2b 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 db 2a 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 88 2a 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 49 2a 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 13 2a 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 f1 29 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 a3 29 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 67 29 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 de 28 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 ac 28 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 7c 28 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 37 28 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 f8 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c6 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 97 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 79 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 51 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 2c 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 07 27 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 d0 26 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 9b 26 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 49 26 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 fe 25 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 c7 25 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 96 25 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 77 25 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 4d 25 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 25 25 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 fc 24 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 c0 24 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 85 24 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 32 24 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e6 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 ae 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 7f 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 6b 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 54 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 3f 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 29 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 02 23 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 dd 22 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 9e 22 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 65 22 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 39 22 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 13 22 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 08 d5 ff ff               	fld dword ptr [eax - 0x2af8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 08 d5 ff ff               	fld dword ptr [eax - 0x2af8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 0c d5 ff ff               	fld dword ptr [eax - 0x2af4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 d1 21 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 08 d5 ff ff               	fld dword ptr [eax - 0x2af8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 08 d5 ff ff               	fld dword ptr [eax - 0x2af8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 0c d5 ff ff               	fld dword ptr [eax - 0x2af4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 8f 21 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 10 d5 ff ff               	fld dword ptr [eax - 0x2af0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 14 d5 ff ff               	fld dword ptr [eax - 0x2aec]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 18 d5 ff ff               	fld dword ptr [eax - 0x2ae8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 4d 21 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 1c d5 ff ff               	fld dword ptr [eax - 0x2ae4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 20 d5 ff ff               	fld dword ptr [eax - 0x2ae0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 24 d5 ff ff               	fld dword ptr [eax - 0x2adc]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 d5 20 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 28 d5 ff ff               	fld qword ptr [eax - 0x2ad8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 28 d5 ff ff               	fld qword ptr [eax - 0x2ad8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 30 d5 ff ff               	fld qword ptr [eax - 0x2ad0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 78 20 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 28 d5 ff ff               	fld qword ptr [eax - 0x2ad8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 28 d5 ff ff               	fld qword ptr [eax - 0x2ad8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 30 d5 ff ff               	fld qword ptr [eax - 0x2ad0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 1b 20 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 38 d5 ff ff               	fld qword ptr [eax - 0x2ac8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 40 d5 ff ff               	fld qword ptr [eax - 0x2ac0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 48 d5 ff ff               	fld qword ptr [eax - 0x2ab8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 be 1f 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 50 d5 ff ff               	fld qword ptr [eax - 0x2ab0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 58 d5 ff ff               	fld qword ptr [eax - 0x2aa8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 60 d5 ff ff               	fld qword ptr [eax - 0x2aa0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 2e 1f 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 68 d5 ff ff               	fld dword ptr [eax - 0x2a98]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 6c d5 ff ff               	fld dword ptr [eax - 0x2a94]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 ca 1e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 59 1e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 16 1e 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 d3 ff ff               	lea eax, [ebx - 0x2c20]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 d4 ff ff               	lea eax, [ebx - 0x2bfc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049891
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 70                        	sub esp, 0x70
0x804962f:   e8 10 1d 00 00                  	call 0x804b344 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804963d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049640:   8b 4d 2c                        	mov ecx, dword ptr [ebp + 0x2c]
0x8049643:   8b 5d 30                        	mov ebx, dword ptr [ebp + 0x30]
0x8049646:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x8049649:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804964c:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804964f:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049652:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049655:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049658:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804965b:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804965e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049661:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049664:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049667:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804966a:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804966d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049670:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049673:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049676:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049679:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804967c:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x8049682:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049685:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x804968b:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804968e:   8b 85 98 00 00 00               	mov eax, dword ptr [ebp + 0x98]
0x8049694:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049697:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804969b:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804969f:   89 c8                           	mov eax, ecx
0x80496a1:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496a4:   89 d8                           	mov eax, ebx
0x80496a6:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496a9:   89 f0                           	mov eax, esi
0x80496ab:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496ae:   89 f8                           	mov eax, edi
0x80496b0:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496b4:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496b8:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496bc:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496c0:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c4:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c8:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496cc:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496d0:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496d4:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d8:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496db:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496df:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e2:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496e6:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496ea:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496ee:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496f2:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496f6:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496f9:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x80496fd:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049700:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049704:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049707:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804970a:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049710:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049713:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049719:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804971c:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049722:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049725:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804972b:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x804972e:   89 82 c4 04 00 00               	mov dword ptr [edx + 0x4c4], eax
0x8049734:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049737:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804973d:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049740:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049746:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049749:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804974f:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049753:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804975a:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804975e:   88 82 42 00 00 00               	mov byte ptr [edx + 0x42], al
0x8049764:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049768:   88 82 43 00 00 00               	mov byte ptr [edx + 0x43], al
0x804976e:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049772:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x8049778:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804977b:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049781:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049785:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x804978c:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804978f:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049795:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049799:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x80497a0:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x80497a3:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497a9:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497ad:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x80497b4:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497b8:   66 89 82 5e 00 00 00            	mov word ptr [edx + 0x5e], ax
0x80497bf:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497c3:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x80497ca:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497ce:   88 82 62 00 00 00               	mov byte ptr [edx + 0x62], al
0x80497d4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497d8:   88 82 63 00 00 00               	mov byte ptr [edx + 0x63], al
0x80497de:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497e1:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497e7:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497ea:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497f0:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497f4:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80497fb:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497fe:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049804:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049808:   66 89 82 74 00 00 00            	mov word ptr [edx + 0x74], ax
0x804980f:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049812:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049818:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804981b:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049821:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049824:   89 82 c8 04 00 00               	mov dword ptr [edx + 0x4c8], eax
0x804982a:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049830:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x8049836:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x804983a:   88 82 84 00 00 00               	mov byte ptr [edx + 0x84], al
0x8049840:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049844:   88 82 85 00 00 00               	mov byte ptr [edx + 0x85], al
0x804984a:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x8049850:   89 82 cc 04 00 00               	mov dword ptr [edx + 0x4cc], eax
0x8049856:   8b 85 90 00 00 00               	mov eax, dword ptr [ebp + 0x90]
0x804985c:   89 82 88 00 00 00               	mov dword ptr [edx + 0x88], eax
0x8049862:   8b 85 94 00 00 00               	mov eax, dword ptr [ebp + 0x94]
0x8049868:   89 82 8c 00 00 00               	mov dword ptr [edx + 0x8c], eax
0x804986e:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x8049872:   88 82 90 00 00 00               	mov byte ptr [edx + 0x90], al
0x8049878:   8b 85 9c 00 00 00               	mov eax, dword ptr [ebp + 0x9c]
0x804987e:   89 82 94 00 00 00               	mov dword ptr [edx + 0x94], eax
0x8049884:   b8 00 00 00 00                  	mov eax, 0
0x8049889:   83 c4 70                        	add esp, 0x70
0x804988c:   5b                              	pop ebx
0x804988d:   5e                              	pop esi
0x804988e:   5f                              	pop edi
0x804988f:   5d                              	pop ebp
0x8049890:   c3                              	ret 
; function: func_1 at 0x8049891 -- 0x804ae4c
0x8049891:   55                              	push ebp
0x8049892:   89 e5                           	mov ebp, esp
0x8049894:   57                              	push edi
0x8049895:   56                              	push esi
0x8049896:   53                              	push ebx
0x8049897:   81 ec c8 01 00 00               	sub esp, 0x1c8
0x804989d:   e8 9e 1a 00 00                  	call 0x804b340 <__x86.get_pc_thunk.ax>
0x80498a2:   05 5e 47 00 00                  	add eax, 0x475e
0x80498a7:   c7 45 e8 9f f9 fd 69            	mov dword ptr [ebp - 0x18], 0x69fdf99f
0x80498ae:   c7 45 d4 07 00 00 00            	mov dword ptr [ebp - 0x2c], 7
0x80498b5:   c7 45 d0 33 d9 01 e4            	mov dword ptr [ebp - 0x30], 0xe401d933
0x80498bc:   c7 45 cc 09 00 00 00            	mov dword ptr [ebp - 0x34], 9
0x80498c3:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x80498ca:   c7 45 e0 6c dd 5f 2c            	mov dword ptr [ebp - 0x20], 0x2c5fdd6c
0x80498d1:   c7 45 ac 71 75 b5 2e            	mov dword ptr [ebp - 0x54], 0x2eb57571
0x80498d8:   c7 45 dc fa ff ff ff            	mov dword ptr [ebp - 0x24], 0xfffffffa
0x80498df:   66 c7 45 da 30 b2               	mov word ptr [ebp - 0x26], 0xb230
0x80498e5:   c6 45 cb b4                     	mov byte ptr [ebp - 0x35], 0xb4
0x80498e9:   c6 85 67 ff ff ff fa            	mov byte ptr [ebp - 0x99], 0xfa
0x80498f0:   c6 85 66 ff ff ff fe            	mov byte ptr [ebp - 0x9a], 0xfe
0x80498f7:   c7 85 60 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa0], 0xffffffff
0x8049901:   66 c7 45 c8 06 00               	mov word ptr [ebp - 0x38], 6
0x8049907:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804990e:   66 c7 45 a6 fb ff               	mov word ptr [ebp - 0x5a], 0xfffb
0x8049914:   c7 45 c0 fb ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffffb
0x804991b:   66 c7 45 be 47 b8               	mov word ptr [ebp - 0x42], 0xb847
0x8049921:   66 c7 45 a4 08 00               	mov word ptr [ebp - 0x5c], 8
0x8049927:   66 c7 45 a2 3c 20               	mov word ptr [ebp - 0x5e], 0x203c
0x804992d:   c6 45 c7 63                     	mov byte ptr [ebp - 0x39], 0x63
0x8049931:   c6 45 a1 01                     	mov byte ptr [ebp - 0x5f], 1
0x8049935:   c7 45 9c 87 ec b6 43            	mov dword ptr [ebp - 0x64], 0x43b6ec87
0x804993c:   c7 45 98 29 de d8 5a            	mov dword ptr [ebp - 0x68], 0x5ad8de29
0x8049943:   66 c7 45 96 ce d8               	mov word ptr [ebp - 0x6a], 0xd8ce
0x8049949:   c7 45 90 f8 ff ff ff            	mov dword ptr [ebp - 0x70], 0xfffffff8
0x8049950:   66 c7 45 8e 01 00               	mov word ptr [ebp - 0x72], 1
0x8049956:   c7 45 88 fc ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffffc
0x804995d:   c7 45 84 1f b8 89 bd            	mov dword ptr [ebp - 0x7c], 0xbd89b81f
0x8049964:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x804996b:   c7 85 d4 fe ff ff ba d1 05 b6   	mov dword ptr [ebp - 0x12c], 0xb605d1ba
0x8049975:   c6 85 d3 fe ff ff ff            	mov byte ptr [ebp - 0x12d], 0xff
0x804997c:   c6 85 d2 fe ff ff 31            	mov byte ptr [ebp - 0x12e], 0x31
0x8049983:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x804998d:   c7 85 38 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffa
0x8049997:   c7 85 34 ff ff ff 48 4e fe b9   	mov dword ptr [ebp - 0xcc], 0xb9fe4e48
0x80499a1:   c6 85 33 ff ff ff 06            	mov byte ptr [ebp - 0xcd], 6
0x80499a8:   c7 85 2c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd4], 0xffffffff
0x80499b2:   66 c7 85 2a ff ff ff 01 00      	mov word ptr [ebp - 0xd6], 1
0x80499bb:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x80499c5:   66 c7 85 72 ff ff ff c0 a0      	mov word ptr [ebp - 0x8e], 0xa0c0
0x80499ce:   66 c7 85 28 ff ff ff 87 cf      	mov word ptr [ebp - 0xd8], 0xcf87
0x80499d7:   c7 85 7c ff ff ff e2 6d 2b 2c   	mov dword ptr [ebp - 0x84], 0x2c2b6de2
0x80499e1:   66 c7 85 26 ff ff ff 52 91      	mov word ptr [ebp - 0xda], 0x9152
0x80499ea:   c7 85 20 ff ff ff 1c 53 ae 3f   	mov dword ptr [ebp - 0xe0], 0x3fae531c
0x80499f4:   c7 85 1c ff ff ff 99 54 5a d7   	mov dword ptr [ebp - 0xe4], 0xd75a5499
0x80499fe:   66 c7 85 1a ff ff ff 0a c9      	mov word ptr [ebp - 0xe6], 0xc90a
0x8049a07:   c7 85 14 ff ff ff fb ef b5 a2   	mov dword ptr [ebp - 0xec], 0xa2b5effb
0x8049a11:   c7 85 10 ff ff ff 3f 12 bb 98   	mov dword ptr [ebp - 0xf0], 0x98bb123f
0x8049a1b:   c7 85 0c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffffc
0x8049a25:   c7 85 08 ff ff ff 2a 17 ff 66   	mov dword ptr [ebp - 0xf8], 0x66ff172a
0x8049a2f:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x8049a36:   e9 8d 09 00 00                  	jmp 0x804a3c8 <func_1+0xb37>
0x8049a3b:   c7 85 f8 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x108], 5
0x8049a45:   c7 85 f4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x10c], 1
0x8049a4f:   c7 85 f0 fe ff ff 7b 5c 0b 61   	mov dword ptr [ebp - 0x110], 0x610b5c7b
0x8049a59:   c6 85 ef fe ff ff 4a            	mov byte ptr [ebp - 0x111], 0x4a
0x8049a60:   c7 85 78 ff ff ff b2 ac d7 a7   	mov dword ptr [ebp - 0x88], 0xa7d7acb2
0x8049a6a:   c7 85 e8 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x118], 4
0x8049a74:   c6 85 7f fe ff ff 01            	mov byte ptr [ebp - 0x181], 1
0x8049a7b:   c7 85 78 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x188], 0xfffffffc
0x8049a85:   66 c7 85 76 fe ff ff 00 00      	mov word ptr [ebp - 0x18a], 0
0x8049a8e:   66 c7 85 74 fe ff ff 02 00      	mov word ptr [ebp - 0x18c], 2
0x8049a97:   c7 85 70 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x190], 0xffffffff
0x8049aa1:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049aa5:   0f 9f c0                        	setg al
0x8049aa8:   0f b6 c0                        	movzx eax, al
0x8049aab:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049aae:   0f 9c c0                        	setl al
0x8049ab1:   0f b6 d0                        	movzx edx, al
0x8049ab4:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049abb:   29 c2                           	sub edx, eax
0x8049abd:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ac0:   29 c2                           	sub edx, eax
0x8049ac2:   89 d0                           	mov eax, edx
0x8049ac4:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049ac7:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049aca:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049acd:   76 06                           	jbe 0x8049ad5 <func_1+0x244>
0x8049acf:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049ad3:   74 07                           	je 0x8049adc <func_1+0x24b>
0x8049ad5:   b8 01 00 00 00                  	mov eax, 1
0x8049ada:   eb 05                           	jmp 0x8049ae1 <func_1+0x250>
0x8049adc:   b8 00 00 00 00                  	mov eax, 0
0x8049ae1:   3b 85 f4 fe ff ff               	cmp eax, dword ptr [ebp - 0x10c]
0x8049ae7:   0f 9e c0                        	setle al
0x8049aea:   0f b6 c0                        	movzx eax, al
0x8049aed:   f7 d8                           	neg eax
0x8049aef:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x8049af2:   85 c0                           	test eax, eax
0x8049af4:   75 07                           	jne 0x8049afd <func_1+0x26c>
0x8049af6:   83 bd f4 fe ff ff 00            	cmp dword ptr [ebp - 0x10c], 0
0x8049afd:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b00:   3b 45 d4                        	cmp eax, dword ptr [ebp - 0x2c]
0x8049b03:   0f 9e c0                        	setle al
0x8049b06:   0f b6 c0                        	movzx eax, al
0x8049b09:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x8049b0f:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049b16:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049b1c:   0f 9c c0                        	setl al
0x8049b1f:   0f b6 d0                        	movzx edx, al
0x8049b22:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049b25:   0f b6 c0                        	movzx eax, al
0x8049b28:   89 c1                           	mov ecx, eax
0x8049b2a:   d3 fa                           	sar edx, cl
0x8049b2c:   89 d0                           	mov eax, edx
0x8049b2e:   0f bf f0                        	movsx esi, ax
0x8049b31:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049b36:   99                              	cdq 
0x8049b37:   f7 fe                           	idiv esi
0x8049b39:   85 c0                           	test eax, eax
0x8049b3b:   0f 84 14 03 00 00               	je 0x8049e55 <func_1+0x5c4>
0x8049b41:   c7 85 8c fe ff ff 7c 07 eb df   	mov dword ptr [ebp - 0x174], 0xdfeb077c
0x8049b4b:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049b52:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049b55:   39 85 f0 fe ff ff               	cmp dword ptr [ebp - 0x110], eax
0x8049b5b:   0f 96 c0                        	setbe al
0x8049b5e:   0f b6 c0                        	movzx eax, al
0x8049b61:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049b64:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049b67:   0f b6 c0                        	movzx eax, al
0x8049b6a:   ba ba 00 00 00                  	mov edx, 0xba
0x8049b6f:   29 c2                           	sub edx, eax
0x8049b71:   89 d0                           	mov eax, edx
0x8049b73:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049b76:   0f 94 c0                        	sete al
0x8049b79:   0f b6 c0                        	movzx eax, al
0x8049b7c:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x8049b7f:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x8049b82:   85 c0                           	test eax, eax
0x8049b84:   0f 84 87 01 00 00               	je 0x8049d11 <func_1+0x480>
0x8049b8a:   c6 85 5f fe ff ff a5            	mov byte ptr [ebp - 0x1a1], 0xa5
0x8049b91:   c7 85 58 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x1a8], 0xfffffffa
0x8049b9b:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049b9e:   89 c2                           	mov edx, eax
0x8049ba0:   0f b6 85 5f fe ff ff            	movzx eax, byte ptr [ebp - 0x1a1]
0x8049ba7:   21 d0                           	and eax, edx
0x8049ba9:   88 85 5f fe ff ff               	mov byte ptr [ebp - 0x1a1], al
0x8049baf:   83 7d d4 01                     	cmp dword ptr [ebp - 0x2c], 1
0x8049bb3:   0f 95 c0                        	setne al
0x8049bb6:   0f b6 d0                        	movzx edx, al
0x8049bb9:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049bbc:   98                              	cwde 
0x8049bbd:   29 c2                           	sub edx, eax
0x8049bbf:   89 d0                           	mov eax, edx
0x8049bc1:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x8049bc7:   c7 85 58 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1a8], 1
0x8049bd1:   8b 85 58 fe ff ff               	mov eax, dword ptr [ebp - 0x1a8]
0x8049bd7:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049bda:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x8049be1:   0f be 95 d2 fe ff ff            	movsx edx, byte ptr [ebp - 0x12e]
0x8049be8:   0f be 8d d3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12d]
0x8049bef:   0f b7 75 8e                     	movzx esi, word ptr [ebp - 0x72]
0x8049bf3:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x8049bf7:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x8049bfd:   0f be 5d a1                     	movsx ebx, byte ptr [ebp - 0x5f]
0x8049c01:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x8049c07:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049c0b:   89 bd 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], edi
0x8049c11:   0f bf 5d a2                     	movsx ebx, word ptr [ebp - 0x5e]
0x8049c15:   89 9d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ebx
0x8049c1b:   0f bf 7d a4                     	movsx edi, word ptr [ebp - 0x5c]
0x8049c1f:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x8049c25:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x8049c29:   89 9d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ebx
0x8049c2f:   0f bf 7d a6                     	movsx edi, word ptr [ebp - 0x5a]
0x8049c33:   89 bd 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edi
0x8049c39:   0f bf 5d c8                     	movsx ebx, word ptr [ebp - 0x38]
0x8049c3d:   89 9d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ebx
0x8049c43:   0f b6 bd 66 ff ff ff            	movzx edi, byte ptr [ebp - 0x9a]
0x8049c4a:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x8049c50:   0f be 9d 67 ff ff ff            	movsx ebx, byte ptr [ebp - 0x99]
0x8049c57:   89 9d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ebx
0x8049c5d:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x8049c61:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x8049c65:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x8049c6b:   50                              	push eax
0x8049c6c:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x8049c72:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x8049c78:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x8049c7e:   52                              	push edx
0x8049c7f:   51                              	push ecx
0x8049c80:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049c86:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049c89:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049c8c:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049c8f:   56                              	push esi
0x8049c90:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049c93:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049c99:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049c9c:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049c9f:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049ca5:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x8049cab:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x8049cb1:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x8049cb7:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x8049cbd:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049cc0:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x8049cc6:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049cc9:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x8049ccf:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049cd5:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x8049cdb:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x8049ce1:   57                              	push edi
0x8049ce2:   53                              	push ebx
0x8049ce3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049ce6:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049ce9:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049cec:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049cef:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049cf2:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049cf5:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049cf8:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049cfb:   e8 26 f9 ff ff                  	call 0x8049626 <set_var>
0x8049d00:   81 c4 98 00 00 00               	add esp, 0x98
0x8049d06:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x8049d0c:   e9 33 11 00 00                  	jmp 0x804ae44 <func_1+0x15b3>
0x8049d11:   66 c7 45 ee 33 6c               	mov word ptr [ebp - 0x12], 0x6c33
0x8049d17:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049d1d:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049d21:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x8049d28:   0f be 95 d2 fe ff ff            	movsx edx, byte ptr [ebp - 0x12e]
0x8049d2f:   0f be 8d d3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12d]
0x8049d36:   0f b7 75 8e                     	movzx esi, word ptr [ebp - 0x72]
0x8049d3a:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x8049d3e:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x8049d44:   0f be 5d a1                     	movsx ebx, byte ptr [ebp - 0x5f]
0x8049d48:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x8049d4e:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049d52:   89 bd 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], edi
0x8049d58:   0f bf 5d a2                     	movsx ebx, word ptr [ebp - 0x5e]
0x8049d5c:   89 9d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ebx
0x8049d62:   0f bf 7d a4                     	movsx edi, word ptr [ebp - 0x5c]
0x8049d66:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x8049d6c:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x8049d70:   89 9d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ebx
0x8049d76:   0f bf 7d a6                     	movsx edi, word ptr [ebp - 0x5a]
0x8049d7a:   89 bd 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edi
0x8049d80:   0f bf 5d c8                     	movsx ebx, word ptr [ebp - 0x38]
0x8049d84:   89 9d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ebx
0x8049d8a:   0f b6 bd 66 ff ff ff            	movzx edi, byte ptr [ebp - 0x9a]
0x8049d91:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x8049d97:   0f be 9d 67 ff ff ff            	movsx ebx, byte ptr [ebp - 0x99]
0x8049d9e:   89 9d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ebx
0x8049da4:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x8049da8:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x8049dac:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x8049db2:   50                              	push eax
0x8049db3:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x8049db9:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x8049dbf:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x8049dc5:   52                              	push edx
0x8049dc6:   51                              	push ecx
0x8049dc7:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049dcd:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049dd0:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049dd3:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049dd6:   56                              	push esi
0x8049dd7:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049dda:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049de0:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049de3:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049de6:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x8049dec:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x8049df2:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x8049df8:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x8049dfe:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x8049e04:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e07:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x8049e0d:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049e10:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x8049e16:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049e1c:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x8049e22:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x8049e28:   57                              	push edi
0x8049e29:   53                              	push ebx
0x8049e2a:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e2d:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049e30:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e33:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049e36:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049e39:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049e3c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e3f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049e42:   e8 df f7 ff ff                  	call 0x8049626 <set_var>
0x8049e47:   81 c4 98 00 00 00               	add esp, 0x98
0x8049e4d:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049e50:   e9 ef 0f 00 00                  	jmp 0x804ae44 <func_1+0x15b3>
0x8049e55:   c6 85 92 fe ff ff 4f            	mov byte ptr [ebp - 0x16e], 0x4f
0x8049e5c:   80 bd 92 fe ff ff 00            	cmp byte ptr [ebp - 0x16e], 0
0x8049e63:   75 0a                           	jne 0x8049e6f <func_1+0x5de>
0x8049e65:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x8049e6d:   74 07                           	je 0x8049e76 <func_1+0x5e5>
0x8049e6f:   b8 01 00 00 00                  	mov eax, 1
0x8049e74:   eb 05                           	jmp 0x8049e7b <func_1+0x5ea>
0x8049e76:   b8 00 00 00 00                  	mov eax, 0
0x8049e7b:   0f be c0                        	movsx eax, al
0x8049e7e:   83 c0 02                        	add eax, 2
0x8049e81:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e84:   c7 45 cc fb ff 00 00            	mov dword ptr [ebp - 0x34], 0xfffb
0x8049e8b:   83 7d d0 01                     	cmp dword ptr [ebp - 0x30], 1
0x8049e8f:   75 10                           	jne 0x8049ea1 <func_1+0x610>
0x8049e91:   80 bd 92 fe ff ff 00            	cmp byte ptr [ebp - 0x16e], 0
0x8049e98:   74 07                           	je 0x8049ea1 <func_1+0x610>
0x8049e9a:   b8 01 00 00 00                  	mov eax, 1
0x8049e9f:   eb 05                           	jmp 0x8049ea6 <func_1+0x615>
0x8049ea1:   b8 00 00 00 00                  	mov eax, 0
0x8049ea6:   89 c2                           	mov edx, eax
0x8049ea8:   89 d0                           	mov eax, edx
0x8049eaa:   c1 e0 02                        	shl eax, 2
0x8049ead:   01 d0                           	add eax, edx
0x8049eaf:   f7 d8                           	neg eax
0x8049eb1:   0f be c0                        	movsx eax, al
0x8049eb4:   8d 50 09                        	lea edx, [eax + 9]
0x8049eb7:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049eba:   01 d0                           	add eax, edx
0x8049ebc:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ebf:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049ec2:   89 c1                           	mov ecx, eax
0x8049ec4:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049eca:   0f bf d0                        	movsx edx, ax
0x8049ecd:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049ed0:   0f be c0                        	movsx eax, al
0x8049ed3:   c1 e0 07                        	shl eax, 7
0x8049ed6:   66 0b 85 28 ff ff ff            	or ax, word ptr [ebp - 0xd8]
0x8049edd:   98                              	cwde 
0x8049ede:   01 d0                           	add eax, edx
0x8049ee0:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049ee6:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049eec:   3b 45 d4                        	cmp eax, dword ptr [ebp - 0x2c]
0x8049eef:   0f 9c c0                        	setl al
0x8049ef2:   0f b6 c0                        	movzx eax, al
0x8049ef5:   0b 85 f0 fe ff ff               	or eax, dword ptr [ebp - 0x110]
0x8049efb:   89 c2                           	mov edx, eax
0x8049efd:   0f bf 85 28 ff ff ff            	movsx eax, word ptr [ebp - 0xd8]
0x8049f04:   39 c2                           	cmp edx, eax
0x8049f06:   0f 92 c0                        	setb al
0x8049f09:   0f b6 c0                        	movzx eax, al
0x8049f0c:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049f0f:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f12:   c0 f8 05                        	sar al, 5
0x8049f15:   31 c8                           	xor eax, ecx
0x8049f17:   0f be f0                        	movsx esi, al
0x8049f1a:   b8 06 00 00 00                  	mov eax, 6
0x8049f1f:   99                              	cdq 
0x8049f20:   f7 fe                           	idiv esi
0x8049f22:   85 c0                           	test eax, eax
0x8049f24:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049f2b:   66 c7 85 72 ff ff ff 11 00      	mov word ptr [ebp - 0x8e], 0x11
0x8049f34:   e9 7d 04 00 00                  	jmp 0x804a3b6 <func_1+0xb25>
0x8049f39:   66 c7 85 e6 fe ff ff ff ff      	mov word ptr [ebp - 0x11a], 0xffff
0x8049f42:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x8049f49:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049f50:   c0 f8 06                        	sar al, 6
0x8049f53:   66 98                           	cbw 
0x8049f55:   0f b7 d0                        	movzx edx, ax
0x8049f58:   0f bf 85 e6 fe ff ff            	movsx eax, word ptr [ebp - 0x11a]
0x8049f5f:   39 85 f0 fe ff ff               	cmp dword ptr [ebp - 0x110], eax
0x8049f65:   0f 97 c0                        	seta al
0x8049f68:   0f b6 c0                        	movzx eax, al
0x8049f6b:   0f af c2                        	imul eax, edx
0x8049f6e:   85 c0                           	test eax, eax
0x8049f70:   0f 84 19 04 00 00               	je 0x804a38f <func_1+0xafe>
0x8049f76:   c7 85 dc fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x124], 3
0x8049f80:   c7 45 b4 9b 91 87 19            	mov dword ptr [ebp - 0x4c], 0x1987919b
0x8049f87:   c7 45 b0 fb 89 29 bc            	mov dword ptr [ebp - 0x50], 0xbc2989fb
0x8049f8e:   c7 85 d8 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x128], 8
0x8049f98:   0f b6 85 ef fe ff ff            	movzx eax, byte ptr [ebp - 0x111]
0x8049f9f:   0f b6 c0                        	movzx eax, al
0x8049fa2:   66 05 ff 00                     	add ax, 0xff
0x8049fa6:   0f b7 d0                        	movzx edx, ax
0x8049fa9:   8b 85 dc fe ff ff               	mov eax, dword ptr [ebp - 0x124]
0x8049faf:   0f b7 c0                        	movzx eax, ax
0x8049fb2:   29 c2                           	sub edx, eax
0x8049fb4:   89 d0                           	mov eax, edx
0x8049fb6:   21 85 78 ff ff ff               	and dword ptr [ebp - 0x88], eax
0x8049fbc:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049fbf:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x8049fc2:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049fc5:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049fcb:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049fd1:   05 21 64 b9 0b                  	add eax, 0xbb96421
0x8049fd6:   3d 42 c8 72 17                  	cmp eax, 0x1772c842
0x8049fdb:   76 11                           	jbe 0x8049fee <func_1+0x75d>
0x8049fdd:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x8049fe5:   74 07                           	je 0x8049fee <func_1+0x75d>
0x8049fe7:   b8 01 00 00 00                  	mov eax, 1
0x8049fec:   eb 05                           	jmp 0x8049ff3 <func_1+0x762>
0x8049fee:   b8 00 00 00 00                  	mov eax, 0
0x8049ff3:   09 45 b4                        	or dword ptr [ebp - 0x4c], eax
0x8049ff6:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049ffd:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a000:   83 c8 fb                        	or eax, 0xfffffffb
0x804a003:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a006:   0f 94 c0                        	sete al
0x804a009:   0f b6 c0                        	movzx eax, al
0x804a00c:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a00f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a012:   0f b7 c0                        	movzx eax, ax
0x804a015:   c1 f8 1a                        	sar eax, 0x1a
0x804a018:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a01b:   80 bd ef fe ff ff 00            	cmp byte ptr [ebp - 0x111], 0
0x804a022:   75 06                           	jne 0x804a02a <func_1+0x799>
0x804a024:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a028:   74 07                           	je 0x804a031 <func_1+0x7a0>
0x804a02a:   b8 01 00 00 00                  	mov eax, 1
0x804a02f:   eb 05                           	jmp 0x804a036 <func_1+0x7a5>
0x804a031:   b8 00 00 00 00                  	mov eax, 0
0x804a036:   83 f8 ff                        	cmp eax, -1
0x804a039:   74 07                           	je 0x804a042 <func_1+0x7b1>
0x804a03b:   b8 00 80 00 00                  	mov eax, 0x8000
0x804a040:   eb 05                           	jmp 0x804a047 <func_1+0x7b6>
0x804a042:   b8 00 00 00 00                  	mov eax, 0
0x804a047:   23 45 d4                        	and eax, dword ptr [ebp - 0x2c]
0x804a04a:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a050:   c7 85 78 ff ff ff ff ff 00 00   	mov dword ptr [ebp - 0x88], 0xffff
0x804a05a:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a060:   89 c2                           	mov edx, eax
0x804a062:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a065:   89 c1                           	mov ecx, eax
0x804a067:   89 d0                           	mov eax, edx
0x804a069:   ba 00 00 00 00                  	mov edx, 0
0x804a06e:   66 f7 f1                        	div cx
0x804a071:   89 d0                           	mov eax, edx
0x804a073:   0f b7 c0                        	movzx eax, ax
0x804a076:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a079:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x804a083:   e9 f8 02 00 00                  	jmp 0x804a380 <func_1+0xaef>
0x804a088:   c6 85 6f fe ff ff 4b            	mov byte ptr [ebp - 0x191], 0x4b
0x804a08f:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a097:   0f 95 c0                        	setne al
0x804a09a:   0f b6 c0                        	movzx eax, al
0x804a09d:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a0a0:   0f 9f c0                        	setg al
0x804a0a3:   0f b6 d0                        	movzx edx, al
0x804a0a6:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a0a9:   0f be c0                        	movsx eax, al
0x804a0ac:   0f af c2                        	imul eax, edx
0x804a0af:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x804a0b2:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a0b5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a0b8:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a0bc:   0f 84 93 00 00 00               	je 0x804a155 <func_1+0x8c4>
0x804a0c2:   c7 85 60 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x1a0], 0xffffffff
0x804a0cc:   8b 85 60 fe ff ff               	mov eax, dword ptr [ebp - 0x1a0]
0x804a0d2:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a0d5:   0f be 8d 6f fe ff ff            	movsx ecx, byte ptr [ebp - 0x191]
0x804a0dc:   8b 85 60 fe ff ff               	mov eax, dword ptr [ebp - 0x1a0]
0x804a0e2:   0f be d0                        	movsx edx, al
0x804a0e5:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a0e8:   0f be c0                        	movsx eax, al
0x804a0eb:   29 c2                           	sub edx, eax
0x804a0ed:   89 d0                           	mov eax, edx
0x804a0ef:   39 85 60 fe ff ff               	cmp dword ptr [ebp - 0x1a0], eax
0x804a0f5:   0f 9c c0                        	setl al
0x804a0f8:   0f b6 c0                        	movzx eax, al
0x804a0fb:   8b 95 e8 fe ff ff               	mov edx, dword ptr [ebp - 0x118]
0x804a101:   0f b6 da                        	movzx ebx, dl
0x804a104:   99                              	cdq 
0x804a105:   f7 fb                           	idiv ebx
0x804a107:   0f be 85 6f fe ff ff            	movsx eax, byte ptr [ebp - 0x191]
0x804a10e:   31 d0                           	xor eax, edx
0x804a110:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a113:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a116:   98                              	cwde 
0x804a117:   05 6a 42 00 00                  	add eax, 0x426a
0x804a11c:   89 c3                           	mov ebx, eax
0x804a11e:   ba a5 c6 0c 82                  	mov edx, 0x820cc6a5
0x804a123:   89 d8                           	mov eax, ebx
0x804a125:   f7 e2                           	mul edx
0x804a127:   89 d0                           	mov eax, edx
0x804a129:   c1 e8 1e                        	shr eax, 0x1e
0x804a12c:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a12f:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a132:   69 c0 ed 7e fb 7d               	imul eax, eax, 0x7dfb7eed
0x804a138:   29 c3                           	sub ebx, eax
0x804a13a:   89 d8                           	mov eax, ebx
0x804a13c:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a13f:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a142:   0b 45 dc                        	or eax, dword ptr [ebp - 0x24]
0x804a145:   09 c8                           	or eax, ecx
0x804a147:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a14a:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a14e:   74 70                           	je 0x804a1c0 <func_1+0x92f>
0x804a150:   e9 51 02 00 00                  	jmp 0x804a3a6 <func_1+0xb15>
0x804a155:   c7 85 68 fe ff ff 93 e4 b4 26   	mov dword ptr [ebp - 0x198], 0x26b4e493
0x804a15f:   c7 85 64 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x19c], 0xffffffff
0x804a169:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a16f:   88 85 7f fe ff ff               	mov byte ptr [ebp - 0x181], al
0x804a175:   0f be 85 6f fe ff ff            	movsx eax, byte ptr [ebp - 0x191]
0x804a17c:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a17f:   66 0f be 85 6f fe ff ff         	movsx ax, byte ptr [ebp - 0x191]
0x804a187:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804a18b:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a18f:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a192:   0f 9e c0                        	setle al
0x804a195:   0f b6 c0                        	movzx eax, al
0x804a198:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a19b:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a19f:   0f 85 d3 01 00 00               	jne 0x804a378 <func_1+0xae7>
0x804a1a5:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a1ab:   21 85 64 fe ff ff               	and dword ptr [ebp - 0x19c], eax
0x804a1b1:   b8 00 00 00 00                  	mov eax, 0
0x804a1b6:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a1b9:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a1c0:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a1c8:   74 06                           	je 0x804a1d0 <func_1+0x93f>
0x804a1ca:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a1ce:   75 09                           	jne 0x804a1d9 <func_1+0x948>
0x804a1d0:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x804a1d7:   74 07                           	je 0x804a1e0 <func_1+0x94f>
0x804a1d9:   b8 01 00 00 00                  	mov eax, 1
0x804a1de:   eb 05                           	jmp 0x804a1e5 <func_1+0x954>
0x804a1e0:   b8 00 00 00 00                  	mov eax, 0
0x804a1e5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a1e8:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a1eb:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a1ee:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a1f8:   eb 68                           	jmp 0x804a262 <func_1+0x9d1>
0x804a1fa:   c6 85 57 fe ff ff 00            	mov byte ptr [ebp - 0x1a9], 0
0x804a201:   80 ad 66 ff ff ff 01            	sub byte ptr [ebp - 0x9a], 1
0x804a208:   0f b6 95 66 ff ff ff            	movzx edx, byte ptr [ebp - 0x9a]
0x804a20f:   0f be 85 67 ff ff ff            	movsx eax, byte ptr [ebp - 0x99]
0x804a216:   66 81 bd 76 fe ff ff 91 62      	cmp word ptr [ebp - 0x18a], 0x6291
0x804a21f:   75 07                           	jne 0x804a228 <func_1+0x997>
0x804a221:   b9 05 00 00 00                  	mov ecx, 5
0x804a226:   eb 05                           	jmp 0x804a22d <func_1+0x99c>
0x804a228:   b9 04 00 00 00                  	mov ecx, 4
0x804a22d:   39 c1                           	cmp ecx, eax
0x804a22f:   0f 9c c0                        	setl al
0x804a232:   0f b6 c0                        	movzx eax, al
0x804a235:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x804a238:   39 c2                           	cmp edx, eax
0x804a23a:   76 06                           	jbe 0x804a242 <func_1+0x9b1>
0x804a23c:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a240:   74 07                           	je 0x804a249 <func_1+0x9b8>
0x804a242:   b8 01 00 00 00                  	mov eax, 1
0x804a247:   eb 05                           	jmp 0x804a24e <func_1+0x9bd>
0x804a249:   b8 00 00 00 00                  	mov eax, 0
0x804a24e:   0f bf d0                        	movsx edx, ax
0x804a251:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a254:   98                              	cwde 
0x804a255:   0f af c2                        	imul eax, edx
0x804a258:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a25b:   83 85 7c ff ff ff 05            	add dword ptr [ebp - 0x84], 5
0x804a262:   83 bd 7c ff ff ff 08            	cmp dword ptr [ebp - 0x84], 8
0x804a269:   7f 8f                           	jg 0x804a1fa <func_1+0x969>
0x804a26b:   0f b7 95 2a ff ff ff            	movzx edx, word ptr [ebp - 0xd6]
0x804a272:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a275:   83 c8 0e                        	or eax, 0xe
0x804a278:   3d fe ff 00 00                  	cmp eax, 0xfffe
0x804a27d:   0f 96 c0                        	setbe al
0x804a280:   0f b6 c0                        	movzx eax, al
0x804a283:   39 85 70 fe ff ff               	cmp dword ptr [ebp - 0x190], eax
0x804a289:   0f 9d c0                        	setge al
0x804a28c:   0f b6 c0                        	movzx eax, al
0x804a28f:   66 31 45 da                     	xor word ptr [ebp - 0x26], ax
0x804a293:   b8 01 00 00 00                  	mov eax, 1
0x804a298:   21 d0                           	and eax, edx
0x804a29a:   23 45 b0                        	and eax, dword ptr [ebp - 0x50]
0x804a29d:   85 c0                           	test eax, eax
0x804a29f:   74 16                           	je 0x804a2b7 <func_1+0xa26>
0x804a2a1:   0f be 85 6f fe ff ff            	movsx eax, byte ptr [ebp - 0x191]
0x804a2a8:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a2ab:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a2b2:   e9 c2 00 00 00                  	jmp 0x804a379 <func_1+0xae8>
0x804a2b7:   c6 85 91 fe ff ff 01            	mov byte ptr [ebp - 0x16f], 1
0x804a2be:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a2c4:   98                              	cwde 
0x804a2c5:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a2c8:   0f bf f2                        	movsx esi, dx
0x804a2cb:   99                              	cdq 
0x804a2cc:   f7 fe                           	idiv esi
0x804a2ce:   89 c1                           	mov ecx, eax
0x804a2d0:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a2d6:   89 c2                           	mov edx, eax
0x804a2d8:   66 83 fa ff                     	cmp dx, -1
0x804a2dc:   0f 93 c0                        	setae al
0x804a2df:   0f b6 c0                        	movzx eax, al
0x804a2e2:   f7 d8                           	neg eax
0x804a2e4:   29 c2                           	sub edx, eax
0x804a2e6:   89 d0                           	mov eax, edx
0x804a2e8:   0f b7 c0                        	movzx eax, ax
0x804a2eb:   23 85 f4 fe ff ff               	and eax, dword ptr [ebp - 0x10c]
0x804a2f1:   89 c2                           	mov edx, eax
0x804a2f3:   0f bf 85 74 fe ff ff            	movsx eax, word ptr [ebp - 0x18c]
0x804a2fa:   39 c2                           	cmp edx, eax
0x804a2fc:   0f 9f c0                        	setg al
0x804a2ff:   0f b6 c0                        	movzx eax, al
0x804a302:   09 c8                           	or eax, ecx
0x804a304:   3d 4b ae 00 00                  	cmp eax, 0xae4b
0x804a309:   7f 10                           	jg 0x804a31b <func_1+0xa8a>
0x804a30b:   80 bd 6f fe ff ff 00            	cmp byte ptr [ebp - 0x191], 0
0x804a312:   74 07                           	je 0x804a31b <func_1+0xa8a>
0x804a314:   b8 01 00 00 00                  	mov eax, 1
0x804a319:   eb 05                           	jmp 0x804a320 <func_1+0xa8f>
0x804a31b:   b8 00 00 00 00                  	mov eax, 0
0x804a320:   0f be d0                        	movsx edx, al
0x804a323:   0f b6 85 66 ff ff ff            	movzx eax, byte ptr [ebp - 0x9a]
0x804a32a:   0f be c0                        	movsx eax, al
0x804a32d:   89 c1                           	mov ecx, eax
0x804a32f:   d3 fa                           	sar edx, cl
0x804a331:   0f b6 85 66 ff ff ff            	movzx eax, byte ptr [ebp - 0x9a]
0x804a338:   21 d0                           	and eax, edx
0x804a33a:   89 c2                           	mov edx, eax
0x804a33c:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a340:   21 d0                           	and eax, edx
0x804a342:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a345:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a349:   0f b6 c0                        	movzx eax, al
0x804a34c:   66 21 45 c8                     	and word ptr [ebp - 0x38], ax
0x804a350:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a354:   0f b6 d0                        	movzx edx, al
0x804a357:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x804a35e:   0f b6 c0                        	movzx eax, al
0x804a361:   89 c1                           	mov ecx, eax
0x804a363:   d3 fa                           	sar edx, cl
0x804a365:   89 d0                           	mov eax, edx
0x804a367:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a36a:   0f 97 c0                        	seta al
0x804a36d:   0f b6 c0                        	movzx eax, al
0x804a370:   08 85 91 fe ff ff               	or byte ptr [ebp - 0x16f], al
0x804a376:   eb 01                           	jmp 0x804a379 <func_1+0xae8>
0x804a378:   90                              	nop 
0x804a379:   83 ad 78 ff ff ff 01            	sub dword ptr [ebp - 0x88], 1
0x804a380:   83 bd 78 ff ff ff f8            	cmp dword ptr [ebp - 0x88], -8
0x804a387:   0f 8d fb fc ff ff               	jge 0x804a088 <func_1+0x7f7>
0x804a38d:   eb 17                           	jmp 0x804a3a6 <func_1+0xb15>
0x804a38f:   c7 85 e0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x120], 0xffffffff
0x804a399:   83 85 e0 fe ff ff 01            	add dword ptr [ebp - 0x120], 1
0x804a3a0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a3a3:   09 45 e4                        	or dword ptr [ebp - 0x1c], eax
0x804a3a6:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a3ae:   66 83 85 72 ff ff ff 04         	add word ptr [ebp - 0x8e], 4
0x804a3b6:   66 83 bd 72 ff ff ff 1f         	cmp word ptr [ebp - 0x8e], 0x1f
0x804a3be:   0f 86 75 fb ff ff               	jbe 0x8049f39 <func_1+0x6a8>
0x804a3c4:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a3c8:   83 7d d4 03                     	cmp dword ptr [ebp - 0x2c], 3
0x804a3cc:   0f 8e 69 f6 ff ff               	jle 0x8049a3b <func_1+0x1aa>
0x804a3d2:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a3d8:   3b 45 d0                        	cmp eax, dword ptr [ebp - 0x30]
0x804a3db:   0f 94 c0                        	sete al
0x804a3de:   0f b6 c0                        	movzx eax, al
0x804a3e1:   8b 95 60 ff ff ff               	mov edx, dword ptr [ebp - 0xa0]
0x804a3e7:   0f be ca                        	movsx ecx, dl
0x804a3ea:   99                              	cdq 
0x804a3eb:   f7 f9                           	idiv ecx
0x804a3ed:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a3f4:   39 c2                           	cmp edx, eax
0x804a3f6:   0f 9e c0                        	setle al
0x804a3f9:   0f b6 c0                        	movzx eax, al
0x804a3fc:   66 31 45 da                     	xor word ptr [ebp - 0x26], ax
0x804a400:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a407:   88 85 67 ff ff ff               	mov byte ptr [ebp - 0x99], al
0x804a40d:   0f be 95 67 ff ff ff            	movsx edx, byte ptr [ebp - 0x99]
0x804a414:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a41a:   33 85 20 ff ff ff               	xor eax, dword ptr [ebp - 0xe0]
0x804a420:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a426:   81 bd 20 ff ff ff 46 eb 6f 7c   	cmp dword ptr [ebp - 0xe0], 0x7c6feb46
0x804a430:   0f 96 c0                        	setbe al
0x804a433:   0f b6 c0                        	movzx eax, al
0x804a436:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a43c:   0f 9d c0                        	setge al
0x804a43f:   0f b6 c0                        	movzx eax, al
0x804a442:   21 d0                           	and eax, edx
0x804a444:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a44a:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x804a454:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x804a45e:   c7 85 50 ff ff ff 99 39 b6 63   	mov dword ptr [ebp - 0xb0], 0x63b63999
0x804a468:   c7 85 4c ff ff ff 8d c4 48 63   	mov dword ptr [ebp - 0xb4], 0x6348c48d
0x804a472:   c7 85 58 ff ff ff 8b fd c2 b8   	mov dword ptr [ebp - 0xa8], 0xb8c2fd8b
0x804a47c:   c6 85 4b ff ff ff c1            	mov byte ptr [ebp - 0xb5], 0xc1
0x804a483:   83 bd 20 ff ff ff 01            	cmp dword ptr [ebp - 0xe0], 1
0x804a48a:   0f 96 c0                        	setbe al
0x804a48d:   88 85 67 ff ff ff               	mov byte ptr [ebp - 0x99], al
0x804a493:   80 bd 67 ff ff ff 69            	cmp byte ptr [ebp - 0x99], 0x69
0x804a49a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a49d:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a4a0:   0f 95 c0                        	setne al
0x804a4a3:   0f b6 c0                        	movzx eax, al
0x804a4a6:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a4a9:   0f 97 c0                        	seta al
0x804a4ac:   0f b6 d0                        	movzx edx, al
0x804a4af:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a4b3:   21 d0                           	and eax, edx
0x804a4b5:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a4bb:   0f be 95 67 ff ff ff            	movsx edx, byte ptr [ebp - 0x99]
0x804a4c2:   0f b6 85 66 ff ff ff            	movzx eax, byte ptr [ebp - 0x9a]
0x804a4c9:   39 c2                           	cmp edx, eax
0x804a4cb:   7f 1c                           	jg 0x804a4e9 <func_1+0xc58>
0x804a4cd:   0f b6 95 66 ff ff ff            	movzx edx, byte ptr [ebp - 0x9a]
0x804a4d4:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a4d7:   0f b7 c0                        	movzx eax, ax
0x804a4da:   01 d0                           	add eax, edx
0x804a4dc:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a4e2:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a4e9:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a4ed:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a4f0:   0f 9f c0                        	setg al
0x804a4f3:   0f b6 d0                        	movzx edx, al
0x804a4f6:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a4f9:   0f b7 c0                        	movzx eax, ax
0x804a4fc:   89 c1                           	mov ecx, eax
0x804a4fe:   d3 fa                           	sar edx, cl
0x804a500:   89 d0                           	mov eax, edx
0x804a502:   85 c0                           	test eax, eax
0x804a504:   0f 84 fb 07 00 00               	je 0x804ad05 <func_1+0x1474>
0x804a50a:   c6 85 71 ff ff ff 03            	mov byte ptr [ebp - 0x8f], 3
0x804a511:   c7 85 c0 fe ff ff 1e 05 2b 08   	mov dword ptr [ebp - 0x140], 0x82b051e
0x804a51b:   c7 85 bc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x144], 0
0x804a525:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x804a52f:   c6 85 bb fe ff ff 00            	mov byte ptr [ebp - 0x145], 0
0x804a536:   c7 85 68 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x98], 0xffffffff
0x804a540:   66 c7 85 fc fe ff ff 07 00      	mov word ptr [ebp - 0x104], 7
0x804a549:   c7 85 b4 fe ff ff 40 6f 27 ab   	mov dword ptr [ebp - 0x14c], 0xab276f40
0x804a553:   c7 85 b0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x150], 1
0x804a55d:   c7 85 ac fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x154], 0xfffffff9
0x804a567:   66 c7 85 aa fe ff ff 00 00      	mov word ptr [ebp - 0x156], 0
0x804a570:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x804a57a:   e9 42 06 00 00                  	jmp 0x804abc1 <func_1+0x1330>
0x804a57f:   c7 85 cc fe ff ff 08 0b a7 1b   	mov dword ptr [ebp - 0x134], 0x1ba70b08
0x804a589:   66 c7 85 ca fe ff ff 01 00      	mov word ptr [ebp - 0x136], 1
0x804a592:   c6 85 c9 fe ff ff 00            	mov byte ptr [ebp - 0x137], 0
0x804a599:   66 c7 85 c6 fe ff ff ff ff      	mov word ptr [ebp - 0x13a], 0xffff
0x804a5a2:   c7 85 04 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xfc], 0
0x804a5ac:   c6 85 ff fe ff ff 49            	mov byte ptr [ebp - 0x101], 0x49
0x804a5b3:   c7 85 44 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xbc], 8
0x804a5bd:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a5c1:   74 28                           	je 0x804a5eb <func_1+0xd5a>
0x804a5c3:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a5c6:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x804a5c9:   0f 95 c0                        	setne al
0x804a5cc:   0f b6 c0                        	movzx eax, al
0x804a5cf:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a5d3:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x804a5d7:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804a5da:   89 c2                           	mov edx, eax
0x804a5dc:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x804a5e3:   31 d0                           	xor eax, edx
0x804a5e5:   88 85 71 ff ff ff               	mov byte ptr [ebp - 0x8f], al
0x804a5eb:   b8 00 00 00 00                  	mov eax, 0
0x804a5f0:   3b 85 cc fe ff ff               	cmp eax, dword ptr [ebp - 0x134]
0x804a5f6:   7e 07                           	jle 0x804a5ff <func_1+0xd6e>
0x804a5f8:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a5ff:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x804a609:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a610:   0f 84 53 01 00 00               	je 0x804a769 <func_1+0xed8>
0x804a616:   c6 85 8b fe ff ff 88            	mov byte ptr [ebp - 0x175], 0x88
0x804a61d:   c7 85 84 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x17c], 2
0x804a627:   c7 85 80 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x180], 0xfffffff6
0x804a631:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a638:   0f be 95 d2 fe ff ff            	movsx edx, byte ptr [ebp - 0x12e]
0x804a63f:   0f be 8d d3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12d]
0x804a646:   0f b7 75 8e                     	movzx esi, word ptr [ebp - 0x72]
0x804a64a:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x804a64e:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804a654:   0f be 5d a1                     	movsx ebx, byte ptr [ebp - 0x5f]
0x804a658:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804a65e:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a662:   89 bd 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], edi
0x804a668:   0f bf 5d a2                     	movsx ebx, word ptr [ebp - 0x5e]
0x804a66c:   89 9d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ebx
0x804a672:   0f bf 7d a4                     	movsx edi, word ptr [ebp - 0x5c]
0x804a676:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x804a67c:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a680:   89 9d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ebx
0x804a686:   0f bf 7d a6                     	movsx edi, word ptr [ebp - 0x5a]
0x804a68a:   89 bd 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edi
0x804a690:   0f bf 5d c8                     	movsx ebx, word ptr [ebp - 0x38]
0x804a694:   89 9d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ebx
0x804a69a:   0f b6 bd 66 ff ff ff            	movzx edi, byte ptr [ebp - 0x9a]
0x804a6a1:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804a6a7:   0f be 9d 67 ff ff ff            	movsx ebx, byte ptr [ebp - 0x99]
0x804a6ae:   89 9d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ebx
0x804a6b4:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a6b8:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804a6bc:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x804a6c2:   50                              	push eax
0x804a6c3:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x804a6c9:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804a6cf:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804a6d5:   52                              	push edx
0x804a6d6:   51                              	push ecx
0x804a6d7:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a6dd:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a6e0:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a6e3:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a6e6:   56                              	push esi
0x804a6e7:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a6ea:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a6f0:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a6f3:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a6f6:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a6fc:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804a702:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804a708:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804a70e:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804a714:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a717:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804a71d:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a720:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804a726:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a72c:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804a732:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804a738:   57                              	push edi
0x804a739:   53                              	push ebx
0x804a73a:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a73d:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a740:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a743:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a746:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a749:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a74c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a74f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a752:   e8 cf ee ff ff                  	call 0x8049626 <set_var>
0x804a757:   81 c4 98 00 00 00               	add esp, 0x98
0x804a75d:   0f bf 85 28 ff ff ff            	movsx eax, word ptr [ebp - 0xd8]
0x804a764:   e9 db 06 00 00                  	jmp 0x804ae44 <func_1+0x15b3>
0x804a769:   66 c7 85 42 ff ff ff da a5      	mov word ptr [ebp - 0xbe], 0xa5da
0x804a772:   66 c7 85 40 ff ff ff 01 00      	mov word ptr [ebp - 0xc0], 1
0x804a77b:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a782:   84 c0                           	test al, al
0x804a784:   75 09                           	jne 0x804a78f <func_1+0xefe>
0x804a786:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a78d:   74 07                           	je 0x804a796 <func_1+0xf05>
0x804a78f:   b8 01 00 00 00                  	mov eax, 1
0x804a794:   eb 05                           	jmp 0x804a79b <func_1+0xf0a>
0x804a796:   b8 00 00 00 00                  	mov eax, 0
0x804a79b:   c1 e0 0d                        	shl eax, 0xd
0x804a79e:   89 c2                           	mov edx, eax
0x804a7a0:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x804a7a7:   01 d0                           	add eax, edx
0x804a7a9:   0f bf d0                        	movsx edx, ax
0x804a7ac:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a7b2:   98                              	cwde 
0x804a7b3:   89 c1                           	mov ecx, eax
0x804a7b5:   d3 e2                           	shl edx, cl
0x804a7b7:   89 d0                           	mov eax, edx
0x804a7b9:   89 c1                           	mov ecx, eax
0x804a7bb:   0f b7 85 ca fe ff ff            	movzx eax, word ptr [ebp - 0x136]
0x804a7c2:   89 c2                           	mov edx, eax
0x804a7c4:   0f b6 c1                        	movzx eax, cl
0x804a7c7:   f6 f2                           	div dl
0x804a7c9:   0f b6 d0                        	movzx edx, al
0x804a7cc:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a7d3:   98                              	cwde 
0x804a7d4:   01 c2                           	add edx, eax
0x804a7d6:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a7da:   39 c2                           	cmp edx, eax
0x804a7dc:   0f 95 c0                        	setne al
0x804a7df:   0f b6 c0                        	movzx eax, al
0x804a7e2:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a7e5:   c6 85 bb fe ff ff ab            	mov byte ptr [ebp - 0x145], 0xab
0x804a7ec:   66 83 bd 2a ff ff ff 00         	cmp word ptr [ebp - 0xd6], 0
0x804a7f4:   0f 94 c0                        	sete al
0x804a7f7:   0f b6 c0                        	movzx eax, al
0x804a7fa:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a7fd:   0f 95 c0                        	setne al
0x804a800:   0f b6 c0                        	movzx eax, al
0x804a803:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a807:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x804a80e:   33 85 1c ff ff ff               	xor eax, dword ptr [ebp - 0xe4]
0x804a814:   66 09 45 be                     	or word ptr [ebp - 0x42], ax
0x804a818:   0f be 85 bb fe ff ff            	movsx eax, byte ptr [ebp - 0x145]
0x804a81f:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x804a826:   0f bf 85 c6 fe ff ff            	movsx eax, word ptr [ebp - 0x13a]
0x804a82d:   31 d0                           	xor eax, edx
0x804a82f:   31 85 68 ff ff ff               	xor dword ptr [ebp - 0x98], eax
0x804a835:   c7 85 04 ff ff ff b4 df 9f 21   	mov dword ptr [ebp - 0xfc], 0x219fdfb4
0x804a83f:   66 c7 85 40 ff ff ff b4 df      	mov word ptr [ebp - 0xc0], 0xdfb4
0x804a848:   80 bd c9 fe ff ff 00            	cmp byte ptr [ebp - 0x137], 0
0x804a84f:   74 62                           	je 0x804a8b3 <func_1+0x1022>
0x804a851:   c7 85 00 ff ff ff f4 07 4f e7   	mov dword ptr [ebp - 0x100], 0xe74f07f4
0x804a85b:   66 83 7d c8 00                  	cmp word ptr [ebp - 0x38], 0
0x804a860:   0f 85 6a 03 00 00               	jne 0x804abd0 <func_1+0x133f>
0x804a866:   0f b7 85 c6 fe ff ff            	movzx eax, word ptr [ebp - 0x13a]
0x804a86d:   0f b6 c0                        	movzx eax, al
0x804a870:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a873:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a876:   88 85 ff fe ff ff               	mov byte ptr [ebp - 0x101], al
0x804a87c:   0f be 85 ff fe ff ff            	movsx eax, byte ptr [ebp - 0x101]
0x804a883:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a889:   83 ad 00 ff ff ff 01            	sub dword ptr [ebp - 0x100], 1
0x804a890:   83 bd 20 ff ff ff 00            	cmp dword ptr [ebp - 0xe0], 0
0x804a897:   75 06                           	jne 0x804a89f <func_1+0x100e>
0x804a899:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a89d:   74 07                           	je 0x804a8a6 <func_1+0x1015>
0x804a89f:   b8 01 00 00 00                  	mov eax, 1
0x804a8a4:   eb 05                           	jmp 0x804a8ab <func_1+0x101a>
0x804a8a6:   b8 00 00 00 00                  	mov eax, 0
0x804a8ab:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a8b1:   eb 3b                           	jmp 0x804a8ee <func_1+0x105d>
0x804a8b3:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a8bb:   0f 94 c0                        	sete al
0x804a8be:   0f b6 c0                        	movzx eax, al
0x804a8c1:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804a8c7:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a8cd:   0f be d0                        	movsx edx, al
0x804a8d0:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a8d6:   0f be c0                        	movsx eax, al
0x804a8d9:   89 c1                           	mov ecx, eax
0x804a8db:   d3 fa                           	sar edx, cl
0x804a8dd:   89 d0                           	mov eax, edx
0x804a8df:   83 f8 01                        	cmp eax, 1
0x804a8e2:   0f 9f c0                        	setg al
0x804a8e5:   0f b6 c0                        	movzx eax, al
0x804a8e8:   09 85 04 ff ff ff               	or dword ptr [ebp - 0xfc], eax
0x804a8ee:   83 bd 60 ff ff ff 04            	cmp dword ptr [ebp - 0xa0], 4
0x804a8f5:   0f 95 c0                        	setne al
0x804a8f8:   0f b6 c0                        	movzx eax, al
0x804a8fb:   66 89 85 fc fe ff ff            	mov word ptr [ebp - 0x104], ax
0x804a902:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a906:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x804a910:   8b 75 ac                        	mov esi, dword ptr [ebp - 0x54]
0x804a913:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a919:   99                              	cdq 
0x804a91a:   f7 fe                           	idiv esi
0x804a91c:   85 c0                           	test eax, eax
0x804a91e:   75 07                           	jne 0x804a927 <func_1+0x1096>
0x804a920:   83 bd bc fe ff ff 00            	cmp dword ptr [ebp - 0x144], 0
0x804a927:   66 83 bd c6 fe ff ff 00         	cmp word ptr [ebp - 0x13a], 0
0x804a92f:   0f 84 73 02 00 00               	je 0x804aba8 <func_1+0x1317>
0x804a935:   66 c7 85 a6 fe ff ff 71 5f      	mov word ptr [ebp - 0x15a], 0x5f71
0x804a93e:   c7 85 a0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x160], 0xffffffff
0x804a948:   c7 85 9c fe ff ff 73 ec 4b 8d   	mov dword ptr [ebp - 0x164], 0x8d4bec73
0x804a952:   c6 85 9b fe ff ff 4e            	mov byte ptr [ebp - 0x165], 0x4e
0x804a959:   80 45 c7 01                     	add byte ptr [ebp - 0x39], 1
0x804a95d:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a964:   0f 84 09 01 00 00               	je 0x804aa73 <func_1+0x11e2>
0x804a96a:   c7 85 94 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x16c], 1
0x804a974:   c6 85 93 fe ff ff f7            	mov byte ptr [ebp - 0x16d], 0xf7
0x804a97b:   83 6d 98 01                     	sub dword ptr [ebp - 0x68], 1
0x804a97f:   0f b6 85 9b fe ff ff            	movzx eax, byte ptr [ebp - 0x165]
0x804a986:   0f be c0                        	movsx eax, al
0x804a989:   ba 01 00 00 00                  	mov edx, 1
0x804a98e:   89 c1                           	mov ecx, eax
0x804a990:   d3 e2                           	shl edx, cl
0x804a992:   89 d0                           	mov eax, edx
0x804a994:   0f bf c8                        	movsx ecx, ax
0x804a997:   b8 44 b0 ff ff                  	mov eax, 0xffffb044
0x804a99c:   99                              	cdq 
0x804a99d:   f7 f9                           	idiv ecx
0x804a99f:   89 d0                           	mov eax, edx
0x804a9a1:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a9a4:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a9ab:   74 07                           	je 0x804a9b4 <func_1+0x1123>
0x804a9ad:   b8 01 00 00 00                  	mov eax, 1
0x804a9b2:   eb 05                           	jmp 0x804a9b9 <func_1+0x1128>
0x804a9b4:   b8 00 00 00 00                  	mov eax, 0
0x804a9b9:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a9bd:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a9c1:   66 0d a3 b2                     	or ax, 0xb2a3
0x804a9c5:   0f b7 c0                        	movzx eax, ax
0x804a9c8:   ba 94 ba 00 00                  	mov edx, 0xba94
0x804a9cd:   89 c1                           	mov ecx, eax
0x804a9cf:   d3 e2                           	shl edx, cl
0x804a9d1:   89 d0                           	mov eax, edx
0x804a9d3:   0f b7 c0                        	movzx eax, ax
0x804a9d6:   c1 e0 0a                        	shl eax, 0xa
0x804a9d9:   0b 85 94 fe ff ff               	or eax, dword ptr [ebp - 0x16c]
0x804a9df:   85 c0                           	test eax, eax
0x804a9e1:   74 10                           	je 0x804a9f3 <func_1+0x1162>
0x804a9e3:   80 bd 67 ff ff ff 00            	cmp byte ptr [ebp - 0x99], 0
0x804a9ea:   74 07                           	je 0x804a9f3 <func_1+0x1162>
0x804a9ec:   b8 01 00 00 00                  	mov eax, 1
0x804a9f1:   eb 05                           	jmp 0x804a9f8 <func_1+0x1167>
0x804a9f3:   b8 00 00 00 00                  	mov eax, 0
0x804a9f8:   3d f8 ff 00 00                  	cmp eax, 0xfff8
0x804a9fd:   76 04                           	jbe 0x804aa03 <func_1+0x1172>
0x804a9ff:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x804aa03:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804aa06:   98                              	cwde 
0x804aa07:   c1 e0 0a                        	shl eax, 0xa
0x804aa0a:   0f bf d0                        	movsx edx, ax
0x804aa0d:   0f b6 85 4b ff ff ff            	movzx eax, byte ptr [ebp - 0xb5]
0x804aa14:   89 c1                           	mov ecx, eax
0x804aa16:   d3 e2                           	shl edx, cl
0x804aa18:   89 d0                           	mov eax, edx
0x804aa1a:   85 c0                           	test eax, eax
0x804aa1c:   74 0d                           	je 0x804aa2b <func_1+0x119a>
0x804aa1e:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804aa22:   74 07                           	je 0x804aa2b <func_1+0x119a>
0x804aa24:   b8 01 00 00 00                  	mov eax, 1
0x804aa29:   eb 05                           	jmp 0x804aa30 <func_1+0x119f>
0x804aa2b:   b8 00 00 00 00                  	mov eax, 0
0x804aa30:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804aa36:   73 09                           	jae 0x804aa41 <func_1+0x11b0>
0x804aa38:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804aa3f:   74 07                           	je 0x804aa48 <func_1+0x11b7>
0x804aa41:   b8 01 00 00 00                  	mov eax, 1
0x804aa46:   eb 05                           	jmp 0x804aa4d <func_1+0x11bc>
0x804aa48:   b8 00 00 00 00                  	mov eax, 0
0x804aa4d:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804aa53:   81 bd a0 fe ff ff 34 03 00 00   	cmp dword ptr [ebp - 0x160], 0x334
0x804aa5d:   0f 9e c0                        	setle al
0x804aa60:   0f b6 c0                        	movzx eax, al
0x804aa63:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804aa69:   66 83 6d 8e 01                  	sub word ptr [ebp - 0x72], 1
0x804aa6e:   e9 47 01 00 00                  	jmp 0x804abba <func_1+0x1329>
0x804aa73:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804aa7a:   0f be 95 d2 fe ff ff            	movsx edx, byte ptr [ebp - 0x12e]
0x804aa81:   0f be 8d d3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12d]
0x804aa88:   0f b7 75 8e                     	movzx esi, word ptr [ebp - 0x72]
0x804aa8c:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x804aa90:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804aa96:   0f be 5d a1                     	movsx ebx, byte ptr [ebp - 0x5f]
0x804aa9a:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804aaa0:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804aaa4:   89 bd 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], edi
0x804aaaa:   0f bf 5d a2                     	movsx ebx, word ptr [ebp - 0x5e]
0x804aaae:   89 9d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ebx
0x804aab4:   0f bf 7d a4                     	movsx edi, word ptr [ebp - 0x5c]
0x804aab8:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x804aabe:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804aac2:   89 9d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ebx
0x804aac8:   0f bf 7d a6                     	movsx edi, word ptr [ebp - 0x5a]
0x804aacc:   89 bd 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edi
0x804aad2:   0f bf 5d c8                     	movsx ebx, word ptr [ebp - 0x38]
0x804aad6:   89 9d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ebx
0x804aadc:   0f b6 bd 66 ff ff ff            	movzx edi, byte ptr [ebp - 0x9a]
0x804aae3:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804aae9:   0f be 9d 67 ff ff ff            	movsx ebx, byte ptr [ebp - 0x99]
0x804aaf0:   89 9d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ebx
0x804aaf6:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804aafa:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804aafe:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x804ab04:   50                              	push eax
0x804ab05:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x804ab0b:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804ab11:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804ab17:   52                              	push edx
0x804ab18:   51                              	push ecx
0x804ab19:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804ab1f:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ab22:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ab25:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ab28:   56                              	push esi
0x804ab29:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804ab2c:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ab32:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804ab35:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804ab38:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804ab3e:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804ab44:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804ab4a:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804ab50:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804ab56:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ab59:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804ab5f:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804ab62:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804ab68:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804ab6e:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804ab74:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804ab7a:   57                              	push edi
0x804ab7b:   53                              	push ebx
0x804ab7c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ab7f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ab82:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab85:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ab88:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ab8b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ab8e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ab91:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ab94:   e8 8d ea ff ff                  	call 0x8049626 <set_var>
0x804ab99:   81 c4 98 00 00 00               	add esp, 0x98
0x804ab9f:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x804aba3:   e9 9c 02 00 00                  	jmp 0x804ae44 <func_1+0x15b3>
0x804aba8:   66 c7 85 a8 fe ff ff 00 00      	mov word ptr [ebp - 0x158], 0
0x804abb1:   66 c7 85 a8 fe ff ff 01 00      	mov word ptr [ebp - 0x158], 1
0x804abba:   83 85 60 ff ff ff 01            	add dword ptr [ebp - 0xa0], 1
0x804abc1:   83 bd 60 ff ff ff 38            	cmp dword ptr [ebp - 0xa0], 0x38
0x804abc8:   0f 87 b1 f9 ff ff               	ja 0x804a57f <func_1+0xcee>
0x804abce:   eb 01                           	jmp 0x804abd1 <func_1+0x1340>
0x804abd0:   90                              	nop 
0x804abd1:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804abd8:   0f be 95 d2 fe ff ff            	movsx edx, byte ptr [ebp - 0x12e]
0x804abdf:   0f be 8d d3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12d]
0x804abe6:   0f b7 75 8e                     	movzx esi, word ptr [ebp - 0x72]
0x804abea:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x804abee:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804abf4:   0f be 5d a1                     	movsx ebx, byte ptr [ebp - 0x5f]
0x804abf8:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804abfe:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804ac02:   89 bd 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], edi
0x804ac08:   0f bf 5d a2                     	movsx ebx, word ptr [ebp - 0x5e]
0x804ac0c:   89 9d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ebx
0x804ac12:   0f bf 7d a4                     	movsx edi, word ptr [ebp - 0x5c]
0x804ac16:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x804ac1c:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804ac20:   89 9d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ebx
0x804ac26:   0f bf 7d a6                     	movsx edi, word ptr [ebp - 0x5a]
0x804ac2a:   89 bd 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edi
0x804ac30:   0f bf 5d c8                     	movsx ebx, word ptr [ebp - 0x38]
0x804ac34:   89 9d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ebx
0x804ac3a:   0f b6 bd 66 ff ff ff            	movzx edi, byte ptr [ebp - 0x9a]
0x804ac41:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804ac47:   0f be 9d 67 ff ff ff            	movsx ebx, byte ptr [ebp - 0x99]
0x804ac4e:   89 9d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ebx
0x804ac54:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804ac58:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804ac5c:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x804ac62:   50                              	push eax
0x804ac63:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x804ac69:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804ac6f:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804ac75:   52                              	push edx
0x804ac76:   51                              	push ecx
0x804ac77:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804ac7d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ac80:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ac83:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ac86:   56                              	push esi
0x804ac87:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804ac8a:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ac90:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804ac93:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804ac96:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804ac9c:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804aca2:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804aca8:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804acae:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804acb4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804acb7:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804acbd:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804acc0:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804acc6:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804accc:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804acd2:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804acd8:   57                              	push edi
0x804acd9:   53                              	push ebx
0x804acda:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804acdd:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ace0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ace3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ace6:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ace9:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804acec:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804acef:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804acf2:   e8 2f e9 ff ff                  	call 0x8049626 <set_var>
0x804acf7:   81 c4 98 00 00 00               	add esp, 0x98
0x804acfd:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804ad00:   e9 3f 01 00 00                  	jmp 0x804ae44 <func_1+0x15b3>
0x804ad05:   c7 85 58 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa8], 0xffffffff
0x804ad0f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804ad12:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804ad15:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804ad1c:   0f be 95 d2 fe ff ff            	movsx edx, byte ptr [ebp - 0x12e]
0x804ad23:   0f be 8d d3 fe ff ff            	movsx ecx, byte ptr [ebp - 0x12d]
0x804ad2a:   0f b7 75 8e                     	movzx esi, word ptr [ebp - 0x72]
0x804ad2e:   0f bf 7d 96                     	movsx edi, word ptr [ebp - 0x6a]
0x804ad32:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804ad38:   0f be 5d a1                     	movsx ebx, byte ptr [ebp - 0x5f]
0x804ad3c:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804ad42:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804ad46:   89 bd 48 fe ff ff               	mov dword ptr [ebp - 0x1b8], edi
0x804ad4c:   0f bf 5d a2                     	movsx ebx, word ptr [ebp - 0x5e]
0x804ad50:   89 9d 44 fe ff ff               	mov dword ptr [ebp - 0x1bc], ebx
0x804ad56:   0f bf 7d a4                     	movsx edi, word ptr [ebp - 0x5c]
0x804ad5a:   89 bd 40 fe ff ff               	mov dword ptr [ebp - 0x1c0], edi
0x804ad60:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804ad64:   89 9d 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], ebx
0x804ad6a:   0f bf 7d a6                     	movsx edi, word ptr [ebp - 0x5a]
0x804ad6e:   89 bd 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], edi
0x804ad74:   0f bf 5d c8                     	movsx ebx, word ptr [ebp - 0x38]
0x804ad78:   89 9d 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], ebx
0x804ad7e:   0f b6 bd 66 ff ff ff            	movzx edi, byte ptr [ebp - 0x9a]
0x804ad85:   89 bd 30 fe ff ff               	mov dword ptr [ebp - 0x1d0], edi
0x804ad8b:   0f be 9d 67 ff ff ff            	movsx ebx, byte ptr [ebp - 0x99]
0x804ad92:   89 9d 2c fe ff ff               	mov dword ptr [ebp - 0x1d4], ebx
0x804ad98:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804ad9c:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804ada0:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x804ada6:   50                              	push eax
0x804ada7:   ff b5 34 ff ff ff               	push dword ptr [ebp - 0xcc]
0x804adad:   ff b5 38 ff ff ff               	push dword ptr [ebp - 0xc8]
0x804adb3:   ff b5 3c ff ff ff               	push dword ptr [ebp - 0xc4]
0x804adb9:   52                              	push edx
0x804adba:   51                              	push ecx
0x804adbb:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804adc1:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804adc4:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804adc7:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804adca:   56                              	push esi
0x804adcb:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804adce:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804add4:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804add7:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804adda:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804ade0:   ff b5 48 fe ff ff               	push dword ptr [ebp - 0x1b8]
0x804ade6:   ff b5 44 fe ff ff               	push dword ptr [ebp - 0x1bc]
0x804adec:   ff b5 40 fe ff ff               	push dword ptr [ebp - 0x1c0]
0x804adf2:   ff b5 3c fe ff ff               	push dword ptr [ebp - 0x1c4]
0x804adf8:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804adfb:   ff b5 38 fe ff ff               	push dword ptr [ebp - 0x1c8]
0x804ae01:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804ae04:   ff b5 34 fe ff ff               	push dword ptr [ebp - 0x1cc]
0x804ae0a:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804ae10:   ff b5 30 fe ff ff               	push dword ptr [ebp - 0x1d0]
0x804ae16:   ff b5 2c fe ff ff               	push dword ptr [ebp - 0x1d4]
0x804ae1c:   57                              	push edi
0x804ae1d:   53                              	push ebx
0x804ae1e:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ae21:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ae24:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ae27:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ae2a:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ae2d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ae30:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ae33:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ae36:   e8 eb e7 ff ff                  	call 0x8049626 <set_var>
0x804ae3b:   81 c4 98 00 00 00               	add esp, 0x98
0x804ae41:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804ae44:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ae47:   5b                              	pop ebx
0x804ae48:   5e                              	pop esi
0x804ae49:   5f                              	pop edi
0x804ae4a:   5d                              	pop ebp
0x804ae4b:   c3                              	ret 
; function: main at 0x804ae4c -- 0x804b340
0x804ae4c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ae50:   83 e4 f0                        	and esp, 0xfffffff0
0x804ae53:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ae56:   55                              	push ebp
0x804ae57:   89 e5                           	mov ebp, esp
0x804ae59:   53                              	push ebx
0x804ae5a:   51                              	push ecx
0x804ae5b:   83 ec 10                        	sub esp, 0x10
0x804ae5e:   e8 2d d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae63:   81 c3 9d 31 00 00               	add ebx, 0x319d
0x804ae69:   89 c8                           	mov eax, ecx
0x804ae6b:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ae72:   83 38 02                        	cmp dword ptr [eax], 2
0x804ae75:   75 26                           	jne 0x804ae9d <main+0x51>
0x804ae77:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ae7a:   83 c0 04                        	add eax, 4
0x804ae7d:   8b 00                           	mov eax, dword ptr [eax]
0x804ae7f:   83 ec 08                        	sub esp, 8
0x804ae82:   8d 93 28 d4 ff ff               	lea edx, [ebx - 0x2bd8]
0x804ae88:   52                              	push edx
0x804ae89:   50                              	push eax
0x804ae8a:   e8 71 d4 ff ff                  	call 0x8048300 <strcmp>
0x804ae8f:   83 c4 10                        	add esp, 0x10
0x804ae92:   85 c0                           	test eax, eax
0x804ae94:   75 07                           	jne 0x804ae9d <main+0x51>
0x804ae96:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ae9d:   e8 b4 d5 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aea2:   e8 c4 e5 ff ff                  	call 0x804946b <crc32_gentab>
0x804aea7:   e8 e5 e9 ff ff                  	call 0x8049891 <func_1>
0x804aeac:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aeb2:   89 c2                           	mov edx, eax
0x804aeb4:   83 ec 04                        	sub esp, 4
0x804aeb7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeba:   8d 83 2a d4 ff ff               	lea eax, [ebx - 0x2bd6]
0x804aec0:   50                              	push eax
0x804aec1:   52                              	push edx
0x804aec2:   e8 b0 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec7:   83 c4 10                        	add esp, 0x10
0x804aeca:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aed0:   89 c2                           	mov edx, eax
0x804aed2:   83 ec 04                        	sub esp, 4
0x804aed5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed8:   8d 83 2e d4 ff ff               	lea eax, [ebx - 0x2bd2]
0x804aede:   50                              	push eax
0x804aedf:   52                              	push edx
0x804aee0:   e8 92 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee5:   83 c4 10                        	add esp, 0x10
0x804aee8:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804aeee:   83 ec 04                        	sub esp, 4
0x804aef1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef4:   8d 93 32 d4 ff ff               	lea edx, [ebx - 0x2bce]
0x804aefa:   52                              	push edx
0x804aefb:   50                              	push eax
0x804aefc:   e8 76 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af01:   83 c4 10                        	add esp, 0x10
0x804af04:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804af0a:   83 ec 04                        	sub esp, 4
0x804af0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af10:   8d 93 37 d4 ff ff               	lea edx, [ebx - 0x2bc9]
0x804af16:   52                              	push edx
0x804af17:   50                              	push eax
0x804af18:   e8 5a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1d:   83 c4 10                        	add esp, 0x10
0x804af20:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804af26:   89 c2                           	mov edx, eax
0x804af28:   83 ec 04                        	sub esp, 4
0x804af2b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2e:   8d 83 3c d4 ff ff               	lea eax, [ebx - 0x2bc4]
0x804af34:   50                              	push eax
0x804af35:   52                              	push edx
0x804af36:   e8 3c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af3b:   83 c4 10                        	add esp, 0x10
0x804af3e:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804af44:   89 c2                           	mov edx, eax
0x804af46:   83 ec 04                        	sub esp, 4
0x804af49:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4c:   8d 83 41 d4 ff ff               	lea eax, [ebx - 0x2bbf]
0x804af52:   50                              	push eax
0x804af53:   52                              	push edx
0x804af54:   e8 1e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af59:   83 c4 10                        	add esp, 0x10
0x804af5c:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804af62:   83 ec 04                        	sub esp, 4
0x804af65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af68:   8d 93 46 d4 ff ff               	lea edx, [ebx - 0x2bba]
0x804af6e:   52                              	push edx
0x804af6f:   50                              	push eax
0x804af70:   e8 02 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af75:   83 c4 10                        	add esp, 0x10
0x804af78:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804af7e:   83 ec 04                        	sub esp, 4
0x804af81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af84:   8d 93 4c d4 ff ff               	lea edx, [ebx - 0x2bb4]
0x804af8a:   52                              	push edx
0x804af8b:   50                              	push eax
0x804af8c:   e8 e6 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af91:   83 c4 10                        	add esp, 0x10
0x804af94:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804af9b:   98                              	cwde 
0x804af9c:   83 ec 04                        	sub esp, 4
0x804af9f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa2:   8d 93 52 d4 ff ff               	lea edx, [ebx - 0x2bae]
0x804afa8:   52                              	push edx
0x804afa9:   50                              	push eax
0x804afaa:   e8 c8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afaf:   83 c4 10                        	add esp, 0x10
0x804afb2:   0f b6 83 42 00 00 00            	movzx eax, byte ptr [ebx + 0x42]
0x804afb9:   0f b6 c0                        	movzx eax, al
0x804afbc:   83 ec 04                        	sub esp, 4
0x804afbf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc2:   8d 93 58 d4 ff ff               	lea edx, [ebx - 0x2ba8]
0x804afc8:   52                              	push edx
0x804afc9:   50                              	push eax
0x804afca:   e8 a8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afcf:   83 c4 10                        	add esp, 0x10
0x804afd2:   0f b6 83 43 00 00 00            	movzx eax, byte ptr [ebx + 0x43]
0x804afd9:   0f be c0                        	movsx eax, al
0x804afdc:   83 ec 04                        	sub esp, 4
0x804afdf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe2:   8d 93 5e d4 ff ff               	lea edx, [ebx - 0x2ba2]
0x804afe8:   52                              	push edx
0x804afe9:   50                              	push eax
0x804afea:   e8 88 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afef:   83 c4 10                        	add esp, 0x10
0x804aff2:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804aff9:   0f b6 c0                        	movzx eax, al
0x804affc:   83 ec 04                        	sub esp, 4
0x804afff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b002:   8d 93 64 d4 ff ff               	lea edx, [ebx - 0x2b9c]
0x804b008:   52                              	push edx
0x804b009:   50                              	push eax
0x804b00a:   e8 68 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b00f:   83 c4 10                        	add esp, 0x10
0x804b012:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b018:   83 ec 04                        	sub esp, 4
0x804b01b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b01e:   8d 93 6a d4 ff ff               	lea edx, [ebx - 0x2b96]
0x804b024:   52                              	push edx
0x804b025:   50                              	push eax
0x804b026:   e8 4c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b02b:   83 c4 10                        	add esp, 0x10
0x804b02e:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804b035:   98                              	cwde 
0x804b036:   83 ec 04                        	sub esp, 4
0x804b039:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b03c:   8d 93 70 d4 ff ff               	lea edx, [ebx - 0x2b90]
0x804b042:   52                              	push edx
0x804b043:   50                              	push eax
0x804b044:   e8 2e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b049:   83 c4 10                        	add esp, 0x10
0x804b04c:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b052:   89 c2                           	mov edx, eax
0x804b054:   83 ec 04                        	sub esp, 4
0x804b057:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05a:   8d 83 76 d4 ff ff               	lea eax, [ebx - 0x2b8a]
0x804b060:   50                              	push eax
0x804b061:   52                              	push edx
0x804b062:   e8 10 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b067:   83 c4 10                        	add esp, 0x10
0x804b06a:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804b071:   98                              	cwde 
0x804b072:   83 ec 04                        	sub esp, 4
0x804b075:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b078:   8d 93 7c d4 ff ff               	lea edx, [ebx - 0x2b84]
0x804b07e:   52                              	push edx
0x804b07f:   50                              	push eax
0x804b080:   e8 f2 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b085:   83 c4 10                        	add esp, 0x10
0x804b088:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804b08e:   83 ec 04                        	sub esp, 4
0x804b091:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b094:   8d 93 82 d4 ff ff               	lea edx, [ebx - 0x2b7e]
0x804b09a:   52                              	push edx
0x804b09b:   50                              	push eax
0x804b09c:   e8 d6 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a1:   83 c4 10                        	add esp, 0x10
0x804b0a4:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804b0ab:   0f b7 c0                        	movzx eax, ax
0x804b0ae:   83 ec 04                        	sub esp, 4
0x804b0b1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0b4:   8d 93 88 d4 ff ff               	lea edx, [ebx - 0x2b78]
0x804b0ba:   52                              	push edx
0x804b0bb:   50                              	push eax
0x804b0bc:   e8 b6 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0c1:   83 c4 10                        	add esp, 0x10
0x804b0c4:   0f b7 83 5e 00 00 00            	movzx eax, word ptr [ebx + 0x5e]
0x804b0cb:   98                              	cwde 
0x804b0cc:   83 ec 04                        	sub esp, 4
0x804b0cf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0d2:   8d 93 8e d4 ff ff               	lea edx, [ebx - 0x2b72]
0x804b0d8:   52                              	push edx
0x804b0d9:   50                              	push eax
0x804b0da:   e8 98 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0df:   83 c4 10                        	add esp, 0x10
0x804b0e2:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804b0e9:   98                              	cwde 
0x804b0ea:   83 ec 04                        	sub esp, 4
0x804b0ed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0f0:   8d 93 94 d4 ff ff               	lea edx, [ebx - 0x2b6c]
0x804b0f6:   52                              	push edx
0x804b0f7:   50                              	push eax
0x804b0f8:   e8 7a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0fd:   83 c4 10                        	add esp, 0x10
0x804b100:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804b107:   0f b6 c0                        	movzx eax, al
0x804b10a:   83 ec 04                        	sub esp, 4
0x804b10d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b110:   8d 93 9a d4 ff ff               	lea edx, [ebx - 0x2b66]
0x804b116:   52                              	push edx
0x804b117:   50                              	push eax
0x804b118:   e8 5a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b11d:   83 c4 10                        	add esp, 0x10
0x804b120:   0f b6 83 63 00 00 00            	movzx eax, byte ptr [ebx + 0x63]
0x804b127:   0f be c0                        	movsx eax, al
0x804b12a:   83 ec 04                        	sub esp, 4
0x804b12d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b130:   8d 93 a0 d4 ff ff               	lea edx, [ebx - 0x2b60]
0x804b136:   52                              	push edx
0x804b137:   50                              	push eax
0x804b138:   e8 3a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b13d:   83 c4 10                        	add esp, 0x10
0x804b140:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b146:   89 c2                           	mov edx, eax
0x804b148:   83 ec 04                        	sub esp, 4
0x804b14b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b14e:   8d 83 a6 d4 ff ff               	lea eax, [ebx - 0x2b5a]
0x804b154:   50                              	push eax
0x804b155:   52                              	push edx
0x804b156:   e8 1c e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b15b:   83 c4 10                        	add esp, 0x10
0x804b15e:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b164:   83 ec 04                        	sub esp, 4
0x804b167:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b16a:   8d 93 ac d4 ff ff               	lea edx, [ebx - 0x2b54]
0x804b170:   52                              	push edx
0x804b171:   50                              	push eax
0x804b172:   e8 00 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b177:   83 c4 10                        	add esp, 0x10
0x804b17a:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804b181:   98                              	cwde 
0x804b182:   83 ec 04                        	sub esp, 4
0x804b185:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b188:   8d 93 b2 d4 ff ff               	lea edx, [ebx - 0x2b4e]
0x804b18e:   52                              	push edx
0x804b18f:   50                              	push eax
0x804b190:   e8 e2 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b195:   83 c4 10                        	add esp, 0x10
0x804b198:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b19e:   89 c2                           	mov edx, eax
0x804b1a0:   83 ec 04                        	sub esp, 4
0x804b1a3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1a6:   8d 83 b8 d4 ff ff               	lea eax, [ebx - 0x2b48]
0x804b1ac:   50                              	push eax
0x804b1ad:   52                              	push edx
0x804b1ae:   e8 c4 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1b3:   83 c4 10                        	add esp, 0x10
0x804b1b6:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804b1bd:   0f b7 c0                        	movzx eax, ax
0x804b1c0:   83 ec 04                        	sub esp, 4
0x804b1c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1c6:   8d 93 be d4 ff ff               	lea edx, [ebx - 0x2b42]
0x804b1cc:   52                              	push edx
0x804b1cd:   50                              	push eax
0x804b1ce:   e8 a4 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1d3:   83 c4 10                        	add esp, 0x10
0x804b1d6:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b1dc:   83 ec 04                        	sub esp, 4
0x804b1df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1e2:   8d 93 c4 d4 ff ff               	lea edx, [ebx - 0x2b3c]
0x804b1e8:   52                              	push edx
0x804b1e9:   50                              	push eax
0x804b1ea:   e8 88 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1ef:   83 c4 10                        	add esp, 0x10
0x804b1f2:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b1f8:   89 c2                           	mov edx, eax
0x804b1fa:   83 ec 04                        	sub esp, 4
0x804b1fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b200:   8d 83 ca d4 ff ff               	lea eax, [ebx - 0x2b36]
0x804b206:   50                              	push eax
0x804b207:   52                              	push edx
0x804b208:   e8 6a e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b20d:   83 c4 10                        	add esp, 0x10
0x804b210:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804b216:   83 ec 04                        	sub esp, 4
0x804b219:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b21c:   8d 93 d0 d4 ff ff               	lea edx, [ebx - 0x2b30]
0x804b222:   52                              	push edx
0x804b223:   50                              	push eax
0x804b224:   e8 4e e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b229:   83 c4 10                        	add esp, 0x10
0x804b22c:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804b232:   83 ec 04                        	sub esp, 4
0x804b235:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b238:   8d 93 d6 d4 ff ff               	lea edx, [ebx - 0x2b2a]
0x804b23e:   52                              	push edx
0x804b23f:   50                              	push eax
0x804b240:   e8 32 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b245:   83 c4 10                        	add esp, 0x10
0x804b248:   0f b6 83 84 00 00 00            	movzx eax, byte ptr [ebx + 0x84]
0x804b24f:   0f be c0                        	movsx eax, al
0x804b252:   83 ec 04                        	sub esp, 4
0x804b255:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b258:   8d 93 dc d4 ff ff               	lea edx, [ebx - 0x2b24]
0x804b25e:   52                              	push edx
0x804b25f:   50                              	push eax
0x804b260:   e8 12 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b265:   83 c4 10                        	add esp, 0x10
0x804b268:   0f b6 83 85 00 00 00            	movzx eax, byte ptr [ebx + 0x85]
0x804b26f:   0f be c0                        	movsx eax, al
0x804b272:   83 ec 04                        	sub esp, 4
0x804b275:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b278:   8d 93 e2 d4 ff ff               	lea edx, [ebx - 0x2b1e]
0x804b27e:   52                              	push edx
0x804b27f:   50                              	push eax
0x804b280:   e8 f2 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b285:   83 c4 10                        	add esp, 0x10
0x804b288:   8b 83 cc 04 00 00               	mov eax, dword ptr [ebx + 0x4cc]
0x804b28e:   83 ec 04                        	sub esp, 4
0x804b291:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b294:   8d 93 e8 d4 ff ff               	lea edx, [ebx - 0x2b18]
0x804b29a:   52                              	push edx
0x804b29b:   50                              	push eax
0x804b29c:   e8 d6 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2a1:   83 c4 10                        	add esp, 0x10
0x804b2a4:   8b 83 88 00 00 00               	mov eax, dword ptr [ebx + 0x88]
0x804b2aa:   83 ec 04                        	sub esp, 4
0x804b2ad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2b0:   8d 93 ee d4 ff ff               	lea edx, [ebx - 0x2b12]
0x804b2b6:   52                              	push edx
0x804b2b7:   50                              	push eax
0x804b2b8:   e8 ba e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2bd:   83 c4 10                        	add esp, 0x10
0x804b2c0:   8b 83 8c 00 00 00               	mov eax, dword ptr [ebx + 0x8c]
0x804b2c6:   83 ec 04                        	sub esp, 4
0x804b2c9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2cc:   8d 93 f4 d4 ff ff               	lea edx, [ebx - 0x2b0c]
0x804b2d2:   52                              	push edx
0x804b2d3:   50                              	push eax
0x804b2d4:   e8 9e e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2d9:   83 c4 10                        	add esp, 0x10
0x804b2dc:   0f b6 83 90 00 00 00            	movzx eax, byte ptr [ebx + 0x90]
0x804b2e3:   0f b6 c0                        	movzx eax, al
0x804b2e6:   83 ec 04                        	sub esp, 4
0x804b2e9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2ec:   8d 93 fa d4 ff ff               	lea edx, [ebx - 0x2b06]
0x804b2f2:   52                              	push edx
0x804b2f3:   50                              	push eax
0x804b2f4:   e8 7e e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2f9:   83 c4 10                        	add esp, 0x10
0x804b2fc:   8b 83 94 00 00 00               	mov eax, dword ptr [ebx + 0x94]
0x804b302:   89 c2                           	mov edx, eax
0x804b304:   83 ec 04                        	sub esp, 4
0x804b307:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b30a:   8d 83 00 d5 ff ff               	lea eax, [ebx - 0x2b00]
0x804b310:   50                              	push eax
0x804b311:   52                              	push edx
0x804b312:   e8 60 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b317:   83 c4 10                        	add esp, 0x10
0x804b31a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b320:   f7 d0                           	not eax
0x804b322:   83 ec 08                        	sub esp, 8
0x804b325:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b328:   50                              	push eax
0x804b329:   e8 38 d1 ff ff                  	call 0x8048466 <platform_main_end>
0x804b32e:   83 c4 10                        	add esp, 0x10
0x804b331:   b8 00 00 00 00                  	mov eax, 0
0x804b336:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b339:   59                              	pop ecx
0x804b33a:   5b                              	pop ebx
0x804b33b:   5d                              	pop ebp
0x804b33c:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b33f:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b340 -- 0x804b344
0x804b340:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b343:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b344 -- 0x804b348
0x804b344:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b347:   c3                              	ret 
; data inside code section at 0x804b348 -- 0x804b350
0x804b348:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804b350 -- 0x804b3ad
0x804b350:   55                              	push ebp
0x804b351:   57                              	push edi
0x804b352:   56                              	push esi
0x804b353:   53                              	push ebx
0x804b354:   e8 37 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b359:   81 c3 a7 2c 00 00               	add ebx, 0x2ca7
0x804b35f:   83 ec 0c                        	sub esp, 0xc
0x804b362:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b366:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b36c:   e8 5b cf ff ff                  	call 0x80482cc <_init>
0x804b371:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b377:   29 c6                           	sub esi, eax
0x804b379:   c1 fe 02                        	sar esi, 2
0x804b37c:   85 f6                           	test esi, esi
0x804b37e:   74 25                           	je 0x804b3a5 <__libc_csu_init+0x55>
0x804b380:   31 ff                           	xor edi, edi
0x804b382:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b388:   83 ec 04                        	sub esp, 4
0x804b38b:   55                              	push ebp
0x804b38c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b390:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b394:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b39b:   83 c7 01                        	add edi, 1
0x804b39e:   83 c4 10                        	add esp, 0x10
0x804b3a1:   39 fe                           	cmp esi, edi
0x804b3a3:   75 e3                           	jne 0x804b388 <__libc_csu_init+0x38>
0x804b3a5:   83 c4 0c                        	add esp, 0xc
0x804b3a8:   5b                              	pop ebx
0x804b3a9:   5e                              	pop esi
0x804b3aa:   5f                              	pop edi
0x804b3ab:   5d                              	pop ebp
0x804b3ac:   c3                              	ret 
; data inside code section at 0x804b3ad -- 0x804b3b0
0x804b3ad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b3b0 -- 0x804b3b2
0x804b3b0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b3b4 -- 0x804b3c8
0x804b3b4:   53                              	push ebx
0x804b3b5:   83 ec 08                        	sub esp, 8
0x804b3b8:   e8 d3 cf ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b3bd:   81 c3 43 2c 00 00               	add ebx, 0x2c43
0x804b3c3:   83 c4 08                        	add esp, 8
0x804b3c6:   5b                              	pop ebx
0x804b3c7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc b3 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b3c8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b3d8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b3e8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b3f8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b408:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b418:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b428:   31 00 67 5f 32 00 67 5f  33 00 67 5f 32 34 00 67   |1.g_2.g_3.g_24.g|
0x804b438:   5f 37 30 00 67 5f 37 37  00 67 5f 38 36 00 67 5f   |_70.g_77.g_86.g_|
0x804b448:   31 30 31 00 67 5f 31 34  33 00 67 5f 31 37 34 00   |101.g_143.g_174.|
0x804b458:   67 5f 31 37 38 00 67 5f  31 38 35 00 67 5f 31 38   |g_178.g_185.g_18|
0x804b468:   36 00 67 5f 32 31 31 00  67 5f 32 31 32 00 67 5f   |6.g_211.g_212.g_|
0x804b478:   32 31 34 00 67 5f 33 30  39 00 67 5f 33 35 33 00   |214.g_309.g_353.|
0x804b488:   67 5f 33 35 36 00 67 5f  33 38 38 00 67 5f 33 39   |g_356.g_388.g_39|
0x804b498:   30 00 67 5f 33 39 33 00  67 5f 34 30 31 00 67 5f   |0.g_393.g_401.g_|
0x804b4a8:   34 30 34 00 67 5f 34 30  35 00 67 5f 34 33 30 00   |404.g_405.g_430.|
0x804b4b8:   67 5f 34 33 31 00 67 5f  34 33 32 00 67 5f 34 34   |g_431.g_432.g_44|
0x804b4c8:   39 00 67 5f 35 32 32 00  67 5f 35 32 33 00 67 5f   |9.g_522.g_523.g_|
0x804b4d8:   35 35 34 00 67 5f 36 30  36 00 67 5f 36 32 35 00   |554.g_606.g_625.|
0x804b4e8:   67 5f 36 32 36 00 67 5f  36 33 30 00 67 5f 36 34   |g_626.g_630.g_64|
0x804b4f8:   33 00 67 5f 36 39 30 00  67 5f 37 33 36 00 00 00   |3.g_690.g_736...|
0x804b508:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b518:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b528:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b538:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b548:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b558:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b568:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b570:   01 1b 03 3b b8 02 00 00  56 00 00 00 80 cd ff ff   |...;....V.......|
0x804b580:   e8 02 00 00 c0 cd ff ff  0c 03 00 00 10 ce ff ff   |................|
0x804b590:   d4 02 00 00 e6 ce ff ff  20 03 00 00 f6 ce ff ff   |........ .......|
0x804b5a0:   40 03 00 00 24 cf ff ff  64 03 00 00 42 cf ff ff   |@...$...d...B...|
0x804b5b0:   84 03 00 00 6a cf ff ff  a4 03 00 00 94 cf ff ff   |....j...........|
0x804b5c0:   c4 03 00 00 bd cf ff ff  e4 03 00 00 00 d0 ff ff   |................|
0x804b5d0:   04 04 00 00 41 d0 ff ff  24 04 00 00 99 d0 ff ff   |....A...$.......|
0x804b5e0:   48 04 00 00 eb d0 ff ff  6c 04 00 00 28 d1 ff ff   |H.......l...(...|
0x804b5f0:   8c 04 00 00 5f d1 ff ff  ac 04 00 00 7e d1 ff ff   |...._.......~...|
0x804b600:   cc 04 00 00 a8 d1 ff ff  ec 04 00 00 d4 d1 ff ff   |................|
0x804b610:   0c 05 00 00 ff d1 ff ff  2c 05 00 00 48 d2 ff ff   |........,...H...|
0x804b620:   4c 05 00 00 8f d2 ff ff  6c 05 00 00 e9 d2 ff ff   |L.......l.......|
0x804b630:   90 05 00 00 3d d3 ff ff  b4 05 00 00 7c d3 ff ff   |....=.......|...|
0x804b640:   d4 05 00 00 b5 d3 ff ff  f4 05 00 00 d7 d3 ff ff   |................|
0x804b650:   14 06 00 00 25 d4 ff ff  34 06 00 00 61 d4 ff ff   |....%...4...a...|
0x804b660:   54 06 00 00 ea d4 ff ff  74 06 00 00 1c d5 ff ff   |T.......t.......|
0x804b670:   94 06 00 00 4c d5 ff ff  b4 06 00 00 91 d5 ff ff   |....L...........|
0x804b680:   d4 06 00 00 d0 d5 ff ff  f4 06 00 00 02 d6 ff ff   |................|
0x804b690:   14 07 00 00 2e d6 ff ff  34 07 00 00 4c d6 ff ff   |........4...L...|
0x804b6a0:   54 07 00 00 74 d6 ff ff  74 07 00 00 99 d6 ff ff   |T...t...t.......|
0x804b6b0:   94 07 00 00 be d6 ff ff  b4 07 00 00 f5 d6 ff ff   |................|
0x804b6c0:   d4 07 00 00 29 d7 ff ff  f4 07 00 00 7b d7 ff ff   |....).......{...|
0x804b6d0:   18 08 00 00 c7 d7 ff ff  3c 08 00 00 fe d7 ff ff   |........<.......|
0x804b6e0:   5c 08 00 00 2f d8 ff ff  7c 08 00 00 4e d8 ff ff   |\.../...|...N...|
0x804b6f0:   9c 08 00 00 78 d8 ff ff  bc 08 00 00 a0 d8 ff ff   |....x...........|
0x804b700:   dc 08 00 00 c9 d8 ff ff  fc 08 00 00 05 d9 ff ff   |................|
0x804b710:   1c 09 00 00 3f d9 ff ff  3c 09 00 00 92 d9 ff ff   |....?...<.......|
0x804b720:   60 09 00 00 df d9 ff ff  84 09 00 00 17 da ff ff   |`...............|
0x804b730:   a4 09 00 00 49 da ff ff  c4 09 00 00 5d da ff ff   |....I.......]...|
0x804b740:   e4 09 00 00 74 da ff ff  04 0a 00 00 89 da ff ff   |....t...........|
0x804b750:   24 0a 00 00 9f da ff ff  44 0a 00 00 c6 da ff ff   |$.......D.......|
0x804b760:   64 0a 00 00 eb da ff ff  84 0a 00 00 2a db ff ff   |d...........*...|
0x804b770:   a4 0a 00 00 63 db ff ff  c4 0a 00 00 8f db ff ff   |....c...........|
0x804b780:   e4 0a 00 00 b5 db ff ff  04 0b 00 00 f7 db ff ff   |................|
0x804b790:   24 0b 00 00 39 dc ff ff  44 0b 00 00 7b dc ff ff   |$...9...D...{...|
0x804b7a0:   64 0b 00 00 f0 dc ff ff  84 0b 00 00 4d dd ff ff   |d...........M...|
0x804b7b0:   a4 0b 00 00 aa dd ff ff  c4 0b 00 00 07 de ff ff   |................|
0x804b7c0:   e4 0b 00 00 97 de ff ff  04 0c 00 00 fb de ff ff   |................|
0x804b7d0:   24 0c 00 00 6b df ff ff  44 0c 00 00 b2 df ff ff   |$...k...D.......|
0x804b7e0:   68 0c 00 00 07 e0 ff ff  88 0c 00 00 4e e0 ff ff   |h...........N...|
0x804b7f0:   ac 0c 00 00 b6 e0 ff ff  d0 0c 00 00 21 e3 ff ff   |............!...|
0x804b800:   00 0d 00 00 dc f8 ff ff  30 0d 00 00 d0 fd ff ff   |........0.......|
0x804b810:   68 0d 00 00 d4 fd ff ff  7c 0d 00 00 e0 fd ff ff   |h.......|.......|
0x804b820:   90 0d 00 00 40 fe ff ff  dc 0d 00 00 14            |....@........   |
; section: .eh_frame
0x804b82c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b83c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b84c:   34 cb ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |4........... ...|
0x804b85c:   30 00 00 00 90 ca ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b86c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b87c:   10 00 00 00 54 00 00 00  ac ca ff ff 08 00 00 00   |....T...........|
0x804b88c:   00 00 00 00 1c 00 00 00  68 00 00 00 be cb ff ff   |........h.......|
0x804b89c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b8ac:   04 04 00 00 20 00 00 00  88 00 00 00 ae cb ff ff   |.... ...........|
0x804b8bc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b8cc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b8dc:   b8 cb ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8ec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b8fc:   b6 cb ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b90c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b91c:   be cb ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b92c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b93c:   c8 cb ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b94c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b95c:   d1 cb ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b96c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b97c:   f4 cb ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b98c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b99c:   15 cc ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b9ac:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b9bc:   90 01 00 00 49 cc ff ff  52 00 00 00 00 41 0e 08   |....I...R....A..|
0x804b9cc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b9dc:   1c 00 00 00 b4 01 00 00  77 cc ff ff 3d 00 00 00   |........w...=...|
0x804b9ec:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b9fc:   1c 00 00 00 d4 01 00 00  94 cc ff ff 37 00 00 00   |............7...|
0x804ba0c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba1c:   1c 00 00 00 f4 01 00 00  ab cc ff ff 1f 00 00 00   |................|
0x804ba2c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba3c:   1c 00 00 00 14 02 00 00  aa cc ff ff 2a 00 00 00   |............*...|
0x804ba4c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ba5c:   1c 00 00 00 34 02 00 00  b4 cc ff ff 2c 00 00 00   |....4.......,...|
0x804ba6c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804ba7c:   1c 00 00 00 54 02 00 00  c0 cc ff ff 2b 00 00 00   |....T.......+...|
0x804ba8c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804ba9c:   1c 00 00 00 74 02 00 00  cb cc ff ff 49 00 00 00   |....t.......I...|
0x804baac:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804babc:   1c 00 00 00 94 02 00 00  f4 cc ff ff 47 00 00 00   |............G...|
0x804bacc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804badc:   20 00 00 00 b4 02 00 00  1b cd ff ff 5a 00 00 00   | ...........Z...|
0x804baec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804bafc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 51 cd ff ff   |.... .......Q...|
0x804bb0c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804bb1c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804bb2c:   81 cd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bb3c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804bb4c:   a0 cd ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bb5c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804bb6c:   b9 cd ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804bb7c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804bb8c:   bb cd ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804bb9c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804bbac:   e9 cd ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804bbbc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bbcc:   05 ce ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbdc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bbec:   6e ce ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |n...2....A....B.|
0x804bbfc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bc0c:   80 ce ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804bc1c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bc2c:   90 ce ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804bc3c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bc4c:   b5 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bc5c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bc6c:   d4 ce ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bc7c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bc8c:   e6 ce ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bc9c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bcac:   f2 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcbc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bccc:   f0 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bcdc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bcec:   f8 ce ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bcfc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bd0c:   fd ce ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bd1c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bd2c:   02 cf ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bd3c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bd4c:   19 cf ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bd5c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bd6c:   2d cf ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |-...R....A....B.|
0x804bd7c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bd8c:   60 05 00 00 5b cf ff ff  4c 00 00 00 00 41 0e 08   |`...[...L....A..|
0x804bd9c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bdac:   1c 00 00 00 84 05 00 00  83 cf ff ff 37 00 00 00   |............7...|
0x804bdbc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bdcc:   1c 00 00 00 a4 05 00 00  9a cf ff ff 31 00 00 00   |............1...|
0x804bddc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bdec:   1c 00 00 00 c4 05 00 00  ab cf ff ff 1f 00 00 00   |................|
0x804bdfc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804be0c:   1c 00 00 00 e4 05 00 00  aa cf ff ff 2a 00 00 00   |............*...|
0x804be1c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804be2c:   1c 00 00 00 04 06 00 00  b4 cf ff ff 28 00 00 00   |............(...|
0x804be3c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804be4c:   1c 00 00 00 24 06 00 00  bc cf ff ff 29 00 00 00   |....$.......)...|
0x804be5c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804be6c:   1c 00 00 00 44 06 00 00  c5 cf ff ff 3c 00 00 00   |....D.......<...|
0x804be7c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804be8c:   1c 00 00 00 64 06 00 00  e1 cf ff ff 3a 00 00 00   |....d.......:...|
0x804be9c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804beac:   20 00 00 00 84 06 00 00  fb cf ff ff 53 00 00 00   | ...........S...|
0x804bebc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804becc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 2a d0 ff ff   |.... .......*...|
0x804bedc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804beec:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804befc:   53 d0 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |S...8....A....B.|
0x804bf0c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bf1c:   6b d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |k...2....A....B.|
0x804bf2c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bf3c:   7d d0 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804bf4c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bf5c:   71 d0 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |q........A....B.|
0x804bf6c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bf7c:   68 d0 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804bf8c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bf9c:   5d d0 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804bfac:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bfbc:   53 d0 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |S...'....A....B.|
0x804bfcc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bfdc:   5a d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |Z...%....A....B.|
0x804bfec:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bffc:   5f d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |_...?....A....B.|
0x804c00c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c01c:   7e d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |~...9....A....B.|
0x804c02c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c03c:   97 d0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804c04c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c05c:   a3 d0 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804c06c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c07c:   a9 d0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c08c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c09c:   cb d0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c0ac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c0bc:   ed d0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c0cc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c0dc:   0f d1 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c0ec:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c0fc:   64 d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |d...]....A....B.|
0x804c10c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c11c:   a1 d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c12c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c13c:   de d1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c14c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c15c:   1b d2 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c16c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c17c:   8b d2 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c18c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c19c:   cf d2 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804c1ac:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c1bc:   1f d3 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c1cc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c1dc:   b0 09 00 00 42 d3 ff ff  55 00 00 00 00 41 0e 08   |....B...U....A..|
0x804c1ec:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c1fc:   d0 09 00 00 77 d3 ff ff  47 00 00 00 00 41 0e 08   |....w...G....A..|
0x804c20c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c21c:   20 00 00 00 f4 09 00 00  9a d3 ff ff 68 00 00 00   | ...........h...|
0x804c22c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c23c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 de d3 ff ff   |....,...........|
0x804c24c:   6b 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |k....A....B..F..|
0x804c25c:   86 04 83 05 03 5e 02 c3  41 c6 41 c7 41 c5 0c 04   |.....^..A.A.A...|
0x804c26c:   04 00 00 00 2c 00 00 00  48 0a 00 00 19 d6 ff ff   |....,...H.......|
0x804c27c:   bb 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c28c:   86 04 83 05 03 ab 15 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c29c:   04 00 00 00 34 00 00 00  78 0a 00 00 a4 eb ff ff   |....4...x.......|
0x804c2ac:   f4 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c2bc:   0f 03 75 78 06 10 03 02  75 7c 03 df 04 c1 0c 01   |..ux....u|......|
0x804c2cc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c2dc:   b0 0a 00 00 60 f0 ff ff  04 00 00 00 00 00 00 00   |....`...........|
0x804c2ec:   10 00 00 00 c4 0a 00 00  50 f0 ff ff 04 00 00 00   |........P.......|
0x804c2fc:   00 00 00 00 48 00 00 00  d8 0a 00 00 48 f0 ff ff   |....H.......H...|
0x804c30c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c31c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c32c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c33c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c34c:   10 00 00 00 24 0b 00 00  5c f0 ff ff 02 00 00 00   |....$...\.......|
0x804c35c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 b4 b3 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 9f f9 fd 69   |...............i|
0x804e028:   07 00 00 00 33 d9 01 e4  09 00 00 00 6c dd 5f 2c   |....3.......l._,|
0x804e038:   71 75 b5 2e fa ff ff ff  30 b2 b4 fa fe 00 00 00   |qu......0.......|
0x804e048:   ff ff ff ff 06 00 00 00  01 00 00 00 fb ff 00 00   |................|
0x804e058:   fb ff ff ff 47 b8 08 00  3c 20 63 01 87 ec b6 43   |....G...< c....C|
0x804e068:   29 de d8 5a ce d8 00 00  f8 ff ff ff 01 00 00 00   |)..Z............|
0x804e078:   fc ff ff ff 1f b8 89 bd  ba d1 05 b6 ff 31 00 00   |.............1..|
0x804e088:   fa ff ff ff 48 4e fe b9  06 00 00 00 ff ff ff ff   |....HN..........|
0x804e098:   ??                                                 |?               |
