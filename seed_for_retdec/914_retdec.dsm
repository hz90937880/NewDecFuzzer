;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:55:17
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 d0 d2 ff ff               	lea eax, [ebx - 0x2d30]
0x804835c:   50                              	push eax
0x804835d:   8d 83 70 d2 ff ff               	lea eax, [ebx - 0x2d90]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 9b ae 04 08               	mov eax, 0x804ae9b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 07 2e 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 f3 2d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 f0 d2 ff ff               	lea edx, [eax - 0x2d10]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 c6 2d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 a8 2d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 80 2d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 56 2d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 2d 2d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 ea 2c 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 a8 2c 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 50 2c 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 ff 2b 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 c2 2b 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 8b 2b 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 6c 2b 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 42 2b 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 16 2b 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 eb 2a 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 a2 2a 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 5a 2a 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 00 2a 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 ad 29 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 6e 29 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 38 29 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 16 29 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 c8 28 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 8c 28 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 03 28 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 d1 27 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 a1 27 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 5c 27 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 1d 27 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 eb 26 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 bc 26 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 9e 26 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 76 26 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 51 26 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 2c 26 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 f5 25 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 c0 25 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 6e 25 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 23 25 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ec 24 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 bb 24 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 9c 24 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 72 24 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 4a 24 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 21 24 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 e5 23 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 aa 23 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 57 23 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 0b 23 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 d3 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 a4 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 90 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 79 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 64 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 4e 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 27 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 02 22 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 c3 21 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 8a 21 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 5e 21 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 38 21 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 f0 d3 ff ff               	fld dword ptr [eax - 0x2c10]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 f0 d3 ff ff               	fld dword ptr [eax - 0x2c10]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 f4 d3 ff ff               	fld dword ptr [eax - 0x2c0c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 f6 20 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 f0 d3 ff ff               	fld dword ptr [eax - 0x2c10]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 f0 d3 ff ff               	fld dword ptr [eax - 0x2c10]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 f4 d3 ff ff               	fld dword ptr [eax - 0x2c0c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 b4 20 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 f8 d3 ff ff               	fld dword ptr [eax - 0x2c08]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 fc d3 ff ff               	fld dword ptr [eax - 0x2c04]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 00 d4 ff ff               	fld dword ptr [eax - 0x2c00]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 72 20 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 04 d4 ff ff               	fld dword ptr [eax - 0x2bfc]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 08 d4 ff ff               	fld dword ptr [eax - 0x2bf8]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 0c d4 ff ff               	fld dword ptr [eax - 0x2bf4]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 fa 1f 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 10 d4 ff ff               	fld qword ptr [eax - 0x2bf0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 10 d4 ff ff               	fld qword ptr [eax - 0x2bf0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 18 d4 ff ff               	fld qword ptr [eax - 0x2be8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 9d 1f 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 10 d4 ff ff               	fld qword ptr [eax - 0x2bf0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 10 d4 ff ff               	fld qword ptr [eax - 0x2bf0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 18 d4 ff ff               	fld qword ptr [eax - 0x2be8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 40 1f 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 20 d4 ff ff               	fld qword ptr [eax - 0x2be0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 28 d4 ff ff               	fld qword ptr [eax - 0x2bd8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 30 d4 ff ff               	fld qword ptr [eax - 0x2bd0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 e3 1e 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 38 d4 ff ff               	fld qword ptr [eax - 0x2bc8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 40 d4 ff ff               	fld qword ptr [eax - 0x2bc0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 48 d4 ff ff               	fld qword ptr [eax - 0x2bb8]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 53 1e 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 50 d4 ff ff               	fld dword ptr [eax - 0x2bb0]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 54 d4 ff ff               	fld dword ptr [eax - 0x2bac]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 ef 1d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 7e 1d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 3b 1d 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 00 d3 ff ff               	lea eax, [ebx - 0x2d00]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 24 d3 ff ff               	lea eax, [ebx - 0x2cdc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 33 1c 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 49 00 00                  	add eax, 0x49ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 48 d3 ff ff               	lea edx, [eax - 0x2cb8]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x80497fb
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 44                        	sub esp, 0x44
0x804965d:   e8 03 1c 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x8049662:   05 9e 49 00 00                  	add eax, 0x499e
0x8049667:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804966a:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x804966d:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049670:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x8049673:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049676:   89 75 c4                        	mov dword ptr [ebp - 0x3c], esi
0x8049679:   8b 75 44                        	mov esi, dword ptr [ebp + 0x44]
0x804967c:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x804967f:   8b 75 48                        	mov esi, dword ptr [ebp + 0x48]
0x8049682:   89 75 bc                        	mov dword ptr [ebp - 0x44], esi
0x8049685:   8b 75 54                        	mov esi, dword ptr [ebp + 0x54]
0x8049688:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804968b:   8b 75 64                        	mov esi, dword ptr [ebp + 0x64]
0x804968e:   89 75 b4                        	mov dword ptr [ebp - 0x4c], esi
0x8049691:   8b 75 68                        	mov esi, dword ptr [ebp + 0x68]
0x8049694:   89 75 b0                        	mov dword ptr [ebp - 0x50], esi
0x8049697:   8b 75 70                        	mov esi, dword ptr [ebp + 0x70]
0x804969a:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x804969d:   89 ca                           	mov edx, ecx
0x804969f:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x80496a3:   89 da                           	mov edx, ebx
0x80496a5:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x80496a8:   89 fa                           	mov edx, edi
0x80496aa:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x80496ad:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x80496b1:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x80496b5:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x80496b9:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x80496bc:   0f b7 55 bc                     	movzx edx, word ptr [ebp - 0x44]
0x80496c0:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x80496c4:   0f b7 55 b8                     	movzx edx, word ptr [ebp - 0x48]
0x80496c8:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x80496cc:   0f b6 55 b4                     	movzx edx, byte ptr [ebp - 0x4c]
0x80496d0:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496d3:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x80496d7:   66 89 55 cc                     	mov word ptr [ebp - 0x34], dx
0x80496db:   89 f2                           	mov edx, esi
0x80496dd:   66 89 55 c8                     	mov word ptr [ebp - 0x38], dx
0x80496e1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496e4:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x80496ea:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496ed:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496f3:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496f6:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496fc:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x8049700:   88 90 2c 00 00 00               	mov byte ptr [eax + 0x2c], dl
0x8049706:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x8049709:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x804970f:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x8049713:   66 89 90 a8 04 00 00            	mov word ptr [eax + 0x4a8], dx
0x804971a:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x804971e:   88 90 34 00 00 00               	mov byte ptr [eax + 0x34], dl
0x8049724:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x8049727:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x804972d:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x8049730:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x8049736:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x804973a:   88 90 40 00 00 00               	mov byte ptr [eax + 0x40], dl
0x8049740:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x8049743:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x8049749:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x804974c:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x8049752:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049756:   66 89 90 4c 00 00 00            	mov word ptr [eax + 0x4c], dx
0x804975d:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x8049760:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x8049766:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x8049769:   89 90 ac 04 00 00               	mov dword ptr [eax + 0x4ac], edx
0x804976f:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x8049773:   88 90 54 00 00 00               	mov byte ptr [eax + 0x54], dl
0x8049779:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804977d:   66 89 90 b0 04 00 00            	mov word ptr [eax + 0x4b0], dx
0x8049784:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049787:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x804978d:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x8049790:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049796:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x804979a:   66 89 90 60 00 00 00            	mov word ptr [eax + 0x60], dx
0x80497a1:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x80497a4:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x80497aa:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x80497ad:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x80497b3:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x80497b6:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x80497bc:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x80497c0:   88 90 70 00 00 00               	mov byte ptr [eax + 0x70], dl
0x80497c6:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x80497ca:   66 89 90 72 00 00 00            	mov word ptr [eax + 0x72], dx
0x80497d1:   8b 55 6c                        	mov edx, dword ptr [ebp + 0x6c]
0x80497d4:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x80497da:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x80497de:   66 89 90 78 00 00 00            	mov word ptr [eax + 0x78], dx
0x80497e5:   8b 55 74                        	mov edx, dword ptr [ebp + 0x74]
0x80497e8:   89 90 7c 00 00 00               	mov dword ptr [eax + 0x7c], edx
0x80497ee:   b8 00 00 00 00                  	mov eax, 0
0x80497f3:   83 c4 44                        	add esp, 0x44
0x80497f6:   5b                              	pop ebx
0x80497f7:   5e                              	pop esi
0x80497f8:   5f                              	pop edi
0x80497f9:   5d                              	pop ebp
0x80497fa:   c3                              	ret 
; function: func_1 at 0x80497fb -- 0x804ae9b
0x80497fb:   55                              	push ebp
0x80497fc:   89 e5                           	mov ebp, esp
0x80497fe:   57                              	push edi
0x80497ff:   56                              	push esi
0x8049800:   53                              	push ebx
0x8049801:   81 ec a4 01 00 00               	sub esp, 0x1a4
0x8049807:   e8 59 1a 00 00                  	call 0x804b265 <__x86.get_pc_thunk.ax>
0x804980c:   05 f4 47 00 00                  	add eax, 0x47f4
0x8049811:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049818:   c7 45 f0 05 00 00 00            	mov dword ptr [ebp - 0x10], 5
0x804981f:   c7 45 ec f8 ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffff8
0x8049826:   c6 45 8f 03                     	mov byte ptr [ebp - 0x71], 3
0x804982a:   c7 45 e8 9e f5 47 31            	mov dword ptr [ebp - 0x18], 0x3147f59e
0x8049831:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x8049837:   c6 45 e5 ff                     	mov byte ptr [ebp - 0x1b], 0xff
0x804983b:   c7 45 e0 e0 ab f5 64            	mov dword ptr [ebp - 0x20], 0x64f5abe0
0x8049842:   c7 45 dc bd b9 10 0b            	mov dword ptr [ebp - 0x24], 0xb10b9bd
0x8049849:   c6 45 db ff                     	mov byte ptr [ebp - 0x25], 0xff
0x804984d:   c7 45 d4 28 c3 65 ca            	mov dword ptr [ebp - 0x2c], 0xca65c328
0x8049854:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804985b:   66 c7 45 ce fd ff               	mov word ptr [ebp - 0x32], 0xfffd
0x8049861:   c7 45 88 fb 55 9f 59            	mov dword ptr [ebp - 0x78], 0x599f55fb
0x8049868:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804986f:   c6 45 c7 01                     	mov byte ptr [ebp - 0x39], 1
0x8049873:   66 c7 45 c4 00 00               	mov word ptr [ebp - 0x3c], 0
0x8049879:   c7 45 c0 fd ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffffd
0x8049880:   c7 45 84 01 00 00 00            	mov dword ptr [ebp - 0x7c], 1
0x8049887:   66 c7 45 be f4 c8               	mov word ptr [ebp - 0x42], 0xc8f4
0x804988d:   c7 45 b8 30 f7 5f b6            	mov dword ptr [ebp - 0x48], 0xb65ff730
0x8049894:   c7 45 b4 21 02 6a 29            	mov dword ptr [ebp - 0x4c], 0x296a0221
0x804989b:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x80498a2:   c6 85 7f ff ff ff 06            	mov byte ptr [ebp - 0x81], 6
0x80498a9:   66 c7 85 7c ff ff ff e6 b3      	mov word ptr [ebp - 0x84], 0xb3e6
0x80498b2:   c7 45 b0 80 d4 8a 5e            	mov dword ptr [ebp - 0x50], 0x5e8ad480
0x80498b9:   66 c7 85 7a ff ff ff d5 cc      	mov word ptr [ebp - 0x86], 0xccd5
0x80498c2:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x80498cc:   c6 85 73 ff ff ff 62            	mov byte ptr [ebp - 0x8d], 0x62
0x80498d3:   c7 45 ac de 6b d0 ef            	mov dword ptr [ebp - 0x54], 0xefd06bde
0x80498da:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x80498e4:   c6 85 6b ff ff ff 55            	mov byte ptr [ebp - 0x95], 0x55
0x80498eb:   c7 85 64 ff ff ff 06 0a 47 55   	mov dword ptr [ebp - 0x9c], 0x55470a06
0x80498f5:   c7 45 a8 76 d7 b0 0c            	mov dword ptr [ebp - 0x58], 0xcb0d776
0x80498fc:   c6 85 63 ff ff ff ff            	mov byte ptr [ebp - 0x9d], 0xff
0x8049903:   66 c7 85 60 ff ff ff 9f 84      	mov word ptr [ebp - 0xa0], 0x849f
0x804990c:   c6 85 5f ff ff ff fb            	mov byte ptr [ebp - 0xa1], 0xfb
0x8049913:   c7 85 58 ff ff ff 97 bf 0d 6b   	mov dword ptr [ebp - 0xa8], 0x6b0dbf97
0x804991d:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049921:   0f 84 a4 07 00 00               	je 0x804a0cb <func_1+0x8d0>
0x8049927:   66 c7 45 a6 05 00               	mov word ptr [ebp - 0x5a], 5
0x804992d:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049934:   c7 85 a8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x158], 0
0x804993e:   66 c7 85 a6 fe ff ff 00 00      	mov word ptr [ebp - 0x15a], 0
0x8049947:   c6 85 a5 fe ff ff fa            	mov byte ptr [ebp - 0x15b], 0xfa
0x804994e:   c7 45 ec f7 ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffff7
0x8049955:   eb 73                           	jmp 0x80499ca <func_1+0x1cf>
0x8049957:   66 c7 85 70 fe ff ff e6 e3      	mov word ptr [ebp - 0x190], 0xe3e6
0x8049960:   c7 85 6c fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x194], 0xfffffff6
0x804996a:   66 83 6d a6 01                  	sub word ptr [ebp - 0x5a], 1
0x804996f:   0f b7 85 70 fe ff ff            	movzx eax, word ptr [ebp - 0x190]
0x8049976:   0f b6 d0                        	movzx edx, al
0x8049979:   80 7d 8f 01                     	cmp byte ptr [ebp - 0x71], 1
0x804997d:   75 0a                           	jne 0x8049989 <func_1+0x18e>
0x804997f:   66 83 bd 70 fe ff ff 00         	cmp word ptr [ebp - 0x190], 0
0x8049987:   74 07                           	je 0x8049990 <func_1+0x195>
0x8049989:   b8 01 00 00 00                  	mov eax, 1
0x804998e:   eb 05                           	jmp 0x8049995 <func_1+0x19a>
0x8049990:   b8 00 00 00 00                  	mov eax, 0
0x8049995:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x8049998:   75 06                           	jne 0x80499a0 <func_1+0x1a5>
0x804999a:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804999e:   74 07                           	je 0x80499a7 <func_1+0x1ac>
0x80499a0:   b8 01 00 00 00                  	mov eax, 1
0x80499a5:   eb 05                           	jmp 0x80499ac <func_1+0x1b1>
0x80499a7:   b8 00 00 00 00                  	mov eax, 0
0x80499ac:   0f b7 d8                        	movzx ebx, ax
0x80499af:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x80499b3:   89 c1                           	mov ecx, eax
0x80499b5:   d3 e3                           	shl ebx, cl
0x80499b7:   89 d8                           	mov eax, ebx
0x80499b9:   0f b6 c0                        	movzx eax, al
0x80499bc:   29 c2                           	sub edx, eax
0x80499be:   89 d0                           	mov eax, edx
0x80499c0:   09 85 6c fe ff ff               	or dword ptr [ebp - 0x194], eax
0x80499c6:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x80499ca:   83 7d ec 0e                     	cmp dword ptr [ebp - 0x14], 0xe
0x80499ce:   7f 87                           	jg 0x8049957 <func_1+0x15c>
0x80499d0:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499d3:   0f be c0                        	movsx eax, al
0x80499d6:   01 c0                           	add eax, eax
0x80499d8:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x80499db:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x80499e2:   31 45 ac                        	xor dword ptr [ebp - 0x54], eax
0x80499e5:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x80499e8:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x80499eb:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x80499ef:   74 1a                           	je 0x8049a0b <func_1+0x210>
0x80499f1:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x80499f5:   74 0f                           	je 0x8049a06 <func_1+0x20b>
0x80499f7:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x80499fe:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049a01:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049a05:   90                              	nop 
0x8049a06:   66 83 7d a6 00                  	cmp word ptr [ebp - 0x5a], 0
0x8049a0b:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049a0f:   74 3a                           	je 0x8049a4b <func_1+0x250>
0x8049a11:   66 c7 85 72 fe ff ff 8c 6c      	mov word ptr [ebp - 0x18e], 0x6c8c
0x8049a1a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049a1d:   89 c1                           	mov ecx, eax
0x8049a1f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a22:   89 c2                           	mov edx, eax
0x8049a24:   0f b6 c1                        	movzx eax, cl
0x8049a27:   f6 f2                           	div dl
0x8049a29:   0f b6 c8                        	movzx ecx, al
0x8049a2c:   b8 15 8b 00 00                  	mov eax, 0x8b15
0x8049a31:   99                              	cdq 
0x8049a32:   f7 f9                           	idiv ecx
0x8049a34:   0f bf 85 72 fe ff ff            	movsx eax, word ptr [ebp - 0x18e]
0x8049a3b:   39 c2                           	cmp edx, eax
0x8049a3d:   0f 9d c0                        	setge al
0x8049a40:   0f b6 c0                        	movzx eax, al
0x8049a43:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049a46:   e9 47 06 00 00                  	jmp 0x804a092 <func_1+0x897>
0x8049a4b:   c6 85 a4 fe ff ff a5            	mov byte ptr [ebp - 0x15c], 0xa5
0x8049a52:   c7 85 a0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x160], 1
0x8049a5c:   c7 85 9c fe ff ff b6 79 b8 20   	mov dword ptr [ebp - 0x164], 0x20b879b6
0x8049a66:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a69:   0f b6 c0                        	movzx eax, al
0x8049a6c:   01 c0                           	add eax, eax
0x8049a6e:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a71:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a75:   0f 84 17 01 00 00               	je 0x8049b92 <func_1+0x397>
0x8049a7b:   90                              	nop 
0x8049a7c:   eb 01                           	jmp 0x8049a7f <func_1+0x284>
0x8049a7e:   90                              	nop 
0x8049a7f:   c6 85 a4 fe ff ff 02            	mov byte ptr [ebp - 0x15c], 2
0x8049a86:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a89:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049a8c:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049a8f:   3c a8                           	cmp al, 0xa8
0x8049a91:   77 04                           	ja 0x8049a97 <func_1+0x29c>
0x8049a93:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a97:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a9a:   0f b7 c0                        	movzx eax, ax
0x8049a9d:   ba f8 ff 00 00                  	mov edx, 0xfff8
0x8049aa2:   89 c1                           	mov ecx, eax
0x8049aa4:   d3 fa                           	sar edx, cl
0x8049aa6:   89 d0                           	mov eax, edx
0x8049aa8:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049aae:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049ab1:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049ab7:   0f 97 c0                        	seta al
0x8049aba:   f7 d0                           	not eax
0x8049abc:   0f be d0                        	movsx edx, al
0x8049abf:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x8049ac6:   89 c1                           	mov ecx, eax
0x8049ac8:   d3 fa                           	sar edx, cl
0x8049aca:   89 d0                           	mov eax, edx
0x8049acc:   21 85 9c fe ff ff               	and dword ptr [ebp - 0x164], eax
0x8049ad2:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x8049ad9:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x8049ae0:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x8049ae7:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x8049aeb:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x8049aef:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049af5:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x8049af9:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x8049aff:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x8049b03:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x8049b09:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x8049b0d:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x8049b13:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x8049b17:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x8049b1d:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x8049b21:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x8049b25:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049b2b:   50                              	push eax
0x8049b2c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049b2f:   52                              	push edx
0x8049b30:   51                              	push ecx
0x8049b31:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049b34:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049b37:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049b3a:   57                              	push edi
0x8049b3b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049b3e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049b41:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x8049b47:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x8049b4d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049b50:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049b53:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x8049b59:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049b5c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049b5f:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x8049b65:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049b68:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049b6b:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x8049b71:   56                              	push esi
0x8049b72:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049b75:   53                              	push ebx
0x8049b76:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049b79:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049b7c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049b7f:   e8 d0 fa ff ff                  	call 0x8049654 <set_var>
0x8049b84:   83 c4 70                        	add esp, 0x70
0x8049b87:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x8049b8d:   e9 01 13 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x8049b92:   66 c7 85 9a fe ff ff 9e 36      	mov word ptr [ebp - 0x166], 0x369e
0x8049b9b:   c6 85 99 fe ff ff 03            	mov byte ptr [ebp - 0x167], 3
0x8049ba2:   c6 85 98 fe ff ff 9f            	mov byte ptr [ebp - 0x168], 0x9f
0x8049ba9:   c7 85 94 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x16c], 0xfffffff6
0x8049bb3:   66 83 bd 9a fe ff ff 00         	cmp word ptr [ebp - 0x166], 0
0x8049bbb:   0f 84 fd 02 00 00               	je 0x8049ebe <func_1+0x6c3>
0x8049bc1:   66 c7 85 8a fe ff ff ae 0d      	mov word ptr [ebp - 0x176], 0xdae
0x8049bca:   c7 85 84 fe ff ff 47 e9 5c 7f   	mov dword ptr [ebp - 0x17c], 0x7f5ce947
0x8049bd4:   c7 85 80 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x180], 0
0x8049bde:   66 c7 85 7e fe ff ff 01 00      	mov word ptr [ebp - 0x182], 1
0x8049be7:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049bed:   f7 d0                           	not eax
0x8049bef:   33 45 e8                        	xor eax, dword ptr [ebp - 0x18]
0x8049bf2:   89 c2                           	mov edx, eax
0x8049bf4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049bf7:   21 d0                           	and eax, edx
0x8049bf9:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049bfc:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049bff:   89 c3                           	mov ebx, eax
0x8049c01:   c7 45 ec d2 b2 d8 01            	mov dword ptr [ebp - 0x14], 0x1d8b2d2
0x8049c08:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049c0b:   66 98                           	cbw 
0x8049c0d:   83 c0 49                        	add eax, 0x49
0x8049c10:   0f b7 c8                        	movzx ecx, ax
0x8049c13:   ba 71 bd 8a 08                  	mov edx, 0x88abd71
0x8049c18:   89 c8                           	mov eax, ecx
0x8049c1a:   f7 ea                           	imul edx
0x8049c1c:   c1 fa 0a                        	sar edx, 0xa
0x8049c1f:   89 c8                           	mov eax, ecx
0x8049c21:   c1 f8 1f                        	sar eax, 0x1f
0x8049c24:   29 c2                           	sub edx, eax
0x8049c26:   89 d0                           	mov eax, edx
0x8049c28:   69 c0 e1 77 00 00               	imul eax, eax, 0x77e1
0x8049c2e:   29 c1                           	sub ecx, eax
0x8049c30:   89 c8                           	mov eax, ecx
0x8049c32:   f7 d8                           	neg eax
0x8049c34:   0f b7 d0                        	movzx edx, ax
0x8049c37:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c3a:   0f b7 c0                        	movzx eax, ax
0x8049c3d:   89 c1                           	mov ecx, eax
0x8049c3f:   d3 fa                           	sar edx, cl
0x8049c41:   89 d0                           	mov eax, edx
0x8049c43:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049c46:   0f 93 c0                        	setae al
0x8049c49:   0f b6 c0                        	movzx eax, al
0x8049c4c:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049c4f:   0f 96 c0                        	setbe al
0x8049c52:   0f b6 c0                        	movzx eax, al
0x8049c55:   39 85 9c fe ff ff               	cmp dword ptr [ebp - 0x164], eax
0x8049c5b:   0f 9e c0                        	setle al
0x8049c5e:   0f b6 c0                        	movzx eax, al
0x8049c61:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x8049c64:   0f bf fa                        	movsx edi, dx
0x8049c67:   99                              	cdq 
0x8049c68:   f7 ff                           	idiv edi
0x8049c6a:   ba 89 ff ff ff                  	mov edx, 0xffffff89
0x8049c6f:   0f af c2                        	imul eax, edx
0x8049c72:   89 c1                           	mov ecx, eax
0x8049c74:   66 0f be d1                     	movsx dx, cl
0x8049c78:   89 d0                           	mov eax, edx
0x8049c7a:   c1 e0 02                        	shl eax, 2
0x8049c7d:   01 d0                           	add eax, edx
0x8049c7f:   8d 14 85 00 00 00 00            	lea edx, [eax*4]
0x8049c86:   01 d0                           	add eax, edx
0x8049c88:   66 c1 e8 08                     	shr ax, 8
0x8049c8c:   89 c2                           	mov edx, eax
0x8049c8e:   c0 fa 02                        	sar dl, 2
0x8049c91:   89 c8                           	mov eax, ecx
0x8049c93:   c0 f8 07                        	sar al, 7
0x8049c96:   29 c2                           	sub edx, eax
0x8049c98:   89 d0                           	mov eax, edx
0x8049c9a:   c1 e0 02                        	shl eax, 2
0x8049c9d:   01 d0                           	add eax, edx
0x8049c9f:   c1 e0 03                        	shl eax, 3
0x8049ca2:   01 d0                           	add eax, edx
0x8049ca4:   29 c1                           	sub ecx, eax
0x8049ca6:   66 83 85 8a fe ff ff 01         	add word ptr [ebp - 0x176], 1
0x8049cae:   0f b7 85 8a fe ff ff            	movzx eax, word ptr [ebp - 0x176]
0x8049cb5:   39 85 84 fe ff ff               	cmp dword ptr [ebp - 0x17c], eax
0x8049cbb:   0f 9e c0                        	setle al
0x8049cbe:   0f b6 c0                        	movzx eax, al
0x8049cc1:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x8049cc7:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x8049ccd:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049cd0:   0f 93 c0                        	setae al
0x8049cd3:   0f b6 c0                        	movzx eax, al
0x8049cd6:   0f b7 95 9a fe ff ff            	movzx edx, word ptr [ebp - 0x166]
0x8049cdd:   0f b6 fa                        	movzx edi, dl
0x8049ce0:   99                              	cdq 
0x8049ce1:   f7 ff                           	idiv edi
0x8049ce3:   f7 d0                           	not eax
0x8049ce5:   83 c8 e0                        	or eax, 0xffffffe0
0x8049ce8:   31 c3                           	xor ebx, eax
0x8049cea:   89 da                           	mov edx, ebx
0x8049cec:   8b 85 80 fe ff ff               	mov eax, dword ptr [ebp - 0x180]
0x8049cf2:   09 d0                           	or eax, edx
0x8049cf4:   8d 50 ff                        	lea edx, [eax - 1]
0x8049cf7:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049cfa:   31 d0                           	xor eax, edx
0x8049cfc:   0f be c8                        	movsx ecx, al
0x8049cff:   b8 c8 ff ff ff                  	mov eax, 0xffffffc8
0x8049d04:   99                              	cdq 
0x8049d05:   f7 f9                           	idiv ecx
0x8049d07:   89 d0                           	mov eax, edx
0x8049d09:   85 c0                           	test eax, eax
0x8049d0b:   0f 84 9d 00 00 00               	je 0x8049dae <func_1+0x5b3>
0x8049d11:   66 83 7d a6 00                  	cmp word ptr [ebp - 0x5a], 0
0x8049d16:   0f 84 92 00 00 00               	je 0x8049dae <func_1+0x5b3>
0x8049d1c:   c7 85 78 fe ff ff 4f 76 eb 24   	mov dword ptr [ebp - 0x188], 0x24eb764f
0x8049d26:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049d2d:   0f 85 4b fd ff ff               	jne 0x8049a7e <func_1+0x283>
0x8049d33:   83 85 a8 fe ff ff 01            	add dword ptr [ebp - 0x158], 1
0x8049d3a:   c7 85 78 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x188], 1
0x8049d44:   83 bd a0 fe ff ff 00            	cmp dword ptr [ebp - 0x160], 0
0x8049d4b:   75 49                           	jne 0x8049d96 <func_1+0x59b>
0x8049d4d:   66 83 75 e6 6c                  	xor word ptr [ebp - 0x1a], 0x6c
0x8049d52:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049d56:   0f be d0                        	movsx edx, al
0x8049d59:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d5c:   39 85 78 fe ff ff               	cmp dword ptr [ebp - 0x188], eax
0x8049d62:   0f 94 c0                        	sete al
0x8049d65:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049d68:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049d6c:   0f b6 d8                        	movzx ebx, al
0x8049d6f:   0f b6 85 99 fe ff ff            	movzx eax, byte ptr [ebp - 0x167]
0x8049d76:   0f b6 c0                        	movzx eax, al
0x8049d79:   89 c1                           	mov ecx, eax
0x8049d7b:   d3 e3                           	shl ebx, cl
0x8049d7d:   89 d8                           	mov eax, ebx
0x8049d7f:   89 85 84 fe ff ff               	mov dword ptr [ebp - 0x17c], eax
0x8049d85:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x8049d8b:   83 e8 2d                        	sub eax, 0x2d
0x8049d8e:   0f be c0                        	movsx eax, al
0x8049d91:   0f af c2                        	imul eax, edx
0x8049d94:   85 c0                           	test eax, eax
0x8049d96:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049d9a:   3a 85 a4 fe ff ff               	cmp al, byte ptr [ebp - 0x15c]
0x8049da0:   0f 9e c0                        	setle al
0x8049da3:   0f b6 c0                        	movzx eax, al
0x8049da6:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049da9:   e9 e4 02 00 00                  	jmp 0x804a092 <func_1+0x897>
0x8049dae:   c7 85 74 fe ff ff c9 00 7d fc   	mov dword ptr [ebp - 0x18c], 0xfc7d00c9
0x8049db8:   c7 85 68 fe ff ff 01 64 06 b0   	mov dword ptr [ebp - 0x198], 0xb0066401
0x8049dc2:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049dc5:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049dc8:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049dcb:   ba 00 00 00 00                  	mov edx, 0
0x8049dd0:   f7 75 e0                        	div dword ptr [ebp - 0x20]
0x8049dd3:   89 d0                           	mov eax, edx
0x8049dd5:   85 c0                           	test eax, eax
0x8049dd7:   0f 94 c0                        	sete al
0x8049dda:   0f b6 c0                        	movzx eax, al
0x8049ddd:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049de0:   0f b7 85 7e fe ff ff            	movzx eax, word ptr [ebp - 0x182]
0x8049de7:   8d 50 ff                        	lea edx, [eax - 1]
0x8049dea:   66 89 95 7e fe ff ff            	mov word ptr [ebp - 0x182], dx
0x8049df1:   66 85 c0                        	test ax, ax
0x8049df4:   75 04                           	jne 0x8049dfa <func_1+0x5ff>
0x8049df6:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x8049dfa:   81 75 dc ff 00 00 00            	xor dword ptr [ebp - 0x24], 0xff
0x8049e01:   b8 01 00 00 00                  	mov eax, 1
0x8049e06:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x8049e09:   81 bd 80 fe ff ff ed 50 00 00   	cmp dword ptr [ebp - 0x180], 0x50ed
0x8049e13:   0f b6 45 8f                     	movzx eax, byte ptr [ebp - 0x71]
0x8049e17:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x8049e1d:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049e21:   0f be d0                        	movsx edx, al
0x8049e24:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x8049e28:   0f b7 85 8a fe ff ff            	movzx eax, word ptr [ebp - 0x176]
0x8049e2f:   83 f0 05                        	xor eax, 5
0x8049e32:   89 c3                           	mov ebx, eax
0x8049e34:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x8049e3b:   66 39 c3                        	cmp bx, ax
0x8049e3e:   0f 95 c0                        	setne al
0x8049e41:   0f b6 c0                        	movzx eax, al
0x8049e44:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x8049e4a:   8b 85 80 fe ff ff               	mov eax, dword ptr [ebp - 0x180]
0x8049e50:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x8049e53:   29 c1                           	sub ecx, eax
0x8049e55:   89 c8                           	mov eax, ecx
0x8049e57:   3d c9 00 00 00                  	cmp eax, 0xc9
0x8049e5c:   0f 96 c0                        	setbe al
0x8049e5f:   89 c1                           	mov ecx, eax
0x8049e61:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049e64:   01 c8                           	add eax, ecx
0x8049e66:   89 c1                           	mov ecx, eax
0x8049e68:   0f b6 45 8f                     	movzx eax, byte ptr [ebp - 0x71]
0x8049e6c:   31 c8                           	xor eax, ecx
0x8049e6e:   83 e0 f6                        	and eax, 0xfffffff6
0x8049e71:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049e74:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049e78:   c0 e8 03                        	shr al, 3
0x8049e7b:   0f be c0                        	movsx eax, al
0x8049e7e:   89 c1                           	mov ecx, eax
0x8049e80:   d3 e2                           	shl edx, cl
0x8049e82:   89 d0                           	mov eax, edx
0x8049e84:   98                              	cwde 
0x8049e85:   69 c0 60 12 00 00               	imul eax, eax, 0x1260
0x8049e8b:   f7 d8                           	neg eax
0x8049e8d:   89 c2                           	mov edx, eax
0x8049e8f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e92:   09 d0                           	or eax, edx
0x8049e94:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049e97:   0f 92 c0                        	setb al
0x8049e9a:   0f b6 c0                        	movzx eax, al
0x8049e9d:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049ea0:   0f 97 c0                        	seta al
0x8049ea3:   0f b6 c0                        	movzx eax, al
0x8049ea6:   f7 d0                           	not eax
0x8049ea8:   89 c2                           	mov edx, eax
0x8049eaa:   0f be 85 99 fe ff ff            	movsx eax, byte ptr [ebp - 0x167]
0x8049eb1:   39 c2                           	cmp edx, eax
0x8049eb3:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049eb6:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049eb9:   e9 d4 01 00 00                  	jmp 0x804a092 <func_1+0x897>
0x8049ebe:   c7 85 90 fe ff ff 9b 7f 4c 6a   	mov dword ptr [ebp - 0x170], 0x6a4c7f9b
0x8049ec8:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x8049ece:   0f b6 c0                        	movzx eax, al
0x8049ed1:   f7 d8                           	neg eax
0x8049ed3:   31 85 94 fe ff ff               	xor dword ptr [ebp - 0x16c], eax
0x8049ed9:   0f be 55 e5                     	movsx edx, byte ptr [ebp - 0x1b]
0x8049edd:   8b 85 90 fe ff ff               	mov eax, dword ptr [ebp - 0x170]
0x8049ee3:   98                              	cwde 
0x8049ee4:   89 d1                           	mov ecx, edx
0x8049ee6:   29 c1                           	sub ecx, eax
0x8049ee8:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x8049eee:   89 c3                           	mov ebx, eax
0x8049ef0:   80 fb fe                        	cmp bl, 0xfe
0x8049ef3:   0f 93 c2                        	setae dl
0x8049ef6:   b8 00 00 00 00                  	mov eax, 0
0x8049efb:   29 d0                           	sub eax, edx
0x8049efd:   01 c0                           	add eax, eax
0x8049eff:   29 c3                           	sub ebx, eax
0x8049f01:   89 da                           	mov edx, ebx
0x8049f03:   0f b6 c2                        	movzx eax, dl
0x8049f06:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f09:   39 4d ec                        	cmp dword ptr [ebp - 0x14], ecx
0x8049f0c:   0f 95 c0                        	setne al
0x8049f0f:   0f b6 d0                        	movzx edx, al
0x8049f12:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049f16:   39 c2                           	cmp edx, eax
0x8049f18:   0f 84 a8 00 00 00               	je 0x8049fc6 <func_1+0x7cb>
0x8049f1e:   c7 85 8c fe ff ff 43 cf c0 77   	mov dword ptr [ebp - 0x174], 0x77c0cf43
0x8049f28:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x8049f2e:   0f be d0                        	movsx edx, al
0x8049f31:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x8049f37:   0f be c0                        	movsx eax, al
0x8049f3a:   29 c2                           	sub edx, eax
0x8049f3c:   89 d0                           	mov eax, edx
0x8049f3e:   3d 5d e0 99 95                  	cmp eax, 0x9599e05d
0x8049f43:   75 0e                           	jne 0x8049f53 <func_1+0x758>
0x8049f45:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x8049f4b:   39 85 8c fe ff ff               	cmp dword ptr [ebp - 0x174], eax
0x8049f51:   72 07                           	jb 0x8049f5a <func_1+0x75f>
0x8049f53:   b8 01 00 00 00                  	mov eax, 1
0x8049f58:   eb 05                           	jmp 0x8049f5f <func_1+0x764>
0x8049f5a:   b8 00 00 00 00                  	mov eax, 0
0x8049f5f:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f62:   0f b6 85 a5 fe ff ff            	movzx eax, byte ptr [ebp - 0x15b]
0x8049f69:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049f6c:   89 c2                           	mov edx, eax
0x8049f6e:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049f72:   33 85 8c fe ff ff               	xor eax, dword ptr [ebp - 0x174]
0x8049f78:   39 c2                           	cmp edx, eax
0x8049f7a:   0f 92 c0                        	setb al
0x8049f7d:   0f b6 c0                        	movzx eax, al
0x8049f80:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049f83:   75 07                           	jne 0x8049f8c <func_1+0x791>
0x8049f85:   b8 10 00 00 00                  	mov eax, 0x10
0x8049f8a:   eb 05                           	jmp 0x8049f91 <func_1+0x796>
0x8049f8c:   b8 00 00 00 00                  	mov eax, 0
0x8049f91:   0f be 7d e5                     	movsx edi, byte ptr [ebp - 0x1b]
0x8049f95:   99                              	cdq 
0x8049f96:   f7 ff                           	idiv edi
0x8049f98:   89 c1                           	mov ecx, eax
0x8049f9a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049f9d:   89 c2                           	mov edx, eax
0x8049f9f:   0f b6 c1                        	movzx eax, cl
0x8049fa2:   f6 f2                           	div dl
0x8049fa4:   0f b6 c4                        	movzx eax, ah
0x8049fa7:   0f b6 c0                        	movzx eax, al
0x8049faa:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x8049fad:   b8 01 00 00 00                  	mov eax, 1
0x8049fb2:   39 85 8c fe ff ff               	cmp dword ptr [ebp - 0x174], eax
0x8049fb8:   0f 92 c0                        	setb al
0x8049fbb:   0f b6 c0                        	movzx eax, al
0x8049fbe:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049fc1:   e9 cc 00 00 00                  	jmp 0x804a092 <func_1+0x897>
0x8049fc6:   8b 85 9c fe ff ff               	mov eax, dword ptr [ebp - 0x164]
0x8049fcc:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x8049fd2:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x8049fd9:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x8049fe0:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x8049fe7:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x8049feb:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x8049fef:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x8049ff5:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x8049ff9:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x8049fff:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804a003:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a009:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a00d:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a013:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a017:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a01d:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a021:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804a025:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a02b:   50                              	push eax
0x804a02c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a02f:   52                              	push edx
0x804a030:   51                              	push ecx
0x804a031:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a034:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a037:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a03a:   57                              	push edi
0x804a03b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a03e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a041:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a047:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a04d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a050:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a053:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a059:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a05c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a05f:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a065:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a068:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a06b:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a071:   56                              	push esi
0x804a072:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a075:   53                              	push ebx
0x804a076:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a079:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a07c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a07f:   e8 d0 f5 ff ff                  	call 0x8049654 <set_var>
0x804a084:   83 c4 70                        	add esp, 0x70
0x804a087:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x804a08d:   e9 01 0e 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x804a092:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a095:   2a 85 a5 fe ff ff               	sub al, byte ptr [ebp - 0x15b]
0x804a09b:   0f be c0                        	movsx eax, al
0x804a09e:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x804a0a1:   0f be ca                        	movsx ecx, dl
0x804a0a4:   99                              	cdq 
0x804a0a5:   f7 f9                           	idiv ecx
0x804a0a7:   89 d0                           	mov eax, edx
0x804a0a9:   0f b7 d0                        	movzx edx, ax
0x804a0ac:   66 0f be 45 e5                  	movsx ax, byte ptr [ebp - 0x1b]
0x804a0b1:   0f b7 c0                        	movzx eax, ax
0x804a0b4:   89 c1                           	mov ecx, eax
0x804a0b6:   d3 fa                           	sar edx, cl
0x804a0b8:   89 d0                           	mov eax, edx
0x804a0ba:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a0bd:   0f 95 c0                        	setne al
0x804a0c0:   0f b6 c0                        	movzx eax, al
0x804a0c3:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x804a0c6:   e9 3a 0c 00 00                  	jmp 0x804ad05 <func_1+0x150a>
0x804a0cb:   c7 85 54 ff ff ff 15 2c 9a 59   	mov dword ptr [ebp - 0xac], 0x599a2c15
0x804a0d5:   c7 85 50 ff ff ff 20 6e 6c 5b   	mov dword ptr [ebp - 0xb0], 0x5b6c6e20
0x804a0df:   c7 85 4c ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xb4], 0xfffffffd
0x804a0e9:   c7 45 9c 1e e7 98 c6            	mov dword ptr [ebp - 0x64], 0xc698e71e
0x804a0f0:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x804a0f7:   c7 85 48 ff ff ff e1 4e ea d5   	mov dword ptr [ebp - 0xb8], 0xd5ea4ee1
0x804a101:   c7 85 44 ff ff ff fd 57 7e 12   	mov dword ptr [ebp - 0xbc], 0x127e57fd
0x804a10b:   c7 85 40 ff ff ff 64 2c 83 66   	mov dword ptr [ebp - 0xc0], 0x66832c64
0x804a115:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x804a119:   e9 34 07 00 00                  	jmp 0x804a852 <func_1+0x1057>
0x804a11e:   66 c7 85 3e ff ff ff f4 1e      	mov word ptr [ebp - 0xc2], 0x1ef4
0x804a127:   c7 85 38 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xc8], 4
0x804a131:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x804a13b:   c7 85 30 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd0], 0xffffffff
0x804a145:   c7 85 2c ff ff ff eb 87 d2 54   	mov dword ptr [ebp - 0xd4], 0x54d287eb
0x804a14f:   c6 85 2b ff ff ff 9d            	mov byte ptr [ebp - 0xd5], 0x9d
0x804a156:   c7 85 24 ff ff ff 07 02 99 71   	mov dword ptr [ebp - 0xdc], 0x71990207
0x804a160:   81 65 ac 07 e0 56 8d            	and dword ptr [ebp - 0x54], 0x8d56e007
0x804a167:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a16f:   0f 85 d5 06 00 00               	jne 0x804a84a <func_1+0x104f>
0x804a175:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a17c:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a182:   83 bd 38 ff ff ff 00            	cmp dword ptr [ebp - 0xc8], 0
0x804a189:   0f 84 86 04 00 00               	je 0x804a615 <func_1+0xe1a>
0x804a18f:   c7 85 10 ff ff ff c9 1f ab 4c   	mov dword ptr [ebp - 0xf0], 0x4cab1fc9
0x804a199:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x804a1a3:   66 c7 85 0a ff ff ff 62 2e      	mov word ptr [ebp - 0xf6], 0x2e62
0x804a1ac:   81 7d e8 e3 00 00 00            	cmp dword ptr [ebp - 0x18], 0xe3
0x804a1b3:   0f 84 ba 00 00 00               	je 0x804a273 <func_1+0xa78>
0x804a1b9:   c7 85 00 ff ff ff 49 c3 44 3a   	mov dword ptr [ebp - 0x100], 0x3a44c349
0x804a1c3:   c7 85 fc fe ff ff f6 af d5 62   	mov dword ptr [ebp - 0x104], 0x62d5aff6
0x804a1cd:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a1d3:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a1d6:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a1dc:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a1df:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a1e3:   23 45 d0                        	and eax, dword ptr [ebp - 0x30]
0x804a1e6:   85 c0                           	test eax, eax
0x804a1e8:   0f 94 c0                        	sete al
0x804a1eb:   0f b6 d0                        	movzx edx, al
0x804a1ee:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a1f2:   09 d0                           	or eax, edx
0x804a1f4:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a1f7:   0f 93 c0                        	setae al
0x804a1fa:   89 c2                           	mov edx, eax
0x804a1fc:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a200:   31 d0                           	xor eax, edx
0x804a202:   89 c1                           	mov ecx, eax
0x804a204:   0f b6 d1                        	movzx edx, cl
0x804a207:   89 d0                           	mov eax, edx
0x804a209:   c1 e0 03                        	shl eax, 3
0x804a20c:   29 d0                           	sub eax, edx
0x804a20e:   c1 e0 04                        	shl eax, 4
0x804a211:   01 d0                           	add eax, edx
0x804a213:   66 c1 e8 08                     	shr ax, 8
0x804a217:   89 ca                           	mov edx, ecx
0x804a219:   29 c2                           	sub edx, eax
0x804a21b:   d0 ea                           	shr dl, 1
0x804a21d:   01 d0                           	add eax, edx
0x804a21f:   c0 e8 06                        	shr al, 6
0x804a222:   ba 59 00 00 00                  	mov edx, 0x59
0x804a227:   0f af c2                        	imul eax, edx
0x804a22a:   29 c1                           	sub ecx, eax
0x804a22c:   89 c8                           	mov eax, ecx
0x804a22e:   0f b6 c0                        	movzx eax, al
0x804a231:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a234:   0f 94 c0                        	sete al
0x804a237:   0f b6 d0                        	movzx edx, al
0x804a23a:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a23e:   39 c2                           	cmp edx, eax
0x804a240:   0f 9d c0                        	setge al
0x804a243:   0f b6 c0                        	movzx eax, al
0x804a246:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a24c:   0f 95 c0                        	setne al
0x804a24f:   0f b6 c0                        	movzx eax, al
0x804a252:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x804a258:   0f 9c c0                        	setl al
0x804a25b:   0f b6 c0                        	movzx eax, al
0x804a25e:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a261:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a264:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x804a267:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a271:   eb 4c                           	jmp 0x804a2bf <func_1+0xac4>
0x804a273:   c7 85 04 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xfc], 1
0x804a27d:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a280:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x804a283:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804a28a:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a28d:   ba 00 00 00 00                  	mov edx, 0
0x804a292:   f7 f7                           	div edi
0x804a294:   83 f8 01                        	cmp eax, 1
0x804a297:   0f 96 c0                        	setbe al
0x804a29a:   0f b6 c0                        	movzx eax, al
0x804a29d:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a2a3:   75 07                           	jne 0x804a2ac <func_1+0xab1>
0x804a2a5:   83 bd 10 ff ff ff 00            	cmp dword ptr [ebp - 0xf0], 0
0x804a2ac:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804a2b3:   83 85 04 ff ff ff 01            	add dword ptr [ebp - 0xfc], 1
0x804a2ba:   66 83 45 ce 01                  	add word ptr [ebp - 0x32], 1
0x804a2bf:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a2c5:   0f be d0                        	movsx edx, al
0x804a2c8:   83 bd 54 ff ff ff ff            	cmp dword ptr [ebp - 0xac], -1
0x804a2cf:   0f 94 c0                        	sete al
0x804a2d2:   0f b6 c0                        	movzx eax, al
0x804a2d5:   89 c1                           	mov ecx, eax
0x804a2d7:   d3 fa                           	sar edx, cl
0x804a2d9:   89 d0                           	mov eax, edx
0x804a2db:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x804a2e1:   7e 07                           	jle 0x804a2ea <func_1+0xaef>
0x804a2e3:   ba fe ff 01 00                  	mov edx, 0x1fffe
0x804a2e8:   eb 05                           	jmp 0x804a2ef <func_1+0xaf4>
0x804a2ea:   ba ff ff 00 00                  	mov edx, 0xffff
0x804a2ef:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x804a2f3:   39 c2                           	cmp edx, eax
0x804a2f5:   0f 95 c0                        	setne al
0x804a2f8:   0f b6 c0                        	movzx eax, al
0x804a2fb:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a2fe:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a301:   98                              	cwde 
0x804a302:   01 c0                           	add eax, eax
0x804a304:   3d 99 55 00 00                  	cmp eax, 0x5599
0x804a309:   0f 8f 48 02 00 00               	jg 0x804a557 <func_1+0xd5c>
0x804a30f:   c7 85 f8 fe ff ff 8c 8c 53 ce   	mov dword ptr [ebp - 0x108], 0xce538c8c
0x804a319:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a31d:   66 c7 45 ce f8 ff               	mov word ptr [ebp - 0x32], 0xfff8
0x804a323:   66 0f be 45 e5                  	movsx ax, byte ptr [ebp - 0x1b]
0x804a328:   0f b7 c8                        	movzx ecx, ax
0x804a32b:   b8 f8 ff 00 00                  	mov eax, 0xfff8
0x804a330:   99                              	cdq 
0x804a331:   f7 f9                           	idiv ecx
0x804a333:   89 d0                           	mov eax, edx
0x804a335:   89 c2                           	mov edx, eax
0x804a337:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a33a:   09 d0                           	or eax, edx
0x804a33c:   0f be d0                        	movsx edx, al
0x804a33f:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a345:   0f be c0                        	movsx eax, al
0x804a348:   89 c1                           	mov ecx, eax
0x804a34a:   d3 e2                           	shl edx, cl
0x804a34c:   89 d0                           	mov eax, edx
0x804a34e:   33 45 88                        	xor eax, dword ptr [ebp - 0x78]
0x804a351:   66 31 45 e6                     	xor word ptr [ebp - 0x1a], ax
0x804a355:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a359:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a35c:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a35f:   3b 85 54 ff ff ff               	cmp eax, dword ptr [ebp - 0xac]
0x804a365:   0f 94 c0                        	sete al
0x804a368:   0f b6 c0                        	movzx eax, al
0x804a36b:   ba 00 00 00 00                  	mov edx, 0
0x804a370:   f7 b5 54 ff ff ff               	div dword ptr [ebp - 0xac]
0x804a376:   89 d0                           	mov eax, edx
0x804a378:   89 c1                           	mov ecx, eax
0x804a37a:   0f b6 d1                        	movzx edx, cl
0x804a37d:   89 d0                           	mov eax, edx
0x804a37f:   c1 e0 03                        	shl eax, 3
0x804a382:   01 d0                           	add eax, edx
0x804a384:   c1 e0 02                        	shl eax, 2
0x804a387:   01 d0                           	add eax, edx
0x804a389:   66 c1 e8 08                     	shr ax, 8
0x804a38d:   89 ca                           	mov edx, ecx
0x804a38f:   29 c2                           	sub edx, eax
0x804a391:   d0 ea                           	shr dl, 1
0x804a393:   01 d0                           	add eax, edx
0x804a395:   c0 e8 02                        	shr al, 2
0x804a398:   89 c2                           	mov edx, eax
0x804a39a:   c1 e2 03                        	shl edx, 3
0x804a39d:   29 c2                           	sub edx, eax
0x804a39f:   89 c8                           	mov eax, ecx
0x804a3a1:   29 d0                           	sub eax, edx
0x804a3a3:   0f b6 c0                        	movzx eax, al
0x804a3a6:   c1 e0 03                        	shl eax, 3
0x804a3a9:   85 c0                           	test eax, eax
0x804a3ab:   0f 94 c0                        	sete al
0x804a3ae:   0f b6 c0                        	movzx eax, al
0x804a3b1:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x804a3b7:   0f 9f c0                        	setg al
0x804a3ba:   0f b6 c0                        	movzx eax, al
0x804a3bd:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a3c0:   0f 9d c0                        	setge al
0x804a3c3:   0f b6 c0                        	movzx eax, al
0x804a3c6:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a3cc:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a3d2:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a3d5:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a3d8:   83 f8 05                        	cmp eax, 5
0x804a3db:   0f 96 c0                        	setbe al
0x804a3de:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a3e1:   0f b6 55 c7                     	movzx edx, byte ptr [ebp - 0x39]
0x804a3e5:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a3e8:   98                              	cwde 
0x804a3e9:   29 c2                           	sub edx, eax
0x804a3eb:   89 d0                           	mov eax, edx
0x804a3ed:   39 c3                           	cmp ebx, eax
0x804a3ef:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a3f2:   0f b7 c0                        	movzx eax, ax
0x804a3f5:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x804a3f8:   0f b7 ca                        	movzx ecx, dx
0x804a3fb:   99                              	cdq 
0x804a3fc:   f7 f9                           	idiv ecx
0x804a3fe:   89 d0                           	mov eax, edx
0x804a400:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a403:   75 57                           	jne 0x804a45c <func_1+0xc61>
0x804a405:   c7 85 f0 fe ff ff 3a 13 6c 48   	mov dword ptr [ebp - 0x110], 0x486c133a
0x804a40f:   c7 85 ec fe ff ff d8 77 c4 f5   	mov dword ptr [ebp - 0x114], 0xf5c477d8
0x804a419:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a41f:   0f b7 d0                        	movzx edx, ax
0x804a422:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a425:   0f b7 c0                        	movzx eax, ax
0x804a428:   89 c1                           	mov ecx, eax
0x804a42a:   d3 e2                           	shl edx, cl
0x804a42c:   89 d0                           	mov eax, edx
0x804a42e:   0f be c0                        	movsx eax, al
0x804a431:   83 e8 6b                        	sub eax, 0x6b
0x804a434:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a437:   0f 94 c0                        	sete al
0x804a43a:   0f b6 c0                        	movzx eax, al
0x804a43d:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a443:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a449:   66 c1 e8 03                     	shr ax, 3
0x804a44d:   0f b7 c0                        	movzx eax, ax
0x804a450:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a453:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804a45a:   eb 2e                           	jmp 0x804a48a <func_1+0xc8f>
0x804a45c:   66 c7 85 f6 fe ff ff 04 b1      	mov word ptr [ebp - 0x10a], 0xb104
0x804a465:   c7 85 38 ff ff ff 44 5d 00 00   	mov dword ptr [ebp - 0xc8], 0x5d44
0x804a46f:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a473:   c7 85 34 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xcc], 0
0x804a47d:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x804a484:   0f 85 d4 03 00 00               	jne 0x804a85e <func_1+0x1063>
0x804a48a:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x804a491:   0f 85 ca 03 00 00               	jne 0x804a861 <func_1+0x1066>
0x804a497:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a49e:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804a4a5:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804a4ac:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a4b0:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804a4b4:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a4ba:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a4be:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a4c4:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804a4c8:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a4ce:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a4d2:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a4d8:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a4dc:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a4e2:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a4e6:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804a4ea:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a4f0:   50                              	push eax
0x804a4f1:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a4f4:   52                              	push edx
0x804a4f5:   51                              	push ecx
0x804a4f6:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a4f9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a4fc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a4ff:   57                              	push edi
0x804a500:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a503:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a506:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a50c:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a512:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a515:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a518:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a51e:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a521:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a524:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a52a:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a52d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a530:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a536:   56                              	push esi
0x804a537:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a53a:   53                              	push ebx
0x804a53b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a53e:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a541:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a544:   e8 0b f1 ff ff                  	call 0x8049654 <set_var>
0x804a549:   83 c4 70                        	add esp, 0x70
0x804a54c:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a552:   e9 3c 09 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x804a557:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a55e:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804a565:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804a56c:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a570:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804a574:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a57a:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a57e:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a584:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804a588:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a58e:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a592:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a598:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a59c:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a5a2:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a5a6:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804a5aa:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a5b0:   50                              	push eax
0x804a5b1:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a5b4:   52                              	push edx
0x804a5b5:   51                              	push ecx
0x804a5b6:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a5b9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a5bc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a5bf:   57                              	push edi
0x804a5c0:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a5c3:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5c6:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a5cc:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a5d2:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a5d5:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a5d8:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a5de:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a5e1:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a5e4:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a5ea:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a5ed:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a5f0:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a5f6:   56                              	push esi
0x804a5f7:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a5fa:   53                              	push ebx
0x804a5fb:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5fe:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a601:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a604:   e8 4b f0 ff ff                  	call 0x8049654 <set_var>
0x804a609:   83 c4 70                        	add esp, 0x70
0x804a60c:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a610:   e9 7e 08 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x804a615:   c7 85 20 ff ff ff 6a b2 04 5c   	mov dword ptr [ebp - 0xe0], 0x5c04b26a
0x804a61f:   c7 85 1c ff ff ff a4 cd 64 2e   	mov dword ptr [ebp - 0xe4], 0x2e64cda4
0x804a629:   c7 85 18 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffff6
0x804a633:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x804a63a:   0f 9e c0                        	setle al
0x804a63d:   0f b6 d0                        	movzx edx, al
0x804a640:   83 7d c8 01                     	cmp dword ptr [ebp - 0x38], 1
0x804a644:   0f 94 c0                        	sete al
0x804a647:   0f b6 c0                        	movzx eax, al
0x804a64a:   89 c1                           	mov ecx, eax
0x804a64c:   d3 e2                           	shl edx, cl
0x804a64e:   89 d0                           	mov eax, edx
0x804a650:   85 c0                           	test eax, eax
0x804a652:   74 06                           	je 0x804a65a <func_1+0xe5f>
0x804a654:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a658:   75 09                           	jne 0x804a663 <func_1+0xe68>
0x804a65a:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x804a661:   74 07                           	je 0x804a66a <func_1+0xe6f>
0x804a663:   b8 01 00 00 00                  	mov eax, 1
0x804a668:   eb 05                           	jmp 0x804a66f <func_1+0xe74>
0x804a66a:   b8 00 00 00 00                  	mov eax, 0
0x804a66f:   3d 0b 5e 00 00                  	cmp eax, 0x5e0b
0x804a674:   0f 9e c0                        	setle al
0x804a677:   0f b6 d0                        	movzx edx, al
0x804a67a:   0f b6 85 63 ff ff ff            	movzx eax, byte ptr [ebp - 0x9d]
0x804a681:   39 c2                           	cmp edx, eax
0x804a683:   0f 9d c0                        	setge al
0x804a686:   0f b6 d0                        	movzx edx, al
0x804a689:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a68d:   39 c2                           	cmp edx, eax
0x804a68f:   0f 9d c0                        	setge al
0x804a692:   0f b6 c0                        	movzx eax, al
0x804a695:   66 21 45 e6                     	and word ptr [ebp - 0x1a], ax
0x804a699:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a69d:   66 c1 f8 0c                     	sar ax, 0xc
0x804a6a1:   98                              	cwde 
0x804a6a2:   89 c2                           	mov edx, eax
0x804a6a4:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a6a8:   31 d0                           	xor eax, edx
0x804a6aa:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804a6ae:   0f be 55 e5                     	movsx edx, byte ptr [ebp - 0x1b]
0x804a6b2:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a6b5:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x804a6bb:   0f 97 c0                        	seta al
0x804a6be:   0f b6 c0                        	movzx eax, al
0x804a6c1:   39 c2                           	cmp edx, eax
0x804a6c3:   7f 09                           	jg 0x804a6ce <func_1+0xed3>
0x804a6c5:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x804a6c9:   e9 bc 00 00 00                  	jmp 0x804a78a <func_1+0xf8f>
0x804a6ce:   66 c7 85 16 ff ff ff ff ff      	mov word ptr [ebp - 0xea], 0xffff
0x804a6d7:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804a6de:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a6e6:   0f 85 61 01 00 00               	jne 0x804a84d <func_1+0x1052>
0x804a6ec:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x804a6f0:   31 85 34 ff ff ff               	xor dword ptr [ebp - 0xcc], eax
0x804a6f6:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a6fc:   3b 85 38 ff ff ff               	cmp eax, dword ptr [ebp - 0xc8]
0x804a702:   0f 9c c0                        	setl al
0x804a705:   0f b6 d0                        	movzx edx, al
0x804a708:   0f b6 85 6b ff ff ff            	movzx eax, byte ptr [ebp - 0x95]
0x804a70f:   01 d0                           	add eax, edx
0x804a711:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804a715:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a71b:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804a71f:   0f b7 bd 16 ff ff ff            	movzx edi, word ptr [ebp - 0xea]
0x804a726:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a72a:   ba 00 00 00 00                  	mov edx, 0
0x804a72f:   66 f7 f7                        	div di
0x804a732:   0f b7 d0                        	movzx edx, ax
0x804a735:   0f bf 85 16 ff ff ff            	movsx eax, word ptr [ebp - 0xea]
0x804a73c:   39 c2                           	cmp edx, eax
0x804a73e:   0f 9f c0                        	setg al
0x804a741:   0f b6 d0                        	movzx edx, al
0x804a744:   0f b6 85 2b ff ff ff            	movzx eax, byte ptr [ebp - 0xd5]
0x804a74b:   39 c2                           	cmp edx, eax
0x804a74d:   0f 9c c0                        	setl al
0x804a750:   0f b6 c0                        	movzx eax, al
0x804a753:   89 c1                           	mov ecx, eax
0x804a755:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a758:   89 c2                           	mov edx, eax
0x804a75a:   89 c8                           	mov eax, ecx
0x804a75c:   0f af c2                        	imul eax, edx
0x804a75f:   0f b7 95 16 ff ff ff            	movzx edx, word ptr [ebp - 0xea]
0x804a766:   29 d0                           	sub eax, edx
0x804a768:   c0 f8 03                        	sar al, 3
0x804a76b:   84 c0                           	test al, al
0x804a76d:   74 10                           	je 0x804a77f <func_1+0xf84>
0x804a76f:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x804a776:   74 07                           	je 0x804a77f <func_1+0xf84>
0x804a778:   b8 01 00 00 00                  	mov eax, 1
0x804a77d:   eb 05                           	jmp 0x804a784 <func_1+0xf89>
0x804a77f:   b8 00 00 00 00                  	mov eax, 0
0x804a784:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a78a:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a791:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804a798:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804a79f:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a7a3:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804a7a7:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a7ad:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a7b1:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a7b7:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804a7bb:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a7c1:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a7c5:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a7cb:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a7cf:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a7d5:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a7d9:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804a7dd:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a7e3:   50                              	push eax
0x804a7e4:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a7e7:   52                              	push edx
0x804a7e8:   51                              	push ecx
0x804a7e9:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a7ec:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a7ef:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a7f2:   57                              	push edi
0x804a7f3:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a7f6:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7f9:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a7ff:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a805:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a808:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a80b:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a811:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a814:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a817:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a81d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a820:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a823:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a829:   56                              	push esi
0x804a82a:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a82d:   53                              	push ebx
0x804a82e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a831:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a834:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a837:   e8 18 ee ff ff                  	call 0x8049654 <set_var>
0x804a83c:   83 c4 70                        	add esp, 0x70
0x804a83f:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a845:   e9 49 06 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x804a84a:   90                              	nop 
0x804a84b:   eb 01                           	jmp 0x804a84e <func_1+0x1053>
0x804a84d:   90                              	nop 
0x804a84e:   80 45 db 01                     	add byte ptr [ebp - 0x25], 1
0x804a852:   80 7d db 0f                     	cmp byte ptr [ebp - 0x25], 0xf
0x804a856:   0f 87 c2 f8 ff ff               	ja 0x804a11e <func_1+0x923>
0x804a85c:   eb 04                           	jmp 0x804a862 <func_1+0x1067>
0x804a85e:   90                              	nop 
0x804a85f:   eb 01                           	jmp 0x804a862 <func_1+0x1067>
0x804a861:   90                              	nop 
0x804a862:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a866:   0f 84 33 01 00 00               	je 0x804a99f <func_1+0x11a4>
0x804a86c:   c7 45 e0 32 a6 83 ac            	mov dword ptr [ebp - 0x20], 0xac83a632
0x804a873:   b8 32 a6 83 ac                  	mov eax, 0xac83a632
0x804a878:   ba 00 00 00 00                  	mov edx, 0
0x804a87d:   f7 b5 64 ff ff ff               	div dword ptr [ebp - 0x9c]
0x804a883:   89 d0                           	mov eax, edx
0x804a885:   85 c0                           	test eax, eax
0x804a887:   75 12                           	jne 0x804a89b <func_1+0x10a0>
0x804a889:   b8 fb ff ff ff                  	mov eax, 0xfffffffb
0x804a88e:   99                              	cdq 
0x804a88f:   f7 7d a8                        	idiv dword ptr [ebp - 0x58]
0x804a892:   89 d0                           	mov eax, edx
0x804a894:   3d 97 12 00 00                  	cmp eax, 0x1297
0x804a899:   7e 07                           	jle 0x804a8a2 <func_1+0x10a7>
0x804a89b:   ba 01 00 00 00                  	mov edx, 1
0x804a8a0:   eb 05                           	jmp 0x804a8a7 <func_1+0x10ac>
0x804a8a2:   ba 00 00 00 00                  	mov edx, 0
0x804a8a7:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a8aa:   8d 0c 02                        	lea ecx, [edx + eax]
0x804a8ad:   ba 37 39 1a 8f                  	mov edx, 0x8f1a3937
0x804a8b2:   89 c8                           	mov eax, ecx
0x804a8b4:   f7 ea                           	imul edx
0x804a8b6:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a8b9:   c1 f8 1e                        	sar eax, 0x1e
0x804a8bc:   c1 f9 1f                        	sar ecx, 0x1f
0x804a8bf:   89 ca                           	mov edx, ecx
0x804a8c1:   29 c2                           	sub edx, eax
0x804a8c3:   89 d0                           	mov eax, edx
0x804a8c5:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a8c8:   0f 9e c0                        	setle al
0x804a8cb:   0f b6 c0                        	movzx eax, al
0x804a8ce:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a8d1:   0f 97 c0                        	seta al
0x804a8d4:   0f b6 d0                        	movzx edx, al
0x804a8d7:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a8da:   0f be c0                        	movsx eax, al
0x804a8dd:   01 d0                           	add eax, edx
0x804a8df:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a8e2:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804a8e9:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804a8f0:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804a8f7:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804a8fb:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804a8ff:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a905:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a909:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a90f:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804a913:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a919:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804a91d:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a923:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a927:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a92d:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804a931:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804a935:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a93b:   50                              	push eax
0x804a93c:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a93f:   52                              	push edx
0x804a940:   51                              	push ecx
0x804a941:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a944:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a947:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a94a:   57                              	push edi
0x804a94b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a94e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a951:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a957:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a95d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a960:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a963:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a969:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a96c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a96f:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a975:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a978:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a97b:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a981:   56                              	push esi
0x804a982:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a985:   53                              	push ebx
0x804a986:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a989:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a98c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a98f:   e8 c0 ec ff ff                  	call 0x8049654 <set_var>
0x804a994:   83 c4 70                        	add esp, 0x70
0x804a997:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a99a:   e9 f4 04 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x804a99f:   66 c7 85 ea fe ff ff 28 8c      	mov word ptr [ebp - 0x116], 0x8c28
0x804a9a8:   c7 45 94 b2 7b 1d bb            	mov dword ptr [ebp - 0x6c], 0xbb1d7bb2
0x804a9af:   c7 85 e4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x11c], 1
0x804a9b9:   c7 85 e0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x120], 1
0x804a9c3:   c7 85 dc fe ff ff 1d 57 f2 1a   	mov dword ptr [ebp - 0x124], 0x1af2571d
0x804a9cd:   66 c7 45 be 00 00               	mov word ptr [ebp - 0x42], 0
0x804a9d3:   e9 8c 01 00 00                  	jmp 0x804ab64 <func_1+0x1369>
0x804a9d8:   66 c7 85 ce fe ff ff 89 6b      	mov word ptr [ebp - 0x132], 0x6b89
0x804a9e1:   c7 85 c8 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x138], 7
0x804a9eb:   c7 85 c4 fe ff ff c1 d3 f7 ee   	mov dword ptr [ebp - 0x13c], 0xeef7d3c1
0x804a9f5:   0f bf 85 ce fe ff ff            	movsx eax, word ptr [ebp - 0x132]
0x804a9fc:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x804a9ff:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804aa02:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804aa05:   c7 45 e8 eb ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffeb
0x804aa0c:   e9 3e 01 00 00                  	jmp 0x804ab4f <func_1+0x1354>
0x804aa11:   c7 85 c0 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x140], 0xfffffffb
0x804aa1b:   c7 85 bc fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x144], 5
0x804aa25:   c7 85 b8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x148], 1
0x804aa2f:   c7 85 b4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x14c], 0xffffffff
0x804aa39:   c6 85 b3 fe ff ff ff            	mov byte ptr [ebp - 0x14d], 0xff
0x804aa40:   80 7d e5 00                     	cmp byte ptr [ebp - 0x1b], 0
0x804aa44:   75 10                           	jne 0x804aa56 <func_1+0x125b>
0x804aa46:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804aa4a:   05 11 64 78 25                  	add eax, 0x25786411
0x804aa4f:   23 45 d0                        	and eax, dword ptr [ebp - 0x30]
0x804aa52:   85 c0                           	test eax, eax
0x804aa54:   74 50                           	je 0x804aaa6 <func_1+0x12ab>
0x804aa56:   0f b7 85 60 ff ff ff            	movzx eax, word ptr [ebp - 0xa0]
0x804aa5d:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x804aa61:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804aa64:   85 c0                           	test eax, eax
0x804aa66:   0f 95 c0                        	setne al
0x804aa69:   0f b6 d0                        	movzx edx, al
0x804aa6c:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804aa70:   39 c2                           	cmp edx, eax
0x804aa72:   7c 07                           	jl 0x804aa7b <func_1+0x1280>
0x804aa74:   b8 01 00 00 00                  	mov eax, 1
0x804aa79:   eb 05                           	jmp 0x804aa80 <func_1+0x1285>
0x804aa7b:   b8 00 00 00 00                  	mov eax, 0
0x804aa80:   39 85 c8 fe ff ff               	cmp dword ptr [ebp - 0x138], eax
0x804aa86:   0f 94 c0                        	sete al
0x804aa89:   0f b6 d0                        	movzx edx, al
0x804aa8c:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804aa8f:   0f b6 c0                        	movzx eax, al
0x804aa92:   89 c1                           	mov ecx, eax
0x804aa94:   d3 fa                           	sar edx, cl
0x804aa96:   89 d0                           	mov eax, edx
0x804aa98:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804aa9b:   0f 9c c0                        	setl al
0x804aa9e:   0f b6 c0                        	movzx eax, al
0x804aaa1:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804aaa4:   eb 46                           	jmp 0x804aaec <func_1+0x12f1>
0x804aaa6:   c7 85 ac fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x154], 1
0x804aab0:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804aab4:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804aaba:   0f 92 c0                        	setb al
0x804aabd:   0f b6 d0                        	movzx edx, al
0x804aac0:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804aac3:   0f be c0                        	movsx eax, al
0x804aac6:   29 c2                           	sub edx, eax
0x804aac8:   89 d0                           	mov eax, edx
0x804aaca:   31 45 9c                        	xor dword ptr [ebp - 0x64], eax
0x804aacd:   c6 45 e5 01                     	mov byte ptr [ebp - 0x1b], 1
0x804aad1:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x804aad8:   66 31 45 c4                     	xor word ptr [ebp - 0x3c], ax
0x804aadc:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804aae3:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aae6:   88 85 b3 fe ff ff               	mov byte ptr [ebp - 0x14d], al
0x804aaec:   83 bd 64 ff ff ff 05            	cmp dword ptr [ebp - 0x9c], 5
0x804aaf3:   0f 97 c0                        	seta al
0x804aaf6:   0f b6 d0                        	movzx edx, al
0x804aaf9:   0f bf 85 ce fe ff ff            	movsx eax, word ptr [ebp - 0x132]
0x804ab00:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804ab06:   0f 95 c0                        	setne al
0x804ab09:   0f b6 c0                        	movzx eax, al
0x804ab0c:   89 c1                           	mov ecx, eax
0x804ab0e:   d3 fa                           	sar edx, cl
0x804ab10:   89 d0                           	mov eax, edx
0x804ab12:   89 c7                           	mov edi, eax
0x804ab14:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804ab1a:   ba 00 00 00 00                  	mov edx, 0
0x804ab1f:   f7 f7                           	div edi
0x804ab21:   83 c0 01                        	add eax, 1
0x804ab24:   c0 f8 03                        	sar al, 3
0x804ab27:   83 e0 f1                        	and eax, 0xfffffff1
0x804ab2a:   f7 d8                           	neg eax
0x804ab2c:   89 c2                           	mov edx, eax
0x804ab2e:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804ab34:   31 d0                           	xor eax, edx
0x804ab36:   0f be d0                        	movsx edx, al
0x804ab39:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804ab3f:   0f be c0                        	movsx eax, al
0x804ab42:   89 c1                           	mov ecx, eax
0x804ab44:   d3 e2                           	shl edx, cl
0x804ab46:   89 d0                           	mov eax, edx
0x804ab48:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804ab4b:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804ab4f:   83 7d e8 2b                     	cmp dword ptr [ebp - 0x18], 0x2b
0x804ab53:   0f 84 b8 fe ff ff               	je 0x804aa11 <func_1+0x1216>
0x804ab59:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804ab5d:   83 c0 02                        	add eax, 2
0x804ab60:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804ab64:   66 83 7d be 01                  	cmp word ptr [ebp - 0x42], 1
0x804ab69:   0f 8f 69 fe ff ff               	jg 0x804a9d8 <func_1+0x11dd>
0x804ab6f:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804ab73:   0f 84 9f 00 00 00               	je 0x804ac18 <func_1+0x141d>
0x804ab79:   66 c7 85 d0 fe ff ff 06 00      	mov word ptr [ebp - 0x130], 6
0x804ab82:   66 83 bd ea fe ff ff 00         	cmp word ptr [ebp - 0x116], 0
0x804ab8a:   75 5a                           	jne 0x804abe6 <func_1+0x13eb>
0x804ab8c:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804ab8f:   89 c1                           	mov ecx, eax
0x804ab91:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804ab94:   8d 50 ff                        	lea edx, [eax - 1]
0x804ab97:   89 55 dc                        	mov dword ptr [ebp - 0x24], edx
0x804ab9a:   89 cb                           	mov ebx, ecx
0x804ab9c:   29 c3                           	sub ebx, eax
0x804ab9e:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804aba1:   88 85 60 fe ff ff               	mov byte ptr [ebp - 0x1a0], al
0x804aba7:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804abaa:   0f b6 c0                        	movzx eax, al
0x804abad:   c1 e0 05                        	shl eax, 5
0x804abb0:   83 c0 09                        	add eax, 9
0x804abb3:   0f bf d0                        	movsx edx, ax
0x804abb6:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804abb9:   98                              	cwde 
0x804abba:   89 c1                           	mov ecx, eax
0x804abbc:   d3 e2                           	shl edx, cl
0x804abbe:   89 d0                           	mov eax, edx
0x804abc0:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804abc3:   0f 93 c0                        	setae al
0x804abc6:   0f b6 c0                        	movzx eax, al
0x804abc9:   89 c2                           	mov edx, eax
0x804abcb:   0f b6 85 60 fe ff ff            	movzx eax, byte ptr [ebp - 0x1a0]
0x804abd2:   0f af c2                        	imul eax, edx
0x804abd5:   89 c2                           	mov edx, eax
0x804abd7:   89 d8                           	mov eax, ebx
0x804abd9:   0f af c2                        	imul eax, edx
0x804abdc:   0f be c0                        	movsx eax, al
0x804abdf:   c1 e0 06                        	shl eax, 6
0x804abe2:   85 c0                           	test eax, eax
0x804abe4:   74 07                           	je 0x804abed <func_1+0x13f2>
0x804abe6:   b8 01 00 00 00                  	mov eax, 1
0x804abeb:   eb 05                           	jmp 0x804abf2 <func_1+0x13f7>
0x804abed:   b8 00 00 00 00                  	mov eax, 0
0x804abf2:   3b 85 48 ff ff ff               	cmp eax, dword ptr [ebp - 0xb8]
0x804abf8:   7f 0a                           	jg 0x804ac04 <func_1+0x1409>
0x804abfa:   66 83 bd d0 fe ff ff 00         	cmp word ptr [ebp - 0x130], 0
0x804ac02:   74 07                           	je 0x804ac0b <func_1+0x1410>
0x804ac04:   b8 01 00 00 00                  	mov eax, 1
0x804ac09:   eb 05                           	jmp 0x804ac10 <func_1+0x1415>
0x804ac0b:   b8 00 00 00 00                  	mov eax, 0
0x804ac10:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804ac13:   e9 e9 00 00 00                  	jmp 0x804ad01 <func_1+0x1506>
0x804ac18:   c7 85 d8 fe ff ff 0e 83 40 60   	mov dword ptr [ebp - 0x128], 0x6040830e
0x804ac22:   c6 45 c7 f4                     	mov byte ptr [ebp - 0x39], 0xf4
0x804ac26:   e9 c9 00 00 00                  	jmp 0x804acf4 <func_1+0x14f9>
0x804ac2b:   c7 85 d4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x12c], 0xffffffff
0x804ac35:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804ac39:   74 7e                           	je 0x804acb9 <func_1+0x14be>
0x804ac3b:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804ac3f:   0f 94 c0                        	sete al
0x804ac42:   0f b6 c0                        	movzx eax, al
0x804ac45:   0f be 55 e5                     	movsx edx, byte ptr [ebp - 0x1b]
0x804ac49:   89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x804ac4c:   ba 00 00 00 00                  	mov edx, 0
0x804ac51:   f7 75 e0                        	div dword ptr [ebp - 0x20]
0x804ac54:   89 d0                           	mov eax, edx
0x804ac56:   0f bf d0                        	movsx edx, ax
0x804ac59:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804ac5c:   98                              	cwde 
0x804ac5d:   0f af c2                        	imul eax, edx
0x804ac60:   85 c0                           	test eax, eax
0x804ac62:   75 07                           	jne 0x804ac6b <func_1+0x1470>
0x804ac64:   80 bd 63 ff ff ff 00            	cmp byte ptr [ebp - 0x9d], 0
0x804ac6b:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804ac71:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804ac77:   0f 92 c0                        	setb al
0x804ac7a:   0f b6 d0                        	movzx edx, al
0x804ac7d:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804ac81:   0f b6 c0                        	movzx eax, al
0x804ac84:   0f af c2                        	imul eax, edx
0x804ac87:   85 c0                           	test eax, eax
0x804ac89:   74 07                           	je 0x804ac92 <func_1+0x1497>
0x804ac8b:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804ac92:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804ac97:   74 0d                           	je 0x804aca6 <func_1+0x14ab>
0x804ac99:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804ac9d:   74 07                           	je 0x804aca6 <func_1+0x14ab>
0x804ac9f:   b8 01 00 00 00                  	mov eax, 1
0x804aca4:   eb 05                           	jmp 0x804acab <func_1+0x14b0>
0x804aca6:   b8 00 00 00 00                  	mov eax, 0
0x804acab:   83 f8 f7                        	cmp eax, -9
0x804acae:   0f 94 c0                        	sete al
0x804acb1:   0f b6 c0                        	movzx eax, al
0x804acb4:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804acb7:   eb 25                           	jmp 0x804acde <func_1+0x14e3>
0x804acb9:   c6 85 d3 fe ff ff 01            	mov byte ptr [ebp - 0x12d], 1
0x804acc0:   83 bd 44 ff ff ff 01            	cmp dword ptr [ebp - 0xbc], 1
0x804acc7:   80 7d db 07                     	cmp byte ptr [ebp - 0x25], 7
0x804accb:   0f 97 c0                        	seta al
0x804acce:   0f b6 c0                        	movzx eax, al
0x804acd1:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804acd4:   0f be 85 d3 fe ff ff            	movsx eax, byte ptr [ebp - 0x12d]
0x804acdb:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804acde:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804ace1:   23 85 d8 fe ff ff               	and eax, dword ptr [ebp - 0x128]
0x804ace7:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804acea:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804acee:   75 10                           	jne 0x804ad00 <func_1+0x1505>
0x804acf0:   80 45 c7 04                     	add byte ptr [ebp - 0x39], 4
0x804acf4:   80 7d c7 38                     	cmp byte ptr [ebp - 0x39], 0x38
0x804acf8:   0f 85 2d ff ff ff               	jne 0x804ac2b <func_1+0x1430>
0x804acfe:   eb 01                           	jmp 0x804ad01 <func_1+0x1506>
0x804ad00:   90                              	nop 
0x804ad01:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804ad05:   83 85 74 ff ff ff 01            	add dword ptr [ebp - 0x8c], 1
0x804ad0c:   c7 45 88 ea ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffea
0x804ad13:   83 7d 88 e9                     	cmp dword ptr [ebp - 0x78], -0x17
0x804ad17:   0f 8c bd 00 00 00               	jl 0x804adda <func_1+0x15df>
0x804ad1d:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804ad24:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804ad2b:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804ad32:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804ad36:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804ad3a:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804ad40:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804ad44:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804ad4a:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804ad4e:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804ad54:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804ad58:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804ad5e:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804ad62:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804ad68:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804ad6c:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804ad70:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ad76:   50                              	push eax
0x804ad77:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ad7a:   52                              	push edx
0x804ad7b:   51                              	push ecx
0x804ad7c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ad7f:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ad82:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ad85:   57                              	push edi
0x804ad86:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ad89:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ad8c:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ad92:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ad98:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ad9b:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ad9e:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ada4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ada7:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804adaa:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804adb0:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804adb3:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804adb6:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804adbc:   56                              	push esi
0x804adbd:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804adc0:   53                              	push ebx
0x804adc1:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804adc4:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804adc7:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804adca:   e8 85 e8 ff ff                  	call 0x8049654 <set_var>
0x804adcf:   83 c4 70                        	add esp, 0x70
0x804add2:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804add5:   e9 b9 00 00 00                  	jmp 0x804ae93 <func_1+0x1698>
0x804adda:   0f bf 85 7a ff ff ff            	movsx eax, word ptr [ebp - 0x86]
0x804ade1:   0f bf 95 7c ff ff ff            	movsx edx, word ptr [ebp - 0x84]
0x804ade8:   0f be 8d 7f ff ff ff            	movsx ecx, byte ptr [ebp - 0x81]
0x804adef:   0f bf 7d be                     	movsx edi, word ptr [ebp - 0x42]
0x804adf3:   0f b7 75 c4                     	movzx esi, word ptr [ebp - 0x3c]
0x804adf7:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804adfd:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804ae01:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804ae07:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804ae0b:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804ae11:   0f b6 5d db                     	movzx ebx, byte ptr [ebp - 0x25]
0x804ae15:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804ae1b:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804ae1f:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804ae25:   0f bf 75 e6                     	movsx esi, word ptr [ebp - 0x1a]
0x804ae29:   0f b6 5d 8f                     	movzx ebx, byte ptr [ebp - 0x71]
0x804ae2d:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804ae33:   50                              	push eax
0x804ae34:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ae37:   52                              	push edx
0x804ae38:   51                              	push ecx
0x804ae39:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804ae3c:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ae3f:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ae42:   57                              	push edi
0x804ae43:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804ae46:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804ae49:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ae4f:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ae55:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ae58:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804ae5b:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ae61:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ae64:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ae67:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804ae6d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ae70:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ae73:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ae79:   56                              	push esi
0x804ae7a:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ae7d:   53                              	push ebx
0x804ae7e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ae81:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ae84:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804ae87:   e8 c8 e7 ff ff                  	call 0x8049654 <set_var>
0x804ae8c:   83 c4 70                        	add esp, 0x70
0x804ae8f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804ae93:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ae96:   5b                              	pop ebx
0x804ae97:   5e                              	pop esi
0x804ae98:   5f                              	pop edi
0x804ae99:   5d                              	pop ebp
0x804ae9a:   c3                              	ret 
; function: main at 0x804ae9b -- 0x804b265
0x804ae9b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ae9f:   83 e4 f0                        	and esp, 0xfffffff0
0x804aea2:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aea5:   55                              	push ebp
0x804aea6:   89 e5                           	mov ebp, esp
0x804aea8:   53                              	push ebx
0x804aea9:   51                              	push ecx
0x804aeaa:   83 ec 10                        	sub esp, 0x10
0x804aead:   e8 de d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aeb2:   81 c3 4e 31 00 00               	add ebx, 0x314e
0x804aeb8:   89 c8                           	mov eax, ecx
0x804aeba:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aec1:   83 38 02                        	cmp dword ptr [eax], 2
0x804aec4:   75 26                           	jne 0x804aeec <main+0x51>
0x804aec6:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aec9:   83 c0 04                        	add eax, 4
0x804aecc:   8b 00                           	mov eax, dword ptr [eax]
0x804aece:   83 ec 08                        	sub esp, 8
0x804aed1:   8d 93 4c d3 ff ff               	lea edx, [ebx - 0x2cb4]
0x804aed7:   52                              	push edx
0x804aed8:   50                              	push eax
0x804aed9:   e8 22 d4 ff ff                  	call 0x8048300 <strcmp>
0x804aede:   83 c4 10                        	add esp, 0x10
0x804aee1:   85 c0                           	test eax, eax
0x804aee3:   75 07                           	jne 0x804aeec <main+0x51>
0x804aee5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aeec:   e8 65 d5 ff ff                  	call 0x8048456 <platform_main_begin>
0x804aef1:   e8 75 e5 ff ff                  	call 0x804946b <crc32_gentab>
0x804aef6:   e8 00 e9 ff ff                  	call 0x80497fb <func_1>
0x804aefb:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804af01:   83 ec 04                        	sub esp, 4
0x804af04:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af07:   8d 93 4e d3 ff ff               	lea edx, [ebx - 0x2cb2]
0x804af0d:   52                              	push edx
0x804af0e:   50                              	push eax
0x804af0f:   e8 63 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af14:   83 c4 10                        	add esp, 0x10
0x804af17:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804af1d:   89 c2                           	mov edx, eax
0x804af1f:   83 ec 04                        	sub esp, 4
0x804af22:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af25:   8d 83 52 d3 ff ff               	lea eax, [ebx - 0x2cae]
0x804af2b:   50                              	push eax
0x804af2c:   52                              	push edx
0x804af2d:   e8 45 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af32:   83 c4 10                        	add esp, 0x10
0x804af35:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804af3b:   89 c2                           	mov edx, eax
0x804af3d:   83 ec 04                        	sub esp, 4
0x804af40:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af43:   8d 83 56 d3 ff ff               	lea eax, [ebx - 0x2caa]
0x804af49:   50                              	push eax
0x804af4a:   52                              	push edx
0x804af4b:   e8 27 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af50:   83 c4 10                        	add esp, 0x10
0x804af53:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804af5a:   0f b6 c0                        	movzx eax, al
0x804af5d:   83 ec 04                        	sub esp, 4
0x804af60:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af63:   8d 93 5a d3 ff ff               	lea edx, [ebx - 0x2ca6]
0x804af69:   52                              	push edx
0x804af6a:   50                              	push eax
0x804af6b:   e8 07 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af70:   83 c4 10                        	add esp, 0x10
0x804af73:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804af79:   83 ec 04                        	sub esp, 4
0x804af7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af7f:   8d 93 5f d3 ff ff               	lea edx, [ebx - 0x2ca1]
0x804af85:   52                              	push edx
0x804af86:   50                              	push eax
0x804af87:   e8 eb e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af8c:   83 c4 10                        	add esp, 0x10
0x804af8f:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804af96:   98                              	cwde 
0x804af97:   83 ec 04                        	sub esp, 4
0x804af9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af9d:   8d 93 64 d3 ff ff               	lea edx, [ebx - 0x2c9c]
0x804afa3:   52                              	push edx
0x804afa4:   50                              	push eax
0x804afa5:   e8 cd e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afaa:   83 c4 10                        	add esp, 0x10
0x804afad:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804afb4:   0f be c0                        	movsx eax, al
0x804afb7:   83 ec 04                        	sub esp, 4
0x804afba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afbd:   8d 93 6a d3 ff ff               	lea edx, [ebx - 0x2c96]
0x804afc3:   52                              	push edx
0x804afc4:   50                              	push eax
0x804afc5:   e8 ad e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afca:   83 c4 10                        	add esp, 0x10
0x804afcd:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804afd3:   83 ec 04                        	sub esp, 4
0x804afd6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd9:   8d 93 70 d3 ff ff               	lea edx, [ebx - 0x2c90]
0x804afdf:   52                              	push edx
0x804afe0:   50                              	push eax
0x804afe1:   e8 91 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afe6:   83 c4 10                        	add esp, 0x10
0x804afe9:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804afef:   83 ec 04                        	sub esp, 4
0x804aff2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff5:   8d 93 76 d3 ff ff               	lea edx, [ebx - 0x2c8a]
0x804affb:   52                              	push edx
0x804affc:   50                              	push eax
0x804affd:   e8 75 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b002:   83 c4 10                        	add esp, 0x10
0x804b005:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804b00c:   0f b6 c0                        	movzx eax, al
0x804b00f:   83 ec 04                        	sub esp, 4
0x804b012:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b015:   8d 93 7c d3 ff ff               	lea edx, [ebx - 0x2c84]
0x804b01b:   52                              	push edx
0x804b01c:   50                              	push eax
0x804b01d:   e8 55 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b022:   83 c4 10                        	add esp, 0x10
0x804b025:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804b02b:   89 c2                           	mov edx, eax
0x804b02d:   83 ec 04                        	sub esp, 4
0x804b030:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b033:   8d 83 82 d3 ff ff               	lea eax, [ebx - 0x2c7e]
0x804b039:   50                              	push eax
0x804b03a:   52                              	push edx
0x804b03b:   e8 37 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b040:   83 c4 10                        	add esp, 0x10
0x804b043:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b049:   83 ec 04                        	sub esp, 4
0x804b04c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b04f:   8d 93 88 d3 ff ff               	lea edx, [ebx - 0x2c78]
0x804b055:   52                              	push edx
0x804b056:   50                              	push eax
0x804b057:   e8 1b e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b05c:   83 c4 10                        	add esp, 0x10
0x804b05f:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804b066:   0f b7 c0                        	movzx eax, ax
0x804b069:   83 ec 04                        	sub esp, 4
0x804b06c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b06f:   8d 93 8e d3 ff ff               	lea edx, [ebx - 0x2c72]
0x804b075:   52                              	push edx
0x804b076:   50                              	push eax
0x804b077:   e8 fb e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b07c:   83 c4 10                        	add esp, 0x10
0x804b07f:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b085:   89 c2                           	mov edx, eax
0x804b087:   83 ec 04                        	sub esp, 4
0x804b08a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b08d:   8d 83 94 d3 ff ff               	lea eax, [ebx - 0x2c6c]
0x804b093:   50                              	push eax
0x804b094:   52                              	push edx
0x804b095:   e8 dd e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b09a:   83 c4 10                        	add esp, 0x10
0x804b09d:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804b0a3:   83 ec 04                        	sub esp, 4
0x804b0a6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0a9:   8d 93 9a d3 ff ff               	lea edx, [ebx - 0x2c66]
0x804b0af:   52                              	push edx
0x804b0b0:   50                              	push eax
0x804b0b1:   e8 c1 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0b6:   83 c4 10                        	add esp, 0x10
0x804b0b9:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804b0c0:   0f b6 c0                        	movzx eax, al
0x804b0c3:   83 ec 04                        	sub esp, 4
0x804b0c6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0c9:   8d 93 a0 d3 ff ff               	lea edx, [ebx - 0x2c60]
0x804b0cf:   52                              	push edx
0x804b0d0:   50                              	push eax
0x804b0d1:   e8 a1 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0d6:   83 c4 10                        	add esp, 0x10
0x804b0d9:   0f b7 83 b0 04 00 00            	movzx eax, word ptr [ebx + 0x4b0]
0x804b0e0:   0f b7 c0                        	movzx eax, ax
0x804b0e3:   83 ec 04                        	sub esp, 4
0x804b0e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0e9:   8d 93 a6 d3 ff ff               	lea edx, [ebx - 0x2c5a]
0x804b0ef:   52                              	push edx
0x804b0f0:   50                              	push eax
0x804b0f1:   e8 81 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0f6:   83 c4 10                        	add esp, 0x10
0x804b0f9:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804b0ff:   89 c2                           	mov edx, eax
0x804b101:   83 ec 04                        	sub esp, 4
0x804b104:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b107:   8d 83 ac d3 ff ff               	lea eax, [ebx - 0x2c54]
0x804b10d:   50                              	push eax
0x804b10e:   52                              	push edx
0x804b10f:   e8 63 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b114:   83 c4 10                        	add esp, 0x10
0x804b117:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b11d:   89 c2                           	mov edx, eax
0x804b11f:   83 ec 04                        	sub esp, 4
0x804b122:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b125:   8d 83 b2 d3 ff ff               	lea eax, [ebx - 0x2c4e]
0x804b12b:   50                              	push eax
0x804b12c:   52                              	push edx
0x804b12d:   e8 45 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b132:   83 c4 10                        	add esp, 0x10
0x804b135:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804b13c:   98                              	cwde 
0x804b13d:   83 ec 04                        	sub esp, 4
0x804b140:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b143:   8d 93 b8 d3 ff ff               	lea edx, [ebx - 0x2c48]
0x804b149:   52                              	push edx
0x804b14a:   50                              	push eax
0x804b14b:   e8 27 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b150:   83 c4 10                        	add esp, 0x10
0x804b153:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b159:   83 ec 04                        	sub esp, 4
0x804b15c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b15f:   8d 93 be d3 ff ff               	lea edx, [ebx - 0x2c42]
0x804b165:   52                              	push edx
0x804b166:   50                              	push eax
0x804b167:   e8 0b e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b16c:   83 c4 10                        	add esp, 0x10
0x804b16f:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b175:   89 c2                           	mov edx, eax
0x804b177:   83 ec 04                        	sub esp, 4
0x804b17a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b17d:   8d 83 c4 d3 ff ff               	lea eax, [ebx - 0x2c3c]
0x804b183:   50                              	push eax
0x804b184:   52                              	push edx
0x804b185:   e8 ed e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b18a:   83 c4 10                        	add esp, 0x10
0x804b18d:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b193:   89 c2                           	mov edx, eax
0x804b195:   83 ec 04                        	sub esp, 4
0x804b198:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b19b:   8d 83 ca d3 ff ff               	lea eax, [ebx - 0x2c36]
0x804b1a1:   50                              	push eax
0x804b1a2:   52                              	push edx
0x804b1a3:   e8 cf e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1a8:   83 c4 10                        	add esp, 0x10
0x804b1ab:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804b1b2:   0f be c0                        	movsx eax, al
0x804b1b5:   83 ec 04                        	sub esp, 4
0x804b1b8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1bb:   8d 93 d0 d3 ff ff               	lea edx, [ebx - 0x2c30]
0x804b1c1:   52                              	push edx
0x804b1c2:   50                              	push eax
0x804b1c3:   e8 af e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1c8:   83 c4 10                        	add esp, 0x10
0x804b1cb:   0f b7 83 72 00 00 00            	movzx eax, word ptr [ebx + 0x72]
0x804b1d2:   98                              	cwde 
0x804b1d3:   83 ec 04                        	sub esp, 4
0x804b1d6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1d9:   8d 93 d6 d3 ff ff               	lea edx, [ebx - 0x2c2a]
0x804b1df:   52                              	push edx
0x804b1e0:   50                              	push eax
0x804b1e1:   e8 91 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1e6:   83 c4 10                        	add esp, 0x10
0x804b1e9:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b1ef:   83 ec 04                        	sub esp, 4
0x804b1f2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1f5:   8d 93 dc d3 ff ff               	lea edx, [ebx - 0x2c24]
0x804b1fb:   52                              	push edx
0x804b1fc:   50                              	push eax
0x804b1fd:   e8 75 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b202:   83 c4 10                        	add esp, 0x10
0x804b205:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804b20c:   98                              	cwde 
0x804b20d:   83 ec 04                        	sub esp, 4
0x804b210:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b213:   8d 93 e2 d3 ff ff               	lea edx, [ebx - 0x2c1e]
0x804b219:   52                              	push edx
0x804b21a:   50                              	push eax
0x804b21b:   e8 57 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b220:   83 c4 10                        	add esp, 0x10
0x804b223:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b229:   83 ec 04                        	sub esp, 4
0x804b22c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b22f:   8d 93 e8 d3 ff ff               	lea edx, [ebx - 0x2c18]
0x804b235:   52                              	push edx
0x804b236:   50                              	push eax
0x804b237:   e8 3b e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b23c:   83 c4 10                        	add esp, 0x10
0x804b23f:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b245:   f7 d0                           	not eax
0x804b247:   83 ec 08                        	sub esp, 8
0x804b24a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b24d:   50                              	push eax
0x804b24e:   e8 13 d2 ff ff                  	call 0x8048466 <platform_main_end>
0x804b253:   83 c4 10                        	add esp, 0x10
0x804b256:   b8 00 00 00 00                  	mov eax, 0
0x804b25b:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b25e:   59                              	pop ecx
0x804b25f:   5b                              	pop ebx
0x804b260:   5d                              	pop ebp
0x804b261:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b264:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b265 -- 0x804b269
0x804b265:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b268:   c3                              	ret 
; data inside code section at 0x804b269 -- 0x804b270
0x804b269:   66 90 66 90 66 90 90                               |f.f.f..         |
; function: __libc_csu_init at 0x804b270 -- 0x804b2cd
0x804b270:   55                              	push ebp
0x804b271:   57                              	push edi
0x804b272:   56                              	push esi
0x804b273:   53                              	push ebx
0x804b274:   e8 17 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b279:   81 c3 87 2d 00 00               	add ebx, 0x2d87
0x804b27f:   83 ec 0c                        	sub esp, 0xc
0x804b282:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b286:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b28c:   e8 3b d0 ff ff                  	call 0x80482cc <_init>
0x804b291:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b297:   29 c6                           	sub esi, eax
0x804b299:   c1 fe 02                        	sar esi, 2
0x804b29c:   85 f6                           	test esi, esi
0x804b29e:   74 25                           	je 0x804b2c5 <__libc_csu_init+0x55>
0x804b2a0:   31 ff                           	xor edi, edi
0x804b2a2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b2a8:   83 ec 04                        	sub esp, 4
0x804b2ab:   55                              	push ebp
0x804b2ac:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b2b0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b2b4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b2bb:   83 c7 01                        	add edi, 1
0x804b2be:   83 c4 10                        	add esp, 0x10
0x804b2c1:   39 fe                           	cmp esi, edi
0x804b2c3:   75 e3                           	jne 0x804b2a8 <__libc_csu_init+0x38>
0x804b2c5:   83 c4 0c                        	add esp, 0xc
0x804b2c8:   5b                              	pop ebx
0x804b2c9:   5e                              	pop esi
0x804b2ca:   5f                              	pop edi
0x804b2cb:   5d                              	pop ebp
0x804b2cc:   c3                              	ret 
; data inside code section at 0x804b2cd -- 0x804b2d0
0x804b2cd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b2d0 -- 0x804b2d2
0x804b2d0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b2d4 -- 0x804b2e8
0x804b2d4:   53                              	push ebx
0x804b2d5:   83 ec 08                        	sub esp, 8
0x804b2d8:   e8 b3 d0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b2dd:   81 c3 23 2d 00 00               	add ebx, 0x2d23
0x804b2e3:   83 c4 08                        	add esp, 8
0x804b2e6:   5b                              	pop ebx
0x804b2e7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ec b2 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b2e8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b2f8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b308:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b318:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b328:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b338:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b348:   25 64 0a 00 31 00 67 5f  32 00 67 5f 33 00 67 5f   |%d..1.g_2.g_3.g_|
0x804b358:   34 00 67 5f 31 37 00 67  5f 32 34 00 67 5f 31 30   |4.g_17.g_24.g_10|
0x804b368:   34 00 67 5f 31 30 39 00  67 5f 31 31 34 00 67 5f   |4.g_109.g_114.g_|
0x804b378:   31 32 36 00 67 5f 31 34  37 00 67 5f 31 36 36 00   |126.g_147.g_166.|
0x804b388:   67 5f 31 38 32 00 67 5f  32 30 32 00 67 5f 32 32   |g_182.g_202.g_22|
0x804b398:   33 00 67 5f 32 32 38 00  67 5f 32 33 30 00 67 5f   |3.g_228.g_230.g_|
0x804b3a8:   32 37 30 00 67 5f 32 37  35 00 67 5f 32 37 36 00   |270.g_275.g_276.|
0x804b3b8:   67 5f 32 37 37 00 67 5f  32 37 38 00 67 5f 32 39   |g_277.g_278.g_29|
0x804b3c8:   34 00 67 5f 33 39 35 00  67 5f 33 39 36 00 67 5f   |4.g_395.g_396.g_|
0x804b3d8:   33 39 39 00 67 5f 34 30  30 00 67 5f 34 30 35 00   |399.g_400.g_405.|
0x804b3e8:   67 5f 34 30 36 00 00 00  00 00 00 3f ff ff ff 7e   |g_406......?...~|
0x804b3f8:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b408:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b418:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b428:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b438:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b448:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b458:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b458:   01 1b 03 3b b8 02 00 00  56 00 00 00 98 ce ff ff   |...;....V.......|
0x804b468:   e8 02 00 00 d8 ce ff ff  0c 03 00 00 28 cf ff ff   |............(...|
0x804b478:   d4 02 00 00 fe cf ff ff  20 03 00 00 0e d0 ff ff   |........ .......|
0x804b488:   40 03 00 00 3c d0 ff ff  64 03 00 00 5a d0 ff ff   |@...<...d...Z...|
0x804b498:   84 03 00 00 82 d0 ff ff  a4 03 00 00 ac d0 ff ff   |................|
0x804b4a8:   c4 03 00 00 d5 d0 ff ff  e4 03 00 00 18 d1 ff ff   |................|
0x804b4b8:   04 04 00 00 59 d1 ff ff  24 04 00 00 b1 d1 ff ff   |....Y...$.......|
0x804b4c8:   48 04 00 00 03 d2 ff ff  6c 04 00 00 40 d2 ff ff   |H.......l...@...|
0x804b4d8:   8c 04 00 00 77 d2 ff ff  ac 04 00 00 96 d2 ff ff   |....w...........|
0x804b4e8:   cc 04 00 00 c0 d2 ff ff  ec 04 00 00 ec d2 ff ff   |................|
0x804b4f8:   0c 05 00 00 17 d3 ff ff  2c 05 00 00 60 d3 ff ff   |........,...`...|
0x804b508:   4c 05 00 00 a7 d3 ff ff  6c 05 00 00 01 d4 ff ff   |L.......l.......|
0x804b518:   90 05 00 00 55 d4 ff ff  b4 05 00 00 94 d4 ff ff   |....U...........|
0x804b528:   d4 05 00 00 cd d4 ff ff  f4 05 00 00 ef d4 ff ff   |................|
0x804b538:   14 06 00 00 3d d5 ff ff  34 06 00 00 79 d5 ff ff   |....=...4...y...|
0x804b548:   54 06 00 00 02 d6 ff ff  74 06 00 00 34 d6 ff ff   |T.......t...4...|
0x804b558:   94 06 00 00 64 d6 ff ff  b4 06 00 00 a9 d6 ff ff   |....d...........|
0x804b568:   d4 06 00 00 e8 d6 ff ff  f4 06 00 00 1a d7 ff ff   |................|
0x804b578:   14 07 00 00 46 d7 ff ff  34 07 00 00 64 d7 ff ff   |....F...4...d...|
0x804b588:   54 07 00 00 8c d7 ff ff  74 07 00 00 b1 d7 ff ff   |T.......t.......|
0x804b598:   94 07 00 00 d6 d7 ff ff  b4 07 00 00 0d d8 ff ff   |................|
0x804b5a8:   d4 07 00 00 41 d8 ff ff  f4 07 00 00 93 d8 ff ff   |....A...........|
0x804b5b8:   18 08 00 00 df d8 ff ff  3c 08 00 00 16 d9 ff ff   |........<.......|
0x804b5c8:   5c 08 00 00 47 d9 ff ff  7c 08 00 00 66 d9 ff ff   |\...G...|...f...|
0x804b5d8:   9c 08 00 00 90 d9 ff ff  bc 08 00 00 b8 d9 ff ff   |................|
0x804b5e8:   dc 08 00 00 e1 d9 ff ff  fc 08 00 00 1d da ff ff   |................|
0x804b5f8:   1c 09 00 00 57 da ff ff  3c 09 00 00 aa da ff ff   |....W...<.......|
0x804b608:   60 09 00 00 f7 da ff ff  84 09 00 00 2f db ff ff   |`.........../...|
0x804b618:   a4 09 00 00 61 db ff ff  c4 09 00 00 75 db ff ff   |....a.......u...|
0x804b628:   e4 09 00 00 8c db ff ff  04 0a 00 00 a1 db ff ff   |................|
0x804b638:   24 0a 00 00 b7 db ff ff  44 0a 00 00 de db ff ff   |$.......D.......|
0x804b648:   64 0a 00 00 03 dc ff ff  84 0a 00 00 42 dc ff ff   |d...........B...|
0x804b658:   a4 0a 00 00 7b dc ff ff  c4 0a 00 00 a7 dc ff ff   |....{...........|
0x804b668:   e4 0a 00 00 cd dc ff ff  04 0b 00 00 0f dd ff ff   |................|
0x804b678:   24 0b 00 00 51 dd ff ff  44 0b 00 00 93 dd ff ff   |$...Q...D.......|
0x804b688:   64 0b 00 00 08 de ff ff  84 0b 00 00 65 de ff ff   |d...........e...|
0x804b698:   a4 0b 00 00 c2 de ff ff  c4 0b 00 00 1f df ff ff   |................|
0x804b6a8:   e4 0b 00 00 af df ff ff  04 0c 00 00 13 e0 ff ff   |................|
0x804b6b8:   24 0c 00 00 83 e0 ff ff  44 0c 00 00 ca e0 ff ff   |$.......D.......|
0x804b6c8:   68 0c 00 00 1f e1 ff ff  88 0c 00 00 66 e1 ff ff   |h...........f...|
0x804b6d8:   ac 0c 00 00 ce e1 ff ff  d0 0c 00 00 fc e1 ff ff   |................|
0x804b6e8:   f4 0c 00 00 a3 e3 ff ff  24 0d 00 00 43 fa ff ff   |........$...C...|
0x804b6f8:   54 0d 00 00 0d fe ff ff  8c 0d 00 00 18 fe ff ff   |T...............|
0x804b708:   a0 0d 00 00 78 fe ff ff  ec 0d 00 00 14            |....x........   |
; section: .eh_frame
0x804b714:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b724:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b734:   4c cc ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |L........... ...|
0x804b744:   30 00 00 00 a8 cb ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b754:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b764:   10 00 00 00 54 00 00 00  c4 cb ff ff 08 00 00 00   |....T...........|
0x804b774:   00 00 00 00 1c 00 00 00  68 00 00 00 d6 cc ff ff   |........h.......|
0x804b784:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b794:   04 04 00 00 20 00 00 00  88 00 00 00 c6 cc ff ff   |.... ...........|
0x804b7a4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b7b4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b7c4:   d0 cc ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7d4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b7e4:   ce cc ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b7f4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b804:   d6 cc ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b814:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b824:   e0 cc ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b834:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b844:   e9 cc ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b854:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b864:   0c cd ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b874:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b884:   2d cd ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |-...X....A....B.|
0x804b894:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b8a4:   90 01 00 00 61 cd ff ff  52 00 00 00 00 41 0e 08   |....a...R....A..|
0x804b8b4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b8c4:   1c 00 00 00 b4 01 00 00  8f cd ff ff 3d 00 00 00   |............=...|
0x804b8d4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b8e4:   1c 00 00 00 d4 01 00 00  ac cd ff ff 37 00 00 00   |............7...|
0x804b8f4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b904:   1c 00 00 00 f4 01 00 00  c3 cd ff ff 1f 00 00 00   |................|
0x804b914:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b924:   1c 00 00 00 14 02 00 00  c2 cd ff ff 2a 00 00 00   |............*...|
0x804b934:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b944:   1c 00 00 00 34 02 00 00  cc cd ff ff 2c 00 00 00   |....4.......,...|
0x804b954:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b964:   1c 00 00 00 54 02 00 00  d8 cd ff ff 2b 00 00 00   |....T.......+...|
0x804b974:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b984:   1c 00 00 00 74 02 00 00  e3 cd ff ff 49 00 00 00   |....t.......I...|
0x804b994:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b9a4:   1c 00 00 00 94 02 00 00  0c ce ff ff 47 00 00 00   |............G...|
0x804b9b4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b9c4:   20 00 00 00 b4 02 00 00  33 ce ff ff 5a 00 00 00   | .......3...Z...|
0x804b9d4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b9e4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 69 ce ff ff   |.... .......i...|
0x804b9f4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804ba04:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804ba14:   99 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804ba24:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804ba34:   b8 ce ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804ba44:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804ba54:   d1 ce ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804ba64:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804ba74:   d3 ce ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804ba84:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ba94:   01 cf ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804baa4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bab4:   1d cf ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bac4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bad4:   86 cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bae4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804baf4:   98 cf ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804bb04:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bb14:   a8 cf ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804bb24:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bb34:   cd cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bb44:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bb54:   ec cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bb64:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bb74:   fe cf ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bb84:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bb94:   0a d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bba4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bbb4:   08 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bbc4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bbd4:   10 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bbe4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bbf4:   15 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc04:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bc14:   1a d0 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bc24:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bc34:   31 d0 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |1...4....A....B.|
0x804bc44:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bc54:   45 d0 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |E...R....A....B.|
0x804bc64:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bc74:   60 05 00 00 73 d0 ff ff  4c 00 00 00 00 41 0e 08   |`...s...L....A..|
0x804bc84:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bc94:   1c 00 00 00 84 05 00 00  9b d0 ff ff 37 00 00 00   |............7...|
0x804bca4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bcb4:   1c 00 00 00 a4 05 00 00  b2 d0 ff ff 31 00 00 00   |............1...|
0x804bcc4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bcd4:   1c 00 00 00 c4 05 00 00  c3 d0 ff ff 1f 00 00 00   |................|
0x804bce4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bcf4:   1c 00 00 00 e4 05 00 00  c2 d0 ff ff 2a 00 00 00   |............*...|
0x804bd04:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bd14:   1c 00 00 00 04 06 00 00  cc d0 ff ff 28 00 00 00   |............(...|
0x804bd24:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bd34:   1c 00 00 00 24 06 00 00  d4 d0 ff ff 29 00 00 00   |....$.......)...|
0x804bd44:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bd54:   1c 00 00 00 44 06 00 00  dd d0 ff ff 3c 00 00 00   |....D.......<...|
0x804bd64:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bd74:   1c 00 00 00 64 06 00 00  f9 d0 ff ff 3a 00 00 00   |....d.......:...|
0x804bd84:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bd94:   20 00 00 00 84 06 00 00  13 d1 ff ff 53 00 00 00   | ...........S...|
0x804bda4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bdb4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 42 d1 ff ff   |.... .......B...|
0x804bdc4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bdd4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bde4:   6b d1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |k...8....A....B.|
0x804bdf4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804be04:   83 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804be14:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804be24:   95 d1 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be34:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804be44:   89 d1 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be54:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804be64:   80 d1 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be74:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804be84:   75 d1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804be94:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bea4:   6b d1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |k...'....A....B.|
0x804beb4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bec4:   72 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |r...%....A....B.|
0x804bed4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bee4:   77 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |w...?....A....B.|
0x804bef4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bf04:   96 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bf14:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bf24:   af d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bf34:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bf44:   bb d1 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bf54:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bf64:   c1 d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bf74:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bf84:   e3 d1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bf94:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bfa4:   05 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bfb4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bfc4:   27 d2 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |'...u....A....B.|
0x804bfd4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bfe4:   7c d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   ||...]....A....B.|
0x804bff4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c004:   b9 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c014:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c024:   f6 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c034:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c044:   33 d3 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |3........A....B.|
0x804c054:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c064:   a3 d3 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c074:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c084:   e7 d3 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804c094:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c0a4:   37 d4 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |7...G....A....B.|
0x804c0b4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c0c4:   b0 09 00 00 5a d4 ff ff  55 00 00 00 00 41 0e 08   |....Z...U....A..|
0x804c0d4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c0e4:   d0 09 00 00 8f d4 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c0f4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c104:   20 00 00 00 f4 09 00 00  b2 d4 ff ff 68 00 00 00   | ...........h...|
0x804c114:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c124:   0c 04 04 00 20 00 00 00  18 0a 00 00 f6 d4 ff ff   |.... ...........|
0x804c134:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804c144:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804c154:   00 d5 ff ff a7 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c164:   05 46 87 03 86 04 83 05  03 9a 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804c174:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804c184:   77 d6 ff ff a0 16 00 00  00 41 0e 08 85 02 42 0d   |w........A....B.|
0x804c194:   05 49 87 03 86 04 83 05  03 90 16 c3 41 c6 41 c7   |.I..........A.A.|
0x804c1a4:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804c1b4:   e7 ec ff ff ca 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804c1c4:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 b5   |.u.D..ux....u|..|
0x804c1d4:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804c1e4:   10 00 00 00 d4 0a 00 00  79 f0 ff ff 04 00 00 00   |........y.......|
0x804c1f4:   00 00 00 00 48 00 00 00  e8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804c204:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c214:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c224:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c234:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c244:   10 00 00 00 34 0b 00 00  84 f0 ff ff 02 00 00 00   |....4...........|
0x804c254:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 d4 b2 04 08  19 00 00 00 0c df 04 08   |................|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 05 00 00 00   |................|
0x804e028:   f8 ff ff ff 03 00 00 00  9e f5 47 31 ff 00 00 00   |..........G1....|
0x804e038:   e0 ab f5 64 bd b9 10 0b  ff 00 00 00 28 c3 65 ca   |...d........(.e.|
0x804e048:   01 00 00 00 fd ff 00 00  fb 55 9f 59 01 00 00 00   |.........U.Y....|
0x804e058:   fd ff ff ff 01 00 00 00  f4 c8 00 00 30 f7 5f b6   |............0._.|
0x804e068:   21 02 6a 29 ff ff ff ff  06 00 e6 b3 80 d4 8a 5e   |!.j)...........^|
0x804e078:   d5 cc 00 00 01 00 00 00  00                        |.........       |
