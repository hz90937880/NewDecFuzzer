;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:00:43
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 10 dd ff ff               	lea eax, [ebx - 0x22f0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 b0 dc ff ff               	lea eax, [ebx - 0x2350]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 97 a8 04 08               	mov eax, 0x804a897
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 4a 28 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 36 28 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 30 dd ff ff               	lea edx, [eax - 0x22d0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 09 28 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 eb 27 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 c3 27 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 99 27 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 70 27 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 2d 27 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 eb 26 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 93 26 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 42 26 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 05 26 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 ce 25 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 af 25 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 85 25 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 59 25 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 2e 25 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 e5 24 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 9d 24 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 43 24 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 f0 23 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 b1 23 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 7b 23 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 59 23 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 0b 23 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 cf 22 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 46 22 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 14 22 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 e4 21 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 9f 21 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 60 21 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 2e 21 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 ff 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 e1 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 b9 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 94 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 6f 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 38 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 03 20 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 b1 1f 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 66 1f 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 2f 1f 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 fe 1e 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 df 1e 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 b5 1e 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 8d 1e 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 64 1e 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 28 1e 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 ed 1d 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 9a 1d 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 4e 1d 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 16 1d 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 e7 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 d3 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 bc 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 a7 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 91 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 6a 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 45 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 06 1c 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 cd 1b 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 a1 1b 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 7b 1b 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 38 de ff ff               	fld dword ptr [eax - 0x21c8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 38 de ff ff               	fld dword ptr [eax - 0x21c8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 3c de ff ff               	fld dword ptr [eax - 0x21c4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 39 1b 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 38 de ff ff               	fld dword ptr [eax - 0x21c8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 38 de ff ff               	fld dword ptr [eax - 0x21c8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 3c de ff ff               	fld dword ptr [eax - 0x21c4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 f7 1a 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 40 de ff ff               	fld dword ptr [eax - 0x21c0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 44 de ff ff               	fld dword ptr [eax - 0x21bc]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 48 de ff ff               	fld dword ptr [eax - 0x21b8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 b5 1a 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 4c de ff ff               	fld dword ptr [eax - 0x21b4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 50 de ff ff               	fld dword ptr [eax - 0x21b0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 54 de ff ff               	fld dword ptr [eax - 0x21ac]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 3d 1a 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 58 de ff ff               	fld qword ptr [eax - 0x21a8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 58 de ff ff               	fld qword ptr [eax - 0x21a8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 60 de ff ff               	fld qword ptr [eax - 0x21a0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 e0 19 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 58 de ff ff               	fld qword ptr [eax - 0x21a8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 58 de ff ff               	fld qword ptr [eax - 0x21a8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 60 de ff ff               	fld qword ptr [eax - 0x21a0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 83 19 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 68 de ff ff               	fld qword ptr [eax - 0x2198]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 70 de ff ff               	fld qword ptr [eax - 0x2190]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 78 de ff ff               	fld qword ptr [eax - 0x2188]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 26 19 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 80 de ff ff               	fld qword ptr [eax - 0x2180]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 88 de ff ff               	fld qword ptr [eax - 0x2178]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 90 de ff ff               	fld qword ptr [eax - 0x2170]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 96 18 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 98 de ff ff               	fld dword ptr [eax - 0x2168]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 9c de ff ff               	fld dword ptr [eax - 0x2164]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 32 18 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 c1 17 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 7e 17 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 40 dd ff ff               	lea eax, [ebx - 0x22c0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 64 dd ff ff               	lea eax, [ebx - 0x229c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049840
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 78                        	sub esp, 0x78
0x804962f:   e8 78 16 00 00                  	call 0x804acac <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049646:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049649:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x804964c:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804964f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049652:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049655:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049658:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804965b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804965e:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049661:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049664:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049667:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804966a:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804966d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049670:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049673:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049676:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049679:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804967c:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804967f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049682:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049685:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049688:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804968b:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804968e:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049691:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049697:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x804969b:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804969e:   89 c8                           	mov eax, ecx
0x80496a0:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496a4:   89 d8                           	mov eax, ebx
0x80496a6:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496aa:   89 f0                           	mov eax, esi
0x80496ac:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496af:   89 f8                           	mov eax, edi
0x80496b1:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496b5:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b9:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496bc:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c0:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c4:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c8:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496cc:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d0:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496d4:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d8:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496db:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496df:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496e3:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e7:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496eb:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496ef:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496f3:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x80496f7:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496fa:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x80496fe:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049701:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049705:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x8049709:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049710:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049713:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049716:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x804971c:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049720:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x8049726:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804972a:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049731:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049735:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x804973c:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049740:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x8049746:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804974a:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049751:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049755:   88 82 32 00 00 00               	mov byte ptr [edx + 0x32], al
0x804975b:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804975f:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049766:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049769:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804976f:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049773:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x804977a:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804977d:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049783:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049787:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804978e:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049792:   88 82 42 00 00 00               	mov byte ptr [edx + 0x42], al
0x8049798:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804979b:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x80497a1:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497a5:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x80497ac:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497af:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497b5:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497b9:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497c0:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497c4:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x80497cb:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497ce:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497d4:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497d7:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497dd:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497e1:   88 82 5c 00 00 00               	mov byte ptr [edx + 0x5c], al
0x80497e7:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497ea:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497f0:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497f3:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497f9:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497fc:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049802:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049806:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x804980c:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049810:   66 89 82 6e 00 00 00            	mov word ptr [edx + 0x6e], ax
0x8049817:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804981a:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049820:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049823:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049829:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x804982d:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x8049833:   b8 00 00 00 00                  	mov eax, 0
0x8049838:   83 c4 78                        	add esp, 0x78
0x804983b:   5b                              	pop ebx
0x804983c:   5e                              	pop esi
0x804983d:   5f                              	pop edi
0x804983e:   5d                              	pop ebp
0x804983f:   c3                              	ret 
; function: func_1 at 0x8049840 -- 0x804a897
0x8049840:   55                              	push ebp
0x8049841:   89 e5                           	mov ebp, esp
0x8049843:   57                              	push edi
0x8049844:   56                              	push esi
0x8049845:   53                              	push ebx
0x8049846:   81 ec 2c 01 00 00               	sub esp, 0x12c
0x804984c:   e8 57 14 00 00                  	call 0x804aca8 <__x86.get_pc_thunk.ax>
0x8049851:   05 af 37 00 00                  	add eax, 0x37af
0x8049856:   c7 45 84 5d 90 eb 73            	mov dword ptr [ebp - 0x7c], 0x73eb905d
0x804985d:   c6 45 f3 fe                     	mov byte ptr [ebp - 0xd], 0xfe
0x8049861:   66 c7 45 f0 1b b6               	mov word ptr [ebp - 0x10], 0xb61b
0x8049867:   c7 45 80 03 00 00 00            	mov dword ptr [ebp - 0x80], 3
0x804986e:   66 c7 45 ee 33 3b               	mov word ptr [ebp - 0x12], 0x3b33
0x8049874:   c6 45 ed 75                     	mov byte ptr [ebp - 0x13], 0x75
0x8049878:   66 c7 45 ea ff ff               	mov word ptr [ebp - 0x16], 0xffff
0x804987e:   c6 45 e9 2c                     	mov byte ptr [ebp - 0x17], 0x2c
0x8049882:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x8049888:   c7 45 e0 75 2d 15 26            	mov dword ptr [ebp - 0x20], 0x26152d75
0x804988f:   66 c7 45 de f6 ff               	mov word ptr [ebp - 0x22], 0xfff6
0x8049895:   c7 45 d8 b0 6b f6 28            	mov dword ptr [ebp - 0x28], 0x28f66bb0
0x804989c:   66 c7 45 d6 74 06               	mov word ptr [ebp - 0x2a], 0x674
0x80498a2:   c6 45 d5 01                     	mov byte ptr [ebp - 0x2b], 1
0x80498a6:   c7 85 7c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x84], 0xffffffff
0x80498b0:   66 c7 45 d2 97 ca               	mov word ptr [ebp - 0x2e], 0xca97
0x80498b6:   c7 45 cc 25 68 69 df            	mov dword ptr [ebp - 0x34], 0xdf696825
0x80498bd:   66 c7 85 7a ff ff ff a2 00      	mov word ptr [ebp - 0x86], 0xa2
0x80498c6:   66 c7 45 ca b4 a1               	mov word ptr [ebp - 0x36], 0xa1b4
0x80498cc:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x80498d3:   c7 45 c0 6c 90 7f ca            	mov dword ptr [ebp - 0x40], 0xca7f906c
0x80498da:   c6 85 79 ff ff ff 9d            	mov byte ptr [ebp - 0x87], 0x9d
0x80498e1:   c7 45 bc be d3 55 2d            	mov dword ptr [ebp - 0x44], 0x2d55d3be
0x80498e8:   c7 45 b8 f8 ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffff8
0x80498ef:   c7 45 b4 74 6f ad 5c            	mov dword ptr [ebp - 0x4c], 0x5cad6f74
0x80498f6:   c6 85 78 ff ff ff b4            	mov byte ptr [ebp - 0x88], 0xb4
0x80498fd:   66 c7 85 76 ff ff ff 8b e7      	mov word ptr [ebp - 0x8a], 0xe78b
0x8049906:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x8049910:   c7 45 b0 04 00 00 00            	mov dword ptr [ebp - 0x50], 4
0x8049917:   c6 85 6f ff ff ff 01            	mov byte ptr [ebp - 0x91], 1
0x804991e:   c6 45 af 9f                     	mov byte ptr [ebp - 0x51], 0x9f
0x8049922:   c7 45 a8 4f ae 79 ab            	mov dword ptr [ebp - 0x58], 0xab79ae4f
0x8049929:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049930:   c7 45 a0 01 00 00 00            	mov dword ptr [ebp - 0x60], 1
0x8049937:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x804993e:   c6 85 6e ff ff ff 01            	mov byte ptr [ebp - 0x92], 1
0x8049945:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804994f:   66 c7 45 9a 1d b8               	mov word ptr [ebp - 0x66], 0xb81d
0x8049955:   c7 85 64 ff ff ff 9e 0f 2b 0a   	mov dword ptr [ebp - 0x9c], 0xa2b0f9e
0x804995f:   c7 85 60 ff ff ff 60 c7 47 84   	mov dword ptr [ebp - 0xa0], 0x8447c760
0x8049969:   66 c7 85 5e ff ff ff fe ff      	mov word ptr [ebp - 0xa2], 0xfffe
0x8049972:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049976:   75 7a                           	jne 0x80499f2 <func_1+0x1b2>
0x8049978:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x804997c:   75 06                           	jne 0x8049984 <func_1+0x144>
0x804997e:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049982:   74 07                           	je 0x804998b <func_1+0x14b>
0x8049984:   b8 01 00 00 00                  	mov eax, 1
0x8049989:   eb 05                           	jmp 0x8049990 <func_1+0x150>
0x804998b:   b8 00 00 00 00                  	mov eax, 0
0x8049990:   66 09 45 f0                     	or word ptr [ebp - 0x10], ax
0x8049994:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049998:   0f b6 d0                        	movzx edx, al
0x804999b:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x804999f:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80499a3:   0f af c1                        	imul eax, ecx
0x80499a6:   39 c2                           	cmp edx, eax
0x80499a8:   7c 04                           	jl 0x80499ae <func_1+0x16e>
0x80499aa:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x80499ae:   80 7d af 01                     	cmp byte ptr [ebp - 0x51], 1
0x80499b2:   0f 9e c0                        	setle al
0x80499b5:   89 c2                           	mov edx, eax
0x80499b7:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80499bb:   21 d0                           	and eax, edx
0x80499bd:   0f b6 d0                        	movzx edx, al
0x80499c0:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x80499c4:   0f b6 c0                        	movzx eax, al
0x80499c7:   89 c1                           	mov ecx, eax
0x80499c9:   d3 e2                           	shl edx, cl
0x80499cb:   89 d0                           	mov eax, edx
0x80499cd:   0f b6 d0                        	movzx edx, al
0x80499d0:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x80499d4:   0f b6 c0                        	movzx eax, al
0x80499d7:   0f af c2                        	imul eax, edx
0x80499da:   0f b6 4d f3                     	movzx ecx, byte ptr [ebp - 0xd]
0x80499de:   99                              	cdq 
0x80499df:   f7 f9                           	idiv ecx
0x80499e1:   89 d0                           	mov eax, edx
0x80499e3:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x80499e6:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x80499ea:   0b 45 a8                        	or eax, dword ptr [ebp - 0x58]
0x80499ed:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x80499f0:   7e 07                           	jle 0x80499f9 <func_1+0x1b9>
0x80499f2:   b8 01 00 00 00                  	mov eax, 1
0x80499f7:   eb 05                           	jmp 0x80499fe <func_1+0x1be>
0x80499f9:   b8 00 00 00 00                  	mov eax, 0
0x80499fe:   0f b6 d0                        	movzx edx, al
0x8049a01:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049a04:   0f b6 c0                        	movzx eax, al
0x8049a07:   89 c1                           	mov ecx, eax
0x8049a09:   d3 fa                           	sar edx, cl
0x8049a0b:   89 d0                           	mov eax, edx
0x8049a0d:   3d 72 99 00 00                  	cmp eax, 0x9972
0x8049a12:   0f 9e c0                        	setle al
0x8049a15:   0f b6 c0                        	movzx eax, al
0x8049a18:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049a1b:   c7 45 a8 05 00 00 00            	mov dword ptr [ebp - 0x58], 5
0x8049a22:   e9 73 04 00 00                  	jmp 0x8049e9a <func_1+0x65a>
0x8049a27:   c7 85 1c ff ff ff f5 6f 78 6d   	mov dword ptr [ebp - 0xe4], 0x6d786ff5
0x8049a31:   c7 85 18 ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffffc
0x8049a3b:   c7 85 14 ff ff ff 9d f5 ee b3   	mov dword ptr [ebp - 0xec], 0xb3eef59d
0x8049a45:   c6 85 13 ff ff ff 01            	mov byte ptr [ebp - 0xed], 1
0x8049a4c:   66 c7 85 10 ff ff ff 00 00      	mov word ptr [ebp - 0xf0], 0
0x8049a55:   c7 45 a4 f8 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffff8
0x8049a5c:   e9 bf 03 00 00                  	jmp 0x8049e20 <func_1+0x5e0>
0x8049a61:   66 c7 45 98 be b0               	mov word ptr [ebp - 0x68], 0xb0be
0x8049a67:   c6 85 0f ff ff ff f7            	mov byte ptr [ebp - 0xf1], 0xf7
0x8049a6e:   c7 85 08 ff ff ff 5b 6c 17 dd   	mov dword ptr [ebp - 0xf8], 0xdd176c5b
0x8049a78:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x8049a7f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049a82:   0f bf 4d f0                     	movsx ecx, word ptr [ebp - 0x10]
0x8049a86:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x8049a8a:   01 ca                           	add edx, ecx
0x8049a8c:   85 d2                           	test edx, edx
0x8049a8e:   0f 94 c2                        	sete dl
0x8049a91:   0f b6 d2                        	movzx edx, dl
0x8049a94:   8b 4d a8                        	mov ecx, dword ptr [ebp - 0x58]
0x8049a97:   29 d1                           	sub ecx, edx
0x8049a99:   99                              	cdq 
0x8049a9a:   f7 f9                           	idiv ecx
0x8049a9c:   89 d0                           	mov eax, edx
0x8049a9e:   0f b7 d0                        	movzx edx, ax
0x8049aa1:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x8049aa5:   89 c1                           	mov ecx, eax
0x8049aa7:   d3 e2                           	shl edx, cl
0x8049aa9:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049aad:   39 c2                           	cmp edx, eax
0x8049aaf:   0f 94 c0                        	sete al
0x8049ab2:   0f b6 c0                        	movzx eax, al
0x8049ab5:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x8049ab9:   0f be fa                        	movsx edi, dl
0x8049abc:   99                              	cdq 
0x8049abd:   f7 ff                           	idiv edi
0x8049abf:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049ac3:   66 c7 45 98 00 00               	mov word ptr [ebp - 0x68], 0
0x8049ac9:   e9 37 03 00 00                  	jmp 0x8049e05 <func_1+0x5c5>
0x8049ace:   66 c7 85 06 ff ff ff 49 3a      	mov word ptr [ebp - 0xfa], 0x3a49
0x8049ad7:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x8049ae1:   c7 85 fc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x104], 0xffffffff
0x8049aeb:   66 83 7d 98 00                  	cmp word ptr [ebp - 0x68], 0
0x8049af0:   0f 94 c0                        	sete al
0x8049af3:   0f b6 c0                        	movzx eax, al
0x8049af6:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049afc:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x8049b03:   66 39 45 98                     	cmp word ptr [ebp - 0x68], ax
0x8049b07:   0f 93 c0                        	setae al
0x8049b0a:   0f b6 d0                        	movzx edx, al
0x8049b0d:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049b11:   21 d0                           	and eax, edx
0x8049b13:   85 c0                           	test eax, eax
0x8049b15:   75 07                           	jne 0x8049b1e <func_1+0x2de>
0x8049b17:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x8049b1c:   74 07                           	je 0x8049b25 <func_1+0x2e5>
0x8049b1e:   ba 01 00 00 00                  	mov edx, 1
0x8049b23:   eb 05                           	jmp 0x8049b2a <func_1+0x2ea>
0x8049b25:   ba 00 00 00 00                  	mov edx, 0
0x8049b2a:   0f b6 85 0f ff ff ff            	movzx eax, byte ptr [ebp - 0xf1]
0x8049b31:   39 c2                           	cmp edx, eax
0x8049b33:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049b36:   3b 85 1c ff ff ff               	cmp eax, dword ptr [ebp - 0xe4]
0x8049b3c:   74 0d                           	je 0x8049b4b <func_1+0x30b>
0x8049b3e:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x8049b42:   74 07                           	je 0x8049b4b <func_1+0x30b>
0x8049b44:   ba 01 00 00 00                  	mov edx, 1
0x8049b49:   eb 05                           	jmp 0x8049b50 <func_1+0x310>
0x8049b4b:   ba 00 00 00 00                  	mov edx, 0
0x8049b50:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049b56:   29 d0                           	sub eax, edx
0x8049b58:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049b5e:   0f bf 55 ee                     	movsx edx, word ptr [ebp - 0x12]
0x8049b62:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049b68:   01 d0                           	add eax, edx
0x8049b6a:   85 c0                           	test eax, eax
0x8049b6c:   74 0d                           	je 0x8049b7b <func_1+0x33b>
0x8049b6e:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x8049b75:   0f 85 97 02 00 00               	jne 0x8049e12 <func_1+0x5d2>
0x8049b7b:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049b81:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x8049b84:   66 c7 45 ea 3f f1               	mov word ptr [ebp - 0x16], 0xf13f
0x8049b8a:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049b8e:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049b91:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x8049b95:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049b9b:   0f b7 c0                        	movzx eax, ax
0x8049b9e:   0f af d0                        	imul edx, eax
0x8049ba1:   0f b7 85 06 ff ff ff            	movzx eax, word ptr [ebp - 0xfa]
0x8049ba8:   39 c2                           	cmp edx, eax
0x8049baa:   0f 9e c0                        	setle al
0x8049bad:   0f b6 c0                        	movzx eax, al
0x8049bb0:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049bb3:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049bb7:   74 21                           	je 0x8049bda <func_1+0x39a>
0x8049bb9:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049bbd:   0f b6 d0                        	movzx edx, al
0x8049bc0:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x8049bc4:   0f b6 c0                        	movzx eax, al
0x8049bc7:   89 c1                           	mov ecx, eax
0x8049bc9:   d3 e2                           	shl edx, cl
0x8049bcb:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049bcf:   39 c2                           	cmp edx, eax
0x8049bd1:   7f 07                           	jg 0x8049bda <func_1+0x39a>
0x8049bd3:   ba 01 00 00 00                  	mov edx, 1
0x8049bd8:   eb 05                           	jmp 0x8049bdf <func_1+0x39f>
0x8049bda:   ba 00 00 00 00                  	mov edx, 0
0x8049bdf:   0f bf 45 ea                     	movsx eax, word ptr [ebp - 0x16]
0x8049be3:   39 c2                           	cmp edx, eax
0x8049be5:   0f 94 c0                        	sete al
0x8049be8:   0f b6 d0                        	movzx edx, al
0x8049beb:   0f b7 85 06 ff ff ff            	movzx eax, word ptr [ebp - 0xfa]
0x8049bf2:   39 c2                           	cmp edx, eax
0x8049bf4:   0f 8e ee 00 00 00               	jle 0x8049ce8 <func_1+0x4a8>
0x8049bfa:   c7 85 f8 fe ff ff 02 ed 51 3f   	mov dword ptr [ebp - 0x108], 0x3f51ed02
0x8049c04:   c7 85 f4 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x10c], 4
0x8049c0e:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x8049c14:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x8049c18:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x8049c1f:   0f 85 f0 01 00 00               	jne 0x8049e15 <func_1+0x5d5>
0x8049c25:   66 83 6d e6 01                  	sub word ptr [ebp - 0x1a], 1
0x8049c2a:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049c2f:   75 67                           	jne 0x8049c98 <func_1+0x458>
0x8049c31:   0f bf 55 ea                     	movsx edx, word ptr [ebp - 0x16]
0x8049c35:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049c39:   f7 d0                           	not eax
0x8049c3b:   89 c1                           	mov ecx, eax
0x8049c3d:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x8049c41:   21 c8                           	and eax, ecx
0x8049c43:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049c46:   66 0f be 45 e9                  	movsx ax, byte ptr [ebp - 0x17]
0x8049c4b:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049c4f:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049c54:   74 07                           	je 0x8049c5d <func_1+0x41d>
0x8049c56:   b9 01 00 00 00                  	mov ecx, 1
0x8049c5b:   eb 05                           	jmp 0x8049c62 <func_1+0x422>
0x8049c5d:   b9 00 00 00 00                  	mov ecx, 0
0x8049c62:   0f b7 85 06 ff ff ff            	movzx eax, word ptr [ebp - 0xfa]
0x8049c69:   39 c1                           	cmp ecx, eax
0x8049c6b:   0f 94 c0                        	sete al
0x8049c6e:   0f b6 c0                        	movzx eax, al
0x8049c71:   39 c2                           	cmp edx, eax
0x8049c73:   0f 9c c0                        	setl al
0x8049c76:   0f b6 c0                        	movzx eax, al
0x8049c79:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x8049c7c:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x8049c80:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049c83:   0f 9d c0                        	setge al
0x8049c86:   0f b6 c0                        	movzx eax, al
0x8049c89:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049c8f:   83 bd 00 ff ff ff 00            	cmp dword ptr [ebp - 0x100], 0
0x8049c96:   75 07                           	jne 0x8049c9f <func_1+0x45f>
0x8049c98:   b8 01 00 00 00                  	mov eax, 1
0x8049c9d:   eb 05                           	jmp 0x8049ca4 <func_1+0x464>
0x8049c9f:   b8 00 00 00 00                  	mov eax, 0
0x8049ca4:   3b 85 f4 fe ff ff               	cmp eax, dword ptr [ebp - 0x10c]
0x8049caa:   0f 9d c0                        	setge al
0x8049cad:   0f b6 c0                        	movzx eax, al
0x8049cb0:   21 85 fc fe ff ff               	and dword ptr [ebp - 0x104], eax
0x8049cb6:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x8049cbd:   75 04                           	jne 0x8049cc3 <func_1+0x483>
0x8049cbf:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x8049cc3:   66 83 7d ea 7b                  	cmp word ptr [ebp - 0x16], 0x7b
0x8049cc8:   75 09                           	jne 0x8049cd3 <func_1+0x493>
0x8049cca:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x8049cd1:   74 07                           	je 0x8049cda <func_1+0x49a>
0x8049cd3:   b8 01 00 00 00                  	mov eax, 1
0x8049cd8:   eb 05                           	jmp 0x8049cdf <func_1+0x49f>
0x8049cda:   b8 00 00 00 00                  	mov eax, 0
0x8049cdf:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049ce3:   e9 18 01 00 00                  	jmp 0x8049e00 <func_1+0x5c0>
0x8049ce8:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x8049cef:   0f bf 95 76 ff ff ff            	movsx edx, word ptr [ebp - 0x8a]
0x8049cf6:   0f be 8d 78 ff ff ff            	movsx ecx, byte ptr [ebp - 0x88]
0x8049cfd:   0f be 9d 79 ff ff ff            	movsx ebx, byte ptr [ebp - 0x87]
0x8049d04:   0f bf 7d ca                     	movsx edi, word ptr [ebp - 0x36]
0x8049d08:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x8049d0f:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x8049d15:   0f b7 75 d2                     	movzx esi, word ptr [ebp - 0x2e]
0x8049d19:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x8049d1f:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x8049d23:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x8049d29:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x8049d2d:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x8049d33:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x8049d37:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x8049d3d:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x8049d41:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x8049d47:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x8049d4b:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x8049d51:   0f bf 75 ea                     	movsx esi, word ptr [ebp - 0x16]
0x8049d55:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x8049d5b:   0f b6 75 ed                     	movzx esi, byte ptr [ebp - 0x13]
0x8049d5f:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x8049d65:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x8049d69:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x8049d6f:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x8049d73:   89 b5 c8 fe ff ff               	mov dword ptr [ebp - 0x138], esi
0x8049d79:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x8049d7d:   50                              	push eax
0x8049d7e:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049d81:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049d87:   52                              	push edx
0x8049d88:   51                              	push ecx
0x8049d89:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049d8c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049d8f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049d92:   53                              	push ebx
0x8049d93:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049d96:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049d99:   57                              	push edi
0x8049d9a:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049da0:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049da3:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049da9:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049daf:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049db5:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x8049dbb:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049dbe:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049dc4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049dc7:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049dcd:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049dd3:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049dd9:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049ddf:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049de5:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049deb:   56                              	push esi
0x8049dec:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049def:   e8 32 f8 ff ff                  	call 0x8049626 <set_var>
0x8049df4:   83 c4 74                        	add esp, 0x74
0x8049df7:   0f bf 45 ee                     	movsx eax, word ptr [ebp - 0x12]
0x8049dfb:   e9 8f 0a 00 00                  	jmp 0x804a88f <func_1+0x104f>
0x8049e00:   66 83 45 98 01                  	add word ptr [ebp - 0x68], 1
0x8049e05:   66 83 7d 98 10                  	cmp word ptr [ebp - 0x68], 0x10
0x8049e0a:   0f 86 be fc ff ff               	jbe 0x8049ace <func_1+0x28e>
0x8049e10:   eb 04                           	jmp 0x8049e16 <func_1+0x5d6>
0x8049e12:   90                              	nop 
0x8049e13:   eb 01                           	jmp 0x8049e16 <func_1+0x5d6>
0x8049e15:   90                              	nop 
0x8049e16:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049e19:   88 45 d5                        	mov byte ptr [ebp - 0x2b], al
0x8049e1c:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x8049e20:   83 7d a4 f2                     	cmp dword ptr [ebp - 0x5c], -0xe
0x8049e24:   0f 84 37 fc ff ff               	je 0x8049a61 <func_1+0x221>
0x8049e2a:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x8049e30:   eb 54                           	jmp 0x8049e86 <func_1+0x646>
0x8049e32:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e35:   89 c3                           	mov ebx, eax
0x8049e37:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049e3d:   0f b6 55 af                     	movzx edx, byte ptr [ebp - 0x51]
0x8049e41:   0f b6 c0                        	movzx eax, al
0x8049e44:   f6 f2                           	div dl
0x8049e46:   22 85 13 ff ff ff               	and al, byte ptr [ebp - 0xed]
0x8049e4c:   0f b6 c0                        	movzx eax, al
0x8049e4f:   8b 4d 84                        	mov ecx, dword ptr [ebp - 0x7c]
0x8049e52:   99                              	cdq 
0x8049e53:   f7 f9                           	idiv ecx
0x8049e55:   89 d0                           	mov eax, edx
0x8049e57:   0f bf d0                        	movsx edx, ax
0x8049e5a:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049e5d:   98                              	cwde 
0x8049e5e:   89 c1                           	mov ecx, eax
0x8049e60:   d3 fa                           	sar edx, cl
0x8049e62:   89 d0                           	mov eax, edx
0x8049e64:   8d 14 03                        	lea edx, [ebx + eax]
0x8049e67:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049e6a:   89 c1                           	mov ecx, eax
0x8049e6c:   0f b6 c2                        	movzx eax, dl
0x8049e6f:   f6 f1                           	div cl
0x8049e71:   0f b6 c0                        	movzx eax, al
0x8049e74:   66 89 85 10 ff ff ff            	mov word ptr [ebp - 0xf0], ax
0x8049e7b:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e7f:   83 c0 01                        	add eax, 1
0x8049e82:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049e86:   66 83 7d de 0e                  	cmp word ptr [ebp - 0x22], 0xe
0x8049e8b:   7e a5                           	jle 0x8049e32 <func_1+0x5f2>
0x8049e8d:   83 6d 9c 01                     	sub dword ptr [ebp - 0x64], 1
0x8049e91:   66 83 45 d2 01                  	add word ptr [ebp - 0x2e], 1
0x8049e96:   83 45 a8 01                     	add dword ptr [ebp - 0x58], 1
0x8049e9a:   83 7d a8 1d                     	cmp dword ptr [ebp - 0x58], 0x1d
0x8049e9e:   0f 85 83 fb ff ff               	jne 0x8049a27 <func_1+0x1e7>
0x8049ea4:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x8049ea8:   75 3c                           	jne 0x8049ee6 <func_1+0x6a6>
0x8049eaa:   0f bf 4d d6                     	movsx ecx, word ptr [ebp - 0x2a]
0x8049eae:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049eb2:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x8049eb6:   0f be fa                        	movsx edi, dl
0x8049eb9:   99                              	cdq 
0x8049eba:   f7 ff                           	idiv edi
0x8049ebc:   89 c3                           	mov ebx, eax
0x8049ebe:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049ec1:   89 c2                           	mov edx, eax
0x8049ec3:   0f b6 c3                        	movzx eax, bl
0x8049ec6:   f6 f2                           	div dl
0x8049ec8:   0f b6 c4                        	movzx eax, ah
0x8049ecb:   0f be d0                        	movsx edx, al
0x8049ece:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049ed2:   01 d0                           	add eax, edx
0x8049ed4:   89 c3                           	mov ebx, eax
0x8049ed6:   89 c8                           	mov eax, ecx
0x8049ed8:   ba 00 00 00 00                  	mov edx, 0
0x8049edd:   f7 f3                           	div ebx
0x8049edf:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049ee2:   39 c2                           	cmp edx, eax
0x8049ee4:   72 07                           	jb 0x8049eed <func_1+0x6ad>
0x8049ee6:   ba 01 00 00 00                  	mov edx, 1
0x8049eeb:   eb 05                           	jmp 0x8049ef2 <func_1+0x6b2>
0x8049eed:   ba 00 00 00 00                  	mov edx, 0
0x8049ef2:   0f bf 45 f0                     	movsx eax, word ptr [ebp - 0x10]
0x8049ef6:   39 c2                           	cmp edx, eax
0x8049ef8:   0f 8d 02 01 00 00               	jge 0x804a000 <func_1+0x7c0>
0x8049efe:   c7 85 2c ff ff ff cd dc 6f e0   	mov dword ptr [ebp - 0xd4], 0xe06fdccd
0x8049f08:   c7 85 28 ff ff ff 66 71 9f 24   	mov dword ptr [ebp - 0xd8], 0x249f7166
0x8049f12:   c7 85 24 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xdc], 0xffffffff
0x8049f1c:   c6 85 23 ff ff ff 2f            	mov byte ptr [ebp - 0xdd], 0x2f
0x8049f23:   c7 45 cc 68 dc 96 ae            	mov dword ptr [ebp - 0x34], 0xae96dc68
0x8049f2a:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049f30:   0f b6 c0                        	movzx eax, al
0x8049f33:   8d 50 06                        	lea edx, [eax + 6]
0x8049f36:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049f3c:   09 d0                           	or eax, edx
0x8049f3e:   0f bf d0                        	movsx edx, ax
0x8049f41:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049f47:   98                              	cwde 
0x8049f48:   0f af c2                        	imul eax, edx
0x8049f4b:   39 85 2c ff ff ff               	cmp dword ptr [ebp - 0xd4], eax
0x8049f51:   0f 92 c0                        	setb al
0x8049f54:   0f b6 d0                        	movzx edx, al
0x8049f57:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049f5b:   31 d0                           	xor eax, edx
0x8049f5d:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049f61:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x8049f65:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049f69:   0f af c2                        	imul eax, edx
0x8049f6c:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049f72:   c6 85 6e ff ff ff 00            	mov byte ptr [ebp - 0x92], 0
0x8049f79:   0f be 85 6e ff ff ff            	movsx eax, byte ptr [ebp - 0x92]
0x8049f80:   f7 d8                           	neg eax
0x8049f82:   89 c2                           	mov edx, eax
0x8049f84:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049f88:   39 c2                           	cmp edx, eax
0x8049f8a:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049f90:   3d f7 ff 00 00                  	cmp eax, 0xfff7
0x8049f95:   0f 97 c0                        	seta al
0x8049f98:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049f9b:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x8049f9f:   25 47 05 08 8a                  	and eax, 0x8a080547
0x8049fa4:   85 c0                           	test eax, eax
0x8049fa6:   74 04                           	je 0x8049fac <func_1+0x76c>
0x8049fa8:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049fac:   c7 85 24 ff ff ff f4 00 00 00   	mov dword ptr [ebp - 0xdc], 0xf4
0x8049fb6:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x8049fbe:   75 09                           	jne 0x8049fc9 <func_1+0x789>
0x8049fc0:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049fc7:   74 07                           	je 0x8049fd0 <func_1+0x790>
0x8049fc9:   b8 01 00 00 00                  	mov eax, 1
0x8049fce:   eb 05                           	jmp 0x8049fd5 <func_1+0x795>
0x8049fd0:   b8 00 00 00 00                  	mov eax, 0
0x8049fd5:   88 85 23 ff ff ff               	mov byte ptr [ebp - 0xdd], al
0x8049fdb:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049fdf:   74 07                           	je 0x8049fe8 <func_1+0x7a8>
0x8049fe1:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049fe8:   80 bd 23 ff ff ff 00            	cmp byte ptr [ebp - 0xdd], 0
0x8049fef:   0f 9f c0                        	setg al
0x8049ff2:   0f b6 c0                        	movzx eax, al
0x8049ff5:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049ffb:   e9 3e 07 00 00                  	jmp 0x804a73e <func_1+0xefe>
0x804a000:   66 c7 85 5c ff ff ff 2e ac      	mov word ptr [ebp - 0xa4], 0xac2e
0x804a009:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x804a010:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a014:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a017:   83 e0 01                        	and eax, 1
0x804a01a:   89 c1                           	mov ecx, eax
0x804a01c:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a01f:   39 c1                           	cmp ecx, eax
0x804a021:   0f 96 c0                        	setbe al
0x804a024:   0f b6 c0                        	movzx eax, al
0x804a027:   39 c2                           	cmp edx, eax
0x804a029:   0f 9d c0                        	setge al
0x804a02c:   0f b6 c0                        	movzx eax, al
0x804a02f:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a035:   83 65 90 01                     	and dword ptr [ebp - 0x70], 1
0x804a039:   66 c7 45 ee 10 00               	mov word ptr [ebp - 0x12], 0x10
0x804a03f:   e9 97 06 00 00                  	jmp 0x804a6db <func_1+0xe9b>
0x804a044:   66 c7 85 5a ff ff ff 69 dc      	mov word ptr [ebp - 0xa6], 0xdc69
0x804a04d:   c7 45 8c fc ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffffc
0x804a054:   66 c7 85 58 ff ff ff 99 1e      	mov word ptr [ebp - 0xa8], 0x1e99
0x804a05d:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x804a067:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a06e:   74 0d                           	je 0x804a07d <func_1+0x83d>
0x804a070:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x804a074:   74 07                           	je 0x804a07d <func_1+0x83d>
0x804a076:   b8 01 00 00 00                  	mov eax, 1
0x804a07b:   eb 05                           	jmp 0x804a082 <func_1+0x842>
0x804a07d:   b8 00 00 00 00                  	mov eax, 0
0x804a082:   2d cd 60 b6 08                  	sub eax, 0x8b660cd
0x804a087:   83 f8 02                        	cmp eax, 2
0x804a08a:   0f 9e c0                        	setle al
0x804a08d:   0f b6 c0                        	movzx eax, al
0x804a090:   66 09 45 ca                     	or word ptr [ebp - 0x36], ax
0x804a094:   ba 01 00 00 00                  	mov edx, 1
0x804a099:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a09c:   09 d0                           	or eax, edx
0x804a09e:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a0a1:   0f b7 95 5a ff ff ff            	movzx edx, word ptr [ebp - 0xa6]
0x804a0a8:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a0ac:   39 c2                           	cmp edx, eax
0x804a0ae:   7f 74                           	jg 0x804a124 <func_1+0x8e4>
0x804a0b0:   66 c7 85 36 ff ff ff 00 00      	mov word ptr [ebp - 0xca], 0
0x804a0b9:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x804a0c3:   0f be 55 e9                     	movsx edx, byte ptr [ebp - 0x17]
0x804a0c7:   66 83 a5 36 ff ff ff 01         	and word ptr [ebp - 0xca], 1
0x804a0cf:   0f bf 85 36 ff ff ff            	movsx eax, word ptr [ebp - 0xca]
0x804a0d6:   01 d0                           	add eax, edx
0x804a0d8:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a0db:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a0e2:   eb 0b                           	jmp 0x804a0ef <func_1+0x8af>
0x804a0e4:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a0e8:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a0eb:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x804a0ef:   83 7d a4 f8                     	cmp dword ptr [ebp - 0x5c], -8
0x804a0f3:   7d ef                           	jge 0x804a0e4 <func_1+0x8a4>
0x804a0f5:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x804a0f9:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a100:   83 c0 01                        	add eax, 1
0x804a103:   66 89 85 58 ff ff ff            	mov word ptr [ebp - 0xa8], ax
0x804a10a:   c7 45 8c e7 00 00 00            	mov dword ptr [ebp - 0x74], 0xe7
0x804a111:   66 83 bd 58 ff ff ff 00         	cmp word ptr [ebp - 0xa8], 0
0x804a119:   0f 84 8e 05 00 00               	je 0x804a6ad <func_1+0xe6d>
0x804a11f:   e9 84 05 00 00                  	jmp 0x804a6a8 <func_1+0xe68>
0x804a124:   66 c7 85 52 ff ff ff 48 b2      	mov word ptr [ebp - 0xae], 0xb248
0x804a12d:   c7 85 4c ff ff ff 3f 03 aa 8a   	mov dword ptr [ebp - 0xb4], 0x8aaa033f
0x804a137:   c7 85 48 ff ff ff 17 d5 98 42   	mov dword ptr [ebp - 0xb8], 0x4298d517
0x804a141:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a144:   23 45 84                        	and eax, dword ptr [ebp - 0x7c]
0x804a147:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a14a:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a151:   66 21 45 9a                     	and word ptr [ebp - 0x66], ax
0x804a155:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x804a159:   66 3b 85 58 ff ff ff            	cmp ax, word ptr [ebp - 0xa8]
0x804a160:   0f 93 c0                        	setae al
0x804a163:   0f b6 c0                        	movzx eax, al
0x804a166:   80 6d f3 01                     	sub byte ptr [ebp - 0xd], 1
0x804a16a:   89 c2                           	mov edx, eax
0x804a16c:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a170:   09 d0                           	or eax, edx
0x804a172:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a176:   0f b7 55 d2                     	movzx edx, word ptr [ebp - 0x2e]
0x804a17a:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x804a17e:   31 d0                           	xor eax, edx
0x804a180:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a183:   75 07                           	jne 0x804a18c <func_1+0x94c>
0x804a185:   ba b3 16 90 f9                  	mov edx, 0xf99016b3
0x804a18a:   eb 05                           	jmp 0x804a191 <func_1+0x951>
0x804a18c:   ba b2 16 90 f9                  	mov edx, 0xf99016b2
0x804a191:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x804a195:   39 c2                           	cmp edx, eax
0x804a197:   66 83 bd 52 ff ff ff 00         	cmp word ptr [ebp - 0xae], 0
0x804a19f:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a1a3:   0f b7 d0                        	movzx edx, ax
0x804a1a6:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a1ad:   0f b7 c0                        	movzx eax, ax
0x804a1b0:   01 c2                           	add edx, eax
0x804a1b2:   0f bf 85 52 ff ff ff            	movsx eax, word ptr [ebp - 0xae]
0x804a1b9:   39 c2                           	cmp edx, eax
0x804a1bb:   0f b6 45 ed                     	movzx eax, byte ptr [ebp - 0x13]
0x804a1bf:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a1c2:   0f 9f c0                        	setg al
0x804a1c5:   0f b6 c0                        	movzx eax, al
0x804a1c8:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a1cb:   0f bf ca                        	movsx ecx, dx
0x804a1ce:   99                              	cdq 
0x804a1cf:   f7 f9                           	idiv ecx
0x804a1d1:   89 d0                           	mov eax, edx
0x804a1d3:   85 c0                           	test eax, eax
0x804a1d5:   75 05                           	jne 0x804a1dc <func_1+0x99c>
0x804a1d7:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x804a1dc:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a1df:   66 33 45 ca                     	xor ax, word ptr [ebp - 0x36]
0x804a1e3:   98                              	cwde 
0x804a1e4:   0f b7 95 5a ff ff ff            	movzx edx, word ptr [ebp - 0xa6]
0x804a1eb:   0f bf fa                        	movsx edi, dx
0x804a1ee:   99                              	cdq 
0x804a1ef:   f7 ff                           	idiv edi
0x804a1f1:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a1f4:   c6 45 e9 0c                     	mov byte ptr [ebp - 0x17], 0xc
0x804a1f8:   e9 97 01 00 00                  	jmp 0x804a394 <func_1+0xb54>
0x804a1fd:   c7 85 44 ff ff ff fe b9 16 cb   	mov dword ptr [ebp - 0xbc], 0xcb16b9fe
0x804a207:   66 0f be 85 79 ff ff ff         	movsx ax, byte ptr [ebp - 0x87]
0x804a20f:   66 3d 4d 51                     	cmp ax, 0x514d
0x804a213:   74 5e                           	je 0x804a273 <func_1+0xa33>
0x804a215:   66 c7 85 3e ff ff ff ff ff      	mov word ptr [ebp - 0xc2], 0xffff
0x804a21e:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a221:   0f be c0                        	movsx eax, al
0x804a224:   83 c0 01                        	add eax, 1
0x804a227:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x804a22a:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a231:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a234:   29 c2                           	sub edx, eax
0x804a236:   89 d0                           	mov eax, edx
0x804a238:   3d c3 00 00 00                  	cmp eax, 0xc3
0x804a23d:   75 07                           	jne 0x804a246 <func_1+0xa06>
0x804a23f:   b8 2f 00 00 00                  	mov eax, 0x2f
0x804a244:   eb 05                           	jmp 0x804a24b <func_1+0xa0b>
0x804a246:   b8 00 00 00 00                  	mov eax, 0
0x804a24b:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a24e:   66 83 bd 52 ff ff ff 00         	cmp word ptr [ebp - 0xae], 0
0x804a256:   0f 85 44 01 00 00               	jne 0x804a3a0 <func_1+0xb60>
0x804a25c:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a260:   66 83 bd 5c ff ff ff 00         	cmp word ptr [ebp - 0xa4], 0
0x804a268:   0f 84 09 01 00 00               	je 0x804a377 <func_1+0xb37>
0x804a26e:   e9 9d fd ff ff                  	jmp 0x804a010 <func_1+0x7d0>
0x804a273:   c7 85 40 ff ff ff 77 db 03 74   	mov dword ptr [ebp - 0xc0], 0x7403db77
0x804a27d:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a283:   0f be f8                        	movsx edi, al
0x804a286:   b8 09 00 00 00                  	mov eax, 9
0x804a28b:   99                              	cdq 
0x804a28c:   f7 ff                           	idiv edi
0x804a28e:   0f b7 c0                        	movzx eax, ax
0x804a291:   25 cd bb 00 00                  	and eax, 0xbbcd
0x804a296:   f7 d8                           	neg eax
0x804a298:   89 c3                           	mov ebx, eax
0x804a29a:   0f bf 95 7a ff ff ff            	movsx edx, word ptr [ebp - 0x86]
0x804a2a1:   0f be 85 79 ff ff ff            	movsx eax, byte ptr [ebp - 0x87]
0x804a2a8:   89 c1                           	mov ecx, eax
0x804a2aa:   d3 fa                           	sar edx, cl
0x804a2ac:   89 d0                           	mov eax, edx
0x804a2ae:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x804a2b4:   0f 9e c0                        	setle al
0x804a2b7:   0f b6 c0                        	movzx eax, al
0x804a2ba:   8b 95 40 ff ff ff               	mov edx, dword ptr [ebp - 0xc0]
0x804a2c0:   0f bf ca                        	movsx ecx, dx
0x804a2c3:   99                              	cdq 
0x804a2c4:   f7 f9                           	idiv ecx
0x804a2c6:   89 d0                           	mov eax, edx
0x804a2c8:   66 0f be d0                     	movsx dx, al
0x804a2cc:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a2d3:   66 98                           	cbw 
0x804a2d5:   01 c2                           	add edx, eax
0x804a2d7:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a2dd:   31 d0                           	xor eax, edx
0x804a2df:   89 c1                           	mov ecx, eax
0x804a2e1:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a2e7:   89 c2                           	mov edx, eax
0x804a2e9:   89 c8                           	mov eax, ecx
0x804a2eb:   0f af c2                        	imul eax, edx
0x804a2ee:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x804a2f1:   29 d0                           	sub eax, edx
0x804a2f3:   0f b6 d0                        	movzx edx, al
0x804a2f6:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804a2fd:   0f b6 c0                        	movzx eax, al
0x804a300:   89 c1                           	mov ecx, eax
0x804a302:   d3 fa                           	sar edx, cl
0x804a304:   89 d0                           	mov eax, edx
0x804a306:   39 c3                           	cmp ebx, eax
0x804a308:   0f 94 c0                        	sete al
0x804a30b:   0f b6 c0                        	movzx eax, al
0x804a30e:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804a312:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804a316:   66 c1 f8 02                     	sar ax, 2
0x804a31a:   0a 45 e9                        	or al, byte ptr [ebp - 0x17]
0x804a31d:   0f b6 d0                        	movzx edx, al
0x804a320:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a324:   0f b6 c0                        	movzx eax, al
0x804a327:   89 c1                           	mov ecx, eax
0x804a329:   d3 e2                           	shl edx, cl
0x804a32b:   89 d0                           	mov eax, edx
0x804a32d:   3d cd 00 00 00                  	cmp eax, 0xcd
0x804a332:   0f 94 c0                        	sete al
0x804a335:   0f b6 c0                        	movzx eax, al
0x804a338:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x804a33b:   81 bd 40 ff ff ff e6 00 00 00   	cmp dword ptr [ebp - 0xc0], 0xe6
0x804a345:   74 28                           	je 0x804a36f <func_1+0xb2f>
0x804a347:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a34a:   f7 d0                           	not eax
0x804a34c:   0f b6 55 d5                     	movzx edx, byte ptr [ebp - 0x2b]
0x804a350:   0f af c2                        	imul eax, edx
0x804a353:   8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0x804a359:   0f b6 c0                        	movzx eax, al
0x804a35c:   f6 f2                           	div dl
0x804a35e:   0f b6 c0                        	movzx eax, al
0x804a361:   0b 45 b8                        	or eax, dword ptr [ebp - 0x48]
0x804a364:   85 c0                           	test eax, eax
0x804a366:   74 07                           	je 0x804a36f <func_1+0xb2f>
0x804a368:   b8 01 00 00 00                  	mov eax, 1
0x804a36d:   eb 05                           	jmp 0x804a374 <func_1+0xb34>
0x804a36f:   b8 00 00 00 00                  	mov eax, 0
0x804a374:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a377:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a37d:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a383:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a38a:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a38e:   83 e8 08                        	sub eax, 8
0x804a391:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a394:   80 7d e9 f4                     	cmp byte ptr [ebp - 0x17], 0xf4
0x804a398:   0f 85 5f fe ff ff               	jne 0x804a1fd <func_1+0x9bd>
0x804a39e:   eb 01                           	jmp 0x804a3a1 <func_1+0xb61>
0x804a3a0:   90                              	nop 
0x804a3a1:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a3a7:   ba 00 00 00 00                  	mov edx, 0
0x804a3ac:   66 f7 b5 5c ff ff ff            	div word ptr [ebp - 0xa4]
0x804a3b3:   89 d0                           	mov eax, edx
0x804a3b5:   66 85 c0                        	test ax, ax
0x804a3b8:   0f 84 24 01 00 00               	je 0x804a4e2 <func_1+0xca2>
0x804a3be:   c7 85 38 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffb
0x804a3c8:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a3cf:   0f bf 95 76 ff ff ff            	movsx edx, word ptr [ebp - 0x8a]
0x804a3d6:   0f be 8d 78 ff ff ff            	movsx ecx, byte ptr [ebp - 0x88]
0x804a3dd:   0f be 9d 79 ff ff ff            	movsx ebx, byte ptr [ebp - 0x87]
0x804a3e4:   0f bf 7d ca                     	movsx edi, word ptr [ebp - 0x36]
0x804a3e8:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x804a3ef:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a3f5:   0f b7 75 d2                     	movzx esi, word ptr [ebp - 0x2e]
0x804a3f9:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a3ff:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x804a403:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x804a409:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x804a40d:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a413:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a417:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a41d:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804a421:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x804a427:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a42b:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a431:   0f bf 75 ea                     	movsx esi, word ptr [ebp - 0x16]
0x804a435:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a43b:   0f b6 75 ed                     	movzx esi, byte ptr [ebp - 0x13]
0x804a43f:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a445:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x804a449:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a44f:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x804a453:   89 b5 c8 fe ff ff               	mov dword ptr [ebp - 0x138], esi
0x804a459:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a45d:   50                              	push eax
0x804a45e:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a461:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a467:   52                              	push edx
0x804a468:   51                              	push ecx
0x804a469:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a46c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a46f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a472:   53                              	push ebx
0x804a473:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a476:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a479:   57                              	push edi
0x804a47a:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a480:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a483:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a489:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a48f:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a495:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a49b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a49e:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a4a4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4a7:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a4ad:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a4b3:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a4b9:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a4bf:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a4c5:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a4cb:   56                              	push esi
0x804a4cc:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a4cf:   e8 52 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4d4:   83 c4 74                        	add esp, 0x74
0x804a4d7:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a4dd:   e9 ad 03 00 00                  	jmp 0x804a88f <func_1+0x104f>
0x804a4e2:   c6 45 8b f7                     	mov byte ptr [ebp - 0x75], 0xf7
0x804a4e6:   c6 45 af 04                     	mov byte ptr [ebp - 0x51], 4
0x804a4ea:   e9 97 00 00 00                  	jmp 0x804a586 <func_1+0xd46>
0x804a4ef:   66 c7 85 3c ff ff ff 03 00      	mov word ptr [ebp - 0xc4], 3
0x804a4f8:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x804a4ff:   b8 01 00 00 00                  	mov eax, 1
0x804a504:   99                              	cdq 
0x804a505:   f7 bd 48 ff ff ff               	idiv dword ptr [ebp - 0xb8]
0x804a50b:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x804a50f:   b8 01 00 00 00                  	mov eax, 1
0x804a514:   89 c2                           	mov edx, eax
0x804a516:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a51a:   09 d0                           	or eax, edx
0x804a51c:   88 45 8b                        	mov byte ptr [ebp - 0x75], al
0x804a51f:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a523:   0f b6 c0                        	movzx eax, al
0x804a526:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x804a529:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a52c:   89 c2                           	mov edx, eax
0x804a52e:   89 d0                           	mov eax, edx
0x804a530:   c1 e0 02                        	shl eax, 2
0x804a533:   01 d0                           	add eax, edx
0x804a535:   83 e8 18                        	sub eax, 0x18
0x804a538:   c0 e8 02                        	shr al, 2
0x804a53b:   0f b6 c0                        	movzx eax, al
0x804a53e:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a541:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x804a549:   0f 95 c0                        	setne al
0x804a54c:   0f b6 c0                        	movzx eax, al
0x804a54f:   89 c1                           	mov ecx, eax
0x804a551:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a554:   ba 01 00 00 00                  	mov edx, 1
0x804a559:   29 c2                           	sub edx, eax
0x804a55b:   89 d0                           	mov eax, edx
0x804a55d:   31 c8                           	xor eax, ecx
0x804a55f:   0f b6 d0                        	movzx edx, al
0x804a562:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a565:   0f b6 c0                        	movzx eax, al
0x804a568:   89 c1                           	mov ecx, eax
0x804a56a:   d3 e2                           	shl edx, cl
0x804a56c:   89 d0                           	mov eax, edx
0x804a56e:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a571:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a575:   74 05                           	je 0x804a57c <func_1+0xd3c>
0x804a577:   e9 f6 f3 ff ff                  	jmp 0x8049972 <func_1+0x132>
0x804a57c:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x804a580:   83 e8 02                        	sub eax, 2
0x804a583:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x804a586:   80 7d af fe                     	cmp byte ptr [ebp - 0x51], 0xfe
0x804a58a:   0f 8d 5f ff ff ff               	jge 0x804a4ef <func_1+0xcaf>
0x804a590:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a597:   0f bf 95 76 ff ff ff            	movsx edx, word ptr [ebp - 0x8a]
0x804a59e:   0f be 8d 78 ff ff ff            	movsx ecx, byte ptr [ebp - 0x88]
0x804a5a5:   0f be 9d 79 ff ff ff            	movsx ebx, byte ptr [ebp - 0x87]
0x804a5ac:   0f bf 7d ca                     	movsx edi, word ptr [ebp - 0x36]
0x804a5b0:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x804a5b7:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a5bd:   0f b7 75 d2                     	movzx esi, word ptr [ebp - 0x2e]
0x804a5c1:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a5c7:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x804a5cb:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x804a5d1:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x804a5d5:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a5db:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a5df:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a5e5:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804a5e9:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x804a5ef:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a5f3:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a5f9:   0f bf 75 ea                     	movsx esi, word ptr [ebp - 0x16]
0x804a5fd:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a603:   0f b6 75 ed                     	movzx esi, byte ptr [ebp - 0x13]
0x804a607:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a60d:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x804a611:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a617:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x804a61b:   89 b5 c8 fe ff ff               	mov dword ptr [ebp - 0x138], esi
0x804a621:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a625:   50                              	push eax
0x804a626:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a629:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a62f:   52                              	push edx
0x804a630:   51                              	push ecx
0x804a631:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a634:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a637:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a63a:   53                              	push ebx
0x804a63b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a63e:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a641:   57                              	push edi
0x804a642:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a648:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a64b:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a651:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a657:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a65d:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a663:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a666:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a66c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a66f:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a675:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a67b:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a681:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a687:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a68d:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a693:   56                              	push esi
0x804a694:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a697:   e8 8a ef ff ff                  	call 0x8049626 <set_var>
0x804a69c:   83 c4 74                        	add esp, 0x74
0x804a69f:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a6a3:   e9 e7 01 00 00                  	jmp 0x804a88f <func_1+0x104f>
0x804a6a8:   66 83 7d f0 00                  	cmp word ptr [ebp - 0x10], 0
0x804a6ad:   0f b7 95 5a ff ff ff            	movzx edx, word ptr [ebp - 0xa6]
0x804a6b4:   0f be 85 78 ff ff ff            	movsx eax, byte ptr [ebp - 0x88]
0x804a6bb:   39 c2                           	cmp edx, eax
0x804a6bd:   0f 94 c0                        	sete al
0x804a6c0:   22 45 e9                        	and al, byte ptr [ebp - 0x17]
0x804a6c3:   0f be c0                        	movsx eax, al
0x804a6c6:   09 45 b4                        	or dword ptr [ebp - 0x4c], eax
0x804a6c9:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a6cd:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a6d0:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a6d4:   83 e8 01                        	sub eax, 1
0x804a6d7:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x804a6db:   66 83 7d ee 05                  	cmp word ptr [ebp - 0x12], 5
0x804a6e0:   0f 8e 5e f9 ff ff               	jle 0x804a044 <func_1+0x804>
0x804a6e6:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x804a6ea:   74 4a                           	je 0x804a736 <func_1+0xef6>
0x804a6ec:   0f b7 85 5c ff ff ff            	movzx eax, word ptr [ebp - 0xa4]
0x804a6f3:   0f be c0                        	movsx eax, al
0x804a6f6:   83 c0 01                        	add eax, 1
0x804a6f9:   85 c0                           	test eax, eax
0x804a6fb:   0f 9f c0                        	setg al
0x804a6fe:   0f b6 d0                        	movzx edx, al
0x804a701:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a705:   39 c2                           	cmp edx, eax
0x804a707:   0f 94 c0                        	sete al
0x804a70a:   0f b6 c0                        	movzx eax, al
0x804a70d:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x804a713:   0f 95 c0                        	setne al
0x804a716:   0f b6 d0                        	movzx edx, al
0x804a719:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a71d:   39 c2                           	cmp edx, eax
0x804a71f:   0f 9d c0                        	setge al
0x804a722:   0f b6 c0                        	movzx eax, al
0x804a725:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a728:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x804a72d:   74 07                           	je 0x804a736 <func_1+0xef6>
0x804a72f:   b8 01 00 00 00                  	mov eax, 1
0x804a734:   eb 05                           	jmp 0x804a73b <func_1+0xefb>
0x804a736:   b8 00 00 00 00                  	mov eax, 0
0x804a73b:   31 45 90                        	xor dword ptr [ebp - 0x70], eax
0x804a73e:   0f be 95 79 ff ff ff            	movsx edx, byte ptr [ebp - 0x87]
0x804a745:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a74c:   83 c8 01                        	or eax, 1
0x804a74f:   89 c1                           	mov ecx, eax
0x804a751:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x804a758:   31 c8                           	xor eax, ecx
0x804a75a:   f7 d0                           	not eax
0x804a75c:   0f b6 c0                        	movzx eax, al
0x804a75f:   bb 6f 00 00 00                  	mov ebx, 0x6f
0x804a764:   89 c1                           	mov ecx, eax
0x804a766:   d3 fb                           	sar ebx, cl
0x804a768:   89 d8                           	mov eax, ebx
0x804a76a:   85 c0                           	test eax, eax
0x804a76c:   0f 94 c0                        	sete al
0x804a76f:   0f b6 c0                        	movzx eax, al
0x804a772:   39 c2                           	cmp edx, eax
0x804a774:   0f 94 c0                        	sete al
0x804a777:   0f b6 c0                        	movzx eax, al
0x804a77a:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a77d:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a784:   0f bf 95 76 ff ff ff            	movsx edx, word ptr [ebp - 0x8a]
0x804a78b:   0f be 8d 78 ff ff ff            	movsx ecx, byte ptr [ebp - 0x88]
0x804a792:   0f be 9d 79 ff ff ff            	movsx ebx, byte ptr [ebp - 0x87]
0x804a799:   0f bf 7d ca                     	movsx edi, word ptr [ebp - 0x36]
0x804a79d:   0f bf b5 7a ff ff ff            	movsx esi, word ptr [ebp - 0x86]
0x804a7a4:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a7aa:   0f b7 75 d2                     	movzx esi, word ptr [ebp - 0x2e]
0x804a7ae:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a7b4:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x804a7b8:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x804a7be:   0f bf 75 d6                     	movsx esi, word ptr [ebp - 0x2a]
0x804a7c2:   89 b5 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], esi
0x804a7c8:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a7cc:   89 b5 e0 fe ff ff               	mov dword ptr [ebp - 0x120], esi
0x804a7d2:   0f b7 75 e6                     	movzx esi, word ptr [ebp - 0x1a]
0x804a7d6:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x804a7dc:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a7e0:   89 b5 d8 fe ff ff               	mov dword ptr [ebp - 0x128], esi
0x804a7e6:   0f bf 75 ea                     	movsx esi, word ptr [ebp - 0x16]
0x804a7ea:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a7f0:   0f b6 75 ed                     	movzx esi, byte ptr [ebp - 0x13]
0x804a7f4:   89 b5 d0 fe ff ff               	mov dword ptr [ebp - 0x130], esi
0x804a7fa:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x804a7fe:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a804:   0f bf 75 f0                     	movsx esi, word ptr [ebp - 0x10]
0x804a808:   89 b5 c8 fe ff ff               	mov dword ptr [ebp - 0x138], esi
0x804a80e:   0f b6 75 f3                     	movzx esi, byte ptr [ebp - 0xd]
0x804a812:   50                              	push eax
0x804a813:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a816:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a81c:   52                              	push edx
0x804a81d:   51                              	push ecx
0x804a81e:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a821:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a824:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a827:   53                              	push ebx
0x804a828:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a82b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a82e:   57                              	push edi
0x804a82f:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a835:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a838:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a83e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a844:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a84a:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a850:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a853:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a859:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a85c:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a862:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a868:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a86e:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a874:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a87a:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a880:   56                              	push esi
0x804a881:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a884:   e8 9d ed ff ff                  	call 0x8049626 <set_var>
0x804a889:   83 c4 74                        	add esp, 0x74
0x804a88c:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a88f:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a892:   5b                              	pop ebx
0x804a893:   5e                              	pop esi
0x804a894:   5f                              	pop edi
0x804a895:   5d                              	pop ebp
0x804a896:   c3                              	ret 
; function: main at 0x804a897 -- 0x804aca8
0x804a897:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a89b:   83 e4 f0                        	and esp, 0xfffffff0
0x804a89e:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a8a1:   55                              	push ebp
0x804a8a2:   89 e5                           	mov ebp, esp
0x804a8a4:   53                              	push ebx
0x804a8a5:   51                              	push ecx
0x804a8a6:   83 ec 10                        	sub esp, 0x10
0x804a8a9:   e8 e2 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a8ae:   81 c3 52 27 00 00               	add ebx, 0x2752
0x804a8b4:   89 c8                           	mov eax, ecx
0x804a8b6:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a8bd:   83 38 02                        	cmp dword ptr [eax], 2
0x804a8c0:   75 26                           	jne 0x804a8e8 <main+0x51>
0x804a8c2:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a8c5:   83 c0 04                        	add eax, 4
0x804a8c8:   8b 00                           	mov eax, dword ptr [eax]
0x804a8ca:   83 ec 08                        	sub esp, 8
0x804a8cd:   8d 93 8c dd ff ff               	lea edx, [ebx - 0x2274]
0x804a8d3:   52                              	push edx
0x804a8d4:   50                              	push eax
0x804a8d5:   e8 26 da ff ff                  	call 0x8048300 <strcmp>
0x804a8da:   83 c4 10                        	add esp, 0x10
0x804a8dd:   85 c0                           	test eax, eax
0x804a8df:   75 07                           	jne 0x804a8e8 <main+0x51>
0x804a8e1:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a8e8:   e8 69 db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a8ed:   e8 79 eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a8f2:   e8 49 ef ff ff                  	call 0x8049840 <func_1>
0x804a8f7:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a8fd:   83 ec 04                        	sub esp, 4
0x804a900:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a903:   8d 93 8e dd ff ff               	lea edx, [ebx - 0x2272]
0x804a909:   52                              	push edx
0x804a90a:   50                              	push eax
0x804a90b:   e8 67 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a910:   83 c4 10                        	add esp, 0x10
0x804a913:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a91a:   0f b6 c0                        	movzx eax, al
0x804a91d:   83 ec 04                        	sub esp, 4
0x804a920:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a923:   8d 93 92 dd ff ff               	lea edx, [ebx - 0x226e]
0x804a929:   52                              	push edx
0x804a92a:   50                              	push eax
0x804a92b:   e8 47 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a930:   83 c4 10                        	add esp, 0x10
0x804a933:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804a93a:   98                              	cwde 
0x804a93b:   83 ec 04                        	sub esp, 4
0x804a93e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a941:   8d 93 97 dd ff ff               	lea edx, [ebx - 0x2269]
0x804a947:   52                              	push edx
0x804a948:   50                              	push eax
0x804a949:   e8 29 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a94e:   83 c4 10                        	add esp, 0x10
0x804a951:   b8 03 00 00 00                  	mov eax, 3
0x804a956:   89 c2                           	mov edx, eax
0x804a958:   83 ec 04                        	sub esp, 4
0x804a95b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a95e:   8d 83 9c dd ff ff               	lea eax, [ebx - 0x2264]
0x804a964:   50                              	push eax
0x804a965:   52                              	push edx
0x804a966:   e8 0c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a96b:   83 c4 10                        	add esp, 0x10
0x804a96e:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804a975:   98                              	cwde 
0x804a976:   83 ec 04                        	sub esp, 4
0x804a979:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a97c:   8d 93 a1 dd ff ff               	lea edx, [ebx - 0x225f]
0x804a982:   52                              	push edx
0x804a983:   50                              	push eax
0x804a984:   e8 ee eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a989:   83 c4 10                        	add esp, 0x10
0x804a98c:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804a993:   0f b6 c0                        	movzx eax, al
0x804a996:   83 ec 04                        	sub esp, 4
0x804a999:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a99c:   8d 93 a6 dd ff ff               	lea edx, [ebx - 0x225a]
0x804a9a2:   52                              	push edx
0x804a9a3:   50                              	push eax
0x804a9a4:   e8 ce eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9a9:   83 c4 10                        	add esp, 0x10
0x804a9ac:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804a9b3:   98                              	cwde 
0x804a9b4:   83 ec 04                        	sub esp, 4
0x804a9b7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ba:   8d 93 ab dd ff ff               	lea edx, [ebx - 0x2255]
0x804a9c0:   52                              	push edx
0x804a9c1:   50                              	push eax
0x804a9c2:   e8 b0 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9c7:   83 c4 10                        	add esp, 0x10
0x804a9ca:   0f b6 83 32 00 00 00            	movzx eax, byte ptr [ebx + 0x32]
0x804a9d1:   0f be c0                        	movsx eax, al
0x804a9d4:   83 ec 04                        	sub esp, 4
0x804a9d7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9da:   8d 93 b0 dd ff ff               	lea edx, [ebx - 0x2250]
0x804a9e0:   52                              	push edx
0x804a9e1:   50                              	push eax
0x804a9e2:   e8 90 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9e7:   83 c4 10                        	add esp, 0x10
0x804a9ea:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a9f1:   0f b7 c0                        	movzx eax, ax
0x804a9f4:   83 ec 04                        	sub esp, 4
0x804a9f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fa:   8d 93 b5 dd ff ff               	lea edx, [ebx - 0x224b]
0x804aa00:   52                              	push edx
0x804aa01:   50                              	push eax
0x804aa02:   e8 70 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa07:   83 c4 10                        	add esp, 0x10
0x804aa0a:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aa10:   83 ec 04                        	sub esp, 4
0x804aa13:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa16:   8d 93 ba dd ff ff               	lea edx, [ebx - 0x2246]
0x804aa1c:   52                              	push edx
0x804aa1d:   50                              	push eax
0x804aa1e:   e8 54 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa23:   83 c4 10                        	add esp, 0x10
0x804aa26:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804aa2d:   98                              	cwde 
0x804aa2e:   83 ec 04                        	sub esp, 4
0x804aa31:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa34:   8d 93 bf dd ff ff               	lea edx, [ebx - 0x2241]
0x804aa3a:   52                              	push edx
0x804aa3b:   50                              	push eax
0x804aa3c:   e8 36 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa41:   83 c4 10                        	add esp, 0x10
0x804aa44:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aa4a:   89 c2                           	mov edx, eax
0x804aa4c:   83 ec 04                        	sub esp, 4
0x804aa4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa52:   8d 83 c5 dd ff ff               	lea eax, [ebx - 0x223b]
0x804aa58:   50                              	push eax
0x804aa59:   52                              	push edx
0x804aa5a:   e8 18 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa5f:   83 c4 10                        	add esp, 0x10
0x804aa62:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804aa69:   98                              	cwde 
0x804aa6a:   83 ec 04                        	sub esp, 4
0x804aa6d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa70:   8d 93 cb dd ff ff               	lea edx, [ebx - 0x2235]
0x804aa76:   52                              	push edx
0x804aa77:   50                              	push eax
0x804aa78:   e8 fa ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa7d:   83 c4 10                        	add esp, 0x10
0x804aa80:   0f b6 83 42 00 00 00            	movzx eax, byte ptr [ebx + 0x42]
0x804aa87:   0f be c0                        	movsx eax, al
0x804aa8a:   83 ec 04                        	sub esp, 4
0x804aa8d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa90:   8d 93 d1 dd ff ff               	lea edx, [ebx - 0x222f]
0x804aa96:   52                              	push edx
0x804aa97:   50                              	push eax
0x804aa98:   e8 da ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa9d:   83 c4 10                        	add esp, 0x10
0x804aaa0:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aaa6:   89 c2                           	mov edx, eax
0x804aaa8:   83 ec 04                        	sub esp, 4
0x804aaab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaae:   8d 83 d7 dd ff ff               	lea eax, [ebx - 0x2229]
0x804aab4:   50                              	push eax
0x804aab5:   52                              	push edx
0x804aab6:   e8 bc ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aabb:   83 c4 10                        	add esp, 0x10
0x804aabe:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804aac5:   0f b7 c0                        	movzx eax, ax
0x804aac8:   83 ec 04                        	sub esp, 4
0x804aacb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aace:   8d 93 dd dd ff ff               	lea edx, [ebx - 0x2223]
0x804aad4:   52                              	push edx
0x804aad5:   50                              	push eax
0x804aad6:   e8 9c ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aadb:   83 c4 10                        	add esp, 0x10
0x804aade:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aae4:   89 c2                           	mov edx, eax
0x804aae6:   83 ec 04                        	sub esp, 4
0x804aae9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaec:   8d 83 e3 dd ff ff               	lea eax, [ebx - 0x221d]
0x804aaf2:   50                              	push eax
0x804aaf3:   52                              	push edx
0x804aaf4:   e8 7e ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaf9:   83 c4 10                        	add esp, 0x10
0x804aafc:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804ab03:   98                              	cwde 
0x804ab04:   83 ec 04                        	sub esp, 4
0x804ab07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0a:   8d 93 e9 dd ff ff               	lea edx, [ebx - 0x2217]
0x804ab10:   52                              	push edx
0x804ab11:   50                              	push eax
0x804ab12:   e8 60 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab17:   83 c4 10                        	add esp, 0x10
0x804ab1a:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804ab21:   98                              	cwde 
0x804ab22:   83 ec 04                        	sub esp, 4
0x804ab25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab28:   8d 93 ef dd ff ff               	lea edx, [ebx - 0x2211]
0x804ab2e:   52                              	push edx
0x804ab2f:   50                              	push eax
0x804ab30:   e8 42 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab35:   83 c4 10                        	add esp, 0x10
0x804ab38:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ab3e:   89 c2                           	mov edx, eax
0x804ab40:   83 ec 04                        	sub esp, 4
0x804ab43:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab46:   8d 83 f5 dd ff ff               	lea eax, [ebx - 0x220b]
0x804ab4c:   50                              	push eax
0x804ab4d:   52                              	push edx
0x804ab4e:   e8 24 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab53:   83 c4 10                        	add esp, 0x10
0x804ab56:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ab5c:   83 ec 04                        	sub esp, 4
0x804ab5f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab62:   8d 93 fb dd ff ff               	lea edx, [ebx - 0x2205]
0x804ab68:   52                              	push edx
0x804ab69:   50                              	push eax
0x804ab6a:   e8 08 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab6f:   83 c4 10                        	add esp, 0x10
0x804ab72:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804ab79:   0f be c0                        	movsx eax, al
0x804ab7c:   83 ec 04                        	sub esp, 4
0x804ab7f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab82:   8d 93 01 de ff ff               	lea edx, [ebx - 0x21ff]
0x804ab88:   52                              	push edx
0x804ab89:   50                              	push eax
0x804ab8a:   e8 e8 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab8f:   83 c4 10                        	add esp, 0x10
0x804ab92:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ab98:   83 ec 04                        	sub esp, 4
0x804ab9b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab9e:   8d 93 07 de ff ff               	lea edx, [ebx - 0x21f9]
0x804aba4:   52                              	push edx
0x804aba5:   50                              	push eax
0x804aba6:   e8 cc e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abab:   83 c4 10                        	add esp, 0x10
0x804abae:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804abb4:   89 c2                           	mov edx, eax
0x804abb6:   83 ec 04                        	sub esp, 4
0x804abb9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abbc:   8d 83 0d de ff ff               	lea eax, [ebx - 0x21f3]
0x804abc2:   50                              	push eax
0x804abc3:   52                              	push edx
0x804abc4:   e8 ae e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc9:   83 c4 10                        	add esp, 0x10
0x804abcc:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804abd2:   89 c2                           	mov edx, eax
0x804abd4:   83 ec 04                        	sub esp, 4
0x804abd7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abda:   8d 83 13 de ff ff               	lea eax, [ebx - 0x21ed]
0x804abe0:   50                              	push eax
0x804abe1:   52                              	push edx
0x804abe2:   e8 90 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abe7:   83 c4 10                        	add esp, 0x10
0x804abea:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804abf1:   0f be c0                        	movsx eax, al
0x804abf4:   83 ec 04                        	sub esp, 4
0x804abf7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abfa:   8d 93 19 de ff ff               	lea edx, [ebx - 0x21e7]
0x804ac00:   52                              	push edx
0x804ac01:   50                              	push eax
0x804ac02:   e8 70 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac07:   83 c4 10                        	add esp, 0x10
0x804ac0a:   0f b7 83 6e 00 00 00            	movzx eax, word ptr [ebx + 0x6e]
0x804ac11:   98                              	cwde 
0x804ac12:   83 ec 04                        	sub esp, 4
0x804ac15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac18:   8d 93 1f de ff ff               	lea edx, [ebx - 0x21e1]
0x804ac1e:   52                              	push edx
0x804ac1f:   50                              	push eax
0x804ac20:   e8 52 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac25:   83 c4 10                        	add esp, 0x10
0x804ac28:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804ac2e:   89 c2                           	mov edx, eax
0x804ac30:   83 ec 04                        	sub esp, 4
0x804ac33:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac36:   8d 83 25 de ff ff               	lea eax, [ebx - 0x21db]
0x804ac3c:   50                              	push eax
0x804ac3d:   52                              	push edx
0x804ac3e:   e8 34 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac43:   83 c4 10                        	add esp, 0x10
0x804ac46:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ac4c:   83 ec 04                        	sub esp, 4
0x804ac4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac52:   8d 93 2b de ff ff               	lea edx, [ebx - 0x21d5]
0x804ac58:   52                              	push edx
0x804ac59:   50                              	push eax
0x804ac5a:   e8 18 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac5f:   83 c4 10                        	add esp, 0x10
0x804ac62:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804ac69:   0f be c0                        	movsx eax, al
0x804ac6c:   83 ec 04                        	sub esp, 4
0x804ac6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac72:   8d 93 31 de ff ff               	lea edx, [ebx - 0x21cf]
0x804ac78:   52                              	push edx
0x804ac79:   50                              	push eax
0x804ac7a:   e8 f8 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac7f:   83 c4 10                        	add esp, 0x10
0x804ac82:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ac88:   f7 d0                           	not eax
0x804ac8a:   83 ec 08                        	sub esp, 8
0x804ac8d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac90:   50                              	push eax
0x804ac91:   e8 d0 d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ac96:   83 c4 10                        	add esp, 0x10
0x804ac99:   b8 00 00 00 00                  	mov eax, 0
0x804ac9e:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aca1:   59                              	pop ecx
0x804aca2:   5b                              	pop ebx
0x804aca3:   5d                              	pop ebp
0x804aca4:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aca7:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aca8 -- 0x804acac
0x804aca8:   8b 04 24                        	mov eax, dword ptr [esp]
0x804acab:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804acac -- 0x804acb0
0x804acac:   8b 14 24                        	mov edx, dword ptr [esp]
0x804acaf:   c3                              	ret 
; function: __libc_csu_init at 0x804acb0 -- 0x804ad0d
0x804acb0:   55                              	push ebp
0x804acb1:   57                              	push edi
0x804acb2:   56                              	push esi
0x804acb3:   53                              	push ebx
0x804acb4:   e8 d7 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804acb9:   81 c3 47 23 00 00               	add ebx, 0x2347
0x804acbf:   83 ec 0c                        	sub esp, 0xc
0x804acc2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804acc6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804accc:   e8 fb d5 ff ff                  	call 0x80482cc <_init>
0x804acd1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804acd7:   29 c6                           	sub esi, eax
0x804acd9:   c1 fe 02                        	sar esi, 2
0x804acdc:   85 f6                           	test esi, esi
0x804acde:   74 25                           	je 0x804ad05 <__libc_csu_init+0x55>
0x804ace0:   31 ff                           	xor edi, edi
0x804ace2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ace8:   83 ec 04                        	sub esp, 4
0x804aceb:   55                              	push ebp
0x804acec:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804acf0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804acf4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804acfb:   83 c7 01                        	add edi, 1
0x804acfe:   83 c4 10                        	add esp, 0x10
0x804ad01:   39 fe                           	cmp esi, edi
0x804ad03:   75 e3                           	jne 0x804ace8 <__libc_csu_init+0x38>
0x804ad05:   83 c4 0c                        	add esp, 0xc
0x804ad08:   5b                              	pop ebx
0x804ad09:   5e                              	pop esi
0x804ad0a:   5f                              	pop edi
0x804ad0b:   5d                              	pop ebp
0x804ad0c:   c3                              	ret 
; data inside code section at 0x804ad0d -- 0x804ad10
0x804ad0d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ad10 -- 0x804ad12
0x804ad10:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ad14 -- 0x804ad28
0x804ad14:   53                              	push ebx
0x804ad15:   83 ec 08                        	sub esp, 8
0x804ad18:   e8 73 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad1d:   81 c3 e3 22 00 00               	add ebx, 0x22e3
0x804ad23:   83 c4 08                        	add esp, 8
0x804ad26:   5b                              	pop ebx
0x804ad27:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 2c ad 04 08  04 00 00 00 11 00 10 00   |....,...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ad28:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ad38:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ad48:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ad58:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ad68:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ad78:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ad88:   03 00 00 00 31 00 67 5f  36 00 67 5f 31 37 00 67   |....1.g_6.g_17.g|
0x804ad98:   5f 31 38 00 67 5f 32 38  00 67 5f 34 33 00 67 5f   |_18.g_28.g_43.g_|
0x804ada8:   37 31 00 67 5f 37 33 00  67 5f 37 34 00 67 5f 39   |71.g_73.g_74.g_9|
0x804adb8:   30 00 67 5f 39 31 00 67  5f 31 30 35 00 67 5f 31   |0.g_91.g_105.g_1|
0x804adc8:   30 36 00 67 5f 31 30 39  00 67 5f 31 31 30 00 67   |06.g_109.g_110.g|
0x804add8:   5f 31 32 35 00 67 5f 31  33 36 00 67 5f 31 34 37   |_125.g_136.g_147|
0x804ade8:   00 67 5f 31 36 33 00 67  5f 31 39 33 00 67 5f 31   |.g_163.g_193.g_1|
0x804adf8:   39 38 00 67 5f 32 30 31  00 67 5f 32 30 33 00 67   |98.g_201.g_203.g|
0x804ae08:   5f 32 30 34 00 67 5f 32  31 30 00 67 5f 32 34 39   |_204.g_210.g_249|
0x804ae18:   00 67 5f 32 35 32 00 67  5f 32 35 33 00 67 5f 32   |.g_252.g_253.g_2|
0x804ae28:   35 34 00 67 5f 32 35 36  00 67 5f 33 33 30 00 00   |54.g_256.g_330..|
0x804ae38:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804ae48:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804ae58:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ae68:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ae78:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ae88:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ae98:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804aea0:   01 1b 03 3b b8 02 00 00  56 00 00 00 50 d4 ff ff   |...;....V...P...|
0x804aeb0:   e8 02 00 00 90 d4 ff ff  0c 03 00 00 e0 d4 ff ff   |................|
0x804aec0:   d4 02 00 00 b6 d5 ff ff  20 03 00 00 c6 d5 ff ff   |........ .......|
0x804aed0:   40 03 00 00 f4 d5 ff ff  64 03 00 00 12 d6 ff ff   |@.......d.......|
0x804aee0:   84 03 00 00 3a d6 ff ff  a4 03 00 00 64 d6 ff ff   |....:.......d...|
0x804aef0:   c4 03 00 00 8d d6 ff ff  e4 03 00 00 d0 d6 ff ff   |................|
0x804af00:   04 04 00 00 11 d7 ff ff  24 04 00 00 69 d7 ff ff   |........$...i...|
0x804af10:   48 04 00 00 bb d7 ff ff  6c 04 00 00 f8 d7 ff ff   |H.......l.......|
0x804af20:   8c 04 00 00 2f d8 ff ff  ac 04 00 00 4e d8 ff ff   |..../.......N...|
0x804af30:   cc 04 00 00 78 d8 ff ff  ec 04 00 00 a4 d8 ff ff   |....x...........|
0x804af40:   0c 05 00 00 cf d8 ff ff  2c 05 00 00 18 d9 ff ff   |........,.......|
0x804af50:   4c 05 00 00 5f d9 ff ff  6c 05 00 00 b9 d9 ff ff   |L..._...l.......|
0x804af60:   90 05 00 00 0d da ff ff  b4 05 00 00 4c da ff ff   |............L...|
0x804af70:   d4 05 00 00 85 da ff ff  f4 05 00 00 a7 da ff ff   |................|
0x804af80:   14 06 00 00 f5 da ff ff  34 06 00 00 31 db ff ff   |........4...1...|
0x804af90:   54 06 00 00 ba db ff ff  74 06 00 00 ec db ff ff   |T.......t.......|
0x804afa0:   94 06 00 00 1c dc ff ff  b4 06 00 00 61 dc ff ff   |............a...|
0x804afb0:   d4 06 00 00 a0 dc ff ff  f4 06 00 00 d2 dc ff ff   |................|
0x804afc0:   14 07 00 00 fe dc ff ff  34 07 00 00 1c dd ff ff   |........4.......|
0x804afd0:   54 07 00 00 44 dd ff ff  74 07 00 00 69 dd ff ff   |T...D...t...i...|
0x804afe0:   94 07 00 00 8e dd ff ff  b4 07 00 00 c5 dd ff ff   |................|
0x804aff0:   d4 07 00 00 f9 dd ff ff  f4 07 00 00 4b de ff ff   |............K...|
0x804b000:   18 08 00 00 97 de ff ff  3c 08 00 00 ce de ff ff   |........<.......|
0x804b010:   5c 08 00 00 ff de ff ff  7c 08 00 00 1e df ff ff   |\.......|.......|
0x804b020:   9c 08 00 00 48 df ff ff  bc 08 00 00 70 df ff ff   |....H.......p...|
0x804b030:   dc 08 00 00 99 df ff ff  fc 08 00 00 d5 df ff ff   |................|
0x804b040:   1c 09 00 00 0f e0 ff ff  3c 09 00 00 62 e0 ff ff   |........<...b...|
0x804b050:   60 09 00 00 af e0 ff ff  84 09 00 00 e7 e0 ff ff   |`...............|
0x804b060:   a4 09 00 00 19 e1 ff ff  c4 09 00 00 2d e1 ff ff   |............-...|
0x804b070:   e4 09 00 00 44 e1 ff ff  04 0a 00 00 59 e1 ff ff   |....D.......Y...|
0x804b080:   24 0a 00 00 6f e1 ff ff  44 0a 00 00 96 e1 ff ff   |$...o...D.......|
0x804b090:   64 0a 00 00 bb e1 ff ff  84 0a 00 00 fa e1 ff ff   |d...............|
0x804b0a0:   a4 0a 00 00 33 e2 ff ff  c4 0a 00 00 5f e2 ff ff   |....3......._...|
0x804b0b0:   e4 0a 00 00 85 e2 ff ff  04 0b 00 00 c7 e2 ff ff   |................|
0x804b0c0:   24 0b 00 00 09 e3 ff ff  44 0b 00 00 4b e3 ff ff   |$.......D...K...|
0x804b0d0:   64 0b 00 00 c0 e3 ff ff  84 0b 00 00 1d e4 ff ff   |d...............|
0x804b0e0:   a4 0b 00 00 7a e4 ff ff  c4 0b 00 00 d7 e4 ff ff   |....z...........|
0x804b0f0:   e4 0b 00 00 67 e5 ff ff  04 0c 00 00 cb e5 ff ff   |....g...........|
0x804b100:   24 0c 00 00 3b e6 ff ff  44 0c 00 00 82 e6 ff ff   |$...;...D.......|
0x804b110:   68 0c 00 00 d7 e6 ff ff  88 0c 00 00 1e e7 ff ff   |h...............|
0x804b120:   ac 0c 00 00 86 e7 ff ff  d0 0c 00 00 a0 e9 ff ff   |................|
0x804b130:   00 0d 00 00 f7 f9 ff ff  30 0d 00 00 08 fe ff ff   |........0.......|
0x804b140:   68 0d 00 00 0c fe ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b150:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b15c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b16c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b17c:   04 d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b18c:   30 00 00 00 60 d1 ff ff  40 00 00 00 00 0e 08 46   |0...`...@......F|
0x804b19c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b1ac:   10 00 00 00 54 00 00 00  7c d1 ff ff 08 00 00 00   |....T...|.......|
0x804b1bc:   00 00 00 00 1c 00 00 00  68 00 00 00 8e d2 ff ff   |........h.......|
0x804b1cc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b1dc:   04 04 00 00 20 00 00 00  88 00 00 00 7e d2 ff ff   |.... .......~...|
0x804b1ec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b1fc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b20c:   88 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b21c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b22c:   86 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b23c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b24c:   8e d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b25c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b26c:   98 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b27c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b28c:   a1 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b29c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b2ac:   c4 d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b2bc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b2cc:   e5 d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b2dc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b2ec:   90 01 00 00 19 d3 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b2fc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b30c:   1c 00 00 00 b4 01 00 00  47 d3 ff ff 3d 00 00 00   |........G...=...|
0x804b31c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b32c:   1c 00 00 00 d4 01 00 00  64 d3 ff ff 37 00 00 00   |........d...7...|
0x804b33c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b34c:   1c 00 00 00 f4 01 00 00  7b d3 ff ff 1f 00 00 00   |........{.......|
0x804b35c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b36c:   1c 00 00 00 14 02 00 00  7a d3 ff ff 2a 00 00 00   |........z...*...|
0x804b37c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b38c:   1c 00 00 00 34 02 00 00  84 d3 ff ff 2c 00 00 00   |....4.......,...|
0x804b39c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b3ac:   1c 00 00 00 54 02 00 00  90 d3 ff ff 2b 00 00 00   |....T.......+...|
0x804b3bc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b3cc:   1c 00 00 00 74 02 00 00  9b d3 ff ff 49 00 00 00   |....t.......I...|
0x804b3dc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b3ec:   1c 00 00 00 94 02 00 00  c4 d3 ff ff 47 00 00 00   |............G...|
0x804b3fc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b40c:   20 00 00 00 b4 02 00 00  eb d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b41c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b42c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 21 d4 ff ff   |.... .......!...|
0x804b43c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b44c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b45c:   51 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Q...?....A....B.|
0x804b46c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b47c:   70 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |p...9....A....B.|
0x804b48c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b49c:   89 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b4ac:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b4bc:   8b d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b4cc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b4dc:   b9 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b4ec:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b4fc:   d5 d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b50c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b51c:   3e d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |>...2....A....B.|
0x804b52c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b53c:   50 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |P...0....A....B.|
0x804b54c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b55c:   60 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |`...E....A....B.|
0x804b56c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b57c:   85 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b58c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b59c:   a4 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b5ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b5bc:   b6 d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b5cc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b5dc:   c2 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5ec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b5fc:   c0 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b60c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b61c:   c8 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b62c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b63c:   cd d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b64c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b65c:   d2 d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b66c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b67c:   e9 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b68c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b69c:   fd d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b6ac:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b6bc:   60 05 00 00 2b d6 ff ff  4c 00 00 00 00 41 0e 08   |`...+...L....A..|
0x804b6cc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b6dc:   1c 00 00 00 84 05 00 00  53 d6 ff ff 37 00 00 00   |........S...7...|
0x804b6ec:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6fc:   1c 00 00 00 a4 05 00 00  6a d6 ff ff 31 00 00 00   |........j...1...|
0x804b70c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b71c:   1c 00 00 00 c4 05 00 00  7b d6 ff ff 1f 00 00 00   |........{.......|
0x804b72c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b73c:   1c 00 00 00 e4 05 00 00  7a d6 ff ff 2a 00 00 00   |........z...*...|
0x804b74c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b75c:   1c 00 00 00 04 06 00 00  84 d6 ff ff 28 00 00 00   |............(...|
0x804b76c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b77c:   1c 00 00 00 24 06 00 00  8c d6 ff ff 29 00 00 00   |....$.......)...|
0x804b78c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b79c:   1c 00 00 00 44 06 00 00  95 d6 ff ff 3c 00 00 00   |....D.......<...|
0x804b7ac:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b7bc:   1c 00 00 00 64 06 00 00  b1 d6 ff ff 3a 00 00 00   |....d.......:...|
0x804b7cc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b7dc:   20 00 00 00 84 06 00 00  cb d6 ff ff 53 00 00 00   | ...........S...|
0x804b7ec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b7fc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 fa d6 ff ff   |.... ...........|
0x804b80c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b81c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b82c:   23 d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |#...8....A....B.|
0x804b83c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b84c:   3b d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |;...2....A....B.|
0x804b85c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b86c:   4d d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804b87c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b88c:   41 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |A........A....B.|
0x804b89c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b8ac:   38 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804b8bc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b8cc:   2d d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804b8dc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b8ec:   23 d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |#...'....A....B.|
0x804b8fc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b90c:   2a d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |*...%....A....B.|
0x804b91c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b92c:   2f d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |/...?....A....B.|
0x804b93c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b94c:   4e d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |N...9....A....B.|
0x804b95c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b96c:   67 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |g...,....A....B.|
0x804b97c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b98c:   73 d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |s...&....A....B.|
0x804b99c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b9ac:   79 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |y...B....A....B.|
0x804b9bc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b9cc:   9b d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9dc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b9ec:   bd d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9fc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ba0c:   df d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804ba1c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804ba2c:   34 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |4...]....A....B.|
0x804ba3c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ba4c:   71 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |q...]....A....B.|
0x804ba5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804ba6c:   ae d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804ba8c:   eb d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba9c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804baac:   5b d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |[...d....A....B.|
0x804babc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bacc:   9f d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804badc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804baec:   ef d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bafc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bb0c:   b0 09 00 00 12 da ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bb1c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bb2c:   d0 09 00 00 47 da ff ff  47 00 00 00 00 41 0e 08   |....G...G....A..|
0x804bb3c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bb4c:   20 00 00 00 f4 09 00 00  6a da ff ff 68 00 00 00   | .......j...h...|
0x804bb5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bb6c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 ae da ff ff   |....,...........|
0x804bb7c:   1a 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bb8c:   86 04 83 05 03 0d 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bb9c:   04 00 00 00 2c 00 00 00  48 0a 00 00 98 dc ff ff   |....,...H.......|
0x804bbac:   57 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |W....A....B..I..|
0x804bbbc:   86 04 83 05 03 47 10 c3  41 c6 41 c7 41 c5 0c 04   |.....G..A.A.A...|
0x804bbcc:   04 00 00 00 34 00 00 00  78 0a 00 00 bf ec ff ff   |....4...x.......|
0x804bbdc:   11 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bbec:   0f 03 75 78 06 10 03 02  75 7c 03 fc 03 c1 0c 01   |..ux....u|......|
0x804bbfc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bc0c:   b0 0a 00 00 98 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bc1c:   10 00 00 00 c4 0a 00 00  88 f0 ff ff 04 00 00 00   |................|
0x804bc2c:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804bc3c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bc4c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bc5c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bc6c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bc7c:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804bc8c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 14 ad 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 5d 90 eb 73   |............]..s|
0x804d028:   fe 00 1b b6 33 3b 75 00  ff ff 2c 00 75 2d 15 26   |....3;u...,.u-.&|
0x804d038:   f6 ff 00 00 b0 6b f6 28  74 06 01 00 ff ff ff ff   |.....k.(t.......|
0x804d048:   97 ca 00 00 25 68 69 df  a2 00 b4 a1 ff ff ff ff   |....%hi.........|
0x804d058:   6c 90 7f ca 9d 00 00 00  be d3 55 2d f8 ff ff ff   |l.........U-....|
0x804d068:   74 6f ad 5c b4 00 8b e7  04 00 00 00 01 ??         |to.\.........?  |
