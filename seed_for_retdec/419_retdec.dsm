;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:22:19
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 00 df ff ff               	lea eax, [ebx - 0x2100]
0x804835c:   50                              	push eax
0x804835d:   8d 83 a0 de ff ff               	lea eax, [ebx - 0x2160]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 d3 a9 04 08               	mov eax, 0x804a9d3
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 88 d0 04 08                  	mov eax, 0x804d088
0x80483a5:   3d 88 d0 04 08                  	cmp eax, 0x804d088
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 88 d0 04 08                  	push 0x804d088
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 88 d0 04 08                  	mov eax, 0x804d088
0x80483e5:   2d 88 d0 04 08                  	sub eax, 0x804d088
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 88 d0 04 08                  	push 0x804d088
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 d0 04 08 00            	cmp byte ptr [0x804d0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 d0 04 08 01            	mov byte ptr [0x804d0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 39 2a 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 25 2a 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 20 df ff ff               	lea edx, [eax - 0x20e0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 f8 29 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 da 29 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 b2 29 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 88 29 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 5f 29 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 1c 29 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 da 28 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 82 28 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 31 28 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 f4 27 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 bd 27 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 9e 27 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 74 27 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 48 27 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 1d 27 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 d4 26 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 8c 26 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 32 26 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 df 25 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 a0 25 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 6a 25 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 48 25 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 fa 24 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 be 24 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 35 24 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 03 24 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 d3 23 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 8e 23 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 4f 23 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 1d 23 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 ee 22 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 d0 22 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 a8 22 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 83 22 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 5e 22 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 27 22 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 f2 21 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 a0 21 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 55 21 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 1e 21 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 ed 20 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 ce 20 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 a4 20 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 7c 20 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 53 20 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 17 20 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 dc 1f 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 89 1f 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 3d 1f 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 05 1f 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 d6 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 c2 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 ab 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 96 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 80 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 59 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 34 1e 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 f5 1d 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 bc 1d 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 90 1d 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 6a 1d 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 40 e0 ff ff               	fld dword ptr [eax - 0x1fc0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 40 e0 ff ff               	fld dword ptr [eax - 0x1fc0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 44 e0 ff ff               	fld dword ptr [eax - 0x1fbc]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 28 1d 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 40 e0 ff ff               	fld dword ptr [eax - 0x1fc0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 40 e0 ff ff               	fld dword ptr [eax - 0x1fc0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 44 e0 ff ff               	fld dword ptr [eax - 0x1fbc]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 e6 1c 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 48 e0 ff ff               	fld dword ptr [eax - 0x1fb8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 4c e0 ff ff               	fld dword ptr [eax - 0x1fb4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 50 e0 ff ff               	fld dword ptr [eax - 0x1fb0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 a4 1c 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 54 e0 ff ff               	fld dword ptr [eax - 0x1fac]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 58 e0 ff ff               	fld dword ptr [eax - 0x1fa8]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 5c e0 ff ff               	fld dword ptr [eax - 0x1fa4]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 2c 1c 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 60 e0 ff ff               	fld qword ptr [eax - 0x1fa0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 60 e0 ff ff               	fld qword ptr [eax - 0x1fa0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 68 e0 ff ff               	fld qword ptr [eax - 0x1f98]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 cf 1b 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 60 e0 ff ff               	fld qword ptr [eax - 0x1fa0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 60 e0 ff ff               	fld qword ptr [eax - 0x1fa0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 68 e0 ff ff               	fld qword ptr [eax - 0x1f98]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 72 1b 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 70 e0 ff ff               	fld qword ptr [eax - 0x1f90]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 78 e0 ff ff               	fld qword ptr [eax - 0x1f88]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 80 e0 ff ff               	fld qword ptr [eax - 0x1f80]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 15 1b 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 88 e0 ff ff               	fld qword ptr [eax - 0x1f78]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 90 e0 ff ff               	fld qword ptr [eax - 0x1f70]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 98 e0 ff ff               	fld qword ptr [eax - 0x1f68]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 85 1a 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a0 e0 ff ff               	fld dword ptr [eax - 0x1f60]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 a4 e0 ff ff               	fld dword ptr [eax - 0x1f5c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 21 1a 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 b0 19 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 6d 19 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 30 df ff ff               	lea eax, [ebx - 0x20d0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 54 df ff ff               	lea eax, [ebx - 0x20ac]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804982b
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 54                        	sub esp, 0x54
0x804962f:   e8 63 18 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x804963c:   8b 4d 30                        	mov ecx, dword ptr [ebp + 0x30]
0x804963f:   8b 5d 34                        	mov ebx, dword ptr [ebp + 0x34]
0x8049642:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049645:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049648:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804964b:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x804964e:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049651:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x8049654:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049657:   8b 7d 68                        	mov edi, dword ptr [ebp + 0x68]
0x804965a:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804965d:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x8049660:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049663:   8b 7d 70                        	mov edi, dword ptr [ebp + 0x70]
0x8049666:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049669:   8b 7d 74                        	mov edi, dword ptr [ebp + 0x74]
0x804966c:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x804966f:   8b bd 84 00 00 00               	mov edi, dword ptr [ebp + 0x84]
0x8049675:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x8049678:   8b bd 8c 00 00 00               	mov edi, dword ptr [ebp + 0x8c]
0x804967e:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049682:   89 ca                           	mov edx, ecx
0x8049684:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049687:   89 da                           	mov edx, ebx
0x8049689:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x804968c:   89 f2                           	mov edx, esi
0x804968e:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x8049691:   0f b6 55 bc                     	movzx edx, byte ptr [ebp - 0x44]
0x8049695:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x8049698:   0f b6 55 b8                     	movzx edx, byte ptr [ebp - 0x48]
0x804969c:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x804969f:   0f b7 55 b4                     	movzx edx, word ptr [ebp - 0x4c]
0x80496a3:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x80496a7:   0f b7 55 b0                     	movzx edx, word ptr [ebp - 0x50]
0x80496ab:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x80496af:   0f b6 55 ac                     	movzx edx, byte ptr [ebp - 0x54]
0x80496b3:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496b6:   0f b7 55 a8                     	movzx edx, word ptr [ebp - 0x58]
0x80496ba:   66 89 55 cc                     	mov word ptr [ebp - 0x34], dx
0x80496be:   0f b7 55 a4                     	movzx edx, word ptr [ebp - 0x5c]
0x80496c2:   66 89 55 c8                     	mov word ptr [ebp - 0x38], dx
0x80496c6:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x80496ca:   66 89 55 c4                     	mov word ptr [ebp - 0x3c], dx
0x80496ce:   89 fa                           	mov edx, edi
0x80496d0:   88 55 c0                        	mov byte ptr [ebp - 0x40], dl
0x80496d3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496d6:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496dc:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496df:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496e5:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496e8:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496ee:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496f1:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496f7:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496fa:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x8049700:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x8049703:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x8049709:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x804970c:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x8049712:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x8049715:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x804971b:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x804971f:   66 89 90 44 00 00 00            	mov word ptr [eax + 0x44], dx
0x8049726:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x8049729:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x804972f:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x8049733:   88 90 4c 00 00 00               	mov byte ptr [eax + 0x4c], dl
0x8049739:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x804973d:   88 90 4d 00 00 00               	mov byte ptr [eax + 0x4d], dl
0x8049743:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x8049747:   88 90 c4 04 00 00               	mov byte ptr [eax + 0x4c4], dl
0x804974d:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x8049751:   88 90 4e 00 00 00               	mov byte ptr [eax + 0x4e], dl
0x8049757:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x804975a:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x8049760:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049763:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x8049769:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x804976d:   88 90 58 00 00 00               	mov byte ptr [eax + 0x58], dl
0x8049773:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049776:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x804977c:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x8049780:   66 89 90 60 00 00 00            	mov word ptr [eax + 0x60], dx
0x8049787:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804978a:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049790:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x8049793:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x8049799:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x804979c:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x80497a2:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x80497a5:   89 90 70 00 00 00               	mov dword ptr [eax + 0x70], edx
0x80497ab:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x80497ae:   89 90 c8 04 00 00               	mov dword ptr [eax + 0x4c8], edx
0x80497b4:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x80497b8:   66 89 90 74 00 00 00            	mov word ptr [eax + 0x74], dx
0x80497bf:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x80497c3:   88 90 76 00 00 00               	mov byte ptr [eax + 0x76], dl
0x80497c9:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x80497cd:   66 89 90 78 00 00 00            	mov word ptr [eax + 0x78], dx
0x80497d4:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x80497d8:   66 89 90 7a 00 00 00            	mov word ptr [eax + 0x7a], dx
0x80497df:   8b 55 78                        	mov edx, dword ptr [ebp + 0x78]
0x80497e2:   89 90 7c 00 00 00               	mov dword ptr [eax + 0x7c], edx
0x80497e8:   8b 55 7c                        	mov edx, dword ptr [ebp + 0x7c]
0x80497eb:   89 90 80 00 00 00               	mov dword ptr [eax + 0x80], edx
0x80497f1:   8b 95 80 00 00 00               	mov edx, dword ptr [ebp + 0x80]
0x80497f7:   89 90 cc 04 00 00               	mov dword ptr [eax + 0x4cc], edx
0x80497fd:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x8049801:   66 89 90 84 00 00 00            	mov word ptr [eax + 0x84], dx
0x8049808:   8b 95 88 00 00 00               	mov edx, dword ptr [ebp + 0x88]
0x804980e:   89 90 d0 04 00 00               	mov dword ptr [eax + 0x4d0], edx
0x8049814:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x8049818:   88 90 86 00 00 00               	mov byte ptr [eax + 0x86], dl
0x804981e:   b8 00 00 00 00                  	mov eax, 0
0x8049823:   83 c4 54                        	add esp, 0x54
0x8049826:   5b                              	pop ebx
0x8049827:   5e                              	pop esi
0x8049828:   5f                              	pop edi
0x8049829:   5d                              	pop ebp
0x804982a:   c3                              	ret 
; function: func_1 at 0x804982b -- 0x804a9d3
0x804982b:   55                              	push ebp
0x804982c:   89 e5                           	mov ebp, esp
0x804982e:   57                              	push edi
0x804982f:   56                              	push esi
0x8049830:   53                              	push ebx
0x8049831:   81 ec ec 01 00 00               	sub esp, 0x1ec
0x8049837:   e8 5b 16 00 00                  	call 0x804ae97 <__x86.get_pc_thunk.ax>
0x804983c:   05 c4 37 00 00                  	add eax, 0x37c4
0x8049841:   c7 45 f0 f7 ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffff7
0x8049848:   c7 45 ec a3 e1 b4 93            	mov dword ptr [ebp - 0x14], 0x93b4e1a3
0x804984f:   c7 45 e8 04 00 00 00            	mov dword ptr [ebp - 0x18], 4
0x8049856:   c7 45 e4 ff ff ff ff            	mov dword ptr [ebp - 0x1c], 0xffffffff
0x804985d:   c7 45 e0 c1 59 8a f9            	mov dword ptr [ebp - 0x20], 0xf98a59c1
0x8049864:   c7 45 dc e1 07 fc 3e            	mov dword ptr [ebp - 0x24], 0x3efc07e1
0x804986b:   c7 45 d8 da 51 15 e3            	mov dword ptr [ebp - 0x28], 0xe31551da
0x8049872:   c7 85 74 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0x8c], 8
0x804987c:   66 c7 45 d6 46 f8               	mov word ptr [ebp - 0x2a], 0xf846
0x8049882:   c7 45 d0 05 00 00 00            	mov dword ptr [ebp - 0x30], 5
0x8049889:   c6 45 cf 47                     	mov byte ptr [ebp - 0x31], 0x47
0x804988d:   c6 45 ce 52                     	mov byte ptr [ebp - 0x32], 0x52
0x8049891:   c6 45 cd 00                     	mov byte ptr [ebp - 0x33], 0
0x8049895:   66 c7 85 72 ff ff ff 68 24      	mov word ptr [ebp - 0x8e], 0x2468
0x804989e:   66 c7 85 70 ff ff ff fa ff      	mov word ptr [ebp - 0x90], 0xfffa
0x80498a7:   c6 45 cc ff                     	mov byte ptr [ebp - 0x34], 0xff
0x80498ab:   c7 45 c8 fc ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffc
0x80498b2:   c7 85 6c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0x94], 9
0x80498bc:   c6 45 c7 ff                     	mov byte ptr [ebp - 0x39], 0xff
0x80498c0:   c7 45 c0 b2 e4 dd d6            	mov dword ptr [ebp - 0x40], 0xd6dde4b2
0x80498c7:   66 c7 85 6a ff ff ff 65 1b      	mov word ptr [ebp - 0x96], 0x1b65
0x80498d0:   c7 85 64 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x9c], 0xffffffff
0x80498da:   c7 85 60 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa0], 0xffffffff
0x80498e4:   c7 45 bc fc ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffffc
0x80498eb:   c7 45 b8 67 88 5f 77            	mov dword ptr [ebp - 0x48], 0x775f8867
0x80498f2:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x80498f9:   66 c7 45 b2 c7 b0               	mov word ptr [ebp - 0x4e], 0xb0c7
0x80498ff:   c6 45 b1 f8                     	mov byte ptr [ebp - 0x4f], 0xf8
0x8049903:   66 c7 85 5e ff ff ff f8 ff      	mov word ptr [ebp - 0xa2], 0xfff8
0x804990c:   66 c7 45 ae ff ff               	mov word ptr [ebp - 0x52], 0xffff
0x8049912:   c7 45 a8 60 ec b0 f2            	mov dword ptr [ebp - 0x58], 0xf2b0ec60
0x8049919:   c7 45 a4 84 e7 7d 0a            	mov dword ptr [ebp - 0x5c], 0xa7de784
0x8049920:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049927:   66 c7 45 9e f9 16               	mov word ptr [ebp - 0x62], 0x16f9
0x804992d:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049937:   c6 45 9d 01                     	mov byte ptr [ebp - 0x63], 1
0x804993b:   c7 85 54 ff ff ff d3 0e c4 2b   	mov dword ptr [ebp - 0xac], 0x2bc40ed3
0x8049945:   66 c7 85 52 ff ff ff 01 00      	mov word ptr [ebp - 0xae], 1
0x804994e:   c6 85 51 ff ff ff ff            	mov byte ptr [ebp - 0xaf], 0xff
0x8049955:   c7 85 4c ff ff ff 08 4a 68 ba   	mov dword ptr [ebp - 0xb4], 0xba684a08
0x804995f:   c7 45 98 ff ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffff
0x8049966:   c7 45 94 01 00 00 00            	mov dword ptr [ebp - 0x6c], 1
0x804996d:   c7 45 90 14 f9 36 92            	mov dword ptr [ebp - 0x70], 0x9236f914
0x8049974:   66 c7 85 4a ff ff ff d7 86      	mov word ptr [ebp - 0xb6], 0x86d7
0x804997d:   c6 85 49 ff ff ff 00            	mov byte ptr [ebp - 0xb7], 0
0x8049984:   66 c7 85 46 ff ff ff 5e 5b      	mov word ptr [ebp - 0xba], 0x5b5e
0x804998d:   c7 85 40 ff ff ff 8f 02 53 7f   	mov dword ptr [ebp - 0xc0], 0x7f53028f
0x8049997:   c7 85 3c ff ff ff cb 98 85 a4   	mov dword ptr [ebp - 0xc4], 0xa48598cb
0x80499a1:   c6 85 3b ff ff ff c1            	mov byte ptr [ebp - 0xc5], 0xc1
0x80499a8:   66 c7 85 38 ff ff ff f5 21      	mov word ptr [ebp - 0xc8], 0x21f5
0x80499b1:   66 c7 85 36 ff ff ff 4d f4      	mov word ptr [ebp - 0xca], 0xf44d
0x80499ba:   c7 85 30 ff ff ff 95 b1 54 78   	mov dword ptr [ebp - 0xd0], 0x7854b195
0x80499c4:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x80499cb:   e9 67 01 00 00                  	jmp 0x8049b37 <func_1+0x30c>
0x80499d0:   c6 85 33 fe ff ff 15            	mov byte ptr [ebp - 0x1cd], 0x15
0x80499d7:   c7 45 d8 fc ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffffc
0x80499de:   83 7d d8 14                     	cmp dword ptr [ebp - 0x28], 0x14
0x80499e2:   0f 85 4b 01 00 00               	jne 0x8049b33 <func_1+0x308>
0x80499e8:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x80499ee:   0f b6 c0                        	movzx eax, al
0x80499f1:   8d 1c 00                        	lea ebx, [eax + eax]
0x80499f4:   80 bd 33 fe ff ff 00            	cmp byte ptr [ebp - 0x1cd], 0
0x80499fb:   0f 94 c0                        	sete al
0x80499fe:   0f b6 d0                        	movzx edx, al
0x8049a01:   0f b6 85 33 fe ff ff            	movzx eax, byte ptr [ebp - 0x1cd]
0x8049a08:   0f af c2                        	imul eax, edx
0x8049a0b:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049a0e:   85 c0                           	test eax, eax
0x8049a10:   0f 95 c0                        	setne al
0x8049a13:   0f b6 c0                        	movzx eax, al
0x8049a16:   0f bf 8d 52 ff ff ff            	movsx ecx, word ptr [ebp - 0xae]
0x8049a1d:   99                              	cdq 
0x8049a1e:   f7 f9                           	idiv ecx
0x8049a20:   89 d0                           	mov eax, edx
0x8049a22:   3d d5 55 62 88                  	cmp eax, 0x886255d5
0x8049a27:   74 07                           	je 0x8049a30 <func_1+0x205>
0x8049a29:   b8 f8 ff ff ff                  	mov eax, 0xfffffff8
0x8049a2e:   eb 05                           	jmp 0x8049a35 <func_1+0x20a>
0x8049a30:   b8 f7 ff ff ff                  	mov eax, 0xfffffff7
0x8049a35:   09 d8                           	or eax, ebx
0x8049a37:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a3a:   0f b6 45 9d                     	movzx eax, byte ptr [ebp - 0x63]
0x8049a3e:   0f b7 55 9e                     	movzx edx, word ptr [ebp - 0x62]
0x8049a42:   0f b7 4d ae                     	movzx ecx, word ptr [ebp - 0x52]
0x8049a46:   0f bf 9d 5e ff ff ff            	movsx ebx, word ptr [ebp - 0xa2]
0x8049a4d:   0f b6 75 b1                     	movzx esi, byte ptr [ebp - 0x4f]
0x8049a51:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x8049a55:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x8049a5b:   0f bf bd 6a ff ff ff            	movsx edi, word ptr [ebp - 0x96]
0x8049a62:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x8049a68:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049a6c:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x8049a72:   0f b6 7d cc                     	movzx edi, byte ptr [ebp - 0x34]
0x8049a76:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x8049a7c:   0f b6 7d cd                     	movzx edi, byte ptr [ebp - 0x33]
0x8049a80:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x8049a86:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x8049a8a:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x8049a90:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x8049a94:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x8049a9a:   0f bf 7d d6                     	movsx edi, word ptr [ebp - 0x2a]
0x8049a9e:   50                              	push eax
0x8049a9f:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049aa5:   52                              	push edx
0x8049aa6:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049aa9:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049aac:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049aaf:   51                              	push ecx
0x8049ab0:   53                              	push ebx
0x8049ab1:   56                              	push esi
0x8049ab2:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x8049ab8:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049abb:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049abe:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ac1:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x8049ac7:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049acd:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x8049ad3:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049ad6:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x8049adc:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049ae2:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049ae5:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x8049aeb:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x8049af1:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x8049af7:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x8049afd:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049b00:   57                              	push edi
0x8049b01:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049b07:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b0a:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049b0d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049b10:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049b13:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049b16:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049b19:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049b1c:   e8 05 fb ff ff                  	call 0x8049626 <set_var>
0x8049b21:   81 c4 88 00 00 00               	add esp, 0x88
0x8049b27:   0f bf 85 52 ff ff ff            	movsx eax, word ptr [ebp - 0xae]
0x8049b2e:   e9 98 0e 00 00                  	jmp 0x804a9cb <func_1+0x11a0>
0x8049b33:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x8049b37:   83 7d dc fa                     	cmp dword ptr [ebp - 0x24], -6
0x8049b3b:   0f 8c 8f fe ff ff               	jl 0x80499d0 <func_1+0x1a5>
0x8049b41:   66 c7 45 d6 00 00               	mov word ptr [ebp - 0x2a], 0
0x8049b47:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049b4b:   74 07                           	je 0x8049b54 <func_1+0x329>
0x8049b4d:   b8 01 00 00 00                  	mov eax, 1
0x8049b52:   eb 05                           	jmp 0x8049b59 <func_1+0x32e>
0x8049b54:   b8 00 00 00 00                  	mov eax, 0
0x8049b59:   23 85 54 ff ff ff               	and eax, dword ptr [ebp - 0xac]
0x8049b5f:   89 c2                           	mov edx, eax
0x8049b61:   0f b6 85 51 ff ff ff            	movzx eax, byte ptr [ebp - 0xaf]
0x8049b68:   39 c2                           	cmp edx, eax
0x8049b6a:   0f 86 3d 0c 00 00               	jbe 0x804a7ad <func_1+0xf82>
0x8049b70:   c7 85 24 ff ff ff 03 a6 a4 9f   	mov dword ptr [ebp - 0xdc], 0x9fa4a603
0x8049b7a:   c7 45 8c 2b 0b fa aa            	mov dword ptr [ebp - 0x74], 0xaafa0b2b
0x8049b81:   c6 85 23 ff ff ff 72            	mov byte ptr [ebp - 0xdd], 0x72
0x8049b88:   c7 85 1c ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xe4], 5
0x8049b92:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049b99:   c6 85 1b ff ff ff 00            	mov byte ptr [ebp - 0xe5], 0
0x8049ba0:   c7 85 14 ff ff ff c9 a8 60 1b   	mov dword ptr [ebp - 0xec], 0x1b60a8c9
0x8049baa:   c7 85 10 ff ff ff 05 40 b2 ca   	mov dword ptr [ebp - 0xf0], 0xcab24005
0x8049bb4:   66 c7 45 86 06 00               	mov word ptr [ebp - 0x7a], 6
0x8049bba:   c7 85 0c ff ff ff e4 64 2e aa   	mov dword ptr [ebp - 0xf4], 0xaa2e64e4
0x8049bc4:   c7 85 08 ff ff ff 41 e9 45 74   	mov dword ptr [ebp - 0xf8], 0x7445e941
0x8049bce:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x8049bd5:   66 c7 85 06 ff ff ff 73 ff      	mov word ptr [ebp - 0xfa], 0xff73
0x8049bde:   c6 85 05 ff ff ff b1            	mov byte ptr [ebp - 0xfb], 0xb1
0x8049be5:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x8049bef:   c7 85 fc fe ff ff fb d7 c1 df   	mov dword ptr [ebp - 0x104], 0xdfc1d7fb
0x8049bf9:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049c03:   c7 85 f4 fe ff ff eb 79 a8 9f   	mov dword ptr [ebp - 0x10c], 0x9fa879eb
0x8049c0d:   c7 85 f0 fe ff ff 1b 6d f7 04   	mov dword ptr [ebp - 0x110], 0x4f76d1b
0x8049c17:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049c1b:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049c1f:   74 4e                           	je 0x8049c6f <func_1+0x444>
0x8049c21:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049c27:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x8049c2a:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049c2e:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x8049c31:   0f bf d2                        	movsx edx, dx
0x8049c34:   c1 e2 0a                        	shl edx, 0xa
0x8049c37:   39 d0                           	cmp eax, edx
0x8049c39:   0f 9e c0                        	setle al
0x8049c3c:   0f b6 d0                        	movzx edx, al
0x8049c3f:   81 bd 54 ff ff ff c5 00 00 00   	cmp dword ptr [ebp - 0xac], 0xc5
0x8049c49:   0f 96 c0                        	setbe al
0x8049c4c:   0f b6 c0                        	movzx eax, al
0x8049c4f:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x8049c55:   0f 9e c0                        	setle al
0x8049c58:   0f b6 c0                        	movzx eax, al
0x8049c5b:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049c5e:   0f 9c c0                        	setl al
0x8049c61:   0f b6 c0                        	movzx eax, al
0x8049c64:   39 c2                           	cmp edx, eax
0x8049c66:   7f 07                           	jg 0x8049c6f <func_1+0x444>
0x8049c68:   b8 01 00 00 00                  	mov eax, 1
0x8049c6d:   eb 05                           	jmp 0x8049c74 <func_1+0x449>
0x8049c6f:   b8 00 00 00 00                  	mov eax, 0
0x8049c74:   0f bf d0                        	movsx edx, ax
0x8049c77:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049c7a:   98                              	cwde 
0x8049c7b:   89 c1                           	mov ecx, eax
0x8049c7d:   d3 e2                           	shl edx, cl
0x8049c7f:   89 d0                           	mov eax, edx
0x8049c81:   85 c0                           	test eax, eax
0x8049c83:   0f 84 42 07 00 00               	je 0x804a3cb <func_1+0xba0>
0x8049c89:   c6 85 ed fe ff ff e3            	mov byte ptr [ebp - 0x113], 0xe3
0x8049c90:   c6 85 ec fe ff ff 01            	mov byte ptr [ebp - 0x114], 1
0x8049c97:   66 c7 85 ea fe ff ff 00 00      	mov word ptr [ebp - 0x116], 0
0x8049ca0:   c7 85 7c ff ff ff 10 2d 9d 35   	mov dword ptr [ebp - 0x84], 0x359d2d10
0x8049caa:   c7 85 e4 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x11c], 2
0x8049cb4:   c7 85 e0 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x120], 2
0x8049cbe:   c6 85 7b ff ff ff ff            	mov byte ptr [ebp - 0x85], 0xff
0x8049cc5:   0f bf 55 d6                     	movsx edx, word ptr [ebp - 0x2a]
0x8049cc9:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ccc:   0f be d8                        	movsx ebx, al
0x8049ccf:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049cd5:   88 85 20 fe ff ff               	mov byte ptr [ebp - 0x1e0], al
0x8049cdb:   c7 45 90 fa ff 00 00            	mov dword ptr [ebp - 0x70], 0xfffa
0x8049ce2:   c6 85 ed fe ff ff fa            	mov byte ptr [ebp - 0x113], 0xfa
0x8049ce9:   66 0f be 85 ed fe ff ff         	movsx ax, byte ptr [ebp - 0x113]
0x8049cf1:   89 c1                           	mov ecx, eax
0x8049cf3:   0f b6 85 20 fe ff ff            	movzx eax, byte ptr [ebp - 0x1e0]
0x8049cfa:   0f af c1                        	imul eax, ecx
0x8049cfd:   0f be c0                        	movsx eax, al
0x8049d00:   89 c1                           	mov ecx, eax
0x8049d02:   d3 e3                           	shl ebx, cl
0x8049d04:   89 d8                           	mov eax, ebx
0x8049d06:   31 d0                           	xor eax, edx
0x8049d08:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049d0b:   0f 84 f8 02 00 00               	je 0x804a009 <func_1+0x7de>
0x8049d11:   c6 85 d3 fe ff ff f4            	mov byte ptr [ebp - 0x12d], 0xf4
0x8049d18:   c7 85 cc fe ff ff 80 22 2f 80   	mov dword ptr [ebp - 0x134], 0x802f2280
0x8049d22:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x8049d29:   83 c8 01                        	or eax, 1
0x8049d2c:   ba a4 ff ff ff                  	mov edx, 0xffffffa4
0x8049d31:   29 c2                           	sub edx, eax
0x8049d33:   89 d0                           	mov eax, edx
0x8049d35:   0f be d0                        	movsx edx, al
0x8049d38:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049d3b:   0f be c0                        	movsx eax, al
0x8049d3e:   89 c1                           	mov ecx, eax
0x8049d40:   d3 e2                           	shl edx, cl
0x8049d42:   89 d0                           	mov eax, edx
0x8049d44:   85 c0                           	test eax, eax
0x8049d46:   0f 84 d5 00 00 00               	je 0x8049e21 <func_1+0x5f6>
0x8049d4c:   c7 85 b4 fe ff ff ce f5 97 01   	mov dword ptr [ebp - 0x14c], 0x197f5ce
0x8049d56:   66 83 bd 52 ff ff ff 00         	cmp word ptr [ebp - 0xae], 0
0x8049d5e:   74 05                           	je 0x8049d65 <func_1+0x53a>
0x8049d60:   e9 5f fc ff ff                  	jmp 0x80499c4 <func_1+0x199>
0x8049d65:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d68:   89 c2                           	mov edx, eax
0x8049d6a:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049d70:   98                              	cwde 
0x8049d71:   f7 d0                           	not eax
0x8049d73:   39 85 b4 fe ff ff               	cmp dword ptr [ebp - 0x14c], eax
0x8049d79:   0f 92 c0                        	setb al
0x8049d7c:   0f b6 c0                        	movzx eax, al
0x8049d7f:   39 85 b4 fe ff ff               	cmp dword ptr [ebp - 0x14c], eax
0x8049d85:   0f 92 c0                        	setb al
0x8049d88:   89 c1                           	mov ecx, eax
0x8049d8a:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x8049d91:   29 c1                           	sub ecx, eax
0x8049d93:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049d96:   09 c8                           	or eax, ecx
0x8049d98:   01 c2                           	add edx, eax
0x8049d9a:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049d9d:   09 d0                           	or eax, edx
0x8049d9f:   0f be c0                        	movsx eax, al
0x8049da2:   0f b6 95 ec fe ff ff            	movzx edx, byte ptr [ebp - 0x114]
0x8049da9:   0f be f2                        	movsx esi, dl
0x8049dac:   99                              	cdq 
0x8049dad:   f7 fe                           	idiv esi
0x8049daf:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049db3:   0f bf 55 d6                     	movsx edx, word ptr [ebp - 0x2a]
0x8049db7:   0f bf 85 70 ff ff ff            	movsx eax, word ptr [ebp - 0x90]
0x8049dbe:   89 c1                           	mov ecx, eax
0x8049dc0:   d3 e2                           	shl edx, cl
0x8049dc2:   89 d0                           	mov eax, edx
0x8049dc4:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049dc7:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x8049dce:   c6 45 cc 01                     	mov byte ptr [ebp - 0x34], 1
0x8049dd2:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049dd6:   0f b6 c0                        	movzx eax, al
0x8049dd9:   09 45 94                        	or dword ptr [ebp - 0x6c], eax
0x8049ddc:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ddf:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049de2:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049de5:   f7 d8                           	neg eax
0x8049de7:   0f b6 c0                        	movzx eax, al
0x8049dea:   ba 01 00 00 00                  	mov edx, 1
0x8049def:   89 c1                           	mov ecx, eax
0x8049df1:   d3 e2                           	shl edx, cl
0x8049df3:   89 d0                           	mov eax, edx
0x8049df5:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049df9:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x8049dfd:   89 c2                           	mov edx, eax
0x8049dff:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049e05:   21 d0                           	and eax, edx
0x8049e07:   0f b6 d0                        	movzx edx, al
0x8049e0a:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049e0e:   01 c2                           	add edx, eax
0x8049e10:   0f b6 45 cd                     	movzx eax, byte ptr [ebp - 0x33]
0x8049e14:   21 d0                           	and eax, edx
0x8049e16:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049e1c:   e9 dd 01 00 00                  	jmp 0x8049ffe <func_1+0x7d3>
0x8049e21:   c7 85 c8 fe ff ff 1a fa a7 90   	mov dword ptr [ebp - 0x138], 0x90a7fa1a
0x8049e2b:   c7 85 c4 fe ff ff 6d 23 83 20   	mov dword ptr [ebp - 0x13c], 0x2083236d
0x8049e35:   c7 85 c0 fe ff ff 6d c8 d2 b0   	mov dword ptr [ebp - 0x140], 0xb0d2c86d
0x8049e3f:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x8049e45:   21 45 c8                        	and dword ptr [ebp - 0x38], eax
0x8049e48:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049e4c:   75 37                           	jne 0x8049e85 <func_1+0x65a>
0x8049e4e:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x8049e52:   0f be d0                        	movsx edx, al
0x8049e55:   0f b6 85 ec fe ff ff            	movzx eax, byte ptr [ebp - 0x114]
0x8049e5c:   0f be c0                        	movsx eax, al
0x8049e5f:   83 e8 01                        	sub eax, 1
0x8049e62:   35 15 d1 00 00                  	xor eax, 0xd115
0x8049e67:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x8049e6d:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x8049e73:   0f be c0                        	movsx eax, al
0x8049e76:   0f af c2                        	imul eax, edx
0x8049e79:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049e7f:   80 7d cd 00                     	cmp byte ptr [ebp - 0x33], 0
0x8049e83:   74 07                           	je 0x8049e8c <func_1+0x661>
0x8049e85:   b8 01 00 00 00                  	mov eax, 1
0x8049e8a:   eb 05                           	jmp 0x8049e91 <func_1+0x666>
0x8049e8c:   b8 00 00 00 00                  	mov eax, 0
0x8049e91:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049e97:   80 6d cc 01                     	sub byte ptr [ebp - 0x34], 1
0x8049e9b:   0f b6 4d cc                     	movzx ecx, byte ptr [ebp - 0x34]
0x8049e9f:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x8049ea5:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x8049ea8:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049eab:   98                              	cwde 
0x8049eac:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x8049eb2:   0f bf da                        	movsx ebx, dx
0x8049eb5:   99                              	cdq 
0x8049eb6:   f7 fb                           	idiv ebx
0x8049eb8:   89 95 cc fe ff ff               	mov dword ptr [ebp - 0x134], edx
0x8049ebe:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x8049ec5:   0f 94 c0                        	sete al
0x8049ec8:   0f b6 c0                        	movzx eax, al
0x8049ecb:   39 c1                           	cmp ecx, eax
0x8049ecd:   0f 8f ad 00 00 00               	jg 0x8049f80 <func_1+0x755>
0x8049ed3:   c6 85 bf fe ff ff 66            	mov byte ptr [ebp - 0x141], 0x66
0x8049eda:   c7 85 b8 fe ff ff 3e 8c c9 1a   	mov dword ptr [ebp - 0x148], 0x1ac98c3e
0x8049ee4:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x8049eeb:   0f b6 95 ec fe ff ff            	movzx edx, byte ptr [ebp - 0x114]
0x8049ef2:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049ef6:   0f 94 c0                        	sete al
0x8049ef9:   0f b6 c0                        	movzx eax, al
0x8049efc:   01 c2                           	add edx, eax
0x8049efe:   0f be 85 bf fe ff ff            	movsx eax, byte ptr [ebp - 0x141]
0x8049f05:   23 85 c0 fe ff ff               	and eax, dword ptr [ebp - 0x140]
0x8049f0b:   39 c2                           	cmp edx, eax
0x8049f0d:   0f 9d c0                        	setge al
0x8049f10:   0f b6 c0                        	movzx eax, al
0x8049f13:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049f16:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049f1c:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x8049f1f:   0f 94 c0                        	sete al
0x8049f22:   0f b6 d8                        	movzx ebx, al
0x8049f25:   8b 8d 54 ff ff ff               	mov ecx, dword ptr [ebp - 0xac]
0x8049f2b:   ba 2d 73 ef 7c                  	mov edx, 0x7cef732d
0x8049f30:   89 c8                           	mov eax, ecx
0x8049f32:   f7 e2                           	mul edx
0x8049f34:   89 c8                           	mov eax, ecx
0x8049f36:   29 d0                           	sub eax, edx
0x8049f38:   d1 e8                           	shr eax, 1
0x8049f3a:   01 d0                           	add eax, edx
0x8049f3c:   c1 e8 1d                        	shr eax, 0x1d
0x8049f3f:   69 c0 4b 8a 02 2b               	imul eax, eax, 0x2b028a4b
0x8049f45:   29 c1                           	sub ecx, eax
0x8049f47:   89 c8                           	mov eax, ecx
0x8049f49:   85 c0                           	test eax, eax
0x8049f4b:   75 07                           	jne 0x8049f54 <func_1+0x729>
0x8049f4d:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x8049f52:   74 07                           	je 0x8049f5b <func_1+0x730>
0x8049f54:   b8 01 00 00 00                  	mov eax, 1
0x8049f59:   eb 05                           	jmp 0x8049f60 <func_1+0x735>
0x8049f5b:   b8 00 00 00 00                  	mov eax, 0
0x8049f60:   0f b6 d0                        	movzx edx, al
0x8049f63:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049f66:   0f b6 c0                        	movzx eax, al
0x8049f69:   89 c1                           	mov ecx, eax
0x8049f6b:   d3 fa                           	sar edx, cl
0x8049f6d:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049f70:   29 d0                           	sub eax, edx
0x8049f72:   09 d8                           	or eax, ebx
0x8049f74:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049f7a:   80 45 c7 01                     	add byte ptr [ebp - 0x39], 1
0x8049f7e:   eb 73                           	jmp 0x8049ff3 <func_1+0x7c8>
0x8049f80:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f83:   0f b7 c0                        	movzx eax, ax
0x8049f86:   8d 14 85 00 00 00 00            	lea edx, [eax*4]
0x8049f8d:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049f91:   39 c2                           	cmp edx, eax
0x8049f93:   0f 9c c0                        	setl al
0x8049f96:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x8049f99:   80 7d cc 00                     	cmp byte ptr [ebp - 0x34], 0
0x8049f9d:   74 10                           	je 0x8049faf <func_1+0x784>
0x8049f9f:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049fa6:   74 07                           	je 0x8049faf <func_1+0x784>
0x8049fa8:   b8 01 00 00 00                  	mov eax, 1
0x8049fad:   eb 05                           	jmp 0x8049fb4 <func_1+0x789>
0x8049faf:   b8 00 00 00 00                  	mov eax, 0
0x8049fb4:   83 f8 02                        	cmp eax, 2
0x8049fb7:   0f 9f c0                        	setg al
0x8049fba:   0f b6 c0                        	movzx eax, al
0x8049fbd:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x8049fc3:   8b 95 e0 fe ff ff               	mov edx, dword ptr [ebp - 0x120]
0x8049fc9:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x8049fcf:   01 d0                           	add eax, edx
0x8049fd1:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049fd4:   0f 95 c0                        	setne al
0x8049fd7:   0f b6 c0                        	movzx eax, al
0x8049fda:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049fdd:   81 bd cc fe ff ff d7 00 00 00   	cmp dword ptr [ebp - 0x134], 0xd7
0x8049fe7:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049fed:   83 e0 fc                        	and eax, 0xfffffffc
0x8049ff0:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ff3:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049ff7:   74 05                           	je 0x8049ffe <func_1+0x7d3>
0x8049ff9:   e9 24 fd ff ff                  	jmp 0x8049d22 <func_1+0x4f7>
0x8049ffe:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a001:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a004:   e9 ac 01 00 00                  	jmp 0x804a1b5 <func_1+0x98a>
0x804a009:   66 c7 85 de fe ff ff 08 00      	mov word ptr [ebp - 0x122], 8
0x804a012:   c6 45 cc 12                     	mov byte ptr [ebp - 0x34], 0x12
0x804a016:   eb 4c                           	jmp 0x804a064 <func_1+0x839>
0x804a018:   66 c7 85 d4 fe ff ff f6 ff      	mov word ptr [ebp - 0x12c], 0xfff6
0x804a021:   c6 85 23 ff ff ff 00            	mov byte ptr [ebp - 0xdd], 0
0x804a028:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x804a032:   66 83 bd d4 fe ff ff 01         	cmp word ptr [ebp - 0x12c], 1
0x804a03a:   0f 95 c0                        	setne al
0x804a03d:   0f b6 d0                        	movzx edx, al
0x804a040:   0f bf 85 70 ff ff ff            	movsx eax, word ptr [ebp - 0x90]
0x804a047:   39 c2                           	cmp edx, eax
0x804a049:   7f 04                           	jg 0x804a04f <func_1+0x824>
0x804a04b:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a04f:   0f b7 85 d4 fe ff ff            	movzx eax, word ptr [ebp - 0x12c]
0x804a056:   98                              	cwde 
0x804a057:   09 45 8c                        	or dword ptr [ebp - 0x74], eax
0x804a05a:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x804a05e:   83 c0 01                        	add eax, 1
0x804a061:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x804a064:   80 7d cc 2a                     	cmp byte ptr [ebp - 0x34], 0x2a
0x804a068:   77 ae                           	ja 0x804a018 <func_1+0x7ed>
0x804a06a:   c7 45 90 f5 ff ff ff            	mov dword ptr [ebp - 0x70], 0xfffffff5
0x804a071:   83 7d 90 fd                     	cmp dword ptr [ebp - 0x70], -3
0x804a075:   0f 8d f5 00 00 00               	jge 0x804a170 <func_1+0x945>
0x804a07b:   0f b6 45 9d                     	movzx eax, byte ptr [ebp - 0x63]
0x804a07f:   0f b7 55 9e                     	movzx edx, word ptr [ebp - 0x62]
0x804a083:   0f b7 4d ae                     	movzx ecx, word ptr [ebp - 0x52]
0x804a087:   0f bf 9d 5e ff ff ff            	movsx ebx, word ptr [ebp - 0xa2]
0x804a08e:   0f b6 75 b1                     	movzx esi, byte ptr [ebp - 0x4f]
0x804a092:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804a096:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x804a09c:   0f bf bd 6a ff ff ff            	movsx edi, word ptr [ebp - 0x96]
0x804a0a3:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x804a0a9:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a0ad:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x804a0b3:   0f b6 7d cc                     	movzx edi, byte ptr [ebp - 0x34]
0x804a0b7:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x804a0bd:   0f b6 7d cd                     	movzx edi, byte ptr [ebp - 0x33]
0x804a0c1:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x804a0c7:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x804a0cb:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x804a0d1:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a0d5:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x804a0db:   0f bf 7d d6                     	movsx edi, word ptr [ebp - 0x2a]
0x804a0df:   50                              	push eax
0x804a0e0:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a0e6:   52                              	push edx
0x804a0e7:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a0ea:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a0ed:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a0f0:   51                              	push ecx
0x804a0f1:   53                              	push ebx
0x804a0f2:   56                              	push esi
0x804a0f3:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x804a0f9:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a0fc:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0ff:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a102:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a108:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a10e:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x804a114:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a117:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x804a11d:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a123:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a126:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x804a12c:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a132:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a138:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a13e:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a141:   57                              	push edi
0x804a142:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a148:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a14b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a14e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a151:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a154:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a157:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a15a:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a15d:   e8 c4 f4 ff ff                  	call 0x8049626 <set_var>
0x804a162:   81 c4 88 00 00 00               	add esp, 0x88
0x804a168:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a16b:   e9 5b 08 00 00                  	jmp 0x804a9cb <func_1+0x11a0>
0x804a170:   66 83 bd de fe ff ff 00         	cmp word ptr [ebp - 0x122], 0
0x804a178:   74 06                           	je 0x804a180 <func_1+0x955>
0x804a17a:   83 45 88 01                     	add dword ptr [ebp - 0x78], 1
0x804a17e:   eb 35                           	jmp 0x804a1b5 <func_1+0x98a>
0x804a180:   66 c7 85 dc fe ff ff 06 00      	mov word ptr [ebp - 0x124], 6
0x804a189:   c7 85 d8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x128], 0
0x804a193:   c6 85 d7 fe ff ff fa            	mov byte ptr [ebp - 0x129], 0xfa
0x804a19a:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x804a19e:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a1a2:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a1a8:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a1ab:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x804a1b5:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a1b9:   8d 50 ff                        	lea edx, [eax - 1]
0x804a1bc:   66 89 55 b2                     	mov word ptr [ebp - 0x4e], dx
0x804a1c0:   0f b7 c0                        	movzx eax, ax
0x804a1c3:   8b 8d 60 ff ff ff               	mov ecx, dword ptr [ebp - 0xa0]
0x804a1c9:   ba 00 00 00 00                  	mov edx, 0
0x804a1ce:   f7 f1                           	div ecx
0x804a1d0:   0f b6 45 ce                     	movzx eax, byte ptr [ebp - 0x32]
0x804a1d4:   39 c2                           	cmp edx, eax
0x804a1d6:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a1d9:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x804a1dc:   c7 45 c0 ee 17 69 02            	mov dword ptr [ebp - 0x40], 0x26917ee
0x804a1e3:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x804a1ea:   c7 45 98 ed ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffed
0x804a1f1:   e9 c9 01 00 00                  	jmp 0x804a3bf <func_1+0xb94>
0x804a1f6:   66 c7 85 b2 fe ff ff 5c 97      	mov word ptr [ebp - 0x14e], 0x975c
0x804a1ff:   66 c7 85 b0 fe ff ff 55 3d      	mov word ptr [ebp - 0x150], 0x3d55
0x804a208:   c7 85 ac fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x154], 0
0x804a212:   c7 85 a8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x158], 1
0x804a21c:   c7 85 a4 fe ff ff dd bc a0 8b   	mov dword ptr [ebp - 0x15c], 0x8ba0bcdd
0x804a226:   c7 85 a0 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x160], 4
0x804a230:   c7 85 9c fe ff ff 52 91 0e 08   	mov dword ptr [ebp - 0x164], 0x80e9152
0x804a23a:   c7 85 98 fe ff ff e7 3b c5 2c   	mov dword ptr [ebp - 0x168], 0x2cc53be7
0x804a244:   c6 85 97 fe ff ff b1            	mov byte ptr [ebp - 0x169], 0xb1
0x804a24b:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a251:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a257:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a25d:   3d a8 77 d3 98                  	cmp eax, 0x98d377a8
0x804a262:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a268:   3b 85 10 ff ff ff               	cmp eax, dword ptr [ebp - 0xf0]
0x804a26e:   72 78                           	jb 0x804a2e8 <func_1+0xabd>
0x804a270:   c6 85 8f fe ff ff 61            	mov byte ptr [ebp - 0x171], 0x61
0x804a277:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a27a:   f7 d8                           	neg eax
0x804a27c:   84 c0                           	test al, al
0x804a27e:   74 34                           	je 0x804a2b4 <func_1+0xa89>
0x804a280:   c7 85 80 fe ff ff 64 57 05 8a   	mov dword ptr [ebp - 0x180], 0x8a055764
0x804a28a:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a28d:   83 e0 f7                        	and eax, 0xfffffff7
0x804a290:   88 85 8f fe ff ff               	mov byte ptr [ebp - 0x171], al
0x804a296:   0f bf 85 b2 fe ff ff            	movsx eax, word ptr [ebp - 0x14e]
0x804a29d:   09 85 80 fe ff ff               	or dword ptr [ebp - 0x180], eax
0x804a2a3:   8b 85 80 fe ff ff               	mov eax, dword ptr [ebp - 0x180]
0x804a2a9:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a2ac:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a2af:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a2b2:   eb 52                           	jmp 0x804a306 <func_1+0xadb>
0x804a2b4:   c7 85 88 fe ff ff 6b 32 0b 4c   	mov dword ptr [ebp - 0x178], 0x4c0b326b
0x804a2be:   c6 85 87 fe ff ff 08            	mov byte ptr [ebp - 0x179], 8
0x804a2c5:   0f bf 85 b2 fe ff ff            	movsx eax, word ptr [ebp - 0x14e]
0x804a2cc:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a2cf:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a2d2:   89 c2                           	mov edx, eax
0x804a2d4:   80 4d b1 05                     	or byte ptr [ebp - 0x4f], 5
0x804a2d8:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x804a2dc:   21 d0                           	and eax, edx
0x804a2de:   66 c1 f8 0b                     	sar ax, 0xb
0x804a2e2:   98                              	cwde 
0x804a2e3:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a2e6:   eb 1e                           	jmp 0x804a306 <func_1+0xadb>
0x804a2e8:   c7 85 90 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x170], 0xfffffffd
0x804a2f2:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a2f8:   21 85 90 fe ff ff               	and dword ptr [ebp - 0x170], eax
0x804a2fe:   66 83 ad b0 fe ff ff 01         	sub word ptr [ebp - 0x150], 1
0x804a306:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a30d:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a310:   0f 94 c0                        	sete al
0x804a313:   0f b6 c0                        	movzx eax, al
0x804a316:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a319:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a31c:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a320:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a324:   66 c1 f8 0a                     	sar ax, 0xa
0x804a328:   98                              	cwde 
0x804a329:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a32c:   83 7d c0 f9                     	cmp dword ptr [ebp - 0x40], -7
0x804a330:   0f 9c c0                        	setl al
0x804a333:   0f b6 c0                        	movzx eax, al
0x804a336:   0f b6 4d cc                     	movzx ecx, byte ptr [ebp - 0x34]
0x804a33a:   99                              	cdq 
0x804a33b:   f7 f9                           	idiv ecx
0x804a33d:   89 95 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], edx
0x804a343:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a349:   ba a4 ff ff ff                  	mov edx, 0xffffffa4
0x804a34e:   0f af c2                        	imul eax, edx
0x804a351:   0f b6 d0                        	movzx edx, al
0x804a354:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a35a:   0f b6 c0                        	movzx eax, al
0x804a35d:   0f af c2                        	imul eax, edx
0x804a360:   85 c0                           	test eax, eax
0x804a362:   75 06                           	jne 0x804a36a <func_1+0xb3f>
0x804a364:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x804a368:   74 07                           	je 0x804a371 <func_1+0xb46>
0x804a36a:   b8 01 00 00 00                  	mov eax, 1
0x804a36f:   eb 05                           	jmp 0x804a376 <func_1+0xb4b>
0x804a371:   b8 00 00 00 00                  	mov eax, 0
0x804a376:   c0 f8 06                        	sar al, 6
0x804a379:   89 c1                           	mov ecx, eax
0x804a37b:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804a382:   89 c2                           	mov edx, eax
0x804a384:   0f b6 c1                        	movzx eax, cl
0x804a387:   f6 f2                           	div dl
0x804a389:   0f b6 c4                        	movzx eax, ah
0x804a38c:   84 c0                           	test al, al
0x804a38e:   74 0d                           	je 0x804a39d <func_1+0xb72>
0x804a390:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a394:   74 07                           	je 0x804a39d <func_1+0xb72>
0x804a396:   b8 01 00 00 00                  	mov eax, 1
0x804a39b:   eb 05                           	jmp 0x804a3a2 <func_1+0xb77>
0x804a39d:   b8 00 00 00 00                  	mov eax, 0
0x804a3a2:   2d b3 c5 84 57                  	sub eax, 0x5784c5b3
0x804a3a7:   66 31 45 86                     	xor word ptr [ebp - 0x7a], ax
0x804a3ab:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804a3b2:   83 e8 01                        	sub eax, 1
0x804a3b5:   88 85 7b ff ff ff               	mov byte ptr [ebp - 0x85], al
0x804a3bb:   83 45 98 04                     	add dword ptr [ebp - 0x68], 4
0x804a3bf:   83 7d 98 ed                     	cmp dword ptr [ebp - 0x68], -0x13
0x804a3c3:   0f 84 2d fe ff ff               	je 0x804a1f6 <func_1+0x9cb>
0x804a3c9:   eb 60                           	jmp 0x804a42b <func_1+0xc00>
0x804a3cb:   66 c7 85 ee fe ff ff a3 91      	mov word ptr [ebp - 0x112], 0x91a3
0x804a3d4:   66 83 bd 70 ff ff ff 00         	cmp word ptr [ebp - 0x90], 0
0x804a3dc:   0f 95 c0                        	setne al
0x804a3df:   0f b6 c0                        	movzx eax, al
0x804a3e2:   39 85 24 ff ff ff               	cmp dword ptr [ebp - 0xdc], eax
0x804a3e8:   0f 94 c0                        	sete al
0x804a3eb:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a3ee:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a3f2:   88 45 ce                        	mov byte ptr [ebp - 0x32], al
0x804a3f5:   0f b6 55 ce                     	movzx edx, byte ptr [ebp - 0x32]
0x804a3f9:   0f b7 85 ee fe ff ff            	movzx eax, word ptr [ebp - 0x112]
0x804a400:   66 c1 f8 03                     	sar ax, 3
0x804a404:   98                              	cwde 
0x804a405:   39 c2                           	cmp edx, eax
0x804a407:   7e 07                           	jle 0x804a410 <func_1+0xbe5>
0x804a409:   b8 01 00 00 00                  	mov eax, 1
0x804a40e:   eb 05                           	jmp 0x804a415 <func_1+0xbea>
0x804a410:   b8 00 00 00 00                  	mov eax, 0
0x804a415:   0f b6 d0                        	movzx edx, al
0x804a418:   0f b7 85 06 ff ff ff            	movzx eax, word ptr [ebp - 0xfa]
0x804a41f:   0f b6 c0                        	movzx eax, al
0x804a422:   89 c1                           	mov ecx, eax
0x804a424:   d3 e2                           	shl edx, cl
0x804a426:   89 d0                           	mov eax, edx
0x804a428:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a42b:   80 bd 49 ff ff ff 00            	cmp byte ptr [ebp - 0xb7], 0
0x804a432:   0f 84 4a 03 00 00               	je 0x804a782 <func_1+0xf57>
0x804a438:   c7 85 7c fe ff ff e3 89 6b 26   	mov dword ptr [ebp - 0x184], 0x266b89e3
0x804a442:   c7 85 78 fe ff ff 55 0a 9c 40   	mov dword ptr [ebp - 0x188], 0x409c0a55
0x804a44c:   c7 85 74 fe ff ff 09 d1 0d 73   	mov dword ptr [ebp - 0x18c], 0x730dd109
0x804a456:   c7 85 70 fe ff ff c7 e2 40 55   	mov dword ptr [ebp - 0x190], 0x5540e2c7
0x804a460:   c7 85 6c fe ff ff 27 e4 59 5a   	mov dword ptr [ebp - 0x194], 0x5a59e427
0x804a46a:   83 7d 80 01                     	cmp dword ptr [ebp - 0x80], 1
0x804a46e:   0f 9e c0                        	setle al
0x804a471:   0f b6 c0                        	movzx eax, al
0x804a474:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a47a:   8b 85 78 fe ff ff               	mov eax, dword ptr [ebp - 0x188]
0x804a480:   39 85 7c fe ff ff               	cmp dword ptr [ebp - 0x184], eax
0x804a486:   0f 95 c0                        	setne al
0x804a489:   0f b6 c0                        	movzx eax, al
0x804a48c:   39 85 7c fe ff ff               	cmp dword ptr [ebp - 0x184], eax
0x804a492:   0f 96 c0                        	setbe al
0x804a495:   0f b6 d0                        	movzx edx, al
0x804a498:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a49e:   09 d0                           	or eax, edx
0x804a4a0:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a4a6:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a4ab:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a4ae:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a4b8:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a4be:   0f b6 d0                        	movzx edx, al
0x804a4c1:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a4c8:   0f b6 c0                        	movzx eax, al
0x804a4cb:   0f af c2                        	imul eax, edx
0x804a4ce:   85 c0                           	test eax, eax
0x804a4d0:   0f 9e c0                        	setle al
0x804a4d3:   0f b6 c0                        	movzx eax, al
0x804a4d6:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a4d9:   0f be 95 49 ff ff ff            	movsx edx, byte ptr [ebp - 0xb7]
0x804a4e0:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a4e3:   01 c2                           	add edx, eax
0x804a4e5:   0f bf 85 5e ff ff ff            	movsx eax, word ptr [ebp - 0xa2]
0x804a4ec:   39 c2                           	cmp edx, eax
0x804a4ee:   0f 9e c0                        	setle al
0x804a4f1:   0f b6 c0                        	movzx eax, al
0x804a4f4:   21 85 74 fe ff ff               	and dword ptr [ebp - 0x18c], eax
0x804a4fa:   0f b7 85 70 ff ff ff            	movzx eax, word ptr [ebp - 0x90]
0x804a501:   66 89 45 ae                     	mov word ptr [ebp - 0x52], ax
0x804a505:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x804a509:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a50c:   0f 8c e6 00 00 00               	jl 0x804a5f8 <func_1+0xdcd>
0x804a512:   c6 85 43 fe ff ff 00            	mov byte ptr [ebp - 0x1bd], 0
0x804a519:   c7 85 3c fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x1c4], 0xfffffffc
0x804a523:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a52a:   e9 ae 00 00 00                  	jmp 0x804a5dd <func_1+0xdb2>
0x804a52f:   66 c7 85 3a fe ff ff d4 f5      	mov word ptr [ebp - 0x1c6], 0xf5d4
0x804a538:   c7 85 34 fe ff ff 1c a1 60 fc   	mov dword ptr [ebp - 0x1cc], 0xfc60a11c
0x804a542:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a546:   74 05                           	je 0x804a54d <func_1+0xd22>
0x804a548:   e9 ca f6 ff ff                  	jmp 0x8049c17 <func_1+0x3ec>
0x804a54d:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x804a554:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a557:   0f bf f0                        	movsx esi, ax
0x804a55a:   b8 01 00 00 00                  	mov eax, 1
0x804a55f:   99                              	cdq 
0x804a560:   f7 fe                           	idiv esi
0x804a562:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a565:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x804a56c:   83 c8 01                        	or eax, 1
0x804a56f:   66 98                           	cbw 
0x804a571:   66 89 85 3a fe ff ff            	mov word ptr [ebp - 0x1c6], ax
0x804a578:   80 bd 49 ff ff ff 00            	cmp byte ptr [ebp - 0xb7], 0
0x804a57f:   74 23                           	je 0x804a5a4 <func_1+0xd79>
0x804a581:   0f b7 55 b2                     	movzx edx, word ptr [ebp - 0x4e]
0x804a585:   0f bf 85 72 ff ff ff            	movsx eax, word ptr [ebp - 0x8e]
0x804a58c:   39 c2                           	cmp edx, eax
0x804a58e:   0f 9d c0                        	setge al
0x804a591:   0f b6 c0                        	movzx eax, al
0x804a594:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a597:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a59b:   74 07                           	je 0x804a5a4 <func_1+0xd79>
0x804a59d:   b8 01 00 00 00                  	mov eax, 1
0x804a5a2:   eb 05                           	jmp 0x804a5a9 <func_1+0xd7e>
0x804a5a4:   b8 00 00 00 00                  	mov eax, 0
0x804a5a9:   88 45 cd                        	mov byte ptr [ebp - 0x33], al
0x804a5ac:   b8 00 00 00 00                  	mov eax, 0
0x804a5b1:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x804a5b4:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a5b7:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a5ba:   81 7d a0 8d 00 00 00            	cmp dword ptr [ebp - 0x60], 0x8d
0x804a5c1:   0f 97 c0                        	seta al
0x804a5c4:   0f b6 c0                        	movzx eax, al
0x804a5c7:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x804a5cd:   8b 85 3c fe ff ff               	mov eax, dword ptr [ebp - 0x1c4]
0x804a5d3:   89 85 34 fe ff ff               	mov dword ptr [ebp - 0x1cc], eax
0x804a5d9:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x804a5dd:   83 7d d8 12                     	cmp dword ptr [ebp - 0x28], 0x12
0x804a5e1:   0f 85 48 ff ff ff               	jne 0x804a52f <func_1+0xd04>
0x804a5e7:   83 ad 70 fe ff ff 01            	sub dword ptr [ebp - 0x190], 1
0x804a5ee:   66 83 6d 9e 01                  	sub word ptr [ebp - 0x62], 1
0x804a5f3:   e9 97 01 00 00                  	jmp 0x804a78f <func_1+0xf64>
0x804a5f8:   66 c7 85 6a fe ff ff cd 74      	mov word ptr [ebp - 0x196], 0x74cd
0x804a601:   c7 85 64 fe ff ff bd ae 78 a7   	mov dword ptr [ebp - 0x19c], 0xa778aebd
0x804a60b:   c7 85 60 fe ff ff 20 23 f2 7d   	mov dword ptr [ebp - 0x1a0], 0x7df22320
0x804a615:   c6 85 5f fe ff ff fc            	mov byte ptr [ebp - 0x1a1], 0xfc
0x804a61c:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a620:   0f 84 09 01 00 00               	je 0x804a72f <func_1+0xf04>
0x804a626:   66 c7 85 56 fe ff ff f9 ff      	mov word ptr [ebp - 0x1aa], 0xfff9
0x804a62f:   c7 85 50 fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x1b0], 9
0x804a639:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x804a640:   74 4b                           	je 0x804a68d <func_1+0xe62>
0x804a642:   66 c7 85 4e fe ff ff 00 00      	mov word ptr [ebp - 0x1b2], 0
0x804a64b:   c7 85 48 fe ff ff c5 9e 5d c9   	mov dword ptr [ebp - 0x1b8], 0xc95d9ec5
0x804a655:   c7 85 44 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1bc], 1
0x804a65f:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a662:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a665:   80 7d cc 00                     	cmp byte ptr [ebp - 0x34], 0
0x804a669:   75 0b                           	jne 0x804a676 <func_1+0xe4b>
0x804a66b:   66 81 a5 6a fe ff ff f3 06      	and word ptr [ebp - 0x196], 0x6f3
0x804a674:   eb 01                           	jmp 0x804a677 <func_1+0xe4c>
0x804a676:   90                              	nop 
0x804a677:   0f b6 45 9d                     	movzx eax, byte ptr [ebp - 0x63]
0x804a67b:   83 e8 01                        	sub eax, 1
0x804a67e:   88 45 9d                        	mov byte ptr [ebp - 0x63], al
0x804a681:   0f be 85 1b ff ff ff            	movsx eax, byte ptr [ebp - 0xe5]
0x804a688:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a68b:   eb 48                           	jmp 0x804a6d5 <func_1+0xeaa>
0x804a68d:   0f b7 4d 9e                     	movzx ecx, word ptr [ebp - 0x62]
0x804a691:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x804a695:   0f bf 9d 6a ff ff ff            	movsx ebx, word ptr [ebp - 0x96]
0x804a69c:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a69f:   ba 00 00 00 00                  	mov edx, 0
0x804a6a4:   f7 f3                           	div ebx
0x804a6a6:   89 d0                           	mov eax, edx
0x804a6a8:   31 c8                           	xor eax, ecx
0x804a6aa:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a6ad:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x804a6b4:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a6b8:   83 bd 50 fe ff ff 01            	cmp dword ptr [ebp - 0x1b0], 1
0x804a6bf:   0f 9e c0                        	setle al
0x804a6c2:   0f b6 c0                        	movzx eax, al
0x804a6c5:   23 85 50 fe ff ff               	and eax, dword ptr [ebp - 0x1b0]
0x804a6cb:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a6ce:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a6d5:   8b 85 64 fe ff ff               	mov eax, dword ptr [ebp - 0x19c]
0x804a6db:   66 c1 f8 0c                     	sar ax, 0xc
0x804a6df:   89 c1                           	mov ecx, eax
0x804a6e1:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a6e4:   89 c2                           	mov edx, eax
0x804a6e6:   0f b6 c1                        	movzx eax, cl
0x804a6e9:   f6 f2                           	div dl
0x804a6eb:   0f b6 c4                        	movzx eax, ah
0x804a6ee:   84 c0                           	test al, al
0x804a6f0:   75 07                           	jne 0x804a6f9 <func_1+0xece>
0x804a6f2:   83 bd 64 fe ff ff 00            	cmp dword ptr [ebp - 0x19c], 0
0x804a6f9:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a701:   0f 95 c0                        	setne al
0x804a704:   0f b6 c0                        	movzx eax, al
0x804a707:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a70d:   b8 01 00 00 00                  	mov eax, 1
0x804a712:   21 85 60 fe ff ff               	and dword ptr [ebp - 0x1a0], eax
0x804a718:   8b 85 60 fe ff ff               	mov eax, dword ptr [ebp - 0x1a0]
0x804a71e:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a724:   8b 85 6c fe ff ff               	mov eax, dword ptr [ebp - 0x194]
0x804a72a:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x804a72d:   eb 11                           	jmp 0x804a740 <func_1+0xf15>
0x804a72f:   c7 85 58 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x1a8], 5
0x804a739:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a740:   83 6d a0 01                     	sub dword ptr [ebp - 0x60], 1
0x804a744:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a748:   75 10                           	jne 0x804a75a <func_1+0xf2f>
0x804a74a:   0f bf 85 6a ff ff ff            	movsx eax, word ptr [ebp - 0x96]
0x804a751:   25 6e 85 00 00                  	and eax, 0x856e
0x804a756:   85 c0                           	test eax, eax
0x804a758:   74 07                           	je 0x804a761 <func_1+0xf36>
0x804a75a:   b8 01 00 00 00                  	mov eax, 1
0x804a75f:   eb 05                           	jmp 0x804a766 <func_1+0xf3b>
0x804a761:   b8 00 00 00 00                  	mov eax, 0
0x804a766:   83 e0 01                        	and eax, 1
0x804a769:   83 f0 01                        	xor eax, 1
0x804a76c:   89 c2                           	mov edx, eax
0x804a76e:   80 7d b1 00                     	cmp byte ptr [ebp - 0x4f], 0
0x804a772:   0f 95 c0                        	setne al
0x804a775:   31 d0                           	xor eax, edx
0x804a777:   0f b6 c0                        	movzx eax, al
0x804a77a:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a780:   eb 0d                           	jmp 0x804a78f <func_1+0xf64>
0x804a782:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x804a789:   c1 f8 0e                        	sar eax, 0xe
0x804a78c:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a78f:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a796:   66 31 45 d6                     	xor word ptr [ebp - 0x2a], ax
0x804a79a:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x804a79f:   0f 94 c0                        	sete al
0x804a7a2:   0f b6 c0                        	movzx eax, al
0x804a7a5:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x804a7a8:   e9 c9 00 00 00                  	jmp 0x804a876 <func_1+0x104b>
0x804a7ad:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x804a7b7:   81 bd 2c ff ff ff 1b c4 2e fe   	cmp dword ptr [ebp - 0xd4], 0xfe2ec41b
0x804a7c1:   0f 94 c0                        	sete al
0x804a7c4:   0f b6 c0                        	movzx eax, al
0x804a7c7:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a7ca:   66 83 bd 36 ff ff ff 00         	cmp word ptr [ebp - 0xca], 0
0x804a7d2:   75 20                           	jne 0x804a7f4 <func_1+0xfc9>
0x804a7d4:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a7db:   0f b6 d0                        	movzx edx, al
0x804a7de:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a7e1:   0f b6 c0                        	movzx eax, al
0x804a7e4:   29 c2                           	sub edx, eax
0x804a7e6:   89 d0                           	mov eax, edx
0x804a7e8:   0f b7 c0                        	movzx eax, ax
0x804a7eb:   f7 d8                           	neg eax
0x804a7ed:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x804a7f0:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a7f4:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a7fa:   89 c2                           	mov edx, eax
0x804a7fc:   83 bd 2c ff ff ff 01            	cmp dword ptr [ebp - 0xd4], 1
0x804a803:   0f 9f c0                        	setg al
0x804a806:   0f b6 c0                        	movzx eax, al
0x804a809:   09 d0                           	or eax, edx
0x804a80b:   0f b7 d0                        	movzx edx, ax
0x804a80e:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a814:   0f b7 c0                        	movzx eax, ax
0x804a817:   89 c1                           	mov ecx, eax
0x804a819:   d3 fa                           	sar edx, cl
0x804a81b:   89 d0                           	mov eax, edx
0x804a81d:   0f b6 c0                        	movzx eax, al
0x804a820:   69 c0 dc 00 00 00               	imul eax, eax, 0xdc
0x804a826:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x804a829:   66 c7 45 d6 11 00               	mov word ptr [ebp - 0x2a], 0x11
0x804a82f:   eb 3e                           	jmp 0x804a86f <func_1+0x1044>
0x804a831:   c7 85 28 ff ff ff 20 28 4d 53   	mov dword ptr [ebp - 0xd8], 0x534d2820
0x804a83b:   81 a5 28 ff ff ff 6f 03 ce 28   	and dword ptr [ebp - 0xd8], 0x28ce036f
0x804a845:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a84b:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a84e:   0f b6 85 51 ff ff ff            	movzx eax, byte ptr [ebp - 0xaf]
0x804a855:   83 c8 01                        	or eax, 1
0x804a858:   0f b6 c0                        	movzx eax, al
0x804a85b:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a85e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a861:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a864:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a868:   83 e8 02                        	sub eax, 2
0x804a86b:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a86f:   66 83 7d d6 f2                  	cmp word ptr [ebp - 0x2a], -0xe
0x804a874:   7c bb                           	jl 0x804a831 <func_1+0x1006>
0x804a876:   0f b6 5d cc                     	movzx ebx, byte ptr [ebp - 0x34]
0x804a87a:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a87e:   0f be c0                        	movsx eax, al
0x804a881:   ba 01 00 00 00                  	mov edx, 1
0x804a886:   89 c1                           	mov ecx, eax
0x804a888:   d3 e2                           	shl edx, cl
0x804a88a:   89 d0                           	mov eax, edx
0x804a88c:   89 c2                           	mov edx, eax
0x804a88e:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a892:   21 d0                           	and eax, edx
0x804a894:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804a898:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a89b:   89 c6                           	mov esi, eax
0x804a89d:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a8a1:   ba 00 00 00 00                  	mov edx, 0
0x804a8a6:   66 f7 f6                        	div si
0x804a8a9:   66 39 c3                        	cmp bx, ax
0x804a8ac:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a8af:   0f b6 c0                        	movzx eax, al
0x804a8b2:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a8b5:   0f b6 ca                        	movzx ecx, dl
0x804a8b8:   99                              	cdq 
0x804a8b9:   f7 f9                           	idiv ecx
0x804a8bb:   89 d0                           	mov eax, edx
0x804a8bd:   0f b7 d0                        	movzx edx, ax
0x804a8c0:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a8c6:   0f b7 c0                        	movzx eax, ax
0x804a8c9:   29 c2                           	sub edx, eax
0x804a8cb:   89 d0                           	mov eax, edx
0x804a8cd:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a8d0:   c7 85 4c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb4], 1
0x804a8da:   0f b6 45 9d                     	movzx eax, byte ptr [ebp - 0x63]
0x804a8de:   0f b7 55 9e                     	movzx edx, word ptr [ebp - 0x62]
0x804a8e2:   0f b7 4d ae                     	movzx ecx, word ptr [ebp - 0x52]
0x804a8e6:   0f bf 9d 5e ff ff ff            	movsx ebx, word ptr [ebp - 0xa2]
0x804a8ed:   0f b6 75 b1                     	movzx esi, byte ptr [ebp - 0x4f]
0x804a8f1:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804a8f5:   89 bd 20 fe ff ff               	mov dword ptr [ebp - 0x1e0], edi
0x804a8fb:   0f bf bd 6a ff ff ff            	movsx edi, word ptr [ebp - 0x96]
0x804a902:   89 bd 1c fe ff ff               	mov dword ptr [ebp - 0x1e4], edi
0x804a908:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a90c:   89 bd 18 fe ff ff               	mov dword ptr [ebp - 0x1e8], edi
0x804a912:   0f b6 7d cc                     	movzx edi, byte ptr [ebp - 0x34]
0x804a916:   89 bd 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], edi
0x804a91c:   0f b6 7d cd                     	movzx edi, byte ptr [ebp - 0x33]
0x804a920:   89 bd 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], edi
0x804a926:   0f b6 7d ce                     	movzx edi, byte ptr [ebp - 0x32]
0x804a92a:   89 bd 0c fe ff ff               	mov dword ptr [ebp - 0x1f4], edi
0x804a930:   0f b6 7d cf                     	movzx edi, byte ptr [ebp - 0x31]
0x804a934:   89 bd 08 fe ff ff               	mov dword ptr [ebp - 0x1f8], edi
0x804a93a:   0f bf 7d d6                     	movsx edi, word ptr [ebp - 0x2a]
0x804a93e:   50                              	push eax
0x804a93f:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a945:   52                              	push edx
0x804a946:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a949:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a94c:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a94f:   51                              	push ecx
0x804a950:   53                              	push ebx
0x804a951:   56                              	push esi
0x804a952:   ff b5 20 fe ff ff               	push dword ptr [ebp - 0x1e0]
0x804a958:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a95b:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a95e:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a961:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a967:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a96d:   ff b5 1c fe ff ff               	push dword ptr [ebp - 0x1e4]
0x804a973:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a976:   ff b5 18 fe ff ff               	push dword ptr [ebp - 0x1e8]
0x804a97c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a982:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a985:   ff b5 14 fe ff ff               	push dword ptr [ebp - 0x1ec]
0x804a98b:   ff b5 10 fe ff ff               	push dword ptr [ebp - 0x1f0]
0x804a991:   ff b5 0c fe ff ff               	push dword ptr [ebp - 0x1f4]
0x804a997:   ff b5 08 fe ff ff               	push dword ptr [ebp - 0x1f8]
0x804a99d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a9a0:   57                              	push edi
0x804a9a1:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a9a7:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a9aa:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a9ad:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a9b0:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a9b3:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a9b6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a9b9:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a9bc:   e8 65 ec ff ff                  	call 0x8049626 <set_var>
0x804a9c1:   81 c4 88 00 00 00               	add esp, 0x88
0x804a9c7:   0f b6 45 9d                     	movzx eax, byte ptr [ebp - 0x63]
0x804a9cb:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a9ce:   5b                              	pop ebx
0x804a9cf:   5e                              	pop esi
0x804a9d0:   5f                              	pop edi
0x804a9d1:   5d                              	pop ebp
0x804a9d2:   c3                              	ret 
; function: main at 0x804a9d3 -- 0x804ae97
0x804a9d3:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a9d7:   83 e4 f0                        	and esp, 0xfffffff0
0x804a9da:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a9dd:   55                              	push ebp
0x804a9de:   89 e5                           	mov ebp, esp
0x804a9e0:   53                              	push ebx
0x804a9e1:   51                              	push ecx
0x804a9e2:   83 ec 10                        	sub esp, 0x10
0x804a9e5:   e8 a6 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a9ea:   81 c3 16 26 00 00               	add ebx, 0x2616
0x804a9f0:   89 c8                           	mov eax, ecx
0x804a9f2:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a9f9:   83 38 02                        	cmp dword ptr [eax], 2
0x804a9fc:   75 26                           	jne 0x804aa24 <main+0x51>
0x804a9fe:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aa01:   83 c0 04                        	add eax, 4
0x804aa04:   8b 00                           	mov eax, dword ptr [eax]
0x804aa06:   83 ec 08                        	sub esp, 8
0x804aa09:   8d 93 7c df ff ff               	lea edx, [ebx - 0x2084]
0x804aa0f:   52                              	push edx
0x804aa10:   50                              	push eax
0x804aa11:   e8 ea d8 ff ff                  	call 0x8048300 <strcmp>
0x804aa16:   83 c4 10                        	add esp, 0x10
0x804aa19:   85 c0                           	test eax, eax
0x804aa1b:   75 07                           	jne 0x804aa24 <main+0x51>
0x804aa1d:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aa24:   e8 2d da ff ff                  	call 0x8048456 <platform_main_begin>
0x804aa29:   e8 3d ea ff ff                  	call 0x804946b <crc32_gentab>
0x804aa2e:   e8 f8 ed ff ff                  	call 0x804982b <func_1>
0x804aa33:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aa39:   89 c2                           	mov edx, eax
0x804aa3b:   83 ec 04                        	sub esp, 4
0x804aa3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa41:   8d 83 7e df ff ff               	lea eax, [ebx - 0x2082]
0x804aa47:   50                              	push eax
0x804aa48:   52                              	push edx
0x804aa49:   e8 29 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa4e:   83 c4 10                        	add esp, 0x10
0x804aa51:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aa57:   89 c2                           	mov edx, eax
0x804aa59:   83 ec 04                        	sub esp, 4
0x804aa5c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa5f:   8d 83 82 df ff ff               	lea eax, [ebx - 0x207e]
0x804aa65:   50                              	push eax
0x804aa66:   52                              	push edx
0x804aa67:   e8 0b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa6c:   83 c4 10                        	add esp, 0x10
0x804aa6f:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804aa75:   89 c2                           	mov edx, eax
0x804aa77:   83 ec 04                        	sub esp, 4
0x804aa7a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa7d:   8d 83 86 df ff ff               	lea eax, [ebx - 0x207a]
0x804aa83:   50                              	push eax
0x804aa84:   52                              	push edx
0x804aa85:   e8 ed ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8a:   83 c4 10                        	add esp, 0x10
0x804aa8d:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aa93:   89 c2                           	mov edx, eax
0x804aa95:   83 ec 04                        	sub esp, 4
0x804aa98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9b:   8d 83 8a df ff ff               	lea eax, [ebx - 0x2076]
0x804aaa1:   50                              	push eax
0x804aaa2:   52                              	push edx
0x804aaa3:   e8 cf ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa8:   83 c4 10                        	add esp, 0x10
0x804aaab:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aab1:   89 c2                           	mov edx, eax
0x804aab3:   83 ec 04                        	sub esp, 4
0x804aab6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab9:   8d 83 8e df ff ff               	lea eax, [ebx - 0x2072]
0x804aabf:   50                              	push eax
0x804aac0:   52                              	push edx
0x804aac1:   e8 b1 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac6:   83 c4 10                        	add esp, 0x10
0x804aac9:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804aacf:   89 c2                           	mov edx, eax
0x804aad1:   83 ec 04                        	sub esp, 4
0x804aad4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad7:   8d 83 92 df ff ff               	lea eax, [ebx - 0x206e]
0x804aadd:   50                              	push eax
0x804aade:   52                              	push edx
0x804aadf:   e8 93 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae4:   83 c4 10                        	add esp, 0x10
0x804aae7:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aaed:   89 c2                           	mov edx, eax
0x804aaef:   83 ec 04                        	sub esp, 4
0x804aaf2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf5:   8d 83 96 df ff ff               	lea eax, [ebx - 0x206a]
0x804aafb:   50                              	push eax
0x804aafc:   52                              	push edx
0x804aafd:   e8 75 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab02:   83 c4 10                        	add esp, 0x10
0x804ab05:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ab0b:   83 ec 04                        	sub esp, 4
0x804ab0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab11:   8d 93 9b df ff ff               	lea edx, [ebx - 0x2065]
0x804ab17:   52                              	push edx
0x804ab18:   50                              	push eax
0x804ab19:   e8 59 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1e:   83 c4 10                        	add esp, 0x10
0x804ab21:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804ab28:   98                              	cwde 
0x804ab29:   83 ec 04                        	sub esp, 4
0x804ab2c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2f:   8d 93 a0 df ff ff               	lea edx, [ebx - 0x2060]
0x804ab35:   52                              	push edx
0x804ab36:   50                              	push eax
0x804ab37:   e8 3b ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab3c:   83 c4 10                        	add esp, 0x10
0x804ab3f:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ab45:   83 ec 04                        	sub esp, 4
0x804ab48:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab4b:   8d 93 a5 df ff ff               	lea edx, [ebx - 0x205b]
0x804ab51:   52                              	push edx
0x804ab52:   50                              	push eax
0x804ab53:   e8 1f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab58:   83 c4 10                        	add esp, 0x10
0x804ab5b:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804ab62:   0f b6 c0                        	movzx eax, al
0x804ab65:   83 ec 04                        	sub esp, 4
0x804ab68:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab6b:   8d 93 aa df ff ff               	lea edx, [ebx - 0x2056]
0x804ab71:   52                              	push edx
0x804ab72:   50                              	push eax
0x804ab73:   e8 ff e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab78:   83 c4 10                        	add esp, 0x10
0x804ab7b:   0f b6 83 4d 00 00 00            	movzx eax, byte ptr [ebx + 0x4d]
0x804ab82:   0f b6 c0                        	movzx eax, al
0x804ab85:   83 ec 04                        	sub esp, 4
0x804ab88:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab8b:   8d 93 af df ff ff               	lea edx, [ebx - 0x2051]
0x804ab91:   52                              	push edx
0x804ab92:   50                              	push eax
0x804ab93:   e8 df e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab98:   83 c4 10                        	add esp, 0x10
0x804ab9b:   0f b6 83 c4 04 00 00            	movzx eax, byte ptr [ebx + 0x4c4]
0x804aba2:   0f b6 c0                        	movzx eax, al
0x804aba5:   83 ec 04                        	sub esp, 4
0x804aba8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abab:   8d 93 b4 df ff ff               	lea edx, [ebx - 0x204c]
0x804abb1:   52                              	push edx
0x804abb2:   50                              	push eax
0x804abb3:   e8 bf e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb8:   83 c4 10                        	add esp, 0x10
0x804abbb:   b8 68 24 00 00                  	mov eax, 0x2468
0x804abc0:   98                              	cwde 
0x804abc1:   83 ec 04                        	sub esp, 4
0x804abc4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abc7:   8d 93 b9 df ff ff               	lea edx, [ebx - 0x2047]
0x804abcd:   52                              	push edx
0x804abce:   50                              	push eax
0x804abcf:   e8 a3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd4:   83 c4 10                        	add esp, 0x10
0x804abd7:   b8 fa ff ff ff                  	mov eax, 0xfffffffa
0x804abdc:   98                              	cwde 
0x804abdd:   83 ec 04                        	sub esp, 4
0x804abe0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe3:   8d 93 be df ff ff               	lea edx, [ebx - 0x2042]
0x804abe9:   52                              	push edx
0x804abea:   50                              	push eax
0x804abeb:   e8 87 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf0:   83 c4 10                        	add esp, 0x10
0x804abf3:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804abfa:   0f b6 c0                        	movzx eax, al
0x804abfd:   83 ec 04                        	sub esp, 4
0x804ac00:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac03:   8d 93 c3 df ff ff               	lea edx, [ebx - 0x203d]
0x804ac09:   52                              	push edx
0x804ac0a:   50                              	push eax
0x804ac0b:   e8 67 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac10:   83 c4 10                        	add esp, 0x10
0x804ac13:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ac19:   89 c2                           	mov edx, eax
0x804ac1b:   83 ec 04                        	sub esp, 4
0x804ac1e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac21:   8d 83 c8 df ff ff               	lea eax, [ebx - 0x2038]
0x804ac27:   50                              	push eax
0x804ac28:   52                              	push edx
0x804ac29:   e8 49 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac2e:   83 c4 10                        	add esp, 0x10
0x804ac31:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ac37:   89 c2                           	mov edx, eax
0x804ac39:   83 ec 04                        	sub esp, 4
0x804ac3c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3f:   8d 83 cd df ff ff               	lea eax, [ebx - 0x2033]
0x804ac45:   50                              	push eax
0x804ac46:   52                              	push edx
0x804ac47:   e8 2b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac4c:   83 c4 10                        	add esp, 0x10
0x804ac4f:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804ac56:   0f b6 c0                        	movzx eax, al
0x804ac59:   83 ec 04                        	sub esp, 4
0x804ac5c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5f:   8d 93 d3 df ff ff               	lea edx, [ebx - 0x202d]
0x804ac65:   52                              	push edx
0x804ac66:   50                              	push eax
0x804ac67:   e8 0b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac6c:   83 c4 10                        	add esp, 0x10
0x804ac6f:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ac75:   89 c2                           	mov edx, eax
0x804ac77:   83 ec 04                        	sub esp, 4
0x804ac7a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac7d:   8d 83 d9 df ff ff               	lea eax, [ebx - 0x2027]
0x804ac83:   50                              	push eax
0x804ac84:   52                              	push edx
0x804ac85:   e8 ed e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac8a:   83 c4 10                        	add esp, 0x10
0x804ac8d:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804ac94:   98                              	cwde 
0x804ac95:   83 ec 04                        	sub esp, 4
0x804ac98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac9b:   8d 93 df df ff ff               	lea edx, [ebx - 0x2021]
0x804aca1:   52                              	push edx
0x804aca2:   50                              	push eax
0x804aca3:   e8 cf e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca8:   83 c4 10                        	add esp, 0x10
0x804acab:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804acb1:   89 c2                           	mov edx, eax
0x804acb3:   83 ec 04                        	sub esp, 4
0x804acb6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb9:   8d 83 e5 df ff ff               	lea eax, [ebx - 0x201b]
0x804acbf:   50                              	push eax
0x804acc0:   52                              	push edx
0x804acc1:   e8 b1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc6:   83 c4 10                        	add esp, 0x10
0x804acc9:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804accf:   89 c2                           	mov edx, eax
0x804acd1:   83 ec 04                        	sub esp, 4
0x804acd4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd7:   8d 83 eb df ff ff               	lea eax, [ebx - 0x2015]
0x804acdd:   50                              	push eax
0x804acde:   52                              	push edx
0x804acdf:   e8 93 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace4:   83 c4 10                        	add esp, 0x10
0x804ace7:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aced:   89 c2                           	mov edx, eax
0x804acef:   83 ec 04                        	sub esp, 4
0x804acf2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf5:   8d 83 f1 df ff ff               	lea eax, [ebx - 0x200f]
0x804acfb:   50                              	push eax
0x804acfc:   52                              	push edx
0x804acfd:   e8 75 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad02:   83 c4 10                        	add esp, 0x10
0x804ad05:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ad0b:   83 ec 04                        	sub esp, 4
0x804ad0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad11:   8d 93 f7 df ff ff               	lea edx, [ebx - 0x2009]
0x804ad17:   52                              	push edx
0x804ad18:   50                              	push eax
0x804ad19:   e8 59 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1e:   83 c4 10                        	add esp, 0x10
0x804ad21:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804ad27:   83 ec 04                        	sub esp, 4
0x804ad2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2d:   8d 93 fd df ff ff               	lea edx, [ebx - 0x2003]
0x804ad33:   52                              	push edx
0x804ad34:   50                              	push eax
0x804ad35:   e8 3d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3a:   83 c4 10                        	add esp, 0x10
0x804ad3d:   0f b7 83 74 00 00 00            	movzx eax, word ptr [ebx + 0x74]
0x804ad44:   0f b7 c0                        	movzx eax, ax
0x804ad47:   83 ec 04                        	sub esp, 4
0x804ad4a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4d:   8d 93 03 e0 ff ff               	lea edx, [ebx - 0x1ffd]
0x804ad53:   52                              	push edx
0x804ad54:   50                              	push eax
0x804ad55:   e8 1d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad5a:   83 c4 10                        	add esp, 0x10
0x804ad5d:   0f b6 83 76 00 00 00            	movzx eax, byte ptr [ebx + 0x76]
0x804ad64:   0f b6 c0                        	movzx eax, al
0x804ad67:   83 ec 04                        	sub esp, 4
0x804ad6a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad6d:   8d 93 09 e0 ff ff               	lea edx, [ebx - 0x1ff7]
0x804ad73:   52                              	push edx
0x804ad74:   50                              	push eax
0x804ad75:   e8 fd e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad7a:   83 c4 10                        	add esp, 0x10
0x804ad7d:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804ad84:   98                              	cwde 
0x804ad85:   83 ec 04                        	sub esp, 4
0x804ad88:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad8b:   8d 93 0f e0 ff ff               	lea edx, [ebx - 0x1ff1]
0x804ad91:   52                              	push edx
0x804ad92:   50                              	push eax
0x804ad93:   e8 df e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad98:   83 c4 10                        	add esp, 0x10
0x804ad9b:   0f b7 83 7a 00 00 00            	movzx eax, word ptr [ebx + 0x7a]
0x804ada2:   0f b7 c0                        	movzx eax, ax
0x804ada5:   83 ec 04                        	sub esp, 4
0x804ada8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adab:   8d 93 15 e0 ff ff               	lea edx, [ebx - 0x1feb]
0x804adb1:   52                              	push edx
0x804adb2:   50                              	push eax
0x804adb3:   e8 bf e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb8:   83 c4 10                        	add esp, 0x10
0x804adbb:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804adc1:   89 c2                           	mov edx, eax
0x804adc3:   83 ec 04                        	sub esp, 4
0x804adc6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc9:   8d 83 1b e0 ff ff               	lea eax, [ebx - 0x1fe5]
0x804adcf:   50                              	push eax
0x804add0:   52                              	push edx
0x804add1:   e8 a1 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add6:   83 c4 10                        	add esp, 0x10
0x804add9:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804addf:   89 c2                           	mov edx, eax
0x804ade1:   83 ec 04                        	sub esp, 4
0x804ade4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade7:   8d 83 21 e0 ff ff               	lea eax, [ebx - 0x1fdf]
0x804aded:   50                              	push eax
0x804adee:   52                              	push edx
0x804adef:   e8 83 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf4:   83 c4 10                        	add esp, 0x10
0x804adf7:   8b 83 cc 04 00 00               	mov eax, dword ptr [ebx + 0x4cc]
0x804adfd:   83 ec 04                        	sub esp, 4
0x804ae00:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae03:   8d 93 27 e0 ff ff               	lea edx, [ebx - 0x1fd9]
0x804ae09:   52                              	push edx
0x804ae0a:   50                              	push eax
0x804ae0b:   e8 67 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae10:   83 c4 10                        	add esp, 0x10
0x804ae13:   0f b7 83 84 00 00 00            	movzx eax, word ptr [ebx + 0x84]
0x804ae1a:   0f b7 c0                        	movzx eax, ax
0x804ae1d:   83 ec 04                        	sub esp, 4
0x804ae20:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae23:   8d 93 2d e0 ff ff               	lea edx, [ebx - 0x1fd3]
0x804ae29:   52                              	push edx
0x804ae2a:   50                              	push eax
0x804ae2b:   e8 47 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae30:   83 c4 10                        	add esp, 0x10
0x804ae33:   8b 83 d0 04 00 00               	mov eax, dword ptr [ebx + 0x4d0]
0x804ae39:   89 c2                           	mov edx, eax
0x804ae3b:   83 ec 04                        	sub esp, 4
0x804ae3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae41:   8d 83 33 e0 ff ff               	lea eax, [ebx - 0x1fcd]
0x804ae47:   50                              	push eax
0x804ae48:   52                              	push edx
0x804ae49:   e8 29 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4e:   83 c4 10                        	add esp, 0x10
0x804ae51:   0f b6 83 86 00 00 00            	movzx eax, byte ptr [ebx + 0x86]
0x804ae58:   0f b6 c0                        	movzx eax, al
0x804ae5b:   83 ec 04                        	sub esp, 4
0x804ae5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae61:   8d 93 39 e0 ff ff               	lea edx, [ebx - 0x1fc7]
0x804ae67:   52                              	push edx
0x804ae68:   50                              	push eax
0x804ae69:   e8 09 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6e:   83 c4 10                        	add esp, 0x10
0x804ae71:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ae77:   f7 d0                           	not eax
0x804ae79:   83 ec 08                        	sub esp, 8
0x804ae7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7f:   50                              	push eax
0x804ae80:   e8 e1 d5 ff ff                  	call 0x8048466 <platform_main_end>
0x804ae85:   83 c4 10                        	add esp, 0x10
0x804ae88:   b8 00 00 00 00                  	mov eax, 0
0x804ae8d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ae90:   59                              	pop ecx
0x804ae91:   5b                              	pop ebx
0x804ae92:   5d                              	pop ebp
0x804ae93:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ae96:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ae97 -- 0x804ae9b
0x804ae97:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ae9a:   c3                              	ret 
; data inside code section at 0x804ae9b -- 0x804aea0
0x804ae9b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804aea0 -- 0x804aefd
0x804aea0:   55                              	push ebp
0x804aea1:   57                              	push edi
0x804aea2:   56                              	push esi
0x804aea3:   53                              	push ebx
0x804aea4:   e8 e7 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aea9:   81 c3 57 21 00 00               	add ebx, 0x2157
0x804aeaf:   83 ec 0c                        	sub esp, 0xc
0x804aeb2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aeb6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804aebc:   e8 0b d4 ff ff                  	call 0x80482cc <_init>
0x804aec1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804aec7:   29 c6                           	sub esi, eax
0x804aec9:   c1 fe 02                        	sar esi, 2
0x804aecc:   85 f6                           	test esi, esi
0x804aece:   74 25                           	je 0x804aef5 <__libc_csu_init+0x55>
0x804aed0:   31 ff                           	xor edi, edi
0x804aed2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aed8:   83 ec 04                        	sub esp, 4
0x804aedb:   55                              	push ebp
0x804aedc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aee0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aee4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aeeb:   83 c7 01                        	add edi, 1
0x804aeee:   83 c4 10                        	add esp, 0x10
0x804aef1:   39 fe                           	cmp esi, edi
0x804aef3:   75 e3                           	jne 0x804aed8 <__libc_csu_init+0x38>
0x804aef5:   83 c4 0c                        	add esp, 0xc
0x804aef8:   5b                              	pop ebx
0x804aef9:   5e                              	pop esi
0x804aefa:   5f                              	pop edi
0x804aefb:   5d                              	pop ebp
0x804aefc:   c3                              	ret 
; data inside code section at 0x804aefd -- 0x804af00
0x804aefd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804af00 -- 0x804af02
0x804af00:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804af04 -- 0x804af18
0x804af04:   53                              	push ebx
0x804af05:   83 ec 08                        	sub esp, 8
0x804af08:   e8 83 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804af0d:   81 c3 f3 20 00 00               	add ebx, 0x20f3
0x804af13:   83 c4 08                        	add esp, 8
0x804af16:   5b                              	pop ebx
0x804af17:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 1c af 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804af18:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804af28:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804af38:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804af48:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804af58:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804af68:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804af78:   68 24 fa ff 31 00 67 5f  32 00 67 5f 33 00 67 5f   |h$..1.g_2.g_3.g_|
0x804af88:   34 00 67 5f 35 00 67 5f  36 00 67 5f 37 00 67 5f   |4.g_5.g_6.g_7.g_|
0x804af98:   31 30 00 67 5f 32 37 00  67 5f 33 36 00 67 5f 34   |10.g_27.g_36.g_4|
0x804afa8:   34 00 67 5f 34 39 00 67  5f 36 37 00 67 5f 36 39   |4.g_49.g_67.g_69|
0x804afb8:   00 67 5f 37 30 00 67 5f  38 35 00 67 5f 39 36 00   |.g_70.g_85.g_96.|
0x804afc8:   67 5f 39 39 00 67 5f 31  32 39 00 67 5f 31 33 30   |g_99.g_129.g_130|
0x804afd8:   00 67 5f 31 34 30 00 67  5f 31 37 34 00 67 5f 31   |.g_140.g_174.g_1|
0x804afe8:   37 36 00 67 5f 31 37 37  00 67 5f 31 37 38 00 67   |76.g_177.g_178.g|
0x804aff8:   5f 31 37 39 00 67 5f 31  38 33 00 67 5f 32 30 31   |_179.g_183.g_201|
0x804b008:   00 67 5f 32 33 38 00 67  5f 32 34 30 00 67 5f 32   |.g_238.g_240.g_2|
0x804b018:   38 35 00 67 5f 33 33 38  00 67 5f 33 33 39 00 67   |85.g_338.g_339.g|
0x804b028:   5f 33 34 30 00 67 5f 33  34 37 00 67 5f 33 36 36   |_340.g_347.g_366|
0x804b038:   00 67 5f 33 36 37 00 00  00 00 00 3f ff ff ff 7e   |.g_367.....?...~|
0x804b048:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b058:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b068:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b078:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b088:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b098:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b0a8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b0a8:   01 1b 03 3b b0 02 00 00  55 00 00 00 48 d2 ff ff   |...;....U...H...|
0x804b0b8:   e0 02 00 00 88 d2 ff ff  04 03 00 00 d8 d2 ff ff   |................|
0x804b0c8:   cc 02 00 00 ae d3 ff ff  18 03 00 00 be d3 ff ff   |................|
0x804b0d8:   38 03 00 00 ec d3 ff ff  5c 03 00 00 0a d4 ff ff   |8.......\.......|
0x804b0e8:   7c 03 00 00 32 d4 ff ff  9c 03 00 00 5c d4 ff ff   ||...2.......\...|
0x804b0f8:   bc 03 00 00 85 d4 ff ff  dc 03 00 00 c8 d4 ff ff   |................|
0x804b108:   fc 03 00 00 09 d5 ff ff  1c 04 00 00 61 d5 ff ff   |............a...|
0x804b118:   40 04 00 00 b3 d5 ff ff  64 04 00 00 f0 d5 ff ff   |@.......d.......|
0x804b128:   84 04 00 00 27 d6 ff ff  a4 04 00 00 46 d6 ff ff   |....'.......F...|
0x804b138:   c4 04 00 00 70 d6 ff ff  e4 04 00 00 9c d6 ff ff   |....p...........|
0x804b148:   04 05 00 00 c7 d6 ff ff  24 05 00 00 10 d7 ff ff   |........$.......|
0x804b158:   44 05 00 00 57 d7 ff ff  64 05 00 00 b1 d7 ff ff   |D...W...d.......|
0x804b168:   88 05 00 00 05 d8 ff ff  ac 05 00 00 44 d8 ff ff   |............D...|
0x804b178:   cc 05 00 00 7d d8 ff ff  ec 05 00 00 9f d8 ff ff   |....}...........|
0x804b188:   0c 06 00 00 ed d8 ff ff  2c 06 00 00 29 d9 ff ff   |........,...)...|
0x804b198:   4c 06 00 00 b2 d9 ff ff  6c 06 00 00 e4 d9 ff ff   |L.......l.......|
0x804b1a8:   8c 06 00 00 14 da ff ff  ac 06 00 00 59 da ff ff   |............Y...|
0x804b1b8:   cc 06 00 00 98 da ff ff  ec 06 00 00 ca da ff ff   |................|
0x804b1c8:   0c 07 00 00 f6 da ff ff  2c 07 00 00 14 db ff ff   |........,.......|
0x804b1d8:   4c 07 00 00 3c db ff ff  6c 07 00 00 61 db ff ff   |L...<...l...a...|
0x804b1e8:   8c 07 00 00 86 db ff ff  ac 07 00 00 bd db ff ff   |................|
0x804b1f8:   cc 07 00 00 f1 db ff ff  ec 07 00 00 43 dc ff ff   |............C...|
0x804b208:   10 08 00 00 8f dc ff ff  34 08 00 00 c6 dc ff ff   |........4.......|
0x804b218:   54 08 00 00 f7 dc ff ff  74 08 00 00 16 dd ff ff   |T.......t.......|
0x804b228:   94 08 00 00 40 dd ff ff  b4 08 00 00 68 dd ff ff   |....@.......h...|
0x804b238:   d4 08 00 00 91 dd ff ff  f4 08 00 00 cd dd ff ff   |................|
0x804b248:   14 09 00 00 07 de ff ff  34 09 00 00 5a de ff ff   |........4...Z...|
0x804b258:   58 09 00 00 a7 de ff ff  7c 09 00 00 df de ff ff   |X.......|.......|
0x804b268:   9c 09 00 00 11 df ff ff  bc 09 00 00 25 df ff ff   |............%...|
0x804b278:   dc 09 00 00 3c df ff ff  fc 09 00 00 51 df ff ff   |....<.......Q...|
0x804b288:   1c 0a 00 00 67 df ff ff  3c 0a 00 00 8e df ff ff   |....g...<.......|
0x804b298:   5c 0a 00 00 b3 df ff ff  7c 0a 00 00 f2 df ff ff   |\.......|.......|
0x804b2a8:   9c 0a 00 00 2b e0 ff ff  bc 0a 00 00 57 e0 ff ff   |....+.......W...|
0x804b2b8:   dc 0a 00 00 7d e0 ff ff  fc 0a 00 00 bf e0 ff ff   |....}...........|
0x804b2c8:   1c 0b 00 00 01 e1 ff ff  3c 0b 00 00 43 e1 ff ff   |........<...C...|
0x804b2d8:   5c 0b 00 00 b8 e1 ff ff  7c 0b 00 00 15 e2 ff ff   |\.......|.......|
0x804b2e8:   9c 0b 00 00 72 e2 ff ff  bc 0b 00 00 cf e2 ff ff   |....r...........|
0x804b2f8:   dc 0b 00 00 5f e3 ff ff  fc 0b 00 00 c3 e3 ff ff   |...._...........|
0x804b308:   1c 0c 00 00 33 e4 ff ff  3c 0c 00 00 7a e4 ff ff   |....3...<...z...|
0x804b318:   60 0c 00 00 cf e4 ff ff  80 0c 00 00 16 e5 ff ff   |`...............|
0x804b328:   a4 0c 00 00 7e e5 ff ff  c8 0c 00 00 83 e7 ff ff   |....~...........|
0x804b338:   f8 0c 00 00 2b f9 ff ff  28 0d 00 00 ef fd ff ff   |....+...(.......|
0x804b348:   60 0d 00 00 f8 fd ff ff  74 0d 00 00 58 fe ff ff   |`.......t...X...|
0x804b358:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804b35c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b36c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b37c:   04 d0 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b38c:   30 00 00 00 60 cf ff ff  40 00 00 00 00 0e 08 46   |0...`...@......F|
0x804b39c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b3ac:   10 00 00 00 54 00 00 00  7c cf ff ff 08 00 00 00   |....T...|.......|
0x804b3bc:   00 00 00 00 1c 00 00 00  68 00 00 00 8e d0 ff ff   |........h.......|
0x804b3cc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b3dc:   04 04 00 00 20 00 00 00  88 00 00 00 7e d0 ff ff   |.... .......~...|
0x804b3ec:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b3fc:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b40c:   88 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b41c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b42c:   86 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b43c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b44c:   8e d0 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b45c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b46c:   98 d0 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b47c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b48c:   a1 d0 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b49c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b4ac:   c4 d0 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b4bc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b4cc:   e5 d0 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b4dc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b4ec:   90 01 00 00 19 d1 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b4fc:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b50c:   1c 00 00 00 b4 01 00 00  47 d1 ff ff 3d 00 00 00   |........G...=...|
0x804b51c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b52c:   1c 00 00 00 d4 01 00 00  64 d1 ff ff 37 00 00 00   |........d...7...|
0x804b53c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b54c:   1c 00 00 00 f4 01 00 00  7b d1 ff ff 1f 00 00 00   |........{.......|
0x804b55c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b56c:   1c 00 00 00 14 02 00 00  7a d1 ff ff 2a 00 00 00   |........z...*...|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b58c:   1c 00 00 00 34 02 00 00  84 d1 ff ff 2c 00 00 00   |....4.......,...|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b5ac:   1c 00 00 00 54 02 00 00  90 d1 ff ff 2b 00 00 00   |....T.......+...|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b5cc:   1c 00 00 00 74 02 00 00  9b d1 ff ff 49 00 00 00   |....t.......I...|
0x804b5dc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b5ec:   1c 00 00 00 94 02 00 00  c4 d1 ff ff 47 00 00 00   |............G...|
0x804b5fc:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b60c:   20 00 00 00 b4 02 00 00  eb d1 ff ff 5a 00 00 00   | ...........Z...|
0x804b61c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b62c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 21 d2 ff ff   |.... .......!...|
0x804b63c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b64c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b65c:   51 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Q...?....A....B.|
0x804b66c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b67c:   70 d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |p...9....A....B.|
0x804b68c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b69c:   89 d2 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b6ac:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b6bc:   8b d2 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b6cc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b6dc:   b9 d2 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b6ec:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b6fc:   d5 d2 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b70c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b71c:   3e d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |>...2....A....B.|
0x804b72c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b73c:   50 d3 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |P...0....A....B.|
0x804b74c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b75c:   60 d3 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |`...E....A....B.|
0x804b76c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b77c:   85 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b78c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b79c:   a4 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b7ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b7bc:   b6 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7cc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b7dc:   c2 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7ec:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b7fc:   c0 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b80c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b81c:   c8 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b82c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b83c:   cd d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b84c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b85c:   d2 d3 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b86c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b87c:   e9 d3 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b88c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b89c:   fd d3 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b8ac:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b8bc:   60 05 00 00 2b d4 ff ff  4c 00 00 00 00 41 0e 08   |`...+...L....A..|
0x804b8cc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b8dc:   1c 00 00 00 84 05 00 00  53 d4 ff ff 37 00 00 00   |........S...7...|
0x804b8ec:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b8fc:   1c 00 00 00 a4 05 00 00  6a d4 ff ff 31 00 00 00   |........j...1...|
0x804b90c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b91c:   1c 00 00 00 c4 05 00 00  7b d4 ff ff 1f 00 00 00   |........{.......|
0x804b92c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b93c:   1c 00 00 00 e4 05 00 00  7a d4 ff ff 2a 00 00 00   |........z...*...|
0x804b94c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b95c:   1c 00 00 00 04 06 00 00  84 d4 ff ff 28 00 00 00   |............(...|
0x804b96c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b97c:   1c 00 00 00 24 06 00 00  8c d4 ff ff 29 00 00 00   |....$.......)...|
0x804b98c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b99c:   1c 00 00 00 44 06 00 00  95 d4 ff ff 3c 00 00 00   |....D.......<...|
0x804b9ac:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b9bc:   1c 00 00 00 64 06 00 00  b1 d4 ff ff 3a 00 00 00   |....d.......:...|
0x804b9cc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b9dc:   20 00 00 00 84 06 00 00  cb d4 ff ff 53 00 00 00   | ...........S...|
0x804b9ec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b9fc:   c5 0c 04 04 20 00 00 00  a8 06 00 00 fa d4 ff ff   |.... ...........|
0x804ba0c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804ba1c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804ba2c:   23 d5 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |#...8....A....B.|
0x804ba3c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804ba4c:   3b d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |;...2....A....B.|
0x804ba5c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804ba6c:   4d d5 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |M........A....B.|
0x804ba7c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804ba8c:   41 d5 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |A........A....B.|
0x804ba9c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804baac:   38 d5 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804babc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bacc:   2d d5 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804badc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804baec:   23 d5 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |#...'....A....B.|
0x804bafc:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bb0c:   2a d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |*...%....A....B.|
0x804bb1c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bb2c:   2f d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |/...?....A....B.|
0x804bb3c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bb4c:   4e d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |N...9....A....B.|
0x804bb5c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bb6c:   67 d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |g...,....A....B.|
0x804bb7c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bb8c:   73 d5 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |s...&....A....B.|
0x804bb9c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bbac:   79 d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |y...B....A....B.|
0x804bbbc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bbcc:   9b d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bbdc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bbec:   bd d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bbfc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bc0c:   df d5 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bc1c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bc2c:   34 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |4...]....A....B.|
0x804bc3c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bc4c:   71 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |q...]....A....B.|
0x804bc5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bc6c:   ae d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bc7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bc8c:   eb d6 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc9c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bcac:   5b d7 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |[...d....A....B.|
0x804bcbc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bccc:   9f d7 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bcdc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bcec:   ef d7 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bcfc:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bd0c:   b0 09 00 00 12 d8 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bd1c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bd2c:   d0 09 00 00 47 d8 ff ff  47 00 00 00 00 41 0e 08   |....G...G....A..|
0x804bd3c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bd4c:   20 00 00 00 f4 09 00 00  6a d8 ff ff 68 00 00 00   | .......j...h...|
0x804bd5c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bd6c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 ae d8 ff ff   |....,...........|
0x804bd7c:   05 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bd8c:   86 04 83 05 03 f8 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bd9c:   04 00 00 00 2c 00 00 00  48 0a 00 00 83 da ff ff   |....,...H.......|
0x804bdac:   a8 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bdbc:   86 04 83 05 03 98 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bdcc:   04 00 00 00 34 00 00 00  78 0a 00 00 fb eb ff ff   |....4...x.......|
0x804bddc:   c4 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bdec:   0f 03 75 78 06 10 03 02  75 7c 03 af 04 c1 0c 01   |..ux....u|......|
0x804bdfc:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804be0c:   b0 0a 00 00 87 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804be1c:   48 00 00 00 c4 0a 00 00  7c f0 ff ff 5d 00 00 00   |H.......|...]...|
0x804be2c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804be3c:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804be4c:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804be5c:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804be6c:   10 0b 00 00 90 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804be7c:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 04 af 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff f7 ff ff ff   |................|
0x804d028:   a3 e1 b4 93 04 00 00 00  ff ff ff ff c1 59 8a f9   |.............Y..|
0x804d038:   e1 07 fc 3e da 51 15 e3  08 00 00 00 46 f8 00 00   |...>.Q......F...|
0x804d048:   05 00 00 00 47 52 ff 00  fc ff ff ff 09 00 00 00   |....GR..........|
0x804d058:   ff 00 00 00 b2 e4 dd d6  65 1b 00 00 ff ff ff ff   |........e.......|
0x804d068:   ff ff ff ff fc ff ff ff  67 88 5f 77 c7 b0 f8 00   |........g._w....|
0x804d078:   f8 ff ff ff 60 ec b0 f2  84 e7 7d 0a f9 16 01 ??   |....`.....}....?|
