;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:50:34
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 40 df ff ff               	lea eax, [ebx - 0x20c0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 e0 de ff ff               	lea eax, [ebx - 0x2120]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 33 ab 04 08               	mov eax, 0x804ab33
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483a5:   3d 74 d0 04 08                  	cmp eax, 0x804d074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 d0 04 08                  	push 0x804d074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483e5:   2d 74 d0 04 08                  	sub eax, 0x804d074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 d0 04 08                  	push 0x804d074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 77 2a 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 63 2a 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 60 df ff ff               	lea edx, [eax - 0x20a0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 36 2a 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 18 2a 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 f0 29 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 c6 29 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 9d 29 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 5a 29 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 18 29 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 c0 28 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 6f 28 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 32 28 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 fb 27 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 dc 27 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 b2 27 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 86 27 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 5b 27 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 12 27 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 ca 26 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 70 26 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 1d 26 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 de 25 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 a8 25 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 86 25 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 38 25 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 fc 24 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 73 24 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 41 24 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 11 24 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 cc 23 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 8d 23 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 5b 23 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 2c 23 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 0e 23 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 e6 22 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 c1 22 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 9c 22 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 65 22 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 30 22 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 de 21 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 93 21 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 5c 21 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 2b 21 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 0c 21 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 e2 20 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 ba 20 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 91 20 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 55 20 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 1a 20 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 c7 1f 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 7b 1f 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 43 1f 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 14 1f 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 00 1f 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 e9 1e 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 d4 1e 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 be 1e 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 97 1e 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 72 1e 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 33 1e 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 fa 1d 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ce 1d 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 a8 1d 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 4c e0 ff ff               	fld dword ptr [eax - 0x1fb4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 4c e0 ff ff               	fld dword ptr [eax - 0x1fb4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 50 e0 ff ff               	fld dword ptr [eax - 0x1fb0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 66 1d 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 4c e0 ff ff               	fld dword ptr [eax - 0x1fb4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 4c e0 ff ff               	fld dword ptr [eax - 0x1fb4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 50 e0 ff ff               	fld dword ptr [eax - 0x1fb0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 24 1d 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 54 e0 ff ff               	fld dword ptr [eax - 0x1fac]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 58 e0 ff ff               	fld dword ptr [eax - 0x1fa8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 5c e0 ff ff               	fld dword ptr [eax - 0x1fa4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 e2 1c 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 60 e0 ff ff               	fld dword ptr [eax - 0x1fa0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 64 e0 ff ff               	fld dword ptr [eax - 0x1f9c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 68 e0 ff ff               	fld dword ptr [eax - 0x1f98]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 6a 1c 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 70 e0 ff ff               	fld qword ptr [eax - 0x1f90]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 70 e0 ff ff               	fld qword ptr [eax - 0x1f90]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 78 e0 ff ff               	fld qword ptr [eax - 0x1f88]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 0d 1c 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 70 e0 ff ff               	fld qword ptr [eax - 0x1f90]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 70 e0 ff ff               	fld qword ptr [eax - 0x1f90]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 78 e0 ff ff               	fld qword ptr [eax - 0x1f88]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 b0 1b 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 80 e0 ff ff               	fld qword ptr [eax - 0x1f80]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 88 e0 ff ff               	fld qword ptr [eax - 0x1f78]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 90 e0 ff ff               	fld qword ptr [eax - 0x1f70]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 53 1b 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 98 e0 ff ff               	fld qword ptr [eax - 0x1f68]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a0 e0 ff ff               	fld qword ptr [eax - 0x1f60]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 a8 e0 ff ff               	fld qword ptr [eax - 0x1f58]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 c3 1a 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b0 e0 ff ff               	fld dword ptr [eax - 0x1f50]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 b4 e0 ff ff               	fld dword ptr [eax - 0x1f4c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 5f 1a 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 ee 19 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 ab 19 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 70 df ff ff               	lea eax, [ebx - 0x2090]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 94 df ff ff               	lea eax, [ebx - 0x206c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 a3 18 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 b8 df ff ff               	lea edx, [eax - 0x2048]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x8049817
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 68                        	sub esp, 0x68
0x804965d:   e8 77 18 00 00                  	call 0x804aed9 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804966e:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049671:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049674:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049677:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x804967a:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804967d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049680:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049683:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049686:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049689:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804968c:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804968f:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049692:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049695:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049698:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804969b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804969e:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x80496a1:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x80496a4:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80496a7:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x80496aa:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80496ad:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x80496b0:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80496b3:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x80496b6:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496ba:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496be:   89 c8                           	mov eax, ecx
0x80496c0:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496c3:   89 d8                           	mov eax, ebx
0x80496c5:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496c9:   89 f0                           	mov eax, esi
0x80496cb:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496ce:   89 f8                           	mov eax, edi
0x80496d0:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496d3:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496d7:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496db:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496df:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496e3:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496e7:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ea:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496ee:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496f1:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496f5:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496f9:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496fd:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x8049700:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x8049704:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x8049707:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x804970b:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x804970e:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x8049712:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049716:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x804971a:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x804971d:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049721:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x8049728:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804972c:   88 82 26 00 00 00               	mov byte ptr [edx + 0x26], al
0x8049732:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049735:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x804973b:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804973e:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049744:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049748:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x804974f:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049753:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049759:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804975c:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049762:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049766:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x804976c:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049770:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x8049777:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804977b:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x8049782:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049785:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804978b:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804978f:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x8049795:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049798:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x804979e:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497a1:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497a7:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497ab:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x80497b1:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497b5:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x80497bc:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c0:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x80497c6:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497ca:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x80497d0:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497d4:   88 82 61 00 00 00               	mov byte ptr [edx + 0x61], al
0x80497da:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497dd:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497e3:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497e6:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497ec:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497ef:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497f5:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497f9:   66 89 82 a6 04 00 00            	mov word ptr [edx + 0x4a6], ax
0x8049800:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049804:   88 82 70 00 00 00               	mov byte ptr [edx + 0x70], al
0x804980a:   b8 00 00 00 00                  	mov eax, 0
0x804980f:   83 c4 68                        	add esp, 0x68
0x8049812:   5b                              	pop ebx
0x8049813:   5e                              	pop esi
0x8049814:   5f                              	pop edi
0x8049815:   5d                              	pop ebp
0x8049816:   c3                              	ret 
; function: func_1 at 0x8049817 -- 0x804ab33
0x8049817:   55                              	push ebp
0x8049818:   89 e5                           	mov ebp, esp
0x804981a:   57                              	push edi
0x804981b:   56                              	push esi
0x804981c:   53                              	push ebx
0x804981d:   81 ec 74 01 00 00               	sub esp, 0x174
0x8049823:   e8 ad 16 00 00                  	call 0x804aed5 <__x86.get_pc_thunk.ax>
0x8049828:   05 d8 37 00 00                  	add eax, 0x37d8
0x804982d:   66 c7 45 92 24 03               	mov word ptr [ebp - 0x6e], 0x324
0x8049833:   c6 45 f3 f7                     	mov byte ptr [ebp - 0xd], 0xf7
0x8049837:   c7 45 ec 2c e3 20 43            	mov dword ptr [ebp - 0x14], 0x4320e32c
0x804983e:   c7 45 e8 65 6b ed aa            	mov dword ptr [ebp - 0x18], 0xaaed6b65
0x8049845:   66 c7 45 e6 00 00               	mov word ptr [ebp - 0x1a], 0
0x804984b:   c6 45 e5 01                     	mov byte ptr [ebp - 0x1b], 1
0x804984f:   c7 45 e0 fa ff ff ff            	mov dword ptr [ebp - 0x20], 0xfffffffa
0x8049856:   c7 45 8c c8 05 ff c8            	mov dword ptr [ebp - 0x74], 0xc8ff05c8
0x804985d:   c6 45 df 01                     	mov byte ptr [ebp - 0x21], 1
0x8049861:   66 c7 45 dc f9 ff               	mov word ptr [ebp - 0x24], 0xfff9
0x8049867:   66 c7 45 8a f6 ff               	mov word ptr [ebp - 0x76], 0xfff6
0x804986d:   c7 45 d8 04 04 aa d5            	mov dword ptr [ebp - 0x28], 0xd5aa0404
0x8049874:   c6 45 d7 b2                     	mov byte ptr [ebp - 0x29], 0xb2
0x8049878:   c7 45 d0 07 00 00 00            	mov dword ptr [ebp - 0x30], 7
0x804987f:   c7 45 cc 2d a5 c2 fe            	mov dword ptr [ebp - 0x34], 0xfec2a52d
0x8049886:   c6 45 cb 01                     	mov byte ptr [ebp - 0x35], 1
0x804988a:   66 c7 45 c8 01 00               	mov word ptr [ebp - 0x38], 1
0x8049890:   c6 45 c7 ef                     	mov byte ptr [ebp - 0x39], 0xef
0x8049894:   c7 45 84 01 00 00 00            	mov dword ptr [ebp - 0x7c], 1
0x804989b:   c6 45 c6 fc                     	mov byte ptr [ebp - 0x3a], 0xfc
0x804989f:   c6 45 c5 5f                     	mov byte ptr [ebp - 0x3b], 0x5f
0x80498a3:   c7 45 80 fa ff ff ff            	mov dword ptr [ebp - 0x80], 0xfffffffa
0x80498aa:   c7 85 7c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x84], 0xffffffff
0x80498b4:   c7 85 78 ff ff ff 42 d3 fc 07   	mov dword ptr [ebp - 0x88], 0x7fcd342
0x80498be:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x80498c4:   c6 85 77 ff ff ff ff            	mov byte ptr [ebp - 0x89], 0xff
0x80498cb:   c7 85 70 ff ff ff a8 8d 3d e5   	mov dword ptr [ebp - 0x90], 0xe53d8da8
0x80498d5:   c7 45 bc 9c 54 04 7d            	mov dword ptr [ebp - 0x44], 0x7d04549c
0x80498dc:   c7 45 b8 07 00 00 00            	mov dword ptr [ebp - 0x48], 7
0x80498e3:   c7 85 6c ff ff ff dc e2 d8 a7   	mov dword ptr [ebp - 0x94], 0xa7d8e2dc
0x80498ed:   c6 85 6b ff ff ff fe            	mov byte ptr [ebp - 0x95], 0xfe
0x80498f4:   c7 85 64 ff ff ff d6 f6 c2 3b   	mov dword ptr [ebp - 0x9c], 0x3bc2f6d6
0x80498fe:   c7 85 60 ff ff ff 4c 4e 1a 4a   	mov dword ptr [ebp - 0xa0], 0x4a1a4e4c
0x8049908:   c6 45 b7 f9                     	mov byte ptr [ebp - 0x49], 0xf9
0x804990c:   c7 85 5c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffffa
0x8049916:   66 c7 85 5a ff ff ff ea 05      	mov word ptr [ebp - 0xa6], 0x5ea
0x804991f:   66 c7 45 b4 4d f6               	mov word ptr [ebp - 0x4c], 0xf64d
0x8049925:   c7 85 54 ff ff ff 6b 94 45 65   	mov dword ptr [ebp - 0xac], 0x6545946b
0x804992f:   c7 85 70 ff ff ff af 5b c0 d6   	mov dword ptr [ebp - 0x90], 0xd6c05baf
0x8049939:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804993d:   89 c1                           	mov ecx, eax
0x804993f:   0f b6 d1                        	movzx edx, cl
0x8049942:   89 d0                           	mov eax, edx
0x8049944:   c1 e0 02                        	shl eax, 2
0x8049947:   01 d0                           	add eax, edx
0x8049949:   c1 e0 05                        	shl eax, 5
0x804994c:   01 d0                           	add eax, edx
0x804994e:   66 c1 e8 08                     	shr ax, 8
0x8049952:   c0 e8 06                        	shr al, 6
0x8049955:   ba 66 00 00 00                  	mov edx, 0x66
0x804995a:   0f af c2                        	imul eax, edx
0x804995d:   29 c1                           	sub ecx, eax
0x804995f:   89 c8                           	mov eax, ecx
0x8049961:   84 c0                           	test al, al
0x8049963:   0f 84 b1 00 00 00               	je 0x8049a1a <func_1+0x203>
0x8049969:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x8049973:   c7 85 4c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb4], 0xffffffff
0x804997d:   c7 85 48 ff ff ff 11 7c 7d 30   	mov dword ptr [ebp - 0xb8], 0x307d7c11
0x8049987:   66 c7 85 46 ff ff ff 35 d5      	mov word ptr [ebp - 0xba], 0xd535
0x8049990:   83 ad 50 ff ff ff 01            	sub dword ptr [ebp - 0xb0], 1
0x8049997:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804999b:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804999e:   89 c1                           	mov ecx, eax
0x80499a0:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x80499a6:   8d 50 01                        	lea edx, [eax + 1]
0x80499a9:   0f b6 c1                        	movzx eax, cl
0x80499ac:   f6 f2                           	div dl
0x80499ae:   0f b6 c0                        	movzx eax, al
0x80499b1:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x80499b7:   c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x80499bb:   eb 52                           	jmp 0x8049a0f <func_1+0x1f8>
0x80499bd:   c7 85 b4 fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x14c], 6
0x80499c7:   c7 85 b0 fe ff ff b0 8e 41 a3   	mov dword ptr [ebp - 0x150], 0xa3418eb0
0x80499d1:   66 83 bd 46 ff ff ff 01         	cmp word ptr [ebp - 0xba], 1
0x80499d9:   0f 97 c0                        	seta al
0x80499dc:   0f b6 c0                        	movzx eax, al
0x80499df:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x80499e2:   0f 96 c0                        	setbe al
0x80499e5:   89 c2                           	mov edx, eax
0x80499e7:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x80499ed:   09 c2                           	or edx, eax
0x80499ef:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x80499f3:   31 d0                           	xor eax, edx
0x80499f5:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x80499f8:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x80499fc:   0f be c0                        	movsx eax, al
0x80499ff:   21 85 b0 fe ff ff               	and dword ptr [ebp - 0x150], eax
0x8049a05:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049a09:   83 e8 07                        	sub eax, 7
0x8049a0c:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049a0f:   80 7d f3 f9                     	cmp byte ptr [ebp - 0xd], 0xf9
0x8049a13:   75 a8                           	jne 0x80499bd <func_1+0x1a6>
0x8049a15:   e9 e3 00 00 00                  	jmp 0x8049afd <func_1+0x2e6>
0x8049a1a:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x8049a21:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x8049a25:   0f b6 4d c5                     	movzx ecx, byte ptr [ebp - 0x3b]
0x8049a29:   0f b6 75 c6                     	movzx esi, byte ptr [ebp - 0x3a]
0x8049a2d:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x8049a31:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x8049a37:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x8049a3b:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x8049a41:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x8049a45:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049a4b:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x8049a4f:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049a55:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x8049a59:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x8049a5f:   0f bf 5d dc                     	movsx ebx, word ptr [ebp - 0x24]
0x8049a63:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x8049a69:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x8049a6d:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x8049a73:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x8049a77:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x8049a7d:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x8049a81:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x8049a87:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x8049a8b:   0f b7 5d 92                     	movzx ebx, word ptr [ebp - 0x6e]
0x8049a8f:   50                              	push eax
0x8049a90:   52                              	push edx
0x8049a91:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049a97:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049a9d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049aa0:   51                              	push ecx
0x8049aa1:   56                              	push esi
0x8049aa2:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049aa8:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049aae:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049ab4:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049ab7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049aba:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049ac0:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049ac3:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049ac9:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049acf:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049ad5:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ad8:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049ade:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049ae4:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ae7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049aea:   57                              	push edi
0x8049aeb:   53                              	push ebx
0x8049aec:   e8 63 fb ff ff                  	call 0x8049654 <set_var>
0x8049af1:   83 c4 60                        	add esp, 0x60
0x8049af4:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x8049af8:   e9 2e 10 00 00                  	jmp 0x804ab2b <func_1+0x1314>
0x8049afd:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b00:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049b03:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049b07:   0f 95 c0                        	setne al
0x8049b0a:   0f b6 d0                        	movzx edx, al
0x8049b0d:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049b11:   39 c2                           	cmp edx, eax
0x8049b13:   0f 8c 4f 0d 00 00               	jl 0x804a868 <func_1+0x1051>
0x8049b19:   66 c7 85 32 ff ff ff 0f a1      	mov word ptr [ebp - 0xce], 0xa10f
0x8049b22:   c7 45 b0 07 00 00 00            	mov dword ptr [ebp - 0x50], 7
0x8049b29:   c7 45 ac 09 00 00 00            	mov dword ptr [ebp - 0x54], 9
0x8049b30:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049b37:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049b3e:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x8049b42:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049b46:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049b4c:   0f 97 c0                        	seta al
0x8049b4f:   0f b6 c0                        	movzx eax, al
0x8049b52:   31 d0                           	xor eax, edx
0x8049b54:   33 45 e8                        	xor eax, dword ptr [ebp - 0x18]
0x8049b57:   89 c2                           	mov edx, eax
0x8049b59:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b5c:   31 d0                           	xor eax, edx
0x8049b5e:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049b61:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049b65:   0f 84 f6 00 00 00               	je 0x8049c61 <func_1+0x44a>
0x8049b6b:   c6 85 13 ff ff ff fc            	mov byte ptr [ebp - 0xed], 0xfc
0x8049b72:   c7 85 0c ff ff ff 0d 45 fe 6e   	mov dword ptr [ebp - 0xf4], 0x6efe450d
0x8049b7c:   c7 85 08 ff ff ff 36 31 f7 86   	mov dword ptr [ebp - 0xf8], 0x86f73136
0x8049b86:   c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x8049b8a:   eb 14                           	jmp 0x8049ba0 <func_1+0x389>
0x8049b8c:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049b90:   83 e8 01                        	sub eax, 1
0x8049b93:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049b96:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049b9a:   83 c0 01                        	add eax, 1
0x8049b9d:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049ba0:   80 7d f3 10                     	cmp byte ptr [ebp - 0xd], 0x10
0x8049ba4:   7f e6                           	jg 0x8049b8c <func_1+0x375>
0x8049ba6:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x8049bad:   eb 56                           	jmp 0x8049c05 <func_1+0x3ee>
0x8049baf:   c7 85 04 ff ff ff 4b f7 ff 9a   	mov dword ptr [ebp - 0xfc], 0x9afff74b
0x8049bb9:   c7 85 00 ff ff ff b8 be 22 ab   	mov dword ptr [ebp - 0x100], 0xab22beb8
0x8049bc3:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x8049bcd:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x8049bd4:   75 14                           	jne 0x8049bea <func_1+0x3d3>
0x8049bd6:   0f bf 85 32 ff ff ff            	movsx eax, word ptr [ebp - 0xce]
0x8049bdd:   31 45 b8                        	xor dword ptr [ebp - 0x48], eax
0x8049be0:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049be3:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x8049be6:   80 7d f3 01                     	cmp byte ptr [ebp - 0xd], 1
0x8049bea:   c7 85 6c ff ff ff 38 06 02 00   	mov dword ptr [ebp - 0x94], 0x20638
0x8049bf4:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bf7:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x8049bfa:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049bfd:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x8049c01:   83 45 bc 04                     	add dword ptr [ebp - 0x44], 4
0x8049c05:   83 7d bc 1c                     	cmp dword ptr [ebp - 0x44], 0x1c
0x8049c09:   7f a4                           	jg 0x8049baf <func_1+0x398>
0x8049c0b:   83 7d e0 01                     	cmp dword ptr [ebp - 0x20], 1
0x8049c0f:   0f 95 c0                        	setne al
0x8049c12:   0f b6 c0                        	movzx eax, al
0x8049c15:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049c18:   0f 9c c0                        	setl al
0x8049c1b:   0f b6 c0                        	movzx eax, al
0x8049c1e:   0f bf b5 32 ff ff ff            	movsx esi, word ptr [ebp - 0xce]
0x8049c25:   ba 00 00 00 00                  	mov edx, 0
0x8049c2a:   f7 f6                           	div esi
0x8049c2c:   89 c2                           	mov edx, eax
0x8049c2e:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049c31:   31 d0                           	xor eax, edx
0x8049c33:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049c36:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049c3a:   0f 95 c0                        	setne al
0x8049c3d:   0f b6 c0                        	movzx eax, al
0x8049c40:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c43:   0f 95 c0                        	setne al
0x8049c46:   0f b6 c0                        	movzx eax, al
0x8049c49:   0f b6 95 13 ff ff ff            	movzx edx, byte ptr [ebp - 0xed]
0x8049c50:   0f b6 ca                        	movzx ecx, dl
0x8049c53:   99                              	cdq 
0x8049c54:   f7 f9                           	idiv ecx
0x8049c56:   89 95 6c ff ff ff               	mov dword ptr [ebp - 0x94], edx
0x8049c5c:   e9 ae 02 00 00                  	jmp 0x8049f0f <func_1+0x6f8>
0x8049c61:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x8049c6b:   66 c7 45 dc f7 ff               	mov word ptr [ebp - 0x24], 0xfff7
0x8049c71:   e9 8e 02 00 00                  	jmp 0x8049f04 <func_1+0x6ed>
0x8049c76:   c7 85 28 ff ff ff 8b da c4 c0   	mov dword ptr [ebp - 0xd8], 0xc0c4da8b
0x8049c80:   c7 45 a0 d0 18 d3 5c            	mov dword ptr [ebp - 0x60], 0x5cd318d0
0x8049c87:   66 81 7d e6 99 14               	cmp word ptr [ebp - 0x1a], 0x1499
0x8049c8d:   0f 97 c0                        	seta al
0x8049c90:   0f b6 c0                        	movzx eax, al
0x8049c93:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c96:   c7 45 a8 05 00 00 00            	mov dword ptr [ebp - 0x58], 5
0x8049c9d:   c7 85 24 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xdc], 0
0x8049ca7:   66 c7 85 22 ff ff ff bd 0f      	mov word ptr [ebp - 0xde], 0xfbd
0x8049cb0:   c7 85 1c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe4], 1
0x8049cba:   66 c7 85 1a ff ff ff 6c 2f      	mov word ptr [ebp - 0xe6], 0x2f6c
0x8049cc3:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049cc7:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049cca:   7e 07                           	jle 0x8049cd3 <func_1+0x4bc>
0x8049ccc:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x8049cd1:   74 07                           	je 0x8049cda <func_1+0x4c3>
0x8049cd3:   b8 01 00 00 00                  	mov eax, 1
0x8049cd8:   eb 05                           	jmp 0x8049cdf <func_1+0x4c8>
0x8049cda:   b8 00 00 00 00                  	mov eax, 0
0x8049cdf:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049ce2:   0f b7 8d 22 ff ff ff            	movzx ecx, word ptr [ebp - 0xde]
0x8049ce9:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049ced:   25 09 7e 00 00                  	and eax, 0x7e09
0x8049cf2:   8b 75 ec                        	mov esi, dword ptr [ebp - 0x14]
0x8049cf5:   ba 00 00 00 00                  	mov edx, 0
0x8049cfa:   f7 f6                           	div esi
0x8049cfc:   85 c0                           	test eax, eax
0x8049cfe:   0f 95 c0                        	setne al
0x8049d01:   0f b6 d0                        	movzx edx, al
0x8049d04:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049d08:   0f b6 c0                        	movzx eax, al
0x8049d0b:   0f af d0                        	imul edx, eax
0x8049d0e:   0f b7 85 22 ff ff ff            	movzx eax, word ptr [ebp - 0xde]
0x8049d15:   09 d0                           	or eax, edx
0x8049d17:   89 c3                           	mov ebx, eax
0x8049d19:   89 c8                           	mov eax, ecx
0x8049d1b:   ba 00 00 00 00                  	mov edx, 0
0x8049d20:   f7 f3                           	div ebx
0x8049d22:   89 d0                           	mov eax, edx
0x8049d24:   85 c0                           	test eax, eax
0x8049d26:   75 08                           	jne 0x8049d30 <func_1+0x519>
0x8049d28:   66 83 bd 22 ff ff ff 00         	cmp word ptr [ebp - 0xde], 0
0x8049d30:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049d36:   33 85 24 ff ff ff               	xor eax, dword ptr [ebp - 0xdc]
0x8049d3c:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049d42:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049d48:   0f be c0                        	movsx eax, al
0x8049d4b:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x8049d4f:   99                              	cdq 
0x8049d50:   f7 fe                           	idiv esi
0x8049d52:   0f b7 c0                        	movzx eax, ax
0x8049d55:   69 c0 6b 1e 00 00               	imul eax, eax, 0x1e6b
0x8049d5b:   31 45 bc                        	xor dword ptr [ebp - 0x44], eax
0x8049d5e:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049d65:   eb 0d                           	jmp 0x8049d74 <func_1+0x55d>
0x8049d67:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x8049d6d:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049d70:   83 45 b8 09                     	add dword ptr [ebp - 0x48], 9
0x8049d74:   83 7d b8 0d                     	cmp dword ptr [ebp - 0x48], 0xd
0x8049d78:   74 ed                           	je 0x8049d67 <func_1+0x550>
0x8049d7a:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049d7e:   89 c2                           	mov edx, eax
0x8049d80:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049d86:   29 c2                           	sub edx, eax
0x8049d88:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049d8c:   09 d0                           	or eax, edx
0x8049d8e:   0f be c0                        	movsx eax, al
0x8049d91:   0f be 4d d7                     	movsx ecx, byte ptr [ebp - 0x29]
0x8049d95:   99                              	cdq 
0x8049d96:   f7 f9                           	idiv ecx
0x8049d98:   89 d0                           	mov eax, edx
0x8049d9a:   3d 9c 00 00 00                  	cmp eax, 0x9c
0x8049d9f:   7e 07                           	jle 0x8049da8 <func_1+0x591>
0x8049da1:   b8 c3 ce ff ff                  	mov eax, 0xffffcec3
0x8049da6:   eb 05                           	jmp 0x8049dad <func_1+0x596>
0x8049da8:   b8 00 00 00 00                  	mov eax, 0
0x8049dad:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x8049db0:   0f 94 c0                        	sete al
0x8049db3:   0f b6 c0                        	movzx eax, al
0x8049db6:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x8049dbc:   0f 92 c0                        	setb al
0x8049dbf:   0f b6 d0                        	movzx edx, al
0x8049dc2:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049dc6:   0f af c2                        	imul eax, edx
0x8049dc9:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x8049dcf:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049dd5:   89 c2                           	mov edx, eax
0x8049dd7:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049ddb:   21 d0                           	and eax, edx
0x8049ddd:   0f be c0                        	movsx eax, al
0x8049de0:   0f b7 95 1a ff ff ff            	movzx edx, word ptr [ebp - 0xe6]
0x8049de7:   0f be f2                        	movsx esi, dl
0x8049dea:   99                              	cdq 
0x8049deb:   f7 fe                           	idiv esi
0x8049ded:   23 45 bc                        	and eax, dword ptr [ebp - 0x44]
0x8049df0:   89 c2                           	mov edx, eax
0x8049df2:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049df6:   39 c2                           	cmp edx, eax
0x8049df8:   0f 9d c0                        	setge al
0x8049dfb:   0f b6 d0                        	movzx edx, al
0x8049dfe:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049e02:   39 c2                           	cmp edx, eax
0x8049e04:   7c 04                           	jl 0x8049e0a <func_1+0x5f3>
0x8049e06:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x8049e0a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e0d:   0b 85 28 ff ff ff               	or eax, dword ptr [ebp - 0xd8]
0x8049e13:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049e16:   c7 45 a0 f1 ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffff1
0x8049e1d:   e9 cd 00 00 00                  	jmp 0x8049eef <func_1+0x6d8>
0x8049e22:   c6 85 19 ff ff ff 4d            	mov byte ptr [ebp - 0xe7], 0x4d
0x8049e29:   c7 85 14 ff ff ff 39 4b 36 a0   	mov dword ptr [ebp - 0xec], 0xa0364b39
0x8049e33:   c7 45 d0 06 00 00 00            	mov dword ptr [ebp - 0x30], 6
0x8049e3a:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049e3e:   ba 06 00 00 00                  	mov edx, 6
0x8049e43:   89 c1                           	mov ecx, eax
0x8049e45:   d3 fa                           	sar edx, cl
0x8049e47:   0f b6 85 19 ff ff ff            	movzx eax, byte ptr [ebp - 0xe7]
0x8049e4e:   39 c2                           	cmp edx, eax
0x8049e50:   0f 94 c0                        	sete al
0x8049e53:   0f b6 c0                        	movzx eax, al
0x8049e56:   23 85 6c ff ff ff               	and eax, dword ptr [ebp - 0x94]
0x8049e5c:   85 c0                           	test eax, eax
0x8049e5e:   74 10                           	je 0x8049e70 <func_1+0x659>
0x8049e60:   83 bd 14 ff ff ff 00            	cmp dword ptr [ebp - 0xec], 0
0x8049e67:   74 07                           	je 0x8049e70 <func_1+0x659>
0x8049e69:   b8 01 00 00 00                  	mov eax, 1
0x8049e6e:   eb 05                           	jmp 0x8049e75 <func_1+0x65e>
0x8049e70:   b8 00 00 00 00                  	mov eax, 0
0x8049e75:   3d 40 56 f8 05                  	cmp eax, 0x5f85640
0x8049e7a:   74 07                           	je 0x8049e83 <func_1+0x66c>
0x8049e7c:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049e83:   83 bd 2c ff ff ff 01            	cmp dword ptr [ebp - 0xd4], 1
0x8049e8a:   76 07                           	jbe 0x8049e93 <func_1+0x67c>
0x8049e8c:   b8 e3 00 00 00                  	mov eax, 0xe3
0x8049e91:   eb 05                           	jmp 0x8049e98 <func_1+0x681>
0x8049e93:   b8 e2 00 00 00                  	mov eax, 0xe2
0x8049e98:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x8049e9b:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049ea1:   98                              	cwde 
0x8049ea2:   f7 d0                           	not eax
0x8049ea4:   89 c2                           	mov edx, eax
0x8049ea6:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049eaa:   39 c2                           	cmp edx, eax
0x8049eac:   0f 9d c0                        	setge al
0x8049eaf:   0f b6 d0                        	movzx edx, al
0x8049eb2:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049eb6:   0f b6 c0                        	movzx eax, al
0x8049eb9:   89 c1                           	mov ecx, eax
0x8049ebb:   d3 e2                           	shl edx, cl
0x8049ebd:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049ec1:   39 c2                           	cmp edx, eax
0x8049ec3:   0f 9e c0                        	setle al
0x8049ec6:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049ec9:   66 0f be 55 f3                  	movsx dx, byte ptr [ebp - 0xd]
0x8049ece:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049ed4:   66 98                           	cbw 
0x8049ed6:   0f af c2                        	imul eax, edx
0x8049ed9:   0f b7 d0                        	movzx edx, ax
0x8049edc:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049edf:   0f b7 c0                        	movzx eax, ax
0x8049ee2:   89 c1                           	mov ecx, eax
0x8049ee4:   d3 fa                           	sar edx, cl
0x8049ee6:   89 d0                           	mov eax, edx
0x8049ee8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049eeb:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x8049eef:   83 7d a0 03                     	cmp dword ptr [ebp - 0x60], 3
0x8049ef3:   0f 85 29 ff ff ff               	jne 0x8049e22 <func_1+0x60b>
0x8049ef9:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049efd:   83 c0 01                        	add eax, 1
0x8049f00:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049f04:   66 83 7d dc fa                  	cmp word ptr [ebp - 0x24], -6
0x8049f09:   0f 8c 67 fd ff ff               	jl 0x8049c76 <func_1+0x45f>
0x8049f0f:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049f16:   eb 57                           	jmp 0x8049f6f <func_1+0x758>
0x8049f18:   c7 85 bc fe ff ff ec 0d 9d 7d   	mov dword ptr [ebp - 0x144], 0x7d9d0dec
0x8049f22:   c7 85 b8 fe ff ff 72 aa 76 c9   	mov dword ptr [ebp - 0x148], 0xc976aa72
0x8049f2c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049f2f:   89 c2                           	mov edx, eax
0x8049f31:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x8049f35:   29 c2                           	sub edx, eax
0x8049f37:   89 d0                           	mov eax, edx
0x8049f39:   0f be c0                        	movsx eax, al
0x8049f3c:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x8049f40:   99                              	cdq 
0x8049f41:   f7 fe                           	idiv esi
0x8049f43:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x8049f49:   76 07                           	jbe 0x8049f52 <func_1+0x73b>
0x8049f4b:   b8 05 00 00 00                  	mov eax, 5
0x8049f50:   eb 05                           	jmp 0x8049f57 <func_1+0x740>
0x8049f52:   b8 04 00 00 00                  	mov eax, 4
0x8049f57:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049f5a:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049f5f:   75 09                           	jne 0x8049f6a <func_1+0x753>
0x8049f61:   c7 45 d0 ff ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffff
0x8049f68:   eb 01                           	jmp 0x8049f6b <func_1+0x754>
0x8049f6a:   90                              	nop 
0x8049f6b:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x8049f6f:   83 7d e8 15                     	cmp dword ptr [ebp - 0x18], 0x15
0x8049f73:   76 a3                           	jbe 0x8049f18 <func_1+0x701>
0x8049f75:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049f7b:   66 2d c2 6f                     	sub ax, 0x6fc2
0x8049f7f:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049f83:   0f bf 55 dc                     	movsx edx, word ptr [ebp - 0x24]
0x8049f87:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049f8d:   0f b6 c8                        	movzx ecx, al
0x8049f90:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049f94:   75 06                           	jne 0x8049f9c <func_1+0x785>
0x8049f96:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049f9a:   74 07                           	je 0x8049fa3 <func_1+0x78c>
0x8049f9c:   b8 01 00 00 00                  	mov eax, 1
0x8049fa1:   eb 05                           	jmp 0x8049fa8 <func_1+0x791>
0x8049fa3:   b8 00 00 00 00                  	mov eax, 0
0x8049fa8:   0f b6 c0                        	movzx eax, al
0x8049fab:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x8049fae:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049fb2:   74 0d                           	je 0x8049fc1 <func_1+0x7aa>
0x8049fb4:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049fb8:   74 07                           	je 0x8049fc1 <func_1+0x7aa>
0x8049fba:   b8 01 00 00 00                  	mov eax, 1
0x8049fbf:   eb 05                           	jmp 0x8049fc6 <func_1+0x7af>
0x8049fc1:   b8 00 00 00 00                  	mov eax, 0
0x8049fc6:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049fcc:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049fd2:   0f b6 c0                        	movzx eax, al
0x8049fd5:   29 c1                           	sub ecx, eax
0x8049fd7:   89 c8                           	mov eax, ecx
0x8049fd9:   39 c2                           	cmp edx, eax
0x8049fdb:   0f 9c c0                        	setl al
0x8049fde:   0f b6 c0                        	movzx eax, al
0x8049fe1:   0b 45 b8                        	or eax, dword ptr [ebp - 0x48]
0x8049fe4:   85 c0                           	test eax, eax
0x8049fe6:   74 3b                           	je 0x804a023 <func_1+0x80c>
0x8049fe8:   c7 85 e8 fe ff ff 97 41 12 31   	mov dword ptr [ebp - 0x118], 0x31124197
0x8049ff2:   66 c7 85 e6 fe ff ff fe ff      	mov word ptr [ebp - 0x11a], 0xfffe
0x8049ffb:   66 c7 45 e6 da d6               	mov word ptr [ebp - 0x1a], 0xd6da
0x804a001:   b8 00 00 00 00                  	mov eax, 0
0x804a006:   89 c2                           	mov edx, eax
0x804a008:   0f b7 85 e6 fe ff ff            	movzx eax, word ptr [ebp - 0x11a]
0x804a00f:   09 d0                           	or eax, edx
0x804a011:   66 89 85 e6 fe ff ff            	mov word ptr [ebp - 0x11a], ax
0x804a018:   66 c7 45 e6 fc ff               	mov word ptr [ebp - 0x1a], 0xfffc
0x804a01e:   e9 35 08 00 00                  	jmp 0x804a858 <func_1+0x1041>
0x804a023:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x804a02d:   c7 85 f4 fe ff ff 90 56 1b 19   	mov dword ptr [ebp - 0x10c], 0x191b5690
0x804a037:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a03a:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a03d:   c6 45 e5 00                     	mov byte ptr [ebp - 0x1b], 0
0x804a041:   e9 a6 00 00 00                  	jmp 0x804a0ec <func_1+0x8d5>
0x804a046:   c6 85 f3 fe ff ff d7            	mov byte ptr [ebp - 0x10d], 0xd7
0x804a04d:   c7 85 ec fe ff ff 70 8c c6 d0   	mov dword ptr [ebp - 0x114], 0xd0c68c70
0x804a057:   0f b7 45 8a                     	movzx eax, word ptr [ebp - 0x76]
0x804a05b:   c0 f8 04                        	sar al, 4
0x804a05e:   0f be c0                        	movsx eax, al
0x804a061:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x804a067:   0f 93 c0                        	setae al
0x804a06a:   0f b6 c0                        	movzx eax, al
0x804a06d:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x804a070:   29 d0                           	sub eax, edx
0x804a072:   0f b7 c0                        	movzx eax, ax
0x804a075:   c1 e0 05                        	shl eax, 5
0x804a078:   30 85 f3 fe ff ff               	xor byte ptr [ebp - 0x10d], al
0x804a07e:   0f b6 85 f3 fe ff ff            	movzx eax, byte ptr [ebp - 0x10d]
0x804a085:   83 f0 fe                        	xor eax, 0xfffffffe
0x804a088:   66 98                           	cbw 
0x804a08a:   0f b7 c0                        	movzx eax, ax
0x804a08d:   2d 95 31 00 00                  	sub eax, 0x3195
0x804a092:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a098:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a09c:   83 e8 01                        	sub eax, 1
0x804a09f:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a0a2:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a0a6:   0f b7 c0                        	movzx eax, ax
0x804a0a9:   c1 e0 0b                        	shl eax, 0xb
0x804a0ac:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a0af:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x804a0b3:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a0b6:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a0b9:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a0bd:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x804a0c4:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a0c7:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a0ca:   01 d0                           	add eax, edx
0x804a0cc:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a0cf:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a0d3:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x804a0d9:   0f 9c c0                        	setl al
0x804a0dc:   0f b6 c0                        	movzx eax, al
0x804a0df:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x804a0e2:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x804a0e6:   83 e8 01                        	sub eax, 1
0x804a0e9:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x804a0ec:   80 7d e5 f4                     	cmp byte ptr [ebp - 0x1b], 0xf4
0x804a0f0:   0f 8d 50 ff ff ff               	jge 0x804a046 <func_1+0x82f>
0x804a0f6:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804a0fd:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a101:   0f b6 4d c5                     	movzx ecx, byte ptr [ebp - 0x3b]
0x804a105:   0f b6 75 c6                     	movzx esi, byte ptr [ebp - 0x3a]
0x804a109:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a10d:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a113:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x804a117:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a11d:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a121:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a127:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x804a12b:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a131:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804a135:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a13b:   0f bf 5d dc                     	movsx ebx, word ptr [ebp - 0x24]
0x804a13f:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a145:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a149:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a14f:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x804a153:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a159:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a15d:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a163:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x804a167:   0f b7 5d 92                     	movzx ebx, word ptr [ebp - 0x6e]
0x804a16b:   50                              	push eax
0x804a16c:   52                              	push edx
0x804a16d:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a173:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a179:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a17c:   51                              	push ecx
0x804a17d:   56                              	push esi
0x804a17e:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a184:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a18a:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a190:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a193:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a196:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a19c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a19f:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a1a5:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a1ab:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a1b1:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a1b4:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a1ba:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a1c0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a1c3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a1c6:   57                              	push edi
0x804a1c7:   53                              	push ebx
0x804a1c8:   e8 87 f4 ff ff                  	call 0x8049654 <set_var>
0x804a1cd:   83 c4 60                        	add esp, 0x60
0x804a1d0:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a1d3:   e9 53 09 00 00                  	jmp 0x804ab2b <func_1+0x1314>
0x804a1d8:   66 c7 45 9e 03 00               	mov word ptr [ebp - 0x62], 3
0x804a1de:   c7 45 98 f7 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff7
0x804a1e5:   66 c7 85 e4 fe ff ff 01 00      	mov word ptr [ebp - 0x11c], 1
0x804a1ee:   c7 85 e0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x120], 0xffffffff
0x804a1f8:   66 c7 85 de fe ff ff e0 63      	mov word ptr [ebp - 0x122], 0x63e0
0x804a201:   66 c7 45 c8 fa ff               	mov word ptr [ebp - 0x38], 0xfffa
0x804a207:   e9 89 04 00 00                  	jmp 0x804a695 <func_1+0xe7e>
0x804a20c:   66 c7 85 d2 fe ff ff 00 00      	mov word ptr [ebp - 0x12e], 0
0x804a215:   c7 85 cc fe ff ff f0 b4 28 38   	mov dword ptr [ebp - 0x134], 0x3828b4f0
0x804a21f:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a222:   83 c0 01                        	add eax, 1
0x804a225:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a228:   c7 45 e0 00 68 2e 00            	mov dword ptr [ebp - 0x20], 0x2e6800
0x804a22f:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a235:   0f be d0                        	movsx edx, al
0x804a238:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a23c:   21 45 a8                        	and dword ptr [ebp - 0x58], eax
0x804a23f:   b8 01 00 00 00                  	mov eax, 1
0x804a244:   83 e8 3a                        	sub eax, 0x3a
0x804a247:   0f be c0                        	movsx eax, al
0x804a24a:   89 c1                           	mov ecx, eax
0x804a24c:   d3 e2                           	shl edx, cl
0x804a24e:   89 d0                           	mov eax, edx
0x804a250:   0f be d0                        	movsx edx, al
0x804a253:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a256:   0f be c0                        	movsx eax, al
0x804a259:   89 c1                           	mov ecx, eax
0x804a25b:   d3 e2                           	shl edx, cl
0x804a25d:   89 d0                           	mov eax, edx
0x804a25f:   85 c0                           	test eax, eax
0x804a261:   0f 84 98 00 00 00               	je 0x804a2ff <func_1+0xae8>
0x804a267:   c6 45 cb f6                     	mov byte ptr [ebp - 0x35], 0xf6
0x804a26b:   eb 08                           	jmp 0x804a275 <func_1+0xa5e>
0x804a26d:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804a271:   80 45 cb 01                     	add byte ptr [ebp - 0x35], 1
0x804a275:   80 7d cb 04                     	cmp byte ptr [ebp - 0x35], 4
0x804a279:   76 f2                           	jbe 0x804a26d <func_1+0xa56>
0x804a27b:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a27f:   74 0a                           	je 0x804a28b <func_1+0xa74>
0x804a281:   66 83 45 c8 01                  	add word ptr [ebp - 0x38], 1
0x804a286:   e9 0a 04 00 00                  	jmp 0x804a695 <func_1+0xe7e>
0x804a28b:   c7 45 b0 fe ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffffe
0x804a292:   eb 63                           	jmp 0x804a2f7 <func_1+0xae0>
0x804a294:   66 c7 85 c8 fe ff ff 16 91      	mov word ptr [ebp - 0x138], 0x9116
0x804a29d:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a2a1:   83 c0 01                        	add eax, 1
0x804a2a4:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a2a7:   b8 07 00 00 00                  	mov eax, 7
0x804a2ac:   89 c2                           	mov edx, eax
0x804a2ae:   0f b7 85 c8 fe ff ff            	movzx eax, word ptr [ebp - 0x138]
0x804a2b5:   31 d0                           	xor eax, edx
0x804a2b7:   66 89 85 c8 fe ff ff            	mov word ptr [ebp - 0x138], ax
0x804a2be:   0f b7 85 c8 fe ff ff            	movzx eax, word ptr [ebp - 0x138]
0x804a2c5:   66 0f be d0                     	movsx dx, al
0x804a2c9:   0f b7 85 d2 fe ff ff            	movzx eax, word ptr [ebp - 0x12e]
0x804a2d0:   66 98                           	cbw 
0x804a2d2:   29 c2                           	sub edx, eax
0x804a2d4:   89 d0                           	mov eax, edx
0x804a2d6:   0f b7 d0                        	movzx edx, ax
0x804a2d9:   66 0f be 45 d7                  	movsx ax, byte ptr [ebp - 0x29]
0x804a2de:   0f b7 c0                        	movzx eax, ax
0x804a2e1:   89 c1                           	mov ecx, eax
0x804a2e3:   d3 e2                           	shl edx, cl
0x804a2e5:   89 d0                           	mov eax, edx
0x804a2e7:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x804a2eb:   80 45 c7 01                     	add byte ptr [ebp - 0x39], 1
0x804a2ef:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a2f3:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a2f7:   83 7d b0 13                     	cmp dword ptr [ebp - 0x50], 0x13
0x804a2fb:   75 97                           	jne 0x804a294 <func_1+0xa7d>
0x804a2fd:   eb 44                           	jmp 0x804a343 <func_1+0xb2c>
0x804a2ff:   66 c7 85 ca fe ff ff 6b 6f      	mov word ptr [ebp - 0x136], 0x6f6b
0x804a308:   66 81 bd d2 fe ff ff ff 00      	cmp word ptr [ebp - 0x12e], 0xff
0x804a311:   75 0c                           	jne 0x804a31f <func_1+0xb08>
0x804a313:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a316:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x804a319:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a31d:   74 07                           	je 0x804a326 <func_1+0xb0f>
0x804a31f:   b8 01 00 00 00                  	mov eax, 1
0x804a324:   eb 05                           	jmp 0x804a32b <func_1+0xb14>
0x804a326:   b8 00 00 00 00                  	mov eax, 0
0x804a32b:   0f bf 8d ca fe ff ff            	movsx ecx, word ptr [ebp - 0x136]
0x804a332:   99                              	cdq 
0x804a333:   f7 f9                           	idiv ecx
0x804a335:   89 d0                           	mov eax, edx
0x804a337:   83 f8 fe                        	cmp eax, -2
0x804a33a:   0f 9d c0                        	setge al
0x804a33d:   0f b6 c0                        	movzx eax, al
0x804a340:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a343:   66 83 bd d2 fe ff ff 00         	cmp word ptr [ebp - 0x12e], 0
0x804a34b:   75 1a                           	jne 0x804a367 <func_1+0xb50>
0x804a34d:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a351:   8d 50 ff                        	lea edx, [eax - 1]
0x804a354:   88 55 cb                        	mov byte ptr [ebp - 0x35], dl
0x804a357:   0f b6 c0                        	movzx eax, al
0x804a35a:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x804a35d:   f7 d2                           	not edx
0x804a35f:   39 d0                           	cmp eax, edx
0x804a361:   0f 8f 48 02 00 00               	jg 0x804a5af <func_1+0xd98>
0x804a367:   c7 85 c4 fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x13c], 6
0x804a371:   c6 45 d7 e5                     	mov byte ptr [ebp - 0x29], 0xe5
0x804a375:   eb 27                           	jmp 0x804a39e <func_1+0xb87>
0x804a377:   81 65 98 58 01 00 00            	and dword ptr [ebp - 0x68], 0x158
0x804a37e:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a381:   f6 65 cb                        	mul byte ptr [ebp - 0x35]
0x804a384:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x804a387:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x804a38b:   c0 f8 06                        	sar al, 6
0x804a38e:   0f be c0                        	movsx eax, al
0x804a391:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a394:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a398:   83 c0 02                        	add eax, 2
0x804a39b:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804a39e:   80 7d d7 18                     	cmp byte ptr [ebp - 0x29], 0x18
0x804a3a2:   7e d3                           	jle 0x804a377 <func_1+0xb60>
0x804a3a4:   c6 45 b7 00                     	mov byte ptr [ebp - 0x49], 0
0x804a3a8:   e9 c4 00 00 00                  	jmp 0x804a471 <func_1+0xc5a>
0x804a3ad:   c7 85 c0 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x140], 8
0x804a3b7:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a3ba:   89 c2                           	mov edx, eax
0x804a3bc:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a3bf:   01 d0                           	add eax, edx
0x804a3c1:   83 c0 01                        	add eax, 1
0x804a3c4:   30 45 d7                        	xor byte ptr [ebp - 0x29], al
0x804a3c7:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a3cb:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a3d1:   0f b7 95 d2 fe ff ff            	movzx edx, word ptr [ebp - 0x12e]
0x804a3d8:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a3db:   31 d0                           	xor eax, edx
0x804a3dd:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3e0:   c7 85 cc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x134], 0
0x804a3ea:   66 83 7d 92 01                  	cmp word ptr [ebp - 0x6e], 1
0x804a3ef:   0f 97 c0                        	seta al
0x804a3f2:   0f b6 d0                        	movzx edx, al
0x804a3f5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a3f8:   0f b6 c0                        	movzx eax, al
0x804a3fb:   89 c1                           	mov ecx, eax
0x804a3fd:   d3 fa                           	sar edx, cl
0x804a3ff:   89 d0                           	mov eax, edx
0x804a401:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a404:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804a40a:   0b 45 d8                        	or eax, dword ptr [ebp - 0x28]
0x804a40d:   85 c0                           	test eax, eax
0x804a40f:   75 08                           	jne 0x804a419 <func_1+0xc02>
0x804a411:   66 83 bd d2 fe ff ff 00         	cmp word ptr [ebp - 0x12e], 0
0x804a419:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a41d:   0f be c0                        	movsx eax, al
0x804a420:   ba fd ff ff ff                  	mov edx, 0xfffffffd
0x804a425:   89 c1                           	mov ecx, eax
0x804a427:   d3 e2                           	shl edx, cl
0x804a429:   89 d0                           	mov eax, edx
0x804a42b:   85 c0                           	test eax, eax
0x804a42d:   0f 94 c0                        	sete al
0x804a430:   0f b6 c0                        	movzx eax, al
0x804a433:   f7 d0                           	not eax
0x804a435:   89 c2                           	mov edx, eax
0x804a437:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a43b:   21 d0                           	and eax, edx
0x804a43d:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a440:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a444:   0f be c0                        	movsx eax, al
0x804a447:   ba fd ff ff ff                  	mov edx, 0xfffffffd
0x804a44c:   89 c1                           	mov ecx, eax
0x804a44e:   d3 fa                           	sar edx, cl
0x804a450:   89 d0                           	mov eax, edx
0x804a452:   83 f8 f6                        	cmp eax, -0xa
0x804a455:   0f 95 c0                        	setne al
0x804a458:   0f b6 c0                        	movzx eax, al
0x804a45b:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a45e:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x804a465:   75 16                           	jne 0x804a47d <func_1+0xc66>
0x804a467:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a46b:   83 c0 01                        	add eax, 1
0x804a46e:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a471:   80 7d b7 1c                     	cmp byte ptr [ebp - 0x49], 0x1c
0x804a475:   0f 86 32 ff ff ff               	jbe 0x804a3ad <func_1+0xb96>
0x804a47b:   eb 01                           	jmp 0x804a47e <func_1+0xc67>
0x804a47d:   90                              	nop 
0x804a47e:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a484:   89 c2                           	mov edx, eax
0x804a486:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a489:   31 d0                           	xor eax, edx
0x804a48b:   0f b6 c0                        	movzx eax, al
0x804a48e:   ba 01 00 00 00                  	mov edx, 1
0x804a493:   29 c2                           	sub edx, eax
0x804a495:   89 d0                           	mov eax, edx
0x804a497:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x804a49d:   0f 9e c0                        	setle al
0x804a4a0:   0f b6 c0                        	movzx eax, al
0x804a4a3:   0f b7 95 d2 fe ff ff            	movzx edx, word ptr [ebp - 0x12e]
0x804a4aa:   0f bf f2                        	movsx esi, dx
0x804a4ad:   99                              	cdq 
0x804a4ae:   f7 fe                           	idiv esi
0x804a4b0:   0f be d0                        	movsx edx, al
0x804a4b3:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a4b9:   0f be c0                        	movsx eax, al
0x804a4bc:   89 c1                           	mov ecx, eax
0x804a4be:   d3 fa                           	sar edx, cl
0x804a4c0:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a4c4:   09 d0                           	or eax, edx
0x804a4c6:   23 45 d8                        	and eax, dword ptr [ebp - 0x28]
0x804a4c9:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a4cc:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804a4d3:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a4d7:   0f b6 4d c5                     	movzx ecx, byte ptr [ebp - 0x3b]
0x804a4db:   0f b6 75 c6                     	movzx esi, byte ptr [ebp - 0x3a]
0x804a4df:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a4e3:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a4e9:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x804a4ed:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a4f3:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a4f7:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a4fd:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x804a501:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a507:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804a50b:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a511:   0f bf 5d dc                     	movsx ebx, word ptr [ebp - 0x24]
0x804a515:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a51b:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a51f:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a525:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x804a529:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a52f:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a533:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a539:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x804a53d:   0f b7 5d 92                     	movzx ebx, word ptr [ebp - 0x6e]
0x804a541:   50                              	push eax
0x804a542:   52                              	push edx
0x804a543:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a549:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a54f:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a552:   51                              	push ecx
0x804a553:   56                              	push esi
0x804a554:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a55a:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a560:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a566:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a569:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a56c:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a572:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a575:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a57b:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a581:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a587:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a58a:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a590:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a596:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a599:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a59c:   57                              	push edi
0x804a59d:   53                              	push ebx
0x804a59e:   e8 b1 f0 ff ff                  	call 0x8049654 <set_var>
0x804a5a3:   83 c4 60                        	add esp, 0x60
0x804a5a6:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a5aa:   e9 7c 05 00 00                  	jmp 0x804ab2b <func_1+0x1314>
0x804a5af:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804a5b6:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a5ba:   0f b6 4d c5                     	movzx ecx, byte ptr [ebp - 0x3b]
0x804a5be:   0f b6 75 c6                     	movzx esi, byte ptr [ebp - 0x3a]
0x804a5c2:   0f b6 7d c7                     	movzx edi, byte ptr [ebp - 0x39]
0x804a5c6:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a5cc:   0f b7 5d c8                     	movzx ebx, word ptr [ebp - 0x38]
0x804a5d0:   89 9d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ebx
0x804a5d6:   0f b6 7d cb                     	movzx edi, byte ptr [ebp - 0x35]
0x804a5da:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a5e0:   0f be 5d d7                     	movsx ebx, byte ptr [ebp - 0x29]
0x804a5e4:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a5ea:   0f bf 7d 8a                     	movsx edi, word ptr [ebp - 0x76]
0x804a5ee:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a5f4:   0f bf 5d dc                     	movsx ebx, word ptr [ebp - 0x24]
0x804a5f8:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a5fe:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a602:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a608:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x804a60c:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a612:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a616:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a61c:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x804a620:   0f b7 5d 92                     	movzx ebx, word ptr [ebp - 0x6e]
0x804a624:   50                              	push eax
0x804a625:   52                              	push edx
0x804a626:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a62c:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a632:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a635:   51                              	push ecx
0x804a636:   56                              	push esi
0x804a637:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a63d:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a643:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a649:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a64c:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a64f:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a655:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a658:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a65e:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a664:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a66a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a66d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a673:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a679:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a67c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a67f:   57                              	push edi
0x804a680:   53                              	push ebx
0x804a681:   e8 ce ef ff ff                  	call 0x8049654 <set_var>
0x804a686:   83 c4 60                        	add esp, 0x60
0x804a689:   0f bf 85 32 ff ff ff            	movsx eax, word ptr [ebp - 0xce]
0x804a690:   e9 96 04 00 00                  	jmp 0x804ab2b <func_1+0x1314>
0x804a695:   66 83 7d c8 1e                  	cmp word ptr [ebp - 0x38], 0x1e
0x804a69a:   0f 86 6c fb ff ff               	jbe 0x804a20c <func_1+0x9f5>
0x804a6a0:   c7 45 bc 55 00 00 00            	mov dword ptr [ebp - 0x44], 0x55
0x804a6a7:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a6ab:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a6ae:   0f 95 c0                        	setne al
0x804a6b1:   89 c2                           	mov edx, eax
0x804a6b3:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a6b9:   01 d0                           	add eax, edx
0x804a6bb:   89 c2                           	mov edx, eax
0x804a6bd:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a6c0:   09 d0                           	or eax, edx
0x804a6c2:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a6c5:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a6c9:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x804a6cc:   0f b6 45 cb                     	movzx eax, byte ptr [ebp - 0x35]
0x804a6d0:   01 c0                           	add eax, eax
0x804a6d2:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a6d5:   66 0f be 85 6b ff ff ff         	movsx ax, byte ptr [ebp - 0x95]
0x804a6dd:   ba 47 88 ff ff                  	mov edx, 0xffff8847
0x804a6e2:   29 c2                           	sub edx, eax
0x804a6e4:   89 d0                           	mov eax, edx
0x804a6e6:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x804a6ea:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804a6ee:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x804a6f2:   23 45 e8                        	and eax, dword ptr [ebp - 0x18]
0x804a6f5:   83 f8 fb                        	cmp eax, -5
0x804a6f8:   0f 84 e4 00 00 00               	je 0x804a7e2 <func_1+0xfcb>
0x804a6fe:   c6 85 db fe ff ff 6f            	mov byte ptr [ebp - 0x125], 0x6f
0x804a705:   c7 85 d4 fe ff ff af 9b dd 43   	mov dword ptr [ebp - 0x12c], 0x43dd9baf
0x804a70f:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a713:   66 05 06 7d                     	add ax, 0x7d06
0x804a717:   66 09 45 dc                     	or word ptr [ebp - 0x24], ax
0x804a71b:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x804a71f:   81 65 cc 8b 1b 1d de            	and dword ptr [ebp - 0x34], 0xde1d1b8b
0x804a726:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a72d:   0f bf d2                        	movsx edx, dx
0x804a730:   21 95 d4 fe ff ff               	and dword ptr [ebp - 0x12c], edx
0x804a736:   8b 95 d4 fe ff ff               	mov edx, dword ptr [ebp - 0x12c]
0x804a73c:   0f bf ca                        	movsx ecx, dx
0x804a73f:   99                              	cdq 
0x804a740:   f7 f9                           	idiv ecx
0x804a742:   89 d0                           	mov eax, edx
0x804a744:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a747:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a74b:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a74e:   c7 85 d4 fe ff ff d5 64 00 00   	mov dword ptr [ebp - 0x12c], 0x64d5
0x804a758:   66 83 7d 8a 00                  	cmp word ptr [ebp - 0x76], 0
0x804a75d:   83 7d e8 ff                     	cmp dword ptr [ebp - 0x18], -1
0x804a761:   0f 95 c0                        	setne al
0x804a764:   0f b6 d0                        	movzx edx, al
0x804a767:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a76b:   39 c2                           	cmp edx, eax
0x804a76d:   74 07                           	je 0x804a776 <func_1+0xf5f>
0x804a76f:   ba 8b 74 00 00                  	mov edx, 0x748b
0x804a774:   eb 05                           	jmp 0x804a77b <func_1+0xf64>
0x804a776:   ba 8a 74 00 00                  	mov edx, 0x748a
0x804a77b:   0f be 85 db fe ff ff            	movsx eax, byte ptr [ebp - 0x125]
0x804a782:   39 c2                           	cmp edx, eax
0x804a784:   0f 94 c0                        	sete al
0x804a787:   0f b6 c0                        	movzx eax, al
0x804a78a:   0f b6 95 db fe ff ff            	movzx edx, byte ptr [ebp - 0x125]
0x804a791:   0f af c2                        	imul eax, edx
0x804a794:   d0 f8                           	sar al, 1
0x804a796:   0f be c0                        	movsx eax, al
0x804a799:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a79c:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a7a0:   0f be 95 db fe ff ff            	movsx edx, byte ptr [ebp - 0x125]
0x804a7a7:   39 95 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], edx
0x804a7ad:   7c 11                           	jl 0x804a7c0 <func_1+0xfa9>
0x804a7af:   66 83 bd e4 fe ff ff 00         	cmp word ptr [ebp - 0x11c], 0
0x804a7b7:   74 07                           	je 0x804a7c0 <func_1+0xfa9>
0x804a7b9:   ba 01 00 00 00                  	mov edx, 1
0x804a7be:   eb 05                           	jmp 0x804a7c5 <func_1+0xfae>
0x804a7c0:   ba 00 00 00 00                  	mov edx, 0
0x804a7c5:   0f bf ca                        	movsx ecx, dx
0x804a7c8:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x804a7cb:   0f bf d2                        	movsx edx, dx
0x804a7ce:   29 d1                           	sub ecx, edx
0x804a7d0:   89 ce                           	mov esi, ecx
0x804a7d2:   99                              	cdq 
0x804a7d3:   f7 fe                           	idiv esi
0x804a7d5:   89 c2                           	mov edx, eax
0x804a7d7:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a7db:   31 d0                           	xor eax, edx
0x804a7dd:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a7e0:   eb 61                           	jmp 0x804a843 <func_1+0x102c>
0x804a7e2:   c6 85 dd fe ff ff 01            	mov byte ptr [ebp - 0x123], 1
0x804a7e9:   c6 85 dc fe ff ff 04            	mov byte ptr [ebp - 0x124], 4
0x804a7f0:   0f b6 45 c6                     	movzx eax, byte ptr [ebp - 0x3a]
0x804a7f4:   83 c0 01                        	add eax, 1
0x804a7f7:   88 45 c6                        	mov byte ptr [ebp - 0x3a], al
0x804a7fa:   66 83 45 b4 01                  	add word ptr [ebp - 0x4c], 1
0x804a7ff:   80 bd dd fe ff ff 01            	cmp byte ptr [ebp - 0x123], 1
0x804a806:   0f 96 c0                        	setbe al
0x804a809:   0f b6 c0                        	movzx eax, al
0x804a80c:   09 85 e0 fe ff ff               	or dword ptr [ebp - 0x120], eax
0x804a812:   0f bf 85 de fe ff ff            	movsx eax, word ptr [ebp - 0x122]
0x804a819:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x804a81f:   0f 9d c0                        	setge al
0x804a822:   0f b6 c0                        	movzx eax, al
0x804a825:   66 33 85 e4 fe ff ff            	xor ax, word ptr [ebp - 0x11c]
0x804a82c:   0f b7 c0                        	movzx eax, ax
0x804a82f:   05 25 85 00 00                  	add eax, 0x8525
0x804a834:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a837:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a83d:   0f be c0                        	movsx eax, al
0x804a840:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a843:   0f b6 45 c5                     	movzx eax, byte ptr [ebp - 0x3b]
0x804a847:   83 e8 01                        	sub eax, 1
0x804a84a:   88 45 c5                        	mov byte ptr [ebp - 0x3b], al
0x804a84d:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a851:   83 c0 01                        	add eax, 1
0x804a854:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a858:   66 83 7d e6 3b                  	cmp word ptr [ebp - 0x1a], 0x3b
0x804a85d:   0f 85 75 f9 ff ff               	jne 0x804a1d8 <func_1+0x9c1>
0x804a863:   e9 e6 01 00 00                  	jmp 0x804aa4e <func_1+0x1237>
0x804a868:   c7 85 40 ff ff ff 31 0b b0 29   	mov dword ptr [ebp - 0xc0], 0x29b00b31
0x804a872:   c7 45 94 48 3e fe 60            	mov dword ptr [ebp - 0x6c], 0x60fe3e48
0x804a879:   c7 85 3c ff ff ff 92 2a f7 c9   	mov dword ptr [ebp - 0xc4], 0xc9f72a92
0x804a883:   66 c7 85 3a ff ff ff f9 ff      	mov word ptr [ebp - 0xc6], 0xfff9
0x804a88c:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a88f:   0f bf d0                        	movsx edx, ax
0x804a892:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a895:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a898:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a89b:   98                              	cwde 
0x804a89c:   25 2c 64 00 00                  	and eax, 0x642c
0x804a8a1:   89 c1                           	mov ecx, eax
0x804a8a3:   89 d6                           	mov esi, edx
0x804a8a5:   d3 e6                           	shl esi, cl
0x804a8a7:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a8ac:   99                              	cdq 
0x804a8ad:   f7 fe                           	idiv esi
0x804a8af:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a8b5:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a8b8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a8bb:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a8be:   89 c2                           	mov edx, eax
0x804a8c0:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a8c6:   09 d0                           	or eax, edx
0x804a8c8:   0f b6 d0                        	movzx edx, al
0x804a8cb:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a8cf:   89 c1                           	mov ecx, eax
0x804a8d1:   d3 fa                           	sar edx, cl
0x804a8d3:   89 d0                           	mov eax, edx
0x804a8d5:   09 85 3c ff ff ff               	or dword ptr [ebp - 0xc4], eax
0x804a8db:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a8df:   83 e8 01                        	sub eax, 1
0x804a8e2:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a8e6:   c6 45 b7 1c                     	mov byte ptr [ebp - 0x49], 0x1c
0x804a8ea:   e9 0f 01 00 00                  	jmp 0x804a9fe <func_1+0x11e7>
0x804a8ef:   c6 85 39 ff ff ff ff            	mov byte ptr [ebp - 0xc7], 0xff
0x804a8f6:   c7 85 34 ff ff ff 75 3a ee d7   	mov dword ptr [ebp - 0xcc], 0xd7ee3a75
0x804a900:   80 6d c7 01                     	sub byte ptr [ebp - 0x39], 1
0x804a904:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a908:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804a90e:   75 0d                           	jne 0x804a91d <func_1+0x1106>
0x804a910:   83 7d e0 01                     	cmp dword ptr [ebp - 0x20], 1
0x804a914:   74 07                           	je 0x804a91d <func_1+0x1106>
0x804a916:   b8 01 00 00 00                  	mov eax, 1
0x804a91b:   eb 05                           	jmp 0x804a922 <func_1+0x110b>
0x804a91d:   b8 00 00 00 00                  	mov eax, 0
0x804a922:   33 85 78 ff ff ff               	xor eax, dword ptr [ebp - 0x88]
0x804a928:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a92e:   80 7d d7 00                     	cmp byte ptr [ebp - 0x29], 0
0x804a932:   74 07                           	je 0x804a93b <func_1+0x1124>
0x804a934:   ba 01 00 00 00                  	mov edx, 1
0x804a939:   eb 05                           	jmp 0x804a940 <func_1+0x1129>
0x804a93b:   ba 00 00 00 00                  	mov edx, 0
0x804a940:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x804a944:   39 c2                           	cmp edx, eax
0x804a946:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a94c:   66 0f be d0                     	movsx dx, al
0x804a950:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a953:   66 98                           	cbw 
0x804a955:   0f af c2                        	imul eax, edx
0x804a958:   89 c2                           	mov edx, eax
0x804a95a:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a95d:   89 c1                           	mov ecx, eax
0x804a95f:   89 d0                           	mov eax, edx
0x804a961:   ba 00 00 00 00                  	mov edx, 0
0x804a966:   66 f7 f1                        	div cx
0x804a969:   89 d0                           	mov eax, edx
0x804a96b:   66 83 f8 52                     	cmp ax, 0x52
0x804a96f:   0f 96 c0                        	setbe al
0x804a972:   0f b6 c0                        	movzx eax, al
0x804a975:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x804a978:   b8 01 00 00 00                  	mov eax, 1
0x804a97d:   0f b6 c0                        	movzx eax, al
0x804a980:   f6 b5 39 ff ff ff               	div byte ptr [ebp - 0xc7]
0x804a986:   0f b6 c0                        	movzx eax, al
0x804a989:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a98c:   0f 94 c0                        	sete al
0x804a98f:   0f b6 c0                        	movzx eax, al
0x804a992:   f7 d8                           	neg eax
0x804a994:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x804a997:   8b b5 3c ff ff ff               	mov esi, dword ptr [ebp - 0xc4]
0x804a99d:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a9a0:   ba 00 00 00 00                  	mov edx, 0
0x804a9a5:   f7 f6                           	div esi
0x804a9a7:   0f b6 d0                        	movzx edx, al
0x804a9aa:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804a9ae:   0f b6 c0                        	movzx eax, al
0x804a9b1:   29 c2                           	sub edx, eax
0x804a9b3:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a9b7:   39 c2                           	cmp edx, eax
0x804a9b9:   0f 94 c0                        	sete al
0x804a9bc:   0f b6 d0                        	movzx edx, al
0x804a9bf:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a9c3:   89 c1                           	mov ecx, eax
0x804a9c5:   d3 fa                           	sar edx, cl
0x804a9c7:   89 d0                           	mov eax, edx
0x804a9c9:   0f b6 d0                        	movzx edx, al
0x804a9cc:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a9d0:   0f b6 c0                        	movzx eax, al
0x804a9d3:   01 d0                           	add eax, edx
0x804a9d5:   09 45 94                        	or dword ptr [ebp - 0x6c], eax
0x804a9d8:   83 bd 40 ff ff ff 01            	cmp dword ptr [ebp - 0xc0], 1
0x804a9df:   0f 9e c0                        	setle al
0x804a9e2:   0f b6 d0                        	movzx edx, al
0x804a9e5:   0f b6 85 39 ff ff ff            	movzx eax, byte ptr [ebp - 0xc7]
0x804a9ec:   09 d0                           	or eax, edx
0x804a9ee:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a9f4:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a9f8:   83 c0 01                        	add eax, 1
0x804a9fb:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a9fe:   80 7d b7 3c                     	cmp byte ptr [ebp - 0x49], 0x3c
0x804aa02:   0f 86 e7 fe ff ff               	jbe 0x804a8ef <func_1+0x10d8>
0x804aa08:   66 83 ad 3a ff ff ff 01         	sub word ptr [ebp - 0xc6], 1
0x804aa10:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x804aa14:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804aa18:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804aa1b:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804aa1e:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804aa24:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804aa2a:   0f bf d8                        	movsx ebx, ax
0x804aa2d:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804aa30:   98                              	cwde 
0x804aa31:   89 c1                           	mov ecx, eax
0x804aa33:   d3 e3                           	shl ebx, cl
0x804aa35:   89 d8                           	mov eax, ebx
0x804aa37:   0f b7 c8                        	movzx ecx, ax
0x804aa3a:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804aa3d:   0f b7 c0                        	movzx eax, ax
0x804aa40:   0f af c1                        	imul eax, ecx
0x804aa43:   39 c2                           	cmp edx, eax
0x804aa45:   0f 9c c0                        	setl al
0x804aa48:   0f b6 c0                        	movzx eax, al
0x804aa4b:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804aa4e:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804aa55:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804aa59:   0f b6 4d c5                     	movzx ecx, byte ptr [ebp - 0x3b]
0x804aa5d:   0f b6 75 c6                     	movzx esi, byte ptr [ebp - 0x3a]
0x804aa61:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804aa65:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x804aa6b:   0f b7 7d c8                     	movzx edi, word ptr [ebp - 0x38]
0x804aa6f:   89 bd 9c fe ff ff               	mov dword ptr [ebp - 0x164], edi
0x804aa75:   0f b6 5d cb                     	movzx ebx, byte ptr [ebp - 0x35]
0x804aa79:   89 9d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ebx
0x804aa7f:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x804aa83:   89 bd 94 fe ff ff               	mov dword ptr [ebp - 0x16c], edi
0x804aa89:   0f bf 5d 8a                     	movsx ebx, word ptr [ebp - 0x76]
0x804aa8d:   89 9d 90 fe ff ff               	mov dword ptr [ebp - 0x170], ebx
0x804aa93:   0f bf 7d dc                     	movsx edi, word ptr [ebp - 0x24]
0x804aa97:   89 bd 8c fe ff ff               	mov dword ptr [ebp - 0x174], edi
0x804aa9d:   0f b6 5d df                     	movzx ebx, byte ptr [ebp - 0x21]
0x804aaa1:   89 9d 88 fe ff ff               	mov dword ptr [ebp - 0x178], ebx
0x804aaa7:   0f be 7d e5                     	movsx edi, byte ptr [ebp - 0x1b]
0x804aaab:   89 bd 84 fe ff ff               	mov dword ptr [ebp - 0x17c], edi
0x804aab1:   0f b7 5d e6                     	movzx ebx, word ptr [ebp - 0x1a]
0x804aab5:   89 9d 80 fe ff ff               	mov dword ptr [ebp - 0x180], ebx
0x804aabb:   0f be 7d f3                     	movsx edi, byte ptr [ebp - 0xd]
0x804aabf:   0f b7 5d 92                     	movzx ebx, word ptr [ebp - 0x6e]
0x804aac3:   50                              	push eax
0x804aac4:   52                              	push edx
0x804aac5:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804aacb:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804aad1:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804aad4:   51                              	push ecx
0x804aad5:   56                              	push esi
0x804aad6:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aadc:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aae2:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aae8:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aaeb:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aaee:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aaf4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aaf7:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804aafd:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804ab03:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804ab09:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab0c:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804ab12:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ab18:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ab1b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab1e:   57                              	push edi
0x804ab1f:   53                              	push ebx
0x804ab20:   e8 2f eb ff ff                  	call 0x8049654 <set_var>
0x804ab25:   83 c4 60                        	add esp, 0x60
0x804ab28:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804ab2b:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ab2e:   5b                              	pop ebx
0x804ab2f:   5e                              	pop esi
0x804ab30:   5f                              	pop edi
0x804ab31:   5d                              	pop ebp
0x804ab32:   c3                              	ret 
; function: main at 0x804ab33 -- 0x804aed5
0x804ab33:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ab37:   83 e4 f0                        	and esp, 0xfffffff0
0x804ab3a:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ab3d:   55                              	push ebp
0x804ab3e:   89 e5                           	mov ebp, esp
0x804ab40:   53                              	push ebx
0x804ab41:   51                              	push ecx
0x804ab42:   83 ec 10                        	sub esp, 0x10
0x804ab45:   e8 46 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab4a:   81 c3 b6 24 00 00               	add ebx, 0x24b6
0x804ab50:   89 c8                           	mov eax, ecx
0x804ab52:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ab59:   83 38 02                        	cmp dword ptr [eax], 2
0x804ab5c:   75 26                           	jne 0x804ab84 <main+0x51>
0x804ab5e:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ab61:   83 c0 04                        	add eax, 4
0x804ab64:   8b 00                           	mov eax, dword ptr [eax]
0x804ab66:   83 ec 08                        	sub esp, 8
0x804ab69:   8d 93 bc df ff ff               	lea edx, [ebx - 0x2044]
0x804ab6f:   52                              	push edx
0x804ab70:   50                              	push eax
0x804ab71:   e8 8a d7 ff ff                  	call 0x8048300 <strcmp>
0x804ab76:   83 c4 10                        	add esp, 0x10
0x804ab79:   85 c0                           	test eax, eax
0x804ab7b:   75 07                           	jne 0x804ab84 <main+0x51>
0x804ab7d:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ab84:   e8 cd d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ab89:   e8 dd e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804ab8e:   e8 84 ec ff ff                  	call 0x8049817 <func_1>
0x804ab93:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804ab9a:   0f b7 c0                        	movzx eax, ax
0x804ab9d:   83 ec 04                        	sub esp, 4
0x804aba0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba3:   8d 93 be df ff ff               	lea edx, [ebx - 0x2042]
0x804aba9:   52                              	push edx
0x804abaa:   50                              	push eax
0x804abab:   e8 c7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb0:   83 c4 10                        	add esp, 0x10
0x804abb3:   0f b6 83 26 00 00 00            	movzx eax, byte ptr [ebx + 0x26]
0x804abba:   0f be c0                        	movsx eax, al
0x804abbd:   83 ec 04                        	sub esp, 4
0x804abc0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abc3:   8d 93 c2 df ff ff               	lea edx, [ebx - 0x203e]
0x804abc9:   52                              	push edx
0x804abca:   50                              	push eax
0x804abcb:   e8 a7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd0:   83 c4 10                        	add esp, 0x10
0x804abd3:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804abd9:   89 c2                           	mov edx, eax
0x804abdb:   83 ec 04                        	sub esp, 4
0x804abde:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abe1:   8d 83 c6 df ff ff               	lea eax, [ebx - 0x203a]
0x804abe7:   50                              	push eax
0x804abe8:   52                              	push edx
0x804abe9:   e8 89 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abee:   83 c4 10                        	add esp, 0x10
0x804abf1:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804abf7:   83 ec 04                        	sub esp, 4
0x804abfa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abfd:   8d 93 cb df ff ff               	lea edx, [ebx - 0x2035]
0x804ac03:   52                              	push edx
0x804ac04:   50                              	push eax
0x804ac05:   e8 6d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac0a:   83 c4 10                        	add esp, 0x10
0x804ac0d:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804ac14:   0f b7 c0                        	movzx eax, ax
0x804ac17:   83 ec 04                        	sub esp, 4
0x804ac1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac1d:   8d 93 d0 df ff ff               	lea edx, [ebx - 0x2030]
0x804ac23:   52                              	push edx
0x804ac24:   50                              	push eax
0x804ac25:   e8 4d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac2a:   83 c4 10                        	add esp, 0x10
0x804ac2d:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804ac34:   0f be c0                        	movsx eax, al
0x804ac37:   83 ec 04                        	sub esp, 4
0x804ac3a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3d:   8d 93 d5 df ff ff               	lea edx, [ebx - 0x202b]
0x804ac43:   52                              	push edx
0x804ac44:   50                              	push eax
0x804ac45:   e8 2d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac4a:   83 c4 10                        	add esp, 0x10
0x804ac4d:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ac53:   89 c2                           	mov edx, eax
0x804ac55:   83 ec 04                        	sub esp, 4
0x804ac58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5b:   8d 83 da df ff ff               	lea eax, [ebx - 0x2026]
0x804ac61:   50                              	push eax
0x804ac62:   52                              	push edx
0x804ac63:   e8 0f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac68:   83 c4 10                        	add esp, 0x10
0x804ac6b:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ac71:   83 ec 04                        	sub esp, 4
0x804ac74:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac77:   8d 93 df df ff ff               	lea edx, [ebx - 0x2021]
0x804ac7d:   52                              	push edx
0x804ac7e:   50                              	push eax
0x804ac7f:   e8 f3 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac84:   83 c4 10                        	add esp, 0x10
0x804ac87:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804ac8e:   0f b6 c0                        	movzx eax, al
0x804ac91:   83 ec 04                        	sub esp, 4
0x804ac94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac97:   8d 93 e4 df ff ff               	lea edx, [ebx - 0x201c]
0x804ac9d:   52                              	push edx
0x804ac9e:   50                              	push eax
0x804ac9f:   e8 d3 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca4:   83 c4 10                        	add esp, 0x10
0x804aca7:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804acae:   98                              	cwde 
0x804acaf:   83 ec 04                        	sub esp, 4
0x804acb2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb5:   8d 93 e9 df ff ff               	lea edx, [ebx - 0x2017]
0x804acbb:   52                              	push edx
0x804acbc:   50                              	push eax
0x804acbd:   e8 b5 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc2:   83 c4 10                        	add esp, 0x10
0x804acc5:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804accc:   98                              	cwde 
0x804accd:   83 ec 04                        	sub esp, 4
0x804acd0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd3:   8d 93 ee df ff ff               	lea edx, [ebx - 0x2012]
0x804acd9:   52                              	push edx
0x804acda:   50                              	push eax
0x804acdb:   e8 97 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace0:   83 c4 10                        	add esp, 0x10
0x804ace3:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ace9:   83 ec 04                        	sub esp, 4
0x804acec:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acef:   8d 93 f3 df ff ff               	lea edx, [ebx - 0x200d]
0x804acf5:   52                              	push edx
0x804acf6:   50                              	push eax
0x804acf7:   e8 7b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfc:   83 c4 10                        	add esp, 0x10
0x804acff:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804ad06:   0f be c0                        	movsx eax, al
0x804ad09:   83 ec 04                        	sub esp, 4
0x804ad0c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad0f:   8d 93 f8 df ff ff               	lea edx, [ebx - 0x2008]
0x804ad15:   52                              	push edx
0x804ad16:   50                              	push eax
0x804ad17:   e8 5b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1c:   83 c4 10                        	add esp, 0x10
0x804ad1f:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ad25:   89 c2                           	mov edx, eax
0x804ad27:   83 ec 04                        	sub esp, 4
0x804ad2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2d:   8d 83 fe df ff ff               	lea eax, [ebx - 0x2002]
0x804ad33:   50                              	push eax
0x804ad34:   52                              	push edx
0x804ad35:   e8 3d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad3a:   83 c4 10                        	add esp, 0x10
0x804ad3d:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ad43:   83 ec 04                        	sub esp, 4
0x804ad46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad49:   8d 93 04 e0 ff ff               	lea edx, [ebx - 0x1ffc]
0x804ad4f:   52                              	push edx
0x804ad50:   50                              	push eax
0x804ad51:   e8 21 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad56:   83 c4 10                        	add esp, 0x10
0x804ad59:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804ad60:   0f b6 c0                        	movzx eax, al
0x804ad63:   83 ec 04                        	sub esp, 4
0x804ad66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad69:   8d 93 0a e0 ff ff               	lea edx, [ebx - 0x1ff6]
0x804ad6f:   52                              	push edx
0x804ad70:   50                              	push eax
0x804ad71:   e8 01 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad76:   83 c4 10                        	add esp, 0x10
0x804ad79:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804ad80:   0f b7 c0                        	movzx eax, ax
0x804ad83:   83 ec 04                        	sub esp, 4
0x804ad86:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad89:   8d 93 10 e0 ff ff               	lea edx, [ebx - 0x1ff0]
0x804ad8f:   52                              	push edx
0x804ad90:   50                              	push eax
0x804ad91:   e8 e1 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad96:   83 c4 10                        	add esp, 0x10
0x804ad99:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804ada0:   0f b6 c0                        	movzx eax, al
0x804ada3:   83 ec 04                        	sub esp, 4
0x804ada6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada9:   8d 93 16 e0 ff ff               	lea edx, [ebx - 0x1fea]
0x804adaf:   52                              	push edx
0x804adb0:   50                              	push eax
0x804adb1:   e8 c1 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb6:   83 c4 10                        	add esp, 0x10
0x804adb9:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804adbf:   83 ec 04                        	sub esp, 4
0x804adc2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc5:   8d 93 1c e0 ff ff               	lea edx, [ebx - 0x1fe4]
0x804adcb:   52                              	push edx
0x804adcc:   50                              	push eax
0x804adcd:   e8 a5 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add2:   83 c4 10                        	add esp, 0x10
0x804add5:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804addc:   0f b6 c0                        	movzx eax, al
0x804addf:   83 ec 04                        	sub esp, 4
0x804ade2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade5:   8d 93 22 e0 ff ff               	lea edx, [ebx - 0x1fde]
0x804adeb:   52                              	push edx
0x804adec:   50                              	push eax
0x804aded:   e8 85 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adf2:   83 c4 10                        	add esp, 0x10
0x804adf5:   0f b6 83 61 00 00 00            	movzx eax, byte ptr [ebx + 0x61]
0x804adfc:   0f b6 c0                        	movzx eax, al
0x804adff:   83 ec 04                        	sub esp, 4
0x804ae02:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae05:   8d 93 28 e0 ff ff               	lea edx, [ebx - 0x1fd8]
0x804ae0b:   52                              	push edx
0x804ae0c:   50                              	push eax
0x804ae0d:   e8 65 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae12:   83 c4 10                        	add esp, 0x10
0x804ae15:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ae1b:   89 c2                           	mov edx, eax
0x804ae1d:   83 ec 04                        	sub esp, 4
0x804ae20:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae23:   8d 83 2e e0 ff ff               	lea eax, [ebx - 0x1fd2]
0x804ae29:   50                              	push eax
0x804ae2a:   52                              	push edx
0x804ae2b:   e8 47 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae30:   83 c4 10                        	add esp, 0x10
0x804ae33:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ae39:   89 c2                           	mov edx, eax
0x804ae3b:   83 ec 04                        	sub esp, 4
0x804ae3e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae41:   8d 83 34 e0 ff ff               	lea eax, [ebx - 0x1fcc]
0x804ae47:   50                              	push eax
0x804ae48:   52                              	push edx
0x804ae49:   e8 29 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4e:   83 c4 10                        	add esp, 0x10
0x804ae51:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ae57:   89 c2                           	mov edx, eax
0x804ae59:   83 ec 04                        	sub esp, 4
0x804ae5c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5f:   8d 83 3a e0 ff ff               	lea eax, [ebx - 0x1fc6]
0x804ae65:   50                              	push eax
0x804ae66:   52                              	push edx
0x804ae67:   e8 0b e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6c:   83 c4 10                        	add esp, 0x10
0x804ae6f:   0f b7 83 a6 04 00 00            	movzx eax, word ptr [ebx + 0x4a6]
0x804ae76:   0f b7 c0                        	movzx eax, ax
0x804ae79:   83 ec 04                        	sub esp, 4
0x804ae7c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7f:   8d 93 40 e0 ff ff               	lea edx, [ebx - 0x1fc0]
0x804ae85:   52                              	push edx
0x804ae86:   50                              	push eax
0x804ae87:   e8 eb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8c:   83 c4 10                        	add esp, 0x10
0x804ae8f:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804ae96:   0f be c0                        	movsx eax, al
0x804ae99:   83 ec 04                        	sub esp, 4
0x804ae9c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9f:   8d 93 46 e0 ff ff               	lea edx, [ebx - 0x1fba]
0x804aea5:   52                              	push edx
0x804aea6:   50                              	push eax
0x804aea7:   e8 cb e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeac:   83 c4 10                        	add esp, 0x10
0x804aeaf:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aeb5:   f7 d0                           	not eax
0x804aeb7:   83 ec 08                        	sub esp, 8
0x804aeba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebd:   50                              	push eax
0x804aebe:   e8 a3 d5 ff ff                  	call 0x8048466 <platform_main_end>
0x804aec3:   83 c4 10                        	add esp, 0x10
0x804aec6:   b8 00 00 00 00                  	mov eax, 0
0x804aecb:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aece:   59                              	pop ecx
0x804aecf:   5b                              	pop ebx
0x804aed0:   5d                              	pop ebp
0x804aed1:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aed4:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aed5 -- 0x804aed9
0x804aed5:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aed8:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aed9 -- 0x804aedd
0x804aed9:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aedc:   c3                              	ret 
; data inside code section at 0x804aedd -- 0x804aee0
0x804aedd:   66 90 90                                           |f..             |
; function: __libc_csu_init at 0x804aee0 -- 0x804af3d
0x804aee0:   55                              	push ebp
0x804aee1:   57                              	push edi
0x804aee2:   56                              	push esi
0x804aee3:   53                              	push ebx
0x804aee4:   e8 a7 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aee9:   81 c3 17 21 00 00               	add ebx, 0x2117
0x804aeef:   83 ec 0c                        	sub esp, 0xc
0x804aef2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aef6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804aefc:   e8 cb d3 ff ff                  	call 0x80482cc <_init>
0x804af01:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804af07:   29 c6                           	sub esi, eax
0x804af09:   c1 fe 02                        	sar esi, 2
0x804af0c:   85 f6                           	test esi, esi
0x804af0e:   74 25                           	je 0x804af35 <__libc_csu_init+0x55>
0x804af10:   31 ff                           	xor edi, edi
0x804af12:   8d b6 00 00 00 00               	lea esi, [esi]
0x804af18:   83 ec 04                        	sub esp, 4
0x804af1b:   55                              	push ebp
0x804af1c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804af20:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804af24:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804af2b:   83 c7 01                        	add edi, 1
0x804af2e:   83 c4 10                        	add esp, 0x10
0x804af31:   39 fe                           	cmp esi, edi
0x804af33:   75 e3                           	jne 0x804af18 <__libc_csu_init+0x38>
0x804af35:   83 c4 0c                        	add esp, 0xc
0x804af38:   5b                              	pop ebx
0x804af39:   5e                              	pop esi
0x804af3a:   5f                              	pop edi
0x804af3b:   5d                              	pop ebp
0x804af3c:   c3                              	ret 
; data inside code section at 0x804af3d -- 0x804af40
0x804af3d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804af40 -- 0x804af42
0x804af40:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804af44 -- 0x804af58
0x804af44:   53                              	push ebx
0x804af45:   83 ec 08                        	sub esp, 8
0x804af48:   e8 43 d4 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804af4d:   81 c3 b3 20 00 00               	add ebx, 0x20b3
0x804af53:   83 c4 08                        	add esp, 8
0x804af56:   5b                              	pop ebx
0x804af57:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 5c af 04 08  04 00 00 00 11 00 10 00   |....\...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804af58:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804af68:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804af78:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804af88:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804af98:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804afa8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804afb8:   25 64 0a 00 31 00 67 5f  35 00 67 5f 36 00 67 5f   |%d..1.g_5.g_6.g_|
0x804afc8:   31 32 00 67 5f 31 33 00  67 5f 33 34 00 67 5f 33   |12.g_13.g_34.g_3|
0x804afd8:   37 00 67 5f 34 30 00 67  5f 34 31 00 67 5f 34 34   |7.g_40.g_41.g_44|
0x804afe8:   00 67 5f 36 38 00 67 5f  37 33 00 67 5f 37 35 00   |.g_68.g_73.g_75.|
0x804aff8:   67 5f 31 33 35 00 67 5f  31 36 34 00 67 5f 31 36   |g_135.g_164.g_16|
0x804b008:   37 00 67 5f 32 30 38 00  67 5f 32 31 37 00 67 5f   |7.g_208.g_217.g_|
0x804b018:   32 35 34 00 67 5f 32 37  34 00 67 5f 33 35 39 00   |254.g_274.g_359.|
0x804b028:   67 5f 33 38 30 00 67 5f  33 39 34 00 67 5f 33 39   |g_380.g_394.g_39|
0x804b038:   35 00 67 5f 33 39 36 00  67 5f 33 39 38 00 67 5f   |5.g_396.g_398.g_|
0x804b048:   34 33 33 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |433....?...~....|
0x804b058:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804b068:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804b078:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b088:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b098:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b0a8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b0b8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b0b8:   01 1b 03 3b c0 02 00 00  57 00 00 00 38 d2 ff ff   |...;....W...8...|
0x804b0c8:   f0 02 00 00 78 d2 ff ff  14 03 00 00 c8 d2 ff ff   |....x...........|
0x804b0d8:   dc 02 00 00 9e d3 ff ff  28 03 00 00 ae d3 ff ff   |........(.......|
0x804b0e8:   48 03 00 00 dc d3 ff ff  6c 03 00 00 fa d3 ff ff   |H.......l.......|
0x804b0f8:   8c 03 00 00 22 d4 ff ff  ac 03 00 00 4c d4 ff ff   |....".......L...|
0x804b108:   cc 03 00 00 75 d4 ff ff  ec 03 00 00 b8 d4 ff ff   |....u...........|
0x804b118:   0c 04 00 00 f9 d4 ff ff  2c 04 00 00 51 d5 ff ff   |........,...Q...|
0x804b128:   50 04 00 00 a3 d5 ff ff  74 04 00 00 e0 d5 ff ff   |P.......t.......|
0x804b138:   94 04 00 00 17 d6 ff ff  b4 04 00 00 36 d6 ff ff   |............6...|
0x804b148:   d4 04 00 00 60 d6 ff ff  f4 04 00 00 8c d6 ff ff   |....`...........|
0x804b158:   14 05 00 00 b7 d6 ff ff  34 05 00 00 00 d7 ff ff   |........4.......|
0x804b168:   54 05 00 00 47 d7 ff ff  74 05 00 00 a1 d7 ff ff   |T...G...t.......|
0x804b178:   98 05 00 00 f5 d7 ff ff  bc 05 00 00 34 d8 ff ff   |............4...|
0x804b188:   dc 05 00 00 6d d8 ff ff  fc 05 00 00 8f d8 ff ff   |....m...........|
0x804b198:   1c 06 00 00 dd d8 ff ff  3c 06 00 00 19 d9 ff ff   |........<.......|
0x804b1a8:   5c 06 00 00 a2 d9 ff ff  7c 06 00 00 d4 d9 ff ff   |\.......|.......|
0x804b1b8:   9c 06 00 00 04 da ff ff  bc 06 00 00 49 da ff ff   |............I...|
0x804b1c8:   dc 06 00 00 88 da ff ff  fc 06 00 00 ba da ff ff   |................|
0x804b1d8:   1c 07 00 00 e6 da ff ff  3c 07 00 00 04 db ff ff   |........<.......|
0x804b1e8:   5c 07 00 00 2c db ff ff  7c 07 00 00 51 db ff ff   |\...,...|...Q...|
0x804b1f8:   9c 07 00 00 76 db ff ff  bc 07 00 00 ad db ff ff   |....v...........|
0x804b208:   dc 07 00 00 e1 db ff ff  fc 07 00 00 33 dc ff ff   |............3...|
0x804b218:   20 08 00 00 7f dc ff ff  44 08 00 00 b6 dc ff ff   | .......D.......|
0x804b228:   64 08 00 00 e7 dc ff ff  84 08 00 00 06 dd ff ff   |d...............|
0x804b238:   a4 08 00 00 30 dd ff ff  c4 08 00 00 58 dd ff ff   |....0.......X...|
0x804b248:   e4 08 00 00 81 dd ff ff  04 09 00 00 bd dd ff ff   |................|
0x804b258:   24 09 00 00 f7 dd ff ff  44 09 00 00 4a de ff ff   |$.......D...J...|
0x804b268:   68 09 00 00 97 de ff ff  8c 09 00 00 cf de ff ff   |h...............|
0x804b278:   ac 09 00 00 01 df ff ff  cc 09 00 00 15 df ff ff   |................|
0x804b288:   ec 09 00 00 2c df ff ff  0c 0a 00 00 41 df ff ff   |....,.......A...|
0x804b298:   2c 0a 00 00 57 df ff ff  4c 0a 00 00 7e df ff ff   |,...W...L...~...|
0x804b2a8:   6c 0a 00 00 a3 df ff ff  8c 0a 00 00 e2 df ff ff   |l...............|
0x804b2b8:   ac 0a 00 00 1b e0 ff ff  cc 0a 00 00 47 e0 ff ff   |............G...|
0x804b2c8:   ec 0a 00 00 6d e0 ff ff  0c 0b 00 00 af e0 ff ff   |....m...........|
0x804b2d8:   2c 0b 00 00 f1 e0 ff ff  4c 0b 00 00 33 e1 ff ff   |,.......L...3...|
0x804b2e8:   6c 0b 00 00 a8 e1 ff ff  8c 0b 00 00 05 e2 ff ff   |l...............|
0x804b2f8:   ac 0b 00 00 62 e2 ff ff  cc 0b 00 00 bf e2 ff ff   |....b...........|
0x804b308:   ec 0b 00 00 4f e3 ff ff  0c 0c 00 00 b3 e3 ff ff   |....O...........|
0x804b318:   2c 0c 00 00 23 e4 ff ff  4c 0c 00 00 6a e4 ff ff   |,...#...L...j...|
0x804b328:   70 0c 00 00 bf e4 ff ff  90 0c 00 00 06 e5 ff ff   |p...............|
0x804b338:   b4 0c 00 00 6e e5 ff ff  d8 0c 00 00 9c e5 ff ff   |....n...........|
0x804b348:   fc 0c 00 00 5f e7 ff ff  2c 0d 00 00 7b fa ff ff   |...._...,...{...|
0x804b358:   5c 0d 00 00 1d fe ff ff  94 0d 00 00 21 fe ff ff   |\...........!...|
0x804b368:   a8 0d 00 00 28 fe ff ff  bc 0d 00 00 88 fe ff ff   |....(...........|
0x804b378:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804b37c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b38c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b39c:   e4 cf ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b3ac:   30 00 00 00 40 cf ff ff  40 00 00 00 00 0e 08 46   |0...@...@......F|
0x804b3bc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b3cc:   10 00 00 00 54 00 00 00  5c cf ff ff 08 00 00 00   |....T...\.......|
0x804b3dc:   00 00 00 00 1c 00 00 00  68 00 00 00 6e d0 ff ff   |........h...n...|
0x804b3ec:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b3fc:   04 04 00 00 20 00 00 00  88 00 00 00 5e d0 ff ff   |.... .......^...|
0x804b40c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b41c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b42c:   68 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804b43c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b44c:   66 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |f...(....A....B.|
0x804b45c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b46c:   6e d0 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |n...*....A....B.|
0x804b47c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b48c:   78 d0 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |x...)....A....B.|
0x804b49c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b4ac:   81 d0 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b4bc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b4cc:   a4 d0 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b4dc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b4ec:   c5 d0 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b4fc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b50c:   90 01 00 00 f9 d0 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b51c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b52c:   1c 00 00 00 b4 01 00 00  27 d1 ff ff 3d 00 00 00   |........'...=...|
0x804b53c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b54c:   1c 00 00 00 d4 01 00 00  44 d1 ff ff 37 00 00 00   |........D...7...|
0x804b55c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b56c:   1c 00 00 00 f4 01 00 00  5b d1 ff ff 1f 00 00 00   |........[.......|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b58c:   1c 00 00 00 14 02 00 00  5a d1 ff ff 2a 00 00 00   |........Z...*...|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5ac:   1c 00 00 00 34 02 00 00  64 d1 ff ff 2c 00 00 00   |....4...d...,...|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b5cc:   1c 00 00 00 54 02 00 00  70 d1 ff ff 2b 00 00 00   |....T...p...+...|
0x804b5dc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b5ec:   1c 00 00 00 74 02 00 00  7b d1 ff ff 49 00 00 00   |....t...{...I...|
0x804b5fc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b60c:   1c 00 00 00 94 02 00 00  a4 d1 ff ff 47 00 00 00   |............G...|
0x804b61c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b62c:   20 00 00 00 b4 02 00 00  cb d1 ff ff 5a 00 00 00   | ...........Z...|
0x804b63c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b64c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 01 d2 ff ff   |.... ...........|
0x804b65c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b66c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b67c:   31 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |1...?....A....B.|
0x804b68c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b69c:   50 d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |P...9....A....B.|
0x804b6ac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b6bc:   69 d2 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |i..."....A....B.|
0x804b6cc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b6dc:   6b d2 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |k...N....A....B.|
0x804b6ec:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b6fc:   99 d2 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b70c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b71c:   b5 d2 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b72c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b73c:   1e d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b74c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b75c:   30 d3 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |0...0....A....B.|
0x804b76c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b77c:   40 d3 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |@...E....A....B.|
0x804b78c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b79c:   65 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |e...?....A....B.|
0x804b7ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b7bc:   84 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b7cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b7dc:   96 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b7fc:   a2 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b80c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b81c:   a0 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b82c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b83c:   a8 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b84c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b85c:   ad d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b86c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b87c:   b2 d3 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b88c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b89c:   c9 d3 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b8ac:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b8bc:   dd d3 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b8cc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b8dc:   60 05 00 00 0b d4 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b8ec:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b8fc:   1c 00 00 00 84 05 00 00  33 d4 ff ff 37 00 00 00   |........3...7...|
0x804b90c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b91c:   1c 00 00 00 a4 05 00 00  4a d4 ff ff 31 00 00 00   |........J...1...|
0x804b92c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b93c:   1c 00 00 00 c4 05 00 00  5b d4 ff ff 1f 00 00 00   |........[.......|
0x804b94c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b95c:   1c 00 00 00 e4 05 00 00  5a d4 ff ff 2a 00 00 00   |........Z...*...|
0x804b96c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b97c:   1c 00 00 00 04 06 00 00  64 d4 ff ff 28 00 00 00   |........d...(...|
0x804b98c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b99c:   1c 00 00 00 24 06 00 00  6c d4 ff ff 29 00 00 00   |....$...l...)...|
0x804b9ac:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b9bc:   1c 00 00 00 44 06 00 00  75 d4 ff ff 3c 00 00 00   |....D...u...<...|
0x804b9cc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b9dc:   1c 00 00 00 64 06 00 00  91 d4 ff ff 3a 00 00 00   |....d.......:...|
0x804b9ec:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b9fc:   20 00 00 00 84 06 00 00  ab d4 ff ff 53 00 00 00   | ...........S...|
0x804ba0c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804ba1c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 da d4 ff ff   |.... ...........|
0x804ba2c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804ba3c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804ba4c:   03 d5 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804ba5c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804ba6c:   1b d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba7c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804ba8c:   2d d5 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804ba9c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804baac:   21 d5 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |!........A....B.|
0x804babc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bacc:   18 d5 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804badc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804baec:   0d d5 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bafc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bb0c:   03 d5 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bb1c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bb2c:   0a d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bb3c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bb4c:   0f d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bb5c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bb6c:   2e d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bb7c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bb8c:   47 d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |G...,....A....B.|
0x804bb9c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bbac:   53 d5 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |S...&....A....B.|
0x804bbbc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bbcc:   59 d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Y...B....A....B.|
0x804bbdc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bbec:   7b d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |{...B....A....B.|
0x804bbfc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bc0c:   9d d5 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bc1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bc2c:   bf d5 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bc3c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bc4c:   14 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bc5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bc6c:   51 d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Q...]....A....B.|
0x804bc7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bc8c:   8e d6 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bc9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bcac:   cb d6 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcbc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bccc:   3b d7 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |;...d....A....B.|
0x804bcdc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bcec:   7f d7 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bcfc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bd0c:   cf d7 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bd1c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bd2c:   b0 09 00 00 f2 d7 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bd3c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bd4c:   d0 09 00 00 27 d8 ff ff  47 00 00 00 00 41 0e 08   |....'...G....A..|
0x804bd5c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bd6c:   20 00 00 00 f4 09 00 00  4a d8 ff ff 68 00 00 00   | .......J...h...|
0x804bd7c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bd8c:   0c 04 04 00 20 00 00 00  18 0a 00 00 8e d8 ff ff   |.... ...........|
0x804bd9c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bdac:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804bdbc:   98 d8 ff ff c3 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdcc:   05 46 87 03 86 04 83 05  03 b6 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804bddc:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bdec:   2b da ff ff 1c 13 00 00  00 41 0e 08 85 02 42 0d   |+........A....B.|
0x804bdfc:   05 49 87 03 86 04 83 05  03 0c 13 c3 41 c6 41 c7   |.I..........A.A.|
0x804be0c:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804be1c:   17 ed ff ff a2 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804be2c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 8d   |.u.D..ux....u|..|
0x804be3c:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804be4c:   10 00 00 00 d4 0a 00 00  81 f0 ff ff 04 00 00 00   |................|
0x804be5c:   00 00 00 00 10 00 00 00  e8 0a 00 00 71 f0 ff ff   |............q...|
0x804be6c:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804be7c:   64 f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |d...]....A....A.|
0x804be8c:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804be9c:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804beac:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804bebc:   0e 04 00 00 10 00 00 00  48 0b 00 00 78 f0 ff ff   |........H...x...|
0x804becc:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 44 af 04 08  19 00 00 00 0c cf 04 08   |....D...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 24 03 f7 00   |............$...|
0x804d028:   2c e3 20 43 65 6b ed aa  01 00 00 00 fa ff ff ff   |,. Cek..........|
0x804d038:   c8 05 ff c8 01 00 f9 ff  f6 ff 00 00 04 04 aa d5   |................|
0x804d048:   b2 00 00 00 07 00 00 00  2d a5 c2 fe 01 00 01 00   |........-.......|
0x804d058:   ef 00 00 00 01 00 00 00  fc 5f 00 00 fa ff ff ff   |........._......|
0x804d068:   ff ff ff ff 42 d3 fc 07  ff ??                     |....B....?      |
