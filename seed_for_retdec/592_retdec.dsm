;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:54:19
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 40 d1 ff ff               	lea eax, [ebx - 0x2ec0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 e0 d0 ff ff               	lea eax, [ebx - 0x2f20]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 b4 9d 04 08               	mov eax, 0x8049db4
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 60 d0 04 08                  	mov eax, 0x804d060
0x80483a5:   3d 60 d0 04 08                  	cmp eax, 0x804d060
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 60 d0 04 08                  	push 0x804d060
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 60 d0 04 08                  	mov eax, 0x804d060
0x80483e5:   2d 60 d0 04 08                  	sub eax, 0x804d060
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 60 d0 04 08                  	push 0x804d060
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 74 1c 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 60 1c 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 60 d1 ff ff               	lea edx, [eax - 0x2ea0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 33 1c 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 15 1c 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 ed 1b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 c3 1b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 9a 1b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 57 1b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 15 1b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 bd 1a 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 6c 1a 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 2f 1a 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 f8 19 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 d9 19 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 af 19 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 83 19 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 58 19 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 0f 19 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 c7 18 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 6d 18 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 1a 18 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 db 17 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 a5 17 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 83 17 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 35 17 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 f9 16 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 70 16 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 3e 16 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 0e 16 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 c9 15 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 8a 15 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 58 15 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 29 15 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 0b 15 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 e3 14 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 be 14 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 99 14 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 62 14 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 2d 14 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 db 13 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 90 13 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 59 13 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 28 13 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 09 13 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 df 12 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 b7 12 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 8e 12 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 52 12 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 17 12 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 c4 11 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 78 11 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 40 11 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 11 11 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 fd 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 e6 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 d1 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 bb 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 94 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 6f 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 30 10 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 f7 0f 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 cb 0f 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 a5 0f 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 63 0f 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 34 d2 ff ff               	fld dword ptr [eax - 0x2dcc]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 38 d2 ff ff               	fld dword ptr [eax - 0x2dc8]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 21 0f 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 3c d2 ff ff               	fld dword ptr [eax - 0x2dc4]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 40 d2 ff ff               	fld dword ptr [eax - 0x2dc0]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 44 d2 ff ff               	fld dword ptr [eax - 0x2dbc]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 df 0e 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 48 d2 ff ff               	fld dword ptr [eax - 0x2db8]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 4c d2 ff ff               	fld dword ptr [eax - 0x2db4]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 50 d2 ff ff               	fld dword ptr [eax - 0x2db0]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 67 0e 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 0a 0e 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 58 d2 ff ff               	fld qword ptr [eax - 0x2da8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 60 d2 ff ff               	fld qword ptr [eax - 0x2da0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 ad 0d 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 68 d2 ff ff               	fld qword ptr [eax - 0x2d98]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 70 d2 ff ff               	fld qword ptr [eax - 0x2d90]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 50 0d 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 80 d2 ff ff               	fld qword ptr [eax - 0x2d80]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 88 d2 ff ff               	fld qword ptr [eax - 0x2d78]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 90 d2 ff ff               	fld qword ptr [eax - 0x2d70]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 c0 0c 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 98 d2 ff ff               	fld dword ptr [eax - 0x2d68]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 9c d2 ff ff               	fld dword ptr [eax - 0x2d64]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 5c 0c 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 eb 0b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 a8 0b 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 70 d1 ff ff               	lea eax, [ebx - 0x2e90]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 94 d1 ff ff               	lea eax, [ebx - 0x2e6c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049785
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 3c                        	sub esp, 0x3c
0x804962f:   e8 9e 0a 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x804963c:   8b 4d 28                        	mov ecx, dword ptr [ebp + 0x28]
0x804963f:   8b 5d 2c                        	mov ebx, dword ptr [ebp + 0x2c]
0x8049642:   8b 75 30                        	mov esi, dword ptr [ebp + 0x30]
0x8049645:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049648:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964b:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804964e:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049651:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049654:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049657:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804965a:   8b 75 40                        	mov esi, dword ptr [ebp + 0x40]
0x804965d:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x8049660:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x8049663:   8b 75 5c                        	mov esi, dword ptr [ebp + 0x5c]
0x8049666:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x8049669:   89 ca                           	mov edx, ecx
0x804966b:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x804966f:   89 da                           	mov edx, ebx
0x8049671:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x8049674:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x8049678:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x804967c:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x8049680:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x8049684:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x8049688:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x804968b:   0f b6 55 bc                     	movzx edx, byte ptr [ebp - 0x44]
0x804968f:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x8049692:   0f b6 55 b8                     	movzx edx, byte ptr [ebp - 0x48]
0x8049696:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x8049699:   89 fa                           	mov edx, edi
0x804969b:   66 89 55 d0                     	mov word ptr [ebp - 0x30], dx
0x804969f:   89 f2                           	mov edx, esi
0x80496a1:   88 55 cc                        	mov byte ptr [ebp - 0x34], dl
0x80496a4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496a7:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496ad:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496b0:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496b6:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496b9:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496bf:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496c2:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496c8:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496cc:   88 90 34 00 00 00               	mov byte ptr [eax + 0x34], dl
0x80496d2:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496d5:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496db:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496de:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496e4:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496e7:   89 90 84 04 00 00               	mov dword ptr [eax + 0x484], edx
0x80496ed:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496f1:   66 89 90 40 00 00 00            	mov word ptr [eax + 0x40], dx
0x80496f8:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x80496fc:   88 90 42 00 00 00               	mov byte ptr [eax + 0x42], dl
0x8049702:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049706:   66 89 90 44 00 00 00            	mov word ptr [eax + 0x44], dx
0x804970d:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049711:   66 89 90 46 00 00 00            	mov word ptr [eax + 0x46], dx
0x8049718:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x804971c:   88 90 48 00 00 00               	mov byte ptr [eax + 0x48], dl
0x8049722:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x8049726:   88 90 49 00 00 00               	mov byte ptr [eax + 0x49], dl
0x804972c:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049730:   88 90 4a 00 00 00               	mov byte ptr [eax + 0x4a], dl
0x8049736:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049739:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x804973f:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049742:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x8049748:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x804974b:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x8049751:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x8049754:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x804975a:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804975d:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049763:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x8049767:   66 89 90 88 04 00 00            	mov word ptr [eax + 0x488], dx
0x804976e:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x8049772:   88 90 8a 04 00 00               	mov byte ptr [eax + 0x48a], dl
0x8049778:   b8 00 00 00 00                  	mov eax, 0
0x804977d:   83 c4 3c                        	add esp, 0x3c
0x8049780:   5b                              	pop ebx
0x8049781:   5e                              	pop esi
0x8049782:   5f                              	pop edi
0x8049783:   5d                              	pop ebp
0x8049784:   c3                              	ret 
; function: func_1 at 0x8049785 -- 0x8049db4
0x8049785:   55                              	push ebp
0x8049786:   89 e5                           	mov ebp, esp
0x8049788:   57                              	push edi
0x8049789:   56                              	push esi
0x804978a:   53                              	push ebx
0x804978b:   81 ec d0 00 00 00               	sub esp, 0xd0
0x8049791:   e8 3c 09 00 00                  	call 0x804a0d2 <__x86.get_pc_thunk.ax>
0x8049796:   05 6a 38 00 00                  	add eax, 0x386a
0x804979b:   c7 45 f0 ff ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffff
0x80497a2:   c7 45 ec 58 db e2 04            	mov dword ptr [ebp - 0x14], 0x4e2db58
0x80497a9:   c7 45 e8 57 9e d5 9a            	mov dword ptr [ebp - 0x18], 0x9ad59e57
0x80497b0:   c7 45 e4 00 ca 17 5e            	mov dword ptr [ebp - 0x1c], 0x5e17ca00
0x80497b7:   c6 45 e3 bf                     	mov byte ptr [ebp - 0x1d], 0xbf
0x80497bb:   c7 45 dc 97 c0 2d dd            	mov dword ptr [ebp - 0x24], 0xdd2dc097
0x80497c2:   c7 45 d8 f7 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff7
0x80497c9:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x80497d3:   66 c7 45 9a f6 6d               	mov word ptr [ebp - 0x66], 0x6df6
0x80497d9:   c6 85 63 ff ff ff f8            	mov byte ptr [ebp - 0x9d], 0xf8
0x80497e0:   66 c7 85 60 ff ff ff 01 00      	mov word ptr [ebp - 0xa0], 1
0x80497e9:   66 c7 45 c8 01 00               	mov word ptr [ebp - 0x38], 1
0x80497ef:   c6 45 c7 ff                     	mov byte ptr [ebp - 0x39], 0xff
0x80497f3:   c6 45 c6 ff                     	mov byte ptr [ebp - 0x3a], 0xff
0x80497f7:   c6 45 c5 01                     	mov byte ptr [ebp - 0x3b], 1
0x80497fb:   c7 45 c0 03 78 ab 95            	mov dword ptr [ebp - 0x40], 0x95ab7803
0x8049802:   c7 45 bc 08 00 00 00            	mov dword ptr [ebp - 0x44], 8
0x8049809:   c7 45 b8 86 e6 68 4a            	mov dword ptr [ebp - 0x48], 0x4a68e686
0x8049810:   c7 45 b4 93 df a4 0b            	mov dword ptr [ebp - 0x4c], 0xba4df93
0x8049817:   c7 45 b0 67 c7 e9 ce            	mov dword ptr [ebp - 0x50], 0xcee9c767
0x804981e:   66 c7 45 ae 00 00               	mov word ptr [ebp - 0x52], 0
0x8049824:   c6 45 ad 00                     	mov byte ptr [ebp - 0x53], 0
0x8049828:   c7 45 a8 d8 aa 95 3e            	mov dword ptr [ebp - 0x58], 0x3e95aad8
0x804982f:   c6 45 a7 07                     	mov byte ptr [ebp - 0x59], 7
0x8049833:   c6 45 a6 00                     	mov byte ptr [ebp - 0x5a], 0
0x8049837:   66 c7 45 a4 01 00               	mov word ptr [ebp - 0x5c], 1
0x804983d:   c7 45 a0 6d a6 a7 01            	mov dword ptr [ebp - 0x60], 0x1a7a66d
0x8049844:   66 c7 45 d6 dc 90               	mov word ptr [ebp - 0x2a], 0x90dc
0x804984a:   c7 45 9c f1 bb 80 b2            	mov dword ptr [ebp - 0x64], 0xb280bbf1
0x8049851:   c6 85 5f ff ff ff d7            	mov byte ptr [ebp - 0xa1], 0xd7
0x8049858:   c7 85 58 ff ff ff bb 78 0c 6b   	mov dword ptr [ebp - 0xa8], 0x6b0c78bb
0x8049862:   c7 85 54 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffffb
0x804986c:   c7 85 50 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xb0], 2
0x8049876:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804987d:   e9 2a 04 00 00                  	jmp 0x8049cac <func_1+0x527>
0x8049882:   c7 45 d0 1e 3e 75 88            	mov dword ptr [ebp - 0x30], 0x88753e1e
0x8049889:   c6 45 99 a6                     	mov byte ptr [ebp - 0x67], 0xa6
0x804988d:   66 c7 45 96 84 23               	mov word ptr [ebp - 0x6a], 0x2384
0x8049893:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x804989a:   c7 45 8c 88 0e 93 91            	mov dword ptr [ebp - 0x74], 0x91930e88
0x80498a1:   66 c7 45 8a 59 ae               	mov word ptr [ebp - 0x76], 0xae59
0x80498a7:   b8 01 00 00 00                  	mov eax, 1
0x80498ac:   99                              	cdq 
0x80498ad:   f7 7d e8                        	idiv dword ptr [ebp - 0x18]
0x80498b0:   89 d0                           	mov eax, edx
0x80498b2:   85 c0                           	test eax, eax
0x80498b4:   74 0d                           	je 0x80498c3 <func_1+0x13e>
0x80498b6:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x80498ba:   74 07                           	je 0x80498c3 <func_1+0x13e>
0x80498bc:   b8 01 00 00 00                  	mov eax, 1
0x80498c1:   eb 05                           	jmp 0x80498c8 <func_1+0x143>
0x80498c3:   b8 00 00 00 00                  	mov eax, 0
0x80498c8:   3d 8f 00 00 00                  	cmp eax, 0x8f
0x80498cd:   0f 9e c0                        	setle al
0x80498d0:   89 c2                           	mov edx, eax
0x80498d2:   0f b6 45 a7                     	movzx eax, byte ptr [ebp - 0x59]
0x80498d6:   31 d0                           	xor eax, edx
0x80498d8:   88 45 a7                        	mov byte ptr [ebp - 0x59], al
0x80498db:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x80498de:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x80498e1:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x80498e5:   74 04                           	je 0x80498eb <func_1+0x166>
0x80498e7:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x80498eb:   66 c7 45 88 05 00               	mov word ptr [ebp - 0x78], 5
0x80498f1:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x80498f8:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x80498ff:   c7 85 7c ff ff ff d7 20 37 f8   	mov dword ptr [ebp - 0x84], 0xf83720d7
0x8049909:   0f b6 45 99                     	movzx eax, byte ptr [ebp - 0x67]
0x804990d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049910:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049914:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x8049918:   66 83 7d 88 fe                  	cmp word ptr [ebp - 0x78], -2
0x804991d:   0f 9c c2                        	setl dl
0x8049920:   0f b6 d2                        	movzx edx, dl
0x8049923:   39 d1                           	cmp ecx, edx
0x8049925:   74 06                           	je 0x804992d <func_1+0x1a8>
0x8049927:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804992b:   74 07                           	je 0x8049934 <func_1+0x1af>
0x804992d:   ba 01 00 00 00                  	mov edx, 1
0x8049932:   eb 05                           	jmp 0x8049939 <func_1+0x1b4>
0x8049934:   ba 00 00 00 00                  	mov edx, 0
0x8049939:   39 c2                           	cmp edx, eax
0x804993b:   74 47                           	je 0x8049984 <func_1+0x1ff>
0x804993d:   c6 45 cf 00                     	mov byte ptr [ebp - 0x31], 0
0x8049941:   81 7d e4 26 6a 00 00            	cmp dword ptr [ebp - 0x1c], 0x6a26
0x8049948:   0f 9e c0                        	setle al
0x804994b:   0f b6 c0                        	movzx eax, al
0x804994e:   f7 d0                           	not eax
0x8049950:   21 45 84                        	and dword ptr [ebp - 0x7c], eax
0x8049953:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049956:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049959:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049960:   eb 08                           	jmp 0x804996a <func_1+0x1e5>
0x8049962:   80 45 cf 01                     	add byte ptr [ebp - 0x31], 1
0x8049966:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x804996a:   83 7d d0 26                     	cmp dword ptr [ebp - 0x30], 0x26
0x804996e:   77 f2                           	ja 0x8049962 <func_1+0x1dd>
0x8049970:   66 83 7d 88 00                  	cmp word ptr [ebp - 0x78], 0
0x8049975:   0f 85 29 03 00 00               	jne 0x8049ca4 <func_1+0x51f>
0x804997b:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x804997f:   e9 ec 02 00 00                  	jmp 0x8049c70 <func_1+0x4eb>
0x8049984:   c6 85 7b ff ff ff 8f            	mov byte ptr [ebp - 0x85], 0x8f
0x804998b:   66 c7 45 cc fe ff               	mov word ptr [ebp - 0x34], 0xfffe
0x8049991:   c7 85 74 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x8c], 0
0x804999b:   c7 85 70 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0x90], 0xfffffffa
0x80499a5:   c6 85 6f ff ff ff f7            	mov byte ptr [ebp - 0x91], 0xf7
0x80499ac:   66 c7 45 ca bd 43               	mov word ptr [ebp - 0x36], 0x43bd
0x80499b2:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x80499b6:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x80499ba:   74 1b                           	je 0x80499d7 <func_1+0x252>
0x80499bc:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x80499c0:   74 15                           	je 0x80499d7 <func_1+0x252>
0x80499c2:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x80499c9:   83 e0 01                        	and eax, 1
0x80499cc:   85 c0                           	test eax, eax
0x80499ce:   74 07                           	je 0x80499d7 <func_1+0x252>
0x80499d0:   b8 01 00 00 00                  	mov eax, 1
0x80499d5:   eb 05                           	jmp 0x80499dc <func_1+0x257>
0x80499d7:   b8 00 00 00 00                  	mov eax, 0
0x80499dc:   0f be d0                        	movsx edx, al
0x80499df:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x80499e2:   0f be c0                        	movsx eax, al
0x80499e5:   89 c1                           	mov ecx, eax
0x80499e7:   d3 fa                           	sar edx, cl
0x80499e9:   89 d0                           	mov eax, edx
0x80499eb:   85 c0                           	test eax, eax
0x80499ed:   75 09                           	jne 0x80499f8 <func_1+0x273>
0x80499ef:   80 bd 7b ff ff ff 00            	cmp byte ptr [ebp - 0x85], 0
0x80499f6:   74 07                           	je 0x80499ff <func_1+0x27a>
0x80499f8:   b8 01 00 00 00                  	mov eax, 1
0x80499fd:   eb 05                           	jmp 0x8049a04 <func_1+0x27f>
0x80499ff:   b8 00 00 00 00                  	mov eax, 0
0x8049a04:   89 c1                           	mov ecx, eax
0x8049a06:   ba 75 03 d2 ac                  	mov edx, 0xacd20375
0x8049a0b:   89 c8                           	mov eax, ecx
0x8049a0d:   f7 e2                           	mul edx
0x8049a0f:   89 d0                           	mov eax, edx
0x8049a11:   c1 e8 1b                        	shr eax, 0x1b
0x8049a14:   69 c0 6f b7 d9 0b               	imul eax, eax, 0xbd9b76f
0x8049a1a:   29 c1                           	sub ecx, eax
0x8049a1c:   66 c7 85 6c ff ff ff 0e 85      	mov word ptr [ebp - 0x94], 0x850e
0x8049a25:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049a28:   8d 50 01                        	lea edx, [eax + 1]
0x8049a2b:   89 55 d8                        	mov dword ptr [ebp - 0x28], edx
0x8049a2e:   66 89 45 9a                     	mov word ptr [ebp - 0x66], ax
0x8049a32:   0f be 45 e3                     	movsx eax, byte ptr [ebp - 0x1d]
0x8049a36:   05 8c f2 53 03                  	add eax, 0x353f28c
0x8049a3b:   ba 00 00 00 00                  	mov edx, 0
0x8049a40:   f7 b5 64 ff ff ff               	div dword ptr [ebp - 0x9c]
0x8049a46:   89 d0                           	mov eax, edx
0x8049a48:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x8049a4e:   0f bf 55 9a                     	movsx edx, word ptr [ebp - 0x66]
0x8049a52:   0f b6 45 a6                     	movzx eax, byte ptr [ebp - 0x5a]
0x8049a56:   39 c2                           	cmp edx, eax
0x8049a58:   0f 95 c0                        	setne al
0x8049a5b:   0f b6 d0                        	movzx edx, al
0x8049a5e:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x8049a62:   0f b7 c0                        	movzx eax, ax
0x8049a65:   89 c1                           	mov ecx, eax
0x8049a67:   d3 fa                           	sar edx, cl
0x8049a69:   89 d0                           	mov eax, edx
0x8049a6b:   0f be c0                        	movsx eax, al
0x8049a6e:   0f be 7d e3                     	movsx edi, byte ptr [ebp - 0x1d]
0x8049a72:   99                              	cdq 
0x8049a73:   f7 ff                           	idiv edi
0x8049a75:   83 e8 1e                        	sub eax, 0x1e
0x8049a78:   d0 e8                           	shr al, 1
0x8049a7a:   0f b6 c0                        	movzx eax, al
0x8049a7d:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049a80:   66 c7 45 a4 fb ff               	mov word ptr [ebp - 0x5c], 0xfffb
0x8049a86:   66 83 7d a4 11                  	cmp word ptr [ebp - 0x5c], 0x11
0x8049a8b:   0f 84 9b 00 00 00               	je 0x8049b2c <func_1+0x3a7>
0x8049a91:   0f b6 45 ad                     	movzx eax, byte ptr [ebp - 0x53]
0x8049a95:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x8049a99:   0f b6 7d c5                     	movzx edi, byte ptr [ebp - 0x3b]
0x8049a9d:   0f be 75 c6                     	movsx esi, byte ptr [ebp - 0x3a]
0x8049aa1:   89 b5 30 ff ff ff               	mov dword ptr [ebp - 0xd0], esi
0x8049aa7:   0f be 5d c7                     	movsx ebx, byte ptr [ebp - 0x39]
0x8049aab:   89 9d 2c ff ff ff               	mov dword ptr [ebp - 0xd4], ebx
0x8049ab1:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x8049ab5:   89 8d 28 ff ff ff               	mov dword ptr [ebp - 0xd8], ecx
0x8049abb:   0f bf b5 60 ff ff ff            	movsx esi, word ptr [ebp - 0xa0]
0x8049ac2:   89 b5 24 ff ff ff               	mov dword ptr [ebp - 0xdc], esi
0x8049ac8:   0f be b5 63 ff ff ff            	movsx esi, byte ptr [ebp - 0x9d]
0x8049acf:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x8049ad3:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x8049ad7:   50                              	push eax
0x8049ad8:   52                              	push edx
0x8049ad9:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049adc:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049adf:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ae2:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ae5:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049ae8:   57                              	push edi
0x8049ae9:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x8049aef:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x8049af5:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x8049afb:   ff b5 24 ff ff ff               	push dword ptr [ebp - 0xdc]
0x8049b01:   56                              	push esi
0x8049b02:   53                              	push ebx
0x8049b03:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049b09:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049b0c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049b0f:   51                              	push ecx
0x8049b10:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049b13:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049b16:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049b19:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049b1c:   e8 05 fb ff ff                  	call 0x8049626 <set_var>
0x8049b21:   83 c4 58                        	add esp, 0x58
0x8049b24:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049b27:   e9 80 02 00 00                  	jmp 0x8049dac <func_1+0x627>
0x8049b2c:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x8049b30:   c0 e8 06                        	shr al, 6
0x8049b33:   0f b6 d8                        	movzx ebx, al
0x8049b36:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049b3a:   0f 95 c0                        	setne al
0x8049b3d:   0f b6 c0                        	movzx eax, al
0x8049b40:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x8049b46:   83 bd 74 ff ff ff 4d            	cmp dword ptr [ebp - 0x8c], 0x4d
0x8049b4d:   0f 9e c0                        	setle al
0x8049b50:   0f b6 c0                        	movzx eax, al
0x8049b53:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x8049b57:   99                              	cdq 
0x8049b58:   f7 f9                           	idiv ecx
0x8049b5a:   89 d0                           	mov eax, edx
0x8049b5c:   34 e8                           	xor al, 0xe8
0x8049b5e:   66 89 45 9a                     	mov word ptr [ebp - 0x66], ax
0x8049b62:   0f bf 55 9a                     	movsx edx, word ptr [ebp - 0x66]
0x8049b66:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049b69:   98                              	cwde 
0x8049b6a:   89 c1                           	mov ecx, eax
0x8049b6c:   d3 e2                           	shl edx, cl
0x8049b6e:   89 d0                           	mov eax, edx
0x8049b70:   09 d8                           	or eax, ebx
0x8049b72:   83 f8 ff                        	cmp eax, -1
0x8049b75:   0f 94 c0                        	sete al
0x8049b78:   0f b6 d0                        	movzx edx, al
0x8049b7b:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049b81:   98                              	cwde 
0x8049b82:   89 c1                           	mov ecx, eax
0x8049b84:   d3 fa                           	sar edx, cl
0x8049b86:   89 d0                           	mov eax, edx
0x8049b88:   0b 85 64 ff ff ff               	or eax, dword ptr [ebp - 0x9c]
0x8049b8e:   89 c2                           	mov edx, eax
0x8049b90:   0f b6 85 6f ff ff ff            	movzx eax, byte ptr [ebp - 0x91]
0x8049b97:   21 d0                           	and eax, edx
0x8049b99:   88 85 6f ff ff ff               	mov byte ptr [ebp - 0x91], al
0x8049b9f:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049ba2:   0a 85 6f ff ff ff               	or al, byte ptr [ebp - 0x91]
0x8049ba8:   22 85 7b ff ff ff               	and al, byte ptr [ebp - 0x85]
0x8049bae:   0f be d0                        	movsx edx, al
0x8049bb1:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x8049bb8:   0f be c0                        	movsx eax, al
0x8049bbb:   29 c2                           	sub edx, eax
0x8049bbd:   89 d0                           	mov eax, edx
0x8049bbf:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049bc2:   0f 95 c0                        	setne al
0x8049bc5:   0f b6 d0                        	movzx edx, al
0x8049bc8:   0f b7 85 6c ff ff ff            	movzx eax, word ptr [ebp - 0x94]
0x8049bcf:   39 c2                           	cmp edx, eax
0x8049bd1:   74 1d                           	je 0x8049bf0 <func_1+0x46b>
0x8049bd3:   c7 85 68 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x98], 0xffffffff
0x8049bdd:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049be1:   0f 85 d1 00 00 00               	jne 0x8049cb8 <func_1+0x533>
0x8049be7:   83 85 68 ff ff ff 01            	add dword ptr [ebp - 0x98], 1
0x8049bee:   eb 19                           	jmp 0x8049c09 <func_1+0x484>
0x8049bf0:   66 83 bd 6c ff ff ff 00         	cmp word ptr [ebp - 0x94], 0
0x8049bf8:   0f 85 bd 00 00 00               	jne 0x8049cbb <func_1+0x536>
0x8049bfe:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x8049c03:   0f 85 b5 00 00 00               	jne 0x8049cbe <func_1+0x539>
0x8049c09:   66 83 7d a4 00                  	cmp word ptr [ebp - 0x5c], 0
0x8049c0e:   0f 85 ad 00 00 00               	jne 0x8049cc1 <func_1+0x53c>
0x8049c14:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049c18:   74 0e                           	je 0x8049c28 <func_1+0x4a3>
0x8049c1a:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x8049c1f:   74 07                           	je 0x8049c28 <func_1+0x4a3>
0x8049c21:   b8 01 00 00 00                  	mov eax, 1
0x8049c26:   eb 05                           	jmp 0x8049c2d <func_1+0x4a8>
0x8049c28:   b8 00 00 00 00                  	mov eax, 0
0x8049c2d:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x8049c30:   66 c7 45 cc 18 00               	mov word ptr [ebp - 0x34], 0x18
0x8049c36:   eb 31                           	jmp 0x8049c69 <func_1+0x4e4>
0x8049c38:   c7 85 4c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xb4], 0xfffffff8
0x8049c42:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x8049c4c:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x8049c51:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x8049c58:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x8049c5e:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049c62:   83 e8 07                        	sub eax, 7
0x8049c65:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x8049c69:   66 83 7d cc 10                  	cmp word ptr [ebp - 0x34], 0x10
0x8049c6e:   7e c8                           	jle 0x8049c38 <func_1+0x4b3>
0x8049c70:   0f bf 45 c8                     	movsx eax, word ptr [ebp - 0x38]
0x8049c74:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049c77:   66 83 65 d6 01                  	and word ptr [ebp - 0x2a], 1
0x8049c7c:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c7f:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049c82:   c6 85 47 ff ff ff f6            	mov byte ptr [ebp - 0xb9], 0xf6
0x8049c89:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049c8d:   75 35                           	jne 0x8049cc4 <func_1+0x53f>
0x8049c8f:   66 83 bd 60 ff ff ff 00         	cmp word ptr [ebp - 0xa0], 0
0x8049c97:   75 0e                           	jne 0x8049ca7 <func_1+0x522>
0x8049c99:   80 bd 47 ff ff ff 00            	cmp byte ptr [ebp - 0xb9], 0
0x8049ca0:   75 25                           	jne 0x8049cc7 <func_1+0x542>
0x8049ca2:   eb 04                           	jmp 0x8049ca8 <func_1+0x523>
0x8049ca4:   90                              	nop 
0x8049ca5:   eb 01                           	jmp 0x8049ca8 <func_1+0x523>
0x8049ca7:   90                              	nop 
0x8049ca8:   83 45 e4 03                     	add dword ptr [ebp - 0x1c], 3
0x8049cac:   83 7d e4 0a                     	cmp dword ptr [ebp - 0x1c], 0xa
0x8049cb0:   0f 8f cc fb ff ff               	jg 0x8049882 <func_1+0xfd>
0x8049cb6:   eb 10                           	jmp 0x8049cc8 <func_1+0x543>
0x8049cb8:   90                              	nop 
0x8049cb9:   eb 0d                           	jmp 0x8049cc8 <func_1+0x543>
0x8049cbb:   90                              	nop 
0x8049cbc:   eb 0a                           	jmp 0x8049cc8 <func_1+0x543>
0x8049cbe:   90                              	nop 
0x8049cbf:   eb 07                           	jmp 0x8049cc8 <func_1+0x543>
0x8049cc1:   90                              	nop 
0x8049cc2:   eb 04                           	jmp 0x8049cc8 <func_1+0x543>
0x8049cc4:   90                              	nop 
0x8049cc5:   eb 01                           	jmp 0x8049cc8 <func_1+0x543>
0x8049cc7:   90                              	nop 
0x8049cc8:   c7 45 a0 0d 00 00 00            	mov dword ptr [ebp - 0x60], 0xd
0x8049ccf:   eb 39                           	jmp 0x8049d0a <func_1+0x585>
0x8049cd1:   c7 85 40 ff ff ff fe 19 0b 4d   	mov dword ptr [ebp - 0xc0], 0x4d0b19fe
0x8049cdb:   c7 85 3c ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xc4], 3
0x8049ce5:   c7 85 38 ff ff ff 88 23 34 4e   	mov dword ptr [ebp - 0xc8], 0x4e342388
0x8049cef:   c7 85 34 ff ff ff f3 4f ae 70   	mov dword ptr [ebp - 0xcc], 0x70ae4ff3
0x8049cf9:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x8049d00:   75 10                           	jne 0x8049d12 <func_1+0x58d>
0x8049d02:   80 45 ad 01                     	add byte ptr [ebp - 0x53], 1
0x8049d06:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x8049d0a:   83 7d a0 1a                     	cmp dword ptr [ebp - 0x60], 0x1a
0x8049d0e:   7f c1                           	jg 0x8049cd1 <func_1+0x54c>
0x8049d10:   eb 01                           	jmp 0x8049d13 <func_1+0x58e>
0x8049d12:   90                              	nop 
0x8049d13:   0f b6 45 ad                     	movzx eax, byte ptr [ebp - 0x53]
0x8049d17:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x8049d1b:   0f b6 7d c5                     	movzx edi, byte ptr [ebp - 0x3b]
0x8049d1f:   0f be 5d c6                     	movsx ebx, byte ptr [ebp - 0x3a]
0x8049d23:   89 9d 30 ff ff ff               	mov dword ptr [ebp - 0xd0], ebx
0x8049d29:   0f be 75 c7                     	movsx esi, byte ptr [ebp - 0x39]
0x8049d2d:   89 b5 2c ff ff ff               	mov dword ptr [ebp - 0xd4], esi
0x8049d33:   0f bf 4d c8                     	movsx ecx, word ptr [ebp - 0x38]
0x8049d37:   89 8d 28 ff ff ff               	mov dword ptr [ebp - 0xd8], ecx
0x8049d3d:   0f bf 9d 60 ff ff ff            	movsx ebx, word ptr [ebp - 0xa0]
0x8049d44:   89 9d 24 ff ff ff               	mov dword ptr [ebp - 0xdc], ebx
0x8049d4a:   0f be b5 63 ff ff ff            	movsx esi, byte ptr [ebp - 0x9d]
0x8049d51:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x8049d55:   0f be 4d e3                     	movsx ecx, byte ptr [ebp - 0x1d]
0x8049d59:   50                              	push eax
0x8049d5a:   52                              	push edx
0x8049d5b:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049d5e:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049d61:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049d64:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049d67:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049d6a:   57                              	push edi
0x8049d6b:   ff b5 30 ff ff ff               	push dword ptr [ebp - 0xd0]
0x8049d71:   ff b5 2c ff ff ff               	push dword ptr [ebp - 0xd4]
0x8049d77:   ff b5 28 ff ff ff               	push dword ptr [ebp - 0xd8]
0x8049d7d:   ff b5 24 ff ff ff               	push dword ptr [ebp - 0xdc]
0x8049d83:   56                              	push esi
0x8049d84:   53                              	push ebx
0x8049d85:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x8049d8b:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049d8e:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d91:   51                              	push ecx
0x8049d92:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049d95:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d98:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049d9b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049d9e:   e8 83 f8 ff ff                  	call 0x8049626 <set_var>
0x8049da3:   83 c4 58                        	add esp, 0x58
0x8049da6:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049dac:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x8049daf:   5b                              	pop ebx
0x8049db0:   5e                              	pop esi
0x8049db1:   5f                              	pop edi
0x8049db2:   5d                              	pop ebp
0x8049db3:   c3                              	ret 
; function: main at 0x8049db4 -- 0x804a0d2
0x8049db4:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x8049db8:   83 e4 f0                        	and esp, 0xfffffff0
0x8049dbb:   ff 71 fc                        	push dword ptr [ecx - 4]
0x8049dbe:   55                              	push ebp
0x8049dbf:   89 e5                           	mov ebp, esp
0x8049dc1:   53                              	push ebx
0x8049dc2:   51                              	push ecx
0x8049dc3:   83 ec 10                        	sub esp, 0x10
0x8049dc6:   e8 c5 e5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049dcb:   81 c3 35 32 00 00               	add ebx, 0x3235
0x8049dd1:   89 c8                           	mov eax, ecx
0x8049dd3:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x8049dda:   83 38 02                        	cmp dword ptr [eax], 2
0x8049ddd:   75 26                           	jne 0x8049e05 <main+0x51>
0x8049ddf:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x8049de2:   83 c0 04                        	add eax, 4
0x8049de5:   8b 00                           	mov eax, dword ptr [eax]
0x8049de7:   83 ec 08                        	sub esp, 8
0x8049dea:   8d 93 b8 d1 ff ff               	lea edx, [ebx - 0x2e48]
0x8049df0:   52                              	push edx
0x8049df1:   50                              	push eax
0x8049df2:   e8 09 e5 ff ff                  	call 0x8048300 <strcmp>
0x8049df7:   83 c4 10                        	add esp, 0x10
0x8049dfa:   85 c0                           	test eax, eax
0x8049dfc:   75 07                           	jne 0x8049e05 <main+0x51>
0x8049dfe:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x8049e05:   e8 4c e6 ff ff                  	call 0x8048456 <platform_main_begin>
0x8049e0a:   e8 5c f6 ff ff                  	call 0x804946b <crc32_gentab>
0x8049e0f:   e8 71 f9 ff ff                  	call 0x8049785 <func_1>
0x8049e14:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x8049e1a:   89 c2                           	mov edx, eax
0x8049e1c:   83 ec 04                        	sub esp, 4
0x8049e1f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049e22:   8d 83 ba d1 ff ff               	lea eax, [ebx - 0x2e46]
0x8049e28:   50                              	push eax
0x8049e29:   52                              	push edx
0x8049e2a:   e8 48 f7 ff ff                  	call 0x8049577 <transparent_crc>
0x8049e2f:   83 c4 10                        	add esp, 0x10
0x8049e32:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x8049e38:   89 c2                           	mov edx, eax
0x8049e3a:   83 ec 04                        	sub esp, 4
0x8049e3d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049e40:   8d 83 be d1 ff ff               	lea eax, [ebx - 0x2e42]
0x8049e46:   50                              	push eax
0x8049e47:   52                              	push edx
0x8049e48:   e8 2a f7 ff ff                  	call 0x8049577 <transparent_crc>
0x8049e4d:   83 c4 10                        	add esp, 0x10
0x8049e50:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x8049e56:   89 c2                           	mov edx, eax
0x8049e58:   83 ec 04                        	sub esp, 4
0x8049e5b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049e5e:   8d 83 c2 d1 ff ff               	lea eax, [ebx - 0x2e3e]
0x8049e64:   50                              	push eax
0x8049e65:   52                              	push edx
0x8049e66:   e8 0c f7 ff ff                  	call 0x8049577 <transparent_crc>
0x8049e6b:   83 c4 10                        	add esp, 0x10
0x8049e6e:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x8049e74:   89 c2                           	mov edx, eax
0x8049e76:   83 ec 04                        	sub esp, 4
0x8049e79:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049e7c:   8d 83 c6 d1 ff ff               	lea eax, [ebx - 0x2e3a]
0x8049e82:   50                              	push eax
0x8049e83:   52                              	push edx
0x8049e84:   e8 ee f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049e89:   83 c4 10                        	add esp, 0x10
0x8049e8c:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x8049e93:   0f be c0                        	movsx eax, al
0x8049e96:   83 ec 04                        	sub esp, 4
0x8049e99:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049e9c:   8d 93 ca d1 ff ff               	lea edx, [ebx - 0x2e36]
0x8049ea2:   52                              	push edx
0x8049ea3:   50                              	push eax
0x8049ea4:   e8 ce f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049ea9:   83 c4 10                        	add esp, 0x10
0x8049eac:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x8049eb2:   83 ec 04                        	sub esp, 4
0x8049eb5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049eb8:   8d 93 cf d1 ff ff               	lea edx, [ebx - 0x2e31]
0x8049ebe:   52                              	push edx
0x8049ebf:   50                              	push eax
0x8049ec0:   e8 b2 f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049ec5:   83 c4 10                        	add esp, 0x10
0x8049ec8:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x8049ece:   83 ec 04                        	sub esp, 4
0x8049ed1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049ed4:   8d 93 d4 d1 ff ff               	lea edx, [ebx - 0x2e2c]
0x8049eda:   52                              	push edx
0x8049edb:   50                              	push eax
0x8049edc:   e8 96 f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049ee1:   83 c4 10                        	add esp, 0x10
0x8049ee4:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x8049eea:   83 ec 04                        	sub esp, 4
0x8049eed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049ef0:   8d 93 d9 d1 ff ff               	lea edx, [ebx - 0x2e27]
0x8049ef6:   52                              	push edx
0x8049ef7:   50                              	push eax
0x8049ef8:   e8 7a f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049efd:   83 c4 10                        	add esp, 0x10
0x8049f00:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x8049f07:   98                              	cwde 
0x8049f08:   83 ec 04                        	sub esp, 4
0x8049f0b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049f0e:   8d 93 de d1 ff ff               	lea edx, [ebx - 0x2e22]
0x8049f14:   52                              	push edx
0x8049f15:   50                              	push eax
0x8049f16:   e8 5c f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049f1b:   83 c4 10                        	add esp, 0x10
0x8049f1e:   0f b6 83 42 00 00 00            	movzx eax, byte ptr [ebx + 0x42]
0x8049f25:   0f be c0                        	movsx eax, al
0x8049f28:   83 ec 04                        	sub esp, 4
0x8049f2b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049f2e:   8d 93 e3 d1 ff ff               	lea edx, [ebx - 0x2e1d]
0x8049f34:   52                              	push edx
0x8049f35:   50                              	push eax
0x8049f36:   e8 3c f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049f3b:   83 c4 10                        	add esp, 0x10
0x8049f3e:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x8049f45:   98                              	cwde 
0x8049f46:   83 ec 04                        	sub esp, 4
0x8049f49:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049f4c:   8d 93 e9 d1 ff ff               	lea edx, [ebx - 0x2e17]
0x8049f52:   52                              	push edx
0x8049f53:   50                              	push eax
0x8049f54:   e8 1e f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049f59:   83 c4 10                        	add esp, 0x10
0x8049f5c:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x8049f63:   98                              	cwde 
0x8049f64:   83 ec 04                        	sub esp, 4
0x8049f67:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049f6a:   8d 93 ef d1 ff ff               	lea edx, [ebx - 0x2e11]
0x8049f70:   52                              	push edx
0x8049f71:   50                              	push eax
0x8049f72:   e8 00 f6 ff ff                  	call 0x8049577 <transparent_crc>
0x8049f77:   83 c4 10                        	add esp, 0x10
0x8049f7a:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x8049f81:   0f be c0                        	movsx eax, al
0x8049f84:   83 ec 04                        	sub esp, 4
0x8049f87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049f8a:   8d 93 f5 d1 ff ff               	lea edx, [ebx - 0x2e0b]
0x8049f90:   52                              	push edx
0x8049f91:   50                              	push eax
0x8049f92:   e8 e0 f5 ff ff                  	call 0x8049577 <transparent_crc>
0x8049f97:   83 c4 10                        	add esp, 0x10
0x8049f9a:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x8049fa1:   0f be c0                        	movsx eax, al
0x8049fa4:   83 ec 04                        	sub esp, 4
0x8049fa7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049faa:   8d 93 fb d1 ff ff               	lea edx, [ebx - 0x2e05]
0x8049fb0:   52                              	push edx
0x8049fb1:   50                              	push eax
0x8049fb2:   e8 c0 f5 ff ff                  	call 0x8049577 <transparent_crc>
0x8049fb7:   83 c4 10                        	add esp, 0x10
0x8049fba:   0f b6 83 4a 00 00 00            	movzx eax, byte ptr [ebx + 0x4a]
0x8049fc1:   0f b6 c0                        	movzx eax, al
0x8049fc4:   83 ec 04                        	sub esp, 4
0x8049fc7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049fca:   8d 93 01 d2 ff ff               	lea edx, [ebx - 0x2dff]
0x8049fd0:   52                              	push edx
0x8049fd1:   50                              	push eax
0x8049fd2:   e8 a0 f5 ff ff                  	call 0x8049577 <transparent_crc>
0x8049fd7:   83 c4 10                        	add esp, 0x10
0x8049fda:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x8049fe0:   83 ec 04                        	sub esp, 4
0x8049fe3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x8049fe6:   8d 93 07 d2 ff ff               	lea edx, [ebx - 0x2df9]
0x8049fec:   52                              	push edx
0x8049fed:   50                              	push eax
0x8049fee:   e8 84 f5 ff ff                  	call 0x8049577 <transparent_crc>
0x8049ff3:   83 c4 10                        	add esp, 0x10
0x8049ff6:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x8049ffc:   89 c2                           	mov edx, eax
0x8049ffe:   83 ec 04                        	sub esp, 4
0x804a001:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a004:   8d 83 0d d2 ff ff               	lea eax, [ebx - 0x2df3]
0x804a00a:   50                              	push eax
0x804a00b:   52                              	push edx
0x804a00c:   e8 66 f5 ff ff                  	call 0x8049577 <transparent_crc>
0x804a011:   83 c4 10                        	add esp, 0x10
0x804a014:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a01a:   83 ec 04                        	sub esp, 4
0x804a01d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a020:   8d 93 13 d2 ff ff               	lea edx, [ebx - 0x2ded]
0x804a026:   52                              	push edx
0x804a027:   50                              	push eax
0x804a028:   e8 4a f5 ff ff                  	call 0x8049577 <transparent_crc>
0x804a02d:   83 c4 10                        	add esp, 0x10
0x804a030:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a036:   89 c2                           	mov edx, eax
0x804a038:   83 ec 04                        	sub esp, 4
0x804a03b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a03e:   8d 83 19 d2 ff ff               	lea eax, [ebx - 0x2de7]
0x804a044:   50                              	push eax
0x804a045:   52                              	push edx
0x804a046:   e8 2c f5 ff ff                  	call 0x8049577 <transparent_crc>
0x804a04b:   83 c4 10                        	add esp, 0x10
0x804a04e:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a054:   89 c2                           	mov edx, eax
0x804a056:   83 ec 04                        	sub esp, 4
0x804a059:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a05c:   8d 83 1f d2 ff ff               	lea eax, [ebx - 0x2de1]
0x804a062:   50                              	push eax
0x804a063:   52                              	push edx
0x804a064:   e8 0e f5 ff ff                  	call 0x8049577 <transparent_crc>
0x804a069:   83 c4 10                        	add esp, 0x10
0x804a06c:   0f b7 83 88 04 00 00            	movzx eax, word ptr [ebx + 0x488]
0x804a073:   0f b7 c0                        	movzx eax, ax
0x804a076:   83 ec 04                        	sub esp, 4
0x804a079:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a07c:   8d 93 25 d2 ff ff               	lea edx, [ebx - 0x2ddb]
0x804a082:   52                              	push edx
0x804a083:   50                              	push eax
0x804a084:   e8 ee f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a089:   83 c4 10                        	add esp, 0x10
0x804a08c:   0f b6 83 8a 04 00 00            	movzx eax, byte ptr [ebx + 0x48a]
0x804a093:   0f b6 c0                        	movzx eax, al
0x804a096:   83 ec 04                        	sub esp, 4
0x804a099:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a09c:   8d 93 2b d2 ff ff               	lea edx, [ebx - 0x2dd5]
0x804a0a2:   52                              	push edx
0x804a0a3:   50                              	push eax
0x804a0a4:   e8 ce f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a0a9:   83 c4 10                        	add esp, 0x10
0x804a0ac:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a0b2:   f7 d0                           	not eax
0x804a0b4:   83 ec 08                        	sub esp, 8
0x804a0b7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a0ba:   50                              	push eax
0x804a0bb:   e8 a6 e3 ff ff                  	call 0x8048466 <platform_main_end>
0x804a0c0:   83 c4 10                        	add esp, 0x10
0x804a0c3:   b8 00 00 00 00                  	mov eax, 0
0x804a0c8:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a0cb:   59                              	pop ecx
0x804a0cc:   5b                              	pop ebx
0x804a0cd:   5d                              	pop ebp
0x804a0ce:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a0d1:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a0d2 -- 0x804a0d6
0x804a0d2:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a0d5:   c3                              	ret 
; data inside code section at 0x804a0d6 -- 0x804a0e0
0x804a0d6:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804a0e0 -- 0x804a13d
0x804a0e0:   55                              	push ebp
0x804a0e1:   57                              	push edi
0x804a0e2:   56                              	push esi
0x804a0e3:   53                              	push ebx
0x804a0e4:   e8 a7 e2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a0e9:   81 c3 17 2f 00 00               	add ebx, 0x2f17
0x804a0ef:   83 ec 0c                        	sub esp, 0xc
0x804a0f2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a0f6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a0fc:   e8 cb e1 ff ff                  	call 0x80482cc <_init>
0x804a101:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a107:   29 c6                           	sub esi, eax
0x804a109:   c1 fe 02                        	sar esi, 2
0x804a10c:   85 f6                           	test esi, esi
0x804a10e:   74 25                           	je 0x804a135 <__libc_csu_init+0x55>
0x804a110:   31 ff                           	xor edi, edi
0x804a112:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a118:   83 ec 04                        	sub esp, 4
0x804a11b:   55                              	push ebp
0x804a11c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a120:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a124:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a12b:   83 c7 01                        	add edi, 1
0x804a12e:   83 c4 10                        	add esp, 0x10
0x804a131:   39 fe                           	cmp esi, edi
0x804a133:   75 e3                           	jne 0x804a118 <__libc_csu_init+0x38>
0x804a135:   83 c4 0c                        	add esp, 0xc
0x804a138:   5b                              	pop ebx
0x804a139:   5e                              	pop esi
0x804a13a:   5f                              	pop edi
0x804a13b:   5d                              	pop ebp
0x804a13c:   c3                              	ret 
; data inside code section at 0x804a13d -- 0x804a140
0x804a13d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a140 -- 0x804a142
0x804a140:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a144 -- 0x804a158
0x804a144:   53                              	push ebx
0x804a145:   83 ec 08                        	sub esp, 8
0x804a148:   e8 43 e2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a14d:   81 c3 b3 2e 00 00               	add ebx, 0x2eb3
0x804a153:   83 c4 08                        	add esp, 8
0x804a156:   5b                              	pop ebx
0x804a157:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 5c a1 04 08  04 00 00 00 11 00 10 00   |....\...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a158:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a168:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a178:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a188:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a198:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a1a8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a1b8:   31 00 67 5f 32 00 67 5f  33 00 67 5f 34 00 67 5f   |1.g_2.g_3.g_4.g_|
0x804a1c8:   35 00 67 5f 31 33 00 67  5f 34 32 00 67 5f 35 36   |5.g_13.g_42.g_56|
0x804a1d8:   00 67 5f 37 33 00 67 5f  39 32 00 67 5f 31 32 38   |.g_73.g_92.g_128|
0x804a1e8:   00 67 5f 31 33 30 00 67  5f 31 33 31 00 67 5f 31   |.g_130.g_131.g_1|
0x804a1f8:   33 32 00 67 5f 31 33 33  00 67 5f 31 35 39 00 67   |32.g_133.g_159.g|
0x804a208:   5f 31 36 34 00 67 5f 31  37 36 00 67 5f 32 31 38   |_164.g_176.g_218|
0x804a218:   00 67 5f 32 35 31 00 67  5f 32 35 37 00 67 5f 33   |.g_251.g_257.g_3|
0x804a228:   30 39 00 67 5f 33 32 32  00 00 00 00 00 00 00 3f   |09.g_322.......?|
0x804a238:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804a248:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804a258:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804a268:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804a278:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804a288:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804a298:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804a2a0:   01 1b 03 3b b0 02 00 00  55 00 00 00 50 e0 ff ff   |...;....U...P...|
0x804a2b0:   e0 02 00 00 90 e0 ff ff  04 03 00 00 e0 e0 ff ff   |................|
0x804a2c0:   cc 02 00 00 b6 e1 ff ff  18 03 00 00 c6 e1 ff ff   |................|
0x804a2d0:   38 03 00 00 f4 e1 ff ff  5c 03 00 00 12 e2 ff ff   |8.......\.......|
0x804a2e0:   7c 03 00 00 3a e2 ff ff  9c 03 00 00 64 e2 ff ff   ||...:.......d...|
0x804a2f0:   bc 03 00 00 8d e2 ff ff  dc 03 00 00 d0 e2 ff ff   |................|
0x804a300:   fc 03 00 00 11 e3 ff ff  1c 04 00 00 69 e3 ff ff   |............i...|
0x804a310:   40 04 00 00 bb e3 ff ff  64 04 00 00 f8 e3 ff ff   |@.......d.......|
0x804a320:   84 04 00 00 2f e4 ff ff  a4 04 00 00 4e e4 ff ff   |..../.......N...|
0x804a330:   c4 04 00 00 78 e4 ff ff  e4 04 00 00 a4 e4 ff ff   |....x...........|
0x804a340:   04 05 00 00 cf e4 ff ff  24 05 00 00 18 e5 ff ff   |........$.......|
0x804a350:   44 05 00 00 5f e5 ff ff  64 05 00 00 b9 e5 ff ff   |D..._...d.......|
0x804a360:   88 05 00 00 0d e6 ff ff  ac 05 00 00 4c e6 ff ff   |............L...|
0x804a370:   cc 05 00 00 85 e6 ff ff  ec 05 00 00 a7 e6 ff ff   |................|
0x804a380:   0c 06 00 00 f5 e6 ff ff  2c 06 00 00 31 e7 ff ff   |........,...1...|
0x804a390:   4c 06 00 00 ba e7 ff ff  6c 06 00 00 ec e7 ff ff   |L.......l.......|
0x804a3a0:   8c 06 00 00 1c e8 ff ff  ac 06 00 00 61 e8 ff ff   |............a...|
0x804a3b0:   cc 06 00 00 a0 e8 ff ff  ec 06 00 00 d2 e8 ff ff   |................|
0x804a3c0:   0c 07 00 00 fe e8 ff ff  2c 07 00 00 1c e9 ff ff   |........,.......|
0x804a3d0:   4c 07 00 00 44 e9 ff ff  6c 07 00 00 69 e9 ff ff   |L...D...l...i...|
0x804a3e0:   8c 07 00 00 8e e9 ff ff  ac 07 00 00 c5 e9 ff ff   |................|
0x804a3f0:   cc 07 00 00 f9 e9 ff ff  ec 07 00 00 4b ea ff ff   |............K...|
0x804a400:   10 08 00 00 97 ea ff ff  34 08 00 00 ce ea ff ff   |........4.......|
0x804a410:   54 08 00 00 ff ea ff ff  74 08 00 00 1e eb ff ff   |T.......t.......|
0x804a420:   94 08 00 00 48 eb ff ff  b4 08 00 00 70 eb ff ff   |....H.......p...|
0x804a430:   d4 08 00 00 99 eb ff ff  f4 08 00 00 d5 eb ff ff   |................|
0x804a440:   14 09 00 00 0f ec ff ff  34 09 00 00 62 ec ff ff   |........4...b...|
0x804a450:   58 09 00 00 af ec ff ff  7c 09 00 00 e7 ec ff ff   |X.......|.......|
0x804a460:   9c 09 00 00 19 ed ff ff  bc 09 00 00 2d ed ff ff   |............-...|
0x804a470:   dc 09 00 00 44 ed ff ff  fc 09 00 00 59 ed ff ff   |....D.......Y...|
0x804a480:   1c 0a 00 00 6f ed ff ff  3c 0a 00 00 96 ed ff ff   |....o...<.......|
0x804a490:   5c 0a 00 00 bb ed ff ff  7c 0a 00 00 fa ed ff ff   |\.......|.......|
0x804a4a0:   9c 0a 00 00 33 ee ff ff  bc 0a 00 00 5f ee ff ff   |....3......._...|
0x804a4b0:   dc 0a 00 00 85 ee ff ff  fc 0a 00 00 c7 ee ff ff   |................|
0x804a4c0:   1c 0b 00 00 09 ef ff ff  3c 0b 00 00 4b ef ff ff   |........<...K...|
0x804a4d0:   5c 0b 00 00 c0 ef ff ff  7c 0b 00 00 1d f0 ff ff   |\.......|.......|
0x804a4e0:   9c 0b 00 00 7a f0 ff ff  bc 0b 00 00 d7 f0 ff ff   |....z...........|
0x804a4f0:   dc 0b 00 00 67 f1 ff ff  fc 0b 00 00 cb f1 ff ff   |....g...........|
0x804a500:   1c 0c 00 00 3b f2 ff ff  3c 0c 00 00 82 f2 ff ff   |....;...<.......|
0x804a510:   60 0c 00 00 d7 f2 ff ff  80 0c 00 00 1e f3 ff ff   |`...............|
0x804a520:   a4 0c 00 00 86 f3 ff ff  c8 0c 00 00 e5 f4 ff ff   |................|
0x804a530:   f8 0c 00 00 14 fb ff ff  28 0d 00 00 32 fe ff ff   |........(...2...|
0x804a540:   60 0d 00 00 40 fe ff ff  74 0d 00 00 a0 fe ff ff   |`...@...t.......|
0x804a550:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804a554:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a564:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a574:   0c de ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804a584:   30 00 00 00 68 dd ff ff  40 00 00 00 00 0e 08 46   |0...h...@......F|
0x804a594:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804a5a4:   10 00 00 00 54 00 00 00  84 dd ff ff 08 00 00 00   |....T...........|
0x804a5b4:   00 00 00 00 1c 00 00 00  68 00 00 00 96 de ff ff   |........h.......|
0x804a5c4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804a5d4:   04 04 00 00 20 00 00 00  88 00 00 00 86 de ff ff   |.... ...........|
0x804a5e4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804a5f4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804a604:   90 de ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a614:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804a624:   8e de ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804a634:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804a644:   96 de ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804a654:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804a664:   a0 de ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804a674:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804a684:   a9 de ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804a694:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804a6a4:   cc de ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804a6b4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804a6c4:   ed de ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804a6d4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804a6e4:   90 01 00 00 21 df ff ff  52 00 00 00 00 41 0e 08   |....!...R....A..|
0x804a6f4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804a704:   1c 00 00 00 b4 01 00 00  4f df ff ff 3d 00 00 00   |........O...=...|
0x804a714:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804a724:   1c 00 00 00 d4 01 00 00  6c df ff ff 37 00 00 00   |........l...7...|
0x804a734:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804a744:   1c 00 00 00 f4 01 00 00  83 df ff ff 1f 00 00 00   |................|
0x804a754:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804a764:   1c 00 00 00 14 02 00 00  82 df ff ff 2a 00 00 00   |............*...|
0x804a774:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804a784:   1c 00 00 00 34 02 00 00  8c df ff ff 2c 00 00 00   |....4.......,...|
0x804a794:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804a7a4:   1c 00 00 00 54 02 00 00  98 df ff ff 2b 00 00 00   |....T.......+...|
0x804a7b4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804a7c4:   1c 00 00 00 74 02 00 00  a3 df ff ff 49 00 00 00   |....t.......I...|
0x804a7d4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804a7e4:   1c 00 00 00 94 02 00 00  cc df ff ff 47 00 00 00   |............G...|
0x804a7f4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804a804:   20 00 00 00 b4 02 00 00  f3 df ff ff 5a 00 00 00   | ...........Z...|
0x804a814:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804a824:   c5 0c 04 04 20 00 00 00  d8 02 00 00 29 e0 ff ff   |.... .......)...|
0x804a834:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804a844:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804a854:   59 e0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Y...?....A....B.|
0x804a864:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804a874:   78 e0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |x...9....A....B.|
0x804a884:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804a894:   91 e0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804a8a4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804a8b4:   93 e0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804a8c4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804a8d4:   c1 e0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804a8e4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804a8f4:   dd e0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a904:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804a914:   46 e1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |F...2....A....B.|
0x804a924:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804a934:   58 e1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |X...0....A....B.|
0x804a944:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804a954:   68 e1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |h...E....A....B.|
0x804a964:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804a974:   8d e1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804a984:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804a994:   ac e1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804a9a4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804a9b4:   be e1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804a9c4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804a9d4:   ca e1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a9e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804a9f4:   c8 e1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804aa04:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804aa14:   d0 e1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804aa24:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804aa34:   d5 e1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804aa44:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804aa54:   da e1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804aa64:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804aa74:   f1 e1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804aa84:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804aa94:   05 e2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804aaa4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804aab4:   60 05 00 00 33 e2 ff ff  4c 00 00 00 00 41 0e 08   |`...3...L....A..|
0x804aac4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804aad4:   1c 00 00 00 84 05 00 00  5b e2 ff ff 37 00 00 00   |........[...7...|
0x804aae4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804aaf4:   1c 00 00 00 a4 05 00 00  72 e2 ff ff 31 00 00 00   |........r...1...|
0x804ab04:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ab14:   1c 00 00 00 c4 05 00 00  83 e2 ff ff 1f 00 00 00   |................|
0x804ab24:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ab34:   1c 00 00 00 e4 05 00 00  82 e2 ff ff 2a 00 00 00   |............*...|
0x804ab44:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ab54:   1c 00 00 00 04 06 00 00  8c e2 ff ff 28 00 00 00   |............(...|
0x804ab64:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804ab74:   1c 00 00 00 24 06 00 00  94 e2 ff ff 29 00 00 00   |....$.......)...|
0x804ab84:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804ab94:   1c 00 00 00 44 06 00 00  9d e2 ff ff 3c 00 00 00   |....D.......<...|
0x804aba4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804abb4:   1c 00 00 00 64 06 00 00  b9 e2 ff ff 3a 00 00 00   |....d.......:...|
0x804abc4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804abd4:   20 00 00 00 84 06 00 00  d3 e2 ff ff 53 00 00 00   | ...........S...|
0x804abe4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804abf4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 02 e3 ff ff   |.... ...........|
0x804ac04:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804ac14:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804ac24:   2b e3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |+...8....A....B.|
0x804ac34:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804ac44:   43 e3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |C...2....A....B.|
0x804ac54:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804ac64:   55 e3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804ac74:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804ac84:   49 e3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |I........A....B.|
0x804ac94:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804aca4:   40 e3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804acb4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804acc4:   35 e3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804acd4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804ace4:   2b e3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |+...'....A....B.|
0x804acf4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804ad04:   32 e3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |2...%....A....B.|
0x804ad14:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804ad24:   37 e3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |7...?....A....B.|
0x804ad34:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804ad44:   56 e3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |V...9....A....B.|
0x804ad54:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804ad64:   6f e3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |o...,....A....B.|
0x804ad74:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804ad84:   7b e3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |{...&....A....B.|
0x804ad94:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804ada4:   81 e3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804adb4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804adc4:   a3 e3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804add4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804ade4:   c5 e3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804adf4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ae04:   e7 e3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804ae14:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804ae24:   3c e4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |<...]....A....B.|
0x804ae34:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ae44:   79 e4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |y...]....A....B.|
0x804ae54:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804ae64:   b6 e4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ae74:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804ae84:   f3 e4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ae94:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804aea4:   63 e5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |c...d....A....B.|
0x804aeb4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804aec4:   a7 e5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804aed4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804aee4:   f7 e5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804aef4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804af04:   b0 09 00 00 1a e6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804af14:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804af24:   d0 09 00 00 4f e6 ff ff  47 00 00 00 00 41 0e 08   |....O...G....A..|
0x804af34:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804af44:   20 00 00 00 f4 09 00 00  72 e6 ff ff 68 00 00 00   | .......r...h...|
0x804af54:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804af64:   0c 04 04 00 2c 00 00 00  18 0a 00 00 b6 e6 ff ff   |....,...........|
0x804af74:   5f 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |_....A....B..F..|
0x804af84:   86 04 83 05 03 52 01 c3  41 c6 41 c7 41 c5 0c 04   |.....R..A.A.A...|
0x804af94:   04 00 00 00 2c 00 00 00  48 0a 00 00 e5 e7 ff ff   |....,...H.......|
0x804afa4:   2f 06 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |/....A....B..I..|
0x804afb4:   86 04 83 05 03 1f 06 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804afc4:   04 00 00 00 34 00 00 00  78 0a 00 00 e4 ed ff ff   |....4...x.......|
0x804afd4:   1e 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804afe4:   0f 03 75 78 06 10 03 02  75 7c 03 09 03 c1 0c 01   |..ux....u|......|
0x804aff4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b004:   b0 0a 00 00 ca f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b014:   48 00 00 00 c4 0a 00 00  c4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804b024:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b034:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b044:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b054:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b064:   10 0b 00 00 d8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b074:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 44 a1 04 08  19 00 00 00 0c cf 04 08   |....D...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff ff ff   |................|
0x804d028:   58 db e2 04 57 9e d5 9a  00 ca 17 5e bf 00 00 00   |X...W......^....|
0x804d038:   97 c0 2d dd f7 ff ff ff  f6 6d f8 00 01 00 01 00   |..-......m......|
0x804d048:   ff ff 01 00 03 78 ab 95  08 00 00 00 86 e6 68 4a   |.....x........hJ|
0x804d058:   93 df a4 0b 67 c7 e9 ce  00                        |....g....       |
