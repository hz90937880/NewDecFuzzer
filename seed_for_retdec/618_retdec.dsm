;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:59:01
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 80 db ff ff               	lea eax, [ebx - 0x2480]
0x804835c:   50                              	push eax
0x804835d:   8d 83 20 db ff ff               	lea eax, [ebx - 0x24e0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 86 a7 04 08               	mov eax, 0x804a786
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 b2 26 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 9e 26 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 a0 db ff ff               	lea edx, [eax - 0x2460]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 71 26 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 53 26 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 2b 26 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 01 26 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 d8 25 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 95 25 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 53 25 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 fb 24 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 aa 24 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 6d 24 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 36 24 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 17 24 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 ed 23 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 c1 23 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 96 23 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 4d 23 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 05 23 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 ab 22 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 58 22 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 19 22 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 e3 21 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 c1 21 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 73 21 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 37 21 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 ae 20 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 7c 20 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 4c 20 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 07 20 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 c8 1f 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 96 1f 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 67 1f 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 49 1f 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 21 1f 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 fc 1e 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 d7 1e 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 a0 1e 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 6b 1e 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 19 1e 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 ce 1d 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 97 1d 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 66 1d 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 47 1d 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 1d 1d 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 f5 1c 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 cc 1c 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 90 1c 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 55 1c 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 02 1c 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 b6 1b 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 7e 1b 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 4f 1b 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 3b 1b 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 24 1b 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 0f 1b 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 f9 1a 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 d2 1a 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ad 1a 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 6e 1a 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 35 1a 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 09 1a 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 e3 19 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 94 dc ff ff               	fld dword ptr [eax - 0x236c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 a1 19 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 94 dc ff ff               	fld dword ptr [eax - 0x236c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 5f 19 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 98 dc ff ff               	fld dword ptr [eax - 0x2368]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 9c dc ff ff               	fld dword ptr [eax - 0x2364]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a0 dc ff ff               	fld dword ptr [eax - 0x2360]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 1d 19 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a4 dc ff ff               	fld dword ptr [eax - 0x235c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a8 dc ff ff               	fld dword ptr [eax - 0x2358]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 a5 18 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b8 dc ff ff               	fld qword ptr [eax - 0x2348]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 48 18 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b8 dc ff ff               	fld qword ptr [eax - 0x2348]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 eb 17 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c0 dc ff ff               	fld qword ptr [eax - 0x2340]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c8 dc ff ff               	fld qword ptr [eax - 0x2338]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 8e 17 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 fe 16 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f0 dc ff ff               	fld dword ptr [eax - 0x2310]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 f4 dc ff ff               	fld dword ptr [eax - 0x230c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 9a 16 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 29 16 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 e6 15 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 d4 db ff ff               	lea eax, [ebx - 0x242c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804978d
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 2c                        	sub esp, 0x2c
0x804962f:   e8 dc 14 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x804963c:   8b 4d 2c                        	mov ecx, dword ptr [ebp + 0x2c]
0x804963f:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x8049642:   8b 5d 48                        	mov ebx, dword ptr [ebp + 0x48]
0x8049645:   89 5d d0                        	mov dword ptr [ebp - 0x30], ebx
0x8049648:   8b 75 4c                        	mov esi, dword ptr [ebp + 0x4c]
0x804964b:   89 75 cc                        	mov dword ptr [ebp - 0x34], esi
0x804964e:   8b 5d 58                        	mov ebx, dword ptr [ebp + 0x58]
0x8049651:   89 5d c8                        	mov dword ptr [ebp - 0x38], ebx
0x8049654:   8b 75 5c                        	mov esi, dword ptr [ebp + 0x5c]
0x8049657:   8b 5d 68                        	mov ebx, dword ptr [ebp + 0x68]
0x804965a:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x804965e:   89 ca                           	mov edx, ecx
0x8049660:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049663:   89 fa                           	mov edx, edi
0x8049665:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x8049668:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x804966c:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x804966f:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x8049673:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x8049677:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x804967b:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x804967e:   89 f2                           	mov edx, esi
0x8049680:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x8049684:   89 da                           	mov edx, ebx
0x8049686:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x804968a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804968d:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x8049693:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049696:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x804969c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804969f:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496a5:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496a8:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496ae:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496b1:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496b7:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x80496bb:   66 89 90 a4 04 00 00            	mov word ptr [eax + 0x4a4], dx
0x80496c2:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496c5:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496cb:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496ce:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496d4:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x80496d7:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496dd:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496e1:   88 90 44 00 00 00               	mov byte ptr [eax + 0x44], dl
0x80496e7:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496ea:   89 90 a8 04 00 00               	mov dword ptr [eax + 0x4a8], edx
0x80496f0:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x80496f3:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496f9:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x80496fd:   88 90 4c 00 00 00               	mov byte ptr [eax + 0x4c], dl
0x8049703:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x8049706:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x804970c:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x804970f:   89 90 ac 04 00 00               	mov dword ptr [eax + 0x4ac], edx
0x8049715:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049718:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x804971e:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x8049722:   88 90 58 00 00 00               	mov byte ptr [eax + 0x58], dl
0x8049728:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x804972c:   66 89 90 5a 00 00 00            	mov word ptr [eax + 0x5a], dx
0x8049733:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x8049736:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x804973c:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804973f:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049745:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x8049749:   88 90 64 00 00 00               	mov byte ptr [eax + 0x64], dl
0x804974f:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x8049753:   66 89 90 b0 04 00 00            	mov word ptr [eax + 0x4b0], dx
0x804975a:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x804975d:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x8049763:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x8049766:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x804976c:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049770:   66 89 90 70 00 00 00            	mov word ptr [eax + 0x70], dx
0x8049777:   8b 55 6c                        	mov edx, dword ptr [ebp + 0x6c]
0x804977a:   89 90 74 00 00 00               	mov dword ptr [eax + 0x74], edx
0x8049780:   b8 00 00 00 00                  	mov eax, 0
0x8049785:   83 c4 2c                        	add esp, 0x2c
0x8049788:   5b                              	pop ebx
0x8049789:   5e                              	pop esi
0x804978a:   5f                              	pop edi
0x804978b:   5d                              	pop ebp
0x804978c:   c3                              	ret 
; function: func_1 at 0x804978d -- 0x804a786
0x804978d:   55                              	push ebp
0x804978e:   89 e5                           	mov ebp, esp
0x8049790:   57                              	push edi
0x8049791:   56                              	push esi
0x8049792:   53                              	push ebx
0x8049793:   81 ec 38 01 00 00               	sub esp, 0x138
0x8049799:   e8 72 13 00 00                  	call 0x804ab10 <__x86.get_pc_thunk.ax>
0x804979e:   05 62 38 00 00                  	add eax, 0x3862
0x80497a3:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x80497aa:   c7 45 ec c0 ba 58 c5            	mov dword ptr [ebp - 0x14], 0xc558bac0
0x80497b1:   c7 45 e8 23 eb 31 a8            	mov dword ptr [ebp - 0x18], 0xa831eb23
0x80497b8:   c7 45 e4 02 d1 c1 45            	mov dword ptr [ebp - 0x1c], 0x45c1d102
0x80497bf:   c7 45 e0 03 00 00 00            	mov dword ptr [ebp - 0x20], 3
0x80497c6:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x80497cc:   c7 45 d8 42 5d 76 c1            	mov dword ptr [ebp - 0x28], 0xc1765d42
0x80497d3:   c7 45 84 d7 44 41 9e            	mov dword ptr [ebp - 0x7c], 0x9e4144d7
0x80497da:   c7 45 d4 f7 ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffff7
0x80497e1:   c6 45 d3 07                     	mov byte ptr [ebp - 0x2d], 7
0x80497e5:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x80497ec:   c7 45 c8 01 49 a6 1e            	mov dword ptr [ebp - 0x38], 0x1ea64901
0x80497f3:   c6 45 c7 ff                     	mov byte ptr [ebp - 0x39], 0xff
0x80497f7:   c7 45 c0 fd ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffffd
0x80497fe:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x8049805:   c7 45 b8 03 60 b6 f8            	mov dword ptr [ebp - 0x48], 0xf8b66003
0x804980c:   c6 45 83 04                     	mov byte ptr [ebp - 0x7d], 4
0x8049810:   66 c7 45 80 8f 1d               	mov word ptr [ebp - 0x80], 0x1d8f
0x8049816:   c7 85 7c ff ff ff 55 bd ed a3   	mov dword ptr [ebp - 0x84], 0xa3edbd55
0x8049820:   c7 85 78 ff ff ff 17 58 13 e1   	mov dword ptr [ebp - 0x88], 0xe1135817
0x804982a:   c6 45 b7 c3                     	mov byte ptr [ebp - 0x49], 0xc3
0x804982e:   66 c7 85 76 ff ff ff 00 00      	mov word ptr [ebp - 0x8a], 0
0x8049837:   c7 45 b0 fe ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffffe
0x804983e:   c7 45 ac fc ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffc
0x8049845:   66 c7 45 aa 30 d9               	mov word ptr [ebp - 0x56], 0xd930
0x804984b:   c7 85 70 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0x90], 5
0x8049855:   c6 85 6f ff ff ff 00            	mov byte ptr [ebp - 0x91], 0
0x804985c:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049863:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x804986a:   c7 85 68 ff ff ff a2 7b 19 01   	mov dword ptr [ebp - 0x98], 0x1197ba2
0x8049874:   66 c7 85 66 ff ff ff 08 00      	mov word ptr [ebp - 0x9a], 8
0x804987d:   c7 85 60 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xa0], 5
0x8049887:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x804988b:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x804988f:   80 bd 6f ff ff ff 00            	cmp byte ptr [ebp - 0x91], 0
0x8049896:   74 63                           	je 0x80498fb <func_1+0x16e>
0x8049898:   c6 85 ce fe ff ff e0            	mov byte ptr [ebp - 0x132], 0xe0
0x804989f:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x80498a3:   74 49                           	je 0x80498ee <func_1+0x161>
0x80498a5:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80498a8:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80498ab:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80498ae:   89 c2                           	mov edx, eax
0x80498b0:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80498b3:   89 c1                           	mov ecx, eax
0x80498b5:   89 d0                           	mov eax, edx
0x80498b7:   ba 00 00 00 00                  	mov edx, 0
0x80498bc:   66 f7 f1                        	div cx
0x80498bf:   89 d0                           	mov eax, edx
0x80498c1:   0f b6 d0                        	movzx edx, al
0x80498c4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x80498c7:   0f b6 c0                        	movzx eax, al
0x80498ca:   0f af c2                        	imul eax, edx
0x80498cd:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80498d0:   0f 96 c0                        	setbe al
0x80498d3:   0f b6 d0                        	movzx edx, al
0x80498d6:   0f b6 85 ce fe ff ff            	movzx eax, byte ptr [ebp - 0x132]
0x80498dd:   39 c2                           	cmp edx, eax
0x80498df:   74 0d                           	je 0x80498ee <func_1+0x161>
0x80498e1:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x80498e5:   74 07                           	je 0x80498ee <func_1+0x161>
0x80498e7:   b8 01 00 00 00                  	mov eax, 1
0x80498ec:   eb 05                           	jmp 0x80498f3 <func_1+0x166>
0x80498ee:   b8 00 00 00 00                  	mov eax, 0
0x80498f3:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x80498f6:   e9 ec 0d 00 00                  	jmp 0x804a6e7 <func_1+0xf5a>
0x80498fb:   66 c7 85 5e ff ff ff 09 00      	mov word ptr [ebp - 0xa2], 9
0x8049904:   66 c7 85 5c ff ff ff ef 4d      	mov word ptr [ebp - 0xa4], 0x4def
0x804990d:   c7 45 9c a8 b8 9a fd            	mov dword ptr [ebp - 0x64], 0xfd9ab8a8
0x8049914:   66 c7 85 5a ff ff ff 07 00      	mov word ptr [ebp - 0xa6], 7
0x804991d:   c7 45 98 ea e4 32 ff            	mov dword ptr [ebp - 0x68], 0xff32e4ea
0x8049924:   c7 85 54 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xac], 0
0x804992e:   c7 85 50 ff ff ff 17 63 6d b2   	mov dword ptr [ebp - 0xb0], 0xb26d6317
0x8049938:   c7 85 4c ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xb4], 5
0x8049942:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049945:   66 31 85 5e ff ff ff            	xor word ptr [ebp - 0xa2], ax
0x804994c:   b8 01 00 00 00                  	mov eax, 1
0x8049951:   ba 00 00 00 00                  	mov edx, 0
0x8049956:   f7 75 e4                        	div dword ptr [ebp - 0x1c]
0x8049959:   0f bf d0                        	movsx edx, ax
0x804995c:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x8049963:   0f af c2                        	imul eax, edx
0x8049966:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049969:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804996c:   98                              	cwde 
0x804996d:   c1 e0 0c                        	shl eax, 0xc
0x8049970:   85 c0                           	test eax, eax
0x8049972:   0f 84 c3 0c 00 00               	je 0x804a63b <func_1+0xeae>
0x8049978:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804997b:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804997e:   0f 92 c0                        	setb al
0x8049981:   0f b6 c0                        	movzx eax, al
0x8049984:   ba 00 00 00 00                  	mov edx, 0
0x8049989:   f7 b5 68 ff ff ff               	div dword ptr [ebp - 0x98]
0x804998f:   85 c0                           	test eax, eax
0x8049991:   0f 84 a4 0c 00 00               	je 0x804a63b <func_1+0xeae>
0x8049997:   66 c7 85 4a ff ff ff 05 00      	mov word ptr [ebp - 0xb6], 5
0x80499a0:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x80499a7:   c6 85 49 ff ff ff ff            	mov byte ptr [ebp - 0xb7], 0xff
0x80499ae:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x80499b5:   c7 85 44 ff ff ff 7c 3e 31 73   	mov dword ptr [ebp - 0xbc], 0x73313e7c
0x80499bf:   c7 85 40 ff ff ff 34 ac 54 b3   	mov dword ptr [ebp - 0xc0], 0xb354ac34
0x80499c9:   c7 85 3c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc4], 0xffffffff
0x80499d3:   c6 85 3b ff ff ff f4            	mov byte ptr [ebp - 0xc5], 0xf4
0x80499da:   66 c7 85 38 ff ff ff 83 ea      	mov word ptr [ebp - 0xc8], 0xea83
0x80499e3:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x80499ea:   e9 7a 06 00 00                  	jmp 0x804a069 <func_1+0x8dc>
0x80499ef:   c6 85 37 ff ff ff ff            	mov byte ptr [ebp - 0xc9], 0xff
0x80499f6:   c7 85 30 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd0], 1
0x8049a00:   c7 85 2c ff ff ff f4 30 89 c7   	mov dword ptr [ebp - 0xd4], 0xc78930f4
0x8049a0a:   c6 85 2b ff ff ff 29            	mov byte ptr [ebp - 0xd5], 0x29
0x8049a11:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x8049a18:   25 a3 00 00 00                  	and eax, 0xa3
0x8049a1d:   85 c0                           	test eax, eax
0x8049a1f:   74 2d                           	je 0x8049a4e <func_1+0x2c1>
0x8049a21:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049a28:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049a2b:   0f 94 c0                        	sete al
0x8049a2e:   0f b6 d0                        	movzx edx, al
0x8049a31:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049a38:   39 c2                           	cmp edx, eax
0x8049a3a:   0f 9e c0                        	setle al
0x8049a3d:   0f b6 c0                        	movzx eax, al
0x8049a40:   f7 d8                           	neg eax
0x8049a42:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049a45:   76 07                           	jbe 0x8049a4e <func_1+0x2c1>
0x8049a47:   ba 01 00 00 00                  	mov edx, 1
0x8049a4c:   eb 05                           	jmp 0x8049a53 <func_1+0x2c6>
0x8049a4e:   ba 00 00 00 00                  	mov edx, 0
0x8049a53:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x8049a5a:   39 c2                           	cmp edx, eax
0x8049a5c:   0f 9d c0                        	setge al
0x8049a5f:   0f b6 c0                        	movzx eax, al
0x8049a62:   0f be c0                        	movsx eax, al
0x8049a65:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x8049a68:   0f be f2                        	movsx esi, dl
0x8049a6b:   99                              	cdq 
0x8049a6c:   f7 fe                           	idiv esi
0x8049a6e:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x8049a71:   89 c2                           	mov edx, eax
0x8049a73:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049a76:   39 c2                           	cmp edx, eax
0x8049a78:   0f 95 c0                        	setne al
0x8049a7b:   0f b6 c0                        	movzx eax, al
0x8049a7e:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049a81:   0f 9e c0                        	setle al
0x8049a84:   0f b6 d0                        	movzx edx, al
0x8049a87:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x8049a8e:   39 c2                           	cmp edx, eax
0x8049a90:   0f 95 c0                        	setne al
0x8049a93:   0f b6 d0                        	movzx edx, al
0x8049a96:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049a9d:   39 c2                           	cmp edx, eax
0x8049a9f:   0f 95 c0                        	setne al
0x8049aa2:   0f b6 c0                        	movzx eax, al
0x8049aa5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049aa8:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049aaf:   ba 01 00 00 00                  	mov edx, 1
0x8049ab4:   89 c1                           	mov ecx, eax
0x8049ab6:   d3 e2                           	shl edx, cl
0x8049ab8:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049abf:   39 c2                           	cmp edx, eax
0x8049ac1:   0f 9c c0                        	setl al
0x8049ac4:   0f b6 c0                        	movzx eax, al
0x8049ac7:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049aca:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049ad1:   0f be c0                        	movsx eax, al
0x8049ad4:   ba 44 00 00 00                  	mov edx, 0x44
0x8049ad9:   89 c1                           	mov ecx, eax
0x8049adb:   d3 e2                           	shl edx, cl
0x8049add:   89 d0                           	mov eax, edx
0x8049adf:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049ae2:   85 c0                           	test eax, eax
0x8049ae4:   0f 84 86 00 00 00               	je 0x8049b70 <func_1+0x3e3>
0x8049aea:   c7 85 20 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe0], 1
0x8049af4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049af7:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049afa:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049afd:   0f b6 d0                        	movzx edx, al
0x8049b00:   80 bd 37 ff ff ff 00            	cmp byte ptr [ebp - 0xc9], 0
0x8049b07:   0f 95 c0                        	setne al
0x8049b0a:   0f b6 c0                        	movzx eax, al
0x8049b0d:   0f bf c8                        	movsx ecx, ax
0x8049b10:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b13:   98                              	cwde 
0x8049b14:   0f af c1                        	imul eax, ecx
0x8049b17:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049b1a:   0f 95 c0                        	setne al
0x8049b1d:   0f b6 c8                        	movzx ecx, al
0x8049b20:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b23:   0f b6 c0                        	movzx eax, al
0x8049b26:   0f af c1                        	imul eax, ecx
0x8049b29:   85 c0                           	test eax, eax
0x8049b2b:   74 11                           	je 0x8049b3e <func_1+0x3b1>
0x8049b2d:   66 83 bd 4a ff ff ff 00         	cmp word ptr [ebp - 0xb6], 0
0x8049b35:   74 07                           	je 0x8049b3e <func_1+0x3b1>
0x8049b37:   b8 01 00 00 00                  	mov eax, 1
0x8049b3c:   eb 05                           	jmp 0x8049b43 <func_1+0x3b6>
0x8049b3e:   b8 00 00 00 00                  	mov eax, 0
0x8049b43:   0f b6 c0                        	movzx eax, al
0x8049b46:   89 d1                           	mov ecx, edx
0x8049b48:   29 c1                           	sub ecx, eax
0x8049b4a:   ba 4d fc 9c 46                  	mov edx, 0x469cfc4d
0x8049b4f:   89 c8                           	mov eax, ecx
0x8049b51:   f7 ea                           	imul edx
0x8049b53:   c1 fa 1d                        	sar edx, 0x1d
0x8049b56:   89 c8                           	mov eax, ecx
0x8049b58:   c1 f8 1f                        	sar eax, 0x1f
0x8049b5b:   29 c2                           	sub edx, eax
0x8049b5d:   89 d0                           	mov eax, edx
0x8049b5f:   69 c0 aa 23 03 74               	imul eax, eax, 0x740323aa
0x8049b65:   29 c1                           	sub ecx, eax
0x8049b67:   c7 45 e8 1b e9 d1 e7            	mov dword ptr [ebp - 0x18], 0xe7d1e91b
0x8049b6e:   eb 40                           	jmp 0x8049bb0 <func_1+0x423>
0x8049b70:   c7 85 24 ff ff ff b5 54 7e 69   	mov dword ptr [ebp - 0xdc], 0x697e54b5
0x8049b7a:   66 83 45 de 01                  	add word ptr [ebp - 0x22], 1
0x8049b7f:   80 bd 37 ff ff ff 00            	cmp byte ptr [ebp - 0xc9], 0
0x8049b86:   0f 95 c0                        	setne al
0x8049b89:   0f b6 c0                        	movzx eax, al
0x8049b8c:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049b8f:   f7 55 e8                        	not dword ptr [ebp - 0x18]
0x8049b92:   c7 45 a0 01 00 00 00            	mov dword ptr [ebp - 0x60], 1
0x8049b99:   eb 0f                           	jmp 0x8049baa <func_1+0x41d>
0x8049b9b:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b9e:   0d ac db 66 ee                  	or eax, 0xee66dbac
0x8049ba3:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049ba6:   83 45 a0 07                     	add dword ptr [ebp - 0x60], 7
0x8049baa:   83 7d a0 3a                     	cmp dword ptr [ebp - 0x60], 0x3a
0x8049bae:   77 eb                           	ja 0x8049b9b <func_1+0x40e>
0x8049bb0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049bb3:   c0 e8 03                        	shr al, 3
0x8049bb6:   84 c0                           	test al, al
0x8049bb8:   0f 84 a4 00 00 00               	je 0x8049c62 <func_1+0x4d5>
0x8049bbe:   c6 85 37 ff ff ff fe            	mov byte ptr [ebp - 0xc9], 0xfe
0x8049bc5:   80 bd 37 ff ff ff 2e            	cmp byte ptr [ebp - 0xc9], 0x2e
0x8049bcc:   0f 87 42 04 00 00               	ja 0x804a014 <func_1+0x887>
0x8049bd2:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049bd6:   0f bf b5 76 ff ff ff            	movsx esi, word ptr [ebp - 0x8a]
0x8049bdd:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049be3:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x8049be7:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049bed:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x8049bf1:   0f b6 75 83                     	movzx esi, byte ptr [ebp - 0x7d]
0x8049bf5:   0f be 5d c7                     	movsx ebx, byte ptr [ebp - 0x39]
0x8049bf9:   0f be 4d d3                     	movsx ecx, byte ptr [ebp - 0x2d]
0x8049bfd:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x8049c01:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049c07:   50                              	push eax
0x8049c08:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049c0b:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049c0e:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049c14:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049c1a:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049c20:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049c26:   57                              	push edi
0x8049c27:   56                              	push esi
0x8049c28:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049c2b:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049c2e:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049c31:   53                              	push ebx
0x8049c32:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c35:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049c38:   51                              	push ecx
0x8049c39:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c3c:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049c3f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c42:   52                              	push edx
0x8049c43:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c46:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c49:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c4c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c4f:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c52:   e8 cf f9 ff ff                  	call 0x8049626 <set_var>
0x8049c57:   83 c4 68                        	add esp, 0x68
0x8049c5a:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c5d:   e9 1c 0b 00 00                  	jmp 0x804a77e <func_1+0xff1>
0x8049c62:   c6 85 1f ff ff ff 20            	mov byte ptr [ebp - 0xe1], 0x20
0x8049c69:   c7 45 8c d7 f6 ce 80            	mov dword ptr [ebp - 0x74], 0x80cef6d7
0x8049c70:   c6 85 1e ff ff ff 00            	mov byte ptr [ebp - 0xe2], 0
0x8049c77:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x8049c7d:   e9 b4 00 00 00                  	jmp 0x8049d36 <func_1+0x5a9>
0x8049c82:   c7 85 18 ff ff ff 54 91 eb 75   	mov dword ptr [ebp - 0xe8], 0x75eb9154
0x8049c8c:   c7 85 14 ff ff ff 6d 81 27 54   	mov dword ptr [ebp - 0xec], 0x5427816d
0x8049c96:   c7 85 18 ff ff ff 35 b4 dc 75   	mov dword ptr [ebp - 0xe8], 0x75dcb435
0x8049ca0:   b8 01 00 00 00                  	mov eax, 1
0x8049ca5:   88 85 1f ff ff ff               	mov byte ptr [ebp - 0xe1], al
0x8049cab:   80 bd 1f ff ff ff 00            	cmp byte ptr [ebp - 0xe1], 0
0x8049cb2:   74 07                           	je 0x8049cbb <func_1+0x52e>
0x8049cb4:   b8 01 00 00 00                  	mov eax, 1
0x8049cb9:   eb 05                           	jmp 0x8049cc0 <func_1+0x533>
0x8049cbb:   b8 00 00 00 00                  	mov eax, 0
0x8049cc0:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049cc3:   83 75 8c 01                     	xor dword ptr [ebp - 0x74], 1
0x8049cc7:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049ccb:   0f bf c8                        	movsx ecx, ax
0x8049cce:   83 7d 94 34                     	cmp dword ptr [ebp - 0x6c], 0x34
0x8049cd2:   0f 9f c0                        	setg al
0x8049cd5:   0f b6 c0                        	movzx eax, al
0x8049cd8:   8b 95 30 ff ff ff               	mov edx, dword ptr [ebp - 0xd0]
0x8049cde:   81 f2 fc ce 00 00               	xor edx, 0xcefc
0x8049ce4:   09 d0                           	or eax, edx
0x8049ce6:   3d 7f 4c ea d9                  	cmp eax, 0xd9ea4c7f
0x8049ceb:   0f 97 c0                        	seta al
0x8049cee:   0f b6 c0                        	movzx eax, al
0x8049cf1:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049cf7:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049cfd:   89 c2                           	mov edx, eax
0x8049cff:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d02:   89 c3                           	mov ebx, eax
0x8049d04:   89 d0                           	mov eax, edx
0x8049d06:   ba 00 00 00 00                  	mov edx, 0
0x8049d0b:   66 f7 f3                        	div bx
0x8049d0e:   89 c2                           	mov edx, eax
0x8049d10:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049d17:   66 39 c2                        	cmp dx, ax
0x8049d1a:   0f 94 c0                        	sete al
0x8049d1d:   0f b6 c0                        	movzx eax, al
0x8049d20:   01 c8                           	add eax, ecx
0x8049d22:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049d25:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d28:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049d2b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d2e:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049d31:   66 83 45 de 01                  	add word ptr [ebp - 0x22], 1
0x8049d36:   66 83 7d de 1d                  	cmp word ptr [ebp - 0x22], 0x1d
0x8049d3b:   0f 86 41 ff ff ff               	jbe 0x8049c82 <func_1+0x4f5>
0x8049d41:   c7 45 d8 4b 00 00 00            	mov dword ptr [ebp - 0x28], 0x4b
0x8049d48:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x8049d50:   74 07                           	je 0x8049d59 <func_1+0x5cc>
0x8049d52:   b8 01 00 00 00                  	mov eax, 1
0x8049d57:   eb 05                           	jmp 0x8049d5e <func_1+0x5d1>
0x8049d59:   b8 00 00 00 00                  	mov eax, 0
0x8049d5e:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049d61:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x8049d69:   74 10                           	je 0x8049d7b <func_1+0x5ee>
0x8049d6b:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x8049d72:   74 07                           	je 0x8049d7b <func_1+0x5ee>
0x8049d74:   b8 01 00 00 00                  	mov eax, 1
0x8049d79:   eb 05                           	jmp 0x8049d80 <func_1+0x5f3>
0x8049d7b:   b8 00 00 00 00                  	mov eax, 0
0x8049d80:   33 45 a0                        	xor eax, dword ptr [ebp - 0x60]
0x8049d83:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049d86:   0f b7 4d de                     	movzx ecx, word ptr [ebp - 0x22]
0x8049d8a:   0f b7 c1                        	movzx eax, cx
0x8049d8d:   69 c0 8f e3 00 00               	imul eax, eax, 0xe38f
0x8049d93:   c1 e8 10                        	shr eax, 0x10
0x8049d96:   89 c2                           	mov edx, eax
0x8049d98:   66 c1 ea 03                     	shr dx, 3
0x8049d9c:   89 d0                           	mov eax, edx
0x8049d9e:   c1 e0 03                        	shl eax, 3
0x8049da1:   01 d0                           	add eax, edx
0x8049da3:   29 c1                           	sub ecx, eax
0x8049da5:   89 ca                           	mov edx, ecx
0x8049da7:   0f b7 c2                        	movzx eax, dx
0x8049daa:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x8049dad:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049db0:   0f be d0                        	movsx edx, al
0x8049db3:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049db6:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049db9:   74 07                           	je 0x8049dc2 <func_1+0x635>
0x8049dbb:   b8 00 00 00 00                  	mov eax, 0
0x8049dc0:   eb 05                           	jmp 0x8049dc7 <func_1+0x63a>
0x8049dc2:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049dc7:   0f af c2                        	imul eax, edx
0x8049dca:   85 c0                           	test eax, eax
0x8049dcc:   0f 84 6f 01 00 00               	je 0x8049f41 <func_1+0x7b4>
0x8049dd2:   66 c7 85 1c ff ff ff 00 00      	mov word ptr [ebp - 0xe4], 0
0x8049ddb:   0f bf 85 5e ff ff ff            	movsx eax, word ptr [ebp - 0xa2]
0x8049de2:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x8049de8:   7c 07                           	jl 0x8049df1 <func_1+0x664>
0x8049dea:   b8 a1 ff ff ff                  	mov eax, 0xffffffa1
0x8049def:   eb 05                           	jmp 0x8049df6 <func_1+0x669>
0x8049df1:   b8 a2 ff ff ff                  	mov eax, 0xffffffa2
0x8049df6:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x8049df9:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049dfc:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049e00:   75 06                           	jne 0x8049e08 <func_1+0x67b>
0x8049e02:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049e06:   74 07                           	je 0x8049e0f <func_1+0x682>
0x8049e08:   b8 01 00 00 00                  	mov eax, 1
0x8049e0d:   eb 05                           	jmp 0x8049e14 <func_1+0x687>
0x8049e0f:   b8 00 00 00 00                  	mov eax, 0
0x8049e14:   89 c2                           	mov edx, eax
0x8049e16:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049e1a:   74 06                           	je 0x8049e22 <func_1+0x695>
0x8049e1c:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049e20:   75 07                           	jne 0x8049e29 <func_1+0x69c>
0x8049e22:   b8 01 00 00 00                  	mov eax, 1
0x8049e27:   eb 05                           	jmp 0x8049e2e <func_1+0x6a1>
0x8049e29:   b8 00 00 00 00                  	mov eax, 0
0x8049e2e:   31 d0                           	xor eax, edx
0x8049e30:   0f be c0                        	movsx eax, al
0x8049e33:   c1 e0 07                        	shl eax, 7
0x8049e36:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049e39:   0f 95 c0                        	setne al
0x8049e3c:   0f b6 c0                        	movzx eax, al
0x8049e3f:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049e42:   0f b6 ca                        	movzx ecx, dl
0x8049e45:   99                              	cdq 
0x8049e46:   f7 f9                           	idiv ecx
0x8049e48:   89 d0                           	mov eax, edx
0x8049e4a:   2b 45 ec                        	sub eax, dword ptr [ebp - 0x14]
0x8049e4d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049e50:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049e53:   30 45 d3                        	xor byte ptr [ebp - 0x2d], al
0x8049e56:   c7 45 8c 71 96 98 a0            	mov dword ptr [ebp - 0x74], 0xa0989671
0x8049e5d:   81 b5 2c ff ff ff 72 5f 4b 51   	xor dword ptr [ebp - 0xd4], 0x514b5f72
0x8049e67:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049e6d:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x8049e70:   0f 95 c0                        	setne al
0x8049e73:   0f b6 c0                        	movzx eax, al
0x8049e76:   33 45 e4                        	xor eax, dword ptr [ebp - 0x1c]
0x8049e79:   89 c2                           	mov edx, eax
0x8049e7b:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x8049e82:   39 c2                           	cmp edx, eax
0x8049e84:   72 07                           	jb 0x8049e8d <func_1+0x700>
0x8049e86:   b8 01 00 00 00                  	mov eax, 1
0x8049e8b:   eb 05                           	jmp 0x8049e92 <func_1+0x705>
0x8049e8d:   b8 00 00 00 00                  	mov eax, 0
0x8049e92:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e95:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x8049e9c:   31 85 30 ff ff ff               	xor dword ptr [ebp - 0xd0], eax
0x8049ea2:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x8049ea8:   3c df                           	cmp al, 0xdf
0x8049eaa:   0f 93 c0                        	setae al
0x8049ead:   0f b6 c0                        	movzx eax, al
0x8049eb0:   0d 7a e7 00 00                  	or eax, 0xe77a
0x8049eb5:   89 c1                           	mov ecx, eax
0x8049eb7:   66 0f be 85 1e ff ff ff         	movsx ax, byte ptr [ebp - 0xe2]
0x8049ebf:   66 39 85 5e ff ff ff            	cmp word ptr [ebp - 0xa2], ax
0x8049ec6:   0f 9c c0                        	setl al
0x8049ec9:   0f b6 d0                        	movzx edx, al
0x8049ecc:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049ed0:   29 c2                           	sub edx, eax
0x8049ed2:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049ed5:   39 c2                           	cmp edx, eax
0x8049ed7:   0f 97 c0                        	seta al
0x8049eda:   0f b6 d0                        	movzx edx, al
0x8049edd:   0f be 45 d3                     	movsx eax, byte ptr [ebp - 0x2d]
0x8049ee1:   39 c2                           	cmp edx, eax
0x8049ee3:   0f 9d c0                        	setge al
0x8049ee6:   0f b6 c0                        	movzx eax, al
0x8049ee9:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049eec:   0f 9d c0                        	setge al
0x8049eef:   0f b6 c0                        	movzx eax, al
0x8049ef2:   39 c1                           	cmp ecx, eax
0x8049ef4:   7f 10                           	jg 0x8049f06 <func_1+0x779>
0x8049ef6:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049efd:   74 07                           	je 0x8049f06 <func_1+0x779>
0x8049eff:   b8 01 00 00 00                  	mov eax, 1
0x8049f04:   eb 05                           	jmp 0x8049f0b <func_1+0x77e>
0x8049f06:   b8 00 00 00 00                  	mov eax, 0
0x8049f0b:   3d 8a a4 00 00                  	cmp eax, 0xa48a
0x8049f10:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f13:   0f be c0                        	movsx eax, al
0x8049f16:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049f19:   0f 95 c0                        	setne al
0x8049f1c:   0f b6 d0                        	movzx edx, al
0x8049f1f:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049f26:   39 c2                           	cmp edx, eax
0x8049f28:   7e 06                           	jle 0x8049f30 <func_1+0x7a3>
0x8049f2a:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049f2e:   74 07                           	je 0x8049f37 <func_1+0x7aa>
0x8049f30:   b8 01 00 00 00                  	mov eax, 1
0x8049f35:   eb 05                           	jmp 0x8049f3c <func_1+0x7af>
0x8049f37:   b8 00 00 00 00                  	mov eax, 0
0x8049f3c:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049f3f:   eb 41                           	jmp 0x8049f82 <func_1+0x7f5>
0x8049f41:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049f45:   0f 85 2a 01 00 00               	jne 0x804a075 <func_1+0x8e8>
0x8049f4b:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049f4f:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x8049f52:   0f 96 c0                        	setbe al
0x8049f55:   0f b6 c0                        	movzx eax, al
0x8049f58:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049f5b:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049f5e:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049f61:   0f bf 8d 5c ff ff ff            	movsx ecx, word ptr [ebp - 0xa4]
0x8049f68:   b8 f2 b1 ea 36                  	mov eax, 0x36eab1f2
0x8049f6d:   ba 00 00 00 00                  	mov edx, 0
0x8049f72:   f7 f1                           	div ecx
0x8049f74:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049f7a:   21 d0                           	and eax, edx
0x8049f7c:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x8049f82:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049f86:   0f bf b5 76 ff ff ff            	movsx esi, word ptr [ebp - 0x8a]
0x8049f8d:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049f93:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x8049f97:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049f9d:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x8049fa1:   0f b6 75 83                     	movzx esi, byte ptr [ebp - 0x7d]
0x8049fa5:   0f be 5d c7                     	movsx ebx, byte ptr [ebp - 0x39]
0x8049fa9:   0f be 4d d3                     	movsx ecx, byte ptr [ebp - 0x2d]
0x8049fad:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x8049fb1:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049fb7:   50                              	push eax
0x8049fb8:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049fbb:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049fbe:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049fc4:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049fca:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049fd0:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049fd6:   57                              	push edi
0x8049fd7:   56                              	push esi
0x8049fd8:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049fdb:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049fde:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049fe1:   53                              	push ebx
0x8049fe2:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049fe5:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049fe8:   51                              	push ecx
0x8049fe9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049fec:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049fef:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049ff2:   52                              	push edx
0x8049ff3:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ff6:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049ff9:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ffc:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049fff:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a002:   e8 1f f6 ff ff                  	call 0x8049626 <set_var>
0x804a007:   83 c4 68                        	add esp, 0x68
0x804a00a:   66 0f be 45 d3                  	movsx ax, byte ptr [ebp - 0x2d]
0x804a00f:   e9 6a 07 00 00                  	jmp 0x804a77e <func_1+0xff1>
0x804a014:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x804a01c:   74 3f                           	je 0x804a05d <func_1+0x8d0>
0x804a01e:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a021:   83 e0 01                        	and eax, 1
0x804a024:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a027:   0f 9e c0                        	setle al
0x804a02a:   0f b6 d0                        	movzx edx, al
0x804a02d:   66 0f be 85 6f ff ff ff         	movsx ax, byte ptr [ebp - 0x91]
0x804a035:   01 d0                           	add eax, edx
0x804a037:   98                              	cwde 
0x804a038:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a03b:   0f bf fa                        	movsx edi, dx
0x804a03e:   99                              	cdq 
0x804a03f:   f7 ff                           	idiv edi
0x804a041:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x804a044:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a047:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804a04d:   83 bd 30 ff ff ff 00            	cmp dword ptr [ebp - 0xd0], 0
0x804a054:   74 07                           	je 0x804a05d <func_1+0x8d0>
0x804a056:   b8 01 00 00 00                  	mov eax, 1
0x804a05b:   eb 05                           	jmp 0x804a062 <func_1+0x8d5>
0x804a05d:   b8 00 00 00 00                  	mov eax, 0
0x804a062:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a065:   83 45 e4 07                     	add dword ptr [ebp - 0x1c], 7
0x804a069:   83 7d e4 12                     	cmp dword ptr [ebp - 0x1c], 0x12
0x804a06d:   0f 86 7c f9 ff ff               	jbe 0x80499ef <func_1+0x262>
0x804a073:   eb 01                           	jmp 0x804a076 <func_1+0x8e9>
0x804a075:   90                              	nop 
0x804a076:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x804a07e:   0f 84 3c 02 00 00               	je 0x804a2c0 <func_1+0xb33>
0x804a084:   c7 85 ec fe ff ff 2e 27 fa ef   	mov dword ptr [ebp - 0x114], 0xeffa272e
0x804a08e:   c6 85 eb fe ff ff 00            	mov byte ptr [ebp - 0x115], 0
0x804a095:   c6 85 ea fe ff ff 09            	mov byte ptr [ebp - 0x116], 9
0x804a09c:   c7 85 ec fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x114], 1
0x804a0a6:   66 0f be 45 d3                  	movsx ax, byte ptr [ebp - 0x2d]
0x804a0ab:   83 e0 01                        	and eax, 1
0x804a0ae:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a0b1:   89 d1                           	mov ecx, edx
0x804a0b3:   ba 00 00 00 00                  	mov edx, 0
0x804a0b8:   66 f7 f1                        	div cx
0x804a0bb:   89 d0                           	mov eax, edx
0x804a0bd:   0f b7 d0                        	movzx edx, ax
0x804a0c0:   0f bf 85 5e ff ff ff            	movsx eax, word ptr [ebp - 0xa2]
0x804a0c7:   39 c2                           	cmp edx, eax
0x804a0c9:   0f 9f c0                        	setg al
0x804a0cc:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a0cf:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a0d3:   0f b6 d0                        	movzx edx, al
0x804a0d6:   0f b7 85 5c ff ff ff            	movzx eax, word ptr [ebp - 0xa4]
0x804a0dd:   0f b6 c0                        	movzx eax, al
0x804a0e0:   29 c2                           	sub edx, eax
0x804a0e2:   89 d0                           	mov eax, edx
0x804a0e4:   66 c1 e8 03                     	shr ax, 3
0x804a0e8:   66 85 c0                        	test ax, ax
0x804a0eb:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a0ee:   66 d1 e8                        	shr ax, 1
0x804a0f1:   0f b7 c8                        	movzx ecx, ax
0x804a0f4:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a0f7:   66 69 c0 e7 da                  	imul ax, ax, 0xdae7
0x804a0fc:   83 c8 01                        	or eax, 1
0x804a0ff:   0f b7 c0                        	movzx eax, ax
0x804a102:   ba ec 55 5b 8f                  	mov edx, 0x8f5b55ec
0x804a107:   29 c2                           	sub edx, eax
0x804a109:   89 d0                           	mov eax, edx
0x804a10b:   3d 1a a4 00 00                  	cmp eax, 0xa41a
0x804a110:   0f 96 c0                        	setbe al
0x804a113:   0f b6 c0                        	movzx eax, al
0x804a116:   0f be 5d d3                     	movsx ebx, byte ptr [ebp - 0x2d]
0x804a11a:   99                              	cdq 
0x804a11b:   f7 fb                           	idiv ebx
0x804a11d:   89 d0                           	mov eax, edx
0x804a11f:   25 bc 56 94 42                  	and eax, 0x429456bc
0x804a124:   39 c1                           	cmp ecx, eax
0x804a126:   0f 95 c0                        	setne al
0x804a129:   0f b6 c0                        	movzx eax, al
0x804a12c:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a12f:   76 07                           	jbe 0x804a138 <func_1+0x9ab>
0x804a131:   b8 db ff ff ff                  	mov eax, 0xffffffdb
0x804a136:   eb 05                           	jmp 0x804a13d <func_1+0x9b0>
0x804a138:   b8 da ff ff ff                  	mov eax, 0xffffffda
0x804a13d:   88 45 d3                        	mov byte ptr [ebp - 0x2d], al
0x804a140:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x804a14a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a14d:   89 c2                           	mov edx, eax
0x804a14f:   0f b6 85 eb fe ff ff            	movzx eax, byte ptr [ebp - 0x115]
0x804a156:   21 d0                           	and eax, edx
0x804a158:   0f b6 d0                        	movzx edx, al
0x804a15b:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a161:   c1 e0 05                        	shl eax, 5
0x804a164:   0f b6 c0                        	movzx eax, al
0x804a167:   89 c1                           	mov ecx, eax
0x804a169:   d3 e2                           	shl edx, cl
0x804a16b:   89 d0                           	mov eax, edx
0x804a16d:   85 c0                           	test eax, eax
0x804a16f:   74 32                           	je 0x804a1a3 <func_1+0xa16>
0x804a171:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a178:   0f 95 c0                        	setne al
0x804a17b:   0f b6 c0                        	movzx eax, al
0x804a17e:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a181:   0f 9f c0                        	setg al
0x804a184:   0f b6 c0                        	movzx eax, al
0x804a187:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a18a:   0f 9e c0                        	setle al
0x804a18d:   0f b6 c0                        	movzx eax, al
0x804a190:   23 45 a0                        	and eax, dword ptr [ebp - 0x60]
0x804a193:   89 c2                           	mov edx, eax
0x804a195:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a198:   39 c2                           	cmp edx, eax
0x804a19a:   74 07                           	je 0x804a1a3 <func_1+0xa16>
0x804a19c:   b8 01 00 00 00                  	mov eax, 1
0x804a1a1:   eb 05                           	jmp 0x804a1a8 <func_1+0xa1b>
0x804a1a3:   b8 00 00 00 00                  	mov eax, 0
0x804a1a8:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a1ac:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x804a1b0:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a1b3:   0f b7 c0                        	movzx eax, ax
0x804a1b6:   89 c1                           	mov ecx, eax
0x804a1b8:   d3 fa                           	sar edx, cl
0x804a1ba:   89 d0                           	mov eax, edx
0x804a1bc:   85 c0                           	test eax, eax
0x804a1be:   74 6f                           	je 0x804a22f <func_1+0xaa2>
0x804a1c0:   c7 85 d8 fe ff ff a7 1c 55 a6   	mov dword ptr [ebp - 0x128], 0xa6551ca7
0x804a1ca:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a1d1:   f7 d8                           	neg eax
0x804a1d3:   0f b7 d0                        	movzx edx, ax
0x804a1d6:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a1dc:   0f b7 c0                        	movzx eax, ax
0x804a1df:   89 c1                           	mov ecx, eax
0x804a1e1:   d3 fa                           	sar edx, cl
0x804a1e3:   89 d0                           	mov eax, edx
0x804a1e5:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a1eb:   0f 93 c0                        	setae al
0x804a1ee:   0f b6 d0                        	movzx edx, al
0x804a1f1:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a1f4:   66 c1 e8 0a                     	shr ax, 0xa
0x804a1f8:   0f b7 c0                        	movzx eax, ax
0x804a1fb:   39 85 d8 fe ff ff               	cmp dword ptr [ebp - 0x128], eax
0x804a201:   0f 94 c0                        	sete al
0x804a204:   0f b6 c0                        	movzx eax, al
0x804a207:   0b 45 e0                        	or eax, dword ptr [ebp - 0x20]
0x804a20a:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a20d:   0f 92 c0                        	setb al
0x804a210:   0f b6 c0                        	movzx eax, al
0x804a213:   29 c2                           	sub edx, eax
0x804a215:   89 d0                           	mov eax, edx
0x804a217:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a21a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a21d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a220:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a224:   0f 84 f4 03 00 00               	je 0x804a61e <func_1+0xe91>
0x804a22a:   e9 58 f6 ff ff                  	jmp 0x8049887 <func_1+0xfa>
0x804a22f:   66 c7 85 e8 fe ff ff fe ff      	mov word ptr [ebp - 0x118], 0xfffe
0x804a238:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x804a242:   c7 85 e0 fe ff ff f4 d0 3b 04   	mov dword ptr [ebp - 0x120], 0x43bd0f4
0x804a24c:   c7 45 c0 a1 00 00 00            	mov dword ptr [ebp - 0x40], 0xa1
0x804a253:   c7 85 dc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x124], 0xffffffff
0x804a25d:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a260:   0f b7 d8                        	movzx ebx, ax
0x804a263:   0f be 45 d3                     	movsx eax, byte ptr [ebp - 0x2d]
0x804a267:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x804a26a:   89 55 b8                        	mov dword ptr [ebp - 0x48], edx
0x804a26d:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a270:   0f 94 c0                        	sete al
0x804a273:   0f b6 d0                        	movzx edx, al
0x804a276:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a279:   0f be c0                        	movsx eax, al
0x804a27c:   01 c0                           	add eax, eax
0x804a27e:   98                              	cwde 
0x804a27f:   89 c1                           	mov ecx, eax
0x804a281:   d3 e2                           	shl edx, cl
0x804a283:   89 d0                           	mov eax, edx
0x804a285:   0f b7 c0                        	movzx eax, ax
0x804a288:   89 c1                           	mov ecx, eax
0x804a28a:   d3 e3                           	shl ebx, cl
0x804a28c:   89 d8                           	mov eax, ebx
0x804a28e:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a291:   66 83 6d de 01                  	sub word ptr [ebp - 0x22], 1
0x804a296:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x804a29b:   74 04                           	je 0x804a2a1 <func_1+0xb14>
0x804a29d:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a2a1:   c6 45 c7 08                     	mov byte ptr [ebp - 0x39], 8
0x804a2a5:   66 83 bd e8 fe ff ff 00         	cmp word ptr [ebp - 0x118], 0
0x804a2ad:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a2b1:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a2b7:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x804a2bb:   e9 5e 03 00 00                  	jmp 0x804a61e <func_1+0xe91>
0x804a2c0:   66 c7 85 12 ff ff ff 00 00      	mov word ptr [ebp - 0xee], 0
0x804a2c9:   c7 85 0c ff ff ff 88 d9 7d ea   	mov dword ptr [ebp - 0xf4], 0xea7dd988
0x804a2d3:   c7 85 08 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf8], 0
0x804a2dd:   c7 85 04 ff ff ff 2b 19 1a 68   	mov dword ptr [ebp - 0xfc], 0x681a192b
0x804a2e7:   c7 45 90 19 00 00 00            	mov dword ptr [ebp - 0x70], 0x19
0x804a2ee:   e9 b7 02 00 00                  	jmp 0x804a5aa <func_1+0xe1d>
0x804a2f3:   c6 45 8b 06                     	mov byte ptr [ebp - 0x75], 6
0x804a2f7:   c7 85 00 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x100], 1
0x804a301:   c7 85 fc fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x104], 0xfffffff6
0x804a30b:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a312:   e9 27 01 00 00                  	jmp 0x804a43e <func_1+0xcb1>
0x804a317:   c7 85 f0 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x110], 0xfffffffe
0x804a321:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a324:   0b 85 f0 fe ff ff               	or eax, dword ptr [ebp - 0x110]
0x804a32a:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a32d:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a330:   ba e1 e2 ff ff                  	mov edx, 0xffffe2e1
0x804a335:   29 c2                           	sub edx, eax
0x804a337:   89 d0                           	mov eax, edx
0x804a339:   0f bf d0                        	movsx edx, ax
0x804a33c:   66 83 bd 5c ff ff ff 07         	cmp word ptr [ebp - 0xa4], 7
0x804a344:   0f 95 c0                        	setne al
0x804a347:   0f b6 c0                        	movzx eax, al
0x804a34a:   0f af d0                        	imul edx, eax
0x804a34d:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a354:   31 c2                           	xor edx, eax
0x804a356:   0f be 45 8b                     	movsx eax, byte ptr [ebp - 0x75]
0x804a35a:   39 c2                           	cmp edx, eax
0x804a35c:   0f 9c c0                        	setl al
0x804a35f:   0f b6 c0                        	movzx eax, al
0x804a362:   f7 d0                           	not eax
0x804a364:   0f b7 d0                        	movzx edx, ax
0x804a367:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a36a:   0f b7 c0                        	movzx eax, ax
0x804a36d:   89 c1                           	mov ecx, eax
0x804a36f:   d3 e2                           	shl edx, cl
0x804a371:   89 d0                           	mov eax, edx
0x804a373:   66 0f be 9d 6f ff ff ff         	movsx bx, byte ptr [ebp - 0x91]
0x804a37b:   ba 00 00 00 00                  	mov edx, 0
0x804a380:   66 f7 f3                        	div bx
0x804a383:   0f b7 c0                        	movzx eax, ax
0x804a386:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a389:   66 83 bd 12 ff ff ff 00         	cmp word ptr [ebp - 0xee], 0
0x804a391:   74 6f                           	je 0x804a402 <func_1+0xc75>
0x804a393:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a396:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a39c:   0f 95 c0                        	setne al
0x804a39f:   0f b6 d0                        	movzx edx, al
0x804a3a2:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804a3a6:   0f be c0                        	movsx eax, al
0x804a3a9:   29 c2                           	sub edx, eax
0x804a3ab:   89 d0                           	mov eax, edx
0x804a3ad:   89 c2                           	mov edx, eax
0x804a3af:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a3b5:   29 d0                           	sub eax, edx
0x804a3b7:   83 f8 77                        	cmp eax, 0x77
0x804a3ba:   0f 97 c0                        	seta al
0x804a3bd:   0f b6 d0                        	movzx edx, al
0x804a3c0:   0f be 45 8b                     	movsx eax, byte ptr [ebp - 0x75]
0x804a3c4:   09 d0                           	or eax, edx
0x804a3c6:   83 f0 fa                        	xor eax, 0xfffffffa
0x804a3c9:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a3cc:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a3cf:   8b 4d c0                        	mov ecx, dword ptr [ebp - 0x40]
0x804a3d2:   ba 00 00 00 00                  	mov edx, 0
0x804a3d7:   f7 f1                           	div ecx
0x804a3d9:   0f be 45 d3                     	movsx eax, byte ptr [ebp - 0x2d]
0x804a3dd:   39 c2                           	cmp edx, eax
0x804a3df:   0f 95 c0                        	setne al
0x804a3e2:   0f b6 d0                        	movzx edx, al
0x804a3e5:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a3eb:   29 c2                           	sub edx, eax
0x804a3ed:   89 d0                           	mov eax, edx
0x804a3ef:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a3f5:   0f 94 c0                        	sete al
0x804a3f8:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a3fb:   b8 01 00 00 00                  	mov eax, 1
0x804a400:   eb 05                           	jmp 0x804a407 <func_1+0xc7a>
0x804a402:   b8 00 00 00 00                  	mov eax, 0
0x804a407:   0f be d0                        	movsx edx, al
0x804a40a:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a411:   0f be c0                        	movsx eax, al
0x804a414:   89 c1                           	mov ecx, eax
0x804a416:   d3 e2                           	shl edx, cl
0x804a418:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a41f:   31 d0                           	xor eax, edx
0x804a421:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a424:   0f b7 85 5a ff ff ff            	movzx eax, word ptr [ebp - 0xa6]
0x804a42b:   09 45 9c                        	or dword ptr [ebp - 0x64], eax
0x804a42e:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a431:   23 85 7c ff ff ff               	and eax, dword ptr [ebp - 0x84]
0x804a437:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a43a:   83 45 c8 03                     	add dword ptr [ebp - 0x38], 3
0x804a43e:   83 7d c8 11                     	cmp dword ptr [ebp - 0x38], 0x11
0x804a442:   0f 86 cf fe ff ff               	jbe 0x804a317 <func_1+0xb8a>
0x804a448:   c6 45 8b 00                     	mov byte ptr [ebp - 0x75], 0
0x804a44c:   eb 45                           	jmp 0x804a493 <func_1+0xd06>
0x804a44e:   c7 85 f8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x108], 0xffffffff
0x804a458:   c7 85 f4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x10c], 1
0x804a462:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a466:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a46c:   80 7d 83 00                     	cmp byte ptr [ebp - 0x7d], 0
0x804a470:   0f 95 c2                        	setne dl
0x804a473:   0f b6 d2                        	movzx edx, dl
0x804a476:   89 d6                           	mov esi, edx
0x804a478:   0b 75 b0                        	or esi, dword ptr [ebp - 0x50]
0x804a47b:   ba 00 00 00 00                  	mov edx, 0
0x804a480:   f7 f6                           	div esi
0x804a482:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a485:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a489:   0f b6 45 8b                     	movzx eax, byte ptr [ebp - 0x75]
0x804a48d:   83 e8 01                        	sub eax, 1
0x804a490:   88 45 8b                        	mov byte ptr [ebp - 0x75], al
0x804a493:   80 7d 8b f7                     	cmp byte ptr [ebp - 0x75], 0xf7
0x804a497:   75 b5                           	jne 0x804a44e <func_1+0xcc1>
0x804a499:   c7 45 a4 06 00 00 00            	mov dword ptr [ebp - 0x5c], 6
0x804a4a0:   83 7d a4 1d                     	cmp dword ptr [ebp - 0x5c], 0x1d
0x804a4a4:   0f 85 9b 00 00 00               	jne 0x804a545 <func_1+0xdb8>
0x804a4aa:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x804a4ae:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a4b4:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a4b8:   0f bf b5 76 ff ff ff            	movsx esi, word ptr [ebp - 0x8a]
0x804a4bf:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a4c5:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x804a4c9:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a4cf:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x804a4d3:   0f b6 75 83                     	movzx esi, byte ptr [ebp - 0x7d]
0x804a4d7:   0f be 5d c7                     	movsx ebx, byte ptr [ebp - 0x39]
0x804a4db:   0f be 4d d3                     	movsx ecx, byte ptr [ebp - 0x2d]
0x804a4df:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x804a4e3:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a4e9:   50                              	push eax
0x804a4ea:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a4ed:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a4f0:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a4f6:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a4fc:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a502:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a508:   57                              	push edi
0x804a509:   56                              	push esi
0x804a50a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a50d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a510:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a513:   53                              	push ebx
0x804a514:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a517:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a51a:   51                              	push ecx
0x804a51b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a51e:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a521:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a524:   52                              	push edx
0x804a525:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a528:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a52b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a52e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a531:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a534:   e8 ed f0 ff ff                  	call 0x8049626 <set_var>
0x804a539:   83 c4 68                        	add esp, 0x68
0x804a53c:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a540:   e9 39 02 00 00                  	jmp 0x804a77e <func_1+0xff1>
0x804a545:   c7 45 cc 32 a7 1d 2b            	mov dword ptr [ebp - 0x34], 0x2b1da732
0x804a54c:   83 7d cc 05                     	cmp dword ptr [ebp - 0x34], 5
0x804a550:   77 0d                           	ja 0x804a55f <func_1+0xdd2>
0x804a552:   80 7d b7 00                     	cmp byte ptr [ebp - 0x49], 0
0x804a556:   74 07                           	je 0x804a55f <func_1+0xdd2>
0x804a558:   b8 01 00 00 00                  	mov eax, 1
0x804a55d:   eb 05                           	jmp 0x804a564 <func_1+0xdd7>
0x804a55f:   b8 00 00 00 00                  	mov eax, 0
0x804a564:   66 0d 83 e9                     	or ax, 0xe983
0x804a568:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x804a56c:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a570:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a573:   0f 9e c0                        	setle al
0x804a576:   0f b6 d0                        	movzx edx, al
0x804a579:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x804a57d:   21 d0                           	and eax, edx
0x804a57f:   85 c0                           	test eax, eax
0x804a581:   74 10                           	je 0x804a593 <func_1+0xe06>
0x804a583:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x804a58a:   74 07                           	je 0x804a593 <func_1+0xe06>
0x804a58c:   b8 01 00 00 00                  	mov eax, 1
0x804a591:   eb 05                           	jmp 0x804a598 <func_1+0xe0b>
0x804a593:   b8 00 00 00 00                  	mov eax, 0
0x804a598:   85 c0                           	test eax, eax
0x804a59a:   0f 9e c0                        	setle al
0x804a59d:   0f b6 c0                        	movzx eax, al
0x804a5a0:   31 85 00 ff ff ff               	xor dword ptr [ebp - 0x100], eax
0x804a5a6:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x804a5aa:   83 7d 90 04                     	cmp dword ptr [ebp - 0x70], 4
0x804a5ae:   0f 86 3f fd ff ff               	jbe 0x804a2f3 <func_1+0xb66>
0x804a5b4:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a5b7:   0f b7 c0                        	movzx eax, ax
0x804a5ba:   ba 88 a3 00 00                  	mov edx, 0xa388
0x804a5bf:   89 c1                           	mov ecx, eax
0x804a5c1:   d3 e2                           	shl edx, cl
0x804a5c3:   89 d0                           	mov eax, edx
0x804a5c5:   0f b7 d0                        	movzx edx, ax
0x804a5c8:   83 7d e8 02                     	cmp dword ptr [ebp - 0x18], 2
0x804a5cc:   0f 95 c0                        	setne al
0x804a5cf:   0f b6 c0                        	movzx eax, al
0x804a5d2:   0f af c2                        	imul eax, edx
0x804a5d5:   33 45 d8                        	xor eax, dword ptr [ebp - 0x28]
0x804a5d8:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x804a5de:   83 bd 54 ff ff ff ff            	cmp dword ptr [ebp - 0xac], -1
0x804a5e5:   0f 95 c0                        	setne al
0x804a5e8:   0f b6 c0                        	movzx eax, al
0x804a5eb:   39 85 44 ff ff ff               	cmp dword ptr [ebp - 0xbc], eax
0x804a5f1:   0f 9e c0                        	setle al
0x804a5f4:   0f b6 c0                        	movzx eax, al
0x804a5f7:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a5fd:   0f be 8d 6f ff ff ff            	movsx ecx, byte ptr [ebp - 0x91]
0x804a604:   b8 9b f1 00 00                  	mov eax, 0xf19b
0x804a609:   ba 00 00 00 00                  	mov edx, 0
0x804a60e:   f7 f1                           	div ecx
0x804a610:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a616:   21 d0                           	and eax, edx
0x804a618:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a61e:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a625:   0f b7 85 38 ff ff ff            	movzx eax, word ptr [ebp - 0xc8]
0x804a62c:   83 c0 01                        	add eax, 1
0x804a62f:   66 89 85 38 ff ff ff            	mov word ptr [ebp - 0xc8], ax
0x804a636:   e9 ac 00 00 00                  	jmp 0x804a6e7 <func_1+0xf5a>
0x804a63b:   c6 85 d7 fe ff ff 00            	mov byte ptr [ebp - 0x129], 0
0x804a642:   c7 85 d0 fe ff ff fa ed 88 fe   	mov dword ptr [ebp - 0x130], 0xfe88edfa
0x804a64c:   0f b6 85 d7 fe ff ff            	movzx eax, byte ptr [ebp - 0x129]
0x804a653:   83 c0 01                        	add eax, 1
0x804a656:   88 85 d7 fe ff ff               	mov byte ptr [ebp - 0x129], al
0x804a65c:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a65f:   f7 d0                           	not eax
0x804a661:   0f be d0                        	movsx edx, al
0x804a664:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a66a:   0f be c0                        	movsx eax, al
0x804a66d:   29 c2                           	sub edx, eax
0x804a66f:   89 d0                           	mov eax, edx
0x804a671:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a677:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x804a67e:   eb 2c                           	jmp 0x804a6ac <func_1+0xf1f>
0x804a680:   c6 85 cf fe ff ff 61            	mov byte ptr [ebp - 0x131], 0x61
0x804a687:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a68d:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a690:   80 bd cf fe ff ff 00            	cmp byte ptr [ebp - 0x131], 0
0x804a697:   75 1b                           	jne 0x804a6b4 <func_1+0xf27>
0x804a699:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a69d:   75 18                           	jne 0x804a6b7 <func_1+0xf2a>
0x804a69f:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a6a6:   75 12                           	jne 0x804a6ba <func_1+0xf2d>
0x804a6a8:   83 6d 98 01                     	sub dword ptr [ebp - 0x68], 1
0x804a6ac:   83 7d 98 f4                     	cmp dword ptr [ebp - 0x68], -0xc
0x804a6b0:   7c ce                           	jl 0x804a680 <func_1+0xef3>
0x804a6b2:   eb 07                           	jmp 0x804a6bb <func_1+0xf2e>
0x804a6b4:   90                              	nop 
0x804a6b5:   eb 04                           	jmp 0x804a6bb <func_1+0xf2e>
0x804a6b7:   90                              	nop 
0x804a6b8:   eb 01                           	jmp 0x804a6bb <func_1+0xf2e>
0x804a6ba:   90                              	nop 
0x804a6bb:   66 83 bd 5c ff ff ff 2c         	cmp word ptr [ebp - 0xa4], 0x2c
0x804a6c3:   0f 9f c0                        	setg al
0x804a6c6:   0f b6 d0                        	movzx edx, al
0x804a6c9:   0f b6 4d 83                     	movzx ecx, byte ptr [ebp - 0x7d]
0x804a6cd:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a6d1:   39 c1                           	cmp ecx, eax
0x804a6d3:   0f 94 c0                        	sete al
0x804a6d6:   0f b6 c0                        	movzx eax, al
0x804a6d9:   39 c2                           	cmp edx, eax
0x804a6db:   0f 9d c0                        	setge al
0x804a6de:   0f b6 c0                        	movzx eax, al
0x804a6e1:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a6e7:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a6ed:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a6f0:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a6f4:   0f bf b5 76 ff ff ff            	movsx esi, word ptr [ebp - 0x8a]
0x804a6fb:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a701:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x804a705:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a70b:   0f b7 7d 80                     	movzx edi, word ptr [ebp - 0x80]
0x804a70f:   0f b6 75 83                     	movzx esi, byte ptr [ebp - 0x7d]
0x804a713:   0f be 5d c7                     	movsx ebx, byte ptr [ebp - 0x39]
0x804a717:   0f be 4d d3                     	movsx ecx, byte ptr [ebp - 0x2d]
0x804a71b:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x804a71f:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a725:   50                              	push eax
0x804a726:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a729:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a72c:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a732:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a738:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a73e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a744:   57                              	push edi
0x804a745:   56                              	push esi
0x804a746:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a749:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a74c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a74f:   53                              	push ebx
0x804a750:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a753:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a756:   51                              	push ecx
0x804a757:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a75a:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a75d:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a760:   52                              	push edx
0x804a761:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a764:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a767:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a76a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a76d:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a770:   e8 b1 ee ff ff                  	call 0x8049626 <set_var>
0x804a775:   83 c4 68                        	add esp, 0x68
0x804a778:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a77e:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a781:   5b                              	pop ebx
0x804a782:   5e                              	pop esi
0x804a783:   5f                              	pop edi
0x804a784:   5d                              	pop ebp
0x804a785:   c3                              	ret 
; function: main at 0x804a786 -- 0x804ab10
0x804a786:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a78a:   83 e4 f0                        	and esp, 0xfffffff0
0x804a78d:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a790:   55                              	push ebp
0x804a791:   89 e5                           	mov ebp, esp
0x804a793:   53                              	push ebx
0x804a794:   51                              	push ecx
0x804a795:   83 ec 10                        	sub esp, 0x10
0x804a798:   e8 f3 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a79d:   81 c3 63 28 00 00               	add ebx, 0x2863
0x804a7a3:   89 c8                           	mov eax, ecx
0x804a7a5:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a7ac:   83 38 02                        	cmp dword ptr [eax], 2
0x804a7af:   75 26                           	jne 0x804a7d7 <main+0x51>
0x804a7b1:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a7b4:   83 c0 04                        	add eax, 4
0x804a7b7:   8b 00                           	mov eax, dword ptr [eax]
0x804a7b9:   83 ec 08                        	sub esp, 8
0x804a7bc:   8d 93 f8 db ff ff               	lea edx, [ebx - 0x2408]
0x804a7c2:   52                              	push edx
0x804a7c3:   50                              	push eax
0x804a7c4:   e8 37 db ff ff                  	call 0x8048300 <strcmp>
0x804a7c9:   83 c4 10                        	add esp, 0x10
0x804a7cc:   85 c0                           	test eax, eax
0x804a7ce:   75 07                           	jne 0x804a7d7 <main+0x51>
0x804a7d0:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a7d7:   e8 7a dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a7dc:   e8 8a ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a7e1:   e8 a7 ef ff ff                  	call 0x804978d <func_1>
0x804a7e6:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a7ec:   83 ec 04                        	sub esp, 4
0x804a7ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7f2:   8d 93 fa db ff ff               	lea edx, [ebx - 0x2406]
0x804a7f8:   52                              	push edx
0x804a7f9:   50                              	push eax
0x804a7fa:   e8 78 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ff:   83 c4 10                        	add esp, 0x10
0x804a802:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a808:   83 ec 04                        	sub esp, 4
0x804a80b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a80e:   8d 93 fe db ff ff               	lea edx, [ebx - 0x2402]
0x804a814:   52                              	push edx
0x804a815:   50                              	push eax
0x804a816:   e8 5c ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a81b:   83 c4 10                        	add esp, 0x10
0x804a81e:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a824:   89 c2                           	mov edx, eax
0x804a826:   83 ec 04                        	sub esp, 4
0x804a829:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a82c:   8d 83 02 dc ff ff               	lea eax, [ebx - 0x23fe]
0x804a832:   50                              	push eax
0x804a833:   52                              	push edx
0x804a834:   e8 3e ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a839:   83 c4 10                        	add esp, 0x10
0x804a83c:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a842:   83 ec 04                        	sub esp, 4
0x804a845:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a848:   8d 93 07 dc ff ff               	lea edx, [ebx - 0x23f9]
0x804a84e:   52                              	push edx
0x804a84f:   50                              	push eax
0x804a850:   e8 22 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a855:   83 c4 10                        	add esp, 0x10
0x804a858:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a85e:   89 c2                           	mov edx, eax
0x804a860:   83 ec 04                        	sub esp, 4
0x804a863:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a866:   8d 83 0c dc ff ff               	lea eax, [ebx - 0x23f4]
0x804a86c:   50                              	push eax
0x804a86d:   52                              	push edx
0x804a86e:   e8 04 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a873:   83 c4 10                        	add esp, 0x10
0x804a876:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a87d:   0f b7 c0                        	movzx eax, ax
0x804a880:   83 ec 04                        	sub esp, 4
0x804a883:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a886:   8d 93 11 dc ff ff               	lea edx, [ebx - 0x23ef]
0x804a88c:   52                              	push edx
0x804a88d:   50                              	push eax
0x804a88e:   e8 e4 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a893:   83 c4 10                        	add esp, 0x10
0x804a896:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a89c:   83 ec 04                        	sub esp, 4
0x804a89f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8a2:   8d 93 16 dc ff ff               	lea edx, [ebx - 0x23ea]
0x804a8a8:   52                              	push edx
0x804a8a9:   50                              	push eax
0x804a8aa:   e8 c8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8af:   83 c4 10                        	add esp, 0x10
0x804a8b2:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a8b8:   89 c2                           	mov edx, eax
0x804a8ba:   83 ec 04                        	sub esp, 4
0x804a8bd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8c0:   8d 83 1b dc ff ff               	lea eax, [ebx - 0x23e5]
0x804a8c6:   50                              	push eax
0x804a8c7:   52                              	push edx
0x804a8c8:   e8 aa ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8cd:   83 c4 10                        	add esp, 0x10
0x804a8d0:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a8d6:   89 c2                           	mov edx, eax
0x804a8d8:   83 ec 04                        	sub esp, 4
0x804a8db:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8de:   8d 83 21 dc ff ff               	lea eax, [ebx - 0x23df]
0x804a8e4:   50                              	push eax
0x804a8e5:   52                              	push edx
0x804a8e6:   e8 8c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8eb:   83 c4 10                        	add esp, 0x10
0x804a8ee:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804a8f5:   0f be c0                        	movsx eax, al
0x804a8f8:   83 ec 04                        	sub esp, 4
0x804a8fb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8fe:   8d 93 27 dc ff ff               	lea edx, [ebx - 0x23d9]
0x804a904:   52                              	push edx
0x804a905:   50                              	push eax
0x804a906:   e8 6c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a90b:   83 c4 10                        	add esp, 0x10
0x804a90e:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a914:   83 ec 04                        	sub esp, 4
0x804a917:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a91a:   8d 93 2d dc ff ff               	lea edx, [ebx - 0x23d3]
0x804a920:   52                              	push edx
0x804a921:   50                              	push eax
0x804a922:   e8 50 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a927:   83 c4 10                        	add esp, 0x10
0x804a92a:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a930:   83 ec 04                        	sub esp, 4
0x804a933:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a936:   8d 93 33 dc ff ff               	lea edx, [ebx - 0x23cd]
0x804a93c:   52                              	push edx
0x804a93d:   50                              	push eax
0x804a93e:   e8 34 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a943:   83 c4 10                        	add esp, 0x10
0x804a946:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804a94d:   0f be c0                        	movsx eax, al
0x804a950:   83 ec 04                        	sub esp, 4
0x804a953:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a956:   8d 93 39 dc ff ff               	lea edx, [ebx - 0x23c7]
0x804a95c:   52                              	push edx
0x804a95d:   50                              	push eax
0x804a95e:   e8 14 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a963:   83 c4 10                        	add esp, 0x10
0x804a966:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a96c:   89 c2                           	mov edx, eax
0x804a96e:   83 ec 04                        	sub esp, 4
0x804a971:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a974:   8d 83 3f dc ff ff               	lea eax, [ebx - 0x23c1]
0x804a97a:   50                              	push eax
0x804a97b:   52                              	push edx
0x804a97c:   e8 f6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a981:   83 c4 10                        	add esp, 0x10
0x804a984:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804a98a:   89 c2                           	mov edx, eax
0x804a98c:   83 ec 04                        	sub esp, 4
0x804a98f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a992:   8d 83 45 dc ff ff               	lea eax, [ebx - 0x23bb]
0x804a998:   50                              	push eax
0x804a999:   52                              	push edx
0x804a99a:   e8 d8 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a99f:   83 c4 10                        	add esp, 0x10
0x804a9a2:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a9a8:   83 ec 04                        	sub esp, 4
0x804a9ab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ae:   8d 93 4b dc ff ff               	lea edx, [ebx - 0x23b5]
0x804a9b4:   52                              	push edx
0x804a9b5:   50                              	push eax
0x804a9b6:   e8 bc eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9bb:   83 c4 10                        	add esp, 0x10
0x804a9be:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804a9c5:   0f b6 c0                        	movzx eax, al
0x804a9c8:   83 ec 04                        	sub esp, 4
0x804a9cb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ce:   8d 93 51 dc ff ff               	lea edx, [ebx - 0x23af]
0x804a9d4:   52                              	push edx
0x804a9d5:   50                              	push eax
0x804a9d6:   e8 9c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9db:   83 c4 10                        	add esp, 0x10
0x804a9de:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804a9e5:   0f b7 c0                        	movzx eax, ax
0x804a9e8:   83 ec 04                        	sub esp, 4
0x804a9eb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ee:   8d 93 57 dc ff ff               	lea edx, [ebx - 0x23a9]
0x804a9f4:   52                              	push edx
0x804a9f5:   50                              	push eax
0x804a9f6:   e8 7c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9fb:   83 c4 10                        	add esp, 0x10
0x804a9fe:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aa04:   83 ec 04                        	sub esp, 4
0x804aa07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa0a:   8d 93 5d dc ff ff               	lea edx, [ebx - 0x23a3]
0x804aa10:   52                              	push edx
0x804aa11:   50                              	push eax
0x804aa12:   e8 60 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa17:   83 c4 10                        	add esp, 0x10
0x804aa1a:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aa20:   83 ec 04                        	sub esp, 4
0x804aa23:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa26:   8d 93 63 dc ff ff               	lea edx, [ebx - 0x239d]
0x804aa2c:   52                              	push edx
0x804aa2d:   50                              	push eax
0x804aa2e:   e8 44 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa33:   83 c4 10                        	add esp, 0x10
0x804aa36:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804aa3d:   0f be c0                        	movsx eax, al
0x804aa40:   83 ec 04                        	sub esp, 4
0x804aa43:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa46:   8d 93 69 dc ff ff               	lea edx, [ebx - 0x2397]
0x804aa4c:   52                              	push edx
0x804aa4d:   50                              	push eax
0x804aa4e:   e8 24 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa53:   83 c4 10                        	add esp, 0x10
0x804aa56:   0f b7 83 b0 04 00 00            	movzx eax, word ptr [ebx + 0x4b0]
0x804aa5d:   98                              	cwde 
0x804aa5e:   83 ec 04                        	sub esp, 4
0x804aa61:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa64:   8d 93 6f dc ff ff               	lea edx, [ebx - 0x2391]
0x804aa6a:   52                              	push edx
0x804aa6b:   50                              	push eax
0x804aa6c:   e8 06 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa71:   83 c4 10                        	add esp, 0x10
0x804aa74:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aa7a:   83 ec 04                        	sub esp, 4
0x804aa7d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa80:   8d 93 75 dc ff ff               	lea edx, [ebx - 0x238b]
0x804aa86:   52                              	push edx
0x804aa87:   50                              	push eax
0x804aa88:   e8 ea ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8d:   83 c4 10                        	add esp, 0x10
0x804aa90:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aa96:   83 ec 04                        	sub esp, 4
0x804aa99:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9c:   8d 93 7b dc ff ff               	lea edx, [ebx - 0x2385]
0x804aaa2:   52                              	push edx
0x804aaa3:   50                              	push eax
0x804aaa4:   e8 ce ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa9:   83 c4 10                        	add esp, 0x10
0x804aaac:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804aab3:   0f b7 c0                        	movzx eax, ax
0x804aab6:   83 ec 04                        	sub esp, 4
0x804aab9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aabc:   8d 93 81 dc ff ff               	lea edx, [ebx - 0x237f]
0x804aac2:   52                              	push edx
0x804aac3:   50                              	push eax
0x804aac4:   e8 ae ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac9:   83 c4 10                        	add esp, 0x10
0x804aacc:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804aad2:   89 c2                           	mov edx, eax
0x804aad4:   83 ec 04                        	sub esp, 4
0x804aad7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aada:   8d 83 87 dc ff ff               	lea eax, [ebx - 0x2379]
0x804aae0:   50                              	push eax
0x804aae1:   52                              	push edx
0x804aae2:   e8 90 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae7:   83 c4 10                        	add esp, 0x10
0x804aaea:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aaf0:   f7 d0                           	not eax
0x804aaf2:   83 ec 08                        	sub esp, 8
0x804aaf5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf8:   50                              	push eax
0x804aaf9:   e8 68 d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804aafe:   83 c4 10                        	add esp, 0x10
0x804ab01:   b8 00 00 00 00                  	mov eax, 0
0x804ab06:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab09:   59                              	pop ecx
0x804ab0a:   5b                              	pop ebx
0x804ab0b:   5d                              	pop ebp
0x804ab0c:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab0f:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab10 -- 0x804ab14
0x804ab10:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab13:   c3                              	ret 
; data inside code section at 0x804ab14 -- 0x804ab20
0x804ab14:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804ab20 -- 0x804ab7d
0x804ab20:   55                              	push ebp
0x804ab21:   57                              	push edi
0x804ab22:   56                              	push esi
0x804ab23:   53                              	push ebx
0x804ab24:   e8 67 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab29:   81 c3 d7 24 00 00               	add ebx, 0x24d7
0x804ab2f:   83 ec 0c                        	sub esp, 0xc
0x804ab32:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab36:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab3c:   e8 8b d7 ff ff                  	call 0x80482cc <_init>
0x804ab41:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab47:   29 c6                           	sub esi, eax
0x804ab49:   c1 fe 02                        	sar esi, 2
0x804ab4c:   85 f6                           	test esi, esi
0x804ab4e:   74 25                           	je 0x804ab75 <__libc_csu_init+0x55>
0x804ab50:   31 ff                           	xor edi, edi
0x804ab52:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ab58:   83 ec 04                        	sub esp, 4
0x804ab5b:   55                              	push ebp
0x804ab5c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab60:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab64:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ab6b:   83 c7 01                        	add edi, 1
0x804ab6e:   83 c4 10                        	add esp, 0x10
0x804ab71:   39 fe                           	cmp esi, edi
0x804ab73:   75 e3                           	jne 0x804ab58 <__libc_csu_init+0x38>
0x804ab75:   83 c4 0c                        	add esp, 0xc
0x804ab78:   5b                              	pop ebx
0x804ab79:   5e                              	pop esi
0x804ab7a:   5f                              	pop edi
0x804ab7b:   5d                              	pop ebp
0x804ab7c:   c3                              	ret 
; data inside code section at 0x804ab7d -- 0x804ab80
0x804ab7d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ab80 -- 0x804ab82
0x804ab80:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ab84 -- 0x804ab98
0x804ab84:   53                              	push ebx
0x804ab85:   83 ec 08                        	sub esp, 8
0x804ab88:   e8 03 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab8d:   81 c3 73 24 00 00               	add ebx, 0x2473
0x804ab93:   83 c4 08                        	add esp, 8
0x804ab96:   5b                              	pop ebx
0x804ab97:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 9c ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ab98:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aba8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804abb8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804abc8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804abd8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804abe8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804abf8:   31 00 67 5f 34 00 67 5f  37 00 67 5f 31 34 00 67   |1.g_4.g_7.g_14.g|
0x804ac08:   5f 31 36 00 67 5f 35 32  00 67 5f 37 33 00 67 5f   |_16.g_52.g_73.g_|
0x804ac18:   39 39 00 67 5f 31 30 36  00 67 5f 31 31 38 00 67   |99.g_106.g_118.g|
0x804ac28:   5f 31 33 35 00 67 5f 31  35 31 00 67 5f 31 35 37   |_135.g_151.g_157|
0x804ac38:   00 67 5f 31 37 37 00 67  5f 31 39 38 00 67 5f 32   |.g_177.g_198.g_2|
0x804ac48:   30 31 00 67 5f 32 30 36  00 67 5f 32 33 34 00 67   |01.g_206.g_234.g|
0x804ac58:   5f 32 33 35 00 67 5f 32  36 37 00 67 5f 32 36 38   |_235.g_267.g_268|
0x804ac68:   00 67 5f 33 30 35 00 67  5f 33 31 38 00 67 5f 33   |.g_305.g_318.g_3|
0x804ac78:   32 30 00 67 5f 33 32 38  00 67 5f 33 33 33 00 67   |20.g_328.g_333.g|
0x804ac88:   5f 33 34 37 00 00 00 00  00 00 00 3f ff ff ff 7e   |_347.......?...~|
0x804ac98:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804aca8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804acb8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804acc8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804acd8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ace8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804acf8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804acf8:   01 1b 03 3b b0 02 00 00  55 00 00 00 f8 d5 ff ff   |...;....U.......|
0x804ad08:   e0 02 00 00 38 d6 ff ff  04 03 00 00 88 d6 ff ff   |....8...........|
0x804ad18:   cc 02 00 00 5e d7 ff ff  18 03 00 00 6e d7 ff ff   |....^.......n...|
0x804ad28:   38 03 00 00 9c d7 ff ff  5c 03 00 00 ba d7 ff ff   |8.......\.......|
0x804ad38:   7c 03 00 00 e2 d7 ff ff  9c 03 00 00 0c d8 ff ff   ||...............|
0x804ad48:   bc 03 00 00 35 d8 ff ff  dc 03 00 00 78 d8 ff ff   |....5.......x...|
0x804ad58:   fc 03 00 00 b9 d8 ff ff  1c 04 00 00 11 d9 ff ff   |................|
0x804ad68:   40 04 00 00 63 d9 ff ff  64 04 00 00 a0 d9 ff ff   |@...c...d.......|
0x804ad78:   84 04 00 00 d7 d9 ff ff  a4 04 00 00 f6 d9 ff ff   |................|
0x804ad88:   c4 04 00 00 20 da ff ff  e4 04 00 00 4c da ff ff   |.... .......L...|
0x804ad98:   04 05 00 00 77 da ff ff  24 05 00 00 c0 da ff ff   |....w...$.......|
0x804ada8:   44 05 00 00 07 db ff ff  64 05 00 00 61 db ff ff   |D.......d...a...|
0x804adb8:   88 05 00 00 b5 db ff ff  ac 05 00 00 f4 db ff ff   |................|
0x804adc8:   cc 05 00 00 2d dc ff ff  ec 05 00 00 4f dc ff ff   |....-.......O...|
0x804add8:   0c 06 00 00 9d dc ff ff  2c 06 00 00 d9 dc ff ff   |........,.......|
0x804ade8:   4c 06 00 00 62 dd ff ff  6c 06 00 00 94 dd ff ff   |L...b...l.......|
0x804adf8:   8c 06 00 00 c4 dd ff ff  ac 06 00 00 09 de ff ff   |................|
0x804ae08:   cc 06 00 00 48 de ff ff  ec 06 00 00 7a de ff ff   |....H.......z...|
0x804ae18:   0c 07 00 00 a6 de ff ff  2c 07 00 00 c4 de ff ff   |........,.......|
0x804ae28:   4c 07 00 00 ec de ff ff  6c 07 00 00 11 df ff ff   |L.......l.......|
0x804ae38:   8c 07 00 00 36 df ff ff  ac 07 00 00 6d df ff ff   |....6.......m...|
0x804ae48:   cc 07 00 00 a1 df ff ff  ec 07 00 00 f3 df ff ff   |................|
0x804ae58:   10 08 00 00 3f e0 ff ff  34 08 00 00 76 e0 ff ff   |....?...4...v...|
0x804ae68:   54 08 00 00 a7 e0 ff ff  74 08 00 00 c6 e0 ff ff   |T.......t.......|
0x804ae78:   94 08 00 00 f0 e0 ff ff  b4 08 00 00 18 e1 ff ff   |................|
0x804ae88:   d4 08 00 00 41 e1 ff ff  f4 08 00 00 7d e1 ff ff   |....A.......}...|
0x804ae98:   14 09 00 00 b7 e1 ff ff  34 09 00 00 0a e2 ff ff   |........4.......|
0x804aea8:   58 09 00 00 57 e2 ff ff  7c 09 00 00 8f e2 ff ff   |X...W...|.......|
0x804aeb8:   9c 09 00 00 c1 e2 ff ff  bc 09 00 00 d5 e2 ff ff   |................|
0x804aec8:   dc 09 00 00 ec e2 ff ff  fc 09 00 00 01 e3 ff ff   |................|
0x804aed8:   1c 0a 00 00 17 e3 ff ff  3c 0a 00 00 3e e3 ff ff   |........<...>...|
0x804aee8:   5c 0a 00 00 63 e3 ff ff  7c 0a 00 00 a2 e3 ff ff   |\...c...|.......|
0x804aef8:   9c 0a 00 00 db e3 ff ff  bc 0a 00 00 07 e4 ff ff   |................|
0x804af08:   dc 0a 00 00 2d e4 ff ff  fc 0a 00 00 6f e4 ff ff   |....-.......o...|
0x804af18:   1c 0b 00 00 b1 e4 ff ff  3c 0b 00 00 f3 e4 ff ff   |........<.......|
0x804af28:   5c 0b 00 00 68 e5 ff ff  7c 0b 00 00 c5 e5 ff ff   |\...h...|.......|
0x804af38:   9c 0b 00 00 22 e6 ff ff  bc 0b 00 00 7f e6 ff ff   |...."...........|
0x804af48:   dc 0b 00 00 0f e7 ff ff  fc 0b 00 00 73 e7 ff ff   |............s...|
0x804af58:   1c 0c 00 00 e3 e7 ff ff  3c 0c 00 00 2a e8 ff ff   |........<...*...|
0x804af68:   60 0c 00 00 7f e8 ff ff  80 0c 00 00 c6 e8 ff ff   |`...............|
0x804af78:   a4 0c 00 00 2e e9 ff ff  c8 0c 00 00 95 ea ff ff   |................|
0x804af88:   f8 0c 00 00 8e fa ff ff  28 0d 00 00 18 fe ff ff   |........(.......|
0x804af98:   60 0d 00 00 28 fe ff ff  74 0d 00 00 88 fe ff ff   |`...(...t.......|
0x804afa8:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804afac:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804afbc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804afcc:   b4 d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804afdc:   30 00 00 00 10 d3 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804afec:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804affc:   10 00 00 00 54 00 00 00  2c d3 ff ff 08 00 00 00   |....T...,.......|
0x804b00c:   00 00 00 00 1c 00 00 00  68 00 00 00 3e d4 ff ff   |........h...>...|
0x804b01c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b02c:   04 04 00 00 20 00 00 00  88 00 00 00 2e d4 ff ff   |.... ...........|
0x804b03c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b04c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b05c:   38 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |8........A....B.|
0x804b06c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b07c:   36 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |6...(....A....B.|
0x804b08c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b09c:   3e d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |>...*....A....B.|
0x804b0ac:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0bc:   48 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |H...)....A....B.|
0x804b0cc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b0dc:   51 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Q...C....A....B.|
0x804b0ec:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b0fc:   74 d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |t...A....A....B.|
0x804b10c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b11c:   95 d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b12c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b13c:   90 01 00 00 c9 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b14c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b15c:   1c 00 00 00 b4 01 00 00  f7 d4 ff ff 3d 00 00 00   |............=...|
0x804b16c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b17c:   1c 00 00 00 d4 01 00 00  14 d5 ff ff 37 00 00 00   |............7...|
0x804b18c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b19c:   1c 00 00 00 f4 01 00 00  2b d5 ff ff 1f 00 00 00   |........+.......|
0x804b1ac:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1bc:   1c 00 00 00 14 02 00 00  2a d5 ff ff 2a 00 00 00   |........*...*...|
0x804b1cc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b1dc:   1c 00 00 00 34 02 00 00  34 d5 ff ff 2c 00 00 00   |....4...4...,...|
0x804b1ec:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b1fc:   1c 00 00 00 54 02 00 00  40 d5 ff ff 2b 00 00 00   |....T...@...+...|
0x804b20c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b21c:   1c 00 00 00 74 02 00 00  4b d5 ff ff 49 00 00 00   |....t...K...I...|
0x804b22c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b23c:   1c 00 00 00 94 02 00 00  74 d5 ff ff 47 00 00 00   |........t...G...|
0x804b24c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b25c:   20 00 00 00 b4 02 00 00  9b d5 ff ff 5a 00 00 00   | ...........Z...|
0x804b26c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b27c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d1 d5 ff ff   |.... ...........|
0x804b28c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b29c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2ac:   01 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2bc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b2cc:   20 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   | ...9....A....B.|
0x804b2dc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b2ec:   39 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |9..."....A....B.|
0x804b2fc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b30c:   3b d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |;...N....A....B.|
0x804b31c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b32c:   69 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |i...<....A....B.|
0x804b33c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b34c:   85 d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b35c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b36c:   ee d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b37c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b38c:   00 d7 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b39c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3ac:   10 d7 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3bc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b3cc:   35 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |5...?....A....B.|
0x804b3dc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b3ec:   54 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |T...2....A....B.|
0x804b3fc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b40c:   66 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |f...,....A....B.|
0x804b41c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b42c:   72 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |r........A....B.|
0x804b43c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b44c:   70 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |p...(....A....B.|
0x804b45c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b46c:   78 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |x...%....A....B.|
0x804b47c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b48c:   7d d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |}...%....A....B.|
0x804b49c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4ac:   82 d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b4bc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b4cc:   99 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b4dc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b4ec:   ad d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b4fc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b50c:   60 05 00 00 db d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b51c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b52c:   1c 00 00 00 84 05 00 00  03 d8 ff ff 37 00 00 00   |............7...|
0x804b53c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b54c:   1c 00 00 00 a4 05 00 00  1a d8 ff ff 31 00 00 00   |............1...|
0x804b55c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b56c:   1c 00 00 00 c4 05 00 00  2b d8 ff ff 1f 00 00 00   |........+.......|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b58c:   1c 00 00 00 e4 05 00 00  2a d8 ff ff 2a 00 00 00   |........*...*...|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5ac:   1c 00 00 00 04 06 00 00  34 d8 ff ff 28 00 00 00   |........4...(...|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b5cc:   1c 00 00 00 24 06 00 00  3c d8 ff ff 29 00 00 00   |....$...<...)...|
0x804b5dc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b5ec:   1c 00 00 00 44 06 00 00  45 d8 ff ff 3c 00 00 00   |....D...E...<...|
0x804b5fc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b60c:   1c 00 00 00 64 06 00 00  61 d8 ff ff 3a 00 00 00   |....d...a...:...|
0x804b61c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b62c:   20 00 00 00 84 06 00 00  7b d8 ff ff 53 00 00 00   | .......{...S...|
0x804b63c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b64c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 aa d8 ff ff   |.... ...........|
0x804b65c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b66c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b67c:   d3 d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b68c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b69c:   eb d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6bc:   fd d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6cc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b6dc:   f1 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6ec:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b6fc:   e8 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b70c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b71c:   dd d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b72c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b73c:   d3 d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b74c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b75c:   da d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b76c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b77c:   df d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b78c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b79c:   fe d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7ac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7bc:   17 d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7cc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b7dc:   23 d9 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |#...&....A....B.|
0x804b7ec:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b7fc:   29 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |)...B....A....B.|
0x804b80c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b81c:   4b d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |K...B....A....B.|
0x804b82c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b83c:   6d d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |m...B....A....B.|
0x804b84c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b85c:   8f d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b86c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b87c:   e4 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b88c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b89c:   21 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |!...]....A....B.|
0x804b8ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8bc:   5e da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |^...]....A....B.|
0x804b8cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b8dc:   9b da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8ec:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b8fc:   0b db ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b90c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b91c:   4f db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |O...p....A....B.|
0x804b92c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b93c:   9f db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b94c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b95c:   b0 09 00 00 c2 db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b96c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b97c:   d0 09 00 00 f7 db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b98c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b99c:   20 00 00 00 f4 09 00 00  1a dc ff ff 68 00 00 00   | ...........h...|
0x804b9ac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9bc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 5e dc ff ff   |....,.......^...|
0x804b9cc:   67 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |g....A....B..F..|
0x804b9dc:   86 04 83 05 03 5a 01 c3  41 c6 41 c7 41 c5 0c 04   |.....Z..A.A.A...|
0x804b9ec:   04 00 00 00 2c 00 00 00  48 0a 00 00 95 dd ff ff   |....,...H.......|
0x804b9fc:   f9 0f 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804ba0c:   86 04 83 05 03 e9 0f c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba1c:   04 00 00 00 34 00 00 00  78 0a 00 00 5e ed ff ff   |....4...x...^...|
0x804ba2c:   8a 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804ba3c:   0f 03 75 78 06 10 03 02  75 7c 03 75 03 c1 0c 01   |..ux....u|.u....|
0x804ba4c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba5c:   b0 0a 00 00 b0 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804ba6c:   48 00 00 00 c4 0a 00 00  ac f0 ff ff 5d 00 00 00   |H...........]...|
0x804ba7c:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804ba8c:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804ba9c:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804baac:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804babc:   10 0b 00 00 c0 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804bacc:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 84 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804d028:   c0 ba 58 c5 23 eb 31 a8  02 d1 c1 45 03 00 00 00   |..X.#.1....E....|
0x804d038:   42 5d 76 c1 d7 44 41 9e  f7 ff ff ff 07 00 00 00   |B]v..DA.........|
0x804d048:   01 49 a6 1e ff 00 00 00  fd ff ff ff 03 60 b6 f8   |.I...........`..|
0x804d058:   04 00 8f 1d 55 bd ed a3  17 58 13 e1 c3 00 00 00   |....U....X......|
0x804d068:   fe ff ff ff fc ff ff ff  30 d9 00 00 05 00 00 00   |........0.......|
0x804d078:   ??                                                 |?               |
