;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 10:10:57
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 e0 d9 ff ff               	lea eax, [ebx - 0x2620]
0x804835c:   50                              	push eax
0x804835d:   8d 83 80 d9 ff ff               	lea eax, [ebx - 0x2680]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 7b a5 04 08               	mov eax, 0x804a57b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483a5:   3d 74 d0 04 08                  	cmp eax, 0x804d074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 d0 04 08                  	push 0x804d074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483e5:   2d 74 d0 04 08                  	sub eax, 0x804d074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 d0 04 08                  	push 0x804d074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 0e 25 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 fa 24 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 00 da ff ff               	lea edx, [eax - 0x2600]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 cd 24 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 af 24 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 87 24 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 5d 24 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 34 24 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 f1 23 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 af 23 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 57 23 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 06 23 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 c9 22 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 92 22 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 73 22 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 49 22 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 1d 22 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 f2 21 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 a9 21 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 61 21 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 07 21 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 b4 20 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 75 20 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 3f 20 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 1d 20 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 cf 1f 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 93 1f 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 0a 1f 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 d8 1e 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 a8 1e 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 63 1e 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 24 1e 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 f2 1d 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 c3 1d 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 a5 1d 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 7d 1d 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 58 1d 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 33 1d 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 fc 1c 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 c7 1c 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 75 1c 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 2a 1c 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 f3 1b 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 c2 1b 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 a3 1b 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 79 1b 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 51 1b 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 28 1b 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 ec 1a 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 b1 1a 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 5e 1a 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 12 1a 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 da 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 ab 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 97 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 80 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 6b 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 55 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 2e 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 09 19 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 ca 18 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 91 18 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 65 18 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 3f 18 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 08 db ff ff               	fld dword ptr [eax - 0x24f8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 08 db ff ff               	fld dword ptr [eax - 0x24f8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 0c db ff ff               	fld dword ptr [eax - 0x24f4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 fd 17 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 08 db ff ff               	fld dword ptr [eax - 0x24f8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 08 db ff ff               	fld dword ptr [eax - 0x24f8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 0c db ff ff               	fld dword ptr [eax - 0x24f4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 bb 17 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 10 db ff ff               	fld dword ptr [eax - 0x24f0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 14 db ff ff               	fld dword ptr [eax - 0x24ec]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 18 db ff ff               	fld dword ptr [eax - 0x24e8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 79 17 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 1c db ff ff               	fld dword ptr [eax - 0x24e4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 20 db ff ff               	fld dword ptr [eax - 0x24e0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 24 db ff ff               	fld dword ptr [eax - 0x24dc]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 01 17 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 28 db ff ff               	fld qword ptr [eax - 0x24d8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 28 db ff ff               	fld qword ptr [eax - 0x24d8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 30 db ff ff               	fld qword ptr [eax - 0x24d0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 a4 16 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 28 db ff ff               	fld qword ptr [eax - 0x24d8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 28 db ff ff               	fld qword ptr [eax - 0x24d8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 30 db ff ff               	fld qword ptr [eax - 0x24d0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 47 16 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 38 db ff ff               	fld qword ptr [eax - 0x24c8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 40 db ff ff               	fld qword ptr [eax - 0x24c0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 48 db ff ff               	fld qword ptr [eax - 0x24b8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 ea 15 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 50 db ff ff               	fld qword ptr [eax - 0x24b0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 58 db ff ff               	fld qword ptr [eax - 0x24a8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 60 db ff ff               	fld qword ptr [eax - 0x24a0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 5a 15 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 68 db ff ff               	fld dword ptr [eax - 0x2498]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 6c db ff ff               	fld dword ptr [eax - 0x2494]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 f6 14 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 85 14 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 42 14 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 10 da ff ff               	lea eax, [ebx - 0x25f0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 34 da ff ff               	lea eax, [ebx - 0x25cc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 3a 13 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 60 da ff ff               	lea edx, [eax - 0x25a0]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x804980f
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 54                        	sub esp, 0x54
0x804965d:   e8 0e 13 00 00                  	call 0x804a970 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x804966e:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049671:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x8049674:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x8049677:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804967a:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x804967d:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049680:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049683:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049686:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049689:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804968c:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x804968f:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049692:   8b 7d 5c                        	mov edi, dword ptr [ebp + 0x5c]
0x8049695:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049698:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x804969b:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x804969e:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x80496a1:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x80496a4:   8b 7d 6c                        	mov edi, dword ptr [ebp + 0x6c]
0x80496a7:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496ab:   89 c8                           	mov eax, ecx
0x80496ad:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496b1:   89 d8                           	mov eax, ebx
0x80496b3:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496b6:   89 f0                           	mov eax, esi
0x80496b8:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496bb:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80496bf:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496c2:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x80496c6:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496c9:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496cd:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496d1:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496d5:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496d9:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496dd:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496e1:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496e5:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496e8:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496ec:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496ef:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496f3:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496f6:   89 f8                           	mov eax, edi
0x80496f8:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496fc:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049700:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x8049707:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804970a:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049710:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049713:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049719:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804971c:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049722:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049725:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804972b:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804972f:   66 89 82 34 00 00 00            	mov word ptr [edx + 0x34], ax
0x8049736:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804973a:   88 82 36 00 00 00               	mov byte ptr [edx + 0x36], al
0x8049740:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049744:   88 82 37 00 00 00               	mov byte ptr [edx + 0x37], al
0x804974a:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804974e:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049754:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049757:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804975d:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049760:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049766:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049769:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804976f:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049772:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049778:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804977b:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049781:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049785:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x804978b:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804978f:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x8049796:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804979a:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x80497a1:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497a5:   66 89 82 a8 04 00 00            	mov word ptr [edx + 0x4a8], ax
0x80497ac:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497af:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497b5:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497b8:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497be:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497c1:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497c7:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497cb:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497d1:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497d5:   88 82 65 00 00 00               	mov byte ptr [edx + 0x65], al
0x80497db:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497df:   88 82 66 00 00 00               	mov byte ptr [edx + 0x66], al
0x80497e5:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497e8:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497ee:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497f2:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80497f9:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497fc:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049802:   b8 00 00 00 00                  	mov eax, 0
0x8049807:   83 c4 54                        	add esp, 0x54
0x804980a:   5b                              	pop ebx
0x804980b:   5e                              	pop esi
0x804980c:   5f                              	pop edi
0x804980d:   5d                              	pop ebp
0x804980e:   c3                              	ret 
; function: func_1 at 0x804980f -- 0x804a57b
0x804980f:   55                              	push ebp
0x8049810:   89 e5                           	mov ebp, esp
0x8049812:   57                              	push edi
0x8049813:   56                              	push esi
0x8049814:   53                              	push ebx
0x8049815:   81 ec 1c 01 00 00               	sub esp, 0x11c
0x804981b:   e8 4c 11 00 00                  	call 0x804a96c <__x86.get_pc_thunk.ax>
0x8049820:   05 e0 37 00 00                  	add eax, 0x37e0
0x8049825:   66 c7 45 96 01 00               	mov word ptr [ebp - 0x6a], 1
0x804982b:   66 c7 45 f2 57 72               	mov word ptr [ebp - 0xe], 0x7257
0x8049831:   c7 45 90 4c 24 f0 03            	mov dword ptr [ebp - 0x70], 0x3f0244c
0x8049838:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x804983f:   c7 45 e8 69 e7 3d 78            	mov dword ptr [ebp - 0x18], 0x783de769
0x8049846:   c7 45 e4 a4 8e 3e 5d            	mov dword ptr [ebp - 0x1c], 0x5d3e8ea4
0x804984d:   66 c7 45 e2 ac df               	mov word ptr [ebp - 0x1e], 0xdfac
0x8049853:   c6 45 e1 ff                     	mov byte ptr [ebp - 0x1f], 0xff
0x8049857:   c6 45 e0 f6                     	mov byte ptr [ebp - 0x20], 0xf6
0x804985b:   c6 45 df b3                     	mov byte ptr [ebp - 0x21], 0xb3
0x804985f:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x8049866:   c7 45 88 f2 74 1c b8            	mov dword ptr [ebp - 0x78], 0xb81c74f2
0x804986d:   c7 45 d8 f6 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff6
0x8049874:   c7 45 d4 06 00 00 00            	mov dword ptr [ebp - 0x2c], 6
0x804987b:   c7 45 d0 ff ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffff
0x8049882:   c6 45 87 fa                     	mov byte ptr [ebp - 0x79], 0xfa
0x8049886:   66 c7 45 84 0d 69               	mov word ptr [ebp - 0x7c], 0x690d
0x804988c:   66 c7 45 82 ff ff               	mov word ptr [ebp - 0x7e], 0xffff
0x8049892:   66 c7 45 ce 00 00               	mov word ptr [ebp - 0x32], 0
0x8049898:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x80498a2:   c7 45 c8 04 00 00 00            	mov dword ptr [ebp - 0x38], 4
0x80498a9:   c7 85 78 ff ff ff d1 52 cd 9e   	mov dword ptr [ebp - 0x88], 0x9ecd52d1
0x80498b3:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x80498ba:   c6 45 c3 68                     	mov byte ptr [ebp - 0x3d], 0x68
0x80498be:   c6 85 77 ff ff ff c0            	mov byte ptr [ebp - 0x89], 0xc0
0x80498c5:   c6 85 76 ff ff ff 99            	mov byte ptr [ebp - 0x8a], 0x99
0x80498cc:   c7 85 70 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x90], 1
0x80498d6:   66 c7 45 c0 8f ad               	mov word ptr [ebp - 0x40], 0xad8f
0x80498dc:   c7 85 6c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x94], 6
0x80498e6:   c7 85 68 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x98], 0xfffffff6
0x80498f0:   c7 85 64 ff ff ff 1d 16 69 b9   	mov dword ptr [ebp - 0x9c], 0xb969161d
0x80498fa:   c7 85 60 ff ff ff a4 ce a9 b5   	mov dword ptr [ebp - 0xa0], 0xb5a9cea4
0x8049904:   c7 45 bc f9 ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffff9
0x804990b:   66 c7 85 5e ff ff ff 04 00      	mov word ptr [ebp - 0xa2], 4
0x8049914:   c7 45 b8 03 00 00 00            	mov dword ptr [ebp - 0x48], 3
0x804991b:   c7 85 58 ff ff ff b8 15 95 86   	mov dword ptr [ebp - 0xa8], 0x869515b8
0x8049925:   c7 85 54 ff ff ff de 58 0a 6d   	mov dword ptr [ebp - 0xac], 0x6d0a58de
0x804992f:   c7 45 b4 04 07 ea 5f            	mov dword ptr [ebp - 0x4c], 0x5fea0704
0x8049936:   c7 85 50 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xb0], 9
0x8049940:   c7 45 b0 ff ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffff
0x8049947:   c6 85 4f ff ff ff 02            	mov byte ptr [ebp - 0xb1], 2
0x804994e:   c7 85 48 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb8], 1
0x8049958:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804995f:   0f 84 c4 01 00 00               	je 0x8049b29 <func_1+0x31a>
0x8049965:   c7 85 40 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xc0], 6
0x804996f:   c6 85 3f ff ff ff be            	mov byte ptr [ebp - 0xc1], 0xbe
0x8049976:   c7 85 38 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffe
0x8049980:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804998a:   83 bd 68 ff ff ff 2c            	cmp dword ptr [ebp - 0x98], 0x2c
0x8049991:   0f 86 da 00 00 00               	jbe 0x8049a71 <func_1+0x262>
0x8049997:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804999b:   0f be 95 76 ff ff ff            	movsx edx, byte ptr [ebp - 0x8a]
0x80499a2:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x80499a9:   0f be 75 c3                     	movsx esi, byte ptr [ebp - 0x3d]
0x80499ad:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x80499b1:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x80499b7:   0f bf 5d 82                     	movsx ebx, word ptr [ebp - 0x7e]
0x80499bb:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x80499c1:   0f bf 7d 84                     	movsx edi, word ptr [ebp - 0x7c]
0x80499c5:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x80499cb:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x80499cf:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x80499d5:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x80499d9:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x80499df:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x80499e3:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x80499e9:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x80499ed:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x80499f3:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x80499f7:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x80499fb:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049a01:   50                              	push eax
0x8049a02:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049a08:   52                              	push edx
0x8049a09:   51                              	push ecx
0x8049a0a:   56                              	push esi
0x8049a0b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049a0e:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049a14:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049a17:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049a1d:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049a23:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049a29:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x8049a2f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049a32:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049a35:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049a38:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049a3b:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049a3e:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049a44:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049a4a:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049a50:   57                              	push edi
0x8049a51:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049a54:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049a57:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049a5a:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049a5d:   53                              	push ebx
0x8049a5e:   e8 f1 fb ff ff                  	call 0x8049654 <set_var>
0x8049a63:   83 c4 6c                        	add esp, 0x6c
0x8049a66:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049a6c:   e9 02 0b 00 00                  	jmp 0x804a573 <func_1+0xd64>
0x8049a71:   80 b5 3f ff ff ff 01            	xor byte ptr [ebp - 0xc1], 1
0x8049a78:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049a7c:   98                              	cwde 
0x8049a7d:   21 85 38 ff ff ff               	and dword ptr [ebp - 0xc8], eax
0x8049a83:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x8049a87:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x8049a8d:   0f 9d c0                        	setge al
0x8049a90:   0f b6 c0                        	movzx eax, al
0x8049a93:   21 85 64 ff ff ff               	and dword ptr [ebp - 0x9c], eax
0x8049a99:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x8049a9f:   66 85 c0                        	test ax, ax
0x8049aa2:   75 07                           	jne 0x8049aab <func_1+0x29c>
0x8049aa4:   66 83 7d 96 00                  	cmp word ptr [ebp - 0x6a], 0
0x8049aa9:   74 07                           	je 0x8049ab2 <func_1+0x2a3>
0x8049aab:   b8 01 00 00 00                  	mov eax, 1
0x8049ab0:   eb 05                           	jmp 0x8049ab7 <func_1+0x2a8>
0x8049ab2:   b8 00 00 00 00                  	mov eax, 0
0x8049ab7:   89 c2                           	mov edx, eax
0x8049ab9:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049abd:   31 d0                           	xor eax, edx
0x8049abf:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049ac3:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x8049ac7:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049acb:   8d 50 ff                        	lea edx, [eax - 1]
0x8049ace:   66 89 55 f2                     	mov word ptr [ebp - 0xe], dx
0x8049ad2:   89 c3                           	mov ebx, eax
0x8049ad4:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049ad9:   83 85 54 ff ff ff 01            	add dword ptr [ebp - 0xac], 1
0x8049ae0:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049ae6:   0f b7 c0                        	movzx eax, ax
0x8049ae9:   f7 d8                           	neg eax
0x8049aeb:   89 c1                           	mov ecx, eax
0x8049aed:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049af0:   0f b7 f0                        	movzx esi, ax
0x8049af3:   b8 08 00 00 00                  	mov eax, 8
0x8049af8:   99                              	cdq 
0x8049af9:   f7 fe                           	idiv esi
0x8049afb:   21 c8                           	and eax, ecx
0x8049afd:   83 f8 09                        	cmp eax, 9
0x8049b00:   0f 9e c0                        	setle al
0x8049b03:   0f b6 c0                        	movzx eax, al
0x8049b06:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049b0c:   0f 94 c0                        	sete al
0x8049b0f:   0f b6 d0                        	movzx edx, al
0x8049b12:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049b16:   89 c1                           	mov ecx, eax
0x8049b18:   d3 e2                           	shl edx, cl
0x8049b1a:   89 d0                           	mov eax, edx
0x8049b1c:   85 c0                           	test eax, eax
0x8049b1e:   0f 84 9c 01 00 00               	je 0x8049cc0 <func_1+0x4b1>
0x8049b24:   e9 87 01 00 00                  	jmp 0x8049cb0 <func_1+0x4a1>
0x8049b29:   c6 45 af 00                     	mov byte ptr [ebp - 0x51], 0
0x8049b2d:   c7 45 a8 2a f1 4a 31            	mov dword ptr [ebp - 0x58], 0x314af12a
0x8049b34:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049b38:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049b3b:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049b3e:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x8049b44:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x8049b4b:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049b4e:   0f bf d0                        	movsx edx, ax
0x8049b51:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x8049b55:   89 c1                           	mov ecx, eax
0x8049b57:   d3 e2                           	shl edx, cl
0x8049b59:   89 d0                           	mov eax, edx
0x8049b5b:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x8049b61:   c6 45 af 0a                     	mov byte ptr [ebp - 0x51], 0xa
0x8049b65:   eb 11                           	jmp 0x8049b78 <func_1+0x369>
0x8049b67:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049b6e:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049b72:   83 c0 01                        	add eax, 1
0x8049b75:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x8049b78:   80 7d af 20                     	cmp byte ptr [ebp - 0x51], 0x20
0x8049b7c:   76 e9                           	jbe 0x8049b67 <func_1+0x358>
0x8049b7e:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049b85:   eb 4c                           	jmp 0x8049bd3 <func_1+0x3c4>
0x8049b87:   c6 85 47 ff ff ff f5            	mov byte ptr [ebp - 0xb9], 0xf5
0x8049b8e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b91:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049b94:   0f 92 c0                        	setb al
0x8049b97:   0f b6 c0                        	movzx eax, al
0x8049b9a:   09 45 a8                        	or dword ptr [ebp - 0x58], eax
0x8049b9d:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049ba0:   0f b6 d0                        	movzx edx, al
0x8049ba3:   0f b6 85 47 ff ff ff            	movzx eax, byte ptr [ebp - 0xb9]
0x8049baa:   89 c1                           	mov ecx, eax
0x8049bac:   d3 fa                           	sar edx, cl
0x8049bae:   89 d0                           	mov eax, edx
0x8049bb0:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049bb3:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049bb7:   0f be c0                        	movsx eax, al
0x8049bba:   c1 e0 07                        	shl eax, 7
0x8049bbd:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049bc0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049bc3:   66 21 45 e2                     	and word ptr [ebp - 0x1e], ax
0x8049bc7:   b8 00 00 00 00                  	mov eax, 0
0x8049bcc:   09 45 b8                        	or dword ptr [ebp - 0x48], eax
0x8049bcf:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x8049bd3:   83 7d ec fe                     	cmp dword ptr [ebp - 0x14], -2
0x8049bd7:   74 ae                           	je 0x8049b87 <func_1+0x378>
0x8049bd9:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049bdd:   0f be 95 76 ff ff ff            	movsx edx, byte ptr [ebp - 0x8a]
0x8049be4:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x8049beb:   0f be 75 c3                     	movsx esi, byte ptr [ebp - 0x3d]
0x8049bef:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x8049bf3:   89 9d f0 fe ff ff               	mov dword ptr [ebp - 0x110], ebx
0x8049bf9:   0f bf 7d 82                     	movsx edi, word ptr [ebp - 0x7e]
0x8049bfd:   89 bd ec fe ff ff               	mov dword ptr [ebp - 0x114], edi
0x8049c03:   0f bf 5d 84                     	movsx ebx, word ptr [ebp - 0x7c]
0x8049c07:   89 9d e8 fe ff ff               	mov dword ptr [ebp - 0x118], ebx
0x8049c0d:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x8049c11:   89 bd e4 fe ff ff               	mov dword ptr [ebp - 0x11c], edi
0x8049c17:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x8049c1b:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x8049c21:   0f b6 7d e0                     	movzx edi, byte ptr [ebp - 0x20]
0x8049c25:   89 bd dc fe ff ff               	mov dword ptr [ebp - 0x124], edi
0x8049c2b:   0f b6 5d e1                     	movzx ebx, byte ptr [ebp - 0x1f]
0x8049c2f:   89 9d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ebx
0x8049c35:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x8049c39:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x8049c3d:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049c43:   50                              	push eax
0x8049c44:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049c4a:   52                              	push edx
0x8049c4b:   51                              	push ecx
0x8049c4c:   56                              	push esi
0x8049c4d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049c50:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049c56:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c59:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049c5f:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049c65:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049c6b:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x8049c71:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c74:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049c77:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c7a:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049c7d:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049c80:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049c86:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049c8c:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049c92:   57                              	push edi
0x8049c93:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049c96:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c99:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c9c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049c9f:   53                              	push ebx
0x8049ca0:   e8 af f9 ff ff                  	call 0x8049654 <set_var>
0x8049ca5:   83 c4 6c                        	add esp, 0x6c
0x8049ca8:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049cab:   e9 c3 08 00 00                  	jmp 0x804a573 <func_1+0xd64>
0x8049cb0:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049cb7:   74 07                           	je 0x8049cc0 <func_1+0x4b1>
0x8049cb9:   b8 01 00 00 00                  	mov eax, 1
0x8049cbe:   eb 05                           	jmp 0x8049cc5 <func_1+0x4b6>
0x8049cc0:   b8 00 00 00 00                  	mov eax, 0
0x8049cc5:   3b 85 58 ff ff ff               	cmp eax, dword ptr [ebp - 0xa8]
0x8049ccb:   0f 9e c0                        	setle al
0x8049cce:   0f b6 c0                        	movzx eax, al
0x8049cd1:   31 d8                           	xor eax, ebx
0x8049cd3:   ba d8 ff ff ff                  	mov edx, 0xffffffd8
0x8049cd8:   0f af c2                        	imul eax, edx
0x8049cdb:   0f be c0                        	movsx eax, al
0x8049cde:   83 c0 22                        	add eax, 0x22
0x8049ce1:   0d d5 f0 70 0d                  	or eax, 0xd70f0d5
0x8049ce6:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049ce9:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049cf0:   0f 9e c0                        	setle al
0x8049cf3:   0f b6 c0                        	movzx eax, al
0x8049cf6:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049cfa:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049d00:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x8049d03:   0f bf 55 96                     	movsx edx, word ptr [ebp - 0x6a]
0x8049d07:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049d0a:   01 d0                           	add eax, edx
0x8049d0c:   83 f8 02                        	cmp eax, 2
0x8049d0f:   0f 94 c0                        	sete al
0x8049d12:   0f b6 c0                        	movzx eax, al
0x8049d15:   0b 45 e4                        	or eax, dword ptr [ebp - 0x1c]
0x8049d18:   85 c0                           	test eax, eax
0x8049d1a:   0f 84 9a 01 00 00               	je 0x8049eba <func_1+0x6ab>
0x8049d20:   c7 85 fc fe ff ff f5 3f d6 54   	mov dword ptr [ebp - 0x104], 0x54d63ff5
0x8049d2a:   c7 85 f8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x108], 0xffffffff
0x8049d34:   c7 45 a4 f7 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffff7
0x8049d3b:   c6 45 e0 01                     	mov byte ptr [ebp - 0x20], 1
0x8049d3f:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049d43:   75 76                           	jne 0x8049dbb <func_1+0x5ac>
0x8049d45:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x8049d4c:   0f 94 c2                        	sete dl
0x8049d4f:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x8049d56:   75 06                           	jne 0x8049d5e <func_1+0x54f>
0x8049d58:   80 7d e1 00                     	cmp byte ptr [ebp - 0x1f], 0
0x8049d5c:   74 07                           	je 0x8049d65 <func_1+0x556>
0x8049d5e:   b8 01 00 00 00                  	mov eax, 1
0x8049d63:   eb 05                           	jmp 0x8049d6a <func_1+0x55b>
0x8049d65:   b8 00 00 00 00                  	mov eax, 0
0x8049d6a:   83 e0 01                        	and eax, 1
0x8049d6d:   31 d0                           	xor eax, edx
0x8049d6f:   0f b6 c0                        	movzx eax, al
0x8049d72:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049d76:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049d7a:   39 85 fc fe ff ff               	cmp dword ptr [ebp - 0x104], eax
0x8049d80:   0f 96 c0                        	setbe al
0x8049d83:   0f b6 c0                        	movzx eax, al
0x8049d86:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8049d89:   0f bf ca                        	movsx ecx, dx
0x8049d8c:   99                              	cdq 
0x8049d8d:   f7 f9                           	idiv ecx
0x8049d8f:   89 d0                           	mov eax, edx
0x8049d91:   89 c2                           	mov edx, eax
0x8049d93:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049d97:   31 d0                           	xor eax, edx
0x8049d99:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049d9d:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049da0:   20 45 df                        	and byte ptr [ebp - 0x21], al
0x8049da3:   0f be 45 df                     	movsx eax, byte ptr [ebp - 0x21]
0x8049da7:   3d 62 3a ce b5                  	cmp eax, 0xb5ce3a62
0x8049dac:   0f 97 c0                        	seta al
0x8049daf:   0f b6 c0                        	movzx eax, al
0x8049db2:   0b 45 b4                        	or eax, dword ptr [ebp - 0x4c]
0x8049db5:   85 c0                           	test eax, eax
0x8049db7:   74 13                           	je 0x8049dcc <func_1+0x5bd>
0x8049db9:   eb 01                           	jmp 0x8049dbc <func_1+0x5ad>
0x8049dbb:   90                              	nop 
0x8049dbc:   83 6d d8 01                     	sub dword ptr [ebp - 0x28], 1
0x8049dc0:   c7 45 d4 f9 ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffff9
0x8049dc7:   e9 ed 05 00 00                  	jmp 0x804a3b9 <func_1+0xbaa>
0x8049dcc:   c7 45 a0 74 4a 64 94            	mov dword ptr [ebp - 0x60], 0x94644a74
0x8049dd3:   c7 45 bc e8 ff ff ff            	mov dword ptr [ebp - 0x44], 0xffffffe8
0x8049dda:   e9 cc 00 00 00                  	jmp 0x8049eab <func_1+0x69c>
0x8049ddf:   c6 45 e0 00                     	mov byte ptr [ebp - 0x20], 0
0x8049de3:   eb 17                           	jmp 0x8049dfc <func_1+0x5ed>
0x8049de5:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x8049def:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049df5:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049df8:   80 45 e0 04                     	add byte ptr [ebp - 0x20], 4
0x8049dfc:   80 7d e0 0a                     	cmp byte ptr [ebp - 0x20], 0xa
0x8049e00:   77 e3                           	ja 0x8049de5 <func_1+0x5d6>
0x8049e02:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x8049e06:   81 7d ec 50 7d 00 00            	cmp dword ptr [ebp - 0x14], 0x7d50
0x8049e0d:   0f 9f c0                        	setg al
0x8049e10:   0f b6 c0                        	movzx eax, al
0x8049e13:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x8049e16:   0f b6 ca                        	movzx ecx, dl
0x8049e19:   99                              	cdq 
0x8049e1a:   f7 f9                           	idiv ecx
0x8049e1c:   89 55 a4                        	mov dword ptr [ebp - 0x5c], edx
0x8049e1f:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049e23:   75 06                           	jne 0x8049e2b <func_1+0x61c>
0x8049e25:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049e29:   74 07                           	je 0x8049e32 <func_1+0x623>
0x8049e2b:   b8 01 00 00 00                  	mov eax, 1
0x8049e30:   eb 05                           	jmp 0x8049e37 <func_1+0x628>
0x8049e32:   b8 00 00 00 00                  	mov eax, 0
0x8049e37:   89 c1                           	mov ecx, eax
0x8049e39:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049e3c:   89 c2                           	mov edx, eax
0x8049e3e:   89 c8                           	mov eax, ecx
0x8049e40:   0f af c2                        	imul eax, edx
0x8049e43:   89 c2                           	mov edx, eax
0x8049e45:   80 fa ff                        	cmp dl, 0xff
0x8049e48:   0f 93 c0                        	setae al
0x8049e4b:   f7 d8                           	neg eax
0x8049e4d:   29 c2                           	sub edx, eax
0x8049e4f:   89 d0                           	mov eax, edx
0x8049e51:   0f b6 c0                        	movzx eax, al
0x8049e54:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049e57:   0f 95 c0                        	setne al
0x8049e5a:   0f b6 d0                        	movzx edx, al
0x8049e5d:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e60:   98                              	cwde 
0x8049e61:   89 c1                           	mov ecx, eax
0x8049e63:   d3 fa                           	sar edx, cl
0x8049e65:   89 d0                           	mov eax, edx
0x8049e67:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049e6a:   75 07                           	jne 0x8049e73 <func_1+0x664>
0x8049e6c:   66 83 7d 96 00                  	cmp word ptr [ebp - 0x6a], 0
0x8049e71:   74 07                           	je 0x8049e7a <func_1+0x66b>
0x8049e73:   b8 01 00 00 00                  	mov eax, 1
0x8049e78:   eb 05                           	jmp 0x8049e7f <func_1+0x670>
0x8049e7a:   b8 00 00 00 00                  	mov eax, 0
0x8049e7f:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049e83:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049e87:   8b 95 f8 fe ff ff               	mov edx, dword ptr [ebp - 0x108]
0x8049e8d:   0f bf f2                        	movsx esi, dx
0x8049e90:   99                              	cdq 
0x8049e91:   f7 fe                           	idiv esi
0x8049e93:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049e96:   75 07                           	jne 0x8049e9f <func_1+0x690>
0x8049e98:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x8049e9d:   eb 05                           	jmp 0x8049ea4 <func_1+0x695>
0x8049e9f:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x8049ea4:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049ea7:   83 45 bc 08                     	add dword ptr [ebp - 0x44], 8
0x8049eab:   83 7d bc 11                     	cmp dword ptr [ebp - 0x44], 0x11
0x8049eaf:   0f 87 2a ff ff ff               	ja 0x8049ddf <func_1+0x5d0>
0x8049eb5:   e9 ff 04 00 00                  	jmp 0x804a3b9 <func_1+0xbaa>
0x8049eba:   66 c7 85 36 ff ff ff ff ff      	mov word ptr [ebp - 0xca], 0xffff
0x8049ec3:   c7 45 9c 57 fb 4e cb            	mov dword ptr [ebp - 0x64], 0xcb4efb57
0x8049eca:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049ecf:   0f 84 bd 02 00 00               	je 0x804a192 <func_1+0x983>
0x8049ed5:   c7 45 98 a0 4f e9 26            	mov dword ptr [ebp - 0x68], 0x26e94fa0
0x8049edc:   0f b7 85 36 ff ff ff            	movzx eax, word ptr [ebp - 0xca]
0x8049ee3:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049ee7:   74 10                           	je 0x8049ef9 <func_1+0x6ea>
0x8049ee9:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x8049ef0:   74 07                           	je 0x8049ef9 <func_1+0x6ea>
0x8049ef2:   ba 01 00 00 00                  	mov edx, 1
0x8049ef7:   eb 05                           	jmp 0x8049efe <func_1+0x6ef>
0x8049ef9:   ba 00 00 00 00                  	mov edx, 0
0x8049efe:   39 c2                           	cmp edx, eax
0x8049f00:   7f 07                           	jg 0x8049f09 <func_1+0x6fa>
0x8049f02:   b8 0f 00 00 00                  	mov eax, 0xf
0x8049f07:   eb 05                           	jmp 0x8049f0e <func_1+0x6ff>
0x8049f09:   b8 1e 00 00 00                  	mov eax, 0x1e
0x8049f0e:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049f11:   83 7d e8 f7                     	cmp dword ptr [ebp - 0x18], -9
0x8049f15:   0f 95 c0                        	setne al
0x8049f18:   0f b6 c0                        	movzx eax, al
0x8049f1b:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049f1e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f21:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049f24:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049f27:   0f b6 c0                        	movzx eax, al
0x8049f2a:   8d 90 f5 00 00 00               	lea edx, [eax + 0xf5]
0x8049f30:   0f bf 45 96                     	movsx eax, word ptr [ebp - 0x6a]
0x8049f34:   39 c2                           	cmp edx, eax
0x8049f36:   7d 06                           	jge 0x8049f3e <func_1+0x72f>
0x8049f38:   80 7d e0 00                     	cmp byte ptr [ebp - 0x20], 0
0x8049f3c:   74 07                           	je 0x8049f45 <func_1+0x736>
0x8049f3e:   b8 01 00 00 00                  	mov eax, 1
0x8049f43:   eb 05                           	jmp 0x8049f4a <func_1+0x73b>
0x8049f45:   b8 00 00 00 00                  	mov eax, 0
0x8049f4a:   33 45 9c                        	xor eax, dword ptr [ebp - 0x64]
0x8049f4d:   25 a4 b7 89 9d                  	and eax, 0x9d89b7a4
0x8049f52:   85 c0                           	test eax, eax
0x8049f54:   74 4f                           	je 0x8049fa5 <func_1+0x796>
0x8049f56:   c6 85 33 ff ff ff aa            	mov byte ptr [ebp - 0xcd], 0xaa
0x8049f5d:   66 c7 85 30 ff ff ff fd ff      	mov word ptr [ebp - 0xd0], 0xfffd
0x8049f66:   c7 85 2c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xd4], 2
0x8049f70:   c7 85 28 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffff6
0x8049f7a:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x8049f81:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049f84:   0f b7 c0                        	movzx eax, ax
0x8049f87:   c1 f8 07                        	sar eax, 7
0x8049f8a:   85 c0                           	test eax, eax
0x8049f8c:   74 0d                           	je 0x8049f9b <func_1+0x78c>
0x8049f8e:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049f92:   74 07                           	je 0x8049f9b <func_1+0x78c>
0x8049f94:   b8 01 00 00 00                  	mov eax, 1
0x8049f99:   eb 05                           	jmp 0x8049fa0 <func_1+0x791>
0x8049f9b:   b8 00 00 00 00                  	mov eax, 0
0x8049fa0:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049fa3:   eb 07                           	jmp 0x8049fac <func_1+0x79d>
0x8049fa5:   c7 45 d0 45 5f 16 ea            	mov dword ptr [ebp - 0x30], 0xea165f45
0x8049fac:   c6 45 e1 e7                     	mov byte ptr [ebp - 0x1f], 0xe7
0x8049fb0:   e9 86 01 00 00                  	jmp 0x804a13b <func_1+0x92c>
0x8049fb5:   c6 85 27 ff ff ff 01            	mov byte ptr [ebp - 0xd9], 1
0x8049fbc:   c7 85 20 ff ff ff 6f 23 f4 ba   	mov dword ptr [ebp - 0xe0], 0xbaf4236f
0x8049fc6:   66 83 45 ce 01                  	add word ptr [ebp - 0x32], 1
0x8049fcb:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x8049fd2:   e9 3e 01 00 00                  	jmp 0x804a115 <func_1+0x906>
0x8049fd7:   c7 85 1c ff ff ff 59 56 42 a6   	mov dword ptr [ebp - 0xe4], 0xa6425659
0x8049fe1:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x8049feb:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049fef:   0f 85 2c 01 00 00               	jne 0x804a121 <func_1+0x912>
0x8049ff5:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049ffa:   74 09                           	je 0x804a005 <func_1+0x7f6>
0x8049ffc:   81 7d e4 f7 00 00 00            	cmp dword ptr [ebp - 0x1c], 0xf7
0x804a003:   75 07                           	jne 0x804a00c <func_1+0x7fd>
0x804a005:   b8 01 00 00 00                  	mov eax, 1
0x804a00a:   eb 05                           	jmp 0x804a011 <func_1+0x802>
0x804a00c:   b8 00 00 00 00                  	mov eax, 0
0x804a011:   0f b7 d0                        	movzx edx, ax
0x804a014:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a017:   0f b7 c0                        	movzx eax, ax
0x804a01a:   89 c1                           	mov ecx, eax
0x804a01c:   d3 e2                           	shl edx, cl
0x804a01e:   89 d0                           	mov eax, edx
0x804a020:   0f be d0                        	movsx edx, al
0x804a023:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a026:   0f be c0                        	movsx eax, al
0x804a029:   89 c1                           	mov ecx, eax
0x804a02b:   d3 fa                           	sar edx, cl
0x804a02d:   89 d0                           	mov eax, edx
0x804a02f:   0f b7 d0                        	movzx edx, ax
0x804a032:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a035:   0f b7 c0                        	movzx eax, ax
0x804a038:   89 c1                           	mov ecx, eax
0x804a03a:   d3 e2                           	shl edx, cl
0x804a03c:   89 d0                           	mov eax, edx
0x804a03e:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x804a041:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a044:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a047:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a04a:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a04d:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x804a053:   e9 aa 00 00 00                  	jmp 0x804a102 <func_1+0x8f3>
0x804a058:   c7 85 14 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xec], 9
0x804a062:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a068:   89 c2                           	mov edx, eax
0x804a06a:   83 bd 20 ff ff ff 00            	cmp dword ptr [ebp - 0xe0], 0
0x804a071:   74 10                           	je 0x804a083 <func_1+0x874>
0x804a073:   80 bd 27 ff ff ff 00            	cmp byte ptr [ebp - 0xd9], 0
0x804a07a:   74 07                           	je 0x804a083 <func_1+0x874>
0x804a07c:   b8 01 00 00 00                  	mov eax, 1
0x804a081:   eb 05                           	jmp 0x804a088 <func_1+0x879>
0x804a083:   b8 00 00 00 00                  	mov eax, 0
0x804a088:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804a08b:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a08f:   25 b2 00 00 00                  	and eax, 0xb2
0x804a094:   69 c0 37 5e 00 00               	imul eax, eax, 0x5e37
0x804a09a:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a0a0:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a0a6:   01 d0                           	add eax, edx
0x804a0a8:   66 98                           	cbw 
0x804a0aa:   83 e8 09                        	sub eax, 9
0x804a0ad:   0f bf d0                        	movsx edx, ax
0x804a0b0:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a0b3:   98                              	cwde 
0x804a0b4:   89 c1                           	mov ecx, eax
0x804a0b6:   d3 fa                           	sar edx, cl
0x804a0b8:   89 d0                           	mov eax, edx
0x804a0ba:   66 21 45 e2                     	and word ptr [ebp - 0x1e], ax
0x804a0be:   81 bd 1c ff ff ff d5 46 00 00   	cmp dword ptr [ebp - 0xe4], 0x46d5
0x804a0c8:   0f 97 c0                        	seta al
0x804a0cb:   0f b6 c0                        	movzx eax, al
0x804a0ce:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a0d1:   0f 94 c0                        	sete al
0x804a0d4:   0f b6 c0                        	movzx eax, al
0x804a0d7:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a0da:   01 d0                           	add eax, edx
0x804a0dc:   0f bf d0                        	movsx edx, ax
0x804a0df:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a0e5:   98                              	cwde 
0x804a0e6:   0f af c2                        	imul eax, edx
0x804a0e9:   3d 8f 12 00 00                  	cmp eax, 0x128f
0x804a0ee:   0f 9f c0                        	setg al
0x804a0f1:   0f b6 c0                        	movzx eax, al
0x804a0f4:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a0f7:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a0fb:   83 c0 01                        	add eax, 1
0x804a0fe:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a102:   66 83 7d f2 1b                  	cmp word ptr [ebp - 0xe], 0x1b
0x804a107:   0f 84 4b ff ff ff               	je 0x804a058 <func_1+0x849>
0x804a10d:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x804a111:   83 45 b4 06                     	add dword ptr [ebp - 0x4c], 6
0x804a115:   83 7d b4 1e                     	cmp dword ptr [ebp - 0x4c], 0x1e
0x804a119:   0f 87 b8 fe ff ff               	ja 0x8049fd7 <func_1+0x7c8>
0x804a11f:   eb 01                           	jmp 0x804a122 <func_1+0x913>
0x804a121:   90                              	nop 
0x804a122:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a126:   83 e8 01                        	sub eax, 1
0x804a129:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804a12d:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a131:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x804a135:   83 c0 01                        	add eax, 1
0x804a138:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x804a13b:   80 7d e1 31                     	cmp byte ptr [ebp - 0x1f], 0x31
0x804a13f:   0f 87 70 fe ff ff               	ja 0x8049fb5 <func_1+0x7a6>
0x804a145:   0f be 85 76 ff ff ff            	movsx eax, byte ptr [ebp - 0x8a]
0x804a14c:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x804a14f:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a152:   74 07                           	je 0x804a15b <func_1+0x94c>
0x804a154:   b8 01 00 00 00                  	mov eax, 1
0x804a159:   eb 05                           	jmp 0x804a160 <func_1+0x951>
0x804a15b:   b8 00 00 00 00                  	mov eax, 0
0x804a160:   89 c2                           	mov edx, eax
0x804a162:   0f b6 45 c3                     	movzx eax, byte ptr [ebp - 0x3d]
0x804a166:   21 d0                           	and eax, edx
0x804a168:   83 e0 04                        	and eax, 4
0x804a16b:   88 45 c3                        	mov byte ptr [ebp - 0x3d], al
0x804a16e:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a173:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x804a176:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a179:   0f b7 c0                        	movzx eax, ax
0x804a17c:   c1 f8 07                        	sar eax, 7
0x804a17f:   89 c2                           	mov edx, eax
0x804a181:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x804a185:   39 c2                           	cmp edx, eax
0x804a187:   0f 9e c0                        	setle al
0x804a18a:   0f b6 c0                        	movzx eax, al
0x804a18d:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a190:   eb 21                           	jmp 0x804a1b3 <func_1+0x9a4>
0x804a192:   66 c7 85 34 ff ff ff 01 00      	mov word ptr [ebp - 0xcc], 1
0x804a19b:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a19e:   0f be c0                        	movsx eax, al
0x804a1a1:   ba 04 00 00 00                  	mov edx, 4
0x804a1a6:   89 c1                           	mov ecx, eax
0x804a1a8:   d3 fa                           	sar edx, cl
0x804a1aa:   89 d0                           	mov eax, edx
0x804a1ac:   66 89 85 34 ff ff ff            	mov word ptr [ebp - 0xcc], ax
0x804a1b3:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a1b9:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804a1bc:   0f 94 c0                        	sete al
0x804a1bf:   0f b6 d0                        	movzx edx, al
0x804a1c2:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a1c8:   0f b6 c0                        	movzx eax, al
0x804a1cb:   89 c1                           	mov ecx, eax
0x804a1cd:   d3 e2                           	shl edx, cl
0x804a1cf:   89 d0                           	mov eax, edx
0x804a1d1:   85 c0                           	test eax, eax
0x804a1d3:   74 19                           	je 0x804a1ee <func_1+0x9df>
0x804a1d5:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x804a1df:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a1e3:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a1e9:   e9 cb 01 00 00                  	jmp 0x804a3b9 <func_1+0xbaa>
0x804a1ee:   66 c7 85 12 ff ff ff 03 00      	mov word ptr [ebp - 0xee], 3
0x804a1f7:   66 c7 85 10 ff ff ff 88 e8      	mov word ptr [ebp - 0xf0], 0xe888
0x804a200:   c7 85 0c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffff6
0x804a20a:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a211:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a214:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x804a21b:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a21e:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a222:   0f 84 db 00 00 00               	je 0x804a303 <func_1+0xaf4>
0x804a228:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a22c:   0f be 95 76 ff ff ff            	movsx edx, byte ptr [ebp - 0x8a]
0x804a233:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x804a23a:   0f be 75 c3                     	movsx esi, byte ptr [ebp - 0x3d]
0x804a23e:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a242:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a248:   0f bf 5d 82                     	movsx ebx, word ptr [ebp - 0x7e]
0x804a24c:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a252:   0f bf 7d 84                     	movsx edi, word ptr [ebp - 0x7c]
0x804a256:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a25c:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x804a260:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a266:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x804a26a:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a270:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a274:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a27a:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x804a27e:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a284:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a288:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a28c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a292:   50                              	push eax
0x804a293:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a299:   52                              	push edx
0x804a29a:   51                              	push ecx
0x804a29b:   56                              	push esi
0x804a29c:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a29f:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a2a5:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a2a8:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a2ae:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a2b4:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a2ba:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a2c0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a2c3:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a2c6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a2c9:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a2cc:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a2cf:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a2d5:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a2db:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a2e1:   57                              	push edi
0x804a2e2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a2e5:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a2e8:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a2eb:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a2ee:   53                              	push ebx
0x804a2ef:   e8 60 f3 ff ff                  	call 0x8049654 <set_var>
0x804a2f4:   83 c4 6c                        	add esp, 0x6c
0x804a2f7:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a2fe:   e9 70 02 00 00                  	jmp 0x804a573 <func_1+0xd64>
0x804a303:   c7 85 08 ff ff ff 51 7c 66 ca   	mov dword ptr [ebp - 0xf8], 0xca667c51
0x804a30d:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a314:   98                              	cwde 
0x804a315:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a318:   0f bf ca                        	movsx ecx, dx
0x804a31b:   99                              	cdq 
0x804a31c:   f7 f9                           	idiv ecx
0x804a31e:   89 d0                           	mov eax, edx
0x804a320:   89 c1                           	mov ecx, eax
0x804a322:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a328:   66 35 86 22                     	xor ax, 0x2286
0x804a32c:   89 c2                           	mov edx, eax
0x804a32e:   66 0f be 85 77 ff ff ff         	movsx ax, byte ptr [ebp - 0x89]
0x804a336:   01 d0                           	add eax, edx
0x804a338:   21 c8                           	and eax, ecx
0x804a33a:   83 e0 fa                        	and eax, 0xfffffffa
0x804a33d:   66 89 85 10 ff ff ff            	mov word ptr [ebp - 0xf0], ax
0x804a344:   c7 45 9c ee ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffee
0x804a34b:   eb 16                           	jmp 0x804a363 <func_1+0xb54>
0x804a34d:   66 c7 85 06 ff ff ff 28 7b      	mov word ptr [ebp - 0xfa], 0x7b28
0x804a356:   66 c7 85 06 ff ff ff 77 80      	mov word ptr [ebp - 0xfa], 0x8077
0x804a35f:   83 45 9c 04                     	add dword ptr [ebp - 0x64], 4
0x804a363:   83 7d 9c 11                     	cmp dword ptr [ebp - 0x64], 0x11
0x804a367:   7e e4                           	jle 0x804a34d <func_1+0xb3e>
0x804a369:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804a370:   98                              	cwde 
0x804a371:   c1 e0 04                        	shl eax, 4
0x804a374:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a37a:   83 7d 9c ff                     	cmp dword ptr [ebp - 0x64], -1
0x804a37e:   0f 95 c0                        	setne al
0x804a381:   0f b6 c0                        	movzx eax, al
0x804a384:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a38a:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a390:   0f be c0                        	movsx eax, al
0x804a393:   ba 01 00 00 00                  	mov edx, 1
0x804a398:   89 c1                           	mov ecx, eax
0x804a39a:   d3 fa                           	sar edx, cl
0x804a39c:   89 d0                           	mov eax, edx
0x804a39e:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a3a1:   0f 95 c0                        	setne al
0x804a3a4:   0f b6 c0                        	movzx eax, al
0x804a3a7:   8b 95 48 ff ff ff               	mov edx, dword ptr [ebp - 0xb8]
0x804a3ad:   0f be f2                        	movsx esi, dl
0x804a3b0:   99                              	cdq 
0x804a3b1:   f7 fe                           	idiv esi
0x804a3b3:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x804a3b9:   c7 45 90 e6 ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffe6
0x804a3c0:   83 7d 90 29                     	cmp dword ptr [ebp - 0x70], 0x29
0x804a3c4:   0f 87 d7 00 00 00               	ja 0x804a4a1 <func_1+0xc92>
0x804a3ca:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a3ce:   0f be 95 76 ff ff ff            	movsx edx, byte ptr [ebp - 0x8a]
0x804a3d5:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x804a3dc:   0f be 75 c3                     	movsx esi, byte ptr [ebp - 0x3d]
0x804a3e0:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a3e4:   89 9d f0 fe ff ff               	mov dword ptr [ebp - 0x110], ebx
0x804a3ea:   0f bf 7d 82                     	movsx edi, word ptr [ebp - 0x7e]
0x804a3ee:   89 bd ec fe ff ff               	mov dword ptr [ebp - 0x114], edi
0x804a3f4:   0f bf 5d 84                     	movsx ebx, word ptr [ebp - 0x7c]
0x804a3f8:   89 9d e8 fe ff ff               	mov dword ptr [ebp - 0x118], ebx
0x804a3fe:   0f be 7d 87                     	movsx edi, byte ptr [ebp - 0x79]
0x804a402:   89 bd e4 fe ff ff               	mov dword ptr [ebp - 0x11c], edi
0x804a408:   0f be 5d df                     	movsx ebx, byte ptr [ebp - 0x21]
0x804a40c:   89 9d e0 fe ff ff               	mov dword ptr [ebp - 0x120], ebx
0x804a412:   0f b6 7d e0                     	movzx edi, byte ptr [ebp - 0x20]
0x804a416:   89 bd dc fe ff ff               	mov dword ptr [ebp - 0x124], edi
0x804a41c:   0f b6 5d e1                     	movzx ebx, byte ptr [ebp - 0x1f]
0x804a420:   89 9d d8 fe ff ff               	mov dword ptr [ebp - 0x128], ebx
0x804a426:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a42a:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a42e:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a434:   50                              	push eax
0x804a435:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a43b:   52                              	push edx
0x804a43c:   51                              	push ecx
0x804a43d:   56                              	push esi
0x804a43e:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a441:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a447:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a44a:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a450:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a456:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a45c:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a462:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a465:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a468:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a46b:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a46e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a471:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a477:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a47d:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a483:   57                              	push edi
0x804a484:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a487:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a48a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a48d:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a490:   53                              	push ebx
0x804a491:   e8 be f1 ff ff                  	call 0x8049654 <set_var>
0x804a496:   83 c4 6c                        	add esp, 0x6c
0x804a499:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a49c:   e9 d2 00 00 00                  	jmp 0x804a573 <func_1+0xd64>
0x804a4a1:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a4a5:   0f be 95 76 ff ff ff            	movsx edx, byte ptr [ebp - 0x8a]
0x804a4ac:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x804a4b3:   0f be 75 c3                     	movsx esi, byte ptr [ebp - 0x3d]
0x804a4b7:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a4bb:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a4c1:   0f bf 5d 82                     	movsx ebx, word ptr [ebp - 0x7e]
0x804a4c5:   89 9d ec fe ff ff               	mov dword ptr [ebp - 0x114], ebx
0x804a4cb:   0f bf 7d 84                     	movsx edi, word ptr [ebp - 0x7c]
0x804a4cf:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a4d5:   0f be 5d 87                     	movsx ebx, byte ptr [ebp - 0x79]
0x804a4d9:   89 9d e4 fe ff ff               	mov dword ptr [ebp - 0x11c], ebx
0x804a4df:   0f be 7d df                     	movsx edi, byte ptr [ebp - 0x21]
0x804a4e3:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a4e9:   0f b6 5d e0                     	movzx ebx, byte ptr [ebp - 0x20]
0x804a4ed:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a4f3:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x804a4f7:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a4fd:   0f bf 7d e2                     	movsx edi, word ptr [ebp - 0x1e]
0x804a501:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a505:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a50b:   50                              	push eax
0x804a50c:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a512:   52                              	push edx
0x804a513:   51                              	push ecx
0x804a514:   56                              	push esi
0x804a515:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a518:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a51e:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a521:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a527:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a52d:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a533:   ff b5 e4 fe ff ff               	push dword ptr [ebp - 0x11c]
0x804a539:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a53c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a53f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a542:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a545:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a548:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a54e:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a554:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a55a:   57                              	push edi
0x804a55b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a55e:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a561:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a564:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a567:   53                              	push ebx
0x804a568:   e8 e7 f0 ff ff                  	call 0x8049654 <set_var>
0x804a56d:   83 c4 6c                        	add esp, 0x6c
0x804a570:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a573:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a576:   5b                              	pop ebx
0x804a577:   5e                              	pop esi
0x804a578:   5f                              	pop edi
0x804a579:   5d                              	pop ebp
0x804a57a:   c3                              	ret 
; function: main at 0x804a57b -- 0x804a96c
0x804a57b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a57f:   83 e4 f0                        	and esp, 0xfffffff0
0x804a582:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a585:   55                              	push ebp
0x804a586:   89 e5                           	mov ebp, esp
0x804a588:   53                              	push ebx
0x804a589:   51                              	push ecx
0x804a58a:   83 ec 10                        	sub esp, 0x10
0x804a58d:   e8 fe dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a592:   81 c3 6e 2a 00 00               	add ebx, 0x2a6e
0x804a598:   89 c8                           	mov eax, ecx
0x804a59a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a5a1:   83 38 02                        	cmp dword ptr [eax], 2
0x804a5a4:   75 26                           	jne 0x804a5cc <main+0x51>
0x804a5a6:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a5a9:   83 c0 04                        	add eax, 4
0x804a5ac:   8b 00                           	mov eax, dword ptr [eax]
0x804a5ae:   83 ec 08                        	sub esp, 8
0x804a5b1:   8d 93 64 da ff ff               	lea edx, [ebx - 0x259c]
0x804a5b7:   52                              	push edx
0x804a5b8:   50                              	push eax
0x804a5b9:   e8 42 dd ff ff                  	call 0x8048300 <strcmp>
0x804a5be:   83 c4 10                        	add esp, 0x10
0x804a5c1:   85 c0                           	test eax, eax
0x804a5c3:   75 07                           	jne 0x804a5cc <main+0x51>
0x804a5c5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a5cc:   e8 85 de ff ff                  	call 0x8048456 <platform_main_begin>
0x804a5d1:   e8 95 ee ff ff                  	call 0x804946b <crc32_gentab>
0x804a5d6:   e8 34 f2 ff ff                  	call 0x804980f <func_1>
0x804a5db:   b8 01 00 00 00                  	mov eax, 1
0x804a5e0:   98                              	cwde 
0x804a5e1:   83 ec 04                        	sub esp, 4
0x804a5e4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5e7:   8d 93 66 da ff ff               	lea edx, [ebx - 0x259a]
0x804a5ed:   52                              	push edx
0x804a5ee:   50                              	push eax
0x804a5ef:   e8 83 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5f4:   83 c4 10                        	add esp, 0x10
0x804a5f7:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a5fe:   0f b7 c0                        	movzx eax, ax
0x804a601:   83 ec 04                        	sub esp, 4
0x804a604:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a607:   8d 93 6a da ff ff               	lea edx, [ebx - 0x2596]
0x804a60d:   52                              	push edx
0x804a60e:   50                              	push eax
0x804a60f:   e8 63 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a614:   83 c4 10                        	add esp, 0x10
0x804a617:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a61d:   83 ec 04                        	sub esp, 4
0x804a620:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a623:   8d 93 6f da ff ff               	lea edx, [ebx - 0x2591]
0x804a629:   52                              	push edx
0x804a62a:   50                              	push eax
0x804a62b:   e8 47 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a630:   83 c4 10                        	add esp, 0x10
0x804a633:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a639:   89 c2                           	mov edx, eax
0x804a63b:   83 ec 04                        	sub esp, 4
0x804a63e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a641:   8d 83 74 da ff ff               	lea eax, [ebx - 0x258c]
0x804a647:   50                              	push eax
0x804a648:   52                              	push edx
0x804a649:   e8 29 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a64e:   83 c4 10                        	add esp, 0x10
0x804a651:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a657:   83 ec 04                        	sub esp, 4
0x804a65a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a65d:   8d 93 79 da ff ff               	lea edx, [ebx - 0x2587]
0x804a663:   52                              	push edx
0x804a664:   50                              	push eax
0x804a665:   e8 0d ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a66a:   83 c4 10                        	add esp, 0x10
0x804a66d:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a673:   89 c2                           	mov edx, eax
0x804a675:   83 ec 04                        	sub esp, 4
0x804a678:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a67b:   8d 83 7e da ff ff               	lea eax, [ebx - 0x2582]
0x804a681:   50                              	push eax
0x804a682:   52                              	push edx
0x804a683:   e8 ef ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a688:   83 c4 10                        	add esp, 0x10
0x804a68b:   0f b7 83 34 00 00 00            	movzx eax, word ptr [ebx + 0x34]
0x804a692:   98                              	cwde 
0x804a693:   83 ec 04                        	sub esp, 4
0x804a696:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a699:   8d 93 83 da ff ff               	lea edx, [ebx - 0x257d]
0x804a69f:   52                              	push edx
0x804a6a0:   50                              	push eax
0x804a6a1:   e8 d1 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6a6:   83 c4 10                        	add esp, 0x10
0x804a6a9:   0f b6 83 36 00 00 00            	movzx eax, byte ptr [ebx + 0x36]
0x804a6b0:   0f b6 c0                        	movzx eax, al
0x804a6b3:   83 ec 04                        	sub esp, 4
0x804a6b6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6b9:   8d 93 88 da ff ff               	lea edx, [ebx - 0x2578]
0x804a6bf:   52                              	push edx
0x804a6c0:   50                              	push eax
0x804a6c1:   e8 b1 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6c6:   83 c4 10                        	add esp, 0x10
0x804a6c9:   0f b6 83 37 00 00 00            	movzx eax, byte ptr [ebx + 0x37]
0x804a6d0:   0f b6 c0                        	movzx eax, al
0x804a6d3:   83 ec 04                        	sub esp, 4
0x804a6d6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6d9:   8d 93 8d da ff ff               	lea edx, [ebx - 0x2573]
0x804a6df:   52                              	push edx
0x804a6e0:   50                              	push eax
0x804a6e1:   e8 91 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6e6:   83 c4 10                        	add esp, 0x10
0x804a6e9:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a6f0:   0f be c0                        	movsx eax, al
0x804a6f3:   83 ec 04                        	sub esp, 4
0x804a6f6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6f9:   8d 93 92 da ff ff               	lea edx, [ebx - 0x256e]
0x804a6ff:   52                              	push edx
0x804a700:   50                              	push eax
0x804a701:   e8 71 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a706:   83 c4 10                        	add esp, 0x10
0x804a709:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a70f:   89 c2                           	mov edx, eax
0x804a711:   83 ec 04                        	sub esp, 4
0x804a714:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a717:   8d 83 97 da ff ff               	lea eax, [ebx - 0x2569]
0x804a71d:   50                              	push eax
0x804a71e:   52                              	push edx
0x804a71f:   e8 53 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a724:   83 c4 10                        	add esp, 0x10
0x804a727:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a72d:   89 c2                           	mov edx, eax
0x804a72f:   83 ec 04                        	sub esp, 4
0x804a732:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a735:   8d 83 9c da ff ff               	lea eax, [ebx - 0x2564]
0x804a73b:   50                              	push eax
0x804a73c:   52                              	push edx
0x804a73d:   e8 35 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a742:   83 c4 10                        	add esp, 0x10
0x804a745:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a74b:   83 ec 04                        	sub esp, 4
0x804a74e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a751:   8d 93 a1 da ff ff               	lea edx, [ebx - 0x255f]
0x804a757:   52                              	push edx
0x804a758:   50                              	push eax
0x804a759:   e8 19 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a75e:   83 c4 10                        	add esp, 0x10
0x804a761:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a767:   89 c2                           	mov edx, eax
0x804a769:   83 ec 04                        	sub esp, 4
0x804a76c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a76f:   8d 83 a6 da ff ff               	lea eax, [ebx - 0x255a]
0x804a775:   50                              	push eax
0x804a776:   52                              	push edx
0x804a777:   e8 fb ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a77c:   83 c4 10                        	add esp, 0x10
0x804a77f:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a785:   89 c2                           	mov edx, eax
0x804a787:   83 ec 04                        	sub esp, 4
0x804a78a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a78d:   8d 83 ac da ff ff               	lea eax, [ebx - 0x2554]
0x804a793:   50                              	push eax
0x804a794:   52                              	push edx
0x804a795:   e8 dd ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a79a:   83 c4 10                        	add esp, 0x10
0x804a79d:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804a7a4:   0f be c0                        	movsx eax, al
0x804a7a7:   83 ec 04                        	sub esp, 4
0x804a7aa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7ad:   8d 93 b2 da ff ff               	lea edx, [ebx - 0x254e]
0x804a7b3:   52                              	push edx
0x804a7b4:   50                              	push eax
0x804a7b5:   e8 bd ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7ba:   83 c4 10                        	add esp, 0x10
0x804a7bd:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a7c4:   98                              	cwde 
0x804a7c5:   83 ec 04                        	sub esp, 4
0x804a7c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7cb:   8d 93 b8 da ff ff               	lea edx, [ebx - 0x2548]
0x804a7d1:   52                              	push edx
0x804a7d2:   50                              	push eax
0x804a7d3:   e8 9f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7d8:   83 c4 10                        	add esp, 0x10
0x804a7db:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804a7e2:   98                              	cwde 
0x804a7e3:   83 ec 04                        	sub esp, 4
0x804a7e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7e9:   8d 93 be da ff ff               	lea edx, [ebx - 0x2542]
0x804a7ef:   52                              	push edx
0x804a7f0:   50                              	push eax
0x804a7f1:   e8 81 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7f6:   83 c4 10                        	add esp, 0x10
0x804a7f9:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804a800:   0f b7 c0                        	movzx eax, ax
0x804a803:   83 ec 04                        	sub esp, 4
0x804a806:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a809:   8d 93 c4 da ff ff               	lea edx, [ebx - 0x253c]
0x804a80f:   52                              	push edx
0x804a810:   50                              	push eax
0x804a811:   e8 61 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a816:   83 c4 10                        	add esp, 0x10
0x804a819:   ba 00 00 00 00                  	mov edx, 0
0x804a81e:   83 ec 04                        	sub esp, 4
0x804a821:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a824:   8d 83 ca da ff ff               	lea eax, [ebx - 0x2536]
0x804a82a:   50                              	push eax
0x804a82b:   52                              	push edx
0x804a82c:   e8 46 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a831:   83 c4 10                        	add esp, 0x10
0x804a834:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a83a:   89 c2                           	mov edx, eax
0x804a83c:   83 ec 04                        	sub esp, 4
0x804a83f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a842:   8d 83 d0 da ff ff               	lea eax, [ebx - 0x2530]
0x804a848:   50                              	push eax
0x804a849:   52                              	push edx
0x804a84a:   e8 28 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a84f:   83 c4 10                        	add esp, 0x10
0x804a852:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a858:   89 c2                           	mov edx, eax
0x804a85a:   83 ec 04                        	sub esp, 4
0x804a85d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a860:   8d 83 d6 da ff ff               	lea eax, [ebx - 0x252a]
0x804a866:   50                              	push eax
0x804a867:   52                              	push edx
0x804a868:   e8 0a ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a86d:   83 c4 10                        	add esp, 0x10
0x804a870:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804a876:   83 ec 04                        	sub esp, 4
0x804a879:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a87c:   8d 93 dc da ff ff               	lea edx, [ebx - 0x2524]
0x804a882:   52                              	push edx
0x804a883:   50                              	push eax
0x804a884:   e8 ee ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a889:   83 c4 10                        	add esp, 0x10
0x804a88c:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804a893:   0f be c0                        	movsx eax, al
0x804a896:   83 ec 04                        	sub esp, 4
0x804a899:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a89c:   8d 93 e2 da ff ff               	lea edx, [ebx - 0x251e]
0x804a8a2:   52                              	push edx
0x804a8a3:   50                              	push eax
0x804a8a4:   e8 ce ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a9:   83 c4 10                        	add esp, 0x10
0x804a8ac:   0f b6 83 65 00 00 00            	movzx eax, byte ptr [ebx + 0x65]
0x804a8b3:   0f be c0                        	movsx eax, al
0x804a8b6:   83 ec 04                        	sub esp, 4
0x804a8b9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8bc:   8d 93 e8 da ff ff               	lea edx, [ebx - 0x2518]
0x804a8c2:   52                              	push edx
0x804a8c3:   50                              	push eax
0x804a8c4:   e8 ae ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c9:   83 c4 10                        	add esp, 0x10
0x804a8cc:   0f b6 83 66 00 00 00            	movzx eax, byte ptr [ebx + 0x66]
0x804a8d3:   0f be c0                        	movsx eax, al
0x804a8d6:   83 ec 04                        	sub esp, 4
0x804a8d9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8dc:   8d 93 ee da ff ff               	lea edx, [ebx - 0x2512]
0x804a8e2:   52                              	push edx
0x804a8e3:   50                              	push eax
0x804a8e4:   e8 8e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e9:   83 c4 10                        	add esp, 0x10
0x804a8ec:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a8f2:   89 c2                           	mov edx, eax
0x804a8f4:   83 ec 04                        	sub esp, 4
0x804a8f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8fa:   8d 83 f4 da ff ff               	lea eax, [ebx - 0x250c]
0x804a900:   50                              	push eax
0x804a901:   52                              	push edx
0x804a902:   e8 70 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a907:   83 c4 10                        	add esp, 0x10
0x804a90a:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804a911:   0f b7 c0                        	movzx eax, ax
0x804a914:   83 ec 04                        	sub esp, 4
0x804a917:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a91a:   8d 93 fa da ff ff               	lea edx, [ebx - 0x2506]
0x804a920:   52                              	push edx
0x804a921:   50                              	push eax
0x804a922:   e8 50 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a927:   83 c4 10                        	add esp, 0x10
0x804a92a:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804a930:   83 ec 04                        	sub esp, 4
0x804a933:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a936:   8d 93 00 db ff ff               	lea edx, [ebx - 0x2500]
0x804a93c:   52                              	push edx
0x804a93d:   50                              	push eax
0x804a93e:   e8 34 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a943:   83 c4 10                        	add esp, 0x10
0x804a946:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a94c:   f7 d0                           	not eax
0x804a94e:   83 ec 08                        	sub esp, 8
0x804a951:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a954:   50                              	push eax
0x804a955:   e8 0c db ff ff                  	call 0x8048466 <platform_main_end>
0x804a95a:   83 c4 10                        	add esp, 0x10
0x804a95d:   b8 00 00 00 00                  	mov eax, 0
0x804a962:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a965:   59                              	pop ecx
0x804a966:   5b                              	pop ebx
0x804a967:   5d                              	pop ebp
0x804a968:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a96b:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a96c -- 0x804a970
0x804a96c:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a96f:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804a970 -- 0x804a974
0x804a970:   8b 14 24                        	mov edx, dword ptr [esp]
0x804a973:   c3                              	ret 
; data inside code section at 0x804a974 -- 0x804a980
0x804a974:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804a980 -- 0x804a9dd
0x804a980:   55                              	push ebp
0x804a981:   57                              	push edi
0x804a982:   56                              	push esi
0x804a983:   53                              	push ebx
0x804a984:   e8 07 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a989:   81 c3 77 26 00 00               	add ebx, 0x2677
0x804a98f:   83 ec 0c                        	sub esp, 0xc
0x804a992:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a996:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a99c:   e8 2b d9 ff ff                  	call 0x80482cc <_init>
0x804a9a1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a9a7:   29 c6                           	sub esi, eax
0x804a9a9:   c1 fe 02                        	sar esi, 2
0x804a9ac:   85 f6                           	test esi, esi
0x804a9ae:   74 25                           	je 0x804a9d5 <__libc_csu_init+0x55>
0x804a9b0:   31 ff                           	xor edi, edi
0x804a9b2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a9b8:   83 ec 04                        	sub esp, 4
0x804a9bb:   55                              	push ebp
0x804a9bc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a9c0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a9c4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a9cb:   83 c7 01                        	add edi, 1
0x804a9ce:   83 c4 10                        	add esp, 0x10
0x804a9d1:   39 fe                           	cmp esi, edi
0x804a9d3:   75 e3                           	jne 0x804a9b8 <__libc_csu_init+0x38>
0x804a9d5:   83 c4 0c                        	add esp, 0xc
0x804a9d8:   5b                              	pop ebx
0x804a9d9:   5e                              	pop esi
0x804a9da:   5f                              	pop edi
0x804a9db:   5d                              	pop ebp
0x804a9dc:   c3                              	ret 
; data inside code section at 0x804a9dd -- 0x804a9e0
0x804a9dd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a9e0 -- 0x804a9e2
0x804a9e0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a9e4 -- 0x804a9f8
0x804a9e4:   53                              	push ebx
0x804a9e5:   83 ec 08                        	sub esp, 8
0x804a9e8:   e8 a3 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a9ed:   81 c3 13 26 00 00               	add ebx, 0x2613
0x804a9f3:   83 c4 08                        	add esp, 8
0x804a9f6:   5b                              	pop ebx
0x804a9f7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 fc a9 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a9f8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aa08:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aa18:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aa28:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aa38:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804aa48:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804aa58:   01 00 00 00 00 00 00 00  25 64 0a 00 31 00 67 5f   |........%d..1.g_|
0x804aa68:   37 00 67 5f 31 33 00 67  5f 31 34 00 67 5f 33 32   |7.g_13.g_14.g_32|
0x804aa78:   00 67 5f 33 38 00 67 5f  34 31 00 67 5f 35 38 00   |.g_38.g_41.g_58.|
0x804aa88:   67 5f 38 35 00 67 5f 38  37 00 67 5f 39 35 00 67   |g_85.g_87.g_95.g|
0x804aa98:   5f 39 36 00 67 5f 39 38  00 67 5f 39 39 00 67 5f   |_96.g_98.g_99.g_|
0x804aaa8:   31 30 33 00 67 5f 31 30  39 00 67 5f 31 35 30 00   |103.g_109.g_150.|
0x804aab8:   67 5f 31 35 39 00 67 5f  31 36 30 00 67 5f 31 36   |g_159.g_160.g_16|
0x804aac8:   32 00 67 5f 32 30 34 00  67 5f 32 30 36 00 67 5f   |2.g_204.g_206.g_|
0x804aad8:   32 30 37 00 67 5f 32 30  38 00 67 5f 32 31 31 00   |207.g_208.g_211.|
0x804aae8:   67 5f 32 31 32 00 67 5f  32 31 33 00 67 5f 32 31   |g_212.g_213.g_21|
0x804aaf8:   34 00 67 5f 32 31 35 00  67 5f 32 34 32 00 00 00   |4.g_215.g_242...|
0x804ab08:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804ab18:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804ab28:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ab38:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ab48:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ab58:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ab68:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ab70:   01 1b 03 3b c0 02 00 00  57 00 00 00 80 d7 ff ff   |...;....W.......|
0x804ab80:   f0 02 00 00 c0 d7 ff ff  14 03 00 00 10 d8 ff ff   |................|
0x804ab90:   dc 02 00 00 e6 d8 ff ff  28 03 00 00 f6 d8 ff ff   |........(.......|
0x804aba0:   48 03 00 00 24 d9 ff ff  6c 03 00 00 42 d9 ff ff   |H...$...l...B...|
0x804abb0:   8c 03 00 00 6a d9 ff ff  ac 03 00 00 94 d9 ff ff   |....j...........|
0x804abc0:   cc 03 00 00 bd d9 ff ff  ec 03 00 00 00 da ff ff   |................|
0x804abd0:   0c 04 00 00 41 da ff ff  2c 04 00 00 99 da ff ff   |....A...,.......|
0x804abe0:   50 04 00 00 eb da ff ff  74 04 00 00 28 db ff ff   |P.......t...(...|
0x804abf0:   94 04 00 00 5f db ff ff  b4 04 00 00 7e db ff ff   |...._.......~...|
0x804ac00:   d4 04 00 00 a8 db ff ff  f4 04 00 00 d4 db ff ff   |................|
0x804ac10:   14 05 00 00 ff db ff ff  34 05 00 00 48 dc ff ff   |........4...H...|
0x804ac20:   54 05 00 00 8f dc ff ff  74 05 00 00 e9 dc ff ff   |T.......t.......|
0x804ac30:   98 05 00 00 3d dd ff ff  bc 05 00 00 7c dd ff ff   |....=.......|...|
0x804ac40:   dc 05 00 00 b5 dd ff ff  fc 05 00 00 d7 dd ff ff   |................|
0x804ac50:   1c 06 00 00 25 de ff ff  3c 06 00 00 61 de ff ff   |....%...<...a...|
0x804ac60:   5c 06 00 00 ea de ff ff  7c 06 00 00 1c df ff ff   |\.......|.......|
0x804ac70:   9c 06 00 00 4c df ff ff  bc 06 00 00 91 df ff ff   |....L...........|
0x804ac80:   dc 06 00 00 d0 df ff ff  fc 06 00 00 02 e0 ff ff   |................|
0x804ac90:   1c 07 00 00 2e e0 ff ff  3c 07 00 00 4c e0 ff ff   |........<...L...|
0x804aca0:   5c 07 00 00 74 e0 ff ff  7c 07 00 00 99 e0 ff ff   |\...t...|.......|
0x804acb0:   9c 07 00 00 be e0 ff ff  bc 07 00 00 f5 e0 ff ff   |................|
0x804acc0:   dc 07 00 00 29 e1 ff ff  fc 07 00 00 7b e1 ff ff   |....).......{...|
0x804acd0:   20 08 00 00 c7 e1 ff ff  44 08 00 00 fe e1 ff ff   | .......D.......|
0x804ace0:   64 08 00 00 2f e2 ff ff  84 08 00 00 4e e2 ff ff   |d.../.......N...|
0x804acf0:   a4 08 00 00 78 e2 ff ff  c4 08 00 00 a0 e2 ff ff   |....x...........|
0x804ad00:   e4 08 00 00 c9 e2 ff ff  04 09 00 00 05 e3 ff ff   |................|
0x804ad10:   24 09 00 00 3f e3 ff ff  44 09 00 00 92 e3 ff ff   |$...?...D.......|
0x804ad20:   68 09 00 00 df e3 ff ff  8c 09 00 00 17 e4 ff ff   |h...............|
0x804ad30:   ac 09 00 00 49 e4 ff ff  cc 09 00 00 5d e4 ff ff   |....I.......]...|
0x804ad40:   ec 09 00 00 74 e4 ff ff  0c 0a 00 00 89 e4 ff ff   |....t...........|
0x804ad50:   2c 0a 00 00 9f e4 ff ff  4c 0a 00 00 c6 e4 ff ff   |,.......L.......|
0x804ad60:   6c 0a 00 00 eb e4 ff ff  8c 0a 00 00 2a e5 ff ff   |l...........*...|
0x804ad70:   ac 0a 00 00 63 e5 ff ff  cc 0a 00 00 8f e5 ff ff   |....c...........|
0x804ad80:   ec 0a 00 00 b5 e5 ff ff  0c 0b 00 00 f7 e5 ff ff   |................|
0x804ad90:   2c 0b 00 00 39 e6 ff ff  4c 0b 00 00 7b e6 ff ff   |,...9...L...{...|
0x804ada0:   6c 0b 00 00 f0 e6 ff ff  8c 0b 00 00 4d e7 ff ff   |l...........M...|
0x804adb0:   ac 0b 00 00 aa e7 ff ff  cc 0b 00 00 07 e8 ff ff   |................|
0x804adc0:   ec 0b 00 00 97 e8 ff ff  0c 0c 00 00 fb e8 ff ff   |................|
0x804add0:   2c 0c 00 00 6b e9 ff ff  4c 0c 00 00 b2 e9 ff ff   |,...k...L.......|
0x804ade0:   70 0c 00 00 07 ea ff ff  90 0c 00 00 4e ea ff ff   |p...........N...|
0x804adf0:   b4 0c 00 00 b6 ea ff ff  d8 0c 00 00 e4 ea ff ff   |................|
0x804ae00:   fc 0c 00 00 9f ec ff ff  2c 0d 00 00 0b fa ff ff   |........,.......|
0x804ae10:   5c 0d 00 00 fc fd ff ff  94 0d 00 00 00 fe ff ff   |\...............|
0x804ae20:   a8 0d 00 00 10 fe ff ff  bc 0d 00 00 70 fe ff ff   |............p...|
0x804ae30:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804ae34:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ae44:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ae54:   2c d5 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |,........... ...|
0x804ae64:   30 00 00 00 88 d4 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804ae74:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804ae84:   10 00 00 00 54 00 00 00  a4 d4 ff ff 08 00 00 00   |....T...........|
0x804ae94:   00 00 00 00 1c 00 00 00  68 00 00 00 b6 d5 ff ff   |........h.......|
0x804aea4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804aeb4:   04 04 00 00 20 00 00 00  88 00 00 00 a6 d5 ff ff   |.... ...........|
0x804aec4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804aed4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804aee4:   b0 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804aef4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804af04:   ae d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804af14:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804af24:   b6 d5 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804af34:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804af44:   c0 d5 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804af54:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804af64:   c9 d5 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804af74:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804af84:   ec d5 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804af94:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804afa4:   0d d6 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804afb4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804afc4:   90 01 00 00 41 d6 ff ff  52 00 00 00 00 41 0e 08   |....A...R....A..|
0x804afd4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804afe4:   1c 00 00 00 b4 01 00 00  6f d6 ff ff 3d 00 00 00   |........o...=...|
0x804aff4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b004:   1c 00 00 00 d4 01 00 00  8c d6 ff ff 37 00 00 00   |............7...|
0x804b014:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b024:   1c 00 00 00 f4 01 00 00  a3 d6 ff ff 1f 00 00 00   |................|
0x804b034:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b044:   1c 00 00 00 14 02 00 00  a2 d6 ff ff 2a 00 00 00   |............*...|
0x804b054:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b064:   1c 00 00 00 34 02 00 00  ac d6 ff ff 2c 00 00 00   |....4.......,...|
0x804b074:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b084:   1c 00 00 00 54 02 00 00  b8 d6 ff ff 2b 00 00 00   |....T.......+...|
0x804b094:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b0a4:   1c 00 00 00 74 02 00 00  c3 d6 ff ff 49 00 00 00   |....t.......I...|
0x804b0b4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b0c4:   1c 00 00 00 94 02 00 00  ec d6 ff ff 47 00 00 00   |............G...|
0x804b0d4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b0e4:   20 00 00 00 b4 02 00 00  13 d7 ff ff 5a 00 00 00   | ...........Z...|
0x804b0f4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b104:   c5 0c 04 04 20 00 00 00  d8 02 00 00 49 d7 ff ff   |.... .......I...|
0x804b114:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b124:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b134:   79 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |y...?....A....B.|
0x804b144:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b154:   98 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b164:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b174:   b1 d7 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b184:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b194:   b3 d7 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b1a4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b1b4:   e1 d7 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b1c4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b1d4:   fd d7 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1e4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b1f4:   66 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |f...2....A....B.|
0x804b204:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b214:   78 d8 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |x...0....A....B.|
0x804b224:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b234:   88 d8 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b244:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b254:   ad d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b264:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b274:   cc d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b284:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b294:   de d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b2a4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b2b4:   ea d8 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b2c4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b2d4:   e8 d8 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b2e4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b2f4:   f0 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b304:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b314:   f5 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b324:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b334:   fa d8 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b344:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b354:   11 d9 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b364:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b374:   25 d9 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |%...R....A....B.|
0x804b384:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b394:   60 05 00 00 53 d9 ff ff  4c 00 00 00 00 41 0e 08   |`...S...L....A..|
0x804b3a4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b3b4:   1c 00 00 00 84 05 00 00  7b d9 ff ff 37 00 00 00   |........{...7...|
0x804b3c4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b3d4:   1c 00 00 00 a4 05 00 00  92 d9 ff ff 31 00 00 00   |............1...|
0x804b3e4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b3f4:   1c 00 00 00 c4 05 00 00  a3 d9 ff ff 1f 00 00 00   |................|
0x804b404:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b414:   1c 00 00 00 e4 05 00 00  a2 d9 ff ff 2a 00 00 00   |............*...|
0x804b424:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b434:   1c 00 00 00 04 06 00 00  ac d9 ff ff 28 00 00 00   |............(...|
0x804b444:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b454:   1c 00 00 00 24 06 00 00  b4 d9 ff ff 29 00 00 00   |....$.......)...|
0x804b464:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b474:   1c 00 00 00 44 06 00 00  bd d9 ff ff 3c 00 00 00   |....D.......<...|
0x804b484:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b494:   1c 00 00 00 64 06 00 00  d9 d9 ff ff 3a 00 00 00   |....d.......:...|
0x804b4a4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b4b4:   20 00 00 00 84 06 00 00  f3 d9 ff ff 53 00 00 00   | ...........S...|
0x804b4c4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b4d4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 22 da ff ff   |.... ......."...|
0x804b4e4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b4f4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b504:   4b da ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |K...8....A....B.|
0x804b514:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b524:   63 da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |c...2....A....B.|
0x804b534:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b544:   75 da ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804b554:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b564:   69 da ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |i........A....B.|
0x804b574:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b584:   60 da ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |`........A....B.|
0x804b594:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b5a4:   55 da ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804b5b4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b5c4:   4b da ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |K...'....A....B.|
0x804b5d4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b5e4:   52 da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |R...%....A....B.|
0x804b5f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b604:   57 da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |W...?....A....B.|
0x804b614:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b624:   76 da ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |v...9....A....B.|
0x804b634:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b644:   8f da ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b654:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b664:   9b da ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b674:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b684:   a1 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b694:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b6a4:   c3 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b6b4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b6c4:   e5 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b6d4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b6e4:   07 db ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b6f4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b704:   5c db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |\...]....A....B.|
0x804b714:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b724:   99 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b734:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b744:   d6 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b754:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b764:   13 dc ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b774:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b784:   83 dc ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b794:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b7a4:   c7 dc ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b7b4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b7c4:   17 dd ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b7d4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b7e4:   b0 09 00 00 3a dd ff ff  55 00 00 00 00 41 0e 08   |....:...U....A..|
0x804b7f4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b804:   d0 09 00 00 6f dd ff ff  47 00 00 00 00 41 0e 08   |....o...G....A..|
0x804b814:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b824:   20 00 00 00 f4 09 00 00  92 dd ff ff 68 00 00 00   | ...........h...|
0x804b834:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b844:   0c 04 04 00 20 00 00 00  18 0a 00 00 d6 dd ff ff   |.... ...........|
0x804b854:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b864:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804b874:   e0 dd ff ff bb 01 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b884:   05 46 87 03 86 04 83 05  03 ae 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804b894:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804b8a4:   6b df ff ff 6c 0d 00 00  00 41 0e 08 85 02 42 0d   |k...l....A....B.|
0x804b8b4:   05 49 87 03 86 04 83 05  03 5c 0d c3 41 c6 41 c7   |.I.......\..A.A.|
0x804b8c4:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804b8d4:   a7 ec ff ff f1 03 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804b8e4:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 dc   |.u.D..ux....u|..|
0x804b8f4:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804b904:   10 00 00 00 d4 0a 00 00  60 f0 ff ff 04 00 00 00   |........`.......|
0x804b914:   00 00 00 00 10 00 00 00  e8 0a 00 00 50 f0 ff ff   |............P...|
0x804b924:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804b934:   4c f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |L...]....A....A.|
0x804b944:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804b954:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804b964:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804b974:   0e 04 00 00 10 00 00 00  48 0b 00 00 60 f0 ff ff   |........H...`...|
0x804b984:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 e4 a9 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 57 72 00 00   |............Wr..|
0x804d028:   4c 24 f0 03 69 e7 3d 78  a4 8e 3e 5d ac df ff f6   |L$..i.=x..>]....|
0x804d038:   b3 00 00 00 ff ff ff ff  f2 74 1c b8 f6 ff ff ff   |.........t......|
0x804d048:   06 00 00 00 ff ff ff ff  fa 00 0d 69 ff ff 00 00   |...........i....|
0x804d058:   04 00 00 00 d1 52 cd 9e  ff ff ff ff 68 c0 99 00   |.....R......h...|
0x804d068:   01 00 00 00 8f ad 00 00  06 00 00 00 ??            |............?   |
