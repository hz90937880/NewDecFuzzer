;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:27:27
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 10 dc ff ff               	lea eax, [ebx - 0x23f0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 aa a7 04 08               	mov eax, 0x804a7aa
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 3e 27 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 2a 27 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 30 dc ff ff               	lea edx, [eax - 0x23d0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 fd 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 df 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 b7 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 8d 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 64 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 21 26 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 df 25 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 87 25 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 36 25 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 f9 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 c2 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 a3 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 79 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 4d 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 22 24 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 d9 23 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 91 23 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 37 23 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 e4 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 a5 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 6f 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 4d 22 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 ff 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 c3 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 3a 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 08 21 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 d8 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 93 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 54 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 22 20 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 f3 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 d5 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 ad 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 88 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 63 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 2c 1f 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 f7 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 a5 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 5a 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 23 1e 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 f2 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 d3 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 a9 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 81 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 58 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 1c 1d 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 e1 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 8e 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 42 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 0a 1c 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 db 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 c7 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 b0 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 9b 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 85 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 5e 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 39 1b 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 fa 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 c1 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 95 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 6f 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 2c dd ff ff               	fld dword ptr [eax - 0x22d4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 2c dd ff ff               	fld dword ptr [eax - 0x22d4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 30 dd ff ff               	fld dword ptr [eax - 0x22d0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 2d 1a 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 2c dd ff ff               	fld dword ptr [eax - 0x22d4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 2c dd ff ff               	fld dword ptr [eax - 0x22d4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 30 dd ff ff               	fld dword ptr [eax - 0x22d0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 eb 19 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 34 dd ff ff               	fld dword ptr [eax - 0x22cc]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 38 dd ff ff               	fld dword ptr [eax - 0x22c8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 3c dd ff ff               	fld dword ptr [eax - 0x22c4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 a9 19 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 40 dd ff ff               	fld dword ptr [eax - 0x22c0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 44 dd ff ff               	fld dword ptr [eax - 0x22bc]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 48 dd ff ff               	fld dword ptr [eax - 0x22b8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 31 19 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 50 dd ff ff               	fld qword ptr [eax - 0x22b0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 50 dd ff ff               	fld qword ptr [eax - 0x22b0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 58 dd ff ff               	fld qword ptr [eax - 0x22a8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 d4 18 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 50 dd ff ff               	fld qword ptr [eax - 0x22b0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 50 dd ff ff               	fld qword ptr [eax - 0x22b0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 58 dd ff ff               	fld qword ptr [eax - 0x22a8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 77 18 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 60 dd ff ff               	fld qword ptr [eax - 0x22a0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 68 dd ff ff               	fld qword ptr [eax - 0x2298]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 70 dd ff ff               	fld qword ptr [eax - 0x2290]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 1a 18 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 78 dd ff ff               	fld qword ptr [eax - 0x2288]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 80 dd ff ff               	fld qword ptr [eax - 0x2280]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 88 dd ff ff               	fld qword ptr [eax - 0x2278]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 8a 17 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 90 dd ff ff               	fld dword ptr [eax - 0x2270]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 94 dd ff ff               	fld dword ptr [eax - 0x226c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 26 17 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 b5 16 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 72 16 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 40 dc ff ff               	lea eax, [ebx - 0x23c0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 64 dc ff ff               	lea eax, [ebx - 0x239c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049808
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 6c 15 00 00                  	call 0x804aba0 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049649:   8b 7d 20                        	mov edi, dword ptr [ebp + 0x20]
0x804964c:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049686:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049689:   89 c8                           	mov eax, ecx
0x804968b:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x804968f:   89 d8                           	mov eax, ebx
0x8049691:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049694:   89 f0                           	mov eax, esi
0x8049696:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804969a:   89 f8                           	mov eax, edi
0x804969c:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804969f:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a3:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496a6:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496aa:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496ad:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496b1:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496b5:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b9:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496bd:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c1:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496c5:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c9:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496cd:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d1:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496d4:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d8:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496db:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496df:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496e5:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496eb:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496ef:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x80496f5:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496f9:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049700:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049703:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x8049709:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804970d:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049713:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049717:   66 89 82 32 00 00 00            	mov word ptr [edx + 0x32], ax
0x804971e:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049722:   88 82 34 00 00 00               	mov byte ptr [edx + 0x34], al
0x8049728:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804972c:   88 82 35 00 00 00               	mov byte ptr [edx + 0x35], al
0x8049732:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049735:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804973b:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804973e:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049744:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049748:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x804974e:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049752:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x8049759:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804975c:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049762:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049766:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x804976d:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049771:   66 89 82 46 00 00 00            	mov word ptr [edx + 0x46], ax
0x8049778:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804977b:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049781:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049784:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x804978a:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804978d:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049793:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049797:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x804979e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497a1:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497a7:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497aa:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x80497b0:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497b3:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497b9:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497bc:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497c2:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497c5:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497cb:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497cf:   88 82 68 00 00 00               	mov byte ptr [edx + 0x68], al
0x80497d5:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497d9:   88 82 69 00 00 00               	mov byte ptr [edx + 0x69], al
0x80497df:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497e2:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497e8:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80497eb:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497f1:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497f5:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x80497fb:   b8 00 00 00 00                  	mov eax, 0
0x8049800:   83 c4 60                        	add esp, 0x60
0x8049803:   5b                              	pop ebx
0x8049804:   5e                              	pop esi
0x8049805:   5f                              	pop edi
0x8049806:   5d                              	pop ebp
0x8049807:   c3                              	ret 
; function: func_1 at 0x8049808 -- 0x804a7aa
0x8049808:   55                              	push ebp
0x8049809:   89 e5                           	mov ebp, esp
0x804980b:   57                              	push edi
0x804980c:   56                              	push esi
0x804980d:   53                              	push ebx
0x804980e:   81 ec 50 01 00 00               	sub esp, 0x150
0x8049814:   e8 83 13 00 00                  	call 0x804ab9c <__x86.get_pc_thunk.ax>
0x8049819:   05 e7 37 00 00                  	add eax, 0x37e7
0x804981e:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x8049825:   c6 45 ef 01                     	mov byte ptr [ebp - 0x11], 1
0x8049829:   66 c7 45 ec d8 b7               	mov word ptr [ebp - 0x14], 0xb7d8
0x804982f:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x8049836:   c6 45 e7 02                     	mov byte ptr [ebp - 0x19], 2
0x804983a:   66 c7 45 8a aa ba               	mov word ptr [ebp - 0x76], 0xbaaa
0x8049840:   c6 45 e6 c7                     	mov byte ptr [ebp - 0x1a], 0xc7
0x8049844:   c6 45 e5 41                     	mov byte ptr [ebp - 0x1b], 0x41
0x8049848:   c7 45 84 f9 ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffff9
0x804984f:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x8049856:   c6 45 e4 05                     	mov byte ptr [ebp - 0x1c], 5
0x804985a:   66 c7 45 e2 fc ff               	mov word ptr [ebp - 0x1e], 0xfffc
0x8049860:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x8049867:   66 c7 45 da c4 28               	mov word ptr [ebp - 0x26], 0x28c4
0x804986d:   66 c7 45 d8 9b 86               	mov word ptr [ebp - 0x28], 0x869b
0x8049873:   c7 45 d4 04 0f 35 f8            	mov dword ptr [ebp - 0x2c], 0xf8350f04
0x804987a:   c7 45 d0 3e 98 f0 8d            	mov dword ptr [ebp - 0x30], 0x8df0983e
0x8049881:   c7 45 cc 04 00 00 00            	mov dword ptr [ebp - 0x34], 4
0x8049888:   66 c7 45 ca fe ff               	mov word ptr [ebp - 0x36], 0xfffe
0x804988e:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x8049895:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804989f:   c7 45 c0 2d 0c 4e a8            	mov dword ptr [ebp - 0x40], 0xa84e0c2d
0x80498a6:   c7 85 78 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0x88], 9
0x80498b0:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x80498ba:   c6 45 bf ff                     	mov byte ptr [ebp - 0x41], 0xff
0x80498be:   c6 85 73 ff ff ff 01            	mov byte ptr [ebp - 0x8d], 1
0x80498c5:   c7 85 6c ff ff ff cb 3c 47 e4   	mov dword ptr [ebp - 0x94], 0xe4473ccb
0x80498cf:   c7 85 68 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0x98], 7
0x80498d9:   c6 85 67 ff ff ff 07            	mov byte ptr [ebp - 0x99], 7
0x80498e0:   66 c7 85 64 ff ff ff b3 5d      	mov word ptr [ebp - 0x9c], 0x5db3
0x80498e9:   c7 85 60 ff ff ff f2 7c 88 f2   	mov dword ptr [ebp - 0xa0], 0xf2887cf2
0x80498f3:   c7 45 b8 ff ff ff ff            	mov dword ptr [ebp - 0x48], 0xffffffff
0x80498fa:   c7 45 b4 c2 4f 7e a0            	mov dword ptr [ebp - 0x4c], 0xa07e4fc2
0x8049901:   c7 85 5c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffffc
0x804990b:   c7 85 58 ff ff ff f3 2d 41 97   	mov dword ptr [ebp - 0xa8], 0x97412df3
0x8049915:   c7 85 54 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xac], 1
0x804991f:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049926:   66 c7 45 ae ff ff               	mov word ptr [ebp - 0x52], 0xffff
0x804992c:   66 c7 85 52 ff ff ff 05 00      	mov word ptr [ebp - 0xae], 5
0x8049935:   c6 85 51 ff ff ff f7            	mov byte ptr [ebp - 0xaf], 0xf7
0x804993c:   c6 85 50 ff ff ff 36            	mov byte ptr [ebp - 0xb0], 0x36
0x8049943:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x804994a:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804994d:   8d 50 01                        	lea edx, [eax + 1]
0x8049950:   89 55 b0                        	mov dword ptr [ebp - 0x50], edx
0x8049953:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x8049956:   21 d0                           	and eax, edx
0x8049958:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804995b:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804995e:   0f b7 c0                        	movzx eax, ax
0x8049961:   8b 95 60 ff ff ff               	mov edx, dword ptr [ebp - 0xa0]
0x8049967:   0f b7 da                        	movzx ebx, dx
0x804996a:   99                              	cdq 
0x804996b:   f7 fb                           	idiv ebx
0x804996d:   89 c2                           	mov edx, eax
0x804996f:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049975:   09 d0                           	or eax, edx
0x8049977:   0f be c0                        	movsx eax, al
0x804997a:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804997d:   0f be ca                        	movsx ecx, dl
0x8049980:   99                              	cdq 
0x8049981:   f7 f9                           	idiv ecx
0x8049983:   89 d0                           	mov eax, edx
0x8049985:   89 c2                           	mov edx, eax
0x8049987:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x804998b:   21 d0                           	and eax, edx
0x804998d:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049990:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049994:   75 0a                           	jne 0x80499a0 <func_1+0x198>
0x8049996:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804999a:   0f 84 f6 0c 00 00               	je 0x804a696 <func_1+0xe8e>
0x80499a0:   c7 45 a8 2d 12 a0 e6            	mov dword ptr [ebp - 0x58], 0xe6a0122d
0x80499a7:   c7 85 4c ff ff ff ac 76 a2 04   	mov dword ptr [ebp - 0xb4], 0x4a276ac
0x80499b1:   c7 85 48 ff ff ff 7f 07 20 4f   	mov dword ptr [ebp - 0xb8], 0x4f20077f
0x80499bb:   c7 85 44 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xbc], 0xfffffff7
0x80499c5:   c7 85 40 ff ff ff a1 8f 7c 76   	mov dword ptr [ebp - 0xc0], 0x767c8fa1
0x80499cf:   c7 85 3c ff ff ff 9a 37 f5 fe   	mov dword ptr [ebp - 0xc4], 0xfef5379a
0x80499d9:   c7 45 a4 fc ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffffc
0x80499e0:   c7 85 38 ff ff ff 7d 16 5b c7   	mov dword ptr [ebp - 0xc8], 0xc75b167d
0x80499ea:   c7 45 a0 fe ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffffe
0x80499f1:   c6 85 37 ff ff ff c6            	mov byte ptr [ebp - 0xc9], 0xc6
0x80499f8:   c7 45 9c 2e 5b 3c fa            	mov dword ptr [ebp - 0x64], 0xfa3c5b2e
0x80499ff:   66 c7 85 34 ff ff ff e6 e1      	mov word ptr [ebp - 0xcc], 0xe1e6
0x8049a08:   66 c7 85 32 ff ff ff 01 00      	mov word ptr [ebp - 0xce], 1
0x8049a11:   c6 85 31 ff ff ff 00            	mov byte ptr [ebp - 0xcf], 0
0x8049a18:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049a1f:   eb 2c                           	jmp 0x8049a4d <func_1+0x245>
0x8049a21:   c7 85 d0 fe ff ff 83 8d 65 f6   	mov dword ptr [ebp - 0x130], 0xf6658d83
0x8049a2b:   83 45 a8 01                     	add dword ptr [ebp - 0x58], 1
0x8049a2f:   83 6d a0 01                     	sub dword ptr [ebp - 0x60], 1
0x8049a33:   0f be 85 37 ff ff ff            	movsx eax, byte ptr [ebp - 0xc9]
0x8049a3a:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a3d:   0f 95 c0                        	setne al
0x8049a40:   0f b6 c0                        	movzx eax, al
0x8049a43:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049a49:   83 45 b8 01                     	add dword ptr [ebp - 0x48], 1
0x8049a4d:   83 7d b8 0a                     	cmp dword ptr [ebp - 0x48], 0xa
0x8049a51:   75 ce                           	jne 0x8049a21 <func_1+0x219>
0x8049a53:   c7 45 f0 83 b8 5a 3d            	mov dword ptr [ebp - 0x10], 0x3d5ab883
0x8049a5a:   b8 01 00 00 00                  	mov eax, 1
0x8049a5f:   83 f8 ff                        	cmp eax, -1
0x8049a62:   75 07                           	jne 0x8049a6b <func_1+0x263>
0x8049a64:   b8 02 00 00 00                  	mov eax, 2
0x8049a69:   eb 05                           	jmp 0x8049a70 <func_1+0x268>
0x8049a6b:   b8 00 00 00 00                  	mov eax, 0
0x8049a70:   3b 85 48 ff ff ff               	cmp eax, dword ptr [ebp - 0xb8]
0x8049a76:   74 0a                           	je 0x8049a82 <func_1+0x27a>
0x8049a78:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049a7c:   0f 84 52 0a 00 00               	je 0x804a4d4 <func_1+0xccc>
0x8049a82:   c6 85 2c ff ff ff 08            	mov byte ptr [ebp - 0xd4], 8
0x8049a89:   c7 45 98 06 00 00 00            	mov dword ptr [ebp - 0x68], 6
0x8049a90:   c7 85 28 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd8], 0xffffffff
0x8049a9a:   c6 85 27 ff ff ff e5            	mov byte ptr [ebp - 0xd9], 0xe5
0x8049aa1:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x8049aa8:   66 c7 85 24 ff ff ff e4 40      	mov word ptr [ebp - 0xdc], 0x40e4
0x8049ab1:   c7 85 20 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xe0], 5
0x8049abb:   c7 85 1c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffffb
0x8049ac5:   c7 85 18 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffff6
0x8049acf:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049ad3:   84 c0                           	test al, al
0x8049ad5:   0f 84 c1 02 00 00               	je 0x8049d9c <func_1+0x594>
0x8049adb:   c7 85 e4 fe ff ff 2b d6 c8 8d   	mov dword ptr [ebp - 0x11c], 0x8dc8d62b
0x8049ae5:   c7 85 e0 fe ff ff 6a 94 c4 3d   	mov dword ptr [ebp - 0x120], 0x3dc4946a
0x8049aef:   66 c7 85 de fe ff ff e5 f1      	mov word ptr [ebp - 0x122], 0xf1e5
0x8049af8:   0f b6 4d ef                     	movzx ecx, byte ptr [ebp - 0x11]
0x8049afc:   0f b6 d1                        	movzx edx, cl
0x8049aff:   89 d0                           	mov eax, edx
0x8049b01:   c1 e0 03                        	shl eax, 3
0x8049b04:   01 d0                           	add eax, edx
0x8049b06:   01 c0                           	add eax, eax
0x8049b08:   01 d0                           	add eax, edx
0x8049b0a:   66 c1 e8 08                     	shr ax, 8
0x8049b0e:   89 c2                           	mov edx, eax
0x8049b10:   d0 ea                           	shr dl, 1
0x8049b12:   89 d0                           	mov eax, edx
0x8049b14:   01 c0                           	add eax, eax
0x8049b16:   01 d0                           	add eax, edx
0x8049b18:   8d 14 c5 00 00 00 00            	lea edx, [eax*8]
0x8049b1f:   01 d0                           	add eax, edx
0x8049b21:   29 c1                           	sub ecx, eax
0x8049b23:   89 ca                           	mov edx, ecx
0x8049b25:   89 d0                           	mov eax, edx
0x8049b27:   83 f0 30                        	xor eax, 0x30
0x8049b2a:   0f b6 c0                        	movzx eax, al
0x8049b2d:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049b30:   c7 85 d8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x128], 0xffffffff
0x8049b3a:   c7 85 d4 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x12c], 5
0x8049b44:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049b4a:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049b4d:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049b50:   0f b7 c0                        	movzx eax, ax
0x8049b53:   c1 e0 0c                        	shl eax, 0xc
0x8049b56:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x8049b5c:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049b62:   66 c1 e8 0f                     	shr ax, 0xf
0x8049b66:   0f b7 c0                        	movzx eax, ax
0x8049b69:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x8049b6f:   0f 9c c0                        	setl al
0x8049b72:   0f b6 d0                        	movzx edx, al
0x8049b75:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b78:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049b7c:   89 d0                           	mov eax, edx
0x8049b7e:   09 85 e4 fe ff ff               	or dword ptr [ebp - 0x11c], eax
0x8049b84:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x8049b88:   39 85 e4 fe ff ff               	cmp dword ptr [ebp - 0x11c], eax
0x8049b8e:   0f 93 c0                        	setae al
0x8049b91:   0f b6 d0                        	movzx edx, al
0x8049b94:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049b98:   01 d0                           	add eax, edx
0x8049b9a:   85 c0                           	test eax, eax
0x8049b9c:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x8049ba2:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x8049ba5:   0b 95 3c ff ff ff               	or edx, dword ptr [ebp - 0xc4]
0x8049bab:   89 d3                           	mov ebx, edx
0x8049bad:   ba 00 00 00 00                  	mov edx, 0
0x8049bb2:   f7 f3                           	div ebx
0x8049bb4:   0f b6 d0                        	movzx edx, al
0x8049bb7:   0f b6 45 ef                     	movzx eax, byte ptr [ebp - 0x11]
0x8049bbb:   0f b6 c0                        	movzx eax, al
0x8049bbe:   89 c1                           	mov ecx, eax
0x8049bc0:   d3 e2                           	shl edx, cl
0x8049bc2:   89 d0                           	mov eax, edx
0x8049bc4:   39 85 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], eax
0x8049bca:   75 10                           	jne 0x8049bdc <func_1+0x3d4>
0x8049bcc:   83 bd 48 ff ff ff 00            	cmp dword ptr [ebp - 0xb8], 0
0x8049bd3:   74 07                           	je 0x8049bdc <func_1+0x3d4>
0x8049bd5:   b8 01 00 00 00                  	mov eax, 1
0x8049bda:   eb 05                           	jmp 0x8049be1 <func_1+0x3d9>
0x8049bdc:   b8 00 00 00 00                  	mov eax, 0
0x8049be1:   89 c2                           	mov edx, eax
0x8049be3:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049be6:   89 d1                           	mov ecx, edx
0x8049be8:   09 c1                           	or ecx, eax
0x8049bea:   0f b7 45 ae                     	movzx eax, word ptr [ebp - 0x52]
0x8049bee:   89 c2                           	mov edx, eax
0x8049bf0:   0f b6 c1                        	movzx eax, cl
0x8049bf3:   f6 f2                           	div dl
0x8049bf5:   0f b6 d0                        	movzx edx, al
0x8049bf8:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049bfc:   01 d0                           	add eax, edx
0x8049bfe:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049c01:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x8049c05:   90                              	nop 
0x8049c06:   0f b7 85 de fe ff ff            	movzx eax, word ptr [ebp - 0x122]
0x8049c0d:   83 e8 01                        	sub eax, 1
0x8049c10:   66 89 85 de fe ff ff            	mov word ptr [ebp - 0x122], ax
0x8049c17:   c7 45 9c 14 00 00 00            	mov dword ptr [ebp - 0x64], 0x14
0x8049c1e:   eb 70                           	jmp 0x8049c90 <func_1+0x488>
0x8049c20:   c7 85 d4 fe ff ff 69 eb 52 87   	mov dword ptr [ebp - 0x12c], 0x8752eb69
0x8049c2a:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x8049c30:   89 c2                           	mov edx, eax
0x8049c32:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x8049c36:   09 d0                           	or eax, edx
0x8049c38:   88 45 e6                        	mov byte ptr [ebp - 0x1a], al
0x8049c3b:   66 0f be 45 e6                  	movsx ax, byte ptr [ebp - 0x1a]
0x8049c40:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049c44:   75 0f                           	jne 0x8049c55 <func_1+0x44d>
0x8049c46:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049c4a:   74 10                           	je 0x8049c5c <func_1+0x454>
0x8049c4c:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x8049c53:   74 07                           	je 0x8049c5c <func_1+0x454>
0x8049c55:   ba 01 00 00 00                  	mov edx, 1
0x8049c5a:   eb 05                           	jmp 0x8049c61 <func_1+0x459>
0x8049c5c:   ba 00 00 00 00                  	mov edx, 0
0x8049c61:   66 c1 fa 02                     	sar dx, 2
0x8049c65:   66 39 d0                        	cmp ax, dx
0x8049c68:   0f 9c c0                        	setl al
0x8049c6b:   0f b6 c0                        	movzx eax, al
0x8049c6e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049c71:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049c78:   83 bd d4 fe ff ff 00            	cmp dword ptr [ebp - 0x12c], 0
0x8049c7f:   75 17                           	jne 0x8049c98 <func_1+0x490>
0x8049c81:   83 bd d4 fe ff ff 00            	cmp dword ptr [ebp - 0x12c], 0
0x8049c88:   74 02                           	je 0x8049c8c <func_1+0x484>
0x8049c8a:   eb 8b                           	jmp 0x8049c17 <func_1+0x40f>
0x8049c8c:   83 45 9c 09                     	add dword ptr [ebp - 0x64], 9
0x8049c90:   83 7d 9c 38                     	cmp dword ptr [ebp - 0x64], 0x38
0x8049c94:   76 8a                           	jbe 0x8049c20 <func_1+0x418>
0x8049c96:   eb 01                           	jmp 0x8049c99 <func_1+0x491>
0x8049c98:   90                              	nop 
0x8049c99:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049c9f:   0b 85 e4 fe ff ff               	or eax, dword ptr [ebp - 0x11c]
0x8049ca5:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x8049cab:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x8049cb2:   0f be 95 73 ff ff ff            	movsx edx, byte ptr [ebp - 0x8d]
0x8049cb9:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x8049cbd:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x8049cc1:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x8049cc5:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049ccb:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x8049ccf:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049cd5:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x8049cd9:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x8049cdf:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x8049ce3:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x8049ce9:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x8049ced:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x8049cf3:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x8049cf7:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x8049cfd:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x8049d01:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049d07:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x8049d0b:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x8049d11:   0f bf 7d ec                     	movsx edi, word ptr [ebp - 0x14]
0x8049d15:   0f be 75 ef                     	movsx esi, byte ptr [ebp - 0x11]
0x8049d19:   50                              	push eax
0x8049d1a:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049d20:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049d26:   52                              	push edx
0x8049d27:   51                              	push ecx
0x8049d28:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049d2e:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049d34:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049d37:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049d3d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049d40:   53                              	push ebx
0x8049d41:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049d44:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d47:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049d4a:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049d50:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049d56:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d59:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049d5f:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049d65:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049d68:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049d6b:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049d71:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049d77:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049d7d:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049d83:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d86:   57                              	push edi
0x8049d87:   56                              	push esi
0x8049d88:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049d8b:   e8 96 f8 ff ff                  	call 0x8049626 <set_var>
0x8049d90:   83 c4 74                        	add esp, 0x74
0x8049d93:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049d97:   e9 06 0a 00 00                  	jmp 0x804a7a2 <func_1+0xf9a>
0x8049d9c:   66 83 6d e2 01                  	sub word ptr [ebp - 0x1e], 1
0x8049da1:   83 6d dc 01                     	sub dword ptr [ebp - 0x24], 1
0x8049da5:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x8049da9:   89 85 54 ff ff ff               	mov dword ptr [ebp - 0xac], eax
0x8049daf:   c7 45 f0 17 af d0 b3            	mov dword ptr [ebp - 0x10], 0xb3d0af17
0x8049db6:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049db9:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049dbf:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x8049dc3:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049dc9:   0f b7 d0                        	movzx edx, ax
0x8049dcc:   66 0f be 45 e4                  	movsx ax, byte ptr [ebp - 0x1c]
0x8049dd1:   0f b7 c0                        	movzx eax, ax
0x8049dd4:   89 c1                           	mov ecx, eax
0x8049dd6:   d3 e2                           	shl edx, cl
0x8049dd8:   89 d0                           	mov eax, edx
0x8049dda:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049ddd:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049de1:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x8049de4:   0f be da                        	movsx ebx, dl
0x8049de7:   99                              	cdq 
0x8049de8:   f7 fb                           	idiv ebx
0x8049dea:   89 c2                           	mov edx, eax
0x8049dec:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049df0:   21 d0                           	and eax, edx
0x8049df2:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049df5:   66 c7 45 da 01 00               	mov word ptr [ebp - 0x26], 1
0x8049dfb:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049dff:   0f 84 de 02 00 00               	je 0x804a0e3 <func_1+0x8db>
0x8049e05:   c7 85 f4 fe ff ff 2d c7 e0 10   	mov dword ptr [ebp - 0x10c], 0x10e0c72d
0x8049e0f:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x8049e16:   0f 84 b7 00 00 00               	je 0x8049ed3 <func_1+0x6cb>
0x8049e1c:   c6 85 eb fe ff ff 00            	mov byte ptr [ebp - 0x115], 0
0x8049e23:   f7 55 98                        	not dword ptr [ebp - 0x68]
0x8049e26:   c7 45 e8 ec ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffec
0x8049e2d:   e9 92 00 00 00                  	jmp 0x8049ec4 <func_1+0x6bc>
0x8049e32:   0f be 5d e6                     	movsx ebx, byte ptr [ebp - 0x1a]
0x8049e36:   b8 01 00 00 00                  	mov eax, 1
0x8049e3b:   99                              	cdq 
0x8049e3c:   f7 fb                           	idiv ebx
0x8049e3e:   83 f8 7e                        	cmp eax, 0x7e
0x8049e41:   0f 9e c0                        	setle al
0x8049e44:   0f b6 c0                        	movzx eax, al
0x8049e47:   8b 8d 38 ff ff ff               	mov ecx, dword ptr [ebp - 0xc8]
0x8049e4d:   ba 00 00 00 00                  	mov edx, 0
0x8049e52:   f7 f1                           	div ecx
0x8049e54:   89 d0                           	mov eax, edx
0x8049e56:   83 f8 6c                        	cmp eax, 0x6c
0x8049e59:   0f 95 c0                        	setne al
0x8049e5c:   0f b6 d0                        	movzx edx, al
0x8049e5f:   0f b6 85 eb fe ff ff            	movzx eax, byte ptr [ebp - 0x115]
0x8049e66:   39 c2                           	cmp edx, eax
0x8049e68:   0f 9f c0                        	setg al
0x8049e6b:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049e6e:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x8049e72:   74 07                           	je 0x8049e7b <func_1+0x673>
0x8049e74:   b8 01 00 00 00                  	mov eax, 1
0x8049e79:   eb 05                           	jmp 0x8049e80 <func_1+0x678>
0x8049e7b:   b8 00 00 00 00                  	mov eax, 0
0x8049e80:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e83:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049e86:   8d 50 ff                        	lea edx, [eax - 1]
0x8049e89:   89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x8049e8c:   85 c0                           	test eax, eax
0x8049e8e:   74 04                           	je 0x8049e94 <func_1+0x68c>
0x8049e90:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049e94:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049e9a:   0f b7 d0                        	movzx edx, ax
0x8049e9d:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049ea1:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x8049ea7:   0f 9d c0                        	setge al
0x8049eaa:   0f b6 c0                        	movzx eax, al
0x8049ead:   0f af c2                        	imul eax, edx
0x8049eb0:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049eb3:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049eb6:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049eb9:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049ebd:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049ec0:   83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x8049ec4:   83 7d e8 e5                     	cmp dword ptr [ebp - 0x18], -0x1b
0x8049ec8:   0f 8c 64 ff ff ff               	jl 0x8049e32 <func_1+0x62a>
0x8049ece:   e9 9c 01 00 00                  	jmp 0x804a06f <func_1+0x867>
0x8049ed3:   66 c7 85 f2 fe ff ff fc ff      	mov word ptr [ebp - 0x10e], 0xfffc
0x8049edc:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049ee3:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049ee6:   66 83 7d d8 00                  	cmp word ptr [ebp - 0x28], 0
0x8049eeb:   0f 84 ab 00 00 00               	je 0x8049f9c <func_1+0x794>
0x8049ef1:   c7 85 ec fe ff ff fa 17 a8 90   	mov dword ptr [ebp - 0x114], 0x90a817fa
0x8049efb:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049f02:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049f05:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049f09:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x8049f0d:   0f be da                        	movsx ebx, dl
0x8049f10:   99                              	cdq 
0x8049f11:   f7 fb                           	idiv ebx
0x8049f13:   66 0f be d0                     	movsx dx, al
0x8049f17:   89 d0                           	mov eax, edx
0x8049f19:   c1 e0 02                        	shl eax, 2
0x8049f1c:   01 d0                           	add eax, edx
0x8049f1e:   c1 e0 04                        	shl eax, 4
0x8049f21:   29 d0                           	sub eax, edx
0x8049f23:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049f27:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049f2a:   0f 95 c0                        	setne al
0x8049f2d:   0f b6 d0                        	movzx edx, al
0x8049f30:   0f bf 85 64 ff ff ff            	movsx eax, word ptr [ebp - 0x9c]
0x8049f37:   39 c2                           	cmp edx, eax
0x8049f39:   0f 9f c0                        	setg al
0x8049f3c:   0f b6 c0                        	movzx eax, al
0x8049f3f:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x8049f45:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x8049f49:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f4c:   83 bd ec fe ff ff 00            	cmp dword ptr [ebp - 0x114], 0
0x8049f53:   75 2b                           	jne 0x8049f80 <func_1+0x778>
0x8049f55:   0f be 55 ef                     	movsx edx, byte ptr [ebp - 0x11]
0x8049f59:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049f5c:   0f be c0                        	movsx eax, al
0x8049f5f:   0f af d0                        	imul edx, eax
0x8049f62:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049f66:   39 c2                           	cmp edx, eax
0x8049f68:   0f 94 c0                        	sete al
0x8049f6b:   0f b6 c0                        	movzx eax, al
0x8049f6e:   66 09 45 ec                     	or word ptr [ebp - 0x14], ax
0x8049f72:   66 83 7d d8 00                  	cmp word ptr [ebp - 0x28], 0
0x8049f77:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049f7e:   7f 07                           	jg 0x8049f87 <func_1+0x77f>
0x8049f80:   b8 01 00 00 00                  	mov eax, 1
0x8049f85:   eb 05                           	jmp 0x8049f8c <func_1+0x784>
0x8049f87:   b8 00 00 00 00                  	mov eax, 0
0x8049f8c:   66 21 85 24 ff ff ff            	and word ptr [ebp - 0xdc], ax
0x8049f93:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x8049f97:   e9 d3 00 00 00                  	jmp 0x804a06f <func_1+0x867>
0x8049f9c:   66 c7 85 f0 fe ff ff 00 00      	mov word ptr [ebp - 0x110], 0
0x8049fa5:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049fac:   83 c8 01                        	or eax, 1
0x8049faf:   0f b7 c0                        	movzx eax, ax
0x8049fb2:   83 c8 f9                        	or eax, 0xfffffff9
0x8049fb5:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049fb8:   0f bf 95 f0 fe ff ff            	movsx edx, word ptr [ebp - 0x110]
0x8049fbf:   66 c7 45 ca fc 00               	mov word ptr [ebp - 0x36], 0xfc
0x8049fc5:   66 83 bd 64 ff ff ff 00         	cmp word ptr [ebp - 0x9c], 0
0x8049fcd:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049fd3:   89 c3                           	mov ebx, eax
0x8049fd5:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049fdb:   89 c1                           	mov ecx, eax
0x8049fdd:   89 d8                           	mov eax, ebx
0x8049fdf:   0f af c1                        	imul eax, ecx
0x8049fe2:   0f b6 c0                        	movzx eax, al
0x8049fe5:   c1 f8 02                        	sar eax, 2
0x8049fe8:   89 c1                           	mov ecx, eax
0x8049fea:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049fee:   29 c1                           	sub ecx, eax
0x8049ff0:   89 c8                           	mov eax, ecx
0x8049ff2:   0f b6 c8                        	movzx ecx, al
0x8049ff5:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x8049ffc:   0f b6 c0                        	movzx eax, al
0x8049fff:   29 c1                           	sub ecx, eax
0x804a001:   89 c8                           	mov eax, ecx
0x804a003:   66 c1 f8 06                     	sar ax, 6
0x804a007:   98                              	cwde 
0x804a008:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a00e:   0f 95 c0                        	setne al
0x804a011:   89 c1                           	mov ecx, eax
0x804a013:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a016:   21 c8                           	and eax, ecx
0x804a018:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804a01b:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x804a01f:   74 0d                           	je 0x804a02e <func_1+0x826>
0x804a021:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a025:   74 07                           	je 0x804a02e <func_1+0x826>
0x804a027:   b8 01 00 00 00                  	mov eax, 1
0x804a02c:   eb 05                           	jmp 0x804a033 <func_1+0x82b>
0x804a02e:   b8 00 00 00 00                  	mov eax, 0
0x804a033:   85 c0                           	test eax, eax
0x804a035:   0f 95 c0                        	setne al
0x804a038:   0f b6 c0                        	movzx eax, al
0x804a03b:   39 c2                           	cmp edx, eax
0x804a03d:   0f 9f c0                        	setg al
0x804a040:   0f b6 c0                        	movzx eax, al
0x804a043:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a046:   7f 12                           	jg 0x804a05a <func_1+0x852>
0x804a048:   b8 f4 93 01 0f                  	mov eax, 0xf0193f4
0x804a04d:   bb 00 00 00 00                  	mov ebx, 0
0x804a052:   99                              	cdq 
0x804a053:   f7 fb                           	idiv ebx
0x804a055:   0f b7 c0                        	movzx eax, ax
0x804a058:   eb 05                           	jmp 0x804a05f <func_1+0x857>
0x804a05a:   b8 f4 93 00 00                  	mov eax, 0x93f4
0x804a05f:   66 0f be 55 ef                  	movsx dx, byte ptr [ebp - 0x11]
0x804a064:   0f b7 d2                        	movzx edx, dx
0x804a067:   29 d0                           	sub eax, edx
0x804a069:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a06f:   c7 45 f0 08 00 00 00            	mov dword ptr [ebp - 0x10], 8
0x804a076:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x804a07d:   66 c7 45 ec 04 00               	mov word ptr [ebp - 0x14], 4
0x804a083:   eb 52                           	jmp 0x804a0d7 <func_1+0x8cf>
0x804a085:   c6 85 ea fe ff ff fc            	mov byte ptr [ebp - 0x116], 0xfc
0x804a08c:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a092:   c0 f8 02                        	sar al, 2
0x804a095:   84 c0                           	test al, al
0x804a097:   75 17                           	jne 0x804a0b0 <func_1+0x8a8>
0x804a099:   0f b6 85 2c ff ff ff            	movzx eax, byte ptr [ebp - 0xd4]
0x804a0a0:   0f be c0                        	movsx eax, al
0x804a0a3:   6b c0 bf                        	imul eax, eax, -0x41
0x804a0a6:   85 c0                           	test eax, eax
0x804a0a8:   74 0d                           	je 0x804a0b7 <func_1+0x8af>
0x804a0aa:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a0ae:   74 07                           	je 0x804a0b7 <func_1+0x8af>
0x804a0b0:   b8 01 00 00 00                  	mov eax, 1
0x804a0b5:   eb 05                           	jmp 0x804a0bc <func_1+0x8b4>
0x804a0b7:   b8 00 00 00 00                  	mov eax, 0
0x804a0bc:   98                              	cwde 
0x804a0bd:   ba b6 f4 ff ff                  	mov edx, 0xfffff4b6
0x804a0c2:   29 c2                           	sub edx, eax
0x804a0c4:   89 d0                           	mov eax, edx
0x804a0c6:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x804a0cc:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804a0d0:   83 e8 07                        	sub eax, 7
0x804a0d3:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x804a0d7:   66 83 7d ec eb                  	cmp word ptr [ebp - 0x14], -0x15
0x804a0dc:   7d a7                           	jge 0x804a085 <func_1+0x87d>
0x804a0de:   e9 8e 05 00 00                  	jmp 0x804a671 <func_1+0xe69>
0x804a0e3:   c6 85 17 ff ff ff 46            	mov byte ptr [ebp - 0xe9], 0x46
0x804a0ea:   c7 85 10 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xf0], 2
0x804a0f4:   c7 85 0c ff ff ff ef 5e 32 e0   	mov dword ptr [ebp - 0xf4], 0xe0325eef
0x804a0fe:   0f b6 85 2c ff ff ff            	movzx eax, byte ptr [ebp - 0xd4]
0x804a105:   0b 85 58 ff ff ff               	or eax, dword ptr [ebp - 0xa8]
0x804a10b:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x804a10e:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a112:   0f 84 f1 00 00 00               	je 0x804a209 <func_1+0xa01>
0x804a118:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804a11f:   0f be 95 73 ff ff ff            	movsx edx, byte ptr [ebp - 0x8d]
0x804a126:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a12a:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a12e:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x804a132:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a138:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a13c:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a142:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x804a146:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a14c:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x804a150:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x804a156:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a15a:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a160:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a164:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a16a:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x804a16e:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a174:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x804a178:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a17e:   0f bf 7d ec                     	movsx edi, word ptr [ebp - 0x14]
0x804a182:   0f be 75 ef                     	movsx esi, byte ptr [ebp - 0x11]
0x804a186:   50                              	push eax
0x804a187:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a18d:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a193:   52                              	push edx
0x804a194:   51                              	push ecx
0x804a195:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a19b:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a1a1:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a1a4:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a1aa:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a1ad:   53                              	push ebx
0x804a1ae:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a1b1:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a1b4:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a1b7:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a1bd:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a1c3:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a1c6:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a1cc:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a1d2:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a1d5:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a1d8:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a1de:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a1e4:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a1ea:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a1f0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a1f3:   57                              	push edi
0x804a1f4:   56                              	push esi
0x804a1f5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a1f8:   e8 29 f4 ff ff                  	call 0x8049626 <set_var>
0x804a1fd:   83 c4 74                        	add esp, 0x74
0x804a200:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x804a204:   e9 99 05 00 00                  	jmp 0x804a7a2 <func_1+0xf9a>
0x804a209:   66 c7 85 0a ff ff ff 01 00      	mov word ptr [ebp - 0xf6], 1
0x804a212:   c7 85 04 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xfc], 0xffffffff
0x804a21c:   c7 45 98 02 00 00 00            	mov dword ptr [ebp - 0x68], 2
0x804a223:   eb 14                           	jmp 0x804a239 <func_1+0xa31>
0x804a225:   66 83 7d ec 00                  	cmp word ptr [ebp - 0x14], 0
0x804a22a:   74 05                           	je 0x804a231 <func_1+0xa29>
0x804a22c:   e9 70 fb ff ff                  	jmp 0x8049da1 <func_1+0x599>
0x804a231:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x804a235:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x804a239:   83 7d 98 04                     	cmp dword ptr [ebp - 0x68], 4
0x804a23d:   7f e6                           	jg 0x804a225 <func_1+0xa1d>
0x804a23f:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x804a246:   83 e8 01                        	sub eax, 1
0x804a249:   88 85 17 ff ff ff               	mov byte ptr [ebp - 0xe9], al
0x804a24f:   0f b7 85 0a ff ff ff            	movzx eax, word ptr [ebp - 0xf6]
0x804a256:   83 c0 01                        	add eax, 1
0x804a259:   66 89 85 0a ff ff ff            	mov word ptr [ebp - 0xf6], ax
0x804a260:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a267:   0f 84 e0 00 00 00               	je 0x804a34d <func_1+0xb45>
0x804a26d:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a271:   39 85 44 ff ff ff               	cmp dword ptr [ebp - 0xbc], eax
0x804a277:   0f 9d c0                        	setge al
0x804a27a:   0f b6 c0                        	movzx eax, al
0x804a27d:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a283:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x804a287:   83 7d d0 04                     	cmp dword ptr [ebp - 0x30], 4
0x804a28b:   0f 87 bc 00 00 00               	ja 0x804a34d <func_1+0xb45>
0x804a291:   66 c7 85 02 ff ff ff 49 de      	mov word ptr [ebp - 0xfe], 0xde49
0x804a29a:   66 83 bd 02 ff ff ff 00         	cmp word ptr [ebp - 0xfe], 0
0x804a2a2:   74 3d                           	je 0x804a2e1 <func_1+0xad9>
0x804a2a4:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x804a2a8:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a2ac:   0f b6 c0                        	movzx eax, al
0x804a2af:   f6 f2                           	div dl
0x804a2b1:   0f b6 c4                        	movzx eax, ah
0x804a2b4:   89 c2                           	mov edx, eax
0x804a2b6:   0f b7 45 8a                     	movzx eax, word ptr [ebp - 0x76]
0x804a2ba:   21 d0                           	and eax, edx
0x804a2bc:   83 c8 33                        	or eax, 0x33
0x804a2bf:   88 45 e6                        	mov byte ptr [ebp - 0x1a], al
0x804a2c2:   0f be 55 e6                     	movsx edx, byte ptr [ebp - 0x1a]
0x804a2c6:   0f b7 85 0a ff ff ff            	movzx eax, word ptr [ebp - 0xf6]
0x804a2cd:   39 c2                           	cmp edx, eax
0x804a2cf:   0f 9e c0                        	setle al
0x804a2d2:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804a2d5:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804a2dc:   83 e0 01                        	and eax, 1
0x804a2df:   85 c0                           	test eax, eax
0x804a2e1:   0f b6 85 2c ff ff ff            	movzx eax, byte ptr [ebp - 0xd4]
0x804a2e8:   33 45 80                        	xor eax, dword ptr [ebp - 0x80]
0x804a2eb:   89 c2                           	mov edx, eax
0x804a2ed:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804a2f4:   39 c2                           	cmp edx, eax
0x804a2f6:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x804a2fd:   0f be c0                        	movsx eax, al
0x804a300:   ba 01 00 00 00                  	mov edx, 1
0x804a305:   89 c1                           	mov ecx, eax
0x804a307:   d3 e2                           	shl edx, cl
0x804a309:   89 d0                           	mov eax, edx
0x804a30b:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a30e:   77 0a                           	ja 0x804a31a <func_1+0xb12>
0x804a310:   66 83 bd 02 ff ff ff 00         	cmp word ptr [ebp - 0xfe], 0
0x804a318:   74 07                           	je 0x804a321 <func_1+0xb19>
0x804a31a:   b8 01 00 00 00                  	mov eax, 1
0x804a31f:   eb 05                           	jmp 0x804a326 <func_1+0xb1e>
0x804a321:   b8 00 00 00 00                  	mov eax, 0
0x804a326:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a32c:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a330:   0f 95 c0                        	setne al
0x804a333:   0f b6 d0                        	movzx edx, al
0x804a336:   80 7d e4 ff                     	cmp byte ptr [ebp - 0x1c], 0xff
0x804a33a:   0f 95 c0                        	setne al
0x804a33d:   0f b6 c0                        	movzx eax, al
0x804a340:   39 c2                           	cmp edx, eax
0x804a342:   0f 9f c0                        	setg al
0x804a345:   0f b6 c0                        	movzx eax, al
0x804a348:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a34b:   eb 18                           	jmp 0x804a365 <func_1+0xb5d>
0x804a34d:   c7 85 fc fe ff ff a3 c7 54 67   	mov dword ptr [ebp - 0x104], 0x6754c7a3
0x804a357:   83 ad fc fe ff ff 01            	sub dword ptr [ebp - 0x104], 1
0x804a35e:   83 ad 1c ff ff ff 01            	sub dword ptr [ebp - 0xe4], 1
0x804a365:   81 4d 94 fe 7f 00 00            	or dword ptr [ebp - 0x6c], 0x7ffe
0x804a36c:   0f be 55 e4                     	movsx edx, byte ptr [ebp - 0x1c]
0x804a370:   b8 54 00 00 00                  	mov eax, 0x54
0x804a375:   2a 85 50 ff ff ff               	sub al, byte ptr [ebp - 0xb0]
0x804a37b:   0f be c0                        	movsx eax, al
0x804a37e:   0f af c2                        	imul eax, edx
0x804a381:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a387:   0f 9f c0                        	setg al
0x804a38a:   0f b6 d0                        	movzx edx, al
0x804a38d:   0f be 45 ef                     	movsx eax, byte ptr [ebp - 0x11]
0x804a391:   09 c2                           	or edx, eax
0x804a393:   0f be 45 e4                     	movsx eax, byte ptr [ebp - 0x1c]
0x804a397:   21 d0                           	and eax, edx
0x804a399:   23 85 40 ff ff ff               	and eax, dword ptr [ebp - 0xc0]
0x804a39f:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a3a2:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a3a5:   09 85 10 ff ff ff               	or dword ptr [ebp - 0xf0], eax
0x804a3ab:   66 83 7d d8 fa                  	cmp word ptr [ebp - 0x28], -6
0x804a3b0:   0f 84 f0 00 00 00               	je 0x804a4a6 <func_1+0xc9e>
0x804a3b6:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804a3bd:   0f be 95 73 ff ff ff            	movsx edx, byte ptr [ebp - 0x8d]
0x804a3c4:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a3c8:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a3cc:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x804a3d0:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a3d6:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a3da:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a3e0:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x804a3e4:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a3ea:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x804a3ee:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x804a3f4:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a3f8:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a3fe:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a402:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a408:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x804a40c:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a412:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x804a416:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a41c:   0f bf 7d ec                     	movsx edi, word ptr [ebp - 0x14]
0x804a420:   0f be 75 ef                     	movsx esi, byte ptr [ebp - 0x11]
0x804a424:   50                              	push eax
0x804a425:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a42b:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a431:   52                              	push edx
0x804a432:   51                              	push ecx
0x804a433:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a439:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a43f:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a442:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a448:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a44b:   53                              	push ebx
0x804a44c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a44f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a452:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a455:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a45b:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a461:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a464:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a46a:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a470:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a473:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a476:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a47c:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a482:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a488:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a48e:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a491:   57                              	push edi
0x804a492:   56                              	push esi
0x804a493:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a496:   e8 8b f1 ff ff                  	call 0x8049626 <set_var>
0x804a49b:   83 c4 74                        	add esp, 0x74
0x804a49e:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a4a1:   e9 fc 02 00 00                  	jmp 0x804a7a2 <func_1+0xf9a>
0x804a4a6:   c7 85 f8 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffffd
0x804a4b0:   66 c7 45 ae f2 ff               	mov word ptr [ebp - 0x52], 0xfff2
0x804a4b6:   eb 09                           	jmp 0x804a4c1 <func_1+0xcb9>
0x804a4b8:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x804a4bc:   66 83 45 ae 01                  	add word ptr [ebp - 0x52], 1
0x804a4c1:   66 83 7d ae 1f                  	cmp word ptr [ebp - 0x52], 0x1f
0x804a4c6:   76 f0                           	jbe 0x804a4b8 <func_1+0xcb0>
0x804a4c8:   83 85 18 ff ff ff 01            	add dword ptr [ebp - 0xe8], 1
0x804a4cf:   e9 9d 01 00 00                  	jmp 0x804a671 <func_1+0xe69>
0x804a4d4:   c6 85 30 ff ff ff ff            	mov byte ptr [ebp - 0xd0], 0xff
0x804a4db:   66 c7 85 2e ff ff ff 02 00      	mov word ptr [ebp - 0xd2], 2
0x804a4e4:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a4eb:   0f b6 85 30 ff ff ff            	movzx eax, byte ptr [ebp - 0xd0]
0x804a4f2:   83 e8 01                        	sub eax, 1
0x804a4f5:   88 85 30 ff ff ff               	mov byte ptr [ebp - 0xd0], al
0x804a4fb:   66 c7 45 d8 00 00               	mov word ptr [ebp - 0x28], 0
0x804a501:   e9 1e 01 00 00                  	jmp 0x804a624 <func_1+0xe1c>
0x804a506:   c7 45 8c be 73 75 21            	mov dword ptr [ebp - 0x74], 0x217573be
0x804a50d:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a514:   e9 f6 00 00 00                  	jmp 0x804a60f <func_1+0xe07>
0x804a519:   c6 85 2d ff ff ff ff            	mov byte ptr [ebp - 0xd3], 0xff
0x804a520:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x804a524:   0f 84 85 00 00 00               	je 0x804a5af <func_1+0xda7>
0x804a52a:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x804a52e:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x804a531:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a537:   66 0f be d0                     	movsx dx, al
0x804a53b:   0f b7 85 2e ff ff ff            	movzx eax, word ptr [ebp - 0xd2]
0x804a542:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a545:   0f 9d c0                        	setge al
0x804a548:   0f b6 c0                        	movzx eax, al
0x804a54b:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a54e:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a551:   66 98                           	cbw 
0x804a553:   0f af c2                        	imul eax, edx
0x804a556:   0f b7 c0                        	movzx eax, ax
0x804a559:   ba 28 5a 00 00                  	mov edx, 0x5a28
0x804a55e:   89 c1                           	mov ecx, eax
0x804a560:   d3 fa                           	sar edx, cl
0x804a562:   89 d0                           	mov eax, edx
0x804a564:   85 c0                           	test eax, eax
0x804a566:   75 09                           	jne 0x804a571 <func_1+0xd69>
0x804a568:   80 bd 37 ff ff ff 00            	cmp byte ptr [ebp - 0xc9], 0
0x804a56f:   74 07                           	je 0x804a578 <func_1+0xd70>
0x804a571:   b8 01 00 00 00                  	mov eax, 1
0x804a576:   eb 05                           	jmp 0x804a57d <func_1+0xd75>
0x804a578:   b8 00 00 00 00                  	mov eax, 0
0x804a57d:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a580:   0f 97 c0                        	seta al
0x804a583:   0f b6 d0                        	movzx edx, al
0x804a586:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a589:   98                              	cwde 
0x804a58a:   01 d0                           	add eax, edx
0x804a58c:   83 f8 ff                        	cmp eax, -1
0x804a58f:   0f 95 c0                        	setne al
0x804a592:   0f b6 c0                        	movzx eax, al
0x804a595:   89 c2                           	mov edx, eax
0x804a597:   0f be 45 e4                     	movsx eax, byte ptr [ebp - 0x1c]
0x804a59b:   21 d0                           	and eax, edx
0x804a59d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a5a0:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a5a4:   75 64                           	jne 0x804a60a <func_1+0xe02>
0x804a5a6:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x804a5ab:   74 5e                           	je 0x804a60b <func_1+0xe03>
0x804a5ad:   eb 6a                           	jmp 0x804a619 <func_1+0xe11>
0x804a5af:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a5b3:   74 05                           	je 0x804a5ba <func_1+0xdb2>
0x804a5b5:   e9 89 f3 ff ff                  	jmp 0x8049943 <func_1+0x13b>
0x804a5ba:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a5be:   75 18                           	jne 0x804a5d8 <func_1+0xdd0>
0x804a5c0:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a5c3:   0f b6 c0                        	movzx eax, al
0x804a5c6:   f7 d0                           	not eax
0x804a5c8:   89 c2                           	mov edx, eax
0x804a5ca:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a5ce:   09 c2                           	or edx, eax
0x804a5d0:   0f be 45 e4                     	movsx eax, byte ptr [ebp - 0x1c]
0x804a5d4:   39 c2                           	cmp edx, eax
0x804a5d6:   74 10                           	je 0x804a5e8 <func_1+0xde0>
0x804a5d8:   80 bd 31 ff ff ff 00            	cmp byte ptr [ebp - 0xcf], 0
0x804a5df:   74 07                           	je 0x804a5e8 <func_1+0xde0>
0x804a5e1:   b8 01 00 00 00                  	mov eax, 1
0x804a5e6:   eb 05                           	jmp 0x804a5ed <func_1+0xde5>
0x804a5e8:   b8 00 00 00 00                  	mov eax, 0
0x804a5ed:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a5f0:   0f be 45 e4                     	movsx eax, byte ptr [ebp - 0x1c]
0x804a5f4:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a5f7:   0f 9e c0                        	setle al
0x804a5fa:   0f b6 c0                        	movzx eax, al
0x804a5fd:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a600:   b8 2a 00 00 00                  	mov eax, 0x2a
0x804a605:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x804a608:   eb 01                           	jmp 0x804a60b <func_1+0xe03>
0x804a60a:   90                              	nop 
0x804a60b:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a60f:   83 7d d4 17                     	cmp dword ptr [ebp - 0x2c], 0x17
0x804a613:   0f 86 00 ff ff ff               	jbe 0x804a519 <func_1+0xd11>
0x804a619:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a61d:   83 c0 01                        	add eax, 1
0x804a620:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x804a624:   66 83 7d d8 15                  	cmp word ptr [ebp - 0x28], 0x15
0x804a629:   0f 8e d7 fe ff ff               	jle 0x804a506 <func_1+0xcfe>
0x804a62f:   83 65 b4 70                     	and dword ptr [ebp - 0x4c], 0x70
0x804a633:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a636:   88 45 ef                        	mov byte ptr [ebp - 0x11], al
0x804a639:   0f be 55 ef                     	movsx edx, byte ptr [ebp - 0x11]
0x804a63d:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a641:   0f be d8                        	movsx ebx, al
0x804a644:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a648:   83 c8 98                        	or eax, 0xffffff98
0x804a64b:   0f be c0                        	movsx eax, al
0x804a64e:   89 c1                           	mov ecx, eax
0x804a650:   d3 e3                           	shl ebx, cl
0x804a652:   89 d8                           	mov eax, ebx
0x804a654:   30 45 e5                        	xor byte ptr [ebp - 0x1b], al
0x804a657:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x804a65b:   89 c1                           	mov ecx, eax
0x804a65d:   d3 e2                           	shl edx, cl
0x804a65f:   89 d0                           	mov eax, edx
0x804a661:   3d c8 e0 00 00                  	cmp eax, 0xe0c8
0x804a666:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x804a669:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a66c:   09 d0                           	or eax, edx
0x804a66e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a671:   80 45 bf 01                     	add byte ptr [ebp - 0x41], 1
0x804a675:   c7 45 b4 09 00 00 00            	mov dword ptr [ebp - 0x4c], 9
0x804a67c:   eb 10                           	jmp 0x804a68e <func_1+0xe86>
0x804a67e:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a684:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a68a:   83 6d b4 01                     	sub dword ptr [ebp - 0x4c], 1
0x804a68e:   83 7d b4 fc                     	cmp dword ptr [ebp - 0x4c], -4
0x804a692:   7d ea                           	jge 0x804a67e <func_1+0xe76>
0x804a694:   eb 16                           	jmp 0x804a6ac <func_1+0xea4>
0x804a696:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a69c:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a69f:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a6a2:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a6a5:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a6ac:   80 85 67 ff ff ff 01            	add byte ptr [ebp - 0x99], 1
0x804a6b3:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804a6ba:   0f be 95 73 ff ff ff            	movsx edx, byte ptr [ebp - 0x8d]
0x804a6c1:   0f b6 4d bf                     	movzx ecx, byte ptr [ebp - 0x41]
0x804a6c5:   0f b7 5d ca                     	movzx ebx, word ptr [ebp - 0x36]
0x804a6c9:   0f bf 75 d8                     	movsx esi, word ptr [ebp - 0x28]
0x804a6cd:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a6d3:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a6d7:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a6dd:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x804a6e1:   89 b5 b8 fe ff ff               	mov dword ptr [ebp - 0x148], esi
0x804a6e7:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x804a6eb:   89 bd b4 fe ff ff               	mov dword ptr [ebp - 0x14c], edi
0x804a6f1:   0f be 75 e5                     	movsx esi, byte ptr [ebp - 0x1b]
0x804a6f5:   89 b5 b0 fe ff ff               	mov dword ptr [ebp - 0x150], esi
0x804a6fb:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x804a6ff:   89 bd ac fe ff ff               	mov dword ptr [ebp - 0x154], edi
0x804a705:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x804a709:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a70f:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x804a713:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a719:   0f bf 7d ec                     	movsx edi, word ptr [ebp - 0x14]
0x804a71d:   0f be 75 ef                     	movsx esi, byte ptr [ebp - 0x11]
0x804a721:   50                              	push eax
0x804a722:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a728:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a72e:   52                              	push edx
0x804a72f:   51                              	push ecx
0x804a730:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a736:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a73c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a73f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a745:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a748:   53                              	push ebx
0x804a749:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a74c:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a74f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a752:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a758:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a75e:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a761:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a767:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a76d:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a770:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a773:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a779:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a77f:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a785:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a78b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a78e:   57                              	push edi
0x804a78f:   56                              	push esi
0x804a790:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a793:   e8 8e ee ff ff                  	call 0x8049626 <set_var>
0x804a798:   83 c4 74                        	add esp, 0x74
0x804a79b:   0f bf 85 64 ff ff ff            	movsx eax, word ptr [ebp - 0x9c]
0x804a7a2:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a7a5:   5b                              	pop ebx
0x804a7a6:   5e                              	pop esi
0x804a7a7:   5f                              	pop edi
0x804a7a8:   5d                              	pop ebp
0x804a7a9:   c3                              	ret 
; function: main at 0x804a7aa -- 0x804ab9c
0x804a7aa:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a7ae:   83 e4 f0                        	and esp, 0xfffffff0
0x804a7b1:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a7b4:   55                              	push ebp
0x804a7b5:   89 e5                           	mov ebp, esp
0x804a7b7:   53                              	push ebx
0x804a7b8:   51                              	push ecx
0x804a7b9:   83 ec 10                        	sub esp, 0x10
0x804a7bc:   e8 cf db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a7c1:   81 c3 3f 28 00 00               	add ebx, 0x283f
0x804a7c7:   89 c8                           	mov eax, ecx
0x804a7c9:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a7d0:   83 38 02                        	cmp dword ptr [eax], 2
0x804a7d3:   75 26                           	jne 0x804a7fb <main+0x51>
0x804a7d5:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a7d8:   83 c0 04                        	add eax, 4
0x804a7db:   8b 00                           	mov eax, dword ptr [eax]
0x804a7dd:   83 ec 08                        	sub esp, 8
0x804a7e0:   8d 93 88 dc ff ff               	lea edx, [ebx - 0x2378]
0x804a7e6:   52                              	push edx
0x804a7e7:   50                              	push eax
0x804a7e8:   e8 13 db ff ff                  	call 0x8048300 <strcmp>
0x804a7ed:   83 c4 10                        	add esp, 0x10
0x804a7f0:   85 c0                           	test eax, eax
0x804a7f2:   75 07                           	jne 0x804a7fb <main+0x51>
0x804a7f4:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a7fb:   e8 56 dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a800:   e8 66 ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a805:   e8 fe ef ff ff                  	call 0x8049808 <func_1>
0x804a80a:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a810:   89 c2                           	mov edx, eax
0x804a812:   83 ec 04                        	sub esp, 4
0x804a815:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a818:   8d 83 8a dc ff ff               	lea eax, [ebx - 0x2376]
0x804a81e:   50                              	push eax
0x804a81f:   52                              	push edx
0x804a820:   e8 52 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a825:   83 c4 10                        	add esp, 0x10
0x804a828:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a82f:   0f be c0                        	movsx eax, al
0x804a832:   83 ec 04                        	sub esp, 4
0x804a835:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a838:   8d 93 8e dc ff ff               	lea edx, [ebx - 0x2372]
0x804a83e:   52                              	push edx
0x804a83f:   50                              	push eax
0x804a840:   e8 32 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a845:   83 c4 10                        	add esp, 0x10
0x804a848:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804a84f:   98                              	cwde 
0x804a850:   83 ec 04                        	sub esp, 4
0x804a853:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a856:   8d 93 93 dc ff ff               	lea edx, [ebx - 0x236d]
0x804a85c:   52                              	push edx
0x804a85d:   50                              	push eax
0x804a85e:   e8 14 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a863:   83 c4 10                        	add esp, 0x10
0x804a866:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a86c:   89 c2                           	mov edx, eax
0x804a86e:   83 ec 04                        	sub esp, 4
0x804a871:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a874:   8d 83 98 dc ff ff               	lea eax, [ebx - 0x2368]
0x804a87a:   50                              	push eax
0x804a87b:   52                              	push edx
0x804a87c:   e8 f6 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a881:   83 c4 10                        	add esp, 0x10
0x804a884:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804a88b:   0f b6 c0                        	movzx eax, al
0x804a88e:   83 ec 04                        	sub esp, 4
0x804a891:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a894:   8d 93 9d dc ff ff               	lea edx, [ebx - 0x2363]
0x804a89a:   52                              	push edx
0x804a89b:   50                              	push eax
0x804a89c:   e8 d6 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a1:   83 c4 10                        	add esp, 0x10
0x804a8a4:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804a8ab:   98                              	cwde 
0x804a8ac:   83 ec 04                        	sub esp, 4
0x804a8af:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b2:   8d 93 a2 dc ff ff               	lea edx, [ebx - 0x235e]
0x804a8b8:   52                              	push edx
0x804a8b9:   50                              	push eax
0x804a8ba:   e8 b8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8bf:   83 c4 10                        	add esp, 0x10
0x804a8c2:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804a8c9:   0f be c0                        	movsx eax, al
0x804a8cc:   83 ec 04                        	sub esp, 4
0x804a8cf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d2:   8d 93 a7 dc ff ff               	lea edx, [ebx - 0x2359]
0x804a8d8:   52                              	push edx
0x804a8d9:   50                              	push eax
0x804a8da:   e8 98 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8df:   83 c4 10                        	add esp, 0x10
0x804a8e2:   0f b6 83 35 00 00 00            	movzx eax, byte ptr [ebx + 0x35]
0x804a8e9:   0f be c0                        	movsx eax, al
0x804a8ec:   83 ec 04                        	sub esp, 4
0x804a8ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f2:   8d 93 ac dc ff ff               	lea edx, [ebx - 0x2354]
0x804a8f8:   52                              	push edx
0x804a8f9:   50                              	push eax
0x804a8fa:   e8 78 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ff:   83 c4 10                        	add esp, 0x10
0x804a902:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a908:   89 c2                           	mov edx, eax
0x804a90a:   83 ec 04                        	sub esp, 4
0x804a90d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a910:   8d 83 b1 dc ff ff               	lea eax, [ebx - 0x234f]
0x804a916:   50                              	push eax
0x804a917:   52                              	push edx
0x804a918:   e8 5a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91d:   83 c4 10                        	add esp, 0x10
0x804a920:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a926:   83 ec 04                        	sub esp, 4
0x804a929:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92c:   8d 93 b6 dc ff ff               	lea edx, [ebx - 0x234a]
0x804a932:   52                              	push edx
0x804a933:   50                              	push eax
0x804a934:   e8 3e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a939:   83 c4 10                        	add esp, 0x10
0x804a93c:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a943:   0f be c0                        	movsx eax, al
0x804a946:   83 ec 04                        	sub esp, 4
0x804a949:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a94c:   8d 93 bb dc ff ff               	lea edx, [ebx - 0x2345]
0x804a952:   52                              	push edx
0x804a953:   50                              	push eax
0x804a954:   e8 1e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a959:   83 c4 10                        	add esp, 0x10
0x804a95c:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804a963:   0f b7 c0                        	movzx eax, ax
0x804a966:   83 ec 04                        	sub esp, 4
0x804a969:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a96c:   8d 93 c0 dc ff ff               	lea edx, [ebx - 0x2340]
0x804a972:   52                              	push edx
0x804a973:   50                              	push eax
0x804a974:   e8 fe eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a979:   83 c4 10                        	add esp, 0x10
0x804a97c:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a982:   83 ec 04                        	sub esp, 4
0x804a985:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a988:   8d 93 c6 dc ff ff               	lea edx, [ebx - 0x233a]
0x804a98e:   52                              	push edx
0x804a98f:   50                              	push eax
0x804a990:   e8 e2 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a995:   83 c4 10                        	add esp, 0x10
0x804a998:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804a99f:   98                              	cwde 
0x804a9a0:   83 ec 04                        	sub esp, 4
0x804a9a3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a6:   8d 93 cc dc ff ff               	lea edx, [ebx - 0x2334]
0x804a9ac:   52                              	push edx
0x804a9ad:   50                              	push eax
0x804a9ae:   e8 c4 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b3:   83 c4 10                        	add esp, 0x10
0x804a9b6:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x804a9bd:   98                              	cwde 
0x804a9be:   83 ec 04                        	sub esp, 4
0x804a9c1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c4:   8d 93 d2 dc ff ff               	lea edx, [ebx - 0x232e]
0x804a9ca:   52                              	push edx
0x804a9cb:   50                              	push eax
0x804a9cc:   e8 a6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d1:   83 c4 10                        	add esp, 0x10
0x804a9d4:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a9da:   83 ec 04                        	sub esp, 4
0x804a9dd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e0:   8d 93 d8 dc ff ff               	lea edx, [ebx - 0x2328]
0x804a9e6:   52                              	push edx
0x804a9e7:   50                              	push eax
0x804a9e8:   e8 8a eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ed:   83 c4 10                        	add esp, 0x10
0x804a9f0:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a9f6:   83 ec 04                        	sub esp, 4
0x804a9f9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fc:   8d 93 de dc ff ff               	lea edx, [ebx - 0x2322]
0x804aa02:   52                              	push edx
0x804aa03:   50                              	push eax
0x804aa04:   e8 6e eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa09:   83 c4 10                        	add esp, 0x10
0x804aa0c:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804aa12:   83 ec 04                        	sub esp, 4
0x804aa15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa18:   8d 93 e4 dc ff ff               	lea edx, [ebx - 0x231c]
0x804aa1e:   52                              	push edx
0x804aa1f:   50                              	push eax
0x804aa20:   e8 52 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa25:   83 c4 10                        	add esp, 0x10
0x804aa28:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804aa2f:   0f b7 c0                        	movzx eax, ax
0x804aa32:   83 ec 04                        	sub esp, 4
0x804aa35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa38:   8d 93 ea dc ff ff               	lea edx, [ebx - 0x2316]
0x804aa3e:   52                              	push edx
0x804aa3f:   50                              	push eax
0x804aa40:   e8 32 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa45:   83 c4 10                        	add esp, 0x10
0x804aa48:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804aa4e:   83 ec 04                        	sub esp, 4
0x804aa51:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa54:   8d 93 f0 dc ff ff               	lea edx, [ebx - 0x2310]
0x804aa5a:   52                              	push edx
0x804aa5b:   50                              	push eax
0x804aa5c:   e8 16 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa61:   83 c4 10                        	add esp, 0x10
0x804aa64:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804aa6a:   89 c2                           	mov edx, eax
0x804aa6c:   83 ec 04                        	sub esp, 4
0x804aa6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa72:   8d 83 f6 dc ff ff               	lea eax, [ebx - 0x230a]
0x804aa78:   50                              	push eax
0x804aa79:   52                              	push edx
0x804aa7a:   e8 f8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa7f:   83 c4 10                        	add esp, 0x10
0x804aa82:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aa88:   83 ec 04                        	sub esp, 4
0x804aa8b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa8e:   8d 93 fc dc ff ff               	lea edx, [ebx - 0x2304]
0x804aa94:   52                              	push edx
0x804aa95:   50                              	push eax
0x804aa96:   e8 dc ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa9b:   83 c4 10                        	add esp, 0x10
0x804aa9e:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aaa4:   89 c2                           	mov edx, eax
0x804aaa6:   83 ec 04                        	sub esp, 4
0x804aaa9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaac:   8d 83 02 dd ff ff               	lea eax, [ebx - 0x22fe]
0x804aab2:   50                              	push eax
0x804aab3:   52                              	push edx
0x804aab4:   e8 be ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aab9:   83 c4 10                        	add esp, 0x10
0x804aabc:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804aac2:   89 c2                           	mov edx, eax
0x804aac4:   83 ec 04                        	sub esp, 4
0x804aac7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaca:   8d 83 08 dd ff ff               	lea eax, [ebx - 0x22f8]
0x804aad0:   50                              	push eax
0x804aad1:   52                              	push edx
0x804aad2:   e8 a0 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aad7:   83 c4 10                        	add esp, 0x10
0x804aada:   0f b6 83 68 00 00 00            	movzx eax, byte ptr [ebx + 0x68]
0x804aae1:   0f b6 c0                        	movzx eax, al
0x804aae4:   83 ec 04                        	sub esp, 4
0x804aae7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaea:   8d 93 0e dd ff ff               	lea edx, [ebx - 0x22f2]
0x804aaf0:   52                              	push edx
0x804aaf1:   50                              	push eax
0x804aaf2:   e8 80 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaf7:   83 c4 10                        	add esp, 0x10
0x804aafa:   0f b6 83 69 00 00 00            	movzx eax, byte ptr [ebx + 0x69]
0x804ab01:   0f be c0                        	movsx eax, al
0x804ab04:   83 ec 04                        	sub esp, 4
0x804ab07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0a:   8d 93 14 dd ff ff               	lea edx, [ebx - 0x22ec]
0x804ab10:   52                              	push edx
0x804ab11:   50                              	push eax
0x804ab12:   e8 60 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab17:   83 c4 10                        	add esp, 0x10
0x804ab1a:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ab20:   89 c2                           	mov edx, eax
0x804ab22:   83 ec 04                        	sub esp, 4
0x804ab25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab28:   8d 83 1a dd ff ff               	lea eax, [ebx - 0x22e6]
0x804ab2e:   50                              	push eax
0x804ab2f:   52                              	push edx
0x804ab30:   e8 42 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab35:   83 c4 10                        	add esp, 0x10
0x804ab38:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ab3e:   89 c2                           	mov edx, eax
0x804ab40:   83 ec 04                        	sub esp, 4
0x804ab43:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab46:   8d 83 20 dd ff ff               	lea eax, [ebx - 0x22e0]
0x804ab4c:   50                              	push eax
0x804ab4d:   52                              	push edx
0x804ab4e:   e8 24 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab53:   83 c4 10                        	add esp, 0x10
0x804ab56:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804ab5d:   0f b6 c0                        	movzx eax, al
0x804ab60:   83 ec 04                        	sub esp, 4
0x804ab63:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab66:   8d 93 26 dd ff ff               	lea edx, [ebx - 0x22da]
0x804ab6c:   52                              	push edx
0x804ab6d:   50                              	push eax
0x804ab6e:   e8 04 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab73:   83 c4 10                        	add esp, 0x10
0x804ab76:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab7c:   f7 d0                           	not eax
0x804ab7e:   83 ec 08                        	sub esp, 8
0x804ab81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab84:   50                              	push eax
0x804ab85:   e8 dc d8 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab8a:   83 c4 10                        	add esp, 0x10
0x804ab8d:   b8 00 00 00 00                  	mov eax, 0
0x804ab92:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab95:   59                              	pop ecx
0x804ab96:   5b                              	pop ebx
0x804ab97:   5d                              	pop ebp
0x804ab98:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab9b:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab9c -- 0x804aba0
0x804ab9c:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab9f:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aba0 -- 0x804aba4
0x804aba0:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aba3:   c3                              	ret 
; data inside code section at 0x804aba4 -- 0x804abb0
0x804aba4:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: __libc_csu_init at 0x804abb0 -- 0x804ac0d
0x804abb0:   55                              	push ebp
0x804abb1:   57                              	push edi
0x804abb2:   56                              	push esi
0x804abb3:   53                              	push ebx
0x804abb4:   e8 d7 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abb9:   81 c3 47 24 00 00               	add ebx, 0x2447
0x804abbf:   83 ec 0c                        	sub esp, 0xc
0x804abc2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804abc6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804abcc:   e8 fb d6 ff ff                  	call 0x80482cc <_init>
0x804abd1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804abd7:   29 c6                           	sub esi, eax
0x804abd9:   c1 fe 02                        	sar esi, 2
0x804abdc:   85 f6                           	test esi, esi
0x804abde:   74 25                           	je 0x804ac05 <__libc_csu_init+0x55>
0x804abe0:   31 ff                           	xor edi, edi
0x804abe2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804abe8:   83 ec 04                        	sub esp, 4
0x804abeb:   55                              	push ebp
0x804abec:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abf0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abf4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804abfb:   83 c7 01                        	add edi, 1
0x804abfe:   83 c4 10                        	add esp, 0x10
0x804ac01:   39 fe                           	cmp esi, edi
0x804ac03:   75 e3                           	jne 0x804abe8 <__libc_csu_init+0x38>
0x804ac05:   83 c4 0c                        	add esp, 0xc
0x804ac08:   5b                              	pop ebx
0x804ac09:   5e                              	pop esi
0x804ac0a:   5f                              	pop edi
0x804ac0b:   5d                              	pop ebp
0x804ac0c:   c3                              	ret 
; data inside code section at 0x804ac0d -- 0x804ac10
0x804ac0d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ac10 -- 0x804ac12
0x804ac10:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ac14 -- 0x804ac28
0x804ac14:   53                              	push ebx
0x804ac15:   83 ec 08                        	sub esp, 8
0x804ac18:   e8 73 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac1d:   81 c3 e3 23 00 00               	add ebx, 0x23e3
0x804ac23:   83 c4 08                        	add esp, 8
0x804ac26:   5b                              	pop ebx
0x804ac27:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 2c ac 04 08  04 00 00 00 11 00 10 00   |....,...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ac28:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ac38:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ac48:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ac58:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac68:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac78:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac88:   31 00 67 5f 36 00 67 5f  31 31 00 67 5f 31 34 00   |1.g_6.g_11.g_14.|
0x804ac98:   67 5f 31 39 00 67 5f 33  34 00 67 5f 34 32 00 67   |g_19.g_34.g_42.g|
0x804aca8:   5f 34 35 00 67 5f 34 36  00 67 5f 34 38 00 67 5f   |_45.g_46.g_48.g_|
0x804acb8:   39 34 00 67 5f 39 39 00  67 5f 31 32 36 00 67 5f   |94.g_99.g_126.g_|
0x804acc8:   31 32 39 00 67 5f 31 35  30 00 67 5f 31 37 38 00   |129.g_150.g_178.|
0x804acd8:   67 5f 31 38 30 00 67 5f  31 38 36 00 67 5f 32 30   |g_180.g_186.g_20|
0x804ace8:   37 00 67 5f 32 34 34 00  67 5f 32 36 33 00 67 5f   |7.g_244.g_263.g_|
0x804acf8:   32 36 39 00 67 5f 33 30  38 00 67 5f 33 31 36 00   |269.g_308.g_316.|
0x804ad08:   67 5f 33 35 33 00 67 5f  33 35 34 00 67 5f 33 36   |g_353.g_354.g_36|
0x804ad18:   31 00 67 5f 33 36 32 00  67 5f 33 36 33 00 67 5f   |1.g_362.g_363.g_|
0x804ad28:   33 36 34 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |364....?...~....|
0x804ad38:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804ad48:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804ad58:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ad68:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ad78:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ad88:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804ad98:   01                                                 |.               |
; section: .eh_frame_hdr
0x804ad98:   01 1b 03 3b b8 02 00 00  56 00 00 00 58 d5 ff ff   |...;....V...X...|
0x804ada8:   e8 02 00 00 98 d5 ff ff  0c 03 00 00 e8 d5 ff ff   |................|
0x804adb8:   d4 02 00 00 be d6 ff ff  20 03 00 00 ce d6 ff ff   |........ .......|
0x804adc8:   40 03 00 00 fc d6 ff ff  64 03 00 00 1a d7 ff ff   |@.......d.......|
0x804add8:   84 03 00 00 42 d7 ff ff  a4 03 00 00 6c d7 ff ff   |....B.......l...|
0x804ade8:   c4 03 00 00 95 d7 ff ff  e4 03 00 00 d8 d7 ff ff   |................|
0x804adf8:   04 04 00 00 19 d8 ff ff  24 04 00 00 71 d8 ff ff   |........$...q...|
0x804ae08:   48 04 00 00 c3 d8 ff ff  6c 04 00 00 00 d9 ff ff   |H.......l.......|
0x804ae18:   8c 04 00 00 37 d9 ff ff  ac 04 00 00 56 d9 ff ff   |....7.......V...|
0x804ae28:   cc 04 00 00 80 d9 ff ff  ec 04 00 00 ac d9 ff ff   |................|
0x804ae38:   0c 05 00 00 d7 d9 ff ff  2c 05 00 00 20 da ff ff   |........,... ...|
0x804ae48:   4c 05 00 00 67 da ff ff  6c 05 00 00 c1 da ff ff   |L...g...l.......|
0x804ae58:   90 05 00 00 15 db ff ff  b4 05 00 00 54 db ff ff   |............T...|
0x804ae68:   d4 05 00 00 8d db ff ff  f4 05 00 00 af db ff ff   |................|
0x804ae78:   14 06 00 00 fd db ff ff  34 06 00 00 39 dc ff ff   |........4...9...|
0x804ae88:   54 06 00 00 c2 dc ff ff  74 06 00 00 f4 dc ff ff   |T.......t.......|
0x804ae98:   94 06 00 00 24 dd ff ff  b4 06 00 00 69 dd ff ff   |....$.......i...|
0x804aea8:   d4 06 00 00 a8 dd ff ff  f4 06 00 00 da dd ff ff   |................|
0x804aeb8:   14 07 00 00 06 de ff ff  34 07 00 00 24 de ff ff   |........4...$...|
0x804aec8:   54 07 00 00 4c de ff ff  74 07 00 00 71 de ff ff   |T...L...t...q...|
0x804aed8:   94 07 00 00 96 de ff ff  b4 07 00 00 cd de ff ff   |................|
0x804aee8:   d4 07 00 00 01 df ff ff  f4 07 00 00 53 df ff ff   |............S...|
0x804aef8:   18 08 00 00 9f df ff ff  3c 08 00 00 d6 df ff ff   |........<.......|
0x804af08:   5c 08 00 00 07 e0 ff ff  7c 08 00 00 26 e0 ff ff   |\.......|...&...|
0x804af18:   9c 08 00 00 50 e0 ff ff  bc 08 00 00 78 e0 ff ff   |....P.......x...|
0x804af28:   dc 08 00 00 a1 e0 ff ff  fc 08 00 00 dd e0 ff ff   |................|
0x804af38:   1c 09 00 00 17 e1 ff ff  3c 09 00 00 6a e1 ff ff   |........<...j...|
0x804af48:   60 09 00 00 b7 e1 ff ff  84 09 00 00 ef e1 ff ff   |`...............|
0x804af58:   a4 09 00 00 21 e2 ff ff  c4 09 00 00 35 e2 ff ff   |....!.......5...|
0x804af68:   e4 09 00 00 4c e2 ff ff  04 0a 00 00 61 e2 ff ff   |....L.......a...|
0x804af78:   24 0a 00 00 77 e2 ff ff  44 0a 00 00 9e e2 ff ff   |$...w...D.......|
0x804af88:   64 0a 00 00 c3 e2 ff ff  84 0a 00 00 02 e3 ff ff   |d...............|
0x804af98:   a4 0a 00 00 3b e3 ff ff  c4 0a 00 00 67 e3 ff ff   |....;.......g...|
0x804afa8:   e4 0a 00 00 8d e3 ff ff  04 0b 00 00 cf e3 ff ff   |................|
0x804afb8:   24 0b 00 00 11 e4 ff ff  44 0b 00 00 53 e4 ff ff   |$.......D...S...|
0x804afc8:   64 0b 00 00 c8 e4 ff ff  84 0b 00 00 25 e5 ff ff   |d...........%...|
0x804afd8:   a4 0b 00 00 82 e5 ff ff  c4 0b 00 00 df e5 ff ff   |................|
0x804afe8:   e4 0b 00 00 6f e6 ff ff  04 0c 00 00 d3 e6 ff ff   |....o...........|
0x804aff8:   24 0c 00 00 43 e7 ff ff  44 0c 00 00 8a e7 ff ff   |$...C...D.......|
0x804b008:   68 0c 00 00 df e7 ff ff  88 0c 00 00 26 e8 ff ff   |h...........&...|
0x804b018:   ac 0c 00 00 8e e8 ff ff  d0 0c 00 00 70 ea ff ff   |............p...|
0x804b028:   00 0d 00 00 12 fa ff ff  30 0d 00 00 04 fe ff ff   |........0.......|
0x804b038:   68 0d 00 00 08 fe ff ff  7c 0d 00 00 18 fe ff ff   |h.......|.......|
0x804b048:   90 0d 00 00 78 fe ff ff  dc 0d 00 00 14            |....x........   |
; section: .eh_frame
0x804b054:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b064:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b074:   0c d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b084:   30 00 00 00 68 d2 ff ff  40 00 00 00 00 0e 08 46   |0...h...@......F|
0x804b094:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b0a4:   10 00 00 00 54 00 00 00  84 d2 ff ff 08 00 00 00   |....T...........|
0x804b0b4:   00 00 00 00 1c 00 00 00  68 00 00 00 96 d3 ff ff   |........h.......|
0x804b0c4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b0d4:   04 04 00 00 20 00 00 00  88 00 00 00 86 d3 ff ff   |.... ...........|
0x804b0e4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b0f4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b104:   90 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b114:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b124:   8e d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b134:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b144:   96 d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b154:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b164:   a0 d3 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b174:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b184:   a9 d3 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b194:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b1a4:   cc d3 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b1b4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b1c4:   ed d3 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b1d4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b1e4:   90 01 00 00 21 d4 ff ff  52 00 00 00 00 41 0e 08   |....!...R....A..|
0x804b1f4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b204:   1c 00 00 00 b4 01 00 00  4f d4 ff ff 3d 00 00 00   |........O...=...|
0x804b214:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b224:   1c 00 00 00 d4 01 00 00  6c d4 ff ff 37 00 00 00   |........l...7...|
0x804b234:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b244:   1c 00 00 00 f4 01 00 00  83 d4 ff ff 1f 00 00 00   |................|
0x804b254:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b264:   1c 00 00 00 14 02 00 00  82 d4 ff ff 2a 00 00 00   |............*...|
0x804b274:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b284:   1c 00 00 00 34 02 00 00  8c d4 ff ff 2c 00 00 00   |....4.......,...|
0x804b294:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b2a4:   1c 00 00 00 54 02 00 00  98 d4 ff ff 2b 00 00 00   |....T.......+...|
0x804b2b4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b2c4:   1c 00 00 00 74 02 00 00  a3 d4 ff ff 49 00 00 00   |....t.......I...|
0x804b2d4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b2e4:   1c 00 00 00 94 02 00 00  cc d4 ff ff 47 00 00 00   |............G...|
0x804b2f4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b304:   20 00 00 00 b4 02 00 00  f3 d4 ff ff 5a 00 00 00   | ...........Z...|
0x804b314:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b324:   c5 0c 04 04 20 00 00 00  d8 02 00 00 29 d5 ff ff   |.... .......)...|
0x804b334:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b344:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b354:   59 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |Y...?....A....B.|
0x804b364:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b374:   78 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |x...9....A....B.|
0x804b384:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b394:   91 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b3a4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b3b4:   93 d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b3c4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b3d4:   c1 d5 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b3e4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b3f4:   dd d5 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b404:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b414:   46 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |F...2....A....B.|
0x804b424:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b434:   58 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |X...0....A....B.|
0x804b444:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b454:   68 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |h...E....A....B.|
0x804b464:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b474:   8d d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b484:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b494:   ac d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b4a4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b4b4:   be d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b4c4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b4d4:   ca d6 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4e4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b4f4:   c8 d6 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b504:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b514:   d0 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b524:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b534:   d5 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b544:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b554:   da d6 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b564:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b574:   f1 d6 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b584:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b594:   05 d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b5a4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b5b4:   60 05 00 00 33 d7 ff ff  4c 00 00 00 00 41 0e 08   |`...3...L....A..|
0x804b5c4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b5d4:   1c 00 00 00 84 05 00 00  5b d7 ff ff 37 00 00 00   |........[...7...|
0x804b5e4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b5f4:   1c 00 00 00 a4 05 00 00  72 d7 ff ff 31 00 00 00   |........r...1...|
0x804b604:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b614:   1c 00 00 00 c4 05 00 00  83 d7 ff ff 1f 00 00 00   |................|
0x804b624:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b634:   1c 00 00 00 e4 05 00 00  82 d7 ff ff 2a 00 00 00   |............*...|
0x804b644:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b654:   1c 00 00 00 04 06 00 00  8c d7 ff ff 28 00 00 00   |............(...|
0x804b664:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b674:   1c 00 00 00 24 06 00 00  94 d7 ff ff 29 00 00 00   |....$.......)...|
0x804b684:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b694:   1c 00 00 00 44 06 00 00  9d d7 ff ff 3c 00 00 00   |....D.......<...|
0x804b6a4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b6b4:   1c 00 00 00 64 06 00 00  b9 d7 ff ff 3a 00 00 00   |....d.......:...|
0x804b6c4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b6d4:   20 00 00 00 84 06 00 00  d3 d7 ff ff 53 00 00 00   | ...........S...|
0x804b6e4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b6f4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 02 d8 ff ff   |.... ...........|
0x804b704:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b714:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b724:   2b d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |+...8....A....B.|
0x804b734:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b744:   43 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |C...2....A....B.|
0x804b754:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b764:   55 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804b774:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b784:   49 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |I........A....B.|
0x804b794:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b7a4:   40 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804b7b4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b7c4:   35 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804b7d4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b7e4:   2b d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |+...'....A....B.|
0x804b7f4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b804:   32 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |2...%....A....B.|
0x804b814:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b824:   37 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |7...?....A....B.|
0x804b834:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b844:   56 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |V...9....A....B.|
0x804b854:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b864:   6f d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |o...,....A....B.|
0x804b874:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b884:   7b d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |{...&....A....B.|
0x804b894:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b8a4:   81 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8b4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b8c4:   a3 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8d4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b8e4:   c5 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b8f4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b904:   e7 d8 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b914:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b924:   3c d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |<...]....A....B.|
0x804b934:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b944:   79 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |y...]....A....B.|
0x804b954:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b964:   b6 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b974:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b984:   f3 d9 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b994:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b9a4:   63 da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |c...d....A....B.|
0x804b9b4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b9c4:   a7 da ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b9d4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b9e4:   f7 da ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b9f4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804ba04:   b0 09 00 00 1a db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804ba14:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ba24:   d0 09 00 00 4f db ff ff  47 00 00 00 00 41 0e 08   |....O...G....A..|
0x804ba34:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804ba44:   20 00 00 00 f4 09 00 00  72 db ff ff 68 00 00 00   | .......r...h...|
0x804ba54:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804ba64:   0c 04 04 00 2c 00 00 00  18 0a 00 00 b6 db ff ff   |....,...........|
0x804ba74:   e2 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804ba84:   86 04 83 05 03 d5 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba94:   04 00 00 00 2c 00 00 00  48 0a 00 00 68 dd ff ff   |....,...H...h...|
0x804baa4:   a2 0f 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bab4:   86 04 83 05 03 92 0f c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bac4:   04 00 00 00 34 00 00 00  78 0a 00 00 da ec ff ff   |....4...x.......|
0x804bad4:   f2 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bae4:   0f 03 75 78 06 10 03 02  75 7c 03 dd 03 c1 0c 01   |..ux....u|......|
0x804baf4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bb04:   b0 0a 00 00 94 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bb14:   10 00 00 00 c4 0a 00 00  84 f0 ff ff 04 00 00 00   |................|
0x804bb24:   00 00 00 00 48 00 00 00  d8 0a 00 00 80 f0 ff ff   |....H...........|
0x804bb34:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bb44:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bb54:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bb64:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bb74:   10 00 00 00 24 0b 00 00  94 f0 ff ff 02 00 00 00   |....$...........|
0x804bb84:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 14 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804d028:   01 00 d8 b7 01 00 00 00  02 00 aa ba c7 41 00 00   |.............A..|
0x804d038:   f9 ff ff ff 05 00 fc ff  01 00 00 00 c4 28 9b 86   |.............(..|
0x804d048:   04 0f 35 f8 3e 98 f0 8d  04 00 00 00 fe ff 00 00   |..5.>...........|
0x804d058:   01 00 00 00 2d 0c 4e a8  09 00 00 00 01 00 00 00   |....-.N.........|
0x804d068:   ff 01 00 00 cb 3c 47 e4  07 00 00 00 07 ??         |.....<G......?  |
