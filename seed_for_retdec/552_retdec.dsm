;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:48:22
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 d0 db ff ff               	lea eax, [ebx - 0x2430]
0x804835c:   50                              	push eax
0x804835d:   8d 83 70 db ff ff               	lea eax, [ebx - 0x2490]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 98 a8 04 08               	mov eax, 0x804a898
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 58 d0 04 08                  	mov eax, 0x804d058
0x80483a5:   3d 58 d0 04 08                  	cmp eax, 0x804d058
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 58 d0 04 08                  	push 0x804d058
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 58 d0 04 08                  	mov eax, 0x804d058
0x80483e5:   2d 58 d0 04 08                  	sub eax, 0x804d058
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 58 d0 04 08                  	push 0x804d058
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 04 27 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 f0 26 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 f0 db ff ff               	lea edx, [eax - 0x2410]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 c3 26 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 a5 26 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 7d 26 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 53 26 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 2a 26 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 e7 25 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 a5 25 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 4d 25 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 fc 24 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 bf 24 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 88 24 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 69 24 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 3f 24 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 13 24 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 e8 23 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 9f 23 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 57 23 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 fd 22 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 aa 22 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 6b 22 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 35 22 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 13 22 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 c5 21 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 89 21 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 00 21 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 ce 20 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 9e 20 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 59 20 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 1a 20 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 e8 1f 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 b9 1f 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 9b 1f 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 73 1f 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 4e 1f 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 29 1f 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 f2 1e 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 bd 1e 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 6b 1e 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 20 1e 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 e9 1d 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 b8 1d 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 99 1d 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 6f 1d 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 47 1d 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 1e 1d 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 e2 1c 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 a7 1c 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 54 1c 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 08 1c 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 d0 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 a1 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 8d 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 76 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 61 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 4b 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 24 1b 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 ff 1a 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 c0 1a 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 87 1a 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 5b 1a 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 35 1a 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 b8 dc ff ff               	fld dword ptr [eax - 0x2348]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 f3 19 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 b4 dc ff ff               	fld dword ptr [eax - 0x234c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 b8 dc ff ff               	fld dword ptr [eax - 0x2348]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 b1 19 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 bc dc ff ff               	fld dword ptr [eax - 0x2344]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 c0 dc ff ff               	fld dword ptr [eax - 0x2340]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 6f 19 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 c8 dc ff ff               	fld dword ptr [eax - 0x2338]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 cc dc ff ff               	fld dword ptr [eax - 0x2334]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 d0 dc ff ff               	fld dword ptr [eax - 0x2330]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 f7 18 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 9a 18 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 3d 18 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 f0 dc ff ff               	fld qword ptr [eax - 0x2310]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 f8 dc ff ff               	fld qword ptr [eax - 0x2308]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 e0 17 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 00 dd ff ff               	fld qword ptr [eax - 0x2300]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 08 dd ff ff               	fld qword ptr [eax - 0x22f8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 10 dd ff ff               	fld qword ptr [eax - 0x22f0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 50 17 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 18 dd ff ff               	fld dword ptr [eax - 0x22e8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 1c dd ff ff               	fld dword ptr [eax - 0x22e4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 ec 16 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 7b 16 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 38 16 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 00 dc ff ff               	lea eax, [ebx - 0x2400]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 24 dc ff ff               	lea eax, [ebx - 0x23dc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804976d
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 3c                        	sub esp, 0x3c
0x804962f:   e8 32 15 00 00                  	call 0x804ab66 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 20                        	mov ecx, dword ptr [ebp + 0x20]
0x8049640:   8b 5d 28                        	mov ebx, dword ptr [ebp + 0x28]
0x8049643:   8b 75 2c                        	mov esi, dword ptr [ebp + 0x2c]
0x8049646:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049649:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964c:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804964f:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049652:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049655:   8b 7d 40                        	mov edi, dword ptr [ebp + 0x40]
0x8049658:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804965b:   8b 75 44                        	mov esi, dword ptr [ebp + 0x44]
0x804965e:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x8049661:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049664:   8b 75 4c                        	mov esi, dword ptr [ebp + 0x4c]
0x8049667:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804966a:   89 c8                           	mov eax, ecx
0x804966c:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804966f:   89 d8                           	mov eax, ebx
0x8049671:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049674:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049678:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804967c:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049680:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049684:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x8049688:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804968c:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049690:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x8049693:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049697:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x804969a:   89 f8                           	mov eax, edi
0x804969c:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496a0:   89 f0                           	mov eax, esi
0x80496a2:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496a6:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496aa:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496b0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496b3:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496b9:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496bc:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496c2:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496c5:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x80496cb:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496ce:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496d4:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496d7:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496dd:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496e1:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x80496e7:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x80496ea:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x80496f0:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x80496f4:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x80496fa:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80496fe:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x8049705:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049708:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804970e:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049712:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x8049719:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804971d:   66 89 82 4a 00 00 00            	mov word ptr [edx + 0x4a], ax
0x8049724:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049727:   89 82 88 04 00 00               	mov dword ptr [edx + 0x488], eax
0x804972d:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049731:   88 82 8c 04 00 00               	mov byte ptr [edx + 0x48c], al
0x8049737:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804973b:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x8049741:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049745:   66 89 82 4e 00 00 00            	mov word ptr [edx + 0x4e], ax
0x804974c:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049750:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x8049757:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804975a:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049760:   b8 00 00 00 00                  	mov eax, 0
0x8049765:   83 c4 3c                        	add esp, 0x3c
0x8049768:   5b                              	pop ebx
0x8049769:   5e                              	pop esi
0x804976a:   5f                              	pop edi
0x804976b:   5d                              	pop ebp
0x804976c:   c3                              	ret 
; function: func_1 at 0x804976d -- 0x804a898
0x804976d:   55                              	push ebp
0x804976e:   89 e5                           	mov ebp, esp
0x8049770:   57                              	push edi
0x8049771:   56                              	push esi
0x8049772:   53                              	push ebx
0x8049773:   81 ec 30 01 00 00               	sub esp, 0x130
0x8049779:   e8 e4 13 00 00                  	call 0x804ab62 <__x86.get_pc_thunk.ax>
0x804977e:   05 82 38 00 00                  	add eax, 0x3882
0x8049783:   c6 45 f3 71                     	mov byte ptr [ebp - 0xd], 0x71
0x8049787:   c7 45 ec b2 1c c7 9e            	mov dword ptr [ebp - 0x14], 0x9ec71cb2
0x804978e:   c7 45 e8 48 bb 94 22            	mov dword ptr [ebp - 0x18], 0x2294bb48
0x8049795:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804979c:   c7 45 e0 c5 45 e7 11            	mov dword ptr [ebp - 0x20], 0x11e745c5
0x80497a3:   c7 45 dc 39 da 80 be            	mov dword ptr [ebp - 0x24], 0xbe80da39
0x80497aa:   c6 45 db eb                     	mov byte ptr [ebp - 0x25], 0xeb
0x80497ae:   c7 45 d4 06 00 00 00            	mov dword ptr [ebp - 0x2c], 6
0x80497b5:   c6 45 d3 1e                     	mov byte ptr [ebp - 0x2d], 0x1e
0x80497b9:   66 c7 45 d0 01 00               	mov word ptr [ebp - 0x30], 1
0x80497bf:   c7 45 a4 ee e3 95 99            	mov dword ptr [ebp - 0x5c], 0x9995e3ee
0x80497c6:   66 c7 45 ce ff ff               	mov word ptr [ebp - 0x32], 0xffff
0x80497cc:   66 c7 45 cc 00 f1               	mov word ptr [ebp - 0x34], 0xf100
0x80497d2:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x80497d9:   c6 45 c7 00                     	mov byte ptr [ebp - 0x39], 0
0x80497dd:   c6 45 c6 ff                     	mov byte ptr [ebp - 0x3a], 0xff
0x80497e1:   66 c7 45 a2 19 01               	mov word ptr [ebp - 0x5e], 0x119
0x80497e7:   66 c7 45 a0 ff ff               	mov word ptr [ebp - 0x60], 0xffff
0x80497ed:   c7 45 c0 01 00 00 00            	mov dword ptr [ebp - 0x40], 1
0x80497f4:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x80497fb:   c7 45 bc 71 48 14 18            	mov dword ptr [ebp - 0x44], 0x18144871
0x8049802:   c7 45 b8 fc ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffffc
0x8049809:   c6 45 b7 4b                     	mov byte ptr [ebp - 0x49], 0x4b
0x804980d:   c7 45 98 fb ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffffb
0x8049814:   66 c7 45 96 f6 ff               	mov word ptr [ebp - 0x6a], 0xfff6
0x804981a:   c6 45 b6 f8                     	mov byte ptr [ebp - 0x4a], 0xf8
0x804981e:   c7 45 90 01 00 00 00            	mov dword ptr [ebp - 0x70], 1
0x8049825:   c7 45 8c 28 95 d3 c8            	mov dword ptr [ebp - 0x74], 0xc8d39528
0x804982c:   c7 45 88 97 08 c4 10            	mov dword ptr [ebp - 0x78], 0x10c40897
0x8049833:   80 45 f3 01                     	add byte ptr [ebp - 0xd], 1
0x8049837:   c6 45 f3 1d                     	mov byte ptr [ebp - 0xd], 0x1d
0x804983b:   e9 57 06 00 00                  	jmp 0x8049e97 <func_1+0x72a>
0x8049840:   c7 45 84 2c 1e ce cc            	mov dword ptr [ebp - 0x7c], 0xccce1e2c
0x8049847:   66 c7 45 82 02 00               	mov word ptr [ebp - 0x7e], 2
0x804984d:   c6 45 81 38                     	mov byte ptr [ebp - 0x7f], 0x38
0x8049851:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804985b:   c7 85 78 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x88], 0xfffffff7
0x8049865:   83 6d 84 01                     	sub dword ptr [ebp - 0x7c], 1
0x8049869:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804986c:   0f be d0                        	movsx edx, al
0x804986f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049872:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049875:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049878:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x804987b:   b9 00 00 00 00                  	mov ecx, 0
0x8049880:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049884:   39 c1                           	cmp ecx, eax
0x8049886:   b8 00 00 00 00                  	mov eax, 0
0x804988b:   0f be c0                        	movsx eax, al
0x804988e:   89 c1                           	mov ecx, eax
0x8049890:   d3 fa                           	sar edx, cl
0x8049892:   89 d0                           	mov eax, edx
0x8049894:   85 c0                           	test eax, eax
0x8049896:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x804989a:   0f 84 8a 00 00 00               	je 0x804992a <func_1+0x1bd>
0x80498a0:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x80498a4:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x80498a8:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x80498ac:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x80498b0:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x80498b6:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x80498ba:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x80498c0:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x80498c4:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x80498ca:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80498ce:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x80498d4:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x80498d8:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x80498dc:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x80498e0:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x80498e3:   52                              	push edx
0x80498e4:   53                              	push ebx
0x80498e5:   57                              	push edi
0x80498e6:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x80498ec:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x80498ef:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x80498f5:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x80498fb:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x80498fe:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049904:   56                              	push esi
0x8049905:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049908:   51                              	push ecx
0x8049909:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804990c:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804990f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049912:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049915:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049918:   50                              	push eax
0x8049919:   e8 08 fd ff ff                  	call 0x8049626 <set_var>
0x804991e:   83 c4 4c                        	add esp, 0x4c
0x8049921:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049925:   e9 66 0f 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x804992a:   66 c7 85 76 ff ff ff ff ff      	mov word ptr [ebp - 0x8a], 0xffff
0x8049933:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x804993b:   0f 85 62 05 00 00               	jne 0x8049ea3 <func_1+0x736>
0x8049941:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049945:   0f 84 21 05 00 00               	je 0x8049e6c <func_1+0x6ff>
0x804994b:   c7 85 70 ff ff ff 0d e6 05 32   	mov dword ptr [ebp - 0x90], 0x3205e60d
0x8049955:   66 c7 85 6e ff ff ff 09 b1      	mov word ptr [ebp - 0x92], 0xb109
0x804995e:   c7 85 68 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x98], 1
0x8049968:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x804996f:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049972:   0f b6 d0                        	movzx edx, al
0x8049975:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049978:   89 c1                           	mov ecx, eax
0x804997a:   83 bd 70 ff ff ff 65            	cmp dword ptr [ebp - 0x90], 0x65
0x8049981:   75 07                           	jne 0x804998a <func_1+0x21d>
0x8049983:   b8 6d c3 19 30                  	mov eax, 0x3019c36d
0x8049988:   eb 05                           	jmp 0x804998f <func_1+0x222>
0x804998a:   b8 6c c3 19 30                  	mov eax, 0x3019c36c
0x804998f:   3b 85 70 ff ff ff               	cmp eax, dword ptr [ebp - 0x90]
0x8049995:   0f 94 c0                        	sete al
0x8049998:   29 c1                           	sub ecx, eax
0x804999a:   89 c8                           	mov eax, ecx
0x804999c:   83 e8 01                        	sub eax, 1
0x804999f:   0f b6 c0                        	movzx eax, al
0x80499a2:   29 c2                           	sub edx, eax
0x80499a4:   89 d0                           	mov eax, edx
0x80499a6:   f7 d0                           	not eax
0x80499a8:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x80499ab:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x80499ae:   83 c0 01                        	add eax, 1
0x80499b1:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x80499b4:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x80499ba:   3b 45 84                        	cmp eax, dword ptr [ebp - 0x7c]
0x80499bd:   c6 85 67 ff ff ff 90            	mov byte ptr [ebp - 0x99], 0x90
0x80499c4:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x80499ce:   c7 85 5c ff ff ff 37 65 f9 ec   	mov dword ptr [ebp - 0xa4], 0xecf96537
0x80499d8:   c7 85 58 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa8], 1
0x80499e2:   c7 85 54 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xac], 1
0x80499ec:   c7 85 50 ff ff ff 0f 0d c6 f5   	mov dword ptr [ebp - 0xb0], 0xf5c60d0f
0x80499f6:   c7 85 4c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb4], 1
0x8049a00:   c7 85 48 ff ff ff 00 98 59 f1   	mov dword ptr [ebp - 0xb8], 0xf1599800
0x8049a0a:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x8049a0e:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049a12:   0f 84 84 00 00 00               	je 0x8049a9c <func_1+0x32f>
0x8049a18:   80 bd 67 ff ff ff 00            	cmp byte ptr [ebp - 0x99], 0
0x8049a1f:   74 0d                           	je 0x8049a2e <func_1+0x2c1>
0x8049a21:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049a25:   74 07                           	je 0x8049a2e <func_1+0x2c1>
0x8049a27:   b8 01 00 00 00                  	mov eax, 1
0x8049a2c:   eb 05                           	jmp 0x8049a33 <func_1+0x2c6>
0x8049a2e:   b8 00 00 00 00                  	mov eax, 0
0x8049a33:   89 c2                           	mov edx, eax
0x8049a35:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a38:   89 d7                           	mov edi, edx
0x8049a3a:   29 c7                           	sub edi, eax
0x8049a3c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049a3f:   ba 00 00 00 00                  	mov edx, 0
0x8049a44:   f7 f7                           	div edi
0x8049a46:   89 c2                           	mov edx, eax
0x8049a48:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049a4e:   31 d0                           	xor eax, edx
0x8049a50:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x8049a56:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049a5c:   0f bf d0                        	movsx edx, ax
0x8049a5f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049a62:   98                              	cwde 
0x8049a63:   29 c2                           	sub edx, eax
0x8049a65:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049a69:   39 c2                           	cmp edx, eax
0x8049a6b:   0f 9f c0                        	setg al
0x8049a6e:   0f b6 c0                        	movzx eax, al
0x8049a71:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x8049a74:   0f 92 c0                        	setb al
0x8049a77:   0f b6 c0                        	movzx eax, al
0x8049a7a:   89 c2                           	mov edx, eax
0x8049a7c:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x8049a80:   09 d0                           	or eax, edx
0x8049a82:   66 89 45 82                     	mov word ptr [ebp - 0x7e], ax
0x8049a86:   83 7d e0 f7                     	cmp dword ptr [ebp - 0x20], -9
0x8049a8a:   0f 97 c0                        	seta al
0x8049a8d:   0f b6 c0                        	movzx eax, al
0x8049a90:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049a93:   75 07                           	jne 0x8049a9c <func_1+0x32f>
0x8049a95:   b8 01 00 00 00                  	mov eax, 1
0x8049a9a:   eb 05                           	jmp 0x8049aa1 <func_1+0x334>
0x8049a9c:   b8 00 00 00 00                  	mov eax, 0
0x8049aa1:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049aa4:   c7 85 60 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xa0], 2
0x8049aae:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x8049ab5:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049ab9:   0f 84 5a 01 00 00               	je 0x8049c19 <func_1+0x4ac>
0x8049abf:   66 c7 85 32 ff ff ff 8a 84      	mov word ptr [ebp - 0xce], 0x848a
0x8049ac8:   c7 85 2c ff ff ff 92 1a 21 6d   	mov dword ptr [ebp - 0xd4], 0x6d211a92
0x8049ad2:   80 6d d3 01                     	sub byte ptr [ebp - 0x2d], 1
0x8049ad6:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x8049ada:   80 45 db 01                     	add byte ptr [ebp - 0x25], 1
0x8049ade:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x8049ae2:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049ae6:   75 06                           	jne 0x8049aee <func_1+0x381>
0x8049ae8:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049aec:   74 07                           	je 0x8049af5 <func_1+0x388>
0x8049aee:   ba 01 00 00 00                  	mov edx, 1
0x8049af3:   eb 05                           	jmp 0x8049afa <func_1+0x38d>
0x8049af5:   ba 00 00 00 00                  	mov edx, 0
0x8049afa:   83 fa ff                        	cmp edx, -1
0x8049afd:   0f 9d c2                        	setge dl
0x8049b00:   0f b6 d2                        	movzx edx, dl
0x8049b03:   29 d1                           	sub ecx, edx
0x8049b05:   89 ca                           	mov edx, ecx
0x8049b07:   89 95 7c ff ff ff               	mov dword ptr [ebp - 0x84], edx
0x8049b0d:   0f b6 c0                        	movzx eax, al
0x8049b10:   66 09 45 d0                     	or word ptr [ebp - 0x30], ax
0x8049b14:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049b18:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049b1e:   0f 8d 8d 00 00 00               	jge 0x8049bb1 <func_1+0x444>
0x8049b24:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x8049b2b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b2e:   0f be c0                        	movsx eax, al
0x8049b31:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x8049b35:   0f be ca                        	movsx ecx, dl
0x8049b38:   99                              	cdq 
0x8049b39:   f7 f9                           	idiv ecx
0x8049b3b:   89 d0                           	mov eax, edx
0x8049b3d:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049b43:   0f 92 c0                        	setb al
0x8049b46:   0f b6 c0                        	movzx eax, al
0x8049b49:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x8049b4f:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049b56:   75 0a                           	jne 0x8049b62 <func_1+0x3f5>
0x8049b58:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x8049b60:   74 07                           	je 0x8049b69 <func_1+0x3fc>
0x8049b62:   b8 01 00 00 00                  	mov eax, 1
0x8049b67:   eb 05                           	jmp 0x8049b6e <func_1+0x401>
0x8049b69:   b8 00 00 00 00                  	mov eax, 0
0x8049b6e:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049b71:   0f 94 c0                        	sete al
0x8049b74:   0f b6 d0                        	movzx edx, al
0x8049b77:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049b7a:   0f be c0                        	movsx eax, al
0x8049b7d:   0f af c2                        	imul eax, edx
0x8049b80:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049b83:   0f 94 c0                        	sete al
0x8049b86:   0f b6 c0                        	movzx eax, al
0x8049b89:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049b8c:   0f 9c c0                        	setl al
0x8049b8f:   0f b6 c0                        	movzx eax, al
0x8049b92:   0b 45 e0                        	or eax, dword ptr [ebp - 0x20]
0x8049b95:   89 c2                           	mov edx, eax
0x8049b97:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049b9a:   09 d0                           	or eax, edx
0x8049b9c:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049b9f:   83 7d e0 01                     	cmp dword ptr [ebp - 0x20], 1
0x8049ba3:   0f 95 c0                        	setne al
0x8049ba6:   0f b6 c0                        	movzx eax, al
0x8049ba9:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049baf:   eb 4b                           	jmp 0x8049bfc <func_1+0x48f>
0x8049bb1:   66 c7 85 2a ff ff ff fe ff      	mov word ptr [ebp - 0xd6], 0xfffe
0x8049bba:   c7 85 24 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffff6
0x8049bc4:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049bca:   0f b6 c0                        	movzx eax, al
0x8049bcd:   f6 75 db                        	div byte ptr [ebp - 0x25]
0x8049bd0:   84 c0                           	test al, al
0x8049bd2:   0f 95 c0                        	setne al
0x8049bd5:   0f b6 d0                        	movzx edx, al
0x8049bd8:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x8049bdf:   0f be c0                        	movsx eax, al
0x8049be2:   89 c1                           	mov ecx, eax
0x8049be4:   d3 e2                           	shl edx, cl
0x8049be6:   89 d0                           	mov eax, edx
0x8049be8:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x8049bec:   66 83 7d d0 00                  	cmp word ptr [ebp - 0x30], 0
0x8049bf1:   0f 95 c0                        	setne al
0x8049bf4:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x8049bf7:   66 83 45 ce 01                  	add word ptr [ebp - 0x32], 1
0x8049bfc:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049c02:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049c08:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049c0e:   83 e0 05                        	and eax, 5
0x8049c11:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049c14:   e9 74 02 00 00                  	jmp 0x8049e8d <func_1+0x720>
0x8049c19:   c6 45 af 00                     	mov byte ptr [ebp - 0x51], 0
0x8049c1d:   66 c7 85 46 ff ff ff ff ff      	mov word ptr [ebp - 0xba], 0xffff
0x8049c26:   c7 85 40 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc0], 0xffffffff
0x8049c30:   c7 85 3c ff ff ff 7b dd d5 38   	mov dword ptr [ebp - 0xc4], 0x38d5dd7b
0x8049c3a:   c7 85 38 ff ff ff e1 e1 e2 61   	mov dword ptr [ebp - 0xc8], 0x61e2e1e1
0x8049c44:   c7 45 bc 0e 00 00 00            	mov dword ptr [ebp - 0x44], 0xe
0x8049c4b:   eb 2f                           	jmp 0x8049c7c <func_1+0x50f>
0x8049c4d:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049c51:   74 1a                           	je 0x8049c6d <func_1+0x500>
0x8049c53:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049c57:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x8049c5b:   66 83 7d cc 00                  	cmp word ptr [ebp - 0x34], 0
0x8049c60:   75 0a                           	jne 0x8049c6c <func_1+0x4ff>
0x8049c62:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c65:   c0 e8 03                        	shr al, 3
0x8049c68:   84 c0                           	test al, al
0x8049c6a:   74 00                           	je 0x8049c6c <func_1+0x4ff>
0x8049c6c:   90                              	nop 
0x8049c6d:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049c70:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049c73:   09 d0                           	or eax, edx
0x8049c75:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049c78:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x8049c7c:   83 7d bc f6                     	cmp dword ptr [ebp - 0x44], -0xa
0x8049c80:   7d cb                           	jge 0x8049c4d <func_1+0x4e0>
0x8049c82:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c85:   98                              	cwde 
0x8049c86:   0f be 4d b7                     	movsx ecx, byte ptr [ebp - 0x49]
0x8049c8a:   99                              	cdq 
0x8049c8b:   f7 f9                           	idiv ecx
0x8049c8d:   89 d0                           	mov eax, edx
0x8049c8f:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049c92:   c7 85 34 ff ff ff 88 5c f1 dc   	mov dword ptr [ebp - 0xcc], 0xdcf15c88
0x8049c9c:   0f bf 45 cc                     	movsx eax, word ptr [ebp - 0x34]
0x8049ca0:   81 8d 7c ff ff ff 0e 27 00 00   	or dword ptr [ebp - 0x84], 0x270e
0x8049caa:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049cb0:   0f 9c c3                        	setl bl
0x8049cb3:   83 7d d4 ff                     	cmp dword ptr [ebp - 0x2c], -1
0x8049cb7:   0f 95 c0                        	setne al
0x8049cba:   0f b6 d0                        	movzx edx, al
0x8049cbd:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049cc3:   98                              	cwde 
0x8049cc4:   89 c1                           	mov ecx, eax
0x8049cc6:   d3 e2                           	shl edx, cl
0x8049cc8:   89 d0                           	mov eax, edx
0x8049cca:   89 c1                           	mov ecx, eax
0x8049ccc:   ba ab aa aa aa                  	mov edx, 0xaaaaaaab
0x8049cd1:   89 c8                           	mov eax, ecx
0x8049cd3:   f7 e2                           	mul edx
0x8049cd5:   d1 ea                           	shr edx, 1
0x8049cd7:   89 d0                           	mov eax, edx
0x8049cd9:   01 c0                           	add eax, eax
0x8049cdb:   01 d0                           	add eax, edx
0x8049cdd:   29 c1                           	sub ecx, eax
0x8049cdf:   89 ca                           	mov edx, ecx
0x8049ce1:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049ce5:   31 c2                           	xor edx, eax
0x8049ce7:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x8049cee:   09 c2                           	or edx, eax
0x8049cf0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049cf3:   09 c2                           	or edx, eax
0x8049cf5:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049cf8:   39 c2                           	cmp edx, eax
0x8049cfa:   0f 96 c0                        	setbe al
0x8049cfd:   09 d8                           	or eax, ebx
0x8049cff:   0f b6 d0                        	movzx edx, al
0x8049d02:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049d06:   39 c2                           	cmp edx, eax
0x8049d08:   0f 9e c0                        	setle al
0x8049d0b:   0f b6 c0                        	movzx eax, al
0x8049d0e:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049d14:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x8049d18:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x8049d1c:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x8049d1f:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049d23:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049d26:   0f 94 c0                        	sete al
0x8049d29:   0f b6 c0                        	movzx eax, al
0x8049d2c:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049d2f:   29 d0                           	sub eax, edx
0x8049d31:   66 c1 e8 03                     	shr ax, 3
0x8049d35:   89 c2                           	mov edx, eax
0x8049d37:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049d3b:   21 d0                           	and eax, edx
0x8049d3d:   98                              	cwde 
0x8049d3e:   8d 14 85 00 00 00 00            	lea edx, [eax*4]
0x8049d45:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x8049d49:   39 c2                           	cmp edx, eax
0x8049d4b:   0f 95 c0                        	setne al
0x8049d4e:   0f b6 c0                        	movzx eax, al
0x8049d51:   89 c2                           	mov edx, eax
0x8049d53:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049d57:   21 d0                           	and eax, edx
0x8049d59:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x8049d5c:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049d60:   3a 45 d3                        	cmp al, byte ptr [ebp - 0x2d]
0x8049d63:   0f 96 c0                        	setbe al
0x8049d66:   0f b6 c0                        	movzx eax, al
0x8049d69:   33 85 7c ff ff ff               	xor eax, dword ptr [ebp - 0x84]
0x8049d6f:   89 c2                           	mov edx, eax
0x8049d71:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049d75:   39 c2                           	cmp edx, eax
0x8049d77:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049d7d:   83 f0 f9                        	xor eax, 0xfffffff9
0x8049d80:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049d86:   0f 93 c0                        	setae al
0x8049d89:   0f b6 c0                        	movzx eax, al
0x8049d8c:   89 c2                           	mov edx, eax
0x8049d8e:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x8049d92:   09 d0                           	or eax, edx
0x8049d94:   88 45 b6                        	mov byte ptr [ebp - 0x4a], al
0x8049d97:   80 7d d3 00                     	cmp byte ptr [ebp - 0x2d], 0
0x8049d9b:   0f 85 eb 00 00 00               	jne 0x8049e8c <func_1+0x71f>
0x8049da1:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049da4:   0f bf d0                        	movsx edx, ax
0x8049da7:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049dad:   89 c1                           	mov ecx, eax
0x8049daf:   0f bf 45 cc                     	movsx eax, word ptr [ebp - 0x34]
0x8049db3:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049db9:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049dbf:   0f b7 c0                        	movzx eax, ax
0x8049dc2:   01 c0                           	add eax, eax
0x8049dc4:   31 c8                           	xor eax, ecx
0x8049dc6:   98                              	cwde 
0x8049dc7:   29 c2                           	sub edx, eax
0x8049dc9:   89 d0                           	mov eax, edx
0x8049dcb:   09 85 38 ff ff ff               	or dword ptr [ebp - 0xc8], eax
0x8049dd1:   c7 45 ec 08 00 00 00            	mov dword ptr [ebp - 0x14], 8
0x8049dd8:   83 7d ec fc                     	cmp dword ptr [ebp - 0x14], -4
0x8049ddc:   0f 85 ab 00 00 00               	jne 0x8049e8d <func_1+0x720>
0x8049de2:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x8049de6:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x8049dea:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x8049dee:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049df2:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049df8:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x8049dfc:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x8049e02:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x8049e06:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x8049e0c:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049e10:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049e16:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x8049e1a:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x8049e1e:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049e22:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049e25:   52                              	push edx
0x8049e26:   53                              	push ebx
0x8049e27:   57                              	push edi
0x8049e28:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049e2e:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049e31:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049e37:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049e3d:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049e40:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049e46:   56                              	push esi
0x8049e47:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049e4a:   51                              	push ecx
0x8049e4b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e4e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e51:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049e54:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049e57:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049e5a:   50                              	push eax
0x8049e5b:   e8 c6 f7 ff ff                  	call 0x8049626 <set_var>
0x8049e60:   83 c4 4c                        	add esp, 0x4c
0x8049e63:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049e67:   e9 24 0a 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x8049e6c:   c6 85 75 ff ff ff c8            	mov byte ptr [ebp - 0x8b], 0xc8
0x8049e73:   80 6d c6 01                     	sub byte ptr [ebp - 0x3a], 1
0x8049e77:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049e7d:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049e80:   0f be 85 75 ff ff ff            	movsx eax, byte ptr [ebp - 0x8b]
0x8049e87:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049e8a:   eb 01                           	jmp 0x8049e8d <func_1+0x720>
0x8049e8c:   90                              	nop 
0x8049e8d:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049e91:   83 c0 01                        	add eax, 1
0x8049e94:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049e97:   80 7d f3 1e                     	cmp byte ptr [ebp - 0xd], 0x1e
0x8049e9b:   0f 86 9f f9 ff ff               	jbe 0x8049840 <func_1+0xd3>
0x8049ea1:   eb 01                           	jmp 0x8049ea4 <func_1+0x737>
0x8049ea3:   90                              	nop 
0x8049ea4:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049ea8:   74 0d                           	je 0x8049eb7 <func_1+0x74a>
0x8049eaa:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049eae:   74 07                           	je 0x8049eb7 <func_1+0x74a>
0x8049eb0:   b8 01 00 00 00                  	mov eax, 1
0x8049eb5:   eb 05                           	jmp 0x8049ebc <func_1+0x74f>
0x8049eb7:   b8 00 00 00 00                  	mov eax, 0
0x8049ebc:   3d 8f 00 00 00                  	cmp eax, 0x8f
0x8049ec1:   0f 9f c0                        	setg al
0x8049ec4:   0f b6 c0                        	movzx eax, al
0x8049ec7:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049eca:   81 7d bc cd 07 d6 74            	cmp dword ptr [ebp - 0x44], 0x74d607cd
0x8049ed1:   0f 84 8a 00 00 00               	je 0x8049f61 <func_1+0x7f4>
0x8049ed7:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x8049edb:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x8049edf:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x8049ee3:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049ee7:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049eed:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x8049ef1:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x8049ef7:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x8049efb:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x8049f01:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049f05:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049f0b:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x8049f0f:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x8049f13:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049f17:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049f1a:   52                              	push edx
0x8049f1b:   53                              	push ebx
0x8049f1c:   57                              	push edi
0x8049f1d:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049f23:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049f26:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049f2c:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049f32:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049f35:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x8049f3b:   56                              	push esi
0x8049f3c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049f3f:   51                              	push ecx
0x8049f40:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049f43:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049f46:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f49:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049f4c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f4f:   50                              	push eax
0x8049f50:   e8 d1 f6 ff ff                  	call 0x8049626 <set_var>
0x8049f55:   83 c4 4c                        	add esp, 0x4c
0x8049f58:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049f5c:   e9 2f 09 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x8049f61:   c7 85 20 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xe0], 6
0x8049f6b:   c7 45 a8 51 be 96 2d            	mov dword ptr [ebp - 0x58], 0x2d96be51
0x8049f72:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x8049f7c:   c7 85 18 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xe8], 8
0x8049f86:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x8049f90:   c6 45 c7 00                     	mov byte ptr [ebp - 0x39], 0
0x8049f94:   80 7d c7 2f                     	cmp byte ptr [ebp - 0x39], 0x2f
0x8049f98:   0f 84 8c 00 00 00               	je 0x804a02a <func_1+0x8bd>
0x8049f9e:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x8049fa2:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x8049fa6:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x8049faa:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x8049fae:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049fb4:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x8049fb8:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x8049fbe:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x8049fc2:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x8049fc8:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049fcc:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049fd2:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x8049fd6:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x8049fda:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049fde:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049fe1:   52                              	push edx
0x8049fe2:   53                              	push ebx
0x8049fe3:   57                              	push edi
0x8049fe4:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049fea:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049fed:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049ff3:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x8049ff9:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049ffc:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a002:   56                              	push esi
0x804a003:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a006:   51                              	push ecx
0x804a007:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a00a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a00d:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a010:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a013:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a016:   50                              	push eax
0x804a017:   e8 0a f6 ff ff                  	call 0x8049626 <set_var>
0x804a01c:   83 c4 4c                        	add esp, 0x4c
0x804a01f:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a025:   e9 66 08 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x804a02a:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a02e:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a031:   89 95 20 ff ff ff               	mov dword ptr [ebp - 0xe0], edx
0x804a037:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x804a03d:   0f 9e c0                        	setle al
0x804a040:   0f b6 d0                        	movzx edx, al
0x804a043:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a046:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x804a049:   0f 9f c0                        	setg al
0x804a04c:   0f b6 c0                        	movzx eax, al
0x804a04f:   01 c2                           	add edx, eax
0x804a051:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a054:   29 c2                           	sub edx, eax
0x804a056:   89 d0                           	mov eax, edx
0x804a058:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x804a05c:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x804a060:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x804a064:   09 d0                           	or eax, edx
0x804a066:   66 89 45 a0                     	mov word ptr [ebp - 0x60], ax
0x804a06a:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x804a06e:   33 45 a8                        	xor eax, dword ptr [ebp - 0x58]
0x804a071:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a074:   c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x804a078:   e9 84 07 00 00                  	jmp 0x804a801 <func_1+0x1094>
0x804a07d:   66 c7 85 12 ff ff ff 00 00      	mov word ptr [ebp - 0xee], 0
0x804a086:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x804a090:   c7 85 08 ff ff ff 1a 4f f3 4f   	mov dword ptr [ebp - 0xf8], 0x4ff34f1a
0x804a09a:   66 c7 85 06 ff ff ff 01 00      	mov word ptr [ebp - 0xfa], 1
0x804a0a3:   c7 85 00 ff ff ff e1 86 09 d4   	mov dword ptr [ebp - 0x100], 0xd40986e1
0x804a0ad:   c6 85 ff fe ff ff 45            	mov byte ptr [ebp - 0x101], 0x45
0x804a0b4:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a0b8:   0f 84 8a 04 00 00               	je 0x804a548 <func_1+0xddb>
0x804a0be:   66 c7 85 f4 fe ff ff 67 a1      	mov word ptr [ebp - 0x10c], 0xa167
0x804a0c7:   c7 85 f0 fe ff ff c3 7d 46 9a   	mov dword ptr [ebp - 0x110], 0x9a467dc3
0x804a0d1:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x804a0db:   c6 85 eb fe ff ff f6            	mov byte ptr [ebp - 0x115], 0xf6
0x804a0e2:   66 c7 85 e8 fe ff ff fb ff      	mov word ptr [ebp - 0x118], 0xfffb
0x804a0eb:   c6 85 e7 fe ff ff 00            	mov byte ptr [ebp - 0x119], 0
0x804a0f2:   0f b6 55 f3                     	movzx edx, byte ptr [ebp - 0xd]
0x804a0f6:   80 fa 83                        	cmp dl, 0x83
0x804a0f9:   0f 93 c0                        	setae al
0x804a0fc:   b9 83 ff ff ff                  	mov ecx, 0xffffff83
0x804a101:   0f af c1                        	imul eax, ecx
0x804a104:   29 c2                           	sub edx, eax
0x804a106:   89 d0                           	mov eax, edx
0x804a108:   0f b6 d0                        	movzx edx, al
0x804a10b:   c6 45 d3 4f                     	mov byte ptr [ebp - 0x2d], 0x4f
0x804a10f:   b8 01 00 00 00                  	mov eax, 1
0x804a114:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a117:   0f 96 c0                        	setbe al
0x804a11a:   0f b6 d8                        	movzx ebx, al
0x804a11d:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a120:   98                              	cwde 
0x804a121:   89 c1                           	mov ecx, eax
0x804a123:   d3 fb                           	sar ebx, cl
0x804a125:   89 d8                           	mov eax, ebx
0x804a127:   39 c2                           	cmp edx, eax
0x804a129:   0f 9d c0                        	setge al
0x804a12c:   0f b6 c0                        	movzx eax, al
0x804a12f:   39 45 bc                        	cmp dword ptr [ebp - 0x44], eax
0x804a132:   81 7d d4 74 97 00 00            	cmp dword ptr [ebp - 0x2c], 0x9774
0x804a139:   0f 96 c0                        	setbe al
0x804a13c:   0f b6 c0                        	movzx eax, al
0x804a13f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a142:   0f bf 8d 12 ff ff ff            	movsx ecx, word ptr [ebp - 0xee]
0x804a149:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a14c:   f7 d8                           	neg eax
0x804a14e:   66 c1 e8 06                     	shr ax, 6
0x804a152:   89 c2                           	mov edx, eax
0x804a154:   bb b5 ff ff ff                  	mov ebx, 0xffffffb5
0x804a159:   89 d8                           	mov eax, ebx
0x804a15b:   f6 ea                           	imul dl
0x804a15d:   66 c1 e8 08                     	shr ax, 8
0x804a161:   01 d0                           	add eax, edx
0x804a163:   c0 f8 06                        	sar al, 6
0x804a166:   c0 fa 07                        	sar dl, 7
0x804a169:   29 c2                           	sub edx, eax
0x804a16b:   89 d0                           	mov eax, edx
0x804a16d:   0f be c0                        	movsx eax, al
0x804a170:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a176:   39 8d f0 fe ff ff               	cmp dword ptr [ebp - 0x110], ecx
0x804a17c:   0f 9c c0                        	setl al
0x804a17f:   0f b6 c0                        	movzx eax, al
0x804a182:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a188:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a18e:   0b 45 c0                        	or eax, dword ptr [ebp - 0x40]
0x804a191:   85 c0                           	test eax, eax
0x804a193:   0f 95 c0                        	setne al
0x804a196:   0f b6 d0                        	movzx edx, al
0x804a199:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x804a19d:   39 c2                           	cmp edx, eax
0x804a19f:   0f 9d c0                        	setge al
0x804a1a2:   0f b6 c0                        	movzx eax, al
0x804a1a5:   33 45 a8                        	xor eax, dword ptr [ebp - 0x58]
0x804a1a8:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x804a1ae:   0f 9d c0                        	setge al
0x804a1b1:   0f b6 c0                        	movzx eax, al
0x804a1b4:   66 33 85 12 ff ff ff            	xor ax, word ptr [ebp - 0xee]
0x804a1bb:   0f bf d0                        	movsx edx, ax
0x804a1be:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a1c4:   98                              	cwde 
0x804a1c5:   89 c1                           	mov ecx, eax
0x804a1c7:   d3 e2                           	shl edx, cl
0x804a1c9:   89 d0                           	mov eax, edx
0x804a1cb:   98                              	cwde 
0x804a1cc:   69 c0 96 e7 ff ff               	imul eax, eax, 0xffffe796
0x804a1d2:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a1d5:   7f 72                           	jg 0x804a249 <func_1+0xadc>
0x804a1d7:   c7 85 d8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x128], 0
0x804a1e1:   83 85 d8 fe ff ff 01            	add dword ptr [ebp - 0x128], 1
0x804a1e8:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804a1ef:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a1f2:   0f b7 c0                        	movzx eax, ax
0x804a1f5:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a1f8:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804a1fc:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x804a1ff:   09 95 0c ff ff ff               	or dword ptr [ebp - 0xf4], edx
0x804a205:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x804a20b:   0f 94 c0                        	sete al
0x804a20e:   0f b6 c8                        	movzx ecx, al
0x804a211:   0f b6 55 d3                     	movzx edx, byte ptr [ebp - 0x2d]
0x804a215:   80 7d db 4d                     	cmp byte ptr [ebp - 0x25], 0x4d
0x804a219:   0f 97 c0                        	seta al
0x804a21c:   0f b6 c0                        	movzx eax, al
0x804a21f:   39 c2                           	cmp edx, eax
0x804a221:   0f 9f c0                        	setg al
0x804a224:   0f b6 c0                        	movzx eax, al
0x804a227:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x804a22a:   0f bf da                        	movsx ebx, dx
0x804a22d:   99                              	cdq 
0x804a22e:   f7 fb                           	idiv ebx
0x804a230:   0f bf 85 f4 fe ff ff            	movsx eax, word ptr [ebp - 0x10c]
0x804a237:   31 d0                           	xor eax, edx
0x804a239:   39 c1                           	cmp ecx, eax
0x804a23b:   0f 9f c0                        	setg al
0x804a23e:   0f b6 c0                        	movzx eax, al
0x804a241:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a244:   e9 d0 00 00 00                  	jmp 0x804a319 <func_1+0xbac>
0x804a249:   66 c7 85 e4 fe ff ff ff ff      	mov word ptr [ebp - 0x11c], 0xffff
0x804a252:   c7 85 e0 fe ff ff f1 03 10 de   	mov dword ptr [ebp - 0x120], 0xde1003f1
0x804a25c:   c7 85 dc fe ff ff f5 5a 8a 3e   	mov dword ptr [ebp - 0x124], 0x3e8a5af5
0x804a266:   0f b6 55 c6                     	movzx edx, byte ptr [ebp - 0x3a]
0x804a26a:   0f bf 85 12 ff ff ff            	movsx eax, word ptr [ebp - 0xee]
0x804a271:   01 c2                           	add edx, eax
0x804a273:   0f bf 85 12 ff ff ff            	movsx eax, word ptr [ebp - 0xee]
0x804a27a:   21 c2                           	and edx, eax
0x804a27c:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804a280:   21 d0                           	and eax, edx
0x804a282:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a285:   76 07                           	jbe 0x804a28e <func_1+0xb21>
0x804a287:   b8 fb 19 43 2f                  	mov eax, 0x2f4319fb
0x804a28c:   eb 05                           	jmp 0x804a293 <func_1+0xb26>
0x804a28e:   b8 fa 19 43 2f                  	mov eax, 0x2f4319fa
0x804a293:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a296:   66 83 7d cc 00                  	cmp word ptr [ebp - 0x34], 0
0x804a29b:   74 71                           	je 0x804a30e <func_1+0xba1>
0x804a29d:   0f b7 55 a2                     	movzx edx, word ptr [ebp - 0x5e]
0x804a2a1:   0f bf 45 cc                     	movsx eax, word ptr [ebp - 0x34]
0x804a2a5:   21 d0                           	and eax, edx
0x804a2a7:   09 85 e0 fe ff ff               	or dword ptr [ebp - 0x120], eax
0x804a2ad:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a2b0:   0f be c0                        	movsx eax, al
0x804a2b3:   0f b7 95 e4 fe ff ff            	movzx edx, word ptr [ebp - 0x11c]
0x804a2ba:   0f be fa                        	movsx edi, dl
0x804a2bd:   99                              	cdq 
0x804a2be:   f7 ff                           	idiv edi
0x804a2c0:   89 c2                           	mov edx, eax
0x804a2c2:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a2c6:   0f af c2                        	imul eax, edx
0x804a2c9:   89 c2                           	mov edx, eax
0x804a2cb:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a2cf:   31 d0                           	xor eax, edx
0x804a2d1:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a2d5:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a2d9:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a2df:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a2e5:   3b 85 dc fe ff ff               	cmp eax, dword ptr [ebp - 0x124]
0x804a2eb:   0f 95 c0                        	setne al
0x804a2ee:   0f b6 c0                        	movzx eax, al
0x804a2f1:   89 c2                           	mov edx, eax
0x804a2f3:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a2f9:   0f af c2                        	imul eax, edx
0x804a2fc:   8b 95 18 ff ff ff               	mov edx, dword ptr [ebp - 0xe8]
0x804a302:   66 39 d0                        	cmp ax, dx
0x804a305:   74 07                           	je 0x804a30e <func_1+0xba1>
0x804a307:   b8 01 00 00 00                  	mov eax, 1
0x804a30c:   eb 05                           	jmp 0x804a313 <func_1+0xba6>
0x804a30e:   b8 00 00 00 00                  	mov eax, 0
0x804a313:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a319:   c7 45 bc fe ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffffe
0x804a320:   83 7d bc 13                     	cmp dword ptr [ebp - 0x44], 0x13
0x804a324:   0f 84 cd 03 00 00               	je 0x804a6f7 <func_1+0xf8a>
0x804a32a:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a32e:   0f 84 89 00 00 00               	je 0x804a3bd <func_1+0xc50>
0x804a334:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x804a338:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x804a33c:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x804a340:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a344:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a34a:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a34e:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a354:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a358:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x804a35e:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a362:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a368:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a36c:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x804a370:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a374:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a377:   52                              	push edx
0x804a378:   53                              	push ebx
0x804a379:   57                              	push edi
0x804a37a:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a380:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a383:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a389:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a38f:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a392:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a398:   56                              	push esi
0x804a399:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a39c:   51                              	push ecx
0x804a39d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a3a0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3a3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3a6:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3a9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3ac:   50                              	push eax
0x804a3ad:   e8 74 f2 ff ff                  	call 0x8049626 <set_var>
0x804a3b2:   83 c4 4c                        	add esp, 0x4c
0x804a3b5:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a3b8:   e9 d3 04 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x804a3bd:   83 ad 14 ff ff ff 01            	sub dword ptr [ebp - 0xec], 1
0x804a3c4:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a3ca:   ba 9a ff ff ff                  	mov edx, 0xffffff9a
0x804a3cf:   29 c2                           	sub edx, eax
0x804a3d1:   89 d0                           	mov eax, edx
0x804a3d3:   0f be d0                        	movsx edx, al
0x804a3d6:   66 81 7d ce ec cd               	cmp word ptr [ebp - 0x32], 0xcdec
0x804a3dc:   0f 96 c0                        	setbe al
0x804a3df:   0f b6 c0                        	movzx eax, al
0x804a3e2:   29 c2                           	sub edx, eax
0x804a3e4:   89 d0                           	mov eax, edx
0x804a3e6:   85 c0                           	test eax, eax
0x804a3e8:   0f 9f c0                        	setg al
0x804a3eb:   0f b6 d0                        	movzx edx, al
0x804a3ee:   0f be 85 eb fe ff ff            	movsx eax, byte ptr [ebp - 0x115]
0x804a3f5:   39 c2                           	cmp edx, eax
0x804a3f7:   0f 94 c0                        	sete al
0x804a3fa:   0f b6 c0                        	movzx eax, al
0x804a3fd:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x804a403:   0f 95 c0                        	setne al
0x804a406:   0f b6 c0                        	movzx eax, al
0x804a409:   23 85 08 ff ff ff               	and eax, dword ptr [ebp - 0xf8]
0x804a40f:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a415:   83 bd f0 fe ff ff 00            	cmp dword ptr [ebp - 0x110], 0
0x804a41c:   74 0e                           	je 0x804a42c <func_1+0xcbf>
0x804a41e:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a423:   74 07                           	je 0x804a42c <func_1+0xcbf>
0x804a425:   b8 01 00 00 00                  	mov eax, 1
0x804a42a:   eb 05                           	jmp 0x804a431 <func_1+0xcc4>
0x804a42c:   b8 00 00 00 00                  	mov eax, 0
0x804a431:   0f b7 d0                        	movzx edx, ax
0x804a434:   0f b7 85 e8 fe ff ff            	movzx eax, word ptr [ebp - 0x118]
0x804a43b:   0f b7 c0                        	movzx eax, ax
0x804a43e:   0f af c2                        	imul eax, edx
0x804a441:   85 c0                           	test eax, eax
0x804a443:   74 0d                           	je 0x804a452 <func_1+0xce5>
0x804a445:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a449:   74 07                           	je 0x804a452 <func_1+0xce5>
0x804a44b:   b8 01 00 00 00                  	mov eax, 1
0x804a450:   eb 05                           	jmp 0x804a457 <func_1+0xcea>
0x804a452:   b8 00 00 00 00                  	mov eax, 0
0x804a457:   66 89 85 06 ff ff ff            	mov word ptr [ebp - 0xfa], ax
0x804a45e:   0f be 8d e7 fe ff ff            	movsx ecx, byte ptr [ebp - 0x119]
0x804a465:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a469:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x804a46d:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a471:   66 89 45 a0                     	mov word ptr [ebp - 0x60], ax
0x804a475:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x804a479:   89 c3                           	mov ebx, eax
0x804a47b:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x804a481:   98                              	cwde 
0x804a482:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a485:   0f bf fa                        	movsx edi, dx
0x804a488:   99                              	cdq 
0x804a489:   f7 ff                           	idiv edi
0x804a48b:   3c de                           	cmp al, 0xde
0x804a48d:   0f 93 c2                        	setae dl
0x804a490:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a493:   29 c2                           	sub edx, eax
0x804a495:   89 d0                           	mov eax, edx
0x804a497:   01 d8                           	add eax, ebx
0x804a499:   0f b6 c0                        	movzx eax, al
0x804a49c:   c1 e0 02                        	shl eax, 2
0x804a49f:   83 f8 01                        	cmp eax, 1
0x804a4a2:   0f 95 c0                        	setne al
0x804a4a5:   0f b6 c0                        	movzx eax, al
0x804a4a8:   39 c1                           	cmp ecx, eax
0x804a4aa:   7c 07                           	jl 0x804a4b3 <func_1+0xd46>
0x804a4ac:   83 bd ec fe ff ff 00            	cmp dword ptr [ebp - 0x114], 0
0x804a4b3:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a4b9:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a4bf:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x804a4c3:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x804a4c7:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x804a4cb:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a4cf:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a4d5:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a4d9:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a4df:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a4e3:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x804a4e9:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a4ed:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a4f3:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a4f7:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x804a4fb:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a4ff:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a502:   52                              	push edx
0x804a503:   53                              	push ebx
0x804a504:   57                              	push edi
0x804a505:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a50b:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a50e:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a514:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a51a:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a51d:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a523:   56                              	push esi
0x804a524:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a527:   51                              	push ecx
0x804a528:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a52b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a52e:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a531:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a534:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a537:   50                              	push eax
0x804a538:   e8 e9 f0 ff ff                  	call 0x8049626 <set_var>
0x804a53d:   83 c4 4c                        	add esp, 0x4c
0x804a540:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a543:   e9 48 03 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x804a548:   c7 85 f8 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x108], 0xfffffff9
0x804a552:   c6 85 f7 fe ff ff 39            	mov byte ptr [ebp - 0x109], 0x39
0x804a559:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x804a560:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a563:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x804a567:   89 d1                           	mov ecx, edx
0x804a569:   c1 e1 04                        	shl ecx, 4
0x804a56c:   0f be 55 b7                     	movsx edx, byte ptr [ebp - 0x49]
0x804a570:   89 c3                           	mov ebx, eax
0x804a572:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a576:   21 d8                           	and eax, ebx
0x804a578:   88 45 c7                        	mov byte ptr [ebp - 0x39], al
0x804a57b:   80 7d c7 a0                     	cmp byte ptr [ebp - 0x39], 0xa0
0x804a57f:   0f 97 c0                        	seta al
0x804a582:   0f b6 c0                        	movzx eax, al
0x804a585:   39 c2                           	cmp edx, eax
0x804a587:   0f 9e c0                        	setle al
0x804a58a:   0f b6 d0                        	movzx edx, al
0x804a58d:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a593:   29 c2                           	sub edx, eax
0x804a595:   89 d0                           	mov eax, edx
0x804a597:   85 c0                           	test eax, eax
0x804a599:   0f 9e c0                        	setle al
0x804a59c:   29 c1                           	sub ecx, eax
0x804a59e:   89 c8                           	mov eax, ecx
0x804a5a0:   83 e0 ef                        	and eax, 0xffffffef
0x804a5a3:   0f be c0                        	movsx eax, al
0x804a5a6:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x804a5a9:   0f be ca                        	movsx ecx, dl
0x804a5ac:   99                              	cdq 
0x804a5ad:   f7 f9                           	idiv ecx
0x804a5af:   89 d0                           	mov eax, edx
0x804a5b1:   0f b6 d0                        	movzx edx, al
0x804a5b4:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a5ba:   0f b6 c0                        	movzx eax, al
0x804a5bd:   89 c1                           	mov ecx, eax
0x804a5bf:   d3 fa                           	sar edx, cl
0x804a5c1:   89 d0                           	mov eax, edx
0x804a5c3:   0f b6 c0                        	movzx eax, al
0x804a5c6:   83 e0 0e                        	and eax, 0xe
0x804a5c9:   0f b7 55 96                     	movzx edx, word ptr [ebp - 0x6a]
0x804a5cd:   0f b6 fa                        	movzx edi, dl
0x804a5d0:   99                              	cdq 
0x804a5d1:   f7 ff                           	idiv edi
0x804a5d3:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x804a5d9:   0f 97 c0                        	seta al
0x804a5dc:   0f b6 c0                        	movzx eax, al
0x804a5df:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a5e5:   8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x804a5e8:   0f bf bd 12 ff ff ff            	movsx edi, word ptr [ebp - 0xee]
0x804a5ef:   b8 ea 86 ab 0c                  	mov eax, 0xcab86ea
0x804a5f4:   ba 00 00 00 00                  	mov edx, 0
0x804a5f9:   f7 f7                           	div edi
0x804a5fb:   0f b6 9d ff fe ff ff            	movzx ebx, byte ptr [ebp - 0x101]
0x804a602:   99                              	cdq 
0x804a603:   f7 fb                           	idiv ebx
0x804a605:   89 d0                           	mov eax, edx
0x804a607:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a60a:   c7 45 c0 f7 ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffff7
0x804a611:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a614:   89 c2                           	mov edx, eax
0x804a616:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x804a61a:   29 c2                           	sub edx, eax
0x804a61c:   89 d0                           	mov eax, edx
0x804a61e:   0f be c0                        	movsx eax, al
0x804a621:   f7 d8                           	neg eax
0x804a623:   89 c7                           	mov edi, eax
0x804a625:   89 c8                           	mov eax, ecx
0x804a627:   99                              	cdq 
0x804a628:   f7 ff                           	idiv edi
0x804a62a:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a62d:   81 bd 18 ff ff ff 00 02 00 00   	cmp dword ptr [ebp - 0xe8], 0x200
0x804a637:   0f 97 c0                        	seta al
0x804a63a:   0f b6 d0                        	movzx edx, al
0x804a63d:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a641:   39 c2                           	cmp edx, eax
0x804a643:   0f 9c c0                        	setl al
0x804a646:   0f b6 d0                        	movzx edx, al
0x804a649:   0f b6 45 b6                     	movzx eax, byte ptr [ebp - 0x4a]
0x804a64d:   39 c2                           	cmp edx, eax
0x804a64f:   0f 95 c0                        	setne al
0x804a652:   0f b6 d0                        	movzx edx, al
0x804a655:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a659:   39 c2                           	cmp edx, eax
0x804a65b:   0f 9f c0                        	setg al
0x804a65e:   0f b6 d0                        	movzx edx, al
0x804a661:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a665:   39 c2                           	cmp edx, eax
0x804a667:   74 11                           	je 0x804a67a <func_1+0xf0d>
0x804a669:   66 83 bd 06 ff ff ff 00         	cmp word ptr [ebp - 0xfa], 0
0x804a671:   74 07                           	je 0x804a67a <func_1+0xf0d>
0x804a673:   b8 01 00 00 00                  	mov eax, 1
0x804a678:   eb 05                           	jmp 0x804a67f <func_1+0xf12>
0x804a67a:   b8 00 00 00 00                  	mov eax, 0
0x804a67f:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a682:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a686:   75 07                           	jne 0x804a68f <func_1+0xf22>
0x804a688:   80 bd f7 fe ff ff 00            	cmp byte ptr [ebp - 0x109], 0
0x804a68f:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a696:   98                              	cwde 
0x804a697:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x804a69a:   0f b6 55 d3                     	movzx edx, byte ptr [ebp - 0x2d]
0x804a69e:   0f b7 85 06 ff ff ff            	movzx eax, word ptr [ebp - 0xfa]
0x804a6a5:   0f b6 c8                        	movzx ecx, al
0x804a6a8:   66 83 bd 12 ff ff ff ff         	cmp word ptr [ebp - 0xee], -1
0x804a6b0:   0f 94 c0                        	sete al
0x804a6b3:   0f b6 c0                        	movzx eax, al
0x804a6b6:   29 c1                           	sub ecx, eax
0x804a6b8:   89 c8                           	mov eax, ecx
0x804a6ba:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x804a6c0:   0f 9c c0                        	setl al
0x804a6c3:   0f b6 c0                        	movzx eax, al
0x804a6c6:   39 c2                           	cmp edx, eax
0x804a6c8:   0f 9f c0                        	setg al
0x804a6cb:   0f b6 c0                        	movzx eax, al
0x804a6ce:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a6d1:   0f 94 c0                        	sete al
0x804a6d4:   0f b6 d0                        	movzx edx, al
0x804a6d7:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a6da:   0f be c0                        	movsx eax, al
0x804a6dd:   0f af c2                        	imul eax, edx
0x804a6e0:   8b 4d d4                        	mov ecx, dword ptr [ebp - 0x2c]
0x804a6e3:   99                              	cdq 
0x804a6e4:   f7 f9                           	idiv ecx
0x804a6e6:   89 d0                           	mov eax, edx
0x804a6e8:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x804a6ee:   0f 95 c0                        	setne al
0x804a6f1:   0f b6 c0                        	movzx eax, al
0x804a6f4:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a6f7:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804a6fe:   83 7d e4 e2                     	cmp dword ptr [ebp - 0x1c], -0x1e
0x804a702:   0f 84 a4 00 00 00               	je 0x804a7ac <func_1+0x103f>
0x804a708:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a70c:   75 06                           	jne 0x804a714 <func_1+0xfa7>
0x804a70e:   80 7d b6 00                     	cmp byte ptr [ebp - 0x4a], 0
0x804a712:   74 07                           	je 0x804a71b <func_1+0xfae>
0x804a714:   b8 01 00 00 00                  	mov eax, 1
0x804a719:   eb 05                           	jmp 0x804a720 <func_1+0xfb3>
0x804a71b:   b8 00 00 00 00                  	mov eax, 0
0x804a720:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a723:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x804a727:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x804a72b:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x804a72f:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a733:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a739:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a73d:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a743:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a747:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x804a74d:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a751:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a757:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a75b:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x804a75f:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a763:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a766:   52                              	push edx
0x804a767:   53                              	push ebx
0x804a768:   57                              	push edi
0x804a769:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a76f:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a772:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a778:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a77e:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a781:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a787:   56                              	push esi
0x804a788:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a78b:   51                              	push ecx
0x804a78c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a78f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a792:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a795:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a798:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a79b:   50                              	push eax
0x804a79c:   e8 85 ee ff ff                  	call 0x8049626 <set_var>
0x804a7a1:   83 c4 4c                        	add esp, 0x4c
0x804a7a4:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a7a7:   e9 e4 00 00 00                  	jmp 0x804a890 <func_1+0x1123>
0x804a7ac:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a7af:   0f b7 c0                        	movzx eax, ax
0x804a7b2:   c1 e0 0f                        	shl eax, 0xf
0x804a7b5:   89 c2                           	mov edx, eax
0x804a7b7:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a7bb:   74 0e                           	je 0x804a7cb <func_1+0x105e>
0x804a7bd:   c7 45 a8 56 c3 37 e6            	mov dword ptr [ebp - 0x58], 0xe637c356
0x804a7c4:   b8 01 00 00 00                  	mov eax, 1
0x804a7c9:   eb 05                           	jmp 0x804a7d0 <func_1+0x1063>
0x804a7cb:   b8 00 00 00 00                  	mov eax, 0
0x804a7d0:   89 c1                           	mov ecx, eax
0x804a7d2:   80 7d d3 01                     	cmp byte ptr [ebp - 0x2d], 1
0x804a7d6:   77 0e                           	ja 0x804a7e6 <func_1+0x1079>
0x804a7d8:   66 83 7d a0 00                  	cmp word ptr [ebp - 0x60], 0
0x804a7dd:   74 07                           	je 0x804a7e6 <func_1+0x1079>
0x804a7df:   b8 01 00 00 00                  	mov eax, 1
0x804a7e4:   eb 05                           	jmp 0x804a7eb <func_1+0x107e>
0x804a7e6:   b8 00 00 00 00                  	mov eax, 0
0x804a7eb:   29 c1                           	sub ecx, eax
0x804a7ed:   89 c8                           	mov eax, ecx
0x804a7ef:   39 c2                           	cmp edx, eax
0x804a7f1:   0f 95 c0                        	setne al
0x804a7f4:   0f b6 c0                        	movzx eax, al
0x804a7f7:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a7fd:   80 45 f3 01                     	add byte ptr [ebp - 0xd], 1
0x804a801:   80 7d f3 14                     	cmp byte ptr [ebp - 0xd], 0x14
0x804a805:   0f 84 72 f8 ff ff               	je 0x804a07d <func_1+0x910>
0x804a80b:   0f b7 55 a0                     	movzx edx, word ptr [ebp - 0x60]
0x804a80f:   0f b7 5d a2                     	movzx ebx, word ptr [ebp - 0x5e]
0x804a813:   0f b6 7d c6                     	movzx edi, byte ptr [ebp - 0x3a]
0x804a817:   0f b6 45 c7                     	movzx eax, byte ptr [ebp - 0x39]
0x804a81b:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a821:   0f bf 75 cc                     	movsx esi, word ptr [ebp - 0x34]
0x804a825:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a82b:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a82f:   89 8d c8 fe ff ff               	mov dword ptr [ebp - 0x138], ecx
0x804a835:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804a839:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x804a83f:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a843:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x804a847:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a84b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a84e:   52                              	push edx
0x804a84f:   53                              	push ebx
0x804a850:   57                              	push edi
0x804a851:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a857:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a85a:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a860:   ff b5 c8 fe ff ff               	push dword ptr [ebp - 0x138]
0x804a866:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a869:   ff b5 c4 fe ff ff               	push dword ptr [ebp - 0x13c]
0x804a86f:   56                              	push esi
0x804a870:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a873:   51                              	push ecx
0x804a874:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a877:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a87a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a87d:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a880:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a883:   50                              	push eax
0x804a884:   e8 9d ed ff ff                  	call 0x8049626 <set_var>
0x804a889:   83 c4 4c                        	add esp, 0x4c
0x804a88c:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a890:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a893:   5b                              	pop ebx
0x804a894:   5e                              	pop esi
0x804a895:   5f                              	pop edi
0x804a896:   5d                              	pop ebp
0x804a897:   c3                              	ret 
; function: main at 0x804a898 -- 0x804ab62
0x804a898:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a89c:   83 e4 f0                        	and esp, 0xfffffff0
0x804a89f:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a8a2:   55                              	push ebp
0x804a8a3:   89 e5                           	mov ebp, esp
0x804a8a5:   53                              	push ebx
0x804a8a6:   51                              	push ecx
0x804a8a7:   83 ec 10                        	sub esp, 0x10
0x804a8aa:   e8 e1 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a8af:   81 c3 51 27 00 00               	add ebx, 0x2751
0x804a8b5:   89 c8                           	mov eax, ecx
0x804a8b7:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a8be:   83 38 02                        	cmp dword ptr [eax], 2
0x804a8c1:   75 26                           	jne 0x804a8e9 <main+0x51>
0x804a8c3:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a8c6:   83 c0 04                        	add eax, 4
0x804a8c9:   8b 00                           	mov eax, dword ptr [eax]
0x804a8cb:   83 ec 08                        	sub esp, 8
0x804a8ce:   8d 93 48 dc ff ff               	lea edx, [ebx - 0x23b8]
0x804a8d4:   52                              	push edx
0x804a8d5:   50                              	push eax
0x804a8d6:   e8 25 da ff ff                  	call 0x8048300 <strcmp>
0x804a8db:   83 c4 10                        	add esp, 0x10
0x804a8de:   85 c0                           	test eax, eax
0x804a8e0:   75 07                           	jne 0x804a8e9 <main+0x51>
0x804a8e2:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a8e9:   e8 68 db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a8ee:   e8 78 eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a8f3:   e8 75 ee ff ff                  	call 0x804976d <func_1>
0x804a8f8:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a8ff:   0f b6 c0                        	movzx eax, al
0x804a902:   83 ec 04                        	sub esp, 4
0x804a905:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a908:   8d 93 4a dc ff ff               	lea edx, [ebx - 0x23b6]
0x804a90e:   52                              	push edx
0x804a90f:   50                              	push eax
0x804a910:   e8 62 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a915:   83 c4 10                        	add esp, 0x10
0x804a918:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a91e:   89 c2                           	mov edx, eax
0x804a920:   83 ec 04                        	sub esp, 4
0x804a923:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a926:   8d 83 4e dc ff ff               	lea eax, [ebx - 0x23b2]
0x804a92c:   50                              	push eax
0x804a92d:   52                              	push edx
0x804a92e:   e8 44 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a933:   83 c4 10                        	add esp, 0x10
0x804a936:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a93c:   89 c2                           	mov edx, eax
0x804a93e:   83 ec 04                        	sub esp, 4
0x804a941:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a944:   8d 83 53 dc ff ff               	lea eax, [ebx - 0x23ad]
0x804a94a:   50                              	push eax
0x804a94b:   52                              	push edx
0x804a94c:   e8 26 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a951:   83 c4 10                        	add esp, 0x10
0x804a954:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804a95a:   89 c2                           	mov edx, eax
0x804a95c:   83 ec 04                        	sub esp, 4
0x804a95f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a962:   8d 83 58 dc ff ff               	lea eax, [ebx - 0x23a8]
0x804a968:   50                              	push eax
0x804a969:   52                              	push edx
0x804a96a:   e8 08 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a96f:   83 c4 10                        	add esp, 0x10
0x804a972:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a978:   83 ec 04                        	sub esp, 4
0x804a97b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a97e:   8d 93 5d dc ff ff               	lea edx, [ebx - 0x23a3]
0x804a984:   52                              	push edx
0x804a985:   50                              	push eax
0x804a986:   e8 ec eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a98b:   83 c4 10                        	add esp, 0x10
0x804a98e:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a994:   89 c2                           	mov edx, eax
0x804a996:   83 ec 04                        	sub esp, 4
0x804a999:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a99c:   8d 83 62 dc ff ff               	lea eax, [ebx - 0x239e]
0x804a9a2:   50                              	push eax
0x804a9a3:   52                              	push edx
0x804a9a4:   e8 ce eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9a9:   83 c4 10                        	add esp, 0x10
0x804a9ac:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a9b3:   0f b6 c0                        	movzx eax, al
0x804a9b6:   83 ec 04                        	sub esp, 4
0x804a9b9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9bc:   8d 93 67 dc ff ff               	lea edx, [ebx - 0x2399]
0x804a9c2:   52                              	push edx
0x804a9c3:   50                              	push eax
0x804a9c4:   e8 ae eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9c9:   83 c4 10                        	add esp, 0x10
0x804a9cc:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a9d2:   83 ec 04                        	sub esp, 4
0x804a9d5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9d8:   8d 93 6c dc ff ff               	lea edx, [ebx - 0x2394]
0x804a9de:   52                              	push edx
0x804a9df:   50                              	push eax
0x804a9e0:   e8 92 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9e5:   83 c4 10                        	add esp, 0x10
0x804a9e8:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804a9ef:   0f b6 c0                        	movzx eax, al
0x804a9f2:   83 ec 04                        	sub esp, 4
0x804a9f5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9f8:   8d 93 71 dc ff ff               	lea edx, [ebx - 0x238f]
0x804a9fe:   52                              	push edx
0x804a9ff:   50                              	push eax
0x804aa00:   e8 72 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa05:   83 c4 10                        	add esp, 0x10
0x804aa08:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804aa0f:   0f b7 c0                        	movzx eax, ax
0x804aa12:   83 ec 04                        	sub esp, 4
0x804aa15:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa18:   8d 93 76 dc ff ff               	lea edx, [ebx - 0x238a]
0x804aa1e:   52                              	push edx
0x804aa1f:   50                              	push eax
0x804aa20:   e8 52 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa25:   83 c4 10                        	add esp, 0x10
0x804aa28:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aa2e:   89 c2                           	mov edx, eax
0x804aa30:   83 ec 04                        	sub esp, 4
0x804aa33:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa36:   8d 83 7b dc ff ff               	lea eax, [ebx - 0x2385]
0x804aa3c:   50                              	push eax
0x804aa3d:   52                              	push edx
0x804aa3e:   e8 34 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa43:   83 c4 10                        	add esp, 0x10
0x804aa46:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804aa4d:   0f b7 c0                        	movzx eax, ax
0x804aa50:   83 ec 04                        	sub esp, 4
0x804aa53:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa56:   8d 93 81 dc ff ff               	lea edx, [ebx - 0x237f]
0x804aa5c:   52                              	push edx
0x804aa5d:   50                              	push eax
0x804aa5e:   e8 14 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa63:   83 c4 10                        	add esp, 0x10
0x804aa66:   0f b7 83 4a 00 00 00            	movzx eax, word ptr [ebx + 0x4a]
0x804aa6d:   98                              	cwde 
0x804aa6e:   83 ec 04                        	sub esp, 4
0x804aa71:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa74:   8d 93 87 dc ff ff               	lea edx, [ebx - 0x2379]
0x804aa7a:   52                              	push edx
0x804aa7b:   50                              	push eax
0x804aa7c:   e8 f6 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa81:   83 c4 10                        	add esp, 0x10
0x804aa84:   8b 83 88 04 00 00               	mov eax, dword ptr [ebx + 0x488]
0x804aa8a:   83 ec 04                        	sub esp, 4
0x804aa8d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa90:   8d 93 8d dc ff ff               	lea edx, [ebx - 0x2373]
0x804aa96:   52                              	push edx
0x804aa97:   50                              	push eax
0x804aa98:   e8 da ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa9d:   83 c4 10                        	add esp, 0x10
0x804aaa0:   0f b6 83 8c 04 00 00            	movzx eax, byte ptr [ebx + 0x48c]
0x804aaa7:   0f b6 c0                        	movzx eax, al
0x804aaaa:   83 ec 04                        	sub esp, 4
0x804aaad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab0:   8d 93 93 dc ff ff               	lea edx, [ebx - 0x236d]
0x804aab6:   52                              	push edx
0x804aab7:   50                              	push eax
0x804aab8:   e8 ba ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aabd:   83 c4 10                        	add esp, 0x10
0x804aac0:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804aac7:   0f b6 c0                        	movzx eax, al
0x804aaca:   83 ec 04                        	sub esp, 4
0x804aacd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad0:   8d 93 99 dc ff ff               	lea edx, [ebx - 0x2367]
0x804aad6:   52                              	push edx
0x804aad7:   50                              	push eax
0x804aad8:   e8 9a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aadd:   83 c4 10                        	add esp, 0x10
0x804aae0:   0f b7 83 4e 00 00 00            	movzx eax, word ptr [ebx + 0x4e]
0x804aae7:   0f b7 c0                        	movzx eax, ax
0x804aaea:   83 ec 04                        	sub esp, 4
0x804aaed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf0:   8d 93 9f dc ff ff               	lea edx, [ebx - 0x2361]
0x804aaf6:   52                              	push edx
0x804aaf7:   50                              	push eax
0x804aaf8:   e8 7a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafd:   83 c4 10                        	add esp, 0x10
0x804ab00:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804ab07:   0f b7 c0                        	movzx eax, ax
0x804ab0a:   83 ec 04                        	sub esp, 4
0x804ab0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab10:   8d 93 a5 dc ff ff               	lea edx, [ebx - 0x235b]
0x804ab16:   52                              	push edx
0x804ab17:   50                              	push eax
0x804ab18:   e8 5a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1d:   83 c4 10                        	add esp, 0x10
0x804ab20:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ab26:   83 ec 04                        	sub esp, 4
0x804ab29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2c:   8d 93 ab dc ff ff               	lea edx, [ebx - 0x2355]
0x804ab32:   52                              	push edx
0x804ab33:   50                              	push eax
0x804ab34:   e8 3e ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab39:   83 c4 10                        	add esp, 0x10
0x804ab3c:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab42:   f7 d0                           	not eax
0x804ab44:   83 ec 08                        	sub esp, 8
0x804ab47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab4a:   50                              	push eax
0x804ab4b:   e8 16 d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab50:   83 c4 10                        	add esp, 0x10
0x804ab53:   b8 00 00 00 00                  	mov eax, 0
0x804ab58:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab5b:   59                              	pop ecx
0x804ab5c:   5b                              	pop ebx
0x804ab5d:   5d                              	pop ebp
0x804ab5e:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab61:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab62 -- 0x804ab66
0x804ab62:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab65:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ab66 -- 0x804ab6a
0x804ab66:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ab69:   c3                              	ret 
; data inside code section at 0x804ab6a -- 0x804ab70
0x804ab6a:   66 90 66 90 66 90                                  |f.f.f.          |
; function: __libc_csu_init at 0x804ab70 -- 0x804abcd
0x804ab70:   55                              	push ebp
0x804ab71:   57                              	push edi
0x804ab72:   56                              	push esi
0x804ab73:   53                              	push ebx
0x804ab74:   e8 17 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab79:   81 c3 87 24 00 00               	add ebx, 0x2487
0x804ab7f:   83 ec 0c                        	sub esp, 0xc
0x804ab82:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab86:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab8c:   e8 3b d7 ff ff                  	call 0x80482cc <_init>
0x804ab91:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab97:   29 c6                           	sub esi, eax
0x804ab99:   c1 fe 02                        	sar esi, 2
0x804ab9c:   85 f6                           	test esi, esi
0x804ab9e:   74 25                           	je 0x804abc5 <__libc_csu_init+0x55>
0x804aba0:   31 ff                           	xor edi, edi
0x804aba2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aba8:   83 ec 04                        	sub esp, 4
0x804abab:   55                              	push ebp
0x804abac:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abb0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804abb4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804abbb:   83 c7 01                        	add edi, 1
0x804abbe:   83 c4 10                        	add esp, 0x10
0x804abc1:   39 fe                           	cmp esi, edi
0x804abc3:   75 e3                           	jne 0x804aba8 <__libc_csu_init+0x38>
0x804abc5:   83 c4 0c                        	add esp, 0xc
0x804abc8:   5b                              	pop ebx
0x804abc9:   5e                              	pop esi
0x804abca:   5f                              	pop edi
0x804abcb:   5d                              	pop ebp
0x804abcc:   c3                              	ret 
; data inside code section at 0x804abcd -- 0x804abd0
0x804abcd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804abd0 -- 0x804abd2
0x804abd0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804abd4 -- 0x804abe8
0x804abd4:   53                              	push ebx
0x804abd5:   83 ec 08                        	sub esp, 8
0x804abd8:   e8 b3 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abdd:   81 c3 23 24 00 00               	add ebx, 0x2423
0x804abe3:   83 c4 08                        	add esp, 8
0x804abe6:   5b                              	pop ebx
0x804abe7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ec ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804abe8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804abf8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ac08:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ac18:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac28:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac38:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac48:   31 00 67 5f 32 00 67 5f  32 34 00 67 5f 32 35 00   |1.g_2.g_24.g_25.|
0x804ac58:   67 5f 33 31 00 67 5f 34  30 00 67 5f 36 37 00 67   |g_31.g_40.g_67.g|
0x804ac68:   5f 37 32 00 67 5f 37 35  00 67 5f 37 37 00 67 5f   |_72.g_75.g_77.g_|
0x804ac78:   38 30 00 67 5f 31 30 39  00 67 5f 31 31 31 00 67   |80.g_109.g_111.g|
0x804ac88:   5f 31 33 32 00 67 5f 31  37 32 00 67 5f 31 39 35   |_132.g_172.g_195|
0x804ac98:   00 67 5f 32 32 30 00 67  5f 32 34 38 00 67 5f 32   |.g_220.g_248.g_2|
0x804aca8:   35 38 00 67 5f 32 37 36  00 00 00 00 00 00 00 3f   |58.g_276.......?|
0x804acb8:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804acc8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804acd8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ace8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804acf8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ad08:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ad18:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ad20:   01 1b 03 3b b8 02 00 00  56 00 00 00 d0 d5 ff ff   |...;....V.......|
0x804ad30:   e8 02 00 00 10 d6 ff ff  0c 03 00 00 60 d6 ff ff   |............`...|
0x804ad40:   d4 02 00 00 36 d7 ff ff  20 03 00 00 46 d7 ff ff   |....6... ...F...|
0x804ad50:   40 03 00 00 74 d7 ff ff  64 03 00 00 92 d7 ff ff   |@...t...d.......|
0x804ad60:   84 03 00 00 ba d7 ff ff  a4 03 00 00 e4 d7 ff ff   |................|
0x804ad70:   c4 03 00 00 0d d8 ff ff  e4 03 00 00 50 d8 ff ff   |............P...|
0x804ad80:   04 04 00 00 91 d8 ff ff  24 04 00 00 e9 d8 ff ff   |........$.......|
0x804ad90:   48 04 00 00 3b d9 ff ff  6c 04 00 00 78 d9 ff ff   |H...;...l...x...|
0x804ada0:   8c 04 00 00 af d9 ff ff  ac 04 00 00 ce d9 ff ff   |................|
0x804adb0:   cc 04 00 00 f8 d9 ff ff  ec 04 00 00 24 da ff ff   |............$...|
0x804adc0:   0c 05 00 00 4f da ff ff  2c 05 00 00 98 da ff ff   |....O...,.......|
0x804add0:   4c 05 00 00 df da ff ff  6c 05 00 00 39 db ff ff   |L.......l...9...|
0x804ade0:   90 05 00 00 8d db ff ff  b4 05 00 00 cc db ff ff   |................|
0x804adf0:   d4 05 00 00 05 dc ff ff  f4 05 00 00 27 dc ff ff   |............'...|
0x804ae00:   14 06 00 00 75 dc ff ff  34 06 00 00 b1 dc ff ff   |....u...4.......|
0x804ae10:   54 06 00 00 3a dd ff ff  74 06 00 00 6c dd ff ff   |T...:...t...l...|
0x804ae20:   94 06 00 00 9c dd ff ff  b4 06 00 00 e1 dd ff ff   |................|
0x804ae30:   d4 06 00 00 20 de ff ff  f4 06 00 00 52 de ff ff   |.... .......R...|
0x804ae40:   14 07 00 00 7e de ff ff  34 07 00 00 9c de ff ff   |....~...4.......|
0x804ae50:   54 07 00 00 c4 de ff ff  74 07 00 00 e9 de ff ff   |T.......t.......|
0x804ae60:   94 07 00 00 0e df ff ff  b4 07 00 00 45 df ff ff   |............E...|
0x804ae70:   d4 07 00 00 79 df ff ff  f4 07 00 00 cb df ff ff   |....y...........|
0x804ae80:   18 08 00 00 17 e0 ff ff  3c 08 00 00 4e e0 ff ff   |........<...N...|
0x804ae90:   5c 08 00 00 7f e0 ff ff  7c 08 00 00 9e e0 ff ff   |\.......|.......|
0x804aea0:   9c 08 00 00 c8 e0 ff ff  bc 08 00 00 f0 e0 ff ff   |................|
0x804aeb0:   dc 08 00 00 19 e1 ff ff  fc 08 00 00 55 e1 ff ff   |............U...|
0x804aec0:   1c 09 00 00 8f e1 ff ff  3c 09 00 00 e2 e1 ff ff   |........<.......|
0x804aed0:   60 09 00 00 2f e2 ff ff  84 09 00 00 67 e2 ff ff   |`.../.......g...|
0x804aee0:   a4 09 00 00 99 e2 ff ff  c4 09 00 00 ad e2 ff ff   |................|
0x804aef0:   e4 09 00 00 c4 e2 ff ff  04 0a 00 00 d9 e2 ff ff   |................|
0x804af00:   24 0a 00 00 ef e2 ff ff  44 0a 00 00 16 e3 ff ff   |$.......D.......|
0x804af10:   64 0a 00 00 3b e3 ff ff  84 0a 00 00 7a e3 ff ff   |d...;.......z...|
0x804af20:   a4 0a 00 00 b3 e3 ff ff  c4 0a 00 00 df e3 ff ff   |................|
0x804af30:   e4 0a 00 00 05 e4 ff ff  04 0b 00 00 47 e4 ff ff   |............G...|
0x804af40:   24 0b 00 00 89 e4 ff ff  44 0b 00 00 cb e4 ff ff   |$.......D.......|
0x804af50:   64 0b 00 00 40 e5 ff ff  84 0b 00 00 9d e5 ff ff   |d...@...........|
0x804af60:   a4 0b 00 00 fa e5 ff ff  c4 0b 00 00 57 e6 ff ff   |............W...|
0x804af70:   e4 0b 00 00 e7 e6 ff ff  04 0c 00 00 4b e7 ff ff   |............K...|
0x804af80:   24 0c 00 00 bb e7 ff ff  44 0c 00 00 02 e8 ff ff   |$.......D.......|
0x804af90:   68 0c 00 00 57 e8 ff ff  88 0c 00 00 9e e8 ff ff   |h...W...........|
0x804afa0:   ac 0c 00 00 06 e9 ff ff  d0 0c 00 00 4d ea ff ff   |............M...|
0x804afb0:   00 0d 00 00 78 fb ff ff  30 0d 00 00 42 fe ff ff   |....x...0...B...|
0x804afc0:   68 0d 00 00 46 fe ff ff  7c 0d 00 00 50 fe ff ff   |h...F...|...P...|
0x804afd0:   90 0d 00 00 b0 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804afdc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804afec:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804affc:   84 d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b00c:   30 00 00 00 e0 d2 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b01c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b02c:   10 00 00 00 54 00 00 00  fc d2 ff ff 08 00 00 00   |....T...........|
0x804b03c:   00 00 00 00 1c 00 00 00  68 00 00 00 0e d4 ff ff   |........h.......|
0x804b04c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b05c:   04 04 00 00 20 00 00 00  88 00 00 00 fe d3 ff ff   |.... ...........|
0x804b06c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b07c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b08c:   08 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b09c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b0ac:   06 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b0bc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b0cc:   0e d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b0dc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0ec:   18 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b0fc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b10c:   21 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |!...C....A....B.|
0x804b11c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b12c:   44 d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |D...A....A....B.|
0x804b13c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b14c:   65 d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |e...X....A....B.|
0x804b15c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b16c:   90 01 00 00 99 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b17c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b18c:   1c 00 00 00 b4 01 00 00  c7 d4 ff ff 3d 00 00 00   |............=...|
0x804b19c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b1ac:   1c 00 00 00 d4 01 00 00  e4 d4 ff ff 37 00 00 00   |............7...|
0x804b1bc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1cc:   1c 00 00 00 f4 01 00 00  fb d4 ff ff 1f 00 00 00   |................|
0x804b1dc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1ec:   1c 00 00 00 14 02 00 00  fa d4 ff ff 2a 00 00 00   |............*...|
0x804b1fc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b20c:   1c 00 00 00 34 02 00 00  04 d5 ff ff 2c 00 00 00   |....4.......,...|
0x804b21c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b22c:   1c 00 00 00 54 02 00 00  10 d5 ff ff 2b 00 00 00   |....T.......+...|
0x804b23c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b24c:   1c 00 00 00 74 02 00 00  1b d5 ff ff 49 00 00 00   |....t.......I...|
0x804b25c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b26c:   1c 00 00 00 94 02 00 00  44 d5 ff ff 47 00 00 00   |........D...G...|
0x804b27c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b28c:   20 00 00 00 b4 02 00 00  6b d5 ff ff 5a 00 00 00   | .......k...Z...|
0x804b29c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b2ac:   c5 0c 04 04 20 00 00 00  d8 02 00 00 a1 d5 ff ff   |.... ...........|
0x804b2bc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b2cc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2dc:   d1 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2ec:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b2fc:   f0 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b30c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b31c:   09 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b32c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b33c:   0b d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b34c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b35c:   39 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |9...<....A....B.|
0x804b36c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b37c:   55 d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804b38c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b39c:   be d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b3ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b3bc:   d0 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b3cc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3dc:   e0 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3ec:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b3fc:   05 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b40c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b41c:   24 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |$...2....A....B.|
0x804b42c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b43c:   36 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |6...,....A....B.|
0x804b44c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b45c:   42 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |B........A....B.|
0x804b46c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b47c:   40 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |@...(....A....B.|
0x804b48c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b49c:   48 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |H...%....A....B.|
0x804b4ac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b4bc:   4d d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |M...%....A....B.|
0x804b4cc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4dc:   52 d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |R...7....A....B.|
0x804b4ec:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b4fc:   69 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |i...4....A....B.|
0x804b50c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b51c:   7d d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |}...R....A....B.|
0x804b52c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b53c:   60 05 00 00 ab d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b54c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b55c:   1c 00 00 00 84 05 00 00  d3 d7 ff ff 37 00 00 00   |............7...|
0x804b56c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b57c:   1c 00 00 00 a4 05 00 00  ea d7 ff ff 31 00 00 00   |............1...|
0x804b58c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b59c:   1c 00 00 00 c4 05 00 00  fb d7 ff ff 1f 00 00 00   |................|
0x804b5ac:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b5bc:   1c 00 00 00 e4 05 00 00  fa d7 ff ff 2a 00 00 00   |............*...|
0x804b5cc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5dc:   1c 00 00 00 04 06 00 00  04 d8 ff ff 28 00 00 00   |............(...|
0x804b5ec:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b5fc:   1c 00 00 00 24 06 00 00  0c d8 ff ff 29 00 00 00   |....$.......)...|
0x804b60c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b61c:   1c 00 00 00 44 06 00 00  15 d8 ff ff 3c 00 00 00   |....D.......<...|
0x804b62c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b63c:   1c 00 00 00 64 06 00 00  31 d8 ff ff 3a 00 00 00   |....d...1...:...|
0x804b64c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b65c:   20 00 00 00 84 06 00 00  4b d8 ff ff 53 00 00 00   | .......K...S...|
0x804b66c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b67c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 7a d8 ff ff   |.... .......z...|
0x804b68c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b69c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b6ac:   a3 d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b6bc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b6cc:   bb d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6dc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6ec:   cd d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6fc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b70c:   c1 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b71c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b72c:   b8 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b73c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b74c:   ad d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b75c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b76c:   a3 d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b77c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b78c:   aa d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b79c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b7ac:   af d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7bc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b7cc:   ce d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7dc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7ec:   e7 d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7fc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b80c:   f3 d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b81c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b82c:   f9 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b83c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b84c:   1b d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b85c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b86c:   3d d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |=...B....A....B.|
0x804b87c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b88c:   5f d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |_...u....A....B.|
0x804b89c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b8ac:   b4 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8bc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b8cc:   f1 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8dc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8ec:   2e da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8fc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b90c:   6b da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |k........A....B.|
0x804b91c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b92c:   db da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b93c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b94c:   1f db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b95c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b96c:   6f db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |o...G....A....B.|
0x804b97c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b98c:   b0 09 00 00 92 db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b99c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b9ac:   d0 09 00 00 c7 db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b9bc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b9cc:   20 00 00 00 f4 09 00 00  ea db ff ff 68 00 00 00   | ...........h...|
0x804b9dc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9ec:   0c 04 04 00 2c 00 00 00  18 0a 00 00 2e dc ff ff   |....,...........|
0x804b9fc:   47 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |G....A....B..F..|
0x804ba0c:   86 04 83 05 03 3a 01 c3  41 c6 41 c7 41 c5 0c 04   |.....:..A.A.A...|
0x804ba1c:   04 00 00 00 2c 00 00 00  48 0a 00 00 45 dd ff ff   |....,...H...E...|
0x804ba2c:   2b 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |+....A....B..I..|
0x804ba3c:   86 04 83 05 03 1b 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba4c:   04 00 00 00 34 00 00 00  78 0a 00 00 40 ee ff ff   |....4...x...@...|
0x804ba5c:   ca 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804ba6c:   0f 03 75 78 06 10 03 02  75 7c 03 b5 02 c1 0c 01   |..ux....u|......|
0x804ba7c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba8c:   b0 0a 00 00 d2 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804ba9c:   10 00 00 00 c4 0a 00 00  c2 f0 ff ff 04 00 00 00   |................|
0x804baac:   00 00 00 00 48 00 00 00  d8 0a 00 00 b8 f0 ff ff   |....H...........|
0x804babc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bacc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804badc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804baec:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bafc:   10 00 00 00 24 0b 00 00  cc f0 ff ff 02 00 00 00   |....$...........|
0x804bb0c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 d4 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 71 00 00 00   |............q...|
0x804d028:   b2 1c c7 9e 48 bb 94 22  c5 45 e7 11 39 da 80 be   |....H..".E..9...|
0x804d038:   eb 00 00 00 06 00 00 00  1e 00 01 00 ee e3 95 99   |................|
0x804d048:   ff ff 00 f1 ff 00 19 01  ff ff 00 00 01 00 00 00   |................|
0x804d058:   ??                                                 |?               |
