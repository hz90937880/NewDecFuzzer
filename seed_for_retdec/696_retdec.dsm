;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:10:20
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 d0 d7 ff ff               	lea eax, [ebx - 0x2830]
0x804835c:   50                              	push eax
0x804835d:   8d 83 70 d7 ff ff               	lea eax, [ebx - 0x2890]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 8c a3 04 08               	mov eax, 0x804a38c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 7c d0 04 08                  	mov eax, 0x804d07c
0x80483a5:   3d 7c d0 04 08                  	cmp eax, 0x804d07c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 7c d0 04 08                  	push 0x804d07c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 7c d0 04 08                  	mov eax, 0x804d07c
0x80483e5:   2d 7c d0 04 08                  	sub eax, 0x804d07c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 7c d0 04 08                  	push 0x804d07c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 fc 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 e8 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 f0 d7 ff ff               	lea edx, [eax - 0x2810]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 bb 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 9d 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 75 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 4b 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 22 22 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 df 21 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 9d 21 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 45 21 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 f4 20 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 b7 20 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 80 20 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 61 20 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 37 20 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 0b 20 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 e0 1f 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 97 1f 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 4f 1f 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 f5 1e 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 a2 1e 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 63 1e 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 2d 1e 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 0b 1e 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 bd 1d 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 81 1d 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 f8 1c 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 c6 1c 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 96 1c 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 51 1c 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 12 1c 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 e0 1b 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 b1 1b 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 93 1b 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 6b 1b 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 46 1b 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 21 1b 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 ea 1a 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 b5 1a 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 63 1a 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 18 1a 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 e1 19 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 b0 19 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 91 19 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 67 19 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 3f 19 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 16 19 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 da 18 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 9f 18 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 4c 18 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 00 18 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 c8 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 99 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 85 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 6e 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 59 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 43 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 1c 17 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 f7 16 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 b8 16 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 7f 16 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 53 16 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 2d 16 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 e4 d8 ff ff               	fld dword ptr [eax - 0x271c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 e4 d8 ff ff               	fld dword ptr [eax - 0x271c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 e8 d8 ff ff               	fld dword ptr [eax - 0x2718]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 eb 15 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 e4 d8 ff ff               	fld dword ptr [eax - 0x271c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 e4 d8 ff ff               	fld dword ptr [eax - 0x271c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 e8 d8 ff ff               	fld dword ptr [eax - 0x2718]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 a9 15 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 ec d8 ff ff               	fld dword ptr [eax - 0x2714]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 f0 d8 ff ff               	fld dword ptr [eax - 0x2710]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 f4 d8 ff ff               	fld dword ptr [eax - 0x270c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 67 15 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 f8 d8 ff ff               	fld dword ptr [eax - 0x2708]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 fc d8 ff ff               	fld dword ptr [eax - 0x2704]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 00 d9 ff ff               	fld dword ptr [eax - 0x2700]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 ef 14 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 08 d9 ff ff               	fld qword ptr [eax - 0x26f8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 08 d9 ff ff               	fld qword ptr [eax - 0x26f8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 10 d9 ff ff               	fld qword ptr [eax - 0x26f0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 92 14 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 08 d9 ff ff               	fld qword ptr [eax - 0x26f8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 08 d9 ff ff               	fld qword ptr [eax - 0x26f8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 10 d9 ff ff               	fld qword ptr [eax - 0x26f0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 35 14 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 18 d9 ff ff               	fld qword ptr [eax - 0x26e8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 20 d9 ff ff               	fld qword ptr [eax - 0x26e0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 28 d9 ff ff               	fld qword ptr [eax - 0x26d8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 d8 13 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 30 d9 ff ff               	fld qword ptr [eax - 0x26d0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 38 d9 ff ff               	fld qword ptr [eax - 0x26c8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 40 d9 ff ff               	fld qword ptr [eax - 0x26c0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 48 13 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 4c d9 ff ff               	fld dword ptr [eax - 0x26b4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 e4 12 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 73 12 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 30 12 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 00 d8 ff ff               	lea eax, [ebx - 0x2800]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 24 d8 ff ff               	lea eax, [ebx - 0x27dc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497e0
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 4c                        	sub esp, 0x4c
0x804962f:   e8 2a 11 00 00                  	call 0x804a75e <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804963d:   8b 4d 20                        	mov ecx, dword ptr [ebp + 0x20]
0x8049640:   8b 5d 24                        	mov ebx, dword ptr [ebp + 0x24]
0x8049643:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049646:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x8049649:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804964c:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964f:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049652:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x8049655:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049658:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804965b:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804965e:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049661:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049664:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049667:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x804966a:   8b 7d 5c                        	mov edi, dword ptr [ebp + 0x5c]
0x804966d:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049670:   8b 7d 74                        	mov edi, dword ptr [ebp + 0x74]
0x8049673:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x8049677:   89 c8                           	mov eax, ecx
0x8049679:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x804967d:   89 d8                           	mov eax, ebx
0x804967f:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049683:   89 f0                           	mov eax, esi
0x8049685:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049689:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804968d:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049691:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049695:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x8049698:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804969c:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x804969f:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a3:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496a6:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496aa:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496ae:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b2:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496b5:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b9:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496bd:   89 f8                           	mov eax, edi
0x80496bf:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496c3:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496c6:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496cc:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496cf:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496d5:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496d8:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496de:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496e2:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x80496e9:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496ec:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496f2:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496f5:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80496fb:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496ff:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049706:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804970a:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x8049711:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049715:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804971c:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049720:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x8049727:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804972a:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049730:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049734:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x804973a:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804973e:   88 82 49 00 00 00               	mov byte ptr [edx + 0x49], al
0x8049744:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049748:   88 82 4a 00 00 00               	mov byte ptr [edx + 0x4a], al
0x804974e:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049751:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049757:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x804975b:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x8049762:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049766:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x804976c:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804976f:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049775:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049778:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804977e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049781:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049787:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804978a:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049790:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x8049794:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x804979b:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804979e:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497a4:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497a7:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497ad:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497b0:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497b6:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497b9:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497bf:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497c2:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x80497c8:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497cc:   66 89 82 78 00 00 00            	mov word ptr [edx + 0x78], ax
0x80497d3:   b8 00 00 00 00                  	mov eax, 0
0x80497d8:   83 c4 4c                        	add esp, 0x4c
0x80497db:   5b                              	pop ebx
0x80497dc:   5e                              	pop esi
0x80497dd:   5f                              	pop edi
0x80497de:   5d                              	pop ebp
0x80497df:   c3                              	ret 
; function: func_1 at 0x80497e0 -- 0x804a38c
0x80497e0:   55                              	push ebp
0x80497e1:   89 e5                           	mov ebp, esp
0x80497e3:   57                              	push edi
0x80497e4:   56                              	push esi
0x80497e5:   53                              	push ebx
0x80497e6:   81 ec f8 00 00 00               	sub esp, 0xf8
0x80497ec:   e8 69 0f 00 00                  	call 0x804a75a <__x86.get_pc_thunk.ax>
0x80497f1:   05 0f 38 00 00                  	add eax, 0x380f
0x80497f6:   c7 45 84 f6 ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffff6
0x80497fd:   c7 45 f0 41 e4 f7 6d            	mov dword ptr [ebp - 0x10], 0x6df7e441
0x8049804:   c7 45 ec ab 97 76 58            	mov dword ptr [ebp - 0x14], 0x587697ab
0x804980b:   66 c7 45 ea 7d bf               	mov word ptr [ebp - 0x16], 0xbf7d
0x8049811:   c7 45 e4 8a 5f 92 45            	mov dword ptr [ebp - 0x1c], 0x45925f8a
0x8049818:   c7 45 e0 ff 69 0f d4            	mov dword ptr [ebp - 0x20], 0xd40f69ff
0x804981f:   66 c7 45 de bd 1a               	mov word ptr [ebp - 0x22], 0x1abd
0x8049825:   66 c7 45 dc f7 ff               	mov word ptr [ebp - 0x24], 0xfff7
0x804982b:   66 c7 45 82 d9 91               	mov word ptr [ebp - 0x7e], 0x91d9
0x8049831:   66 c7 45 da fe ff               	mov word ptr [ebp - 0x26], 0xfffe
0x8049837:   c7 85 7c ff ff ff 2c 23 61 1b   	mov dword ptr [ebp - 0x84], 0x1b61232c
0x8049841:   c6 45 d9 01                     	mov byte ptr [ebp - 0x27], 1
0x8049845:   c6 45 d8 fe                     	mov byte ptr [ebp - 0x28], 0xfe
0x8049849:   c6 85 7b ff ff ff 09            	mov byte ptr [ebp - 0x85], 9
0x8049850:   c7 45 d4 fb ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffffb
0x8049857:   66 c7 85 78 ff ff ff 00 00      	mov word ptr [ebp - 0x88], 0
0x8049860:   c6 45 d3 d5                     	mov byte ptr [ebp - 0x2d], 0xd5
0x8049864:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804986b:   c7 85 74 ff ff ff c2 4e ee a1   	mov dword ptr [ebp - 0x8c], 0xa1ee4ec2
0x8049875:   c7 45 c8 01 00 00 00            	mov dword ptr [ebp - 0x38], 1
0x804987c:   c7 45 c4 45 a3 6a 76            	mov dword ptr [ebp - 0x3c], 0x766aa345
0x8049883:   66 c7 45 c2 64 54               	mov word ptr [ebp - 0x3e], 0x5464
0x8049889:   c7 85 70 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0x90], 3
0x8049893:   c7 45 bc f9 ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffff9
0x804989a:   c7 45 b8 08 00 00 00            	mov dword ptr [ebp - 0x48], 8
0x80498a1:   c7 45 b4 01 00 00 00            	mov dword ptr [ebp - 0x4c], 1
0x80498a8:   c7 85 6c ff ff ff 34 02 56 16   	mov dword ptr [ebp - 0x94], 0x16560234
0x80498b2:   66 c7 85 6a ff ff ff 5f d6      	mov word ptr [ebp - 0x96], 0xd65f
0x80498bb:   66 c7 85 68 ff ff ff 9e 86      	mov word ptr [ebp - 0x98], 0x869e
0x80498c4:   c7 45 b0 be 80 7b 14            	mov dword ptr [ebp - 0x50], 0x147b80be
0x80498cb:   c6 85 67 ff ff ff 39            	mov byte ptr [ebp - 0x99], 0x39
0x80498d2:   66 c7 85 64 ff ff ff 00 00      	mov word ptr [ebp - 0x9c], 0
0x80498db:   c7 45 94 a4 82 9f d8            	mov dword ptr [ebp - 0x6c], 0xd89f82a4
0x80498e2:   c6 45 93 01                     	mov byte ptr [ebp - 0x6d], 1
0x80498e6:   c6 85 63 ff ff ff 5d            	mov byte ptr [ebp - 0x9d], 0x5d
0x80498ed:   c6 85 62 ff ff ff 68            	mov byte ptr [ebp - 0x9e], 0x68
0x80498f4:   c7 85 5c ff ff ff cd 2d 91 04   	mov dword ptr [ebp - 0xa4], 0x4912dcd
0x80498fe:   66 83 bd 68 ff ff ff 00         	cmp word ptr [ebp - 0x98], 0
0x8049906:   75 0d                           	jne 0x8049915 <func_1+0x135>
0x8049908:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x804990f:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049913:   74 07                           	je 0x804991c <func_1+0x13c>
0x8049915:   b8 01 00 00 00                  	mov eax, 1
0x804991a:   eb 05                           	jmp 0x8049921 <func_1+0x141>
0x804991c:   b8 00 00 00 00                  	mov eax, 0
0x8049921:   0f b7 d0                        	movzx edx, ax
0x8049924:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804992b:   0f b7 c0                        	movzx eax, ax
0x804992e:   89 c1                           	mov ecx, eax
0x8049930:   d3 fa                           	sar edx, cl
0x8049932:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x8049939:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804993c:   76 0d                           	jbe 0x804994b <func_1+0x16b>
0x804993e:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049942:   74 07                           	je 0x804994b <func_1+0x16b>
0x8049944:   b8 01 00 00 00                  	mov eax, 1
0x8049949:   eb 05                           	jmp 0x8049950 <func_1+0x170>
0x804994b:   b8 00 00 00 00                  	mov eax, 0
0x8049950:   31 d0                           	xor eax, edx
0x8049952:   3d eb 3a 00 00                  	cmp eax, 0x3aeb
0x8049957:   80 bd 67 ff ff ff a7            	cmp byte ptr [ebp - 0x99], 0xa7
0x804995e:   0f 96 c0                        	setbe al
0x8049961:   0f b6 d0                        	movzx edx, al
0x8049964:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804996b:   39 c2                           	cmp edx, eax
0x804996d:   0f 9e c0                        	setle al
0x8049970:   0f b6 c0                        	movzx eax, al
0x8049973:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049976:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049979:   0f be d0                        	movsx edx, al
0x804997c:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804997f:   0f be c0                        	movsx eax, al
0x8049982:   89 c1                           	mov ecx, eax
0x8049984:   d3 e2                           	shl edx, cl
0x8049986:   89 d0                           	mov eax, edx
0x8049988:   2b 45 b0                        	sub eax, dword ptr [ebp - 0x50]
0x804998b:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804998e:   0f 96 c0                        	setbe al
0x8049991:   0f b6 c0                        	movzx eax, al
0x8049994:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049997:   89 c2                           	mov edx, eax
0x8049999:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x80499a0:   39 c2                           	cmp edx, eax
0x80499a2:   7e 11                           	jle 0x80499b5 <func_1+0x1d5>
0x80499a4:   66 83 bd 64 ff ff ff 00         	cmp word ptr [ebp - 0x9c], 0
0x80499ac:   74 07                           	je 0x80499b5 <func_1+0x1d5>
0x80499ae:   b8 01 00 00 00                  	mov eax, 1
0x80499b3:   eb 05                           	jmp 0x80499ba <func_1+0x1da>
0x80499b5:   b8 00 00 00 00                  	mov eax, 0
0x80499ba:   0f be d0                        	movsx edx, al
0x80499bd:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x80499c0:   0f be c0                        	movsx eax, al
0x80499c3:   0f af c2                        	imul eax, edx
0x80499c6:   83 f8 fb                        	cmp eax, -5
0x80499c9:   0f 9d c0                        	setge al
0x80499cc:   0f b6 d0                        	movzx edx, al
0x80499cf:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499d2:   01 c2                           	add edx, eax
0x80499d4:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x80499db:   39 c2                           	cmp edx, eax
0x80499dd:   0f 84 6d 07 00 00               	je 0x804a150 <func_1+0x970>
0x80499e3:   66 c7 85 58 ff ff ff f9 ff      	mov word ptr [ebp - 0xa8], 0xfff9
0x80499ec:   c6 85 57 ff ff ff 9d            	mov byte ptr [ebp - 0xa9], 0x9d
0x80499f3:   c7 45 8c 89 f1 5b 28            	mov dword ptr [ebp - 0x74], 0x285bf189
0x80499fa:   c7 45 88 9d 2e 22 84            	mov dword ptr [ebp - 0x78], 0x84222e9d
0x8049a01:   c7 85 50 ff ff ff 09 1d aa 9e   	mov dword ptr [ebp - 0xb0], 0x9eaa1d09
0x8049a0b:   66 c7 85 4e ff ff ff 33 e8      	mov word ptr [ebp - 0xb2], 0xe833
0x8049a14:   c6 85 4d ff ff ff 5f            	mov byte ptr [ebp - 0xb3], 0x5f
0x8049a1b:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x8049a22:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a25:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a29:   75 19                           	jne 0x8049a44 <func_1+0x264>
0x8049a2b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a2e:   89 c2                           	mov edx, eax
0x8049a30:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049a33:   89 c1                           	mov ecx, eax
0x8049a35:   89 d0                           	mov eax, edx
0x8049a37:   ba 00 00 00 00                  	mov edx, 0
0x8049a3c:   66 f7 f1                        	div cx
0x8049a3f:   89 d0                           	mov eax, edx
0x8049a41:   66 85 c0                        	test ax, ax
0x8049a44:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049a47:   66 31 45 ea                     	xor word ptr [ebp - 0x16], ax
0x8049a4b:   c7 45 ac 2b 4a ad 5e            	mov dword ptr [ebp - 0x54], 0x5ead4a2b
0x8049a52:   c6 85 4c ff ff ff 07            	mov byte ptr [ebp - 0xb4], 7
0x8049a59:   c7 45 a8 89 ee c2 6d            	mov dword ptr [ebp - 0x58], 0x6dc2ee89
0x8049a60:   c6 85 4b ff ff ff 30            	mov byte ptr [ebp - 0xb5], 0x30
0x8049a67:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049a6a:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049a6d:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049a70:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049a74:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x8049a78:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a7b:   01 d0                           	add eax, edx
0x8049a7d:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049a80:   0f 9d c0                        	setge al
0x8049a83:   0f b6 c0                        	movzx eax, al
0x8049a86:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049a89:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049a8d:   0f 94 c0                        	sete al
0x8049a90:   0f b6 d0                        	movzx edx, al
0x8049a93:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049a96:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049a99:   89 d0                           	mov eax, edx
0x8049a9b:   66 31 45 dc                     	xor word ptr [ebp - 0x24], ax
0x8049a9f:   c7 85 44 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xbc], 5
0x8049aa9:   c7 45 a4 d7 59 8a 6f            	mov dword ptr [ebp - 0x5c], 0x6f8a59d7
0x8049ab0:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x8049ab7:   66 83 6d de 01                  	sub word ptr [ebp - 0x22], 1
0x8049abc:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049ac0:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049ac3:   0f 96 c0                        	setbe al
0x8049ac6:   0f b6 c0                        	movzx eax, al
0x8049ac9:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049acc:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049acf:   0f b7 d0                        	movzx edx, ax
0x8049ad2:   0f b7 45 82                     	movzx eax, word ptr [ebp - 0x7e]
0x8049ad6:   89 c1                           	mov ecx, eax
0x8049ad8:   d3 e2                           	shl edx, cl
0x8049ada:   89 d0                           	mov eax, edx
0x8049adc:   83 f8 ff                        	cmp eax, -1
0x8049adf:   0f 9d c0                        	setge al
0x8049ae2:   0f b6 d0                        	movzx edx, al
0x8049ae5:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x8049aeb:   0f be c0                        	movsx eax, al
0x8049aee:   29 c2                           	sub edx, eax
0x8049af0:   89 d0                           	mov eax, edx
0x8049af2:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x8049af5:   0f 9e c0                        	setle al
0x8049af8:   0f b6 c0                        	movzx eax, al
0x8049afb:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049aff:   b8 17 fd 00 00                  	mov eax, 0xfd17
0x8049b04:   66 31 45 da                     	xor word ptr [ebp - 0x26], ax
0x8049b08:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x8049b0f:   74 10                           	je 0x8049b21 <func_1+0x341>
0x8049b11:   83 bd 44 ff ff ff 00            	cmp dword ptr [ebp - 0xbc], 0
0x8049b18:   74 07                           	je 0x8049b21 <func_1+0x341>
0x8049b1a:   b8 01 00 00 00                  	mov eax, 1
0x8049b1f:   eb 05                           	jmp 0x8049b26 <func_1+0x346>
0x8049b21:   b8 00 00 00 00                  	mov eax, 0
0x8049b26:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049b29:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x8049b30:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049b33:   0f 95 c0                        	setne al
0x8049b36:   0f b6 c0                        	movzx eax, al
0x8049b39:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x8049b3d:   66 23 55 dc                     	and dx, word ptr [ebp - 0x24]
0x8049b41:   66 89 55 de                     	mov word ptr [ebp - 0x22], dx
0x8049b45:   09 45 94                        	or dword ptr [ebp - 0x6c], eax
0x8049b48:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049b4b:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x8049b4e:   c7 85 40 ff ff ff a5 6f 1e 8d   	mov dword ptr [ebp - 0xc0], 0x8d1e6fa5
0x8049b58:   c7 85 3c ff ff ff 12 cb e9 d5   	mov dword ptr [ebp - 0xc4], 0xd5e9cb12
0x8049b62:   c6 85 3b ff ff ff 04            	mov byte ptr [ebp - 0xc5], 4
0x8049b69:   c7 45 e4 1a 00 00 00            	mov dword ptr [ebp - 0x1c], 0x1a
0x8049b70:   83 7d e4 2b                     	cmp dword ptr [ebp - 0x1c], 0x2b
0x8049b74:   0f 87 9a 01 00 00               	ja 0x8049d14 <func_1+0x534>
0x8049b7a:   c7 85 24 ff ff ff 92 fd a2 18   	mov dword ptr [ebp - 0xdc], 0x18a2fd92
0x8049b84:   83 ad 7c ff ff ff 01            	sub dword ptr [ebp - 0x84], 1
0x8049b8b:   83 85 40 ff ff ff 01            	add dword ptr [ebp - 0xc0], 1
0x8049b92:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049b96:   66 21 45 de                     	and word ptr [ebp - 0x22], ax
0x8049b9a:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049b9f:   74 5c                           	je 0x8049bfd <func_1+0x41d>
0x8049ba1:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049ba4:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x8049baa:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x8049bb1:   74 0d                           	je 0x8049bc0 <func_1+0x3e0>
0x8049bb3:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049bb7:   74 07                           	je 0x8049bc0 <func_1+0x3e0>
0x8049bb9:   b8 01 00 00 00                  	mov eax, 1
0x8049bbe:   eb 05                           	jmp 0x8049bc5 <func_1+0x3e5>
0x8049bc0:   b8 00 00 00 00                  	mov eax, 0
0x8049bc5:   89 c2                           	mov edx, eax
0x8049bc7:   66 0f be 85 4c ff ff ff         	movsx ax, byte ptr [ebp - 0xb4]
0x8049bcf:   0f af d0                        	imul edx, eax
0x8049bd2:   89 d0                           	mov eax, edx
0x8049bd4:   66 c1 e8 02                     	shr ax, 2
0x8049bd8:   0f b7 c0                        	movzx eax, ax
0x8049bdb:   69 c0 cb 24 00 00               	imul eax, eax, 0x24cb
0x8049be1:   c1 e8 10                        	shr eax, 0x10
0x8049be4:   66 c1 e8 0a                     	shr ax, 0xa
0x8049be8:   66 69 c0 54 6f                  	imul ax, ax, 0x6f54
0x8049bed:   29 c2                           	sub edx, eax
0x8049bef:   89 d0                           	mov eax, edx
0x8049bf1:   66 85 c0                        	test ax, ax
0x8049bf4:   74 07                           	je 0x8049bfd <func_1+0x41d>
0x8049bf6:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x8049bfd:   66 83 7d ea 00                  	cmp word ptr [ebp - 0x16], 0
0x8049c02:   74 07                           	je 0x8049c0b <func_1+0x42b>
0x8049c04:   b8 01 00 00 00                  	mov eax, 1
0x8049c09:   eb 05                           	jmp 0x8049c10 <func_1+0x430>
0x8049c0b:   b8 00 00 00 00                  	mov eax, 0
0x8049c10:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049c13:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x8049c17:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049c1a:   0f 95 c0                        	setne al
0x8049c1d:   88 85 7b ff ff ff               	mov byte ptr [ebp - 0x85], al
0x8049c23:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x8049c2a:   39 85 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], eax
0x8049c30:   0f 95 c0                        	setne al
0x8049c33:   0f b6 c0                        	movzx eax, al
0x8049c36:   66 89 85 78 ff ff ff            	mov word ptr [ebp - 0x88], ax
0x8049c3d:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049c44:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x8049c48:   0f be 75 d3                     	movsx esi, byte ptr [ebp - 0x2d]
0x8049c4c:   0f b7 9d 78 ff ff ff            	movzx ebx, word ptr [ebp - 0x88]
0x8049c53:   89 9d 10 ff ff ff               	mov dword ptr [ebp - 0xf0], ebx
0x8049c59:   0f be bd 7b ff ff ff            	movsx edi, byte ptr [ebp - 0x85]
0x8049c60:   89 bd 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edi
0x8049c66:   0f be 4d d8                     	movsx ecx, byte ptr [ebp - 0x28]
0x8049c6a:   89 8d 08 ff ff ff               	mov dword ptr [ebp - 0xf8], ecx
0x8049c70:   0f be 5d d9                     	movsx ebx, byte ptr [ebp - 0x27]
0x8049c74:   89 9d 04 ff ff ff               	mov dword ptr [ebp - 0xfc], ebx
0x8049c7a:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x8049c7e:   89 bd 00 ff ff ff               	mov dword ptr [ebp - 0x100], edi
0x8049c84:   0f b7 4d 82                     	movzx ecx, word ptr [ebp - 0x7e]
0x8049c88:   89 8d fc fe ff ff               	mov dword ptr [ebp - 0x104], ecx
0x8049c8e:   0f bf 7d dc                     	movsx edi, word ptr [ebp - 0x24]
0x8049c92:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x8049c96:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x8049c9a:   50                              	push eax
0x8049c9b:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049ca1:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049ca4:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049ca7:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049caa:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049cb0:   52                              	push edx
0x8049cb1:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049cb4:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049cb7:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049cbd:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049cc0:   56                              	push esi
0x8049cc1:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x8049cc7:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049cca:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x8049cd0:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x8049cd6:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x8049cdc:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ce2:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x8049ce8:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x8049cee:   57                              	push edi
0x8049cef:   53                              	push ebx
0x8049cf0:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049cf3:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049cf6:   51                              	push ecx
0x8049cf7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049cfa:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049cfd:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049d00:   e8 21 f9 ff ff                  	call 0x8049626 <set_var>
0x8049d05:   83 c4 70                        	add esp, 0x70
0x8049d08:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x8049d0f:   e9 70 06 00 00                  	jmp 0x804a384 <func_1+0xba4>
0x8049d14:   c6 45 d3 d7                     	mov byte ptr [ebp - 0x2d], 0xd7
0x8049d18:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x8049d1f:   74 07                           	je 0x8049d28 <func_1+0x548>
0x8049d21:   b8 40 00 00 00                  	mov eax, 0x40
0x8049d26:   eb 05                           	jmp 0x8049d2d <func_1+0x54d>
0x8049d28:   b8 00 00 00 00                  	mov eax, 0
0x8049d2d:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049d31:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x8049d35:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049d3b:   0f b7 c0                        	movzx eax, ax
0x8049d3e:   0f af c2                        	imul eax, edx
0x8049d41:   85 c0                           	test eax, eax
0x8049d43:   74 0d                           	je 0x8049d52 <func_1+0x572>
0x8049d45:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049d49:   74 07                           	je 0x8049d52 <func_1+0x572>
0x8049d4b:   b8 01 00 00 00                  	mov eax, 1
0x8049d50:   eb 05                           	jmp 0x8049d57 <func_1+0x577>
0x8049d52:   b8 00 00 00 00                  	mov eax, 0
0x8049d57:   84 c0                           	test al, al
0x8049d59:   78 06                           	js 0x8049d61 <func_1+0x581>
0x8049d5b:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049d5f:   74 07                           	je 0x8049d68 <func_1+0x588>
0x8049d61:   b8 01 00 00 00                  	mov eax, 1
0x8049d66:   eb 05                           	jmp 0x8049d6d <func_1+0x58d>
0x8049d68:   b8 00 00 00 00                  	mov eax, 0
0x8049d6d:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049d70:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049d73:   0f b7 c0                        	movzx eax, ax
0x8049d76:   ba b8 06 00 00                  	mov edx, 0x6b8
0x8049d7b:   89 c1                           	mov ecx, eax
0x8049d7d:   d3 e2                           	shl edx, cl
0x8049d7f:   89 d0                           	mov eax, edx
0x8049d81:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049d84:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x8049d8e:   66 c7 45 ea 01 00               	mov word ptr [ebp - 0x16], 1
0x8049d94:   0f b7 4d de                     	movzx ecx, word ptr [ebp - 0x22]
0x8049d98:   b8 01 00 00 00                  	mov eax, 1
0x8049d9d:   99                              	cdq 
0x8049d9e:   f7 f9                           	idiv ecx
0x8049da0:   89 d0                           	mov eax, edx
0x8049da2:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049da5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049da8:   89 c2                           	mov edx, eax
0x8049daa:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049dad:   01 d0                           	add eax, edx
0x8049daf:   88 45 d9                        	mov byte ptr [ebp - 0x27], al
0x8049db2:   0f be 55 d9                     	movsx edx, byte ptr [ebp - 0x27]
0x8049db6:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x8049dbd:   0f be c0                        	movsx eax, al
0x8049dc0:   89 c1                           	mov ecx, eax
0x8049dc2:   d3 fa                           	sar edx, cl
0x8049dc4:   89 d0                           	mov eax, edx
0x8049dc6:   0f bf d0                        	movsx edx, ax
0x8049dc9:   69 d2 ab ed ff ff               	imul edx, edx, 0xffffedab
0x8049dcf:   c1 ea 10                        	shr edx, 0x10
0x8049dd2:   01 c2                           	add edx, eax
0x8049dd4:   66 c1 fa 0a                     	sar dx, 0xa
0x8049dd8:   66 c1 f8 0f                     	sar ax, 0xf
0x8049ddc:   29 c2                           	sub edx, eax
0x8049dde:   89 d0                           	mov eax, edx
0x8049de0:   98                              	cwde 
0x8049de1:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049de4:   0f 87 3d 02 00 00               	ja 0x804a027 <func_1+0x847>
0x8049dea:   66 c7 85 38 ff ff ff 4a 6f      	mov word ptr [ebp - 0xc8], 0x6f4a
0x8049df3:   c7 45 9c db a3 a1 9b            	mov dword ptr [ebp - 0x64], 0x9ba1a3db
0x8049dfa:   c7 85 34 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xcc], 0xfffffff7
0x8049e04:   66 c7 85 32 ff ff ff 00 00      	mov word ptr [ebp - 0xce], 0
0x8049e0d:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049e14:   e9 d0 00 00 00                  	jmp 0x8049ee9 <func_1+0x709>
0x8049e19:   ba 00 00 00 00                  	mov edx, 0
0x8049e1e:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e22:   21 d0                           	and eax, edx
0x8049e24:   0b 45 d4                        	or eax, dword ptr [ebp - 0x2c]
0x8049e27:   83 e0 01                        	and eax, 1
0x8049e2a:   89 c2                           	mov edx, eax
0x8049e2c:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049e30:   09 d0                           	or eax, edx
0x8049e32:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049e35:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049e38:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049e3b:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e3e:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049e44:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049e4a:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x8049e4d:   0f b7 55 da                     	movzx edx, word ptr [ebp - 0x26]
0x8049e51:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x8049e55:   09 d0                           	or eax, edx
0x8049e57:   66 89 45 ea                     	mov word ptr [ebp - 0x16], ax
0x8049e5b:   0f b7 55 ea                     	movzx edx, word ptr [ebp - 0x16]
0x8049e5f:   0f be 45 d8                     	movsx eax, byte ptr [ebp - 0x28]
0x8049e63:   39 c2                           	cmp edx, eax
0x8049e65:   b8 01 00 00 00                  	mov eax, 1
0x8049e6a:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x8049e6d:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049e70:   35 f6 14 88 c2                  	xor eax, 0xc28814f6
0x8049e75:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049e78:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049e7c:   75 07                           	jne 0x8049e85 <func_1+0x6a5>
0x8049e7e:   b8 01 00 00 00                  	mov eax, 1
0x8049e83:   eb 05                           	jmp 0x8049e8a <func_1+0x6aa>
0x8049e85:   b8 00 00 00 00                  	mov eax, 0
0x8049e8a:   0f bf d0                        	movsx edx, ax
0x8049e8d:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049e94:   98                              	cwde 
0x8049e95:   01 d0                           	add eax, edx
0x8049e97:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049e9a:   ba 00 00 00 00                  	mov edx, 0
0x8049e9f:   f7 75 cc                        	div dword ptr [ebp - 0x34]
0x8049ea2:   89 55 d4                        	mov dword ptr [ebp - 0x2c], edx
0x8049ea5:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ea8:   23 45 cc                        	and eax, dword ptr [ebp - 0x34]
0x8049eab:   89 c2                           	mov edx, eax
0x8049ead:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049eb3:   39 c2                           	cmp edx, eax
0x8049eb5:   0f 93 c0                        	setae al
0x8049eb8:   0f b6 d0                        	movzx edx, al
0x8049ebb:   0f b7 85 38 ff ff ff            	movzx eax, word ptr [ebp - 0xc8]
0x8049ec2:   39 c2                           	cmp edx, eax
0x8049ec4:   74 07                           	je 0x8049ecd <func_1+0x6ed>
0x8049ec6:   b8 02 00 00 00                  	mov eax, 2
0x8049ecb:   eb 05                           	jmp 0x8049ed2 <func_1+0x6f2>
0x8049ecd:   b8 00 00 00 00                  	mov eax, 0
0x8049ed2:   0f be 4d d3                     	movsx ecx, byte ptr [ebp - 0x2d]
0x8049ed6:   99                              	cdq 
0x8049ed7:   f7 f9                           	idiv ecx
0x8049ed9:   89 d0                           	mov eax, edx
0x8049edb:   66 c1 e8 09                     	shr ax, 9
0x8049edf:   0f b7 c0                        	movzx eax, ax
0x8049ee2:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049ee5:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049ee9:   83 7d ec 06                     	cmp dword ptr [ebp - 0x14], 6
0x8049eed:   0f 84 26 ff ff ff               	je 0x8049e19 <func_1+0x639>
0x8049ef3:   c7 45 8c 0b 00 00 00            	mov dword ptr [ebp - 0x74], 0xb
0x8049efa:   eb 50                           	jmp 0x8049f4c <func_1+0x76c>
0x8049efc:   c6 85 2b ff ff ff 01            	mov byte ptr [ebp - 0xd5], 1
0x8049f03:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049f07:   75 10                           	jne 0x8049f19 <func_1+0x739>
0x8049f09:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049f0d:   8d 50 ff                        	lea edx, [eax - 1]
0x8049f10:   66 89 55 de                     	mov word ptr [ebp - 0x22], dx
0x8049f14:   66 85 c0                        	test ax, ax
0x8049f17:   74 07                           	je 0x8049f20 <func_1+0x740>
0x8049f19:   b8 01 00 00 00                  	mov eax, 1
0x8049f1e:   eb 05                           	jmp 0x8049f25 <func_1+0x745>
0x8049f20:   b8 00 00 00 00                  	mov eax, 0
0x8049f25:   0f bf d0                        	movsx edx, ax
0x8049f28:   81 7d cc 8e d4 af bc            	cmp dword ptr [ebp - 0x34], 0xbcafd48e
0x8049f2f:   0f 97 c0                        	seta al
0x8049f32:   0f b6 c0                        	movzx eax, al
0x8049f35:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049f38:   0f 95 c0                        	setne al
0x8049f3b:   0f b6 c0                        	movzx eax, al
0x8049f3e:   01 d0                           	add eax, edx
0x8049f40:   83 e8 01                        	sub eax, 1
0x8049f43:   f7 d0                           	not eax
0x8049f45:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049f48:   83 6d 8c 01                     	sub dword ptr [ebp - 0x74], 1
0x8049f4c:   83 7d 8c f1                     	cmp dword ptr [ebp - 0x74], -0xf
0x8049f50:   7d aa                           	jge 0x8049efc <func_1+0x71c>
0x8049f52:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x8049f59:   e9 a0 00 00 00                  	jmp 0x8049ffe <func_1+0x81e>
0x8049f5e:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x8049f68:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049f6b:   31 45 88                        	xor dword ptr [ebp - 0x78], eax
0x8049f6e:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049f72:   83 e8 01                        	sub eax, 1
0x8049f75:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049f79:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049f7d:   74 2a                           	je 0x8049fa9 <func_1+0x7c9>
0x8049f7f:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049f83:   74 24                           	je 0x8049fa9 <func_1+0x7c9>
0x8049f85:   83 6d b8 01                     	sub dword ptr [ebp - 0x48], 1
0x8049f89:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049f8c:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x8049f8f:   89 c1                           	mov ecx, eax
0x8049f91:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x8049f98:   99                              	cdq 
0x8049f99:   f7 7d ac                        	idiv dword ptr [ebp - 0x54]
0x8049f9c:   89 d0                           	mov eax, edx
0x8049f9e:   39 c1                           	cmp ecx, eax
0x8049fa0:   75 07                           	jne 0x8049fa9 <func_1+0x7c9>
0x8049fa2:   b8 01 00 00 00                  	mov eax, 1
0x8049fa7:   eb 05                           	jmp 0x8049fae <func_1+0x7ce>
0x8049fa9:   b8 00 00 00 00                  	mov eax, 0
0x8049fae:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049fb1:   0f 93 c0                        	setae al
0x8049fb4:   0f b6 c0                        	movzx eax, al
0x8049fb7:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049fba:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8049fbd:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049fc0:   01 d0                           	add eax, edx
0x8049fc2:   85 c0                           	test eax, eax
0x8049fc4:   74 0e                           	je 0x8049fd4 <func_1+0x7f4>
0x8049fc6:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x8049fcb:   74 07                           	je 0x8049fd4 <func_1+0x7f4>
0x8049fcd:   b8 01 00 00 00                  	mov eax, 1
0x8049fd2:   eb 05                           	jmp 0x8049fd9 <func_1+0x7f9>
0x8049fd4:   b8 00 00 00 00                  	mov eax, 0
0x8049fd9:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x8049fdc:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049fe0:   74 10                           	je 0x8049ff2 <func_1+0x812>
0x8049fe2:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049fe9:   74 07                           	je 0x8049ff2 <func_1+0x812>
0x8049feb:   b8 01 00 00 00                  	mov eax, 1
0x8049ff0:   eb 05                           	jmp 0x8049ff7 <func_1+0x817>
0x8049ff2:   b8 00 00 00 00                  	mov eax, 0
0x8049ff7:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049ffa:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x8049ffe:   83 7d c8 32                     	cmp dword ptr [ebp - 0x38], 0x32
0x804a002:   0f 86 56 ff ff ff               	jbe 0x8049f5e <func_1+0x77e>
0x804a008:   c7 45 bc 00 00 00 00            	mov dword ptr [ebp - 0x44], 0
0x804a00f:   eb 0b                           	jmp 0x804a01c <func_1+0x83c>
0x804a011:   0f b7 45 ea                     	movzx eax, word ptr [ebp - 0x16]
0x804a015:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x804a018:   83 6d bc 01                     	sub dword ptr [ebp - 0x44], 1
0x804a01c:   83 7d bc ff                     	cmp dword ptr [ebp - 0x44], -1
0x804a020:   7d ef                           	jge 0x804a011 <func_1+0x831>
0x804a022:   e9 23 01 00 00                  	jmp 0x804a14a <func_1+0x96a>
0x804a027:   c6 85 3a ff ff ff 9e            	mov byte ptr [ebp - 0xc6], 0x9e
0x804a02e:   c7 45 f0 fa ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffa
0x804a035:   83 7d f0 1b                     	cmp dword ptr [ebp - 0x10], 0x1b
0x804a039:   0f 8f d7 00 00 00               	jg 0x804a116 <func_1+0x936>
0x804a03f:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a046:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a04a:   0f be 75 d3                     	movsx esi, byte ptr [ebp - 0x2d]
0x804a04e:   0f b7 9d 78 ff ff ff            	movzx ebx, word ptr [ebp - 0x88]
0x804a055:   89 9d 10 ff ff ff               	mov dword ptr [ebp - 0xf0], ebx
0x804a05b:   0f be bd 7b ff ff ff            	movsx edi, byte ptr [ebp - 0x85]
0x804a062:   89 bd 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edi
0x804a068:   0f be 4d d8                     	movsx ecx, byte ptr [ebp - 0x28]
0x804a06c:   89 8d 08 ff ff ff               	mov dword ptr [ebp - 0xf8], ecx
0x804a072:   0f be 5d d9                     	movsx ebx, byte ptr [ebp - 0x27]
0x804a076:   89 9d 04 ff ff ff               	mov dword ptr [ebp - 0xfc], ebx
0x804a07c:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a080:   89 bd 00 ff ff ff               	mov dword ptr [ebp - 0x100], edi
0x804a086:   0f b7 4d 82                     	movzx ecx, word ptr [ebp - 0x7e]
0x804a08a:   89 8d fc fe ff ff               	mov dword ptr [ebp - 0x104], ecx
0x804a090:   0f bf 7d dc                     	movsx edi, word ptr [ebp - 0x24]
0x804a094:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a098:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a09c:   50                              	push eax
0x804a09d:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a0a3:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a0a6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0a9:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a0ac:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a0b2:   52                              	push edx
0x804a0b3:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0b6:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a0b9:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a0bf:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a0c2:   56                              	push esi
0x804a0c3:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a0c9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0cc:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a0d2:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a0d8:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a0de:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a0e4:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a0ea:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a0f0:   57                              	push edi
0x804a0f1:   53                              	push ebx
0x804a0f2:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0f5:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0f8:   51                              	push ecx
0x804a0f9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0fc:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a0ff:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a102:   e8 1f f5 ff ff                  	call 0x8049626 <set_var>
0x804a107:   83 c4 70                        	add esp, 0x70
0x804a10a:   0f b6 85 67 ff ff ff            	movzx eax, byte ptr [ebp - 0x99]
0x804a111:   e9 6e 02 00 00                  	jmp 0x804a384 <func_1+0xba4>
0x804a116:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a11d:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a120:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a123:   c7 45 a0 ea ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffea
0x804a12a:   eb 18                           	jmp 0x804a144 <func_1+0x964>
0x804a12c:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a12f:   8d 50 01                        	lea edx, [eax + 1]
0x804a132:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a135:   31 d0                           	xor eax, edx
0x804a137:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a13a:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a13d:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x804a140:   83 45 a0 03                     	add dword ptr [ebp - 0x60], 3
0x804a144:   83 7d a0 2a                     	cmp dword ptr [ebp - 0x60], 0x2a
0x804a148:   74 e2                           	je 0x804a12c <func_1+0x94c>
0x804a14a:   c6 45 93 fe                     	mov byte ptr [ebp - 0x6d], 0xfe
0x804a14e:   eb 38                           	jmp 0x804a188 <func_1+0x9a8>
0x804a150:   c6 85 5b ff ff ff a0            	mov byte ptr [ebp - 0xa5], 0xa0
0x804a157:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x804a15e:   eb 1f                           	jmp 0x804a17f <func_1+0x99f>
0x804a160:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a164:   74 05                           	je 0x804a16b <func_1+0x98b>
0x804a166:   e9 93 f7 ff ff                  	jmp 0x80498fe <func_1+0x11e>
0x804a16b:   80 bd 7b ff ff ff 00            	cmp byte ptr [ebp - 0x85], 0
0x804a172:   75 13                           	jne 0x804a187 <func_1+0x9a7>
0x804a174:   c6 85 5b ff ff ff 01            	mov byte ptr [ebp - 0xa5], 1
0x804a17b:   83 45 c8 02                     	add dword ptr [ebp - 0x38], 2
0x804a17f:   83 7d c8 1f                     	cmp dword ptr [ebp - 0x38], 0x1f
0x804a183:   77 db                           	ja 0x804a160 <func_1+0x980>
0x804a185:   eb 01                           	jmp 0x804a188 <func_1+0x9a8>
0x804a187:   90                              	nop 
0x804a188:   0f be 55 93                     	movsx edx, byte ptr [ebp - 0x6d]
0x804a18c:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804a193:   88 85 62 ff ff ff               	mov byte ptr [ebp - 0x9e], al
0x804a199:   0f b6 85 62 ff ff ff            	movzx eax, byte ptr [ebp - 0x9e]
0x804a1a0:   0f af c2                        	imul eax, edx
0x804a1a3:   85 c0                           	test eax, eax
0x804a1a5:   74 79                           	je 0x804a220 <func_1+0xa40>
0x804a1a7:   c7 85 1c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe4], 1
0x804a1b1:   c7 45 98 4c d4 72 da            	mov dword ptr [ebp - 0x68], 0xda72d44c
0x804a1b8:   c6 45 d9 f6                     	mov byte ptr [ebp - 0x27], 0xf6
0x804a1bc:   eb 5a                           	jmp 0x804a218 <func_1+0xa38>
0x804a1be:   c7 85 18 ff ff ff c8 15 08 34   	mov dword ptr [ebp - 0xe8], 0x340815c8
0x804a1c8:   c7 85 14 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xec], 0
0x804a1d2:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a1d8:   0f be d0                        	movsx edx, al
0x804a1db:   83 75 98 24                     	xor dword ptr [ebp - 0x68], 0x24
0x804a1df:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a1e2:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a1e8:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a1ee:   0f be c0                        	movsx eax, al
0x804a1f1:   89 c1                           	mov ecx, eax
0x804a1f3:   d3 fa                           	sar edx, cl
0x804a1f5:   89 d0                           	mov eax, edx
0x804a1f7:   0f b7 c0                        	movzx eax, ax
0x804a1fa:   8b 95 14 ff ff ff               	mov edx, dword ptr [ebp - 0xec]
0x804a200:   0f b7 d2                        	movzx edx, dx
0x804a203:   81 e2 f7 cb 00 00               	and edx, 0xcbf7
0x804a209:   01 d0                           	add eax, edx
0x804a20b:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a20e:   0f b6 45 d9                     	movzx eax, byte ptr [ebp - 0x27]
0x804a212:   83 c0 01                        	add eax, 1
0x804a215:   88 45 d9                        	mov byte ptr [ebp - 0x27], al
0x804a218:   80 7d d9 03                     	cmp byte ptr [ebp - 0x27], 3
0x804a21c:   7f a0                           	jg 0x804a1be <func_1+0x9de>
0x804a21e:   eb 47                           	jmp 0x804a267 <func_1+0xa87>
0x804a220:   c7 85 20 ff ff ff 6f 3f 01 8d   	mov dword ptr [ebp - 0xe0], 0x8d013f6f
0x804a22a:   0f be 45 d8                     	movsx eax, byte ptr [ebp - 0x28]
0x804a22e:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a231:   80 7d 93 00                     	cmp byte ptr [ebp - 0x6d], 0
0x804a235:   0f 95 c0                        	setne al
0x804a238:   0f b6 c0                        	movzx eax, al
0x804a23b:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a23e:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a244:   f7 d0                           	not eax
0x804a246:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a24c:   75 07                           	jne 0x804a255 <func_1+0xa75>
0x804a24e:   b8 04 00 00 00                  	mov eax, 4
0x804a253:   eb 05                           	jmp 0x804a25a <func_1+0xa7a>
0x804a255:   b8 00 00 00 00                  	mov eax, 0
0x804a25a:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x804a25d:   0f be 45 d9                     	movsx eax, byte ptr [ebp - 0x27]
0x804a261:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a267:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a26a:   0f be d0                        	movsx edx, al
0x804a26d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a270:   84 c0                           	test al, al
0x804a272:   74 27                           	je 0x804a29b <func_1+0xabb>
0x804a274:   0f bf 45 dc                     	movsx eax, word ptr [ebp - 0x24]
0x804a278:   33 45 b8                        	xor eax, dword ptr [ebp - 0x48]
0x804a27b:   89 c1                           	mov ecx, eax
0x804a27d:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a283:   21 c8                           	and eax, ecx
0x804a285:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a28b:   83 bd 5c ff ff ff ff            	cmp dword ptr [ebp - 0xa4], -1
0x804a292:   74 07                           	je 0x804a29b <func_1+0xabb>
0x804a294:   b8 01 00 00 00                  	mov eax, 1
0x804a299:   eb 05                           	jmp 0x804a2a0 <func_1+0xac0>
0x804a29b:   b8 00 00 00 00                  	mov eax, 0
0x804a2a0:   66 c1 e8 03                     	shr ax, 3
0x804a2a4:   32 45 93                        	xor al, byte ptr [ebp - 0x6d]
0x804a2a7:   83 c8 01                        	or eax, 1
0x804a2aa:   0f be c0                        	movsx eax, al
0x804a2ad:   89 c1                           	mov ecx, eax
0x804a2af:   d3 e2                           	shl edx, cl
0x804a2b1:   89 d0                           	mov eax, edx
0x804a2b3:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a2b6:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a2bd:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a2c1:   0f be 75 d3                     	movsx esi, byte ptr [ebp - 0x2d]
0x804a2c5:   0f b7 9d 78 ff ff ff            	movzx ebx, word ptr [ebp - 0x88]
0x804a2cc:   89 9d 10 ff ff ff               	mov dword ptr [ebp - 0xf0], ebx
0x804a2d2:   0f be bd 7b ff ff ff            	movsx edi, byte ptr [ebp - 0x85]
0x804a2d9:   89 bd 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edi
0x804a2df:   0f be 4d d8                     	movsx ecx, byte ptr [ebp - 0x28]
0x804a2e3:   89 8d 08 ff ff ff               	mov dword ptr [ebp - 0xf8], ecx
0x804a2e9:   0f be 5d d9                     	movsx ebx, byte ptr [ebp - 0x27]
0x804a2ed:   89 9d 04 ff ff ff               	mov dword ptr [ebp - 0xfc], ebx
0x804a2f3:   0f bf 7d da                     	movsx edi, word ptr [ebp - 0x26]
0x804a2f7:   89 bd 00 ff ff ff               	mov dword ptr [ebp - 0x100], edi
0x804a2fd:   0f b7 4d 82                     	movzx ecx, word ptr [ebp - 0x7e]
0x804a301:   89 8d fc fe ff ff               	mov dword ptr [ebp - 0x104], ecx
0x804a307:   0f bf 7d dc                     	movsx edi, word ptr [ebp - 0x24]
0x804a30b:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a30f:   0f b7 4d ea                     	movzx ecx, word ptr [ebp - 0x16]
0x804a313:   50                              	push eax
0x804a314:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a31a:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a31d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a320:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a323:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a329:   52                              	push edx
0x804a32a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a32d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a330:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a336:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a339:   56                              	push esi
0x804a33a:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a340:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a343:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a349:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a34f:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a355:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a35b:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a361:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a367:   57                              	push edi
0x804a368:   53                              	push ebx
0x804a369:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a36c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a36f:   51                              	push ecx
0x804a370:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a373:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a376:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a379:   e8 a8 f2 ff ff                  	call 0x8049626 <set_var>
0x804a37e:   83 c4 70                        	add esp, 0x70
0x804a381:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a384:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a387:   5b                              	pop ebx
0x804a388:   5e                              	pop esi
0x804a389:   5f                              	pop edi
0x804a38a:   5d                              	pop ebp
0x804a38b:   c3                              	ret 
; function: main at 0x804a38c -- 0x804a75a
0x804a38c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a390:   83 e4 f0                        	and esp, 0xfffffff0
0x804a393:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a396:   55                              	push ebp
0x804a397:   89 e5                           	mov ebp, esp
0x804a399:   53                              	push ebx
0x804a39a:   51                              	push ecx
0x804a39b:   83 ec 10                        	sub esp, 0x10
0x804a39e:   e8 ed df ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a3a3:   81 c3 5d 2c 00 00               	add ebx, 0x2c5d
0x804a3a9:   89 c8                           	mov eax, ecx
0x804a3ab:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a3b2:   83 38 02                        	cmp dword ptr [eax], 2
0x804a3b5:   75 26                           	jne 0x804a3dd <main+0x51>
0x804a3b7:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a3ba:   83 c0 04                        	add eax, 4
0x804a3bd:   8b 00                           	mov eax, dword ptr [eax]
0x804a3bf:   83 ec 08                        	sub esp, 8
0x804a3c2:   8d 93 48 d8 ff ff               	lea edx, [ebx - 0x27b8]
0x804a3c8:   52                              	push edx
0x804a3c9:   50                              	push eax
0x804a3ca:   e8 31 df ff ff                  	call 0x8048300 <strcmp>
0x804a3cf:   83 c4 10                        	add esp, 0x10
0x804a3d2:   85 c0                           	test eax, eax
0x804a3d4:   75 07                           	jne 0x804a3dd <main+0x51>
0x804a3d6:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a3dd:   e8 74 e0 ff ff                  	call 0x8048456 <platform_main_begin>
0x804a3e2:   e8 84 f0 ff ff                  	call 0x804946b <crc32_gentab>
0x804a3e7:   e8 f4 f3 ff ff                  	call 0x80497e0 <func_1>
0x804a3ec:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a3f2:   83 ec 04                        	sub esp, 4
0x804a3f5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3f8:   8d 93 4a d8 ff ff               	lea edx, [ebx - 0x27b6]
0x804a3fe:   52                              	push edx
0x804a3ff:   50                              	push eax
0x804a400:   e8 72 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a405:   83 c4 10                        	add esp, 0x10
0x804a408:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a40e:   89 c2                           	mov edx, eax
0x804a410:   83 ec 04                        	sub esp, 4
0x804a413:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a416:   8d 83 4f d8 ff ff               	lea eax, [ebx - 0x27b1]
0x804a41c:   50                              	push eax
0x804a41d:   52                              	push edx
0x804a41e:   e8 54 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a423:   83 c4 10                        	add esp, 0x10
0x804a426:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a42c:   83 ec 04                        	sub esp, 4
0x804a42f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a432:   8d 93 54 d8 ff ff               	lea edx, [ebx - 0x27ac]
0x804a438:   52                              	push edx
0x804a439:   50                              	push eax
0x804a43a:   e8 38 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a43f:   83 c4 10                        	add esp, 0x10
0x804a442:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804a449:   0f b7 c0                        	movzx eax, ax
0x804a44c:   83 ec 04                        	sub esp, 4
0x804a44f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a452:   8d 93 59 d8 ff ff               	lea edx, [ebx - 0x27a7]
0x804a458:   52                              	push edx
0x804a459:   50                              	push eax
0x804a45a:   e8 18 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a45f:   83 c4 10                        	add esp, 0x10
0x804a462:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a468:   83 ec 04                        	sub esp, 4
0x804a46b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a46e:   8d 93 5e d8 ff ff               	lea edx, [ebx - 0x27a2]
0x804a474:   52                              	push edx
0x804a475:   50                              	push eax
0x804a476:   e8 fc f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a47b:   83 c4 10                        	add esp, 0x10
0x804a47e:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a484:   83 ec 04                        	sub esp, 4
0x804a487:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a48a:   8d 93 63 d8 ff ff               	lea edx, [ebx - 0x279d]
0x804a490:   52                              	push edx
0x804a491:   50                              	push eax
0x804a492:   e8 e0 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a497:   83 c4 10                        	add esp, 0x10
0x804a49a:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a4a1:   0f b7 c0                        	movzx eax, ax
0x804a4a4:   83 ec 04                        	sub esp, 4
0x804a4a7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a4aa:   8d 93 68 d8 ff ff               	lea edx, [ebx - 0x2798]
0x804a4b0:   52                              	push edx
0x804a4b1:   50                              	push eax
0x804a4b2:   e8 c0 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a4b7:   83 c4 10                        	add esp, 0x10
0x804a4ba:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804a4c1:   98                              	cwde 
0x804a4c2:   83 ec 04                        	sub esp, 4
0x804a4c5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a4c8:   8d 93 6d d8 ff ff               	lea edx, [ebx - 0x2793]
0x804a4ce:   52                              	push edx
0x804a4cf:   50                              	push eax
0x804a4d0:   e8 a2 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a4d5:   83 c4 10                        	add esp, 0x10
0x804a4d8:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804a4df:   0f b7 c0                        	movzx eax, ax
0x804a4e2:   83 ec 04                        	sub esp, 4
0x804a4e5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a4e8:   8d 93 72 d8 ff ff               	lea edx, [ebx - 0x278e]
0x804a4ee:   52                              	push edx
0x804a4ef:   50                              	push eax
0x804a4f0:   e8 82 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a4f5:   83 c4 10                        	add esp, 0x10
0x804a4f8:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804a4ff:   98                              	cwde 
0x804a500:   83 ec 04                        	sub esp, 4
0x804a503:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a506:   8d 93 77 d8 ff ff               	lea edx, [ebx - 0x2789]
0x804a50c:   52                              	push edx
0x804a50d:   50                              	push eax
0x804a50e:   e8 64 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a513:   83 c4 10                        	add esp, 0x10
0x804a516:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a51c:   83 ec 04                        	sub esp, 4
0x804a51f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a522:   8d 93 7c d8 ff ff               	lea edx, [ebx - 0x2784]
0x804a528:   52                              	push edx
0x804a529:   50                              	push eax
0x804a52a:   e8 48 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a52f:   83 c4 10                        	add esp, 0x10
0x804a532:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804a539:   0f be c0                        	movsx eax, al
0x804a53c:   83 ec 04                        	sub esp, 4
0x804a53f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a542:   8d 93 81 d8 ff ff               	lea edx, [ebx - 0x277f]
0x804a548:   52                              	push edx
0x804a549:   50                              	push eax
0x804a54a:   e8 28 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a54f:   83 c4 10                        	add esp, 0x10
0x804a552:   0f b6 83 49 00 00 00            	movzx eax, byte ptr [ebx + 0x49]
0x804a559:   0f be c0                        	movsx eax, al
0x804a55c:   83 ec 04                        	sub esp, 4
0x804a55f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a562:   8d 93 86 d8 ff ff               	lea edx, [ebx - 0x277a]
0x804a568:   52                              	push edx
0x804a569:   50                              	push eax
0x804a56a:   e8 08 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a56f:   83 c4 10                        	add esp, 0x10
0x804a572:   0f b6 83 4a 00 00 00            	movzx eax, byte ptr [ebx + 0x4a]
0x804a579:   0f be c0                        	movsx eax, al
0x804a57c:   83 ec 04                        	sub esp, 4
0x804a57f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a582:   8d 93 8b d8 ff ff               	lea edx, [ebx - 0x2775]
0x804a588:   52                              	push edx
0x804a589:   50                              	push eax
0x804a58a:   e8 e8 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a58f:   83 c4 10                        	add esp, 0x10
0x804a592:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a598:   83 ec 04                        	sub esp, 4
0x804a59b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a59e:   8d 93 90 d8 ff ff               	lea edx, [ebx - 0x2770]
0x804a5a4:   52                              	push edx
0x804a5a5:   50                              	push eax
0x804a5a6:   e8 cc ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5ab:   83 c4 10                        	add esp, 0x10
0x804a5ae:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a5b5:   0f b7 c0                        	movzx eax, ax
0x804a5b8:   83 ec 04                        	sub esp, 4
0x804a5bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5be:   8d 93 95 d8 ff ff               	lea edx, [ebx - 0x276b]
0x804a5c4:   52                              	push edx
0x804a5c5:   50                              	push eax
0x804a5c6:   e8 ac ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5cb:   83 c4 10                        	add esp, 0x10
0x804a5ce:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804a5d5:   0f be c0                        	movsx eax, al
0x804a5d8:   83 ec 04                        	sub esp, 4
0x804a5db:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5de:   8d 93 9a d8 ff ff               	lea edx, [ebx - 0x2766]
0x804a5e4:   52                              	push edx
0x804a5e5:   50                              	push eax
0x804a5e6:   e8 8c ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5eb:   83 c4 10                        	add esp, 0x10
0x804a5ee:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a5f4:   83 ec 04                        	sub esp, 4
0x804a5f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5fa:   8d 93 9f d8 ff ff               	lea edx, [ebx - 0x2761]
0x804a600:   52                              	push edx
0x804a601:   50                              	push eax
0x804a602:   e8 70 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a607:   83 c4 10                        	add esp, 0x10
0x804a60a:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a610:   89 c2                           	mov edx, eax
0x804a612:   83 ec 04                        	sub esp, 4
0x804a615:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a618:   8d 83 a5 d8 ff ff               	lea eax, [ebx - 0x275b]
0x804a61e:   50                              	push eax
0x804a61f:   52                              	push edx
0x804a620:   e8 52 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a625:   83 c4 10                        	add esp, 0x10
0x804a628:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a62e:   83 ec 04                        	sub esp, 4
0x804a631:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a634:   8d 93 ab d8 ff ff               	lea edx, [ebx - 0x2755]
0x804a63a:   52                              	push edx
0x804a63b:   50                              	push eax
0x804a63c:   e8 36 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a641:   83 c4 10                        	add esp, 0x10
0x804a644:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a64a:   89 c2                           	mov edx, eax
0x804a64c:   83 ec 04                        	sub esp, 4
0x804a64f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a652:   8d 83 b1 d8 ff ff               	lea eax, [ebx - 0x274f]
0x804a658:   50                              	push eax
0x804a659:   52                              	push edx
0x804a65a:   e8 18 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a65f:   83 c4 10                        	add esp, 0x10
0x804a662:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804a669:   0f b7 c0                        	movzx eax, ax
0x804a66c:   83 ec 04                        	sub esp, 4
0x804a66f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a672:   8d 93 b7 d8 ff ff               	lea edx, [ebx - 0x2749]
0x804a678:   52                              	push edx
0x804a679:   50                              	push eax
0x804a67a:   e8 f8 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a67f:   83 c4 10                        	add esp, 0x10
0x804a682:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a688:   89 c2                           	mov edx, eax
0x804a68a:   83 ec 04                        	sub esp, 4
0x804a68d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a690:   8d 83 bd d8 ff ff               	lea eax, [ebx - 0x2743]
0x804a696:   50                              	push eax
0x804a697:   52                              	push edx
0x804a698:   e8 da ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a69d:   83 c4 10                        	add esp, 0x10
0x804a6a0:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a6a6:   89 c2                           	mov edx, eax
0x804a6a8:   83 ec 04                        	sub esp, 4
0x804a6ab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ae:   8d 83 c3 d8 ff ff               	lea eax, [ebx - 0x273d]
0x804a6b4:   50                              	push eax
0x804a6b5:   52                              	push edx
0x804a6b6:   e8 bc ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6bb:   83 c4 10                        	add esp, 0x10
0x804a6be:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804a6c4:   83 ec 04                        	sub esp, 4
0x804a6c7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ca:   8d 93 c9 d8 ff ff               	lea edx, [ebx - 0x2737]
0x804a6d0:   52                              	push edx
0x804a6d1:   50                              	push eax
0x804a6d2:   e8 a0 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6d7:   83 c4 10                        	add esp, 0x10
0x804a6da:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804a6e0:   89 c2                           	mov edx, eax
0x804a6e2:   83 ec 04                        	sub esp, 4
0x804a6e5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6e8:   8d 83 cf d8 ff ff               	lea eax, [ebx - 0x2731]
0x804a6ee:   50                              	push eax
0x804a6ef:   52                              	push edx
0x804a6f0:   e8 82 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f5:   83 c4 10                        	add esp, 0x10
0x804a6f8:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804a6fe:   83 ec 04                        	sub esp, 4
0x804a701:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a704:   8d 93 d5 d8 ff ff               	lea edx, [ebx - 0x272b]
0x804a70a:   52                              	push edx
0x804a70b:   50                              	push eax
0x804a70c:   e8 66 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a711:   83 c4 10                        	add esp, 0x10
0x804a714:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804a71b:   0f b7 c0                        	movzx eax, ax
0x804a71e:   83 ec 04                        	sub esp, 4
0x804a721:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a724:   8d 93 db d8 ff ff               	lea edx, [ebx - 0x2725]
0x804a72a:   52                              	push edx
0x804a72b:   50                              	push eax
0x804a72c:   e8 46 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a731:   83 c4 10                        	add esp, 0x10
0x804a734:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a73a:   f7 d0                           	not eax
0x804a73c:   83 ec 08                        	sub esp, 8
0x804a73f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a742:   50                              	push eax
0x804a743:   e8 1e dd ff ff                  	call 0x8048466 <platform_main_end>
0x804a748:   83 c4 10                        	add esp, 0x10
0x804a74b:   b8 00 00 00 00                  	mov eax, 0
0x804a750:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a753:   59                              	pop ecx
0x804a754:   5b                              	pop ebx
0x804a755:   5d                              	pop ebp
0x804a756:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a759:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a75a -- 0x804a75e
0x804a75a:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a75d:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804a75e -- 0x804a762
0x804a75e:   8b 14 24                        	mov edx, dword ptr [esp]
0x804a761:   c3                              	ret 
; data inside code section at 0x804a762 -- 0x804a770
0x804a762:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __libc_csu_init at 0x804a770 -- 0x804a7cd
0x804a770:   55                              	push ebp
0x804a771:   57                              	push edi
0x804a772:   56                              	push esi
0x804a773:   53                              	push ebx
0x804a774:   e8 17 dc ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a779:   81 c3 87 28 00 00               	add ebx, 0x2887
0x804a77f:   83 ec 0c                        	sub esp, 0xc
0x804a782:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a786:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a78c:   e8 3b db ff ff                  	call 0x80482cc <_init>
0x804a791:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a797:   29 c6                           	sub esi, eax
0x804a799:   c1 fe 02                        	sar esi, 2
0x804a79c:   85 f6                           	test esi, esi
0x804a79e:   74 25                           	je 0x804a7c5 <__libc_csu_init+0x55>
0x804a7a0:   31 ff                           	xor edi, edi
0x804a7a2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a7a8:   83 ec 04                        	sub esp, 4
0x804a7ab:   55                              	push ebp
0x804a7ac:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a7b0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a7b4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a7bb:   83 c7 01                        	add edi, 1
0x804a7be:   83 c4 10                        	add esp, 0x10
0x804a7c1:   39 fe                           	cmp esi, edi
0x804a7c3:   75 e3                           	jne 0x804a7a8 <__libc_csu_init+0x38>
0x804a7c5:   83 c4 0c                        	add esp, 0xc
0x804a7c8:   5b                              	pop ebx
0x804a7c9:   5e                              	pop esi
0x804a7ca:   5f                              	pop edi
0x804a7cb:   5d                              	pop ebp
0x804a7cc:   c3                              	ret 
; data inside code section at 0x804a7cd -- 0x804a7d0
0x804a7cd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a7d0 -- 0x804a7d2
0x804a7d0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a7d4 -- 0x804a7e8
0x804a7d4:   53                              	push ebx
0x804a7d5:   83 ec 08                        	sub esp, 8
0x804a7d8:   e8 b3 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a7dd:   81 c3 23 28 00 00               	add ebx, 0x2823
0x804a7e3:   83 c4 08                        	add esp, 8
0x804a7e6:   5b                              	pop ebx
0x804a7e7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 ec a7 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a7e8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a7f8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a808:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a818:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a828:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a838:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a848:   31 00 67 5f 31 30 00 67  5f 31 32 00 67 5f 33 30   |1.g_10.g_12.g_30|
0x804a858:   00 67 5f 33 33 00 67 5f  33 34 00 67 5f 34 37 00   |.g_33.g_34.g_47.|
0x804a868:   67 5f 34 38 00 67 5f 34  39 00 67 5f 36 31 00 67   |g_48.g_49.g_61.g|
0x804a878:   5f 36 33 00 67 5f 36 38  00 67 5f 37 31 00 67 5f   |_63.g_68.g_71.g_|
0x804a888:   37 32 00 67 5f 37 33 00  67 5f 39 31 00 67 5f 39   |72.g_73.g_91.g_9|
0x804a898:   32 00 67 5f 39 37 00 67  5f 31 31 31 00 67 5f 31   |2.g_97.g_111.g_1|
0x804a8a8:   31 33 00 67 5f 31 35 38  00 67 5f 31 38 33 00 67   |13.g_158.g_183.g|
0x804a8b8:   5f 31 38 34 00 67 5f 31  38 39 00 67 5f 31 39 30   |_184.g_189.g_190|
0x804a8c8:   00 67 5f 31 39 31 00 67  5f 31 39 36 00 67 5f 32   |.g_191.g_196.g_2|
0x804a8d8:   34 38 00 67 5f 32 39 37  00 00 00 00 00 00 00 3f   |48.g_297.......?|
0x804a8e8:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804a8f8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804a908:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804a918:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804a928:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804a938:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804a948:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804a950:   01 1b 03 3b b8 02 00 00  56 00 00 00 a0 d9 ff ff   |...;....V.......|
0x804a960:   e8 02 00 00 e0 d9 ff ff  0c 03 00 00 30 da ff ff   |............0...|
0x804a970:   d4 02 00 00 06 db ff ff  20 03 00 00 16 db ff ff   |........ .......|
0x804a980:   40 03 00 00 44 db ff ff  64 03 00 00 62 db ff ff   |@...D...d...b...|
0x804a990:   84 03 00 00 8a db ff ff  a4 03 00 00 b4 db ff ff   |................|
0x804a9a0:   c4 03 00 00 dd db ff ff  e4 03 00 00 20 dc ff ff   |............ ...|
0x804a9b0:   04 04 00 00 61 dc ff ff  24 04 00 00 b9 dc ff ff   |....a...$.......|
0x804a9c0:   48 04 00 00 0b dd ff ff  6c 04 00 00 48 dd ff ff   |H.......l...H...|
0x804a9d0:   8c 04 00 00 7f dd ff ff  ac 04 00 00 9e dd ff ff   |................|
0x804a9e0:   cc 04 00 00 c8 dd ff ff  ec 04 00 00 f4 dd ff ff   |................|
0x804a9f0:   0c 05 00 00 1f de ff ff  2c 05 00 00 68 de ff ff   |........,...h...|
0x804aa00:   4c 05 00 00 af de ff ff  6c 05 00 00 09 df ff ff   |L.......l.......|
0x804aa10:   90 05 00 00 5d df ff ff  b4 05 00 00 9c df ff ff   |....]...........|
0x804aa20:   d4 05 00 00 d5 df ff ff  f4 05 00 00 f7 df ff ff   |................|
0x804aa30:   14 06 00 00 45 e0 ff ff  34 06 00 00 81 e0 ff ff   |....E...4.......|
0x804aa40:   54 06 00 00 0a e1 ff ff  74 06 00 00 3c e1 ff ff   |T.......t...<...|
0x804aa50:   94 06 00 00 6c e1 ff ff  b4 06 00 00 b1 e1 ff ff   |....l...........|
0x804aa60:   d4 06 00 00 f0 e1 ff ff  f4 06 00 00 22 e2 ff ff   |............"...|
0x804aa70:   14 07 00 00 4e e2 ff ff  34 07 00 00 6c e2 ff ff   |....N...4...l...|
0x804aa80:   54 07 00 00 94 e2 ff ff  74 07 00 00 b9 e2 ff ff   |T.......t.......|
0x804aa90:   94 07 00 00 de e2 ff ff  b4 07 00 00 15 e3 ff ff   |................|
0x804aaa0:   d4 07 00 00 49 e3 ff ff  f4 07 00 00 9b e3 ff ff   |....I...........|
0x804aab0:   18 08 00 00 e7 e3 ff ff  3c 08 00 00 1e e4 ff ff   |........<.......|
0x804aac0:   5c 08 00 00 4f e4 ff ff  7c 08 00 00 6e e4 ff ff   |\...O...|...n...|
0x804aad0:   9c 08 00 00 98 e4 ff ff  bc 08 00 00 c0 e4 ff ff   |................|
0x804aae0:   dc 08 00 00 e9 e4 ff ff  fc 08 00 00 25 e5 ff ff   |............%...|
0x804aaf0:   1c 09 00 00 5f e5 ff ff  3c 09 00 00 b2 e5 ff ff   |...._...<.......|
0x804ab00:   60 09 00 00 ff e5 ff ff  84 09 00 00 37 e6 ff ff   |`...........7...|
0x804ab10:   a4 09 00 00 69 e6 ff ff  c4 09 00 00 7d e6 ff ff   |....i.......}...|
0x804ab20:   e4 09 00 00 94 e6 ff ff  04 0a 00 00 a9 e6 ff ff   |................|
0x804ab30:   24 0a 00 00 bf e6 ff ff  44 0a 00 00 e6 e6 ff ff   |$.......D.......|
0x804ab40:   64 0a 00 00 0b e7 ff ff  84 0a 00 00 4a e7 ff ff   |d...........J...|
0x804ab50:   a4 0a 00 00 83 e7 ff ff  c4 0a 00 00 af e7 ff ff   |................|
0x804ab60:   e4 0a 00 00 d5 e7 ff ff  04 0b 00 00 17 e8 ff ff   |................|
0x804ab70:   24 0b 00 00 59 e8 ff ff  44 0b 00 00 9b e8 ff ff   |$...Y...D.......|
0x804ab80:   64 0b 00 00 10 e9 ff ff  84 0b 00 00 6d e9 ff ff   |d...........m...|
0x804ab90:   a4 0b 00 00 ca e9 ff ff  c4 0b 00 00 27 ea ff ff   |............'...|
0x804aba0:   e4 0b 00 00 b7 ea ff ff  04 0c 00 00 1b eb ff ff   |................|
0x804abb0:   24 0c 00 00 8b eb ff ff  44 0c 00 00 d2 eb ff ff   |$.......D.......|
0x804abc0:   68 0c 00 00 27 ec ff ff  88 0c 00 00 6e ec ff ff   |h...'.......n...|
0x804abd0:   ac 0c 00 00 d6 ec ff ff  d0 0c 00 00 90 ee ff ff   |................|
0x804abe0:   00 0d 00 00 3c fa ff ff  30 0d 00 00 0a fe ff ff   |....<...0.......|
0x804abf0:   68 0d 00 00 0e fe ff ff  7c 0d 00 00 20 fe ff ff   |h.......|... ...|
0x804ac00:   90 0d 00 00 80 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804ac0c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ac1c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ac2c:   54 d7 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |T........... ...|
0x804ac3c:   30 00 00 00 b0 d6 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804ac4c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804ac5c:   10 00 00 00 54 00 00 00  cc d6 ff ff 08 00 00 00   |....T...........|
0x804ac6c:   00 00 00 00 1c 00 00 00  68 00 00 00 de d7 ff ff   |........h.......|
0x804ac7c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804ac8c:   04 04 00 00 20 00 00 00  88 00 00 00 ce d7 ff ff   |.... ...........|
0x804ac9c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804acac:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804acbc:   d8 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804accc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804acdc:   d6 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804acec:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804acfc:   de d7 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804ad0c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ad1c:   e8 d7 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804ad2c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804ad3c:   f1 d7 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804ad4c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804ad5c:   14 d8 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804ad6c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804ad7c:   35 d8 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |5...X....A....B.|
0x804ad8c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804ad9c:   90 01 00 00 69 d8 ff ff  52 00 00 00 00 41 0e 08   |....i...R....A..|
0x804adac:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804adbc:   1c 00 00 00 b4 01 00 00  97 d8 ff ff 3d 00 00 00   |............=...|
0x804adcc:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804addc:   1c 00 00 00 d4 01 00 00  b4 d8 ff ff 37 00 00 00   |............7...|
0x804adec:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804adfc:   1c 00 00 00 f4 01 00 00  cb d8 ff ff 1f 00 00 00   |................|
0x804ae0c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ae1c:   1c 00 00 00 14 02 00 00  ca d8 ff ff 2a 00 00 00   |............*...|
0x804ae2c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ae3c:   1c 00 00 00 34 02 00 00  d4 d8 ff ff 2c 00 00 00   |....4.......,...|
0x804ae4c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804ae5c:   1c 00 00 00 54 02 00 00  e0 d8 ff ff 2b 00 00 00   |....T.......+...|
0x804ae6c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804ae7c:   1c 00 00 00 74 02 00 00  eb d8 ff ff 49 00 00 00   |....t.......I...|
0x804ae8c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804ae9c:   1c 00 00 00 94 02 00 00  14 d9 ff ff 47 00 00 00   |............G...|
0x804aeac:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804aebc:   20 00 00 00 b4 02 00 00  3b d9 ff ff 5a 00 00 00   | .......;...Z...|
0x804aecc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804aedc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 71 d9 ff ff   |.... .......q...|
0x804aeec:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804aefc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804af0c:   a1 d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804af1c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804af2c:   c0 d9 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804af3c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804af4c:   d9 d9 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804af5c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804af6c:   db d9 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804af7c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804af8c:   09 da ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804af9c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804afac:   25 da ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |%........A....B.|
0x804afbc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804afcc:   8e da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804afdc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804afec:   a0 da ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804affc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b00c:   b0 da ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b01c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b02c:   d5 da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b03c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b04c:   f4 da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b05c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b06c:   06 db ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b07c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b08c:   12 db ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b09c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b0ac:   10 db ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b0bc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b0cc:   18 db ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b0dc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b0ec:   1d db ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b0fc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b10c:   22 db ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |"...7....A....B.|
0x804b11c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b12c:   39 db ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |9...4....A....B.|
0x804b13c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b14c:   4d db ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |M...R....A....B.|
0x804b15c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b16c:   60 05 00 00 7b db ff ff  4c 00 00 00 00 41 0e 08   |`...{...L....A..|
0x804b17c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b18c:   1c 00 00 00 84 05 00 00  a3 db ff ff 37 00 00 00   |............7...|
0x804b19c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1ac:   1c 00 00 00 a4 05 00 00  ba db ff ff 31 00 00 00   |............1...|
0x804b1bc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b1cc:   1c 00 00 00 c4 05 00 00  cb db ff ff 1f 00 00 00   |................|
0x804b1dc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1ec:   1c 00 00 00 e4 05 00 00  ca db ff ff 2a 00 00 00   |............*...|
0x804b1fc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b20c:   1c 00 00 00 04 06 00 00  d4 db ff ff 28 00 00 00   |............(...|
0x804b21c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b22c:   1c 00 00 00 24 06 00 00  dc db ff ff 29 00 00 00   |....$.......)...|
0x804b23c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b24c:   1c 00 00 00 44 06 00 00  e5 db ff ff 3c 00 00 00   |....D.......<...|
0x804b25c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b26c:   1c 00 00 00 64 06 00 00  01 dc ff ff 3a 00 00 00   |....d.......:...|
0x804b27c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b28c:   20 00 00 00 84 06 00 00  1b dc ff ff 53 00 00 00   | ...........S...|
0x804b29c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b2ac:   c5 0c 04 04 20 00 00 00  a8 06 00 00 4a dc ff ff   |.... .......J...|
0x804b2bc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b2cc:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b2dc:   73 dc ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |s...8....A....B.|
0x804b2ec:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b2fc:   8b dc ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b30c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b31c:   9d dc ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b32c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b33c:   91 dc ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b34c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b35c:   88 dc ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b36c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b37c:   7d dc ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b38c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b39c:   73 dc ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |s...'....A....B.|
0x804b3ac:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b3bc:   7a dc ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |z...%....A....B.|
0x804b3cc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b3dc:   7f dc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b3ec:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b3fc:   9e dc ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b40c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b41c:   b7 dc ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b42c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b43c:   c3 dc ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b44c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b45c:   c9 dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b46c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b47c:   eb dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b48c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b49c:   0d dd ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b4ac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b4bc:   2f dd ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |/...u....A....B.|
0x804b4cc:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b4dc:   84 dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b4ec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b4fc:   c1 dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b50c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b51c:   fe dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b52c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b53c:   3b de ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |;........A....B.|
0x804b54c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b55c:   ab de ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b56c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b57c:   ef de ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b58c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b59c:   3f df ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |?...G....A....B.|
0x804b5ac:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b5bc:   b0 09 00 00 62 df ff ff  55 00 00 00 00 41 0e 08   |....b...U....A..|
0x804b5cc:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b5dc:   d0 09 00 00 97 df ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b5ec:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b5fc:   20 00 00 00 f4 09 00 00  ba df ff ff 68 00 00 00   | ...........h...|
0x804b60c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b61c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 fe df ff ff   |....,...........|
0x804b62c:   ba 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804b63c:   86 04 83 05 03 ad 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b64c:   04 00 00 00 2c 00 00 00  48 0a 00 00 88 e1 ff ff   |....,...H.......|
0x804b65c:   ac 0b 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804b66c:   86 04 83 05 03 9c 0b c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b67c:   04 00 00 00 34 00 00 00  78 0a 00 00 04 ed ff ff   |....4...x.......|
0x804b68c:   ce 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b69c:   0f 03 75 78 06 10 03 02  75 7c 03 b9 03 c1 0c 01   |..ux....u|......|
0x804b6ac:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b6bc:   b0 0a 00 00 9a f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b6cc:   10 00 00 00 c4 0a 00 00  8a f0 ff ff 04 00 00 00   |................|
0x804b6dc:   00 00 00 00 48 00 00 00  d8 0a 00 00 88 f0 ff ff   |....H...........|
0x804b6ec:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804b6fc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804b70c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804b71c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804b72c:   10 00 00 00 24 0b 00 00  9c f0 ff ff 02 00 00 00   |....$...........|
0x804b73c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 d4 a7 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff f6 ff ff ff   |................|
0x804d028:   41 e4 f7 6d ab 97 76 58  7d bf 00 00 8a 5f 92 45   |A..m..vX}...._.E|
0x804d038:   ff 69 0f d4 bd 1a f7 ff  d9 91 fe ff 2c 23 61 1b   |.i..........,#a.|
0x804d048:   01 fe 09 00 fb ff ff ff  d5 00 00 00 c2 4e ee a1   |.............N..|
0x804d058:   01 00 00 00 45 a3 6a 76  64 54 00 00 03 00 00 00   |....E.jvdT......|
0x804d068:   f9 ff ff ff 08 00 00 00  01 00 00 00 34 02 56 16   |............4.V.|
0x804d078:   5f d6 ??                                           |_.?             |
