;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:55:18
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 70 d3 ff ff               	lea eax, [ebx - 0x2c90]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 d3 ff ff               	lea eax, [ebx - 0x2cf0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 55 a0 04 08               	mov eax, 0x804a055
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 54 d0 04 08                  	mov eax, 0x804d054
0x80483a5:   3d 54 d0 04 08                  	cmp eax, 0x804d054
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 54 d0 04 08                  	push 0x804d054
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 54 d0 04 08                  	mov eax, 0x804d054
0x80483e5:   2d 54 d0 04 08                  	sub eax, 0x804d054
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 54 d0 04 08                  	push 0x804d054
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 a5 1e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 91 1e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 d3 ff ff               	lea edx, [eax - 0x2c70]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 64 1e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 46 1e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 1e 1e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f4 1d 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 cb 1d 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 88 1d 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 46 1d 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ee 1c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 9d 1c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 60 1c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 29 1c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 0a 1c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 e0 1b 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b4 1b 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 89 1b 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 40 1b 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 f8 1a 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 9e 1a 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 4b 1a 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 0c 1a 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 d6 19 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b4 19 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 66 19 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 2a 19 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 a1 18 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 6f 18 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 3f 18 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 fa 17 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 bb 17 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 89 17 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 5a 17 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 3c 17 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 14 17 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ef 16 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ca 16 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 93 16 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 5e 16 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 0c 16 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 c1 15 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 8a 15 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 59 15 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 3a 15 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 10 15 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 e8 14 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 bf 14 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 83 14 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 48 14 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 f5 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 a9 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 71 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 42 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 2e 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 17 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 02 13 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 ec 12 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 c5 12 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 a0 12 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 61 12 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 28 12 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 fc 11 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 d6 11 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 50 d4 ff ff               	fld dword ptr [eax - 0x2bb0]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 50 d4 ff ff               	fld dword ptr [eax - 0x2bb0]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 54 d4 ff ff               	fld dword ptr [eax - 0x2bac]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 94 11 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 50 d4 ff ff               	fld dword ptr [eax - 0x2bb0]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 50 d4 ff ff               	fld dword ptr [eax - 0x2bb0]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 54 d4 ff ff               	fld dword ptr [eax - 0x2bac]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 52 11 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 58 d4 ff ff               	fld dword ptr [eax - 0x2ba8]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 5c d4 ff ff               	fld dword ptr [eax - 0x2ba4]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 60 d4 ff ff               	fld dword ptr [eax - 0x2ba0]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 10 11 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 64 d4 ff ff               	fld dword ptr [eax - 0x2b9c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 68 d4 ff ff               	fld dword ptr [eax - 0x2b98]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 6c d4 ff ff               	fld dword ptr [eax - 0x2b94]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 98 10 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 70 d4 ff ff               	fld qword ptr [eax - 0x2b90]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 70 d4 ff ff               	fld qword ptr [eax - 0x2b90]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 78 d4 ff ff               	fld qword ptr [eax - 0x2b88]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 3b 10 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 70 d4 ff ff               	fld qword ptr [eax - 0x2b90]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 70 d4 ff ff               	fld qword ptr [eax - 0x2b90]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 78 d4 ff ff               	fld qword ptr [eax - 0x2b88]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 de 0f 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 80 d4 ff ff               	fld qword ptr [eax - 0x2b80]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 88 d4 ff ff               	fld qword ptr [eax - 0x2b78]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 90 d4 ff ff               	fld qword ptr [eax - 0x2b70]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 81 0f 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 98 d4 ff ff               	fld qword ptr [eax - 0x2b68]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a0 d4 ff ff               	fld qword ptr [eax - 0x2b60]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 a8 d4 ff ff               	fld qword ptr [eax - 0x2b58]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 f1 0e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b0 d4 ff ff               	fld dword ptr [eax - 0x2b50]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 b4 d4 ff ff               	fld dword ptr [eax - 0x2b4c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 8d 0e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 1c 0e 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 d9 0d 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 d3 ff ff               	lea eax, [ebx - 0x2c60]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 d3 ff ff               	lea eax, [ebx - 0x2c3c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 d1 0c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 e9 d3 ff ff               	lea edx, [eax - 0x2c17]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x8049776
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 34                        	sub esp, 0x34
0x804965d:   e8 a1 0c 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049662:   05 9e 39 00 00                  	add eax, 0x399e
0x8049667:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804966a:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x804966d:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049670:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049673:   89 5d cc                        	mov dword ptr [ebp - 0x34], ebx
0x8049676:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x8049679:   89 7d c8                        	mov dword ptr [ebp - 0x38], edi
0x804967c:   8b 5d 28                        	mov ebx, dword ptr [ebp + 0x28]
0x804967f:   89 5d c4                        	mov dword ptr [ebp - 0x3c], ebx
0x8049682:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x8049685:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x8049688:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804968b:   8b 5d 48                        	mov ebx, dword ptr [ebp + 0x48]
0x804968e:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049692:   89 ca                           	mov edx, ecx
0x8049694:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049697:   89 f2                           	mov edx, esi
0x8049699:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804969d:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x80496a1:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x80496a5:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x80496a9:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x80496ac:   0f b6 55 c4                     	movzx edx, byte ptr [ebp - 0x3c]
0x80496b0:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x80496b3:   0f b6 55 c0                     	movzx edx, byte ptr [ebp - 0x40]
0x80496b7:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x80496ba:   89 fa                           	mov edx, edi
0x80496bc:   88 55 d4                        	mov byte ptr [ebp - 0x2c], dl
0x80496bf:   89 da                           	mov edx, ebx
0x80496c1:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496c4:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x80496c8:   66 89 90 24 00 00 00            	mov word ptr [eax + 0x24], dx
0x80496cf:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496d2:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496d8:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496db:   89 90 84 04 00 00               	mov dword ptr [eax + 0x484], edx
0x80496e1:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496e4:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496ea:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496ee:   88 90 30 00 00 00               	mov byte ptr [eax + 0x30], dl
0x80496f4:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496f8:   66 89 90 88 04 00 00            	mov word ptr [eax + 0x488], dx
0x80496ff:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049703:   66 89 90 32 00 00 00            	mov word ptr [eax + 0x32], dx
0x804970a:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x804970e:   88 90 34 00 00 00               	mov byte ptr [eax + 0x34], dl
0x8049714:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x8049718:   88 90 35 00 00 00               	mov byte ptr [eax + 0x35], dl
0x804971e:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x8049721:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x8049727:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x804972b:   88 90 3c 00 00 00               	mov byte ptr [eax + 0x3c], dl
0x8049731:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x8049734:   89 90 8c 04 00 00               	mov dword ptr [eax + 0x48c], edx
0x804973a:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x804973d:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x8049743:   0f b6 55 d4                     	movzx edx, byte ptr [ebp - 0x2c]
0x8049747:   88 90 44 00 00 00               	mov byte ptr [eax + 0x44], dl
0x804974d:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x8049750:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x8049756:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049759:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x804975f:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x8049763:   88 90 50 00 00 00               	mov byte ptr [eax + 0x50], dl
0x8049769:   b8 00 00 00 00                  	mov eax, 0
0x804976e:   83 c4 34                        	add esp, 0x34
0x8049771:   5b                              	pop ebx
0x8049772:   5e                              	pop esi
0x8049773:   5f                              	pop edi
0x8049774:   5d                              	pop ebp
0x8049775:   c3                              	ret 
; function: func_1 at 0x8049776 -- 0x804a055
0x8049776:   55                              	push ebp
0x8049777:   89 e5                           	mov ebp, esp
0x8049779:   57                              	push edi
0x804977a:   56                              	push esi
0x804977b:   53                              	push ebx
0x804977c:   81 ec ac 00 00 00               	sub esp, 0xac
0x8049782:   e8 7c 0b 00 00                  	call 0x804a303 <__x86.get_pc_thunk.ax>
0x8049787:   05 79 38 00 00                  	add eax, 0x3879
0x804978c:   66 c7 45 b6 ff ff               	mov word ptr [ebp - 0x4a], 0xffff
0x8049792:   c7 45 f0 fc ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffc
0x8049799:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x80497a0:   c6 45 b5 06                     	mov byte ptr [ebp - 0x4b], 6
0x80497a4:   c7 45 b0 c5 0f 89 ed            	mov dword ptr [ebp - 0x50], 0xed890fc5
0x80497ab:   c6 45 eb 04                     	mov byte ptr [ebp - 0x15], 4
0x80497af:   66 c7 45 e8 00 00               	mov word ptr [ebp - 0x18], 0
0x80497b5:   66 c7 45 e6 01 00               	mov word ptr [ebp - 0x1a], 1
0x80497bb:   c6 45 e5 f4                     	mov byte ptr [ebp - 0x1b], 0xf4
0x80497bf:   c6 45 e4 09                     	mov byte ptr [ebp - 0x1c], 9
0x80497c3:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x80497ca:   c6 45 df 04                     	mov byte ptr [ebp - 0x21], 4
0x80497ce:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x80497d5:   c7 45 ac a3 0f 63 ea            	mov dword ptr [ebp - 0x54], 0xea630fa3
0x80497dc:   c6 45 d7 03                     	mov byte ptr [ebp - 0x29], 3
0x80497e0:   c7 45 a8 de 52 d9 e2            	mov dword ptr [ebp - 0x58], 0xe2d952de
0x80497e7:   c7 45 d0 fc ff ff ff            	mov dword ptr [ebp - 0x30], 0xfffffffc
0x80497ee:   c6 45 cf c3                     	mov byte ptr [ebp - 0x31], 0xc3
0x80497f2:   66 c7 45 a6 ff ff               	mov word ptr [ebp - 0x5a], 0xffff
0x80497f8:   c7 45 c8 fc ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffc
0x80497ff:   66 c7 45 a4 6b 1b               	mov word ptr [ebp - 0x5c], 0x1b6b
0x8049805:   c6 45 a3 bc                     	mov byte ptr [ebp - 0x5d], 0xbc
0x8049809:   c6 45 a2 11                     	mov byte ptr [ebp - 0x5e], 0x11
0x804980d:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049811:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049814:   c7 45 ec fb ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffb
0x804981b:   66 c7 45 a6 44 ff               	mov word ptr [ebp - 0x5a], 0xff44
0x8049821:   80 7d b5 01                     	cmp byte ptr [ebp - 0x4b], 1
0x8049825:   0f 95 c0                        	setne al
0x8049828:   0f b6 c0                        	movzx eax, al
0x804982b:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804982e:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049831:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049834:   c6 45 a1 08                     	mov byte ptr [ebp - 0x5f], 8
0x8049838:   c7 45 c4 52 2f 65 a6            	mov dword ptr [ebp - 0x3c], 0xa6652f52
0x804983f:   c7 45 c0 a8 22 11 61            	mov dword ptr [ebp - 0x40], 0x611122a8
0x8049846:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049849:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804984c:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049850:   0f be 4d a1                     	movsx ecx, byte ptr [ebp - 0x5f]
0x8049854:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049857:   0f b6 5d a1                     	movzx ebx, byte ptr [ebp - 0x5f]
0x804985b:   0f b6 c0                        	movzx eax, al
0x804985e:   f6 f3                           	div bl
0x8049860:   0f b6 c0                        	movzx eax, al
0x8049863:   09 c8                           	or eax, ecx
0x8049865:   39 c2                           	cmp edx, eax
0x8049867:   0f 95 c0                        	setne al
0x804986a:   0f b6 c0                        	movzx eax, al
0x804986d:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049870:   83 7d b0 ff                     	cmp dword ptr [ebp - 0x50], -1
0x8049874:   0f 8c 20 04 00 00               	jl 0x8049c9a <func_1+0x524>
0x804987a:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x8049881:   66 c7 85 7e ff ff ff 0e 28      	mov word ptr [ebp - 0x82], 0x280e
0x804988a:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x8049894:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049898:   0b 45 c8                        	or eax, dword ptr [ebp - 0x38]
0x804989b:   89 c2                           	mov edx, eax
0x804989d:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x80498a1:   21 d0                           	and eax, edx
0x80498a3:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x80498a6:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x80498a9:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x80498ac:   29 c2                           	sub edx, eax
0x80498ae:   0f be 45 a1                     	movsx eax, byte ptr [ebp - 0x5f]
0x80498b2:   39 c2                           	cmp edx, eax
0x80498b4:   0f 9c c0                        	setl al
0x80498b7:   0f b6 c0                        	movzx eax, al
0x80498ba:   89 c2                           	mov edx, eax
0x80498bc:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80498c0:   31 d0                           	xor eax, edx
0x80498c2:   66 89 45 a4                     	mov word ptr [ebp - 0x5c], ax
0x80498c6:   81 7d c4 65 12 40 fc            	cmp dword ptr [ebp - 0x3c], 0xfc401265
0x80498cd:   66 83 65 e8 01                  	and word ptr [ebp - 0x18], 1
0x80498d2:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x80498d5:   89 c2                           	mov edx, eax
0x80498d7:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x80498db:   31 d0                           	xor eax, edx
0x80498dd:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x80498e0:   0f b6 55 a3                     	movzx edx, byte ptr [ebp - 0x5d]
0x80498e4:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80498e8:   39 c2                           	cmp edx, eax
0x80498ea:   0f 8f 98 00 00 00               	jg 0x8049988 <func_1+0x212>
0x80498f0:   c6 85 5f ff ff ff ac            	mov byte ptr [ebp - 0xa1], 0xac
0x80498f7:   80 7d b5 00                     	cmp byte ptr [ebp - 0x4b], 0
0x80498fb:   75 71                           	jne 0x804996e <func_1+0x1f8>
0x80498fd:   0f b6 5d a3                     	movzx ebx, byte ptr [ebp - 0x5d]
0x8049901:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049905:   8d 50 01                        	lea edx, [eax + 1]
0x8049908:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804990c:   0f b7 d0                        	movzx edx, ax
0x804990f:   0f b6 85 5f ff ff ff            	movzx eax, byte ptr [ebp - 0xa1]
0x8049916:   b9 77 00 00 00                  	mov ecx, 0x77
0x804991b:   29 c1                           	sub ecx, eax
0x804991d:   89 c8                           	mov eax, ecx
0x804991f:   89 c1                           	mov ecx, eax
0x8049921:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049925:   21 c8                           	and eax, ecx
0x8049927:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804992a:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804992e:   0b 45 b0                        	or eax, dword ptr [ebp - 0x50]
0x8049931:   39 c2                           	cmp edx, eax
0x8049933:   0f 94 c0                        	sete al
0x8049936:   0f b6 d0                        	movzx edx, al
0x8049939:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804993c:   98                              	cwde 
0x804993d:   89 c1                           	mov ecx, eax
0x804993f:   d3 fa                           	sar edx, cl
0x8049941:   89 d0                           	mov eax, edx
0x8049943:   0f bf d0                        	movsx edx, ax
0x8049946:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804994a:   98                              	cwde 
0x804994b:   89 c1                           	mov ecx, eax
0x804994d:   d3 e2                           	shl edx, cl
0x804994f:   89 d0                           	mov eax, edx
0x8049951:   89 c2                           	mov edx, eax
0x8049953:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049957:   01 d0                           	add eax, edx
0x8049959:   0f b6 c0                        	movzx eax, al
0x804995c:   01 d8                           	add eax, ebx
0x804995e:   66 89 85 7e ff ff ff            	mov word ptr [ebp - 0x82], ax
0x8049965:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049968:   66 83 f8 01                     	cmp ax, 1
0x804996c:   74 07                           	je 0x8049975 <func_1+0x1ff>
0x804996e:   ba 01 00 00 00                  	mov edx, 1
0x8049973:   eb 05                           	jmp 0x804997a <func_1+0x204>
0x8049975:   ba 00 00 00 00                  	mov edx, 0
0x804997a:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804997e:   21 d0                           	and eax, edx
0x8049980:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049983:   e9 ed 05 00 00                  	jmp 0x8049f75 <func_1+0x7ff>
0x8049988:   c7 85 74 ff ff ff 7d 1f 89 ec   	mov dword ptr [ebp - 0x8c], 0xec891f7d
0x8049992:   c7 85 70 ff ff ff 1a d7 4f 9b   	mov dword ptr [ebp - 0x90], 0x9b4fd71a
0x804999c:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x80499a3:   74 76                           	je 0x8049a1b <func_1+0x2a5>
0x80499a5:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x80499a9:   0f b6 55 d7                     	movzx edx, byte ptr [ebp - 0x29]
0x80499ad:   0f b6 75 df                     	movzx esi, byte ptr [ebp - 0x21]
0x80499b1:   89 b5 50 ff ff ff               	mov dword ptr [ebp - 0xb0], esi
0x80499b7:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x80499bb:   89 bd 4c ff ff ff               	mov dword ptr [ebp - 0xb4], edi
0x80499c1:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x80499c5:   89 9d 48 ff ff ff               	mov dword ptr [ebp - 0xb8], ebx
0x80499cb:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x80499cf:   0f b7 75 e8                     	movzx esi, word ptr [ebp - 0x18]
0x80499d3:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x80499d7:   0f b7 4d b6                     	movzx ecx, word ptr [ebp - 0x4a]
0x80499db:   50                              	push eax
0x80499dc:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x80499df:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x80499e2:   52                              	push edx
0x80499e3:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x80499e6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x80499e9:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x80499ef:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x80499f2:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x80499f8:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x80499fe:   57                              	push edi
0x80499ff:   56                              	push esi
0x8049a00:   53                              	push ebx
0x8049a01:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049a04:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049a07:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049a0a:   51                              	push ecx
0x8049a0b:   e8 44 fc ff ff                  	call 0x8049654 <set_var>
0x8049a10:   83 c4 44                        	add esp, 0x44
0x8049a13:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049a16:   e9 32 06 00 00                  	jmp 0x804a04d <func_1+0x8d7>
0x8049a1b:   66 c7 85 6e ff ff ff 7d 67      	mov word ptr [ebp - 0x92], 0x677d
0x8049a24:   c7 85 68 ff ff ff 90 2f 29 f7   	mov dword ptr [ebp - 0x98], 0xf7292f90
0x8049a2e:   0f bf 95 6e ff ff ff            	movsx edx, word ptr [ebp - 0x92]
0x8049a35:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049a39:   0f 95 c0                        	setne al
0x8049a3c:   0f b6 c0                        	movzx eax, al
0x8049a3f:   39 c2                           	cmp edx, eax
0x8049a41:   75 06                           	jne 0x8049a49 <func_1+0x2d3>
0x8049a43:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a47:   74 07                           	je 0x8049a50 <func_1+0x2da>
0x8049a49:   ba 01 00 00 00                  	mov edx, 1
0x8049a4e:   eb 05                           	jmp 0x8049a55 <func_1+0x2df>
0x8049a50:   ba 00 00 00 00                  	mov edx, 0
0x8049a55:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049a59:   39 c2                           	cmp edx, eax
0x8049a5b:   0f 84 96 00 00 00               	je 0x8049af7 <func_1+0x381>
0x8049a61:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049a65:   0f 95 c0                        	setne al
0x8049a68:   0f b6 c0                        	movzx eax, al
0x8049a6b:   31 85 70 ff ff ff               	xor dword ptr [ebp - 0x90], eax
0x8049a71:   80 65 eb 45                     	and byte ptr [ebp - 0x15], 0x45
0x8049a75:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049a79:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049a7c:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049a80:   75 09                           	jne 0x8049a8b <func_1+0x315>
0x8049a82:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049a89:   74 07                           	je 0x8049a92 <func_1+0x31c>
0x8049a8b:   b8 01 00 00 00                  	mov eax, 1
0x8049a90:   eb 05                           	jmp 0x8049a97 <func_1+0x321>
0x8049a92:   b8 00 00 00 00                  	mov eax, 0
0x8049a97:   89 c2                           	mov edx, eax
0x8049a99:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a9c:   89 c1                           	mov ecx, eax
0x8049a9e:   89 d0                           	mov eax, edx
0x8049aa0:   ba 00 00 00 00                  	mov edx, 0
0x8049aa5:   66 f7 f1                        	div cx
0x8049aa8:   0f b7 c0                        	movzx eax, ax
0x8049aab:   89 c2                           	mov edx, eax
0x8049aad:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049ab1:   09 d0                           	or eax, edx
0x8049ab3:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049ab7:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x8049abe:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x8049ac4:   0f 94 c0                        	sete al
0x8049ac7:   0f b6 c0                        	movzx eax, al
0x8049aca:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x8049acd:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049ad1:   33 85 78 ff ff ff               	xor eax, dword ptr [ebp - 0x88]
0x8049ad7:   30 45 eb                        	xor byte ptr [ebp - 0x15], al
0x8049ada:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049ade:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049ae1:   0f 9f c0                        	setg al
0x8049ae4:   0f b6 c0                        	movzx eax, al
0x8049ae7:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x8049aea:   c6 45 e4 a4                     	mov byte ptr [ebp - 0x1c], 0xa4
0x8049aee:   0f be 45 e4                     	movsx eax, byte ptr [ebp - 0x1c]
0x8049af2:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049af5:   eb 61                           	jmp 0x8049b58 <func_1+0x3e2>
0x8049af7:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049afd:   66 c1 e8 0d                     	shr ax, 0xd
0x8049b01:   0f b7 d0                        	movzx edx, ax
0x8049b04:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049b08:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049b0b:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x8049b0f:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049b13:   89 c1                           	mov ecx, eax
0x8049b15:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b18:   21 c8                           	and eax, ecx
0x8049b1a:   0f be c0                        	movsx eax, al
0x8049b1d:   89 c1                           	mov ecx, eax
0x8049b1f:   d3 fb                           	sar ebx, cl
0x8049b21:   89 d9                           	mov ecx, ebx
0x8049b23:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049b27:   39 c1                           	cmp ecx, eax
0x8049b29:   0f 95 c0                        	setne al
0x8049b2c:   0f b6 c8                        	movzx ecx, al
0x8049b2f:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049b33:   39 c1                           	cmp ecx, eax
0x8049b35:   0f 9d c0                        	setge al
0x8049b38:   0f b6 c0                        	movzx eax, al
0x8049b3b:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049b41:   0f 9d c0                        	setge al
0x8049b44:   0f b6 c0                        	movzx eax, al
0x8049b47:   21 d0                           	and eax, edx
0x8049b49:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049b4f:   0f 9e c0                        	setle al
0x8049b52:   0f b6 c0                        	movzx eax, al
0x8049b55:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049b58:   c6 45 e5 00                     	mov byte ptr [ebp - 0x1b], 0
0x8049b5c:   e9 b9 00 00 00                  	jmp 0x8049c1a <func_1+0x4a4>
0x8049b61:   c7 85 64 ff ff ff b7 2c 2a 9b   	mov dword ptr [ebp - 0x9c], 0x9b2a2cb7
0x8049b6b:   c7 85 60 ff ff ff cf 85 e8 27   	mov dword ptr [ebp - 0xa0], 0x27e885cf
0x8049b75:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b78:   f7 d8                           	neg eax
0x8049b7a:   89 c1                           	mov ecx, eax
0x8049b7c:   0f b7 55 a4                     	movzx edx, word ptr [ebp - 0x5c]
0x8049b80:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049b87:   0f 95 c0                        	setne al
0x8049b8a:   0f b6 c0                        	movzx eax, al
0x8049b8d:   39 c2                           	cmp edx, eax
0x8049b8f:   0f 9d c0                        	setge al
0x8049b92:   0f b6 c0                        	movzx eax, al
0x8049b95:   f7 d0                           	not eax
0x8049b97:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049b9d:   0f 9c c0                        	setl al
0x8049ba0:   0f b6 c0                        	movzx eax, al
0x8049ba3:   31 c1                           	xor ecx, eax
0x8049ba5:   89 ca                           	mov edx, ecx
0x8049ba7:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049bad:   21 d0                           	and eax, edx
0x8049baf:   8b 95 68 ff ff ff               	mov edx, dword ptr [ebp - 0x98]
0x8049bb5:   89 d1                           	mov ecx, edx
0x8049bb7:   ba 00 00 00 00                  	mov edx, 0
0x8049bbc:   66 f7 f1                        	div cx
0x8049bbf:   89 d0                           	mov eax, edx
0x8049bc1:   0f b7 c0                        	movzx eax, ax
0x8049bc4:   25 fb 00 00 00                  	and eax, 0xfb
0x8049bc9:   83 f8 01                        	cmp eax, 1
0x8049bcc:   0f 97 c0                        	seta al
0x8049bcf:   0f b6 c0                        	movzx eax, al
0x8049bd2:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049bd5:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049bd9:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049bdc:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bdf:   33 85 64 ff ff ff               	xor eax, dword ptr [ebp - 0x9c]
0x8049be5:   83 f8 ff                        	cmp eax, -1
0x8049be8:   0f 95 c0                        	setne al
0x8049beb:   0f b6 d0                        	movzx edx, al
0x8049bee:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049bf1:   98                              	cwde 
0x8049bf2:   0f af d0                        	imul edx, eax
0x8049bf5:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x8049bfc:   39 c2                           	cmp edx, eax
0x8049bfe:   0f 95 c0                        	setne al
0x8049c01:   f7 d8                           	neg eax
0x8049c03:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049c06:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049c0a:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x8049c10:   0f b6 45 e5                     	movzx eax, byte ptr [ebp - 0x1b]
0x8049c14:   83 c0 09                        	add eax, 9
0x8049c17:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049c1a:   80 7d e5 01                     	cmp byte ptr [ebp - 0x1b], 1
0x8049c1e:   0f 84 3d ff ff ff               	je 0x8049b61 <func_1+0x3eb>
0x8049c24:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049c28:   0f b6 55 d7                     	movzx edx, byte ptr [ebp - 0x29]
0x8049c2c:   0f b6 75 df                     	movzx esi, byte ptr [ebp - 0x21]
0x8049c30:   89 b5 50 ff ff ff               	mov dword ptr [ebp - 0xb0], esi
0x8049c36:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x8049c3a:   89 bd 4c ff ff ff               	mov dword ptr [ebp - 0xb4], edi
0x8049c40:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x8049c44:   89 9d 48 ff ff ff               	mov dword ptr [ebp - 0xb8], ebx
0x8049c4a:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x8049c4e:   0f b7 75 e8                     	movzx esi, word ptr [ebp - 0x18]
0x8049c52:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x8049c56:   0f b7 4d b6                     	movzx ecx, word ptr [ebp - 0x4a]
0x8049c5a:   50                              	push eax
0x8049c5b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c5e:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049c61:   52                              	push edx
0x8049c62:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049c65:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c68:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x8049c6e:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c71:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x8049c77:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x8049c7d:   57                              	push edi
0x8049c7e:   56                              	push esi
0x8049c7f:   53                              	push ebx
0x8049c80:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049c83:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c86:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c89:   51                              	push ecx
0x8049c8a:   e8 c5 f9 ff ff                  	call 0x8049654 <set_var>
0x8049c8f:   83 c4 44                        	add esp, 0x44
0x8049c92:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c95:   e9 b3 03 00 00                  	jmp 0x804a04d <func_1+0x8d7>
0x8049c9a:   c7 45 9c 10 12 7b 78            	mov dword ptr [ebp - 0x64], 0x787b1210
0x8049ca1:   c6 45 bf ff                     	mov byte ptr [ebp - 0x41], 0xff
0x8049ca5:   66 c7 45 bc 8c 6b               	mov word ptr [ebp - 0x44], 0x6b8c
0x8049cab:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x8049cb2:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049cb6:   bf 00 00 00 00                  	mov edi, 0
0x8049cbb:   99                              	cdq 
0x8049cbc:   f7 ff                           	idiv edi
0x8049cbe:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049cc1:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049cc4:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049cc7:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049ccb:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049cce:   c7 45 c0 04 00 00 00            	mov dword ptr [ebp - 0x40], 4
0x8049cd5:   e9 8a 02 00 00                  	jmp 0x8049f64 <func_1+0x7ee>
0x8049cda:   c7 45 b8 bc 3a 6c 55            	mov dword ptr [ebp - 0x48], 0x556c3abc
0x8049ce1:   c6 45 eb 19                     	mov byte ptr [ebp - 0x15], 0x19
0x8049ce5:   e9 b4 00 00 00                  	jmp 0x8049d9e <func_1+0x628>
0x8049cea:   c7 45 84 a4 cd 0c 75            	mov dword ptr [ebp - 0x7c], 0x750ccda4
0x8049cf1:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049cf5:   89 c3                           	mov ebx, eax
0x8049cf7:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049cfa:   0f bf d0                        	movsx edx, ax
0x8049cfd:   66 81 7d e6 e8 00               	cmp word ptr [ebp - 0x1a], 0xe8
0x8049d03:   0f 96 c0                        	setbe al
0x8049d06:   0f b6 c8                        	movzx ecx, al
0x8049d09:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049d0d:   31 c8                           	xor eax, ecx
0x8049d0f:   98                              	cwde 
0x8049d10:   89 c1                           	mov ecx, eax
0x8049d12:   d3 fa                           	sar edx, cl
0x8049d14:   89 d0                           	mov eax, edx
0x8049d16:   29 c3                           	sub ebx, eax
0x8049d18:   89 d8                           	mov eax, ebx
0x8049d1a:   83 e8 3d                        	sub eax, 0x3d
0x8049d1d:   89 c2                           	mov edx, eax
0x8049d1f:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049d22:   21 d0                           	and eax, edx
0x8049d24:   83 c8 36                        	or eax, 0x36
0x8049d27:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x8049d2a:   c6 45 bf f5                     	mov byte ptr [ebp - 0x41], 0xf5
0x8049d2e:   eb 1c                           	jmp 0x8049d4c <func_1+0x5d6>
0x8049d30:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049d34:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d37:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d3a:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x8049d3d:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8049d40:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049d43:   09 d0                           	or eax, edx
0x8049d45:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d48:   80 45 bf 01                     	add byte ptr [ebp - 0x41], 1
0x8049d4c:   80 7d bf 30                     	cmp byte ptr [ebp - 0x41], 0x30
0x8049d50:   75 de                           	jne 0x8049d30 <func_1+0x5ba>
0x8049d52:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049d55:   83 c0 48                        	add eax, 0x48
0x8049d58:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049d5b:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049d5f:   0f b6 c0                        	movzx eax, al
0x8049d62:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049d65:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049d69:   0f b6 7d bf                     	movzx edi, byte ptr [ebp - 0x41]
0x8049d6d:   99                              	cdq 
0x8049d6e:   f7 ff                           	idiv edi
0x8049d70:   3d a6 3c b1 53                  	cmp eax, 0x53b13ca6
0x8049d75:   0f 94 c0                        	sete al
0x8049d78:   0f b6 c0                        	movzx eax, al
0x8049d7b:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049d7e:   0f 9c c0                        	setl al
0x8049d81:   0f b6 d0                        	movzx edx, al
0x8049d84:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d87:   0f b7 c0                        	movzx eax, ax
0x8049d8a:   89 c1                           	mov ecx, eax
0x8049d8c:   d3 e2                           	shl edx, cl
0x8049d8e:   89 d0                           	mov eax, edx
0x8049d90:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049d93:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x8049d97:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d9a:   80 6d eb 01                     	sub byte ptr [ebp - 0x15], 1
0x8049d9e:   80 7d eb 06                     	cmp byte ptr [ebp - 0x15], 6
0x8049da2:   0f 87 42 ff ff ff               	ja 0x8049cea <func_1+0x574>
0x8049da8:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x8049dac:   83 c0 01                        	add eax, 1
0x8049daf:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049db2:   80 7d a1 00                     	cmp byte ptr [ebp - 0x5f], 0
0x8049db6:   0f 85 a3 01 00 00               	jne 0x8049f5f <func_1+0x7e9>
0x8049dbc:   c7 45 ec 02 00 00 00            	mov dword ptr [ebp - 0x14], 2
0x8049dc3:   e9 8b 01 00 00                  	jmp 0x8049f53 <func_1+0x7dd>
0x8049dc8:   66 c7 45 96 75 c9               	mov word ptr [ebp - 0x6a], 0xc975
0x8049dce:   80 7d b5 00                     	cmp byte ptr [ebp - 0x4b], 0
0x8049dd2:   0f 84 a5 00 00 00               	je 0x8049e7d <func_1+0x707>
0x8049dd8:   c6 45 94 c7                     	mov byte ptr [ebp - 0x6c], 0xc7
0x8049ddc:   c7 45 90 bc c4 2c 2b            	mov dword ptr [ebp - 0x70], 0x2b2cc4bc
0x8049de3:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049de7:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049deb:   75 07                           	jne 0x8049df4 <func_1+0x67e>
0x8049ded:   be 00 02 00 00                  	mov esi, 0x200
0x8049df2:   eb 05                           	jmp 0x8049df9 <func_1+0x683>
0x8049df4:   be 00 00 00 00                  	mov esi, 0
0x8049df9:   99                              	cdq 
0x8049dfa:   f7 fe                           	idiv esi
0x8049dfc:   89 d1                           	mov ecx, edx
0x8049dfe:   89 c8                           	mov eax, ecx
0x8049e00:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049e03:   80 7d df 04                     	cmp byte ptr [ebp - 0x21], 4
0x8049e07:   0f 97 c0                        	seta al
0x8049e0a:   0f b6 c0                        	movzx eax, al
0x8049e0d:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x8049e10:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049e14:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049e17:   83 7d f0 01                     	cmp dword ptr [ebp - 0x10], 1
0x8049e1b:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x8049e1f:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049e22:   0f 94 c0                        	sete al
0x8049e25:   0f b6 c0                        	movzx eax, al
0x8049e28:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049e2b:   0f be 45 e5                     	movsx eax, byte ptr [ebp - 0x1b]
0x8049e2f:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049e32:   0f 97 c0                        	seta al
0x8049e35:   0f b6 c0                        	movzx eax, al
0x8049e38:   2b 45 e0                        	sub eax, dword ptr [ebp - 0x20]
0x8049e3b:   89 c1                           	mov ecx, eax
0x8049e3d:   ba c7 f0 36 18                  	mov edx, 0x1836f0c7
0x8049e42:   89 c8                           	mov eax, ecx
0x8049e44:   f7 ea                           	imul edx
0x8049e46:   c1 fa 1a                        	sar edx, 0x1a
0x8049e49:   89 c8                           	mov eax, ecx
0x8049e4b:   c1 f8 1f                        	sar eax, 0x1f
0x8049e4e:   29 c2                           	sub edx, eax
0x8049e50:   89 d0                           	mov eax, edx
0x8049e52:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e55:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x8049e5c:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x8049e60:   0f be c0                        	movsx eax, al
0x8049e63:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x8049e66:   0f be ca                        	movsx ecx, dl
0x8049e69:   99                              	cdq 
0x8049e6a:   f7 f9                           	idiv ecx
0x8049e6c:   89 d0                           	mov eax, edx
0x8049e6e:   66 83 f8 79                     	cmp ax, 0x79
0x8049e72:   0f 94 c0                        	sete al
0x8049e75:   0f b6 c0                        	movzx eax, al
0x8049e78:   31 45 d0                        	xor dword ptr [ebp - 0x30], eax
0x8049e7b:   eb 17                           	jmp 0x8049e94 <func_1+0x71e>
0x8049e7d:   c6 45 95 9f                     	mov byte ptr [ebp - 0x6b], 0x9f
0x8049e81:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e84:   0f be c8                        	movsx ecx, al
0x8049e87:   b8 07 00 00 00                  	mov eax, 7
0x8049e8c:   99                              	cdq 
0x8049e8d:   f7 f9                           	idiv ecx
0x8049e8f:   89 d0                           	mov eax, edx
0x8049e91:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049e94:   80 6d cf 01                     	sub byte ptr [ebp - 0x31], 1
0x8049e98:   66 c7 45 bc 00 00               	mov word ptr [ebp - 0x44], 0
0x8049e9e:   e9 9e 00 00 00                  	jmp 0x8049f41 <func_1+0x7cb>
0x8049ea3:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x8049eaa:   c7 45 88 d9 cc db a8            	mov dword ptr [ebp - 0x78], 0xa8dbccd9
0x8049eb1:   80 7d b5 00                     	cmp byte ptr [ebp - 0x4b], 0
0x8049eb5:   0f 85 93 00 00 00               	jne 0x8049f4e <func_1+0x7d8>
0x8049ebb:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049ebf:   88 45 e5                        	mov byte ptr [ebp - 0x1b], al
0x8049ec2:   66 0f be 45 e5                  	movsx ax, byte ptr [ebp - 0x1b]
0x8049ec7:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x8049eca:   21 d0                           	and eax, edx
0x8049ecc:   0f b7 d0                        	movzx edx, ax
0x8049ecf:   66 0f be 45 e4                  	movsx ax, byte ptr [ebp - 0x1c]
0x8049ed4:   0f b7 c0                        	movzx eax, ax
0x8049ed7:   89 c1                           	mov ecx, eax
0x8049ed9:   d3 e2                           	shl edx, cl
0x8049edb:   89 d0                           	mov eax, edx
0x8049edd:   3d ac f8 00 00                  	cmp eax, 0xf8ac
0x8049ee2:   0f 95 c0                        	setne al
0x8049ee5:   0f b6 d0                        	movzx edx, al
0x8049ee8:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049eeb:   0f be c0                        	movsx eax, al
0x8049eee:   89 c1                           	mov ecx, eax
0x8049ef0:   d3 fa                           	sar edx, cl
0x8049ef2:   89 d0                           	mov eax, edx
0x8049ef4:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049ef7:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049efb:   75 07                           	jne 0x8049f04 <func_1+0x78e>
0x8049efd:   66 83 7d b6 00                  	cmp word ptr [ebp - 0x4a], 0
0x8049f02:   74 07                           	je 0x8049f0b <func_1+0x795>
0x8049f04:   b8 01 00 00 00                  	mov eax, 1
0x8049f09:   eb 05                           	jmp 0x8049f10 <func_1+0x79a>
0x8049f0b:   b8 00 00 00 00                  	mov eax, 0
0x8049f10:   09 45 8c                        	or dword ptr [ebp - 0x74], eax
0x8049f13:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049f16:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049f19:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049f1d:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049f20:   66 83 7d a6 00                  	cmp word ptr [ebp - 0x5a], 0
0x8049f25:   74 07                           	je 0x8049f2e <func_1+0x7b8>
0x8049f27:   b8 01 00 00 00                  	mov eax, 1
0x8049f2c:   eb 05                           	jmp 0x8049f33 <func_1+0x7bd>
0x8049f2e:   b8 00 00 00 00                  	mov eax, 0
0x8049f33:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049f36:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049f3a:   83 c0 02                        	add eax, 2
0x8049f3d:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049f41:   66 83 7d bc 16                  	cmp word ptr [ebp - 0x44], 0x16
0x8049f46:   0f 8e 57 ff ff ff               	jle 0x8049ea3 <func_1+0x72d>
0x8049f4c:   eb 01                           	jmp 0x8049f4f <func_1+0x7d9>
0x8049f4e:   90                              	nop 
0x8049f4f:   83 45 ec 02                     	add dword ptr [ebp - 0x14], 2
0x8049f53:   83 7d ec 2c                     	cmp dword ptr [ebp - 0x14], 0x2c
0x8049f57:   0f 84 6b fe ff ff               	je 0x8049dc8 <func_1+0x652>
0x8049f5d:   eb 01                           	jmp 0x8049f60 <func_1+0x7ea>
0x8049f5f:   90                              	nop 
0x8049f60:   83 6d c0 01                     	sub dword ptr [ebp - 0x40], 1
0x8049f64:   83 7d c0 e7                     	cmp dword ptr [ebp - 0x40], -0x19
0x8049f68:   0f 84 6c fd ff ff               	je 0x8049cda <func_1+0x564>
0x8049f6e:   c7 45 a8 02 00 00 00            	mov dword ptr [ebp - 0x58], 2
0x8049f75:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049f79:   0f 9e c0                        	setle al
0x8049f7c:   0f b6 c0                        	movzx eax, al
0x8049f7f:   0f b7 55 a6                     	movzx edx, word ptr [ebp - 0x5a]
0x8049f83:   89 d1                           	mov ecx, edx
0x8049f85:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x8049f88:   31 d1                           	xor ecx, edx
0x8049f8a:   0f b7 55 b6                     	movzx edx, word ptr [ebp - 0x4a]
0x8049f8e:   21 d1                           	and ecx, edx
0x8049f90:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049f94:   09 ca                           	or edx, ecx
0x8049f96:   83 ea 41                        	sub edx, 0x41
0x8049f99:   0f be d2                        	movsx edx, dl
0x8049f9c:   c1 e2 04                        	shl edx, 4
0x8049f9f:   29 d0                           	sub eax, edx
0x8049fa1:   0f be 4d e5                     	movsx ecx, byte ptr [ebp - 0x1b]
0x8049fa5:   ba 00 00 00 00                  	mov edx, 0
0x8049faa:   f7 f1                           	div ecx
0x8049fac:   89 55 e0                        	mov dword ptr [ebp - 0x20], edx
0x8049faf:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049fb3:   0b 45 c0                        	or eax, dword ptr [ebp - 0x40]
0x8049fb6:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049fb9:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049fbd:   0f bf d0                        	movsx edx, ax
0x8049fc0:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049fc4:   c0 f8 07                        	sar al, 7
0x8049fc7:   0f be c0                        	movsx eax, al
0x8049fca:   bb fe ff ff ff                  	mov ebx, 0xfffffffe
0x8049fcf:   89 c1                           	mov ecx, eax
0x8049fd1:   d3 fb                           	sar ebx, cl
0x8049fd3:   89 d8                           	mov eax, ebx
0x8049fd5:   98                              	cwde 
0x8049fd6:   0f af c2                        	imul eax, edx
0x8049fd9:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049fdc:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x8049fe0:   0f b6 55 d7                     	movzx edx, byte ptr [ebp - 0x29]
0x8049fe4:   0f b6 75 df                     	movzx esi, byte ptr [ebp - 0x21]
0x8049fe8:   89 b5 50 ff ff ff               	mov dword ptr [ebp - 0xb0], esi
0x8049fee:   0f be 7d e4                     	movsx edi, byte ptr [ebp - 0x1c]
0x8049ff2:   89 bd 4c ff ff ff               	mov dword ptr [ebp - 0xb4], edi
0x8049ff8:   0f be 5d e5                     	movsx ebx, byte ptr [ebp - 0x1b]
0x8049ffc:   89 9d 48 ff ff ff               	mov dword ptr [ebp - 0xb8], ebx
0x804a002:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a006:   0f b7 75 e8                     	movzx esi, word ptr [ebp - 0x18]
0x804a00a:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x804a00e:   0f b7 4d b6                     	movzx ecx, word ptr [ebp - 0x4a]
0x804a012:   50                              	push eax
0x804a013:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a016:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a019:   52                              	push edx
0x804a01a:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a01d:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a020:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a026:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a029:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a02f:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a035:   57                              	push edi
0x804a036:   56                              	push esi
0x804a037:   53                              	push ebx
0x804a038:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a03b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a03e:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a041:   51                              	push ecx
0x804a042:   e8 0d f6 ff ff                  	call 0x8049654 <set_var>
0x804a047:   83 c4 44                        	add esp, 0x44
0x804a04a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a04d:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a050:   5b                              	pop ebx
0x804a051:   5e                              	pop esi
0x804a052:   5f                              	pop edi
0x804a053:   5d                              	pop ebp
0x804a054:   c3                              	ret 
; function: main at 0x804a055 -- 0x804a303
0x804a055:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a059:   83 e4 f0                        	and esp, 0xfffffff0
0x804a05c:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a05f:   55                              	push ebp
0x804a060:   89 e5                           	mov ebp, esp
0x804a062:   53                              	push ebx
0x804a063:   51                              	push ecx
0x804a064:   83 ec 10                        	sub esp, 0x10
0x804a067:   e8 24 e3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a06c:   81 c3 94 2f 00 00               	add ebx, 0x2f94
0x804a072:   89 c8                           	mov eax, ecx
0x804a074:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a07b:   83 38 02                        	cmp dword ptr [eax], 2
0x804a07e:   75 26                           	jne 0x804a0a6 <main+0x51>
0x804a080:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a083:   83 c0 04                        	add eax, 4
0x804a086:   8b 00                           	mov eax, dword ptr [eax]
0x804a088:   83 ec 08                        	sub esp, 8
0x804a08b:   8d 93 ed d3 ff ff               	lea edx, [ebx - 0x2c13]
0x804a091:   52                              	push edx
0x804a092:   50                              	push eax
0x804a093:   e8 68 e2 ff ff                  	call 0x8048300 <strcmp>
0x804a098:   83 c4 10                        	add esp, 0x10
0x804a09b:   85 c0                           	test eax, eax
0x804a09d:   75 07                           	jne 0x804a0a6 <main+0x51>
0x804a09f:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a0a6:   e8 ab e3 ff ff                  	call 0x8048456 <platform_main_begin>
0x804a0ab:   e8 bb f3 ff ff                  	call 0x804946b <crc32_gentab>
0x804a0b0:   e8 c1 f6 ff ff                  	call 0x8049776 <func_1>
0x804a0b5:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a0bc:   0f b7 c0                        	movzx eax, ax
0x804a0bf:   83 ec 04                        	sub esp, 4
0x804a0c2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a0c5:   8d 93 ef d3 ff ff               	lea edx, [ebx - 0x2c11]
0x804a0cb:   52                              	push edx
0x804a0cc:   50                              	push eax
0x804a0cd:   e8 a5 f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a0d2:   83 c4 10                        	add esp, 0x10
0x804a0d5:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a0db:   89 c2                           	mov edx, eax
0x804a0dd:   83 ec 04                        	sub esp, 4
0x804a0e0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a0e3:   8d 83 f3 d3 ff ff               	lea eax, [ebx - 0x2c0d]
0x804a0e9:   50                              	push eax
0x804a0ea:   52                              	push edx
0x804a0eb:   e8 87 f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a0f0:   83 c4 10                        	add esp, 0x10
0x804a0f3:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804a0f9:   83 ec 04                        	sub esp, 4
0x804a0fc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a0ff:   8d 93 f7 d3 ff ff               	lea edx, [ebx - 0x2c09]
0x804a105:   52                              	push edx
0x804a106:   50                              	push eax
0x804a107:   e8 6b f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a10c:   83 c4 10                        	add esp, 0x10
0x804a10f:   b8 06 00 00 00                  	mov eax, 6
0x804a114:   0f b6 c0                        	movzx eax, al
0x804a117:   83 ec 04                        	sub esp, 4
0x804a11a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a11d:   8d 93 fb d3 ff ff               	lea edx, [ebx - 0x2c05]
0x804a123:   52                              	push edx
0x804a124:   50                              	push eax
0x804a125:   e8 4d f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a12a:   83 c4 10                        	add esp, 0x10
0x804a12d:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a133:   89 c2                           	mov edx, eax
0x804a135:   83 ec 04                        	sub esp, 4
0x804a138:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a13b:   8d 83 00 d4 ff ff               	lea eax, [ebx - 0x2c00]
0x804a141:   50                              	push eax
0x804a142:   52                              	push edx
0x804a143:   e8 2f f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a148:   83 c4 10                        	add esp, 0x10
0x804a14b:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804a152:   0f b6 c0                        	movzx eax, al
0x804a155:   83 ec 04                        	sub esp, 4
0x804a158:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a15b:   8d 93 05 d4 ff ff               	lea edx, [ebx - 0x2bfb]
0x804a161:   52                              	push edx
0x804a162:   50                              	push eax
0x804a163:   e8 0f f4 ff ff                  	call 0x8049577 <transparent_crc>
0x804a168:   83 c4 10                        	add esp, 0x10
0x804a16b:   0f b7 83 88 04 00 00            	movzx eax, word ptr [ebx + 0x488]
0x804a172:   0f b7 c0                        	movzx eax, ax
0x804a175:   83 ec 04                        	sub esp, 4
0x804a178:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a17b:   8d 93 0a d4 ff ff               	lea edx, [ebx - 0x2bf6]
0x804a181:   52                              	push edx
0x804a182:   50                              	push eax
0x804a183:   e8 ef f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a188:   83 c4 10                        	add esp, 0x10
0x804a18b:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804a192:   0f b7 c0                        	movzx eax, ax
0x804a195:   83 ec 04                        	sub esp, 4
0x804a198:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a19b:   8d 93 0f d4 ff ff               	lea edx, [ebx - 0x2bf1]
0x804a1a1:   52                              	push edx
0x804a1a2:   50                              	push eax
0x804a1a3:   e8 cf f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1a8:   83 c4 10                        	add esp, 0x10
0x804a1ab:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804a1b2:   0f be c0                        	movsx eax, al
0x804a1b5:   83 ec 04                        	sub esp, 4
0x804a1b8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a1bb:   8d 93 14 d4 ff ff               	lea edx, [ebx - 0x2bec]
0x804a1c1:   52                              	push edx
0x804a1c2:   50                              	push eax
0x804a1c3:   e8 af f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1c8:   83 c4 10                        	add esp, 0x10
0x804a1cb:   0f b6 83 35 00 00 00            	movzx eax, byte ptr [ebx + 0x35]
0x804a1d2:   0f be c0                        	movsx eax, al
0x804a1d5:   83 ec 04                        	sub esp, 4
0x804a1d8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a1db:   8d 93 19 d4 ff ff               	lea edx, [ebx - 0x2be7]
0x804a1e1:   52                              	push edx
0x804a1e2:   50                              	push eax
0x804a1e3:   e8 8f f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a1e8:   83 c4 10                        	add esp, 0x10
0x804a1eb:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a1f1:   83 ec 04                        	sub esp, 4
0x804a1f4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a1f7:   8d 93 1e d4 ff ff               	lea edx, [ebx - 0x2be2]
0x804a1fd:   52                              	push edx
0x804a1fe:   50                              	push eax
0x804a1ff:   e8 73 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a204:   83 c4 10                        	add esp, 0x10
0x804a207:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a20e:   0f b6 c0                        	movzx eax, al
0x804a211:   83 ec 04                        	sub esp, 4
0x804a214:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a217:   8d 93 24 d4 ff ff               	lea edx, [ebx - 0x2bdc]
0x804a21d:   52                              	push edx
0x804a21e:   50                              	push eax
0x804a21f:   e8 53 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a224:   83 c4 10                        	add esp, 0x10
0x804a227:   8b 83 8c 04 00 00               	mov eax, dword ptr [ebx + 0x48c]
0x804a22d:   83 ec 04                        	sub esp, 4
0x804a230:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a233:   8d 93 2a d4 ff ff               	lea edx, [ebx - 0x2bd6]
0x804a239:   52                              	push edx
0x804a23a:   50                              	push eax
0x804a23b:   e8 37 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a240:   83 c4 10                        	add esp, 0x10
0x804a243:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a249:   89 c2                           	mov edx, eax
0x804a24b:   83 ec 04                        	sub esp, 4
0x804a24e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a251:   8d 83 30 d4 ff ff               	lea eax, [ebx - 0x2bd0]
0x804a257:   50                              	push eax
0x804a258:   52                              	push edx
0x804a259:   e8 19 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a25e:   83 c4 10                        	add esp, 0x10
0x804a261:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804a268:   0f b6 c0                        	movzx eax, al
0x804a26b:   83 ec 04                        	sub esp, 4
0x804a26e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a271:   8d 93 36 d4 ff ff               	lea edx, [ebx - 0x2bca]
0x804a277:   52                              	push edx
0x804a278:   50                              	push eax
0x804a279:   e8 f9 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a27e:   83 c4 10                        	add esp, 0x10
0x804a281:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a287:   89 c2                           	mov edx, eax
0x804a289:   83 ec 04                        	sub esp, 4
0x804a28c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a28f:   8d 83 3c d4 ff ff               	lea eax, [ebx - 0x2bc4]
0x804a295:   50                              	push eax
0x804a296:   52                              	push edx
0x804a297:   e8 db f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a29c:   83 c4 10                        	add esp, 0x10
0x804a29f:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a2a5:   89 c2                           	mov edx, eax
0x804a2a7:   83 ec 04                        	sub esp, 4
0x804a2aa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2ad:   8d 83 42 d4 ff ff               	lea eax, [ebx - 0x2bbe]
0x804a2b3:   50                              	push eax
0x804a2b4:   52                              	push edx
0x804a2b5:   e8 bd f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2ba:   83 c4 10                        	add esp, 0x10
0x804a2bd:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804a2c4:   0f b6 c0                        	movzx eax, al
0x804a2c7:   83 ec 04                        	sub esp, 4
0x804a2ca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2cd:   8d 93 48 d4 ff ff               	lea edx, [ebx - 0x2bb8]
0x804a2d3:   52                              	push edx
0x804a2d4:   50                              	push eax
0x804a2d5:   e8 9d f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2da:   83 c4 10                        	add esp, 0x10
0x804a2dd:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a2e3:   f7 d0                           	not eax
0x804a2e5:   83 ec 08                        	sub esp, 8
0x804a2e8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2eb:   50                              	push eax
0x804a2ec:   e8 75 e1 ff ff                  	call 0x8048466 <platform_main_end>
0x804a2f1:   83 c4 10                        	add esp, 0x10
0x804a2f4:   b8 00 00 00 00                  	mov eax, 0
0x804a2f9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a2fc:   59                              	pop ecx
0x804a2fd:   5b                              	pop ebx
0x804a2fe:   5d                              	pop ebp
0x804a2ff:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a302:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a303 -- 0x804a307
0x804a303:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a306:   c3                              	ret 
; data inside code section at 0x804a307 -- 0x804a310
0x804a307:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: __libc_csu_init at 0x804a310 -- 0x804a36d
0x804a310:   55                              	push ebp
0x804a311:   57                              	push edi
0x804a312:   56                              	push esi
0x804a313:   53                              	push ebx
0x804a314:   e8 77 e0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a319:   81 c3 e7 2c 00 00               	add ebx, 0x2ce7
0x804a31f:   83 ec 0c                        	sub esp, 0xc
0x804a322:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a326:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a32c:   e8 9b df ff ff                  	call 0x80482cc <_init>
0x804a331:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a337:   29 c6                           	sub esi, eax
0x804a339:   c1 fe 02                        	sar esi, 2
0x804a33c:   85 f6                           	test esi, esi
0x804a33e:   74 25                           	je 0x804a365 <__libc_csu_init+0x55>
0x804a340:   31 ff                           	xor edi, edi
0x804a342:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a348:   83 ec 04                        	sub esp, 4
0x804a34b:   55                              	push ebp
0x804a34c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a350:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a354:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a35b:   83 c7 01                        	add edi, 1
0x804a35e:   83 c4 10                        	add esp, 0x10
0x804a361:   39 fe                           	cmp esi, edi
0x804a363:   75 e3                           	jne 0x804a348 <__libc_csu_init+0x38>
0x804a365:   83 c4 0c                        	add esp, 0xc
0x804a368:   5b                              	pop ebx
0x804a369:   5e                              	pop esi
0x804a36a:   5f                              	pop edi
0x804a36b:   5d                              	pop ebp
0x804a36c:   c3                              	ret 
; data inside code section at 0x804a36d -- 0x804a370
0x804a36d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a370 -- 0x804a372
0x804a370:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a374 -- 0x804a388
0x804a374:   53                              	push ebx
0x804a375:   83 ec 08                        	sub esp, 8
0x804a378:   e8 13 e0 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a37d:   81 c3 83 2c 00 00               	add ebx, 0x2c83
0x804a383:   83 c4 08                        	add esp, 8
0x804a386:   5b                              	pop ebx
0x804a387:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c a3 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a388:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a398:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a3a8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a3b8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a3c8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a3d8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a3e8:   06 25 64 0a 00 31 00 67  5f 32 00 67 5f 33 00 67   |.%d..1.g_2.g_3.g|
0x804a3f8:   5f 37 00 67 5f 31 33 00  67 5f 31 34 00 67 5f 33   |_7.g_13.g_14.g_3|
0x804a408:   36 00 67 5f 34 34 00 67  5f 38 34 00 67 5f 38 37   |6.g_44.g_84.g_87|
0x804a418:   00 67 5f 38 38 00 67 5f  31 30 36 00 67 5f 31 30   |.g_88.g_106.g_10|
0x804a428:   37 00 67 5f 31 33 35 00  67 5f 31 34 33 00 67 5f   |7.g_135.g_143.g_|
0x804a438:   31 34 34 00 67 5f 31 37  34 00 67 5f 31 37 35 00   |144.g_174.g_175.|
0x804a448:   67 5f 31 38 32 00 00 00  00 00 00 3f ff ff ff 7e   |g_182......?...~|
0x804a458:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804a468:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804a478:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804a488:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804a498:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804a4a8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804a4b8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804a4b8:   01 1b 03 3b b8 02 00 00  56 00 00 00 38 de ff ff   |...;....V...8...|
0x804a4c8:   e8 02 00 00 78 de ff ff  0c 03 00 00 c8 de ff ff   |....x...........|
0x804a4d8:   d4 02 00 00 9e df ff ff  20 03 00 00 ae df ff ff   |........ .......|
0x804a4e8:   40 03 00 00 dc df ff ff  64 03 00 00 fa df ff ff   |@.......d.......|
0x804a4f8:   84 03 00 00 22 e0 ff ff  a4 03 00 00 4c e0 ff ff   |....".......L...|
0x804a508:   c4 03 00 00 75 e0 ff ff  e4 03 00 00 b8 e0 ff ff   |....u...........|
0x804a518:   04 04 00 00 f9 e0 ff ff  24 04 00 00 51 e1 ff ff   |........$...Q...|
0x804a528:   48 04 00 00 a3 e1 ff ff  6c 04 00 00 e0 e1 ff ff   |H.......l.......|
0x804a538:   8c 04 00 00 17 e2 ff ff  ac 04 00 00 36 e2 ff ff   |............6...|
0x804a548:   cc 04 00 00 60 e2 ff ff  ec 04 00 00 8c e2 ff ff   |....`...........|
0x804a558:   0c 05 00 00 b7 e2 ff ff  2c 05 00 00 00 e3 ff ff   |........,.......|
0x804a568:   4c 05 00 00 47 e3 ff ff  6c 05 00 00 a1 e3 ff ff   |L...G...l.......|
0x804a578:   90 05 00 00 f5 e3 ff ff  b4 05 00 00 34 e4 ff ff   |............4...|
0x804a588:   d4 05 00 00 6d e4 ff ff  f4 05 00 00 8f e4 ff ff   |....m...........|
0x804a598:   14 06 00 00 dd e4 ff ff  34 06 00 00 19 e5 ff ff   |........4.......|
0x804a5a8:   54 06 00 00 a2 e5 ff ff  74 06 00 00 d4 e5 ff ff   |T.......t.......|
0x804a5b8:   94 06 00 00 04 e6 ff ff  b4 06 00 00 49 e6 ff ff   |............I...|
0x804a5c8:   d4 06 00 00 88 e6 ff ff  f4 06 00 00 ba e6 ff ff   |................|
0x804a5d8:   14 07 00 00 e6 e6 ff ff  34 07 00 00 04 e7 ff ff   |........4.......|
0x804a5e8:   54 07 00 00 2c e7 ff ff  74 07 00 00 51 e7 ff ff   |T...,...t...Q...|
0x804a5f8:   94 07 00 00 76 e7 ff ff  b4 07 00 00 ad e7 ff ff   |....v...........|
0x804a608:   d4 07 00 00 e1 e7 ff ff  f4 07 00 00 33 e8 ff ff   |............3...|
0x804a618:   18 08 00 00 7f e8 ff ff  3c 08 00 00 b6 e8 ff ff   |........<.......|
0x804a628:   5c 08 00 00 e7 e8 ff ff  7c 08 00 00 06 e9 ff ff   |\.......|.......|
0x804a638:   9c 08 00 00 30 e9 ff ff  bc 08 00 00 58 e9 ff ff   |....0.......X...|
0x804a648:   dc 08 00 00 81 e9 ff ff  fc 08 00 00 bd e9 ff ff   |................|
0x804a658:   1c 09 00 00 f7 e9 ff ff  3c 09 00 00 4a ea ff ff   |........<...J...|
0x804a668:   60 09 00 00 97 ea ff ff  84 09 00 00 cf ea ff ff   |`...............|
0x804a678:   a4 09 00 00 01 eb ff ff  c4 09 00 00 15 eb ff ff   |................|
0x804a688:   e4 09 00 00 2c eb ff ff  04 0a 00 00 41 eb ff ff   |....,.......A...|
0x804a698:   24 0a 00 00 57 eb ff ff  44 0a 00 00 7e eb ff ff   |$...W...D...~...|
0x804a6a8:   64 0a 00 00 a3 eb ff ff  84 0a 00 00 e2 eb ff ff   |d...............|
0x804a6b8:   a4 0a 00 00 1b ec ff ff  c4 0a 00 00 47 ec ff ff   |............G...|
0x804a6c8:   e4 0a 00 00 6d ec ff ff  04 0b 00 00 af ec ff ff   |....m...........|
0x804a6d8:   24 0b 00 00 f1 ec ff ff  44 0b 00 00 33 ed ff ff   |$.......D...3...|
0x804a6e8:   64 0b 00 00 a8 ed ff ff  84 0b 00 00 05 ee ff ff   |d...............|
0x804a6f8:   a4 0b 00 00 62 ee ff ff  c4 0b 00 00 bf ee ff ff   |....b...........|
0x804a708:   e4 0b 00 00 4f ef ff ff  04 0c 00 00 b3 ef ff ff   |....O...........|
0x804a718:   24 0c 00 00 23 f0 ff ff  44 0c 00 00 6a f0 ff ff   |$...#...D...j...|
0x804a728:   68 0c 00 00 bf f0 ff ff  88 0c 00 00 06 f1 ff ff   |h...............|
0x804a738:   ac 0c 00 00 6e f1 ff ff  d0 0c 00 00 9c f1 ff ff   |....n...........|
0x804a748:   f4 0c 00 00 be f2 ff ff  24 0d 00 00 9d fb ff ff   |........$.......|
0x804a758:   54 0d 00 00 4b fe ff ff  8c 0d 00 00 58 fe ff ff   |T...K.......X...|
0x804a768:   a0 0d 00 00 b8 fe ff ff  ec 0d 00 00 14            |.............   |
; section: .eh_frame
0x804a774:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a784:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a794:   ec db ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804a7a4:   30 00 00 00 48 db ff ff  40 00 00 00 00 0e 08 46   |0...H...@......F|
0x804a7b4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804a7c4:   10 00 00 00 54 00 00 00  64 db ff ff 08 00 00 00   |....T...d.......|
0x804a7d4:   00 00 00 00 1c 00 00 00  68 00 00 00 76 dc ff ff   |........h...v...|
0x804a7e4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804a7f4:   04 04 00 00 20 00 00 00  88 00 00 00 66 dc ff ff   |.... .......f...|
0x804a804:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804a814:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804a824:   70 dc ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804a834:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804a844:   6e dc ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |n...(....A....B.|
0x804a854:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804a864:   76 dc ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |v...*....A....B.|
0x804a874:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804a884:   80 dc ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804a894:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804a8a4:   89 dc ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804a8b4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804a8c4:   ac dc ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804a8d4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804a8e4:   cd dc ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804a8f4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804a904:   90 01 00 00 01 dd ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804a914:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804a924:   1c 00 00 00 b4 01 00 00  2f dd ff ff 3d 00 00 00   |......../...=...|
0x804a934:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804a944:   1c 00 00 00 d4 01 00 00  4c dd ff ff 37 00 00 00   |........L...7...|
0x804a954:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804a964:   1c 00 00 00 f4 01 00 00  63 dd ff ff 1f 00 00 00   |........c.......|
0x804a974:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804a984:   1c 00 00 00 14 02 00 00  62 dd ff ff 2a 00 00 00   |........b...*...|
0x804a994:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804a9a4:   1c 00 00 00 34 02 00 00  6c dd ff ff 2c 00 00 00   |....4...l...,...|
0x804a9b4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804a9c4:   1c 00 00 00 54 02 00 00  78 dd ff ff 2b 00 00 00   |....T...x...+...|
0x804a9d4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804a9e4:   1c 00 00 00 74 02 00 00  83 dd ff ff 49 00 00 00   |....t.......I...|
0x804a9f4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804aa04:   1c 00 00 00 94 02 00 00  ac dd ff ff 47 00 00 00   |............G...|
0x804aa14:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804aa24:   20 00 00 00 b4 02 00 00  d3 dd ff ff 5a 00 00 00   | ...........Z...|
0x804aa34:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804aa44:   c5 0c 04 04 20 00 00 00  d8 02 00 00 09 de ff ff   |.... ...........|
0x804aa54:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804aa64:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804aa74:   39 de ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |9...?....A....B.|
0x804aa84:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804aa94:   58 de ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |X...9....A....B.|
0x804aaa4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804aab4:   71 de ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |q..."....A....B.|
0x804aac4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804aad4:   73 de ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |s...N....A....B.|
0x804aae4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804aaf4:   a1 de ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804ab04:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ab14:   bd de ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ab24:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ab34:   26 df ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |&...2....A....B.|
0x804ab44:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804ab54:   38 df ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |8...0....A....B.|
0x804ab64:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804ab74:   48 df ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |H...E....A....B.|
0x804ab84:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804ab94:   6d df ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |m...?....A....B.|
0x804aba4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804abb4:   8c df ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804abc4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804abd4:   9e df ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804abe4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804abf4:   aa df ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ac04:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ac14:   a8 df ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804ac24:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ac34:   b0 df ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ac44:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ac54:   b5 df ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ac64:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ac74:   ba df ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ac84:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ac94:   d1 df ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804aca4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804acb4:   e5 df ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804acc4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804acd4:   60 05 00 00 13 e0 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ace4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804acf4:   1c 00 00 00 84 05 00 00  3b e0 ff ff 37 00 00 00   |........;...7...|
0x804ad04:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ad14:   1c 00 00 00 a4 05 00 00  52 e0 ff ff 31 00 00 00   |........R...1...|
0x804ad24:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ad34:   1c 00 00 00 c4 05 00 00  63 e0 ff ff 1f 00 00 00   |........c.......|
0x804ad44:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ad54:   1c 00 00 00 e4 05 00 00  62 e0 ff ff 2a 00 00 00   |........b...*...|
0x804ad64:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ad74:   1c 00 00 00 04 06 00 00  6c e0 ff ff 28 00 00 00   |........l...(...|
0x804ad84:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804ad94:   1c 00 00 00 24 06 00 00  74 e0 ff ff 29 00 00 00   |....$...t...)...|
0x804ada4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804adb4:   1c 00 00 00 44 06 00 00  7d e0 ff ff 3c 00 00 00   |....D...}...<...|
0x804adc4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804add4:   1c 00 00 00 64 06 00 00  99 e0 ff ff 3a 00 00 00   |....d.......:...|
0x804ade4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804adf4:   20 00 00 00 84 06 00 00  b3 e0 ff ff 53 00 00 00   | ...........S...|
0x804ae04:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804ae14:   c5 0c 04 04 20 00 00 00  a8 06 00 00 e2 e0 ff ff   |.... ...........|
0x804ae24:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804ae34:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804ae44:   0b e1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804ae54:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804ae64:   23 e1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |#...2....A....B.|
0x804ae74:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804ae84:   35 e1 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804ae94:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804aea4:   29 e1 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |)........A....B.|
0x804aeb4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804aec4:   20 e1 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   | ........A....B.|
0x804aed4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804aee4:   15 e1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804aef4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804af04:   0b e1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804af14:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804af24:   12 e1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804af34:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804af44:   17 e1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804af54:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804af64:   36 e1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |6...9....A....B.|
0x804af74:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804af84:   4f e1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |O...,....A....B.|
0x804af94:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804afa4:   5b e1 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |[...&....A....B.|
0x804afb4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804afc4:   61 e1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |a...B....A....B.|
0x804afd4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804afe4:   83 e1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804aff4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b004:   a5 e1 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b014:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b024:   c7 e1 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b034:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b044:   1c e2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b054:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b064:   59 e2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Y...]....A....B.|
0x804b074:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b084:   96 e2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b094:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b0a4:   d3 e2 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b0b4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b0c4:   43 e3 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |C...d....A....B.|
0x804b0d4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b0e4:   87 e3 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b0f4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b104:   d7 e3 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b114:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b124:   b0 09 00 00 fa e3 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b134:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b144:   d0 09 00 00 2f e4 ff ff  47 00 00 00 00 41 0e 08   |..../...G....A..|
0x804b154:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b164:   20 00 00 00 f4 09 00 00  52 e4 ff ff 68 00 00 00   | .......R...h...|
0x804b174:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b184:   0c 04 04 00 20 00 00 00  18 0a 00 00 96 e4 ff ff   |.... ...........|
0x804b194:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b1a4:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804b1b4:   a0 e4 ff ff 22 01 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b1c4:   05 46 87 03 86 04 83 05  03 15 01 c3 41 c6 41 c7   |.F..........A.A.|
0x804b1d4:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804b1e4:   92 e5 ff ff df 08 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1f4:   05 49 87 03 86 04 83 05  03 cf 08 c3 41 c6 41 c7   |.I..........A.A.|
0x804b204:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804b214:   41 ee ff ff ae 02 00 00  00 44 0c 01 00 47 10 05   |A........D...G..|
0x804b224:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 99   |.u.D..ux....u|..|
0x804b234:   02 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804b244:   10 00 00 00 d4 0a 00 00  b7 f0 ff ff 04 00 00 00   |................|
0x804b254:   00 00 00 00 48 00 00 00  e8 0a 00 00 b0 f0 ff ff   |....H...........|
0x804b264:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804b274:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804b284:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804b294:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804b2a4:   10 00 00 00 34 0b 00 00  c4 f0 ff ff 02 00 00 00   |....4...........|
0x804b2b4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 74 a3 04 08  19 00 00 00 0c cf 04 08   |....t...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff 00 00   |................|
0x804d028:   fc ff ff ff c5 0f 89 ed  04 00 01 00 f4 09 00 00   |................|
0x804d038:   01 00 00 00 04 00 00 00  a3 0f 63 ea 03 00 00 00   |..........c.....|
0x804d048:   de 52 d9 e2 fc ff ff ff  c3 ??                     |.R.......?      |
