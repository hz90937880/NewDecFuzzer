;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:59:45
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 70 dd ff ff               	lea eax, [ebx - 0x2290]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 dd ff ff               	lea eax, [ebx - 0x22f0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 69 a9 04 08               	mov eax, 0x804a969
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 6c d0 04 08                  	mov eax, 0x804d06c
0x80483a5:   3d 6c d0 04 08                  	cmp eax, 0x804d06c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 6c d0 04 08                  	push 0x804d06c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 6c d0 04 08                  	mov eax, 0x804d06c
0x80483e5:   2d 6c d0 04 08                  	sub eax, 0x804d06c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 6c d0 04 08                  	push 0x804d06c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 a5 28 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 91 28 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 dd ff ff               	lea edx, [eax - 0x2270]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 64 28 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 46 28 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 1e 28 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f4 27 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 cb 27 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 88 27 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 46 27 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ee 26 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 9d 26 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 60 26 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 29 26 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 0a 26 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 e0 25 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b4 25 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 89 25 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 40 25 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 f8 24 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 9e 24 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 4b 24 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 0c 24 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 d6 23 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b4 23 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 66 23 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 2a 23 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 a1 22 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 6f 22 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 3f 22 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 fa 21 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 bb 21 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 89 21 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 5a 21 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 3c 21 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 14 21 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ef 20 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ca 20 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 93 20 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 5e 20 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 0c 20 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 c1 1f 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 8a 1f 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 59 1f 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 3a 1f 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 10 1f 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 e8 1e 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 bf 1e 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 83 1e 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 48 1e 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 f5 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 a9 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 71 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 42 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 2e 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 17 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 02 1d 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 ec 1c 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 c5 1c 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 a0 1c 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 61 1c 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 28 1c 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 fc 1b 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 d6 1b 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 7c de ff ff               	fld dword ptr [eax - 0x2184]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 7c de ff ff               	fld dword ptr [eax - 0x2184]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 80 de ff ff               	fld dword ptr [eax - 0x2180]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 94 1b 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 7c de ff ff               	fld dword ptr [eax - 0x2184]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 7c de ff ff               	fld dword ptr [eax - 0x2184]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 80 de ff ff               	fld dword ptr [eax - 0x2180]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 52 1b 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 84 de ff ff               	fld dword ptr [eax - 0x217c]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 88 de ff ff               	fld dword ptr [eax - 0x2178]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 8c de ff ff               	fld dword ptr [eax - 0x2174]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 10 1b 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 90 de ff ff               	fld dword ptr [eax - 0x2170]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 94 de ff ff               	fld dword ptr [eax - 0x216c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 98 de ff ff               	fld dword ptr [eax - 0x2168]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 98 1a 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a0 de ff ff               	fld qword ptr [eax - 0x2160]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a0 de ff ff               	fld qword ptr [eax - 0x2160]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 a8 de ff ff               	fld qword ptr [eax - 0x2158]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 3b 1a 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a0 de ff ff               	fld qword ptr [eax - 0x2160]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a0 de ff ff               	fld qword ptr [eax - 0x2160]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 a8 de ff ff               	fld qword ptr [eax - 0x2158]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 de 19 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b0 de ff ff               	fld qword ptr [eax - 0x2150]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 b8 de ff ff               	fld qword ptr [eax - 0x2148]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c0 de ff ff               	fld qword ptr [eax - 0x2140]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 81 19 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 c8 de ff ff               	fld qword ptr [eax - 0x2138]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d0 de ff ff               	fld qword ptr [eax - 0x2130]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 f1 18 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e0 de ff ff               	fld dword ptr [eax - 0x2120]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 e4 de ff ff               	fld dword ptr [eax - 0x211c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 8d 18 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 1c 18 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 d9 17 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 dd ff ff               	lea eax, [ebx - 0x2260]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 dd ff ff               	lea eax, [ebx - 0x223c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497d8
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 54                        	sub esp, 0x54
0x804962f:   e8 d3 16 00 00                  	call 0x804ad07 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804963d:   8b 4d 1c                        	mov ecx, dword ptr [ebp + 0x1c]
0x8049640:   8b 5d 24                        	mov ebx, dword ptr [ebp + 0x24]
0x8049643:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x8049646:   8b 7d 38                        	mov edi, dword ptr [ebp + 0x38]
0x8049649:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804964c:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x804964f:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049652:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049655:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x8049658:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x804965b:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x804965e:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x8049661:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x8049664:   8b 7d 5c                        	mov edi, dword ptr [ebp + 0x5c]
0x8049667:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x804966a:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x804966d:   89 7d a4                        	mov dword ptr [ebp - 0x5c], edi
0x8049670:   8b 7d 64                        	mov edi, dword ptr [ebp + 0x64]
0x8049673:   89 7d a0                        	mov dword ptr [ebp - 0x60], edi
0x8049676:   8b 7d 68                        	mov edi, dword ptr [ebp + 0x68]
0x8049679:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804967c:   89 c8                           	mov eax, ecx
0x804967e:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049682:   89 d8                           	mov eax, ebx
0x8049684:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049688:   89 f0                           	mov eax, esi
0x804968a:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x804968d:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049691:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x8049694:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049698:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804969c:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x80496a0:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496a4:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a8:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ab:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496af:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496b3:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b7:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496bb:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496bf:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496c2:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c6:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496d1:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496d7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496da:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496e0:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496e4:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x80496ea:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496ed:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496f3:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496f6:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496fc:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x8049700:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049707:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x804970a:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049710:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049714:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804971b:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804971e:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049724:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049727:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804972d:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049730:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049736:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804973a:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049740:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049744:   88 82 51 00 00 00               	mov byte ptr [edx + 0x51], al
0x804974a:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804974d:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049753:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049756:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x804975c:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049760:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x8049767:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804976b:   66 89 82 ac 04 00 00            	mov word ptr [edx + 0x4ac], ax
0x8049772:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049775:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804977b:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804977e:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049784:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049788:   88 82 5c 00 00 00               	mov byte ptr [edx + 0x5c], al
0x804978e:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049792:   66 89 82 5e 00 00 00            	mov word ptr [edx + 0x5e], ax
0x8049799:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804979d:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x80497a4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497a8:   88 82 62 00 00 00               	mov byte ptr [edx + 0x62], al
0x80497ae:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497b2:   88 82 63 00 00 00               	mov byte ptr [edx + 0x63], al
0x80497b8:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497bc:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497c2:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497c5:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497cb:   b8 00 00 00 00                  	mov eax, 0
0x80497d0:   83 c4 54                        	add esp, 0x54
0x80497d3:   5b                              	pop ebx
0x80497d4:   5e                              	pop esi
0x80497d5:   5f                              	pop edi
0x80497d6:   5d                              	pop ebp
0x80497d7:   c3                              	ret 
; function: func_1 at 0x80497d8 -- 0x804a969
0x80497d8:   55                              	push ebp
0x80497d9:   89 e5                           	mov ebp, esp
0x80497db:   57                              	push edi
0x80497dc:   56                              	push esi
0x80497dd:   53                              	push ebx
0x80497de:   81 ec 8c 01 00 00               	sub esp, 0x18c
0x80497e4:   e8 1a 15 00 00                  	call 0x804ad03 <__x86.get_pc_thunk.ax>
0x80497e9:   05 17 38 00 00                  	add eax, 0x3817
0x80497ee:   c7 45 d0 fa b8 cd 24            	mov dword ptr [ebp - 0x30], 0x24cdb8fa
0x80497f5:   c7 45 cc fc ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffffc
0x80497fc:   c6 45 cb 01                     	mov byte ptr [ebp - 0x35], 1
0x8049800:   c7 45 98 f7 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff7
0x8049807:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x804980e:   66 c7 45 e2 84 8c               	mov word ptr [ebp - 0x1e], 0x8c84
0x8049814:   c7 45 f0 45 b5 30 82            	mov dword ptr [ebp - 0x10], 0x8230b545
0x804981b:   66 c7 45 ee fb ff               	mov word ptr [ebp - 0x12], 0xfffb
0x8049821:   c7 45 e8 ff ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffff
0x8049828:   c7 45 94 2f d7 ad 9c            	mov dword ptr [ebp - 0x6c], 0x9cadd72f
0x804982f:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x8049836:   c6 45 93 fc                     	mov byte ptr [ebp - 0x6d], 0xfc
0x804983a:   c6 45 db 9b                     	mov byte ptr [ebp - 0x25], 0x9b
0x804983e:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x8049845:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804984c:   66 c7 45 c2 5c 9a               	mov word ptr [ebp - 0x3e], 0x9a5c
0x8049852:   66 c7 45 90 00 00               	mov word ptr [ebp - 0x70], 0
0x8049858:   c7 45 bc 7e 6e 0f 35            	mov dword ptr [ebp - 0x44], 0x350f6e7e
0x804985f:   c7 45 8c 9b e1 f6 cc            	mov dword ptr [ebp - 0x74], 0xccf6e19b
0x8049866:   c6 45 bb ff                     	mov byte ptr [ebp - 0x45], 0xff
0x804986a:   66 c7 45 8a 03 00               	mov word ptr [ebp - 0x76], 3
0x8049870:   66 c7 45 88 09 00               	mov word ptr [ebp - 0x78], 9
0x8049876:   c6 45 87 35                     	mov byte ptr [ebp - 0x79], 0x35
0x804987a:   c6 45 86 09                     	mov byte ptr [ebp - 0x7a], 9
0x804987e:   c6 45 ba 01                     	mov byte ptr [ebp - 0x46], 1
0x8049882:   c7 45 80 91 ad a0 7c            	mov dword ptr [ebp - 0x80], 0x7ca0ad91
0x8049889:   66 c7 85 7e ff ff ff da da      	mov word ptr [ebp - 0x82], 0xdada
0x8049892:   c7 45 b4 03 00 00 00            	mov dword ptr [ebp - 0x4c], 3
0x8049899:   c7 85 78 ff ff ff 4e a5 45 a5   	mov dword ptr [ebp - 0x88], 0xa545a54e
0x80498a3:   c6 85 77 ff ff ff 3c            	mov byte ptr [ebp - 0x89], 0x3c
0x80498aa:   66 c7 85 74 ff ff ff 8c d5      	mov word ptr [ebp - 0x8c], 0xd58c
0x80498b3:   c7 85 70 ff ff ff de 2f 78 36   	mov dword ptr [ebp - 0x90], 0x36782fde
0x80498bd:   c6 85 6f ff ff ff 7d            	mov byte ptr [ebp - 0x91], 0x7d
0x80498c4:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x80498ce:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x80498d8:   0f b7 95 7e ff ff ff            	movzx edx, word ptr [ebp - 0x82]
0x80498df:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x80498e6:   0f be d8                        	movsx ebx, al
0x80498e9:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x80498ec:   0f be c0                        	movsx eax, al
0x80498ef:   89 c1                           	mov ecx, eax
0x80498f1:   d3 e3                           	shl ebx, cl
0x80498f3:   89 d8                           	mov eax, ebx
0x80498f5:   66 83 bd 7e ff ff ff 00         	cmp word ptr [ebp - 0x82], 0
0x80498fd:   74 0d                           	je 0x804990c <func_1+0x134>
0x80498ff:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049903:   74 07                           	je 0x804990c <func_1+0x134>
0x8049905:   b9 01 00 00 00                  	mov ecx, 1
0x804990a:   eb 05                           	jmp 0x8049911 <func_1+0x139>
0x804990c:   b9 00 00 00 00                  	mov ecx, 0
0x8049911:   39 c1                           	cmp ecx, eax
0x8049913:   0f 94 c0                        	sete al
0x8049916:   0f b6 c0                        	movzx eax, al
0x8049919:   21 d0                           	and eax, edx
0x804991b:   85 c0                           	test eax, eax
0x804991d:   0f 84 c7 08 00 00               	je 0x804a1ea <func_1+0xa12>
0x8049923:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x804992a:   c6 45 af ff                     	mov byte ptr [ebp - 0x51], 0xff
0x804992e:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x8049938:   66 c7 85 0a ff ff ff ac 8b      	mov word ptr [ebp - 0xf6], 0x8bac
0x8049941:   c7 85 04 ff ff ff 56 16 54 17   	mov dword ptr [ebp - 0xfc], 0x17541656
0x804994b:   c7 85 00 ff ff ff 50 05 4f 7e   	mov dword ptr [ebp - 0x100], 0x7e4f0550
0x8049955:   c7 85 fc fe ff ff 32 ee 5b 4f   	mov dword ptr [ebp - 0x104], 0x4f5bee32
0x804995f:   c7 85 f8 fe ff ff a9 67 55 55   	mov dword ptr [ebp - 0x108], 0x555567a9
0x8049969:   66 c7 45 ac 3c 88               	mov word ptr [ebp - 0x54], 0x883c
0x804996f:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049972:   31 45 cc                        	xor dword ptr [ebp - 0x34], eax
0x8049975:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049978:   0f bf d0                        	movsx edx, ax
0x804997b:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804997e:   98                              	cwde 
0x804997f:   89 c1                           	mov ecx, eax
0x8049981:   d3 e2                           	shl edx, cl
0x8049983:   89 d0                           	mov eax, edx
0x8049985:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049988:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804998f:   e9 8b 05 00 00                  	jmp 0x8049f1f <func_1+0x747>
0x8049994:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x804999e:   66 c7 85 f2 fe ff ff 01 00      	mov word ptr [ebp - 0x10e], 1
0x80499a7:   c7 85 ec fe ff ff 11 fb 2c eb   	mov dword ptr [ebp - 0x114], 0xeb2cfb11
0x80499b1:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x80499b8:   c7 85 e8 fe ff ff 5b 49 f8 43   	mov dword ptr [ebp - 0x118], 0x43f8495b
0x80499c2:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x80499c5:   89 c1                           	mov ecx, eax
0x80499c7:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x80499ca:   c1 e0 03                        	shl eax, 3
0x80499cd:   83 f0 88                        	xor eax, 0xffffff88
0x80499d0:   89 c2                           	mov edx, eax
0x80499d2:   89 c8                           	mov eax, ecx
0x80499d4:   0f af c2                        	imul eax, edx
0x80499d7:   83 f0 fe                        	xor eax, 0xfffffffe
0x80499da:   0f b6 d0                        	movzx edx, al
0x80499dd:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x80499e0:   0f b6 c0                        	movzx eax, al
0x80499e3:   89 c1                           	mov ecx, eax
0x80499e5:   d3 e2                           	shl edx, cl
0x80499e7:   89 d0                           	mov eax, edx
0x80499e9:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x80499ec:   0f 9d c0                        	setge al
0x80499ef:   0f b6 c0                        	movzx eax, al
0x80499f2:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x80499f5:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x80499f8:   98                              	cwde 
0x80499f9:   83 c0 02                        	add eax, 2
0x80499fc:   2b 85 f4 fe ff ff               	sub eax, dword ptr [ebp - 0x10c]
0x8049a02:   83 c0 07                        	add eax, 7
0x8049a05:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049a08:   83 bd f4 fe ff ff 00            	cmp dword ptr [ebp - 0x10c], 0
0x8049a0f:   0f 85 05 05 00 00               	jne 0x8049f1a <func_1+0x742>
0x8049a15:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x8049a1c:   e9 31 04 00 00                  	jmp 0x8049e52 <func_1+0x67a>
0x8049a21:   c7 85 d8 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x128], 7
0x8049a2b:   c7 85 d4 fe ff ff c0 fb 65 7e   	mov dword ptr [ebp - 0x12c], 0x7e65fbc0
0x8049a35:   c7 85 d0 fe ff ff 62 80 37 fe   	mov dword ptr [ebp - 0x130], 0xfe378062
0x8049a3f:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049a45:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049a48:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049a4b:   88 45 cb                        	mov byte ptr [ebp - 0x35], al
0x8049a4e:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x8049a55:   32 45 cb                        	xor al, byte ptr [ebp - 0x35]
0x8049a58:   0f b6 d0                        	movzx edx, al
0x8049a5b:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049a61:   0f b6 c0                        	movzx eax, al
0x8049a64:   89 c1                           	mov ecx, eax
0x8049a66:   d3 e2                           	shl edx, cl
0x8049a68:   89 d0                           	mov eax, edx
0x8049a6a:   0f be c0                        	movsx eax, al
0x8049a6d:   8b 55 cc                        	mov edx, dword ptr [ebp - 0x34]
0x8049a70:   0f be ca                        	movsx ecx, dl
0x8049a73:   99                              	cdq 
0x8049a74:   f7 f9                           	idiv ecx
0x8049a76:   89 d0                           	mov eax, edx
0x8049a78:   85 c0                           	test eax, eax
0x8049a7a:   0f 84 2b 01 00 00               	je 0x8049bab <func_1+0x3d3>
0x8049a80:   c7 45 a4 ff ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffff
0x8049a87:   83 45 c4 01                     	add dword ptr [ebp - 0x3c], 1
0x8049a8b:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049a8e:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x8049a91:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049a95:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x8049a98:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x8049a9e:   0f 94 c0                        	sete al
0x8049aa1:   89 c2                           	mov edx, eax
0x8049aa3:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049aa9:   29 c2                           	sub edx, eax
0x8049aab:   89 d0                           	mov eax, edx
0x8049aad:   0f b6 c0                        	movzx eax, al
0x8049ab0:   69 c0 fc 00 00 00               	imul eax, eax, 0xfc
0x8049ab6:   85 c0                           	test eax, eax
0x8049ab8:   74 07                           	je 0x8049ac1 <func_1+0x2e9>
0x8049aba:   66 83 45 e2 01                  	add word ptr [ebp - 0x1e], 1
0x8049abf:   eb 07                           	jmp 0x8049ac8 <func_1+0x2f0>
0x8049ac1:   c7 45 a4 09 00 00 00            	mov dword ptr [ebp - 0x5c], 9
0x8049ac8:   0f bf 95 f2 fe ff ff            	movsx edx, word ptr [ebp - 0x10e]
0x8049acf:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x8049ad3:   01 d0                           	add eax, edx
0x8049ad5:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x8049adb:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049ae1:   21 45 f0                        	and dword ptr [ebp - 0x10], eax
0x8049ae4:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049ae7:   0f b7 c8                        	movzx ecx, ax
0x8049aea:   ba 0d 80 02 80                  	mov edx, 0x8002800d
0x8049aef:   89 c8                           	mov eax, ecx
0x8049af1:   f7 ea                           	imul edx
0x8049af3:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049af6:   c1 f8 0f                        	sar eax, 0xf
0x8049af9:   89 c2                           	mov edx, eax
0x8049afb:   89 c8                           	mov eax, ecx
0x8049afd:   c1 f8 1f                        	sar eax, 0x1f
0x8049b00:   29 c2                           	sub edx, eax
0x8049b02:   89 d0                           	mov eax, edx
0x8049b04:   69 c0 fb ff 00 00               	imul eax, eax, 0xfffb
0x8049b0a:   29 c1                           	sub ecx, eax
0x8049b0c:   89 c8                           	mov eax, ecx
0x8049b0e:   0f b6 d0                        	movzx edx, al
0x8049b11:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049b14:   0f b6 c0                        	movzx eax, al
0x8049b17:   0f af c2                        	imul eax, edx
0x8049b1a:   89 c2                           	mov edx, eax
0x8049b1c:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049b1f:   29 c2                           	sub edx, eax
0x8049b21:   89 d0                           	mov eax, edx
0x8049b23:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049b26:   83 65 f0 01                     	and dword ptr [ebp - 0x10], 1
0x8049b2a:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049b2d:   0f b6 d0                        	movzx edx, al
0x8049b30:   80 6d af 01                     	sub byte ptr [ebp - 0x51], 1
0x8049b34:   0f b6 45 af                     	movzx eax, byte ptr [ebp - 0x51]
0x8049b38:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049b3b:   0f 96 c0                        	setbe al
0x8049b3e:   0f b6 c0                        	movzx eax, al
0x8049b41:   39 c2                           	cmp edx, eax
0x8049b43:   74 0e                           	je 0x8049b53 <func_1+0x37b>
0x8049b45:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049b4a:   74 07                           	je 0x8049b53 <func_1+0x37b>
0x8049b4c:   b8 01 00 00 00                  	mov eax, 1
0x8049b51:   eb 05                           	jmp 0x8049b58 <func_1+0x380>
0x8049b53:   b8 00 00 00 00                  	mov eax, 0
0x8049b58:   3d ff ff 00 00                  	cmp eax, 0xffff
0x8049b5d:   0f 95 c0                        	setne al
0x8049b60:   0f b6 c0                        	movzx eax, al
0x8049b63:   39 85 d8 fe ff ff               	cmp dword ptr [ebp - 0x128], eax
0x8049b69:   0f 9f c0                        	setg al
0x8049b6c:   0f b6 c0                        	movzx eax, al
0x8049b6f:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049b72:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b75:   99                              	cdq 
0x8049b76:   f7 7d d0                        	idiv dword ptr [ebp - 0x30]
0x8049b79:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x8049b7f:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x8049b86:   0f 94 c0                        	sete al
0x8049b89:   0f b6 c0                        	movzx eax, al
0x8049b8c:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049b8f:   7f 07                           	jg 0x8049b98 <func_1+0x3c0>
0x8049b91:   b8 05 00 00 00                  	mov eax, 5
0x8049b96:   eb 05                           	jmp 0x8049b9d <func_1+0x3c5>
0x8049b98:   b8 06 00 00 00                  	mov eax, 6
0x8049b9d:   0b 85 f4 fe ff ff               	or eax, dword ptr [ebp - 0x10c]
0x8049ba3:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049ba6:   e9 a3 02 00 00                  	jmp 0x8049e4e <func_1+0x676>
0x8049bab:   c7 85 cc fe ff ff e8 5a 49 5b   	mov dword ptr [ebp - 0x134], 0x5b495ae8
0x8049bb5:   c7 85 c8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x138], 0xffffffff
0x8049bbf:   c7 85 c4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x13c], 0
0x8049bc9:   c7 85 c0 fe ff ff d2 4d 66 7e   	mov dword ptr [ebp - 0x140], 0x7e664dd2
0x8049bd3:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049bd6:   8d 50 01                        	lea edx, [eax + 1]
0x8049bd9:   89 55 e8                        	mov dword ptr [ebp - 0x18], edx
0x8049bdc:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x8049bdf:   0f b6 d2                        	movzx edx, dl
0x8049be2:   83 c2 01                        	add edx, 1
0x8049be5:   39 55 c4                        	cmp dword ptr [ebp - 0x3c], edx
0x8049be8:   c7 85 ec fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x114], 0xffffffff
0x8049bf2:   ba 01 00 00 00                  	mov edx, 1
0x8049bf7:   39 95 cc fe ff ff               	cmp dword ptr [ebp - 0x134], edx
0x8049bfd:   0f 97 c2                        	seta dl
0x8049c00:   0f b6 d2                        	movzx edx, dl
0x8049c03:   31 d0                           	xor eax, edx
0x8049c05:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049c08:   0f 97 c0                        	seta al
0x8049c0b:   0f b6 c0                        	movzx eax, al
0x8049c0e:   23 85 d0 fe ff ff               	and eax, dword ptr [ebp - 0x130]
0x8049c14:   3d 26 c8 00 00                  	cmp eax, 0xc826
0x8049c19:   0f 96 c0                        	setbe al
0x8049c1c:   0f b6 d0                        	movzx edx, al
0x8049c1f:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x8049c26:   21 d0                           	and eax, edx
0x8049c28:   85 c0                           	test eax, eax
0x8049c2a:   0f 84 84 00 00 00               	je 0x8049cb4 <func_1+0x4dc>
0x8049c30:   66 c7 85 b2 fe ff ff 0d 03      	mov word ptr [ebp - 0x14e], 0x30d
0x8049c39:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c3c:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049c3f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049c42:   66 89 85 b2 fe ff ff            	mov word ptr [ebp - 0x14e], ax
0x8049c49:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x8049c4d:   74 04                           	je 0x8049c53 <func_1+0x47b>
0x8049c4f:   80 7d cb 00                     	cmp byte ptr [ebp - 0x35], 0
0x8049c53:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049c56:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049c5a:   0f bf 45 ee                     	movsx eax, word ptr [ebp - 0x12]
0x8049c5e:   8b 95 f4 fe ff ff               	mov edx, dword ptr [ebp - 0x10c]
0x8049c64:   89 95 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edx
0x8049c6a:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x8049c70:   0f 9e c0                        	setle al
0x8049c73:   0f b6 c0                        	movzx eax, al
0x8049c76:   8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x8049c79:   f7 d2                           	not edx
0x8049c7b:   0f bf ca                        	movsx ecx, dx
0x8049c7e:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8049c81:   0f bf d2                        	movsx edx, dx
0x8049c84:   01 ca                           	add edx, ecx
0x8049c86:   39 d0                           	cmp eax, edx
0x8049c88:   81 7d 94 b2 00 00 00            	cmp dword ptr [ebp - 0x6c], 0xb2
0x8049c8f:   0f 95 c0                        	setne al
0x8049c92:   0f b6 c0                        	movzx eax, al
0x8049c95:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049c98:   c7 85 ec fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffffb
0x8049ca2:   83 bd c8 fe ff ff 00            	cmp dword ptr [ebp - 0x138], 0
0x8049ca9:   0f 84 44 01 00 00               	je 0x8049df3 <func_1+0x61b>
0x8049caf:   e9 9a 01 00 00                  	jmp 0x8049e4e <func_1+0x676>
0x8049cb4:   c7 85 bc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x144], 1
0x8049cbe:   c6 85 bb fe ff ff 6b            	mov byte ptr [ebp - 0x145], 0x6b
0x8049cc5:   c7 85 b4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x14c], 0
0x8049ccf:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x8049cd5:   66 89 85 0a ff ff ff            	mov word ptr [ebp - 0xf6], ax
0x8049cdc:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049cdf:   d0 f8                           	sar al, 1
0x8049ce1:   0f be c0                        	movsx eax, al
0x8049ce4:   39 85 cc fe ff ff               	cmp dword ptr [ebp - 0x134], eax
0x8049cea:   76 1f                           	jbe 0x8049d0b <func_1+0x533>
0x8049cec:   80 bd bb fe ff ff 47            	cmp byte ptr [ebp - 0x145], 0x47
0x8049cf3:   77 07                           	ja 0x8049cfc <func_1+0x524>
0x8049cf5:   b8 f6 ff ff ff                  	mov eax, 0xfffffff6
0x8049cfa:   eb 05                           	jmp 0x8049d01 <func_1+0x529>
0x8049cfc:   b8 f7 ff ff ff                  	mov eax, 0xfffffff7
0x8049d01:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d04:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049d08:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049d0b:   83 bd bc fe ff ff 00            	cmp dword ptr [ebp - 0x144], 0
0x8049d12:   74 0e                           	je 0x8049d22 <func_1+0x54a>
0x8049d14:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x8049d19:   74 07                           	je 0x8049d22 <func_1+0x54a>
0x8049d1b:   b8 01 00 00 00                  	mov eax, 1
0x8049d20:   eb 05                           	jmp 0x8049d27 <func_1+0x54f>
0x8049d22:   b8 00 00 00 00                  	mov eax, 0
0x8049d27:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x8049d2d:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x8049d31:   0f b6 55 86                     	movzx edx, byte ptr [ebp - 0x7a]
0x8049d35:   0f b6 5d 87                     	movzx ebx, byte ptr [ebp - 0x79]
0x8049d39:   0f b7 7d 88                     	movzx edi, word ptr [ebp - 0x78]
0x8049d3d:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x8049d41:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x8049d47:   0f b6 4d bb                     	movzx ecx, byte ptr [ebp - 0x45]
0x8049d4b:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x8049d51:   0f bf 75 90                     	movsx esi, word ptr [ebp - 0x70]
0x8049d55:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x8049d5b:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x8049d5f:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x8049d65:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x8049d69:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x8049d6f:   0f be 4d 93                     	movsx ecx, byte ptr [ebp - 0x6d]
0x8049d73:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x8049d79:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x8049d7d:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x8049d83:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x8049d87:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x8049d8b:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049d8e:   50                              	push eax
0x8049d8f:   52                              	push edx
0x8049d90:   53                              	push ebx
0x8049d91:   57                              	push edi
0x8049d92:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049d98:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049d9e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049da1:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049da4:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049daa:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049db0:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049db3:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049db6:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049dbc:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049dc2:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049dc5:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049dc8:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049dcb:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049dd1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049dd4:   56                              	push esi
0x8049dd5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049dd8:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049ddb:   51                              	push ecx
0x8049ddc:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049ddf:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049de2:   e8 3f f8 ff ff                  	call 0x8049626 <set_var>
0x8049de7:   83 c4 68                        	add esp, 0x68
0x8049dea:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049dee:   e9 6e 0b 00 00                  	jmp 0x804a961 <func_1+0x1189>
0x8049df3:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049df6:   39 85 cc fe ff ff               	cmp dword ptr [ebp - 0x134], eax
0x8049dfc:   0f 95 c0                        	setne al
0x8049dff:   0f b6 c0                        	movzx eax, al
0x8049e02:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x8049e08:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049e0d:   74 07                           	je 0x8049e16 <func_1+0x63e>
0x8049e0f:   b8 01 00 00 00                  	mov eax, 1
0x8049e14:   eb 05                           	jmp 0x8049e1b <func_1+0x643>
0x8049e16:   b8 00 00 00 00                  	mov eax, 0
0x8049e1b:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049e21:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049e25:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x8049e29:   8b 7d c4                        	mov edi, dword ptr [ebp - 0x3c]
0x8049e2c:   99                              	cdq 
0x8049e2d:   f7 ff                           	idiv edi
0x8049e2f:   85 c0                           	test eax, eax
0x8049e31:   75 06                           	jne 0x8049e39 <func_1+0x661>
0x8049e33:   83 7d e8 ff                     	cmp dword ptr [ebp - 0x18], -1
0x8049e37:   75 07                           	jne 0x8049e40 <func_1+0x668>
0x8049e39:   b8 01 00 00 00                  	mov eax, 1
0x8049e3e:   eb 05                           	jmp 0x8049e45 <func_1+0x66d>
0x8049e40:   b8 00 00 00 00                  	mov eax, 0
0x8049e45:   0b 85 04 ff ff ff               	or eax, dword ptr [ebp - 0xfc]
0x8049e4b:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e4e:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x8049e52:   83 7d b0 05                     	cmp dword ptr [ebp - 0x50], 5
0x8049e56:   0f 8f c5 fb ff ff               	jg 0x8049a21 <func_1+0x249>
0x8049e5c:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049e62:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049e68:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049e6e:   31 45 b4                        	xor dword ptr [ebp - 0x4c], eax
0x8049e71:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049e74:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x8049e77:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049e7a:   89 c2                           	mov edx, eax
0x8049e7c:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049e83:   09 c2                           	or edx, eax
0x8049e85:   80 fa ff                        	cmp dl, 0xff
0x8049e88:   0f 93 c0                        	setae al
0x8049e8b:   f7 d8                           	neg eax
0x8049e8d:   29 c2                           	sub edx, eax
0x8049e8f:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049e92:   f7 d8                           	neg eax
0x8049e94:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x8049e9a:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x8049ea1:   74 19                           	je 0x8049ebc <func_1+0x6e4>
0x8049ea3:   c7 85 dc fe ff ff 23 d8 af c0   	mov dword ptr [ebp - 0x124], 0xc0afd823
0x8049ead:   83 bd dc fe ff ff 00            	cmp dword ptr [ebp - 0x124], 0
0x8049eb4:   75 75                           	jne 0x8049f2b <func_1+0x753>
0x8049eb6:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049eba:   eb 5f                           	jmp 0x8049f1b <func_1+0x743>
0x8049ebc:   c6 85 e7 fe ff ff ff            	mov byte ptr [ebp - 0x119], 0xff
0x8049ec3:   c7 85 e0 fe ff ff 0a eb 1d 79   	mov dword ptr [ebp - 0x120], 0x791deb0a
0x8049ecd:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049ed1:   83 c0 01                        	add eax, 1
0x8049ed4:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x8049ed8:   83 6d e4 01                     	sub dword ptr [ebp - 0x1c], 1
0x8049edc:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049ee0:   8d 50 ff                        	lea edx, [eax - 1]
0x8049ee3:   66 89 55 c2                     	mov word ptr [ebp - 0x3e], dx
0x8049ee7:   0f b6 c0                        	movzx eax, al
0x8049eea:   c1 e0 03                        	shl eax, 3
0x8049eed:   85 c0                           	test eax, eax
0x8049eef:   74 07                           	je 0x8049ef8 <func_1+0x720>
0x8049ef1:   b8 01 00 00 00                  	mov eax, 1
0x8049ef6:   eb 05                           	jmp 0x8049efd <func_1+0x725>
0x8049ef8:   b8 00 00 00 00                  	mov eax, 0
0x8049efd:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049f00:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x8049f06:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x8049f09:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049f0c:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049f0f:   0f 94 c0                        	sete al
0x8049f12:   0f b6 c0                        	movzx eax, al
0x8049f15:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049f18:   eb 01                           	jmp 0x8049f1b <func_1+0x743>
0x8049f1a:   90                              	nop 
0x8049f1b:   83 45 cc 07                     	add dword ptr [ebp - 0x34], 7
0x8049f1f:   83 7d cc 28                     	cmp dword ptr [ebp - 0x34], 0x28
0x8049f23:   0f 86 6b fa ff ff               	jbe 0x8049994 <func_1+0x1bc>
0x8049f29:   eb 01                           	jmp 0x8049f2c <func_1+0x754>
0x8049f2b:   90                              	nop 
0x8049f2c:   66 83 bd 7e ff ff ff 00         	cmp word ptr [ebp - 0x82], 0
0x8049f34:   0f 84 c5 00 00 00               	je 0x8049fff <func_1+0x827>
0x8049f3a:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x8049f3e:   0f b6 55 86                     	movzx edx, byte ptr [ebp - 0x7a]
0x8049f42:   0f b6 5d 87                     	movzx ebx, byte ptr [ebp - 0x79]
0x8049f46:   0f b7 7d 88                     	movzx edi, word ptr [ebp - 0x78]
0x8049f4a:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x8049f4e:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x8049f54:   0f b6 4d bb                     	movzx ecx, byte ptr [ebp - 0x45]
0x8049f58:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x8049f5e:   0f bf 75 90                     	movsx esi, word ptr [ebp - 0x70]
0x8049f62:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x8049f68:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x8049f6c:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x8049f72:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x8049f76:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x8049f7c:   0f be 4d 93                     	movsx ecx, byte ptr [ebp - 0x6d]
0x8049f80:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x8049f86:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x8049f8a:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x8049f90:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x8049f94:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x8049f98:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049f9b:   50                              	push eax
0x8049f9c:   52                              	push edx
0x8049f9d:   53                              	push ebx
0x8049f9e:   57                              	push edi
0x8049f9f:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049fa5:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049fab:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049fae:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049fb1:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049fb7:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049fbd:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049fc0:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049fc3:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x8049fc9:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x8049fcf:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049fd2:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049fd5:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049fd8:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x8049fde:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049fe1:   56                              	push esi
0x8049fe2:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049fe5:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049fe8:   51                              	push ecx
0x8049fe9:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049fec:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049fef:   e8 32 f6 ff ff                  	call 0x8049626 <set_var>
0x8049ff4:   83 c4 68                        	add esp, 0x68
0x8049ff7:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049ffa:   e9 62 09 00 00                  	jmp 0x804a961 <func_1+0x1189>
0x8049fff:   66 c7 85 b0 fe ff ff fb ff      	mov word ptr [ebp - 0x150], 0xfffb
0x804a008:   c6 85 af fe ff ff ce            	mov byte ptr [ebp - 0x151], 0xce
0x804a00f:   c7 85 a8 fe ff ff 01 a0 ec 7e   	mov dword ptr [ebp - 0x158], 0x7eeca001
0x804a019:   66 c7 85 a6 fe ff ff cf 86      	mov word ptr [ebp - 0x15a], 0x86cf
0x804a022:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a026:   83 c0 01                        	add eax, 1
0x804a029:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x804a02c:   c6 45 af 19                     	mov byte ptr [ebp - 0x51], 0x19
0x804a030:   eb 72                           	jmp 0x804a0a4 <func_1+0x8cc>
0x804a032:   c7 85 90 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x170], 8
0x804a03c:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x804a040:   0f b6 c0                        	movzx eax, al
0x804a043:   c1 e0 06                        	shl eax, 6
0x804a046:   89 c2                           	mov edx, eax
0x804a048:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x804a04c:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a04f:   3b 85 00 ff ff ff               	cmp eax, dword ptr [ebp - 0x100]
0x804a055:   0f 92 c0                        	setb al
0x804a058:   0f b6 c0                        	movzx eax, al
0x804a05b:   39 c2                           	cmp edx, eax
0x804a05d:   0f 95 c0                        	setne al
0x804a060:   0f b6 c0                        	movzx eax, al
0x804a063:   66 89 85 b0 fe ff ff            	mov word ptr [ebp - 0x150], ax
0x804a06a:   66 83 bd b0 fe ff ff 00         	cmp word ptr [ebp - 0x150], 0
0x804a072:   74 08                           	je 0x804a07c <func_1+0x8a4>
0x804a074:   66 83 bd b0 fe ff ff 00         	cmp word ptr [ebp - 0x150], 0
0x804a07c:   66 83 bd b0 fe ff ff 00         	cmp word ptr [ebp - 0x150], 0
0x804a084:   0f 94 c0                        	sete al
0x804a087:   0f b6 d0                        	movzx edx, al
0x804a08a:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a090:   98                              	cwde 
0x804a091:   0f af d0                        	imul edx, eax
0x804a094:   0f b7 85 7e ff ff ff            	movzx eax, word ptr [ebp - 0x82]
0x804a09b:   21 d0                           	and eax, edx
0x804a09d:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a0a0:   80 45 af 07                     	add byte ptr [ebp - 0x51], 7
0x804a0a4:   80 7d af 19                     	cmp byte ptr [ebp - 0x51], 0x19
0x804a0a8:   77 88                           	ja 0x804a032 <func_1+0x85a>
0x804a0aa:   c6 45 cb 00                     	mov byte ptr [ebp - 0x35], 0
0x804a0ae:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a0b2:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a0b5:   7e 43                           	jle 0x804a0fa <func_1+0x922>
0x804a0b7:   66 c7 85 9a fe ff ff 08 00      	mov word ptr [ebp - 0x166], 8
0x804a0c0:   c7 85 94 fe ff ff b4 77 61 f1   	mov dword ptr [ebp - 0x16c], 0xf16177b4
0x804a0ca:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x804a0d0:   23 45 94                        	and eax, dword ptr [ebp - 0x6c]
0x804a0d3:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x804a0d9:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a0e0:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804a0e4:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a0ea:   b8 01 00 00 00                  	mov eax, 1
0x804a0ef:   31 85 a8 fe ff ff               	xor dword ptr [ebp - 0x158], eax
0x804a0f5:   e9 97 07 00 00                  	jmp 0x804a891 <func_1+0x10b9>
0x804a0fa:   c7 85 a0 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x160], 5
0x804a104:   c7 85 9c fe ff ff 0c c9 68 60   	mov dword ptr [ebp - 0x164], 0x6068c90c
0x804a10e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a111:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a117:   66 83 bd 7e ff ff ff 00         	cmp word ptr [ebp - 0x82], 0
0x804a11f:   75 37                           	jne 0x804a158 <func_1+0x980>
0x804a121:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a124:   89 c2                           	mov edx, eax
0x804a126:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a12c:   01 c2                           	add edx, eax
0x804a12e:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a131:   31 d0                           	xor eax, edx
0x804a133:   f7 d8                           	neg eax
0x804a135:   0f be c0                        	movsx eax, al
0x804a138:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x804a13b:   0f be fa                        	movsx edi, dl
0x804a13e:   99                              	cdq 
0x804a13f:   f7 ff                           	idiv edi
0x804a141:   ba 00 00 00 00                  	mov edx, 0
0x804a146:   66 f7 b5 a6 fe ff ff            	div word ptr [ebp - 0x15a]
0x804a14d:   89 d0                           	mov eax, edx
0x804a14f:   0f b7 c0                        	movzx eax, ax
0x804a152:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a158:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x804a15e:   66 2d a0 37                     	sub ax, 0x37a0
0x804a162:   98                              	cwde 
0x804a163:   0f b7 bd a6 fe ff ff            	movzx edi, word ptr [ebp - 0x15a]
0x804a16a:   ba 00 00 00 00                  	mov edx, 0
0x804a16f:   f7 f7                           	div edi
0x804a171:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a174:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a177:   f7 d0                           	not eax
0x804a179:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a17c:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a180:   74 1c                           	je 0x804a19e <func_1+0x9c6>
0x804a182:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804a189:   21 85 a8 fe ff ff               	and dword ptr [ebp - 0x158], eax
0x804a18f:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804a196:   74 05                           	je 0x804a19d <func_1+0x9c5>
0x804a198:   66 83 7d ac 00                  	cmp word ptr [ebp - 0x54], 0
0x804a19d:   90                              	nop 
0x804a19e:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a1a2:   0f b6 d0                        	movzx edx, al
0x804a1a5:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a1a8:   66 c1 f8 03                     	sar ax, 3
0x804a1ac:   0f b6 c0                        	movzx eax, al
0x804a1af:   89 c1                           	mov ecx, eax
0x804a1b1:   d3 fa                           	sar edx, cl
0x804a1b3:   89 d0                           	mov eax, edx
0x804a1b5:   3d cd f6 00 00                  	cmp eax, 0xf6cd
0x804a1ba:   0f 94 c0                        	sete al
0x804a1bd:   0f b6 c0                        	movzx eax, al
0x804a1c0:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a1c3:   0f 93 c0                        	setae al
0x804a1c6:   0f b6 d0                        	movzx edx, al
0x804a1c9:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a1cd:   89 c1                           	mov ecx, eax
0x804a1cf:   d3 e2                           	shl edx, cl
0x804a1d1:   89 d0                           	mov eax, edx
0x804a1d3:   35 fb ff 00 00                  	xor eax, 0xfffb
0x804a1d8:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a1de:   c7 45 d0 43 10 48 a8            	mov dword ptr [ebp - 0x30], 0xa8481043
0x804a1e5:   e9 a7 06 00 00                  	jmp 0x804a891 <func_1+0x10b9>
0x804a1ea:   c7 85 60 ff ff ff 41 a2 0c f9   	mov dword ptr [ebp - 0xa0], 0xf90ca241
0x804a1f4:   c7 45 a0 03 00 00 00            	mov dword ptr [ebp - 0x60], 3
0x804a1fb:   c7 85 5c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa4], 0
0x804a205:   c7 85 58 ff ff ff e1 04 56 cc   	mov dword ptr [ebp - 0xa8], 0xcc5604e1
0x804a20f:   c6 85 57 ff ff ff fe            	mov byte ptr [ebp - 0xa9], 0xfe
0x804a216:   c7 85 50 ff ff ff df cd 0c b6   	mov dword ptr [ebp - 0xb0], 0xb60ccddf
0x804a220:   66 c7 85 4e ff ff ff 93 42      	mov word ptr [ebp - 0xb2], 0x4293
0x804a229:   66 c7 85 4c ff ff ff de b5      	mov word ptr [ebp - 0xb4], 0xb5de
0x804a232:   c7 45 f0 0b 00 00 00            	mov dword ptr [ebp - 0x10], 0xb
0x804a239:   e9 03 06 00 00                  	jmp 0x804a841 <func_1+0x1069>
0x804a23e:   66 c7 85 4a ff ff ff ff ff      	mov word ptr [ebp - 0xb6], 0xffff
0x804a247:   c7 85 44 ff ff ff 93 02 dd e5   	mov dword ptr [ebp - 0xbc], 0xe5dd0293
0x804a251:   c6 45 9f fc                     	mov byte ptr [ebp - 0x61], 0xfc
0x804a255:   66 c7 85 42 ff ff ff fa ff      	mov word ptr [ebp - 0xbe], 0xfffa
0x804a25e:   66 c7 85 40 ff ff ff 25 ca      	mov word ptr [ebp - 0xc0], 0xca25
0x804a267:   c7 85 3c ff ff ff b1 ef a8 0e   	mov dword ptr [ebp - 0xc4], 0xea8efb1
0x804a271:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a278:   e9 03 05 00 00                  	jmp 0x804a780 <func_1+0xfa8>
0x804a27d:   c7 85 38 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc8], 0xffffffff
0x804a287:   c7 85 34 ff ff ff 25 61 68 d9   	mov dword ptr [ebp - 0xcc], 0xd9686125
0x804a291:   66 c7 85 32 ff ff ff fc ff      	mov word ptr [ebp - 0xce], 0xfffc
0x804a29a:   c7 85 2c ff ff ff 95 f7 ed 8d   	mov dword ptr [ebp - 0xd4], 0x8dedf795
0x804a2a4:   83 7d dc 01                     	cmp dword ptr [ebp - 0x24], 1
0x804a2a8:   0f 94 c0                        	sete al
0x804a2ab:   0f b6 d0                        	movzx edx, al
0x804a2ae:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a2b1:   0f b7 c0                        	movzx eax, ax
0x804a2b4:   0f af c2                        	imul eax, edx
0x804a2b7:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a2bd:   c6 85 8f fe ff ff e1            	mov byte ptr [ebp - 0x171], 0xe1
0x804a2c4:   c7 85 28 ff ff ff 2a 4d 4b 03   	mov dword ptr [ebp - 0xd8], 0x34b4d2a
0x804a2ce:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a2d2:   88 85 8f fe ff ff               	mov byte ptr [ebp - 0x171], al
0x804a2d8:   0f b6 85 8f fe ff ff            	movzx eax, byte ptr [ebp - 0x171]
0x804a2df:   66 0f be c8                     	movsx cx, al
0x804a2e3:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a2e6:   66 35 aa d4                     	xor ax, 0xd4aa
0x804a2ea:   89 c2                           	mov edx, eax
0x804a2ec:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a2f2:   31 d0                           	xor eax, edx
0x804a2f4:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a2f8:   0f bf 55 90                     	movsx edx, word ptr [ebp - 0x70]
0x804a2fc:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a303:   21 d0                           	and eax, edx
0x804a305:   0f be 7d cb                     	movsx edi, byte ptr [ebp - 0x35]
0x804a309:   99                              	cdq 
0x804a30a:   f7 ff                           	idiv edi
0x804a30c:   85 c0                           	test eax, eax
0x804a30e:   74 0e                           	je 0x804a31e <func_1+0xb46>
0x804a310:   66 83 7d 90 00                  	cmp word ptr [ebp - 0x70], 0
0x804a315:   74 07                           	je 0x804a31e <func_1+0xb46>
0x804a317:   b8 01 00 00 00                  	mov eax, 1
0x804a31c:   eb 05                           	jmp 0x804a323 <func_1+0xb4b>
0x804a31e:   b8 00 00 00 00                  	mov eax, 0
0x804a323:   f7 d0                           	not eax
0x804a325:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a328:   0f 97 c0                        	seta al
0x804a32b:   89 c2                           	mov edx, eax
0x804a32d:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x804a331:   31 d0                           	xor eax, edx
0x804a333:   66 98                           	cbw 
0x804a335:   29 c1                           	sub ecx, eax
0x804a337:   89 c8                           	mov eax, ecx
0x804a339:   66 35 cd 87                     	xor ax, 0x87cd
0x804a33d:   98                              	cwde 
0x804a33e:   31 45 d0                        	xor dword ptr [ebp - 0x30], eax
0x804a341:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a344:   66 21 45 ee                     	and word ptr [ebp - 0x12], ax
0x804a348:   0f bf 45 ee                     	movsx eax, word ptr [ebp - 0x12]
0x804a34c:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804a34f:   0f 94 c0                        	sete al
0x804a352:   0f b6 c0                        	movzx eax, al
0x804a355:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a358:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a35b:   0d 78 c6 00 00                  	or eax, 0xc678
0x804a360:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a363:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a369:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x804a36c:   89 c2                           	mov edx, eax
0x804a36e:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a371:   39 c2                           	cmp edx, eax
0x804a373:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a379:   66 0d d6 c4                     	or ax, 0xc4d6
0x804a37d:   66 89 85 74 ff ff ff            	mov word ptr [ebp - 0x8c], ax
0x804a384:   0f bf 85 74 ff ff ff            	movsx eax, word ptr [ebp - 0x8c]
0x804a38b:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a391:   66 c7 85 26 ff ff ff 00 00      	mov word ptr [ebp - 0xda], 0
0x804a39a:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804a3a1:   83 7d cc 07                     	cmp dword ptr [ebp - 0x34], 7
0x804a3a5:   0f 86 aa 01 00 00               	jbe 0x804a555 <func_1+0xd7d>
0x804a3ab:   c7 85 18 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xe8], 8
0x804a3b5:   c7 85 14 ff ff ff 04 1e 88 29   	mov dword ptr [ebp - 0xec], 0x29881e04
0x804a3bf:   66 c7 85 12 ff ff ff 00 00      	mov word ptr [ebp - 0xee], 0
0x804a3c8:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a3cb:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x804a3ce:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a3d4:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a3da:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a3e0:   88 45 87                        	mov byte ptr [ebp - 0x79], al
0x804a3e3:   0f b6 55 87                     	movzx edx, byte ptr [ebp - 0x79]
0x804a3e7:   66 0f be 5d 93                  	movsx bx, byte ptr [ebp - 0x6d]
0x804a3ec:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a3ef:   0f b7 c0                        	movzx eax, ax
0x804a3f2:   be 8b 6b 00 00                  	mov esi, 0x6b8b
0x804a3f7:   89 c1                           	mov ecx, eax
0x804a3f9:   d3 e6                           	shl esi, cl
0x804a3fb:   89 f1                           	mov ecx, esi
0x804a3fd:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a401:   39 c1                           	cmp ecx, eax
0x804a403:   0f 9f c0                        	setg al
0x804a406:   0f b6 c0                        	movzx eax, al
0x804a409:   21 d8                           	and eax, ebx
0x804a40b:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a40f:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x804a413:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a41a:   29 c1                           	sub ecx, eax
0x804a41c:   89 c8                           	mov eax, ecx
0x804a41e:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x804a421:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a428:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a42b:   81 7d d0 3f 3b 64 56            	cmp dword ptr [ebp - 0x30], 0x56643b3f
0x804a432:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a438:   25 bb 7f 00 00                  	and eax, 0x7fbb
0x804a43d:   85 c0                           	test eax, eax
0x804a43f:   75 06                           	jne 0x804a447 <func_1+0xc6f>
0x804a441:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a445:   74 07                           	je 0x804a44e <func_1+0xc76>
0x804a447:   b8 01 00 00 00                  	mov eax, 1
0x804a44c:   eb 05                           	jmp 0x804a453 <func_1+0xc7b>
0x804a44e:   b8 00 00 00 00                  	mov eax, 0
0x804a453:   0f b6 c0                        	movzx eax, al
0x804a456:   0f af c2                        	imul eax, edx
0x804a459:   85 c0                           	test eax, eax
0x804a45b:   74 11                           	je 0x804a46e <func_1+0xc96>
0x804a45d:   66 83 bd 26 ff ff ff 00         	cmp word ptr [ebp - 0xda], 0
0x804a465:   74 07                           	je 0x804a46e <func_1+0xc96>
0x804a467:   b8 01 00 00 00                  	mov eax, 1
0x804a46c:   eb 05                           	jmp 0x804a473 <func_1+0xc9b>
0x804a46e:   b8 00 00 00 00                  	mov eax, 0
0x804a473:   85 c0                           	test eax, eax
0x804a475:   0f 9f c0                        	setg al
0x804a478:   0f b6 c0                        	movzx eax, al
0x804a47b:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a481:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a487:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a48d:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a491:   0f b6 55 86                     	movzx edx, byte ptr [ebp - 0x7a]
0x804a495:   0f b6 5d 87                     	movzx ebx, byte ptr [ebp - 0x79]
0x804a499:   0f b7 7d 88                     	movzx edi, word ptr [ebp - 0x78]
0x804a49d:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x804a4a1:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a4a7:   0f b6 4d bb                     	movzx ecx, byte ptr [ebp - 0x45]
0x804a4ab:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a4b1:   0f bf 75 90                     	movsx esi, word ptr [ebp - 0x70]
0x804a4b5:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a4bb:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x804a4bf:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a4c5:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a4c9:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a4cf:   0f be 4d 93                     	movsx ecx, byte ptr [ebp - 0x6d]
0x804a4d3:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x804a4d9:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x804a4dd:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a4e3:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x804a4e7:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x804a4eb:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a4ee:   50                              	push eax
0x804a4ef:   52                              	push edx
0x804a4f0:   53                              	push ebx
0x804a4f1:   57                              	push edi
0x804a4f2:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a4f8:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a4fe:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a501:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a504:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a50a:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a510:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a513:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a516:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a51c:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a522:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a525:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a528:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a52b:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a531:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a534:   56                              	push esi
0x804a535:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a538:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a53b:   51                              	push ecx
0x804a53c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a53f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a542:   e8 df f0 ff ff                  	call 0x8049626 <set_var>
0x804a547:   83 c4 68                        	add esp, 0x68
0x804a54a:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a550:   e9 0c 04 00 00                  	jmp 0x804a961 <func_1+0x1189>
0x804a555:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a559:   74 0b                           	je 0x804a566 <func_1+0xd8e>
0x804a55b:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a55e:   21 45 bc                        	and dword ptr [ebp - 0x44], eax
0x804a561:   e9 8d 00 00 00                  	jmp 0x804a5f3 <func_1+0xe1b>
0x804a566:   66 c7 85 24 ff ff ff ff ff      	mov word ptr [ebp - 0xdc], 0xffff
0x804a56f:   c7 85 20 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe0], 0xffffffff
0x804a579:   0f b7 95 24 ff ff ff            	movzx edx, word ptr [ebp - 0xdc]
0x804a580:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x804a584:   83 e0 35                        	and eax, 0x35
0x804a587:   88 45 9f                        	mov byte ptr [ebp - 0x61], al
0x804a58a:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a58e:   31 d0                           	xor eax, edx
0x804a590:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x804a593:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a599:   89 c1                           	mov ecx, eax
0x804a59b:   0f b7 85 42 ff ff ff            	movzx eax, word ptr [ebp - 0xbe]
0x804a5a2:   89 c2                           	mov edx, eax
0x804a5a4:   0f b6 c1                        	movzx eax, cl
0x804a5a7:   f6 f2                           	div dl
0x804a5a9:   0f b6 c0                        	movzx eax, al
0x804a5ac:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a5b2:   66 83 bd 26 ff ff ff 00         	cmp word ptr [ebp - 0xda], 0
0x804a5ba:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a5bd:   0f b6 c0                        	movzx eax, al
0x804a5c0:   ba 42 00 00 00                  	mov edx, 0x42
0x804a5c5:   89 c1                           	mov ecx, eax
0x804a5c7:   d3 fa                           	sar edx, cl
0x804a5c9:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a5cd:   09 d0                           	or eax, edx
0x804a5cf:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a5d2:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a5d5:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a5d8:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x804a5e0:   0f 85 a6 01 00 00               	jne 0x804a78c <func_1+0xfb4>
0x804a5e6:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x804a5ed:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a5f3:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a5f6:   66 2d c1 72                     	sub ax, 0x72c1
0x804a5fa:   66 c1 f8 0c                     	sar ax, 0xc
0x804a5fe:   66 85 c0                        	test ax, ax
0x804a601:   0f 84 d5 00 00 00               	je 0x804a6dc <func_1+0xf04>
0x804a607:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a60e:   31 85 5c ff ff ff               	xor dword ptr [ebp - 0xa4], eax
0x804a614:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a618:   0f b6 55 86                     	movzx edx, byte ptr [ebp - 0x7a]
0x804a61c:   0f b6 5d 87                     	movzx ebx, byte ptr [ebp - 0x79]
0x804a620:   0f b7 7d 88                     	movzx edi, word ptr [ebp - 0x78]
0x804a624:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x804a628:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a62e:   0f b6 4d bb                     	movzx ecx, byte ptr [ebp - 0x45]
0x804a632:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a638:   0f bf 75 90                     	movsx esi, word ptr [ebp - 0x70]
0x804a63c:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a642:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x804a646:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a64c:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a650:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a656:   0f be 4d 93                     	movsx ecx, byte ptr [ebp - 0x6d]
0x804a65a:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x804a660:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x804a664:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a66a:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x804a66e:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x804a672:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a675:   50                              	push eax
0x804a676:   52                              	push edx
0x804a677:   53                              	push ebx
0x804a678:   57                              	push edi
0x804a679:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a67f:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a685:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a688:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a68b:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a691:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a697:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a69a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a69d:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a6a3:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a6a9:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a6ac:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a6af:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a6b2:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a6b8:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a6bb:   56                              	push esi
0x804a6bc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a6bf:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a6c2:   51                              	push ecx
0x804a6c3:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a6c6:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6c9:   e8 58 ef ff ff                  	call 0x8049626 <set_var>
0x804a6ce:   83 c4 68                        	add esp, 0x68
0x804a6d1:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a6d7:   e9 85 02 00 00                  	jmp 0x804a961 <func_1+0x1189>
0x804a6dc:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a6df:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a6e2:   c7 85 1c ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffff8
0x804a6ec:   66 83 7d ee 00                  	cmp word ptr [ebp - 0x12], 0
0x804a6f1:   75 60                           	jne 0x804a753 <func_1+0xf7b>
0x804a6f3:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a6f6:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a6f9:   76 09                           	jbe 0x804a704 <func_1+0xf2c>
0x804a6fb:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a6fe:   83 e8 0f                        	sub eax, 0xf
0x804a701:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a704:   b8 00 00 00 00                  	mov eax, 0
0x804a709:   0f bf d0                        	movsx edx, ax
0x804a70c:   69 d2 03 85 ff ff               	imul edx, edx, 0xffff8503
0x804a712:   c1 ea 10                        	shr edx, 0x10
0x804a715:   01 c2                           	add edx, eax
0x804a717:   66 c1 fa 0e                     	sar dx, 0xe
0x804a71b:   66 c1 f8 0f                     	sar ax, 0xf
0x804a71f:   29 d0                           	sub eax, edx
0x804a721:   98                              	cwde 
0x804a722:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x804a728:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x804a72c:   23 85 1c ff ff ff               	and eax, dword ptr [ebp - 0xe4]
0x804a732:   85 c0                           	test eax, eax
0x804a734:   74 07                           	je 0x804a73d <func_1+0xf65>
0x804a736:   83 bd 1c ff ff ff 00            	cmp dword ptr [ebp - 0xe4], 0
0x804a73d:   66 83 bd 74 ff ff ff 08         	cmp word ptr [ebp - 0x8c], 8
0x804a745:   0f 95 c0                        	setne al
0x804a748:   0f b6 d0                        	movzx edx, al
0x804a74b:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a74f:   39 c2                           	cmp edx, eax
0x804a751:   7e 07                           	jle 0x804a75a <func_1+0xf82>
0x804a753:   b8 01 00 00 00                  	mov eax, 1
0x804a758:   eb 05                           	jmp 0x804a75f <func_1+0xf87>
0x804a75a:   b8 00 00 00 00                  	mov eax, 0
0x804a75f:   0f b7 d0                        	movzx edx, ax
0x804a762:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a765:   0f b7 c0                        	movzx eax, ax
0x804a768:   01 c2                           	add edx, eax
0x804a76a:   0f bf 85 40 ff ff ff            	movsx eax, word ptr [ebp - 0xc0]
0x804a771:   39 c2                           	cmp edx, eax
0x804a773:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a776:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a77c:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a780:   83 7d b4 08                     	cmp dword ptr [ebp - 0x4c], 8
0x804a784:   0f 8f f3 fa ff ff               	jg 0x804a27d <func_1+0xaa5>
0x804a78a:   eb 01                           	jmp 0x804a78d <func_1+0xfb5>
0x804a78c:   90                              	nop 
0x804a78d:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x804a791:   66 83 7d 8a 00                  	cmp word ptr [ebp - 0x76], 0
0x804a796:   78 07                           	js 0x804a79f <func_1+0xfc7>
0x804a798:   ba 00 80 00 00                  	mov edx, 0x8000
0x804a79d:   eb 05                           	jmp 0x804a7a4 <func_1+0xfcc>
0x804a79f:   ba 00 00 00 00                  	mov edx, 0
0x804a7a4:   31 d0                           	xor eax, edx
0x804a7a6:   23 45 b4                        	and eax, dword ptr [ebp - 0x4c]
0x804a7a9:   89 c2                           	mov edx, eax
0x804a7ab:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a7af:   39 c2                           	cmp edx, eax
0x804a7b1:   0f 9f c0                        	setg al
0x804a7b4:   0f b6 d0                        	movzx edx, al
0x804a7b7:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x804a7be:   39 c2                           	cmp edx, eax
0x804a7c0:   0f 9f c0                        	setg al
0x804a7c3:   0f b6 c0                        	movzx eax, al
0x804a7c6:   f7 d8                           	neg eax
0x804a7c8:   89 c2                           	mov edx, eax
0x804a7ca:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a7ce:   39 c2                           	cmp edx, eax
0x804a7d0:   75 07                           	jne 0x804a7d9 <func_1+0x1001>
0x804a7d2:   b8 0b d4 00 00                  	mov eax, 0xd40b
0x804a7d7:   eb 05                           	jmp 0x804a7de <func_1+0x1006>
0x804a7d9:   b8 00 00 00 00                  	mov eax, 0
0x804a7de:   3b 85 50 ff ff ff               	cmp eax, dword ptr [ebp - 0xb0]
0x804a7e4:   0f 94 c0                        	sete al
0x804a7e7:   0f b6 c0                        	movzx eax, al
0x804a7ea:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a7ed:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a7f1:   75 07                           	jne 0x804a7fa <func_1+0x1022>
0x804a7f3:   66 83 7d 8a 00                  	cmp word ptr [ebp - 0x76], 0
0x804a7f8:   74 07                           	je 0x804a801 <func_1+0x1029>
0x804a7fa:   b8 01 00 00 00                  	mov eax, 1
0x804a7ff:   eb 05                           	jmp 0x804a806 <func_1+0x102e>
0x804a801:   b8 00 00 00 00                  	mov eax, 0
0x804a806:   89 c3                           	mov ebx, eax
0x804a808:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a80c:   ba 03 00 00 00                  	mov edx, 3
0x804a811:   89 c1                           	mov ecx, eax
0x804a813:   d3 e2                           	shl edx, cl
0x804a815:   89 d0                           	mov eax, edx
0x804a817:   09 d8                           	or eax, ebx
0x804a819:   0f be c0                        	movsx eax, al
0x804a81c:   83 e0 11                        	and eax, 0x11
0x804a81f:   89 c2                           	mov edx, eax
0x804a821:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a827:   0f be c0                        	movsx eax, al
0x804a82a:   0f af c2                        	imul eax, edx
0x804a82d:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804a833:   c7 85 3c ff ff ff 95 c0 a8 33   	mov dword ptr [ebp - 0xc4], 0x33a8c095
0x804a83d:   83 45 f0 09                     	add dword ptr [ebp - 0x10], 9
0x804a841:   83 7d f0 17                     	cmp dword ptr [ebp - 0x10], 0x17
0x804a845:   0f 8f f3 f9 ff ff               	jg 0x804a23e <func_1+0xa66>
0x804a84b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a84e:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804a854:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a85a:   3d 89 1f 11 8c                  	cmp eax, 0x8c111f89
0x804a85f:   76 07                           	jbe 0x804a868 <func_1+0x1090>
0x804a861:   80 bd 57 ff ff ff 00            	cmp byte ptr [ebp - 0xa9], 0
0x804a868:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a86d:   89 c2                           	mov edx, eax
0x804a86f:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a873:   21 d0                           	and eax, edx
0x804a875:   88 45 ba                        	mov byte ptr [ebp - 0x46], al
0x804a878:   0f b7 85 4e ff ff ff            	movzx eax, word ptr [ebp - 0xb2]
0x804a87f:   83 c0 01                        	add eax, 1
0x804a882:   66 89 85 4e ff ff ff            	mov word ptr [ebp - 0xb2], ax
0x804a889:   66 83 ad 4c ff ff ff 01         	sub word ptr [ebp - 0xb4], 1
0x804a891:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a897:   0f b6 c0                        	movzx eax, al
0x804a89a:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a89d:   0f b6 45 ba                     	movzx eax, byte ptr [ebp - 0x46]
0x804a8a1:   0f b6 55 86                     	movzx edx, byte ptr [ebp - 0x7a]
0x804a8a5:   0f b6 5d 87                     	movzx ebx, byte ptr [ebp - 0x79]
0x804a8a9:   0f b7 7d 88                     	movzx edi, word ptr [ebp - 0x78]
0x804a8ad:   0f bf 75 8a                     	movsx esi, word ptr [ebp - 0x76]
0x804a8b1:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a8b7:   0f b6 4d bb                     	movzx ecx, byte ptr [ebp - 0x45]
0x804a8bb:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a8c1:   0f bf 75 90                     	movsx esi, word ptr [ebp - 0x70]
0x804a8c5:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a8cb:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x804a8cf:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a8d5:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a8d9:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a8df:   0f be 4d 93                     	movsx ecx, byte ptr [ebp - 0x6d]
0x804a8e3:   89 8d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ecx
0x804a8e9:   0f bf 75 ee                     	movsx esi, word ptr [ebp - 0x12]
0x804a8ed:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a8f3:   0f b7 75 e2                     	movzx esi, word ptr [ebp - 0x1e]
0x804a8f7:   0f be 4d cb                     	movsx ecx, byte ptr [ebp - 0x35]
0x804a8fb:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a8fe:   50                              	push eax
0x804a8ff:   52                              	push edx
0x804a900:   53                              	push ebx
0x804a901:   57                              	push edi
0x804a902:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a908:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a90e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a911:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a914:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a91a:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a920:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a923:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a926:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a92c:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a932:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a935:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a938:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a93b:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a941:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a944:   56                              	push esi
0x804a945:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a948:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a94b:   51                              	push ecx
0x804a94c:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a94f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a952:   e8 cf ec ff ff                  	call 0x8049626 <set_var>
0x804a957:   83 c4 68                        	add esp, 0x68
0x804a95a:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a961:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a964:   5b                              	pop ebx
0x804a965:   5e                              	pop esi
0x804a966:   5f                              	pop edi
0x804a967:   5d                              	pop ebp
0x804a968:   c3                              	ret 
; function: main at 0x804a969 -- 0x804ad03
0x804a969:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a96d:   83 e4 f0                        	and esp, 0xfffffff0
0x804a970:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a973:   55                              	push ebp
0x804a974:   89 e5                           	mov ebp, esp
0x804a976:   53                              	push ebx
0x804a977:   51                              	push ecx
0x804a978:   83 ec 10                        	sub esp, 0x10
0x804a97b:   e8 10 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a980:   81 c3 80 26 00 00               	add ebx, 0x2680
0x804a986:   89 c8                           	mov eax, ecx
0x804a988:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a98f:   83 38 02                        	cmp dword ptr [eax], 2
0x804a992:   75 26                           	jne 0x804a9ba <main+0x51>
0x804a994:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a997:   83 c0 04                        	add eax, 4
0x804a99a:   8b 00                           	mov eax, dword ptr [eax]
0x804a99c:   83 ec 08                        	sub esp, 8
0x804a99f:   8d 93 e8 dd ff ff               	lea edx, [ebx - 0x2218]
0x804a9a5:   52                              	push edx
0x804a9a6:   50                              	push eax
0x804a9a7:   e8 54 d9 ff ff                  	call 0x8048300 <strcmp>
0x804a9ac:   83 c4 10                        	add esp, 0x10
0x804a9af:   85 c0                           	test eax, eax
0x804a9b1:   75 07                           	jne 0x804a9ba <main+0x51>
0x804a9b3:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a9ba:   e8 97 da ff ff                  	call 0x8048456 <platform_main_begin>
0x804a9bf:   e8 a7 ea ff ff                  	call 0x804946b <crc32_gentab>
0x804a9c4:   e8 0f ee ff ff                  	call 0x80497d8 <func_1>
0x804a9c9:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a9cf:   89 c2                           	mov edx, eax
0x804a9d1:   83 ec 04                        	sub esp, 4
0x804a9d4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9d7:   8d 83 ea dd ff ff               	lea eax, [ebx - 0x2216]
0x804a9dd:   50                              	push eax
0x804a9de:   52                              	push edx
0x804a9df:   e8 93 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9e4:   83 c4 10                        	add esp, 0x10
0x804a9e7:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a9ed:   83 ec 04                        	sub esp, 4
0x804a9f0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9f3:   8d 93 ee dd ff ff               	lea edx, [ebx - 0x2212]
0x804a9f9:   52                              	push edx
0x804a9fa:   50                              	push eax
0x804a9fb:   e8 77 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa00:   83 c4 10                        	add esp, 0x10
0x804aa03:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804aa0a:   0f be c0                        	movsx eax, al
0x804aa0d:   83 ec 04                        	sub esp, 4
0x804aa10:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa13:   8d 93 f2 dd ff ff               	lea edx, [ebx - 0x220e]
0x804aa19:   52                              	push edx
0x804aa1a:   50                              	push eax
0x804aa1b:   e8 57 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa20:   83 c4 10                        	add esp, 0x10
0x804aa23:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aa29:   89 c2                           	mov edx, eax
0x804aa2b:   83 ec 04                        	sub esp, 4
0x804aa2e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa31:   8d 83 f7 dd ff ff               	lea eax, [ebx - 0x2209]
0x804aa37:   50                              	push eax
0x804aa38:   52                              	push edx
0x804aa39:   e8 39 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa3e:   83 c4 10                        	add esp, 0x10
0x804aa41:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aa47:   83 ec 04                        	sub esp, 4
0x804aa4a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa4d:   8d 93 fc dd ff ff               	lea edx, [ebx - 0x2204]
0x804aa53:   52                              	push edx
0x804aa54:   50                              	push eax
0x804aa55:   e8 1d eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa5a:   83 c4 10                        	add esp, 0x10
0x804aa5d:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804aa64:   0f b7 c0                        	movzx eax, ax
0x804aa67:   83 ec 04                        	sub esp, 4
0x804aa6a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa6d:   8d 93 01 de ff ff               	lea edx, [ebx - 0x21ff]
0x804aa73:   52                              	push edx
0x804aa74:   50                              	push eax
0x804aa75:   e8 fd ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa7a:   83 c4 10                        	add esp, 0x10
0x804aa7d:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aa83:   89 c2                           	mov edx, eax
0x804aa85:   83 ec 04                        	sub esp, 4
0x804aa88:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa8b:   8d 83 06 de ff ff               	lea eax, [ebx - 0x21fa]
0x804aa91:   50                              	push eax
0x804aa92:   52                              	push edx
0x804aa93:   e8 df ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa98:   83 c4 10                        	add esp, 0x10
0x804aa9b:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804aaa2:   98                              	cwde 
0x804aaa3:   83 ec 04                        	sub esp, 4
0x804aaa6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaa9:   8d 93 0b de ff ff               	lea edx, [ebx - 0x21f5]
0x804aaaf:   52                              	push edx
0x804aab0:   50                              	push eax
0x804aab1:   e8 c1 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aab6:   83 c4 10                        	add esp, 0x10
0x804aab9:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aabf:   83 ec 04                        	sub esp, 4
0x804aac2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac5:   8d 93 10 de ff ff               	lea edx, [ebx - 0x21f0]
0x804aacb:   52                              	push edx
0x804aacc:   50                              	push eax
0x804aacd:   e8 a5 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aad2:   83 c4 10                        	add esp, 0x10
0x804aad5:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804aadb:   83 ec 04                        	sub esp, 4
0x804aade:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae1:   8d 93 15 de ff ff               	lea edx, [ebx - 0x21eb]
0x804aae7:   52                              	push edx
0x804aae8:   50                              	push eax
0x804aae9:   e8 89 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaee:   83 c4 10                        	add esp, 0x10
0x804aaf1:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aaf7:   83 ec 04                        	sub esp, 4
0x804aafa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aafd:   8d 93 1b de ff ff               	lea edx, [ebx - 0x21e5]
0x804ab03:   52                              	push edx
0x804ab04:   50                              	push eax
0x804ab05:   e8 6d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab0a:   83 c4 10                        	add esp, 0x10
0x804ab0d:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804ab14:   0f be c0                        	movsx eax, al
0x804ab17:   83 ec 04                        	sub esp, 4
0x804ab1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab1d:   8d 93 21 de ff ff               	lea edx, [ebx - 0x21df]
0x804ab23:   52                              	push edx
0x804ab24:   50                              	push eax
0x804ab25:   e8 4d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab2a:   83 c4 10                        	add esp, 0x10
0x804ab2d:   0f b6 83 51 00 00 00            	movzx eax, byte ptr [ebx + 0x51]
0x804ab34:   0f be c0                        	movsx eax, al
0x804ab37:   83 ec 04                        	sub esp, 4
0x804ab3a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab3d:   8d 93 27 de ff ff               	lea edx, [ebx - 0x21d9]
0x804ab43:   52                              	push edx
0x804ab44:   50                              	push eax
0x804ab45:   e8 2d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab4a:   83 c4 10                        	add esp, 0x10
0x804ab4d:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804ab53:   89 c2                           	mov edx, eax
0x804ab55:   83 ec 04                        	sub esp, 4
0x804ab58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab5b:   8d 83 2d de ff ff               	lea eax, [ebx - 0x21d3]
0x804ab61:   50                              	push eax
0x804ab62:   52                              	push edx
0x804ab63:   e8 0f ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab68:   83 c4 10                        	add esp, 0x10
0x804ab6b:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804ab71:   83 ec 04                        	sub esp, 4
0x804ab74:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab77:   8d 93 33 de ff ff               	lea edx, [ebx - 0x21cd]
0x804ab7d:   52                              	push edx
0x804ab7e:   50                              	push eax
0x804ab7f:   e8 f3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab84:   83 c4 10                        	add esp, 0x10
0x804ab87:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804ab8e:   0f b7 c0                        	movzx eax, ax
0x804ab91:   83 ec 04                        	sub esp, 4
0x804ab94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab97:   8d 93 39 de ff ff               	lea edx, [ebx - 0x21c7]
0x804ab9d:   52                              	push edx
0x804ab9e:   50                              	push eax
0x804ab9f:   e8 d3 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba4:   83 c4 10                        	add esp, 0x10
0x804aba7:   0f b7 83 ac 04 00 00            	movzx eax, word ptr [ebx + 0x4ac]
0x804abae:   98                              	cwde 
0x804abaf:   83 ec 04                        	sub esp, 4
0x804abb2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abb5:   8d 93 3f de ff ff               	lea edx, [ebx - 0x21c1]
0x804abbb:   52                              	push edx
0x804abbc:   50                              	push eax
0x804abbd:   e8 b5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc2:   83 c4 10                        	add esp, 0x10
0x804abc5:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804abcb:   89 c2                           	mov edx, eax
0x804abcd:   83 ec 04                        	sub esp, 4
0x804abd0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abd3:   8d 83 45 de ff ff               	lea eax, [ebx - 0x21bb]
0x804abd9:   50                              	push eax
0x804abda:   52                              	push edx
0x804abdb:   e8 97 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abe0:   83 c4 10                        	add esp, 0x10
0x804abe3:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804abe9:   89 c2                           	mov edx, eax
0x804abeb:   83 ec 04                        	sub esp, 4
0x804abee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf1:   8d 83 4b de ff ff               	lea eax, [ebx - 0x21b5]
0x804abf7:   50                              	push eax
0x804abf8:   52                              	push edx
0x804abf9:   e8 79 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abfe:   83 c4 10                        	add esp, 0x10
0x804ac01:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804ac08:   0f b6 c0                        	movzx eax, al
0x804ac0b:   83 ec 04                        	sub esp, 4
0x804ac0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac11:   8d 93 51 de ff ff               	lea edx, [ebx - 0x21af]
0x804ac17:   52                              	push edx
0x804ac18:   50                              	push eax
0x804ac19:   e8 59 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac1e:   83 c4 10                        	add esp, 0x10
0x804ac21:   0f b7 83 5e 00 00 00            	movzx eax, word ptr [ebx + 0x5e]
0x804ac28:   98                              	cwde 
0x804ac29:   83 ec 04                        	sub esp, 4
0x804ac2c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac2f:   8d 93 57 de ff ff               	lea edx, [ebx - 0x21a9]
0x804ac35:   52                              	push edx
0x804ac36:   50                              	push eax
0x804ac37:   e8 3b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac3c:   83 c4 10                        	add esp, 0x10
0x804ac3f:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804ac46:   0f b7 c0                        	movzx eax, ax
0x804ac49:   83 ec 04                        	sub esp, 4
0x804ac4c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac4f:   8d 93 5d de ff ff               	lea edx, [ebx - 0x21a3]
0x804ac55:   52                              	push edx
0x804ac56:   50                              	push eax
0x804ac57:   e8 1b e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac5c:   83 c4 10                        	add esp, 0x10
0x804ac5f:   0f b6 83 62 00 00 00            	movzx eax, byte ptr [ebx + 0x62]
0x804ac66:   0f b6 c0                        	movzx eax, al
0x804ac69:   83 ec 04                        	sub esp, 4
0x804ac6c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac6f:   8d 93 63 de ff ff               	lea edx, [ebx - 0x219d]
0x804ac75:   52                              	push edx
0x804ac76:   50                              	push eax
0x804ac77:   e8 fb e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac7c:   83 c4 10                        	add esp, 0x10
0x804ac7f:   0f b6 83 63 00 00 00            	movzx eax, byte ptr [ebx + 0x63]
0x804ac86:   0f b6 c0                        	movzx eax, al
0x804ac89:   83 ec 04                        	sub esp, 4
0x804ac8c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac8f:   8d 93 69 de ff ff               	lea edx, [ebx - 0x2197]
0x804ac95:   52                              	push edx
0x804ac96:   50                              	push eax
0x804ac97:   e8 db e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac9c:   83 c4 10                        	add esp, 0x10
0x804ac9f:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804aca6:   0f b6 c0                        	movzx eax, al
0x804aca9:   83 ec 04                        	sub esp, 4
0x804acac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acaf:   8d 93 6f de ff ff               	lea edx, [ebx - 0x2191]
0x804acb5:   52                              	push edx
0x804acb6:   50                              	push eax
0x804acb7:   e8 bb e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acbc:   83 c4 10                        	add esp, 0x10
0x804acbf:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804acc5:   89 c2                           	mov edx, eax
0x804acc7:   83 ec 04                        	sub esp, 4
0x804acca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804accd:   8d 83 75 de ff ff               	lea eax, [ebx - 0x218b]
0x804acd3:   50                              	push eax
0x804acd4:   52                              	push edx
0x804acd5:   e8 9d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acda:   83 c4 10                        	add esp, 0x10
0x804acdd:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ace3:   f7 d0                           	not eax
0x804ace5:   83 ec 08                        	sub esp, 8
0x804ace8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aceb:   50                              	push eax
0x804acec:   e8 75 d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804acf1:   83 c4 10                        	add esp, 0x10
0x804acf4:   b8 00 00 00 00                  	mov eax, 0
0x804acf9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804acfc:   59                              	pop ecx
0x804acfd:   5b                              	pop ebx
0x804acfe:   5d                              	pop ebp
0x804acff:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ad02:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ad03 -- 0x804ad07
0x804ad03:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ad06:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ad07 -- 0x804ad0b
0x804ad07:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ad0a:   c3                              	ret 
; data inside code section at 0x804ad0b -- 0x804ad10
0x804ad0b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804ad10 -- 0x804ad6d
0x804ad10:   55                              	push ebp
0x804ad11:   57                              	push edi
0x804ad12:   56                              	push esi
0x804ad13:   53                              	push ebx
0x804ad14:   e8 77 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad19:   81 c3 e7 22 00 00               	add ebx, 0x22e7
0x804ad1f:   83 ec 0c                        	sub esp, 0xc
0x804ad22:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ad26:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ad2c:   e8 9b d5 ff ff                  	call 0x80482cc <_init>
0x804ad31:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ad37:   29 c6                           	sub esi, eax
0x804ad39:   c1 fe 02                        	sar esi, 2
0x804ad3c:   85 f6                           	test esi, esi
0x804ad3e:   74 25                           	je 0x804ad65 <__libc_csu_init+0x55>
0x804ad40:   31 ff                           	xor edi, edi
0x804ad42:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ad48:   83 ec 04                        	sub esp, 4
0x804ad4b:   55                              	push ebp
0x804ad4c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad50:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad54:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ad5b:   83 c7 01                        	add edi, 1
0x804ad5e:   83 c4 10                        	add esp, 0x10
0x804ad61:   39 fe                           	cmp esi, edi
0x804ad63:   75 e3                           	jne 0x804ad48 <__libc_csu_init+0x38>
0x804ad65:   83 c4 0c                        	add esp, 0xc
0x804ad68:   5b                              	pop ebx
0x804ad69:   5e                              	pop esi
0x804ad6a:   5f                              	pop edi
0x804ad6b:   5d                              	pop ebp
0x804ad6c:   c3                              	ret 
; data inside code section at 0x804ad6d -- 0x804ad70
0x804ad6d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ad70 -- 0x804ad72
0x804ad70:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ad74 -- 0x804ad88
0x804ad74:   53                              	push ebx
0x804ad75:   83 ec 08                        	sub esp, 8
0x804ad78:   e8 13 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad7d:   81 c3 83 22 00 00               	add ebx, 0x2283
0x804ad83:   83 c4 08                        	add esp, 8
0x804ad86:   5b                              	pop ebx
0x804ad87:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ad88:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ad98:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ada8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804adb8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804adc8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804add8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ade8:   31 00 67 5f 35 00 67 5f  39 00 67 5f 33 35 00 67   |1.g_5.g_9.g_35.g|
0x804adf8:   5f 34 32 00 67 5f 34 33  00 67 5f 34 37 00 67 5f   |_42.g_43.g_47.g_|
0x804ae08:   36 31 00 67 5f 37 37 00  67 5f 37 38 00 67 5f 31   |61.g_77.g_78.g_1|
0x804ae18:   30 37 00 67 5f 31 35 36  00 67 5f 31 35 39 00 67   |07.g_156.g_159.g|
0x804ae28:   5f 31 36 30 00 67 5f 31  36 36 00 67 5f 31 36 39   |_160.g_166.g_169|
0x804ae38:   00 67 5f 31 37 34 00 67  5f 31 37 39 00 67 5f 31   |.g_174.g_179.g_1|
0x804ae48:   38 30 00 67 5f 31 38 31  00 67 5f 31 38 32 00 67   |80.g_181.g_182.g|
0x804ae58:   5f 32 38 39 00 67 5f 32  39 34 00 67 5f 33 31 36   |_289.g_294.g_316|
0x804ae68:   00 67 5f 33 38 33 00 67  5f 34 31 32 00 67 5f 34   |.g_383.g_412.g_4|
0x804ae78:   31 38 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |18.....?...~....|
0x804ae88:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804ae98:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804aea8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804aeb8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804aec8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804aed8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804aee8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804aee8:   01 1b 03 3b b8 02 00 00  56 00 00 00 08 d4 ff ff   |...;....V.......|
0x804aef8:   e8 02 00 00 48 d4 ff ff  0c 03 00 00 98 d4 ff ff   |....H...........|
0x804af08:   d4 02 00 00 6e d5 ff ff  20 03 00 00 7e d5 ff ff   |....n... ...~...|
0x804af18:   40 03 00 00 ac d5 ff ff  64 03 00 00 ca d5 ff ff   |@.......d.......|
0x804af28:   84 03 00 00 f2 d5 ff ff  a4 03 00 00 1c d6 ff ff   |................|
0x804af38:   c4 03 00 00 45 d6 ff ff  e4 03 00 00 88 d6 ff ff   |....E...........|
0x804af48:   04 04 00 00 c9 d6 ff ff  24 04 00 00 21 d7 ff ff   |........$...!...|
0x804af58:   48 04 00 00 73 d7 ff ff  6c 04 00 00 b0 d7 ff ff   |H...s...l.......|
0x804af68:   8c 04 00 00 e7 d7 ff ff  ac 04 00 00 06 d8 ff ff   |................|
0x804af78:   cc 04 00 00 30 d8 ff ff  ec 04 00 00 5c d8 ff ff   |....0.......\...|
0x804af88:   0c 05 00 00 87 d8 ff ff  2c 05 00 00 d0 d8 ff ff   |........,.......|
0x804af98:   4c 05 00 00 17 d9 ff ff  6c 05 00 00 71 d9 ff ff   |L.......l...q...|
0x804afa8:   90 05 00 00 c5 d9 ff ff  b4 05 00 00 04 da ff ff   |................|
0x804afb8:   d4 05 00 00 3d da ff ff  f4 05 00 00 5f da ff ff   |....=......._...|
0x804afc8:   14 06 00 00 ad da ff ff  34 06 00 00 e9 da ff ff   |........4.......|
0x804afd8:   54 06 00 00 72 db ff ff  74 06 00 00 a4 db ff ff   |T...r...t.......|
0x804afe8:   94 06 00 00 d4 db ff ff  b4 06 00 00 19 dc ff ff   |................|
0x804aff8:   d4 06 00 00 58 dc ff ff  f4 06 00 00 8a dc ff ff   |....X...........|
0x804b008:   14 07 00 00 b6 dc ff ff  34 07 00 00 d4 dc ff ff   |........4.......|
0x804b018:   54 07 00 00 fc dc ff ff  74 07 00 00 21 dd ff ff   |T.......t...!...|
0x804b028:   94 07 00 00 46 dd ff ff  b4 07 00 00 7d dd ff ff   |....F.......}...|
0x804b038:   d4 07 00 00 b1 dd ff ff  f4 07 00 00 03 de ff ff   |................|
0x804b048:   18 08 00 00 4f de ff ff  3c 08 00 00 86 de ff ff   |....O...<.......|
0x804b058:   5c 08 00 00 b7 de ff ff  7c 08 00 00 d6 de ff ff   |\.......|.......|
0x804b068:   9c 08 00 00 00 df ff ff  bc 08 00 00 28 df ff ff   |............(...|
0x804b078:   dc 08 00 00 51 df ff ff  fc 08 00 00 8d df ff ff   |....Q...........|
0x804b088:   1c 09 00 00 c7 df ff ff  3c 09 00 00 1a e0 ff ff   |........<.......|
0x804b098:   60 09 00 00 67 e0 ff ff  84 09 00 00 9f e0 ff ff   |`...g...........|
0x804b0a8:   a4 09 00 00 d1 e0 ff ff  c4 09 00 00 e5 e0 ff ff   |................|
0x804b0b8:   e4 09 00 00 fc e0 ff ff  04 0a 00 00 11 e1 ff ff   |................|
0x804b0c8:   24 0a 00 00 27 e1 ff ff  44 0a 00 00 4e e1 ff ff   |$...'...D...N...|
0x804b0d8:   64 0a 00 00 73 e1 ff ff  84 0a 00 00 b2 e1 ff ff   |d...s...........|
0x804b0e8:   a4 0a 00 00 eb e1 ff ff  c4 0a 00 00 17 e2 ff ff   |................|
0x804b0f8:   e4 0a 00 00 3d e2 ff ff  04 0b 00 00 7f e2 ff ff   |....=...........|
0x804b108:   24 0b 00 00 c1 e2 ff ff  44 0b 00 00 03 e3 ff ff   |$.......D.......|
0x804b118:   64 0b 00 00 78 e3 ff ff  84 0b 00 00 d5 e3 ff ff   |d...x...........|
0x804b128:   a4 0b 00 00 32 e4 ff ff  c4 0b 00 00 8f e4 ff ff   |....2...........|
0x804b138:   e4 0b 00 00 1f e5 ff ff  04 0c 00 00 83 e5 ff ff   |................|
0x804b148:   24 0c 00 00 f3 e5 ff ff  44 0c 00 00 3a e6 ff ff   |$.......D...:...|
0x804b158:   68 0c 00 00 8f e6 ff ff  88 0c 00 00 d6 e6 ff ff   |h...............|
0x804b168:   ac 0c 00 00 3e e7 ff ff  d0 0c 00 00 f0 e8 ff ff   |....>...........|
0x804b178:   00 0d 00 00 81 fa ff ff  30 0d 00 00 1b fe ff ff   |........0.......|
0x804b188:   68 0d 00 00 1f fe ff ff  7c 0d 00 00 28 fe ff ff   |h.......|...(...|
0x804b198:   90 0d 00 00 88 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b1a4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b1b4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b1c4:   bc d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b1d4:   30 00 00 00 18 d1 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b1e4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b1f4:   10 00 00 00 54 00 00 00  34 d1 ff ff 08 00 00 00   |....T...4.......|
0x804b204:   00 00 00 00 1c 00 00 00  68 00 00 00 46 d2 ff ff   |........h...F...|
0x804b214:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b224:   04 04 00 00 20 00 00 00  88 00 00 00 36 d2 ff ff   |.... .......6...|
0x804b234:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b244:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b254:   40 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804b264:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b274:   3e d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |>...(....A....B.|
0x804b284:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b294:   46 d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |F...*....A....B.|
0x804b2a4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b2b4:   50 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |P...)....A....B.|
0x804b2c4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b2d4:   59 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Y...C....A....B.|
0x804b2e4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b2f4:   7c d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   ||...A....A....B.|
0x804b304:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b314:   9d d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b324:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b334:   90 01 00 00 d1 d2 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b344:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b354:   1c 00 00 00 b4 01 00 00  ff d2 ff ff 3d 00 00 00   |............=...|
0x804b364:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b374:   1c 00 00 00 d4 01 00 00  1c d3 ff ff 37 00 00 00   |............7...|
0x804b384:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b394:   1c 00 00 00 f4 01 00 00  33 d3 ff ff 1f 00 00 00   |........3.......|
0x804b3a4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b3b4:   1c 00 00 00 14 02 00 00  32 d3 ff ff 2a 00 00 00   |........2...*...|
0x804b3c4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b3d4:   1c 00 00 00 34 02 00 00  3c d3 ff ff 2c 00 00 00   |....4...<...,...|
0x804b3e4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b3f4:   1c 00 00 00 54 02 00 00  48 d3 ff ff 2b 00 00 00   |....T...H...+...|
0x804b404:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b414:   1c 00 00 00 74 02 00 00  53 d3 ff ff 49 00 00 00   |....t...S...I...|
0x804b424:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b434:   1c 00 00 00 94 02 00 00  7c d3 ff ff 47 00 00 00   |........|...G...|
0x804b444:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b454:   20 00 00 00 b4 02 00 00  a3 d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b464:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b474:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d9 d3 ff ff   |.... ...........|
0x804b484:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b494:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b4a4:   09 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b4b4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b4c4:   28 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |(...9....A....B.|
0x804b4d4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b4e4:   41 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |A..."....A....B.|
0x804b4f4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b504:   43 d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |C...N....A....B.|
0x804b514:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b524:   71 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |q...<....A....B.|
0x804b534:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b544:   8d d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b554:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b564:   f6 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b574:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b584:   08 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b594:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b5a4:   18 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b5b4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b5c4:   3d d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |=...?....A....B.|
0x804b5d4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b5e4:   5c d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |\...2....A....B.|
0x804b5f4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b604:   6e d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |n...,....A....B.|
0x804b614:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b624:   7a d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |z........A....B.|
0x804b634:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b644:   78 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |x...(....A....B.|
0x804b654:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b664:   80 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b674:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b684:   85 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b694:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b6a4:   8a d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b6b4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b6c4:   a1 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b6d4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b6e4:   b5 d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b6f4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b704:   60 05 00 00 e3 d5 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b714:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b724:   1c 00 00 00 84 05 00 00  0b d6 ff ff 37 00 00 00   |............7...|
0x804b734:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b744:   1c 00 00 00 a4 05 00 00  22 d6 ff ff 31 00 00 00   |........"...1...|
0x804b754:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b764:   1c 00 00 00 c4 05 00 00  33 d6 ff ff 1f 00 00 00   |........3.......|
0x804b774:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b784:   1c 00 00 00 e4 05 00 00  32 d6 ff ff 2a 00 00 00   |........2...*...|
0x804b794:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b7a4:   1c 00 00 00 04 06 00 00  3c d6 ff ff 28 00 00 00   |........<...(...|
0x804b7b4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b7c4:   1c 00 00 00 24 06 00 00  44 d6 ff ff 29 00 00 00   |....$...D...)...|
0x804b7d4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b7e4:   1c 00 00 00 44 06 00 00  4d d6 ff ff 3c 00 00 00   |....D...M...<...|
0x804b7f4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b804:   1c 00 00 00 64 06 00 00  69 d6 ff ff 3a 00 00 00   |....d...i...:...|
0x804b814:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b824:   20 00 00 00 84 06 00 00  83 d6 ff ff 53 00 00 00   | ...........S...|
0x804b834:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b844:   c5 0c 04 04 20 00 00 00  a8 06 00 00 b2 d6 ff ff   |.... ...........|
0x804b854:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b864:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b874:   db d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b884:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b894:   f3 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8a4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b8b4:   05 d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8c4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b8d4:   f9 d6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8e4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b8f4:   f0 d6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b904:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b914:   e5 d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b924:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b934:   db d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b944:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b954:   e2 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b964:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b974:   e7 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b984:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b994:   06 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b9a4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b9b4:   1f d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9c4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b9d4:   2b d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |+...&....A....B.|
0x804b9e4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b9f4:   31 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |1...B....A....B.|
0x804ba04:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804ba14:   53 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |S...B....A....B.|
0x804ba24:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804ba34:   75 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |u...B....A....B.|
0x804ba44:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ba54:   97 d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804ba64:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804ba74:   ec d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba84:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ba94:   29 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |)...]....A....B.|
0x804baa4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bab4:   66 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |f...]....A....B.|
0x804bac4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bad4:   a3 d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bae4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804baf4:   13 d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bb04:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bb14:   57 d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |W...p....A....B.|
0x804bb24:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bb34:   a7 d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bb44:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bb54:   b0 09 00 00 ca d9 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bb64:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bb74:   d0 09 00 00 ff d9 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bb84:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bb94:   20 00 00 00 f4 09 00 00  22 da ff ff 68 00 00 00   | ......."...h...|
0x804bba4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bbb4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 66 da ff ff   |....,.......f...|
0x804bbc4:   b2 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bbd4:   86 04 83 05 03 a5 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bbe4:   04 00 00 00 2c 00 00 00  48 0a 00 00 e8 db ff ff   |....,...H.......|
0x804bbf4:   91 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bc04:   86 04 83 05 03 81 11 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bc14:   04 00 00 00 34 00 00 00  78 0a 00 00 49 ed ff ff   |....4...x...I...|
0x804bc24:   9a 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bc34:   0f 03 75 78 06 10 03 02  75 7c 03 85 03 c1 0c 01   |..ux....u|......|
0x804bc44:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bc54:   b0 0a 00 00 ab f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bc64:   10 00 00 00 c4 0a 00 00  9b f0 ff ff 04 00 00 00   |................|
0x804bc74:   00 00 00 00 48 00 00 00  d8 0a 00 00 90 f0 ff ff   |....H...........|
0x804bc84:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bc94:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bca4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bcb4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bcc4:   10 00 00 00 24 0b 00 00  a4 f0 ff ff 02 00 00 00   |....$...........|
0x804bcd4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 74 ad 04 08  19 00 00 00 0c cf 04 08   |....t...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff fa b8 cd 24   |...............$|
0x804d028:   fc ff ff ff 01 00 00 00  f7 ff ff ff 01 00 00 00   |................|
0x804d038:   84 8c 00 00 45 b5 30 82  fb ff 00 00 ff ff ff ff   |....E.0.........|
0x804d048:   2f d7 ad 9c ff ff ff ff  fc 9b 5c 9a 7e 6e 0f 35   |/.........\.~n.5|
0x804d058:   9b e1 f6 cc ff 00 03 00  09 00 35 09 01 00 00 00   |..........5.....|
0x804d068:   91 ad a0 7c ??                                     |...|?           |
