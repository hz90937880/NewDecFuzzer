;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:35:05
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 30 dd ff ff               	lea eax, [ebx - 0x22d0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 d0 dc ff ff               	lea eax, [ebx - 0x2330]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 b6 a8 04 08               	mov eax, 0x804a8b6
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 d0 04 08                  	mov eax, 0x804d080
0x80483a5:   3d 80 d0 04 08                  	cmp eax, 0x804d080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 d0 04 08                  	push 0x804d080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 d0 04 08                  	mov eax, 0x804d080
0x80483e5:   2d 80 d0 04 08                  	sub eax, 0x804d080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 d0 04 08                  	push 0x804d080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 60 28 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 4c 28 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 50 dd ff ff               	lea edx, [eax - 0x22b0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 1f 28 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 01 28 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 d9 27 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 af 27 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 86 27 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 43 27 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 01 27 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 a9 26 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 58 26 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 1b 26 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 e4 25 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 c5 25 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 9b 25 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 6f 25 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 44 25 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 fb 24 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 b3 24 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 59 24 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 06 24 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 c7 23 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 91 23 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 6f 23 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 21 23 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 e5 22 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 5c 22 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 2a 22 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 fa 21 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 b5 21 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 76 21 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 44 21 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 15 21 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 f7 20 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 cf 20 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 aa 20 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 85 20 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 4e 20 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 19 20 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 c7 1f 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 7c 1f 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 45 1f 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 14 1f 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 f5 1e 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 cb 1e 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 a3 1e 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 7a 1e 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 3e 1e 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 03 1e 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 b0 1d 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 64 1d 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 2c 1d 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 fd 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 e9 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 d2 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 bd 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 a7 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 80 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 5b 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 1c 1c 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 e3 1b 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 b7 1b 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 91 1b 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 4c de ff ff               	fld dword ptr [eax - 0x21b4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 4c de ff ff               	fld dword ptr [eax - 0x21b4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 50 de ff ff               	fld dword ptr [eax - 0x21b0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 4f 1b 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 4c de ff ff               	fld dword ptr [eax - 0x21b4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 4c de ff ff               	fld dword ptr [eax - 0x21b4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 50 de ff ff               	fld dword ptr [eax - 0x21b0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 0d 1b 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 54 de ff ff               	fld dword ptr [eax - 0x21ac]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 58 de ff ff               	fld dword ptr [eax - 0x21a8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 5c de ff ff               	fld dword ptr [eax - 0x21a4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 cb 1a 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 60 de ff ff               	fld dword ptr [eax - 0x21a0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 64 de ff ff               	fld dword ptr [eax - 0x219c]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 68 de ff ff               	fld dword ptr [eax - 0x2198]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 53 1a 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 70 de ff ff               	fld qword ptr [eax - 0x2190]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 70 de ff ff               	fld qword ptr [eax - 0x2190]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 78 de ff ff               	fld qword ptr [eax - 0x2188]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 f6 19 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 70 de ff ff               	fld qword ptr [eax - 0x2190]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 70 de ff ff               	fld qword ptr [eax - 0x2190]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 78 de ff ff               	fld qword ptr [eax - 0x2188]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 99 19 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 80 de ff ff               	fld qword ptr [eax - 0x2180]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 88 de ff ff               	fld qword ptr [eax - 0x2178]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 90 de ff ff               	fld qword ptr [eax - 0x2170]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 3c 19 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 98 de ff ff               	fld qword ptr [eax - 0x2168]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a0 de ff ff               	fld qword ptr [eax - 0x2160]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 a8 de ff ff               	fld qword ptr [eax - 0x2158]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 ac 18 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b0 de ff ff               	fld dword ptr [eax - 0x2150]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 b4 de ff ff               	fld dword ptr [eax - 0x214c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 48 18 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 d7 17 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 94 17 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 60 dd ff ff               	lea eax, [ebx - 0x22a0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 84 dd ff ff               	lea eax, [ebx - 0x227c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497e6
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 4c                        	sub esp, 0x4c
0x804962f:   e8 8e 16 00 00                  	call 0x804acc2 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804963d:   8b 4d 20                        	mov ecx, dword ptr [ebp + 0x20]
0x8049640:   8b 5d 24                        	mov ebx, dword ptr [ebp + 0x24]
0x8049643:   8b 75 38                        	mov esi, dword ptr [ebp + 0x38]
0x8049646:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049649:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804964c:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x804964f:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049652:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049655:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049658:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x804965b:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804965e:   8b 7d 60                        	mov edi, dword ptr [ebp + 0x60]
0x8049661:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049664:   8b 7d 68                        	mov edi, dword ptr [ebp + 0x68]
0x8049667:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x804966a:   8b 7d 74                        	mov edi, dword ptr [ebp + 0x74]
0x804966d:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049670:   8b 7d 7c                        	mov edi, dword ptr [ebp + 0x7c]
0x8049673:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049676:   89 c8                           	mov eax, ecx
0x8049678:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804967b:   89 d8                           	mov eax, ebx
0x804967d:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049680:   89 f0                           	mov eax, esi
0x8049682:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x8049685:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x8049689:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804968c:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049690:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x8049693:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049697:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x804969a:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804969e:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496a2:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x80496a6:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496aa:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496ae:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496b1:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b5:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496b8:   89 f8                           	mov eax, edi
0x80496ba:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496c0:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496c6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496c9:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496cf:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496d2:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496d8:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496dc:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x80496e2:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x80496e5:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496eb:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496ee:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x80496f4:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496f8:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x80496fe:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049702:   88 82 3d 00 00 00               	mov byte ptr [edx + 0x3d], al
0x8049708:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804970b:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049711:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049714:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804971a:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804971d:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049723:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049726:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x804972c:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049730:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049736:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804973a:   88 82 51 00 00 00               	mov byte ptr [edx + 0x51], al
0x8049740:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049743:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049749:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804974d:   88 82 52 00 00 00               	mov byte ptr [edx + 0x52], al
0x8049753:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049756:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x804975c:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049760:   88 82 53 00 00 00               	mov byte ptr [edx + 0x53], al
0x8049766:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049769:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804976f:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049773:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x804977a:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804977d:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049783:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049786:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x804978c:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049790:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x8049797:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804979a:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497a0:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497a4:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x80497aa:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497ad:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497b3:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497b6:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x80497bc:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c0:   88 82 ac 04 00 00               	mov byte ptr [edx + 0x4ac], al
0x80497c6:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x80497c9:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x80497cf:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497d3:   88 82 7c 00 00 00               	mov byte ptr [edx + 0x7c], al
0x80497d9:   b8 00 00 00 00                  	mov eax, 0
0x80497de:   83 c4 4c                        	add esp, 0x4c
0x80497e1:   5b                              	pop ebx
0x80497e2:   5e                              	pop esi
0x80497e3:   5f                              	pop edi
0x80497e4:   5d                              	pop ebp
0x80497e5:   c3                              	ret 
; function: func_1 at 0x80497e6 -- 0x804a8b6
0x80497e6:   55                              	push ebp
0x80497e7:   89 e5                           	mov ebp, esp
0x80497e9:   57                              	push edi
0x80497ea:   56                              	push esi
0x80497eb:   53                              	push ebx
0x80497ec:   81 ec 78 01 00 00               	sub esp, 0x178
0x80497f2:   e8 c7 14 00 00                  	call 0x804acbe <__x86.get_pc_thunk.ax>
0x80497f7:   05 09 38 00 00                  	add eax, 0x3809
0x80497fc:   c7 85 7c ff ff ff b0 a8 f5 8c   	mov dword ptr [ebp - 0x84], 0x8cf5a8b0
0x8049806:   c7 45 f0 6f 7b 7f 92            	mov dword ptr [ebp - 0x10], 0x927f7b6f
0x804980d:   c7 45 ec db 1f 6f 7c            	mov dword ptr [ebp - 0x14], 0x7c6f1fdb
0x8049814:   c6 45 eb 42                     	mov byte ptr [ebp - 0x15], 0x42
0x8049818:   c7 45 e4 d9 05 c0 12            	mov dword ptr [ebp - 0x1c], 0x12c005d9
0x804981f:   c7 45 e0 55 29 53 d9            	mov dword ptr [ebp - 0x20], 0xd9532955
0x8049826:   c6 45 df 01                     	mov byte ptr [ebp - 0x21], 1
0x804982a:   c6 85 7b ff ff ff 3c            	mov byte ptr [ebp - 0x85], 0x3c
0x8049831:   c7 85 74 ff ff ff d6 f7 4b 09   	mov dword ptr [ebp - 0x8c], 0x94bf7d6
0x804983b:   c7 45 d8 23 3e f3 60            	mov dword ptr [ebp - 0x28], 0x60f33e23
0x8049842:   c7 45 d4 57 35 4d 9c            	mov dword ptr [ebp - 0x2c], 0x9c4d3557
0x8049849:   c7 45 d0 75 35 d5 a2            	mov dword ptr [ebp - 0x30], 0xa2d53575
0x8049850:   c6 85 73 ff ff ff 43            	mov byte ptr [ebp - 0x8d], 0x43
0x8049857:   c6 45 cf a8                     	mov byte ptr [ebp - 0x31], 0xa8
0x804985b:   c7 45 c8 00 00 00 00            	mov dword ptr [ebp - 0x38], 0
0x8049862:   c6 85 72 ff ff ff f6            	mov byte ptr [ebp - 0x8e], 0xf6
0x8049869:   c7 85 6c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x94], 0
0x8049873:   c6 45 c7 02                     	mov byte ptr [ebp - 0x39], 2
0x8049877:   c7 85 68 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x98], 1
0x8049881:   66 c7 45 c4 41 85               	mov word ptr [ebp - 0x3c], 0x8541
0x8049887:   c7 45 c0 31 99 48 37            	mov dword ptr [ebp - 0x40], 0x37489931
0x804988e:   c7 45 bc 9c 26 28 3b            	mov dword ptr [ebp - 0x44], 0x3b28269c
0x8049895:   66 c7 45 ba ff ff               	mov word ptr [ebp - 0x46], 0xffff
0x804989b:   c7 45 b4 7d 2c 01 4c            	mov dword ptr [ebp - 0x4c], 0x4c012c7d
0x80498a2:   c6 45 b3 01                     	mov byte ptr [ebp - 0x4d], 1
0x80498a6:   c7 85 64 ff ff ff 73 1e a5 ec   	mov dword ptr [ebp - 0x9c], 0xeca51e73
0x80498b0:   c7 45 ac fe ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffffe
0x80498b7:   c6 45 ab 00                     	mov byte ptr [ebp - 0x55], 0
0x80498bb:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x80498c2:   c6 45 a3 6d                     	mov byte ptr [ebp - 0x5d], 0x6d
0x80498c6:   c7 85 60 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xa0], 0xfffffffe
0x80498d0:   c7 45 9c de c1 93 91            	mov dword ptr [ebp - 0x64], 0x9193c1de
0x80498d7:   c7 45 98 07 00 00 00            	mov dword ptr [ebp - 0x68], 7
0x80498de:   c7 45 94 05 00 00 00            	mov dword ptr [ebp - 0x6c], 5
0x80498e5:   c7 85 5c ff ff ff 49 c8 e9 28   	mov dword ptr [ebp - 0xa4], 0x28e9c849
0x80498ef:   66 c7 85 5a ff ff ff 09 00      	mov word ptr [ebp - 0xa6], 9
0x80498f8:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x80498ff:   c7 85 54 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xac], 7
0x8049909:   b8 01 00 00 00                  	mov eax, 1
0x804990e:   99                              	cdq 
0x804990f:   f7 bd 60 ff ff ff               	idiv dword ptr [ebp - 0xa0]
0x8049915:   21 45 9c                        	and dword ptr [ebp - 0x64], eax
0x8049918:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804991b:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804991e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049921:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049924:   0f 93 c0                        	setae al
0x8049927:   0f b6 c0                        	movzx eax, al
0x804992a:   8b 95 60 ff ff ff               	mov edx, dword ptr [ebp - 0xa0]
0x8049930:   0f bf f2                        	movsx esi, dx
0x8049933:   99                              	cdq 
0x8049934:   f7 fe                           	idiv esi
0x8049936:   85 c0                           	test eax, eax
0x8049938:   75 09                           	jne 0x8049943 <func_1+0x15d>
0x804993a:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x8049941:   74 07                           	je 0x804994a <func_1+0x164>
0x8049943:   b8 01 00 00 00                  	mov eax, 1
0x8049948:   eb 05                           	jmp 0x804994f <func_1+0x169>
0x804994a:   b8 00 00 00 00                  	mov eax, 0
0x804994f:   89 c2                           	mov edx, eax
0x8049951:   c0 ea 07                        	shr dl, 7
0x8049954:   01 d0                           	add eax, edx
0x8049956:   d0 f8                           	sar al, 1
0x8049958:   3c 66                           	cmp al, 0x66
0x804995a:   77 06                           	ja 0x8049962 <func_1+0x17c>
0x804995c:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049960:   74 07                           	je 0x8049969 <func_1+0x183>
0x8049962:   b8 01 00 00 00                  	mov eax, 1
0x8049967:   eb 05                           	jmp 0x804996e <func_1+0x188>
0x8049969:   b8 00 00 00 00                  	mov eax, 0
0x804996e:   3d a0 00 00 00                  	cmp eax, 0xa0
0x8049973:   0f 95 c0                        	setne al
0x8049976:   0f b6 c0                        	movzx eax, al
0x8049979:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x804997c:   80 6d eb 01                     	sub byte ptr [ebp - 0x15], 1
0x8049980:   c7 45 f0 ea ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffea
0x8049987:   e9 93 03 00 00                  	jmp 0x8049d1f <func_1+0x539>
0x804998c:   c7 85 bc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x144], 0
0x8049996:   c7 85 b8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x148], 0xffffffff
0x80499a0:   c7 85 b4 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x14c], 8
0x80499aa:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x80499b1:   e9 c1 02 00 00                  	jmp 0x8049c77 <func_1+0x491>
0x80499b6:   c7 85 b0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x150], 1
0x80499c0:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x80499c7:   c6 85 af fe ff ff c2            	mov byte ptr [ebp - 0x151], 0xc2
0x80499ce:   66 c7 85 ac fe ff ff 00 00      	mov word ptr [ebp - 0x154], 0
0x80499d7:   66 c7 85 aa fe ff ff 6b dd      	mov word ptr [ebp - 0x156], 0xdd6b
0x80499e0:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x80499e4:   74 09                           	je 0x80499ef <func_1+0x209>
0x80499e6:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x80499ea:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x80499ed:   eb 07                           	jmp 0x80499f6 <func_1+0x210>
0x80499ef:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x80499f6:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499f9:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x80499ff:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x8049a05:   89 c1                           	mov ecx, eax
0x8049a07:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x8049a0d:   89 c2                           	mov edx, eax
0x8049a0f:   0f b6 c1                        	movzx eax, cl
0x8049a12:   f6 f2                           	div dl
0x8049a14:   0f b6 c4                        	movzx eax, ah
0x8049a17:   f7 d8                           	neg eax
0x8049a19:   89 c2                           	mov edx, eax
0x8049a1b:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x8049a21:   21 d0                           	and eax, edx
0x8049a23:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049a26:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049a2a:   74 5d                           	je 0x8049a89 <func_1+0x2a3>
0x8049a2c:   c6 85 a9 fe ff ff 00            	mov byte ptr [ebp - 0x157], 0
0x8049a33:   0f b6 85 a9 fe ff ff            	movzx eax, byte ptr [ebp - 0x157]
0x8049a3a:   83 e8 01                        	sub eax, 1
0x8049a3d:   88 85 a9 fe ff ff               	mov byte ptr [ebp - 0x157], al
0x8049a43:   c6 45 df e3                     	mov byte ptr [ebp - 0x21], 0xe3
0x8049a47:   0f b6 8d a9 fe ff ff            	movzx ecx, byte ptr [ebp - 0x157]
0x8049a4e:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x8049a54:   3d e3 00 00 00                  	cmp eax, 0xe3
0x8049a59:   0f 97 c0                        	seta al
0x8049a5c:   0f b6 c0                        	movzx eax, al
0x8049a5f:   0f be b5 7b ff ff ff            	movsx esi, byte ptr [ebp - 0x85]
0x8049a66:   ba 00 00 00 00                  	mov edx, 0
0x8049a6b:   f7 f6                           	div esi
0x8049a6d:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x8049a70:   39 c1                           	cmp ecx, eax
0x8049a72:   0f be 85 7b ff ff ff            	movsx eax, byte ptr [ebp - 0x85]
0x8049a79:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049a7c:   0f b7 85 ac fe ff ff            	movzx eax, word ptr [ebp - 0x154]
0x8049a83:   98                              	cwde 
0x8049a84:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049a87:   eb 16                           	jmp 0x8049a9f <func_1+0x2b9>
0x8049a89:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049a8f:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049a92:   83 bd b0 fe ff ff 00            	cmp dword ptr [ebp - 0x150], 0
0x8049a99:   0f 85 e4 01 00 00               	jne 0x8049c83 <func_1+0x49d>
0x8049a9f:   83 bd b8 fe ff ff 00            	cmp dword ptr [ebp - 0x148], 0
0x8049aa6:   74 05                           	je 0x8049aad <func_1+0x2c7>
0x8049aa8:   e9 5c fe ff ff                  	jmp 0x8049909 <func_1+0x123>
0x8049aad:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ab0:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x8049ab3:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049ab6:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049ab9:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049abc:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049abf:   31 45 9c                        	xor dword ptr [ebp - 0x64], eax
0x8049ac2:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x8049ac8:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x8049ace:   0f 94 c0                        	sete al
0x8049ad1:   0f b6 c0                        	movzx eax, al
0x8049ad4:   8b 95 74 ff ff ff               	mov edx, dword ptr [ebp - 0x8c]
0x8049ada:   0f b7 f2                        	movzx esi, dx
0x8049add:   99                              	cdq 
0x8049ade:   f7 fe                           	idiv esi
0x8049ae0:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049ae3:   0f 96 c0                        	setbe al
0x8049ae6:   0f b6 c0                        	movzx eax, al
0x8049ae9:   0f bf 8d ac fe ff ff            	movsx ecx, word ptr [ebp - 0x154]
0x8049af0:   99                              	cdq 
0x8049af1:   f7 f9                           	idiv ecx
0x8049af3:   89 d0                           	mov eax, edx
0x8049af5:   0f be d0                        	movsx edx, al
0x8049af8:   0f b7 85 ac fe ff ff            	movzx eax, word ptr [ebp - 0x154]
0x8049aff:   0f be c0                        	movsx eax, al
0x8049b02:   0f af c2                        	imul eax, edx
0x8049b05:   83 f8 05                        	cmp eax, 5
0x8049b08:   0f 97 c0                        	seta al
0x8049b0b:   0f b6 c0                        	movzx eax, al
0x8049b0e:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049b11:   83 7d d8 01                     	cmp dword ptr [ebp - 0x28], 1
0x8049b15:   0f 95 c0                        	setne al
0x8049b18:   0f b6 d0                        	movzx edx, al
0x8049b1b:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x8049b21:   0f be c0                        	movsx eax, al
0x8049b24:   89 c1                           	mov ecx, eax
0x8049b26:   d3 e2                           	shl edx, cl
0x8049b28:   89 d0                           	mov eax, edx
0x8049b2a:   0f b6 c0                        	movzx eax, al
0x8049b2d:   f6 75 df                        	div byte ptr [ebp - 0x21]
0x8049b30:   0f b6 c4                        	movzx eax, ah
0x8049b33:   0f b6 c0                        	movzx eax, al
0x8049b36:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049b39:   83 7d 94 05                     	cmp dword ptr [ebp - 0x6c], 5
0x8049b3d:   83 bd b0 fe ff ff 00            	cmp dword ptr [ebp - 0x150], 0
0x8049b44:   74 1a                           	je 0x8049b60 <func_1+0x37a>
0x8049b46:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049b49:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049b4c:   b8 01 00 00 00                  	mov eax, 1
0x8049b51:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x8049b54:   c7 45 8c c8 1d 27 b2            	mov dword ptr [ebp - 0x74], 0xb2271dc8
0x8049b5b:   e9 13 01 00 00                  	jmp 0x8049c73 <func_1+0x48d>
0x8049b60:   66 c7 85 a6 fe ff ff ff ff      	mov word ptr [ebp - 0x15a], 0xffff
0x8049b69:   c7 85 a0 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x160], 0xfffffff9
0x8049b73:   66 c7 85 9e fe ff ff 1f 8f      	mov word ptr [ebp - 0x162], 0x8f1f
0x8049b7c:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x8049b80:   74 79                           	je 0x8049bfb <func_1+0x415>
0x8049b82:   66 c7 85 96 fe ff ff 6f 41      	mov word ptr [ebp - 0x16a], 0x416f
0x8049b8b:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x8049b8f:   0f 85 f1 00 00 00               	jne 0x8049c86 <func_1+0x4a0>
0x8049b95:   c7 45 d4 d0 48 9f 82            	mov dword ptr [ebp - 0x2c], 0x829f48d0
0x8049b9c:   80 45 cf 01                     	add byte ptr [ebp - 0x31], 1
0x8049ba0:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x8049ba4:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049ba7:   0f b7 d8                        	movzx ebx, ax
0x8049baa:   0f b7 85 aa fe ff ff            	movzx eax, word ptr [ebp - 0x156]
0x8049bb1:   0f be c8                        	movsx ecx, al
0x8049bb4:   0f b7 85 a6 fe ff ff            	movzx eax, word ptr [ebp - 0x15a]
0x8049bbb:   0f be c0                        	movsx eax, al
0x8049bbe:   01 c8                           	add eax, ecx
0x8049bc0:   85 c0                           	test eax, eax
0x8049bc2:   75 06                           	jne 0x8049bca <func_1+0x3e4>
0x8049bc4:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049bc8:   74 07                           	je 0x8049bd1 <func_1+0x3eb>
0x8049bca:   b8 01 00 00 00                  	mov eax, 1
0x8049bcf:   eb 05                           	jmp 0x8049bd6 <func_1+0x3f0>
0x8049bd1:   b8 00 00 00 00                  	mov eax, 0
0x8049bd6:   0f b7 c0                        	movzx eax, ax
0x8049bd9:   89 c1                           	mov ecx, eax
0x8049bdb:   d3 fb                           	sar ebx, cl
0x8049bdd:   89 d8                           	mov eax, ebx
0x8049bdf:   3d c8 88 09 93                  	cmp eax, 0x930988c8
0x8049be4:   0f 96 c0                        	setbe al
0x8049be7:   0f b6 c0                        	movzx eax, al
0x8049bea:   39 c2                           	cmp edx, eax
0x8049bec:   0f 9c c0                        	setl al
0x8049bef:   0f b6 c0                        	movzx eax, al
0x8049bf2:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049bf5:   80 6d c7 01                     	sub byte ptr [ebp - 0x39], 1
0x8049bf9:   eb 78                           	jmp 0x8049c73 <func_1+0x48d>
0x8049bfb:   c7 45 88 fe ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffffe
0x8049c02:   c7 85 98 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x168], 0xfffffff8
0x8049c0c:   83 6d 88 01                     	sub dword ptr [ebp - 0x78], 1
0x8049c10:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049c17:   eb 0d                           	jmp 0x8049c26 <func_1+0x440>
0x8049c19:   83 bd 98 fe ff ff 00            	cmp dword ptr [ebp - 0x168], 0
0x8049c20:   75 0c                           	jne 0x8049c2e <func_1+0x448>
0x8049c22:   83 45 88 01                     	add dword ptr [ebp - 0x78], 1
0x8049c26:   83 7d 88 06                     	cmp dword ptr [ebp - 0x78], 6
0x8049c2a:   77 ed                           	ja 0x8049c19 <func_1+0x433>
0x8049c2c:   eb 01                           	jmp 0x8049c2f <func_1+0x449>
0x8049c2e:   90                              	nop 
0x8049c2f:   c7 45 8c 00 a7 c4 6a            	mov dword ptr [ebp - 0x74], 0x6ac4a700
0x8049c36:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c39:   83 e0 06                        	and eax, 6
0x8049c3c:   39 85 b8 fe ff ff               	cmp dword ptr [ebp - 0x148], eax
0x8049c42:   7f 10                           	jg 0x8049c54 <func_1+0x46e>
0x8049c44:   83 bd a0 fe ff ff 00            	cmp dword ptr [ebp - 0x160], 0
0x8049c4b:   74 07                           	je 0x8049c54 <func_1+0x46e>
0x8049c4d:   b8 01 00 00 00                  	mov eax, 1
0x8049c52:   eb 05                           	jmp 0x8049c59 <func_1+0x473>
0x8049c54:   b8 00 00 00 00                  	mov eax, 0
0x8049c59:   89 c2                           	mov edx, eax
0x8049c5b:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x8049c61:   29 c2                           	sub edx, eax
0x8049c63:   89 d0                           	mov eax, edx
0x8049c65:   66 89 85 9e fe ff ff            	mov word ptr [ebp - 0x162], ax
0x8049c6c:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x8049c73:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x8049c77:   83 7d 98 11                     	cmp dword ptr [ebp - 0x68], 0x11
0x8049c7b:   0f 8e 35 fd ff ff               	jle 0x80499b6 <func_1+0x1d0>
0x8049c81:   eb 04                           	jmp 0x8049c87 <func_1+0x4a1>
0x8049c83:   90                              	nop 
0x8049c84:   eb 01                           	jmp 0x8049c87 <func_1+0x4a1>
0x8049c86:   90                              	nop 
0x8049c87:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x8049c8d:   09 85 b4 fe ff ff               	or dword ptr [ebp - 0x14c], eax
0x8049c93:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049c99:   33 45 9c                        	xor eax, dword ptr [ebp - 0x64]
0x8049c9c:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049ca2:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ca5:   89 c3                           	mov ebx, eax
0x8049ca7:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049cad:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049cb0:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049cb3:   83 f8 04                        	cmp eax, 4
0x8049cb6:   0f 96 c0                        	setbe al
0x8049cb9:   0f b6 d0                        	movzx edx, al
0x8049cbc:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049cbf:   0f b7 c0                        	movzx eax, ax
0x8049cc2:   89 c1                           	mov ecx, eax
0x8049cc4:   d3 e2                           	shl edx, cl
0x8049cc6:   89 d0                           	mov eax, edx
0x8049cc8:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049ccb:   0f 97 c0                        	seta al
0x8049cce:   0f b6 c0                        	movzx eax, al
0x8049cd1:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049cd4:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049cd7:   29 c3                           	sub ebx, eax
0x8049cd9:   89 d8                           	mov eax, ebx
0x8049cdb:   0f bf d0                        	movsx edx, ax
0x8049cde:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ce1:   98                              	cwde 
0x8049ce2:   0f af c2                        	imul eax, edx
0x8049ce5:   85 c0                           	test eax, eax
0x8049ce7:   75 06                           	jne 0x8049cef <func_1+0x509>
0x8049ce9:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x8049ced:   74 07                           	je 0x8049cf6 <func_1+0x510>
0x8049cef:   b8 01 00 00 00                  	mov eax, 1
0x8049cf4:   eb 05                           	jmp 0x8049cfb <func_1+0x515>
0x8049cf6:   b8 00 00 00 00                  	mov eax, 0
0x8049cfb:   c0 e8 05                        	shr al, 5
0x8049cfe:   0f be c0                        	movsx eax, al
0x8049d01:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049d04:   0f be ca                        	movsx ecx, dl
0x8049d07:   99                              	cdq 
0x8049d08:   f7 f9                           	idiv ecx
0x8049d0a:   89 d0                           	mov eax, edx
0x8049d0c:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049d0f:   0f 95 c0                        	setne al
0x8049d12:   0f b6 c0                        	movzx eax, al
0x8049d15:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049d1b:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x8049d1f:   83 7d f0 36                     	cmp dword ptr [ebp - 0x10], 0x36
0x8049d23:   0f 86 63 fc ff ff               	jbe 0x804998c <func_1+0x1a6>
0x8049d29:   c7 85 68 ff ff ff b0 bb 00 00   	mov dword ptr [ebp - 0x98], 0xbbb0
0x8049d33:   83 bd 68 ff ff ff ff            	cmp dword ptr [ebp - 0x98], -1
0x8049d3a:   0f 84 56 05 00 00               	je 0x804a296 <func_1+0xab0>
0x8049d40:   c7 85 00 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x100], 0xffffffff
0x8049d4a:   66 c7 85 fe fe ff ff 68 08      	mov word ptr [ebp - 0x102], 0x868
0x8049d53:   c7 85 f8 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x108], 2
0x8049d5d:   c6 85 f7 fe ff ff ff            	mov byte ptr [ebp - 0x109], 0xff
0x8049d64:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049d6a:   89 c1                           	mov ecx, eax
0x8049d6c:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049d72:   0f bf d0                        	movsx edx, ax
0x8049d75:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049d7b:   98                              	cwde 
0x8049d7c:   29 c2                           	sub edx, eax
0x8049d7e:   89 d0                           	mov eax, edx
0x8049d80:   0f b7 c0                        	movzx eax, ax
0x8049d83:   3d a4 21 00 00                  	cmp eax, 0x21a4
0x8049d88:   0f 97 c0                        	seta al
0x8049d8b:   0f b6 c0                        	movzx eax, al
0x8049d8e:   0f af c1                        	imul eax, ecx
0x8049d91:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049d95:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049d98:   89 c2                           	mov edx, eax
0x8049d9a:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x8049da1:   29 c2                           	sub edx, eax
0x8049da3:   89 d0                           	mov eax, edx
0x8049da5:   89 c1                           	mov ecx, eax
0x8049da7:   66 0f be d1                     	movsx dx, cl
0x8049dab:   89 d0                           	mov eax, edx
0x8049dad:   01 c0                           	add eax, eax
0x8049daf:   01 d0                           	add eax, edx
0x8049db1:   c1 e0 02                        	shl eax, 2
0x8049db4:   01 d0                           	add eax, edx
0x8049db6:   66 c1 e8 08                     	shr ax, 8
0x8049dba:   89 c2                           	mov edx, eax
0x8049dbc:   c0 fa 02                        	sar dl, 2
0x8049dbf:   89 c8                           	mov eax, ecx
0x8049dc1:   c0 f8 07                        	sar al, 7
0x8049dc4:   29 c2                           	sub edx, eax
0x8049dc6:   89 d0                           	mov eax, edx
0x8049dc8:   ba 4f 00 00 00                  	mov edx, 0x4f
0x8049dcd:   0f af c2                        	imul eax, edx
0x8049dd0:   29 c1                           	sub ecx, eax
0x8049dd2:   89 c8                           	mov eax, ecx
0x8049dd4:   0f be c0                        	movsx eax, al
0x8049dd7:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049dda:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ddd:   0f be d8                        	movsx ebx, al
0x8049de0:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x8049de7:   74 22                           	je 0x8049e0b <func_1+0x625>
0x8049de9:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049def:   0f bf d0                        	movsx edx, ax
0x8049df2:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x8049df8:   98                              	cwde 
0x8049df9:   89 c1                           	mov ecx, eax
0x8049dfb:   d3 e2                           	shl edx, cl
0x8049dfd:   89 d0                           	mov eax, edx
0x8049dff:   83 f8 79                        	cmp eax, 0x79
0x8049e02:   75 07                           	jne 0x8049e0b <func_1+0x625>
0x8049e04:   b8 01 00 00 00                  	mov eax, 1
0x8049e09:   eb 05                           	jmp 0x8049e10 <func_1+0x62a>
0x8049e0b:   b8 00 00 00 00                  	mov eax, 0
0x8049e10:   98                              	cwde 
0x8049e11:   0f bf b5 fe fe ff ff            	movsx esi, word ptr [ebp - 0x102]
0x8049e18:   99                              	cdq 
0x8049e19:   f7 fe                           	idiv esi
0x8049e1b:   c1 e0 03                        	shl eax, 3
0x8049e1e:   0f be c0                        	movsx eax, al
0x8049e21:   01 d8                           	add eax, ebx
0x8049e23:   23 85 5c ff ff ff               	and eax, dword ptr [ebp - 0xa4]
0x8049e29:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049e2c:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8049e2f:   89 c2                           	mov edx, eax
0x8049e31:   0f b7 85 fe fe ff ff            	movzx eax, word ptr [ebp - 0x102]
0x8049e38:   31 d0                           	xor eax, edx
0x8049e3a:   0f bf d0                        	movsx edx, ax
0x8049e3d:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049e43:   98                              	cwde 
0x8049e44:   29 c2                           	sub edx, eax
0x8049e46:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x8049e4d:   39 c2                           	cmp edx, eax
0x8049e4f:   0f 94 c0                        	sete al
0x8049e52:   0f b6 c0                        	movzx eax, al
0x8049e55:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049e58:   80 7d c7 00                     	cmp byte ptr [ebp - 0x39], 0
0x8049e5c:   0f 84 2f 01 00 00               	je 0x8049f91 <func_1+0x7ab>
0x8049e62:   c6 85 da fe ff ff 0a            	mov byte ptr [ebp - 0x126], 0xa
0x8049e69:   c7 85 d4 fe ff ff 7a 76 43 f6   	mov dword ptr [ebp - 0x12c], 0xf643767a
0x8049e73:   c7 85 d0 fe ff ff 0d 6c 22 d0   	mov dword ptr [ebp - 0x130], 0xd0226c0d
0x8049e7d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e80:   0f b6 c0                        	movzx eax, al
0x8049e83:   c1 e0 04                        	shl eax, 4
0x8049e86:   23 45 d0                        	and eax, dword ptr [ebp - 0x30]
0x8049e89:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049e8c:   83 45 bc 01                     	add dword ptr [ebp - 0x44], 1
0x8049e90:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x8049e96:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x8049e99:   c7 45 f0 ea ff ff ff            	mov dword ptr [ebp - 0x10], 0xffffffea
0x8049ea0:   e9 d3 00 00 00                  	jmp 0x8049f78 <func_1+0x792>
0x8049ea5:   66 c7 85 ce fe ff ff 4b e1      	mov word ptr [ebp - 0x132], 0xe14b
0x8049eae:   c7 85 c8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x138], 1
0x8049eb8:   c7 85 c4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x13c], 0xffffffff
0x8049ec2:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049ec6:   74 3b                           	je 0x8049f03 <func_1+0x71d>
0x8049ec8:   66 83 7d c4 00                  	cmp word ptr [ebp - 0x3c], 0
0x8049ecd:   0f 95 c0                        	setne al
0x8049ed0:   0f b6 c0                        	movzx eax, al
0x8049ed3:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x8049ed9:   0f b6 85 da fe ff ff            	movzx eax, byte ptr [ebp - 0x126]
0x8049ee0:   39 85 c8 fe ff ff               	cmp dword ptr [ebp - 0x138], eax
0x8049ee6:   7e 07                           	jle 0x8049eef <func_1+0x709>
0x8049ee8:   b8 10 00 00 00                  	mov eax, 0x10
0x8049eed:   eb 05                           	jmp 0x8049ef4 <func_1+0x70e>
0x8049eef:   b8 00 00 00 00                  	mov eax, 0
0x8049ef4:   ba 00 00 00 00                  	mov edx, 0
0x8049ef9:   f7 b5 d4 fe ff ff               	div dword ptr [ebp - 0x12c]
0x8049eff:   89 d0                           	mov eax, edx
0x8049f01:   85 c0                           	test eax, eax
0x8049f03:   0f b7 95 ce fe ff ff            	movzx edx, word ptr [ebp - 0x132]
0x8049f0a:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049f10:   01 d0                           	add eax, edx
0x8049f12:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049f18:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x8049f1e:   ba 00 00 00 00                  	mov edx, 0
0x8049f23:   f7 b5 d4 fe ff ff               	div dword ptr [ebp - 0x12c]
0x8049f29:   89 d0                           	mov eax, edx
0x8049f2b:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049f31:   83 bd c4 fe ff ff 00            	cmp dword ptr [ebp - 0x13c], 0
0x8049f38:   74 0c                           	je 0x8049f46 <func_1+0x760>
0x8049f3a:   0f bf 85 fe fe ff ff            	movsx eax, word ptr [ebp - 0x102]
0x8049f41:   21 45 9c                        	and dword ptr [ebp - 0x64], eax
0x8049f44:   eb 2e                           	jmp 0x8049f74 <func_1+0x78e>
0x8049f46:   c7 85 c0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x140], 0
0x8049f50:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x8049f56:   c0 f8 04                        	sar al, 4
0x8049f59:   0f be c0                        	movsx eax, al
0x8049f5c:   c1 e0 07                        	shl eax, 7
0x8049f5f:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f62:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049f65:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x8049f68:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049f6b:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x8049f71:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x8049f74:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x8049f78:   83 7d f0 30                     	cmp dword ptr [ebp - 0x10], 0x30
0x8049f7c:   0f 87 23 ff ff ff               	ja 0x8049ea5 <func_1+0x6bf>
0x8049f82:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049f86:   0f 84 48 08 00 00               	je 0x804a7d4 <func_1+0xfee>
0x8049f8c:   e9 ef f9 ff ff                  	jmp 0x8049980 <func_1+0x19a>
0x8049f91:   c7 85 f0 fe ff ff 81 76 c4 df   	mov dword ptr [ebp - 0x110], 0xdfc47681
0x8049f9b:   c7 85 ec fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x114], 0
0x8049fa5:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049fa9:   0f 84 91 00 00 00               	je 0x804a040 <func_1+0x85a>
0x8049faf:   c7 85 dc fe ff ff cf d6 be 13   	mov dword ptr [ebp - 0x124], 0x13bed6cf
0x8049fb9:   c6 85 db fe ff ff 01            	mov byte ptr [ebp - 0x125], 1
0x8049fc0:   0f b6 85 db fe ff ff            	movzx eax, byte ptr [ebp - 0x125]
0x8049fc7:   83 c0 01                        	add eax, 1
0x8049fca:   88 85 db fe ff ff               	mov byte ptr [ebp - 0x125], al
0x8049fd0:   80 bd 7b ff ff ff 00            	cmp byte ptr [ebp - 0x85], 0
0x8049fd7:   75 50                           	jne 0x804a029 <func_1+0x843>
0x8049fd9:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049fdf:   0f b7 c0                        	movzx eax, ax
0x8049fe2:   f7 d8                           	neg eax
0x8049fe4:   35 4f ca 82 f8                  	xor eax, 0xf882ca4f
0x8049fe9:   89 c3                           	mov ebx, eax
0x8049feb:   b8 01 00 00 00                  	mov eax, 1
0x8049ff0:   0f be d0                        	movsx edx, al
0x8049ff3:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049ff7:   0f be c0                        	movsx eax, al
0x8049ffa:   89 c1                           	mov ecx, eax
0x8049ffc:   d3 e2                           	shl edx, cl
0x8049ffe:   89 d0                           	mov eax, edx
0x804a000:   0f b7 d0                        	movzx edx, ax
0x804a003:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804a009:   0f b7 c0                        	movzx eax, ax
0x804a00c:   0f af c2                        	imul eax, edx
0x804a00f:   3d 91 20 00 00                  	cmp eax, 0x2091
0x804a014:   0f 9f c0                        	setg al
0x804a017:   0f b6 c0                        	movzx eax, al
0x804a01a:   09 d8                           	or eax, ebx
0x804a01c:   85 c0                           	test eax, eax
0x804a01e:   75 09                           	jne 0x804a029 <func_1+0x843>
0x804a020:   80 bd 72 ff ff ff 00            	cmp byte ptr [ebp - 0x8e], 0
0x804a027:   74 07                           	je 0x804a030 <func_1+0x84a>
0x804a029:   b8 01 00 00 00                  	mov eax, 1
0x804a02e:   eb 05                           	jmp 0x804a035 <func_1+0x84f>
0x804a030:   b8 00 00 00 00                  	mov eax, 0
0x804a035:   89 85 f8 fe ff ff               	mov dword ptr [ebp - 0x108], eax
0x804a03b:   e9 39 02 00 00                  	jmp 0x804a279 <func_1+0xa93>
0x804a040:   c7 85 e8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x118], 0xffffffff
0x804a04a:   c7 85 e4 fe ff ff a7 4b d2 b4   	mov dword ptr [ebp - 0x11c], 0xb4d24ba7
0x804a054:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a058:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a05b:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x804a05e:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a061:   0b 85 7c ff ff ff               	or eax, dword ptr [ebp - 0x84]
0x804a067:   85 c0                           	test eax, eax
0x804a069:   0f 84 0a 01 00 00               	je 0x804a179 <func_1+0x993>
0x804a06f:   c6 85 e3 fe ff ff 01            	mov byte ptr [ebp - 0x11d], 1
0x804a076:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a07a:   0f 85 86 00 00 00               	jne 0x804a106 <func_1+0x920>
0x804a080:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a087:   74 26                           	je 0x804a0af <func_1+0x8c9>
0x804a089:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a08d:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x804a090:   0f b6 4d df                     	movzx ecx, byte ptr [ebp - 0x21]
0x804a094:   0f b6 85 f7 fe ff ff            	movzx eax, byte ptr [ebp - 0x109]
0x804a09b:   83 f0 75                        	xor eax, 0x75
0x804a09e:   0f be c0                        	movsx eax, al
0x804a0a1:   8b 95 e8 fe ff ff               	mov edx, dword ptr [ebp - 0x118]
0x804a0a7:   0f be f2                        	movsx esi, dl
0x804a0aa:   99                              	cdq 
0x804a0ab:   f7 fe                           	idiv esi
0x804a0ad:   39 c1                           	cmp ecx, eax
0x804a0af:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a0b5:   0f be c8                        	movsx ecx, al
0x804a0b8:   b8 02 00 00 00                  	mov eax, 2
0x804a0bd:   99                              	cdq 
0x804a0be:   f7 f9                           	idiv ecx
0x804a0c0:   89 d0                           	mov eax, edx
0x804a0c2:   89 c2                           	mov edx, eax
0x804a0c4:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a0ca:   09 d0                           	or eax, edx
0x804a0cc:   66 83 f8 fc                     	cmp ax, -4
0x804a0d0:   0f 93 c0                        	setae al
0x804a0d3:   0f b6 d0                        	movzx edx, al
0x804a0d6:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a0dd:   66 39 c2                        	cmp dx, ax
0x804a0e0:   0f 96 c0                        	setbe al
0x804a0e3:   0f b6 c0                        	movzx eax, al
0x804a0e6:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x804a0ec:   0f 97 c0                        	seta al
0x804a0ef:   0f b6 d0                        	movzx edx, al
0x804a0f2:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a0f9:   01 d0                           	add eax, edx
0x804a0fb:   33 85 f0 fe ff ff               	xor eax, dword ptr [ebp - 0x110]
0x804a101:   83 f8 fe                        	cmp eax, -2
0x804a104:   7d 07                           	jge 0x804a10d <func_1+0x927>
0x804a106:   b8 01 00 00 00                  	mov eax, 1
0x804a10b:   eb 05                           	jmp 0x804a112 <func_1+0x92c>
0x804a10d:   b8 00 00 00 00                  	mov eax, 0
0x804a112:   89 c2                           	mov edx, eax
0x804a114:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a117:   29 c2                           	sub edx, eax
0x804a119:   89 d0                           	mov eax, edx
0x804a11b:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a11e:   0f b6 45 cf                     	movzx eax, byte ptr [ebp - 0x31]
0x804a122:   3c ff                           	cmp al, 0xff
0x804a124:   0f 93 c0                        	setae al
0x804a127:   0f b6 c0                        	movzx eax, al
0x804a12a:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a12d:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a131:   be 00 00 00 00                  	mov esi, 0
0x804a136:   ba 00 00 00 00                  	mov edx, 0
0x804a13b:   66 f7 f6                        	div si
0x804a13e:   0f b6 d0                        	movzx edx, al
0x804a141:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a144:   0f b6 c0                        	movzx eax, al
0x804a147:   89 c1                           	mov ecx, eax
0x804a149:   d3 e2                           	shl edx, cl
0x804a14b:   89 d0                           	mov eax, edx
0x804a14d:   31 85 ec fe ff ff               	xor dword ptr [ebp - 0x114], eax
0x804a153:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a157:   75 09                           	jne 0x804a162 <func_1+0x97c>
0x804a159:   80 bd 7b ff ff ff 00            	cmp byte ptr [ebp - 0x85], 0
0x804a160:   74 07                           	je 0x804a169 <func_1+0x983>
0x804a162:   b8 01 00 00 00                  	mov eax, 1
0x804a167:   eb 05                           	jmp 0x804a16e <func_1+0x988>
0x804a169:   b8 00 00 00 00                  	mov eax, 0
0x804a16e:   21 85 e4 fe ff ff               	and dword ptr [ebp - 0x11c], eax
0x804a174:   e9 00 01 00 00                  	jmp 0x804a279 <func_1+0xa93>
0x804a179:   c7 45 d8 fd ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffffd
0x804a180:   eb 12                           	jmp 0x804a194 <func_1+0x9ae>
0x804a182:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a189:   74 05                           	je 0x804a190 <func_1+0x9aa>
0x804a18b:   e9 79 f7 ff ff                  	jmp 0x8049909 <func_1+0x123>
0x804a190:   83 45 d8 01                     	add dword ptr [ebp - 0x28], 1
0x804a194:   83 7d d8 19                     	cmp dword ptr [ebp - 0x28], 0x19
0x804a198:   74 e8                           	je 0x804a182 <func_1+0x99c>
0x804a19a:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a19e:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a1a2:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a1a6:   0f bf 75 ba                     	movsx esi, word ptr [ebp - 0x46]
0x804a1aa:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a1ae:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a1b4:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a1b8:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a1be:   0f be bd 72 ff ff ff            	movsx edi, byte ptr [ebp - 0x8e]
0x804a1c5:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a1cb:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a1cf:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a1d5:   0f be bd 73 ff ff ff            	movsx edi, byte ptr [ebp - 0x8d]
0x804a1dc:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a1e2:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a1e9:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a1ef:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a1f3:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x804a1f7:   50                              	push eax
0x804a1f8:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a1fb:   52                              	push edx
0x804a1fc:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a1ff:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a205:   51                              	push ecx
0x804a206:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a209:   56                              	push esi
0x804a20a:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a20d:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a210:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a216:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a21c:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a222:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a228:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a22e:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a231:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a237:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a23d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a240:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a243:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a246:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a24c:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a252:   57                              	push edi
0x804a253:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a256:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a259:   53                              	push ebx
0x804a25a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a25d:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a260:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a266:   e8 bb f3 ff ff                  	call 0x8049626 <set_var>
0x804a26b:   83 c4 78                        	add esp, 0x78
0x804a26e:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a274:   e9 35 06 00 00                  	jmp 0x804a8ae <func_1+0x10c8>
0x804a279:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a27d:   83 c0 01                        	add eax, 1
0x804a280:   88 45 b3                        	mov byte ptr [ebp - 0x4d], al
0x804a283:   0f be 85 f7 fe ff ff            	movsx eax, byte ptr [ebp - 0x109]
0x804a28a:   21 45 98                        	and dword ptr [ebp - 0x68], eax
0x804a28d:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x804a291:   e9 3e 05 00 00                  	jmp 0x804a7d4 <func_1+0xfee>
0x804a296:   c6 85 53 ff ff ff 00            	mov byte ptr [ebp - 0xad], 0
0x804a29d:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x804a2a4:   c7 85 4c ff ff ff 8e a8 6e 09   	mov dword ptr [ebp - 0xb4], 0x96ea88e
0x804a2ae:   c7 85 48 ff ff ff e0 fd a4 05   	mov dword ptr [ebp - 0xb8], 0x5a4fde0
0x804a2b8:   c7 85 44 ff ff ff af a1 31 1b   	mov dword ptr [ebp - 0xbc], 0x1b31a1af
0x804a2c2:   c7 85 40 ff ff ff 9a 2a 74 68   	mov dword ptr [ebp - 0xc0], 0x68742a9a
0x804a2cc:   c7 85 3c ff ff ff 0a 16 ec df   	mov dword ptr [ebp - 0xc4], 0xdfec160a
0x804a2d6:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a2da:   74 1f                           	je 0x804a2fb <func_1+0xb15>
0x804a2dc:   66 c7 85 06 ff ff ff 00 00      	mov word ptr [ebp - 0xfa], 0
0x804a2e5:   83 4d ec 01                     	or dword ptr [ebp - 0x14], 1
0x804a2e9:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a2ec:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a2ef:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a2f6:   e9 c8 04 00 00                  	jmp 0x804a7c3 <func_1+0xfdd>
0x804a2fb:   66 c7 85 3a ff ff ff 01 00      	mov word ptr [ebp - 0xc6], 1
0x804a304:   c7 45 80 a8 9b da cc            	mov dword ptr [ebp - 0x80], 0xccda9ba8
0x804a30b:   c7 85 34 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xcc], 0
0x804a315:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a31c:   0f 84 c4 03 00 00               	je 0x804a6e6 <func_1+0xf00>
0x804a322:   c7 85 30 ff ff ff 4c b0 b3 ac   	mov dword ptr [ebp - 0xd0], 0xacb3b04c
0x804a32c:   c7 85 2c ff ff ff ae 44 fd 1f   	mov dword ptr [ebp - 0xd4], 0x1ffd44ae
0x804a336:   c7 85 28 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffffb
0x804a340:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a343:   3b 45 b4                        	cmp eax, dword ptr [ebp - 0x4c]
0x804a346:   0f 96 c0                        	setbe al
0x804a349:   0f b6 d0                        	movzx edx, al
0x804a34c:   0f be 85 53 ff ff ff            	movsx eax, byte ptr [ebp - 0xad]
0x804a353:   21 d0                           	and eax, edx
0x804a355:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a358:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a35c:   0f 84 e9 00 00 00               	je 0x804a44b <func_1+0xc65>
0x804a362:   c7 85 20 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe0], 1
0x804a36c:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a373:   e9 c4 00 00 00                  	jmp 0x804a43c <func_1+0xc56>
0x804a378:   c6 85 1f ff ff ff 01            	mov byte ptr [ebp - 0xe1], 1
0x804a37f:   c7 85 18 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xe8], 2
0x804a389:   0f be 85 53 ff ff ff            	movsx eax, byte ptr [ebp - 0xad]
0x804a390:   83 e0 01                        	and eax, 1
0x804a393:   85 c0                           	test eax, eax
0x804a395:   74 11                           	je 0x804a3a8 <func_1+0xbc2>
0x804a397:   66 83 bd 3a ff ff ff 00         	cmp word ptr [ebp - 0xc6], 0
0x804a39f:   74 07                           	je 0x804a3a8 <func_1+0xbc2>
0x804a3a1:   b8 01 00 00 00                  	mov eax, 1
0x804a3a6:   eb 05                           	jmp 0x804a3ad <func_1+0xbc7>
0x804a3a8:   b8 00 00 00 00                  	mov eax, 0
0x804a3ad:   0f be c0                        	movsx eax, al
0x804a3b0:   6b c0 58                        	imul eax, eax, 0x58
0x804a3b3:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a3b6:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x804a3ba:   74 07                           	je 0x804a3c3 <func_1+0xbdd>
0x804a3bc:   b8 01 00 00 00                  	mov eax, 1
0x804a3c1:   eb 05                           	jmp 0x804a3c8 <func_1+0xbe2>
0x804a3c3:   b8 00 00 00 00                  	mov eax, 0
0x804a3c8:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x804a3cc:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804a3d3:   0f b6 c0                        	movzx eax, al
0x804a3d6:   66 09 45 c4                     	or word ptr [ebp - 0x3c], ax
0x804a3da:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x804a3de:   0f 95 c0                        	setne al
0x804a3e1:   0f b6 c0                        	movzx eax, al
0x804a3e4:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a3ea:   7c 04                           	jl 0x804a3f0 <func_1+0xc0a>
0x804a3ec:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a3f0:   83 7d ec ff                     	cmp dword ptr [ebp - 0x14], -1
0x804a3f4:   0f 94 c0                        	sete al
0x804a3f7:   89 c2                           	mov edx, eax
0x804a3f9:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a3fc:   31 d0                           	xor eax, edx
0x804a3fe:   66 0f be d0                     	movsx dx, al
0x804a402:   6b d2 67                        	imul edx, edx, 0x67
0x804a405:   66 c1 ea 08                     	shr dx, 8
0x804a409:   d0 fa                           	sar dl, 1
0x804a40b:   c0 f8 07                        	sar al, 7
0x804a40e:   29 d0                           	sub eax, edx
0x804a410:   0f be c0                        	movsx eax, al
0x804a413:   6b c0 2d                        	imul eax, eax, 0x2d
0x804a416:   09 85 18 ff ff ff               	or dword ptr [ebp - 0xe8], eax
0x804a41c:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a41f:   0f b7 d0                        	movzx edx, ax
0x804a422:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a425:   0f b7 c0                        	movzx eax, ax
0x804a428:   0f af c2                        	imul eax, edx
0x804a42b:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a431:   c7 45 94 56 0d 87 09            	mov dword ptr [ebp - 0x6c], 0x9870d56
0x804a438:   83 45 90 01                     	add dword ptr [ebp - 0x70], 1
0x804a43c:   83 7d 90 35                     	cmp dword ptr [ebp - 0x70], 0x35
0x804a440:   0f 87 32 ff ff ff               	ja 0x804a378 <func_1+0xb92>
0x804a446:   e9 88 00 00 00                  	jmp 0x804a4d3 <func_1+0xced>
0x804a44b:   c7 85 24 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xdc], 0xffffffff
0x804a455:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a45c:   75 24                           	jne 0x804a482 <func_1+0xc9c>
0x804a45e:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a464:   89 c2                           	mov edx, eax
0x804a466:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a469:   01 d0                           	add eax, edx
0x804a46b:   0f be c0                        	movsx eax, al
0x804a46e:   89 c2                           	mov edx, eax
0x804a470:   c1 e0 07                        	shl eax, 7
0x804a473:   29 c2                           	sub edx, eax
0x804a475:   89 d0                           	mov eax, edx
0x804a477:   85 c0                           	test eax, eax
0x804a479:   75 07                           	jne 0x804a482 <func_1+0xc9c>
0x804a47b:   b8 01 00 00 00                  	mov eax, 1
0x804a480:   eb 05                           	jmp 0x804a487 <func_1+0xca1>
0x804a482:   b8 00 00 00 00                  	mov eax, 0
0x804a487:   0f be d0                        	movsx edx, al
0x804a48a:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a490:   0f be c0                        	movsx eax, al
0x804a493:   29 c2                           	sub edx, eax
0x804a495:   89 d0                           	mov eax, edx
0x804a497:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a49a:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a4a0:   0f b7 c0                        	movzx eax, ax
0x804a4a3:   8b 95 24 ff ff ff               	mov edx, dword ptr [ebp - 0xdc]
0x804a4a9:   0f b7 ca                        	movzx ecx, dx
0x804a4ac:   99                              	cdq 
0x804a4ad:   f7 f9                           	idiv ecx
0x804a4af:   89 d0                           	mov eax, edx
0x804a4b1:   0b 85 30 ff ff ff               	or eax, dword ptr [ebp - 0xd0]
0x804a4b7:   85 c0                           	test eax, eax
0x804a4b9:   75 09                           	jne 0x804a4c4 <func_1+0xcde>
0x804a4bb:   80 bd 53 ff ff ff 00            	cmp byte ptr [ebp - 0xad], 0
0x804a4c2:   74 07                           	je 0x804a4cb <func_1+0xce5>
0x804a4c4:   b8 01 00 00 00                  	mov eax, 1
0x804a4c9:   eb 05                           	jmp 0x804a4d0 <func_1+0xcea>
0x804a4cb:   b8 00 00 00 00                  	mov eax, 0
0x804a4d0:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a4d3:   c7 45 b4 f7 ff ff ff            	mov dword ptr [ebp - 0x4c], 0xfffffff7
0x804a4da:   83 7d b4 18                     	cmp dword ptr [ebp - 0x4c], 0x18
0x804a4de:   0f 87 e0 00 00 00               	ja 0x804a5c4 <func_1+0xdde>
0x804a4e4:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a4e8:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a4ec:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a4f0:   0f bf 75 ba                     	movsx esi, word ptr [ebp - 0x46]
0x804a4f4:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a4f8:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a4fe:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a502:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a508:   0f be bd 72 ff ff ff            	movsx edi, byte ptr [ebp - 0x8e]
0x804a50f:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a515:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a519:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a51f:   0f be bd 73 ff ff ff            	movsx edi, byte ptr [ebp - 0x8d]
0x804a526:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a52c:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a533:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a539:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a53d:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x804a541:   50                              	push eax
0x804a542:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a545:   52                              	push edx
0x804a546:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a549:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a54f:   51                              	push ecx
0x804a550:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a553:   56                              	push esi
0x804a554:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a557:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a55a:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a560:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a566:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a56c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a572:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a578:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a57b:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a581:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a587:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a58a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a58d:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a590:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a596:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a59c:   57                              	push edi
0x804a59d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a5a0:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a5a3:   53                              	push ebx
0x804a5a4:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5a7:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5aa:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a5b0:   e8 71 f0 ff ff                  	call 0x8049626 <set_var>
0x804a5b5:   83 c4 78                        	add esp, 0x78
0x804a5b8:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x804a5bf:   e9 ea 02 00 00                  	jmp 0x804a8ae <func_1+0x10c8>
0x804a5c4:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a5cb:   74 3a                           	je 0x804a607 <func_1+0xe21>
0x804a5cd:   c7 85 10 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf0], 1
0x804a5d7:   c7 85 0c ff ff ff b7 b4 cc 69   	mov dword ptr [ebp - 0xf4], 0x69ccb4b7
0x804a5e1:   c7 85 08 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xf8], 0xfffffffe
0x804a5eb:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a5ee:   33 85 10 ff ff ff               	xor eax, dword ptr [ebp - 0xf0]
0x804a5f4:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a5f7:   83 85 0c ff ff ff 01            	add dword ptr [ebp - 0xf4], 1
0x804a5fe:   80 6d ab 01                     	sub byte ptr [ebp - 0x55], 1
0x804a602:   e9 ce 00 00 00                  	jmp 0x804a6d5 <func_1+0xeef>
0x804a607:   66 c7 85 16 ff ff ff 04 55      	mov word ptr [ebp - 0xea], 0x5504
0x804a610:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804a614:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x804a61b:   0f 94 c0                        	sete al
0x804a61e:   0f b6 d0                        	movzx edx, al
0x804a621:   0f bf 85 3a ff ff ff            	movsx eax, word ptr [ebp - 0xc6]
0x804a628:   39 c2                           	cmp edx, eax
0x804a62a:   74 06                           	je 0x804a632 <func_1+0xe4c>
0x804a62c:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a630:   74 07                           	je 0x804a639 <func_1+0xe53>
0x804a632:   b8 01 00 00 00                  	mov eax, 1
0x804a637:   eb 05                           	jmp 0x804a63e <func_1+0xe58>
0x804a639:   b8 00 00 00 00                  	mov eax, 0
0x804a63e:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a641:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a648:   74 2c                           	je 0x804a676 <func_1+0xe90>
0x804a64a:   81 65 c8 a2 da 53 19            	and dword ptr [ebp - 0x38], 0x1953daa2
0x804a651:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a654:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a657:   0f bf 85 3a ff ff ff            	movsx eax, word ptr [ebp - 0xc6]
0x804a65e:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a661:   0f be 85 72 ff ff ff            	movsx eax, byte ptr [ebp - 0x8e]
0x804a668:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a66b:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a671:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a674:   eb 5f                           	jmp 0x804a6d5 <func_1+0xeef>
0x804a676:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a67a:   74 02                           	je 0x804a67e <func_1+0xe98>
0x804a67c:   eb 92                           	jmp 0x804a610 <func_1+0xe2a>
0x804a67e:   c7 45 b4 00 00 00 00            	mov dword ptr [ebp - 0x4c], 0
0x804a685:   0f b6 4d cf                     	movzx ecx, byte ptr [ebp - 0x31]
0x804a689:   ba 1f b6 be 0d                  	mov edx, 0xdbeb61f
0x804a68e:   89 c8                           	mov eax, ecx
0x804a690:   f7 ea                           	imul edx
0x804a692:   c1 fa 05                        	sar edx, 5
0x804a695:   89 c8                           	mov eax, ecx
0x804a697:   c1 f8 1f                        	sar eax, 0x1f
0x804a69a:   29 c2                           	sub edx, eax
0x804a69c:   89 d0                           	mov eax, edx
0x804a69e:   69 c0 54 02 00 00               	imul eax, eax, 0x254
0x804a6a4:   29 c1                           	sub ecx, eax
0x804a6a6:   89 c8                           	mov eax, ecx
0x804a6a8:   0f bf d0                        	movsx edx, ax
0x804a6ab:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a6b1:   98                              	cwde 
0x804a6b2:   89 c1                           	mov ecx, eax
0x804a6b4:   d3 e2                           	shl edx, cl
0x804a6b6:   89 d0                           	mov eax, edx
0x804a6b8:   8b 75 f0                        	mov esi, dword ptr [ebp - 0x10]
0x804a6bb:   99                              	cdq 
0x804a6bc:   f7 fe                           	idiv esi
0x804a6be:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a6c4:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a6ca:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a6cd:   b8 00 00 00 00                  	mov eax, 0
0x804a6d2:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x804a6d5:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x804a6d9:   b8 67 ff ff ff                  	mov eax, 0xffffff67
0x804a6de:   31 45 80                        	xor dword ptr [ebp - 0x80], eax
0x804a6e1:   e9 dd 00 00 00                  	jmp 0x804a7c3 <func_1+0xfdd>
0x804a6e6:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a6ea:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a6ee:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a6f2:   0f bf 75 ba                     	movsx esi, word ptr [ebp - 0x46]
0x804a6f6:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a6fa:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a700:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a704:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a70a:   0f be bd 72 ff ff ff            	movsx edi, byte ptr [ebp - 0x8e]
0x804a711:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a717:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a71b:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a721:   0f be bd 73 ff ff ff            	movsx edi, byte ptr [ebp - 0x8d]
0x804a728:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a72e:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a735:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a73b:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a73f:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x804a743:   50                              	push eax
0x804a744:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a747:   52                              	push edx
0x804a748:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a74b:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a751:   51                              	push ecx
0x804a752:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a755:   56                              	push esi
0x804a756:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a759:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a75c:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a762:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a768:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a76e:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a774:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a77a:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a77d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a783:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a789:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a78c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a78f:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a792:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a798:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a79e:   57                              	push edi
0x804a79f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a7a2:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a7a5:   53                              	push ebx
0x804a7a6:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a7a9:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a7ac:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a7b2:   e8 6f ee ff ff                  	call 0x8049626 <set_var>
0x804a7b7:   83 c4 78                        	add esp, 0x78
0x804a7ba:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804a7be:   e9 eb 00 00 00                  	jmp 0x804a8ae <func_1+0x10c8>
0x804a7c3:   c7 45 d4 18 dd c5 c7            	mov dword ptr [ebp - 0x2c], 0xc7c5dd18
0x804a7ca:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a7ce:   83 c0 01                        	add eax, 1
0x804a7d1:   88 45 a3                        	mov byte ptr [ebp - 0x5d], al
0x804a7d4:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x804a7d8:   0f b6 55 ab                     	movzx edx, byte ptr [ebp - 0x55]
0x804a7dc:   0f b6 4d b3                     	movzx ecx, byte ptr [ebp - 0x4d]
0x804a7e0:   0f bf 75 ba                     	movsx esi, word ptr [ebp - 0x46]
0x804a7e4:   0f b7 7d c4                     	movzx edi, word ptr [ebp - 0x3c]
0x804a7e8:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a7ee:   0f b6 5d c7                     	movzx ebx, byte ptr [ebp - 0x39]
0x804a7f2:   89 9d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ebx
0x804a7f8:   0f be bd 72 ff ff ff            	movsx edi, byte ptr [ebp - 0x8e]
0x804a7ff:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a805:   0f b6 5d cf                     	movzx ebx, byte ptr [ebp - 0x31]
0x804a809:   89 9d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ebx
0x804a80f:   0f be bd 73 ff ff ff            	movsx edi, byte ptr [ebp - 0x8d]
0x804a816:   89 bd 80 fe ff ff               	mov dword ptr [ebp - 0x180], edi
0x804a81c:   0f be 9d 7b ff ff ff            	movsx ebx, byte ptr [ebp - 0x85]
0x804a823:   89 9d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ebx
0x804a829:   0f b6 7d df                     	movzx edi, byte ptr [ebp - 0x21]
0x804a82d:   0f b6 5d eb                     	movzx ebx, byte ptr [ebp - 0x15]
0x804a831:   50                              	push eax
0x804a832:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a835:   52                              	push edx
0x804a836:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a839:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a83f:   51                              	push ecx
0x804a840:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a843:   56                              	push esi
0x804a844:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a847:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a84a:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a850:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a856:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a85c:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a862:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a868:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a86b:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a871:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a877:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a87a:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a87d:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a880:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a886:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a88c:   57                              	push edi
0x804a88d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a890:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a893:   53                              	push ebx
0x804a894:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a897:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a89a:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a8a0:   e8 81 ed ff ff                  	call 0x8049626 <set_var>
0x804a8a5:   83 c4 78                        	add esp, 0x78
0x804a8a8:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a8ae:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a8b1:   5b                              	pop ebx
0x804a8b2:   5e                              	pop esi
0x804a8b3:   5f                              	pop edi
0x804a8b4:   5d                              	pop ebp
0x804a8b5:   c3                              	ret 
; function: main at 0x804a8b6 -- 0x804acbe
0x804a8b6:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a8ba:   83 e4 f0                        	and esp, 0xfffffff0
0x804a8bd:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a8c0:   55                              	push ebp
0x804a8c1:   89 e5                           	mov ebp, esp
0x804a8c3:   53                              	push ebx
0x804a8c4:   51                              	push ecx
0x804a8c5:   83 ec 10                        	sub esp, 0x10
0x804a8c8:   e8 c3 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a8cd:   81 c3 33 27 00 00               	add ebx, 0x2733
0x804a8d3:   89 c8                           	mov eax, ecx
0x804a8d5:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a8dc:   83 38 02                        	cmp dword ptr [eax], 2
0x804a8df:   75 26                           	jne 0x804a907 <main+0x51>
0x804a8e1:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a8e4:   83 c0 04                        	add eax, 4
0x804a8e7:   8b 00                           	mov eax, dword ptr [eax]
0x804a8e9:   83 ec 08                        	sub esp, 8
0x804a8ec:   8d 93 a8 dd ff ff               	lea edx, [ebx - 0x2258]
0x804a8f2:   52                              	push edx
0x804a8f3:   50                              	push eax
0x804a8f4:   e8 07 da ff ff                  	call 0x8048300 <strcmp>
0x804a8f9:   83 c4 10                        	add esp, 0x10
0x804a8fc:   85 c0                           	test eax, eax
0x804a8fe:   75 07                           	jne 0x804a907 <main+0x51>
0x804a900:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a907:   e8 4a db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a90c:   e8 5a eb ff ff                  	call 0x804946b <crc32_gentab>
0x804a911:   e8 d0 ee ff ff                  	call 0x80497e6 <func_1>
0x804a916:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a91c:   83 ec 04                        	sub esp, 4
0x804a91f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a922:   8d 93 aa dd ff ff               	lea edx, [ebx - 0x2256]
0x804a928:   52                              	push edx
0x804a929:   50                              	push eax
0x804a92a:   e8 48 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a92f:   83 c4 10                        	add esp, 0x10
0x804a932:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a938:   83 ec 04                        	sub esp, 4
0x804a93b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a93e:   8d 93 af dd ff ff               	lea edx, [ebx - 0x2251]
0x804a944:   52                              	push edx
0x804a945:   50                              	push eax
0x804a946:   e8 2c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a94b:   83 c4 10                        	add esp, 0x10
0x804a94e:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a954:   83 ec 04                        	sub esp, 4
0x804a957:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a95a:   8d 93 b4 dd ff ff               	lea edx, [ebx - 0x224c]
0x804a960:   52                              	push edx
0x804a961:   50                              	push eax
0x804a962:   e8 10 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a967:   83 c4 10                        	add esp, 0x10
0x804a96a:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804a971:   0f b6 c0                        	movzx eax, al
0x804a974:   83 ec 04                        	sub esp, 4
0x804a977:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a97a:   8d 93 b9 dd ff ff               	lea edx, [ebx - 0x2247]
0x804a980:   52                              	push edx
0x804a981:   50                              	push eax
0x804a982:   e8 f0 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a987:   83 c4 10                        	add esp, 0x10
0x804a98a:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a990:   83 ec 04                        	sub esp, 4
0x804a993:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a996:   8d 93 be dd ff ff               	lea edx, [ebx - 0x2242]
0x804a99c:   52                              	push edx
0x804a99d:   50                              	push eax
0x804a99e:   e8 d4 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9a3:   83 c4 10                        	add esp, 0x10
0x804a9a6:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a9ac:   83 ec 04                        	sub esp, 4
0x804a9af:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9b2:   8d 93 c3 dd ff ff               	lea edx, [ebx - 0x223d]
0x804a9b8:   52                              	push edx
0x804a9b9:   50                              	push eax
0x804a9ba:   e8 b8 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9bf:   83 c4 10                        	add esp, 0x10
0x804a9c2:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a9c9:   0f b6 c0                        	movzx eax, al
0x804a9cc:   83 ec 04                        	sub esp, 4
0x804a9cf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9d2:   8d 93 c8 dd ff ff               	lea edx, [ebx - 0x2238]
0x804a9d8:   52                              	push edx
0x804a9d9:   50                              	push eax
0x804a9da:   e8 98 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9df:   83 c4 10                        	add esp, 0x10
0x804a9e2:   0f b6 83 3d 00 00 00            	movzx eax, byte ptr [ebx + 0x3d]
0x804a9e9:   0f be c0                        	movsx eax, al
0x804a9ec:   83 ec 04                        	sub esp, 4
0x804a9ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9f2:   8d 93 cd dd ff ff               	lea edx, [ebx - 0x2233]
0x804a9f8:   52                              	push edx
0x804a9f9:   50                              	push eax
0x804a9fa:   e8 78 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ff:   83 c4 10                        	add esp, 0x10
0x804aa02:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aa08:   89 c2                           	mov edx, eax
0x804aa0a:   83 ec 04                        	sub esp, 4
0x804aa0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa10:   8d 83 d2 dd ff ff               	lea eax, [ebx - 0x222e]
0x804aa16:   50                              	push eax
0x804aa17:   52                              	push edx
0x804aa18:   e8 5a eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa1d:   83 c4 10                        	add esp, 0x10
0x804aa20:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aa26:   83 ec 04                        	sub esp, 4
0x804aa29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa2c:   8d 93 d7 dd ff ff               	lea edx, [ebx - 0x2229]
0x804aa32:   52                              	push edx
0x804aa33:   50                              	push eax
0x804aa34:   e8 3e eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa39:   83 c4 10                        	add esp, 0x10
0x804aa3c:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804aa42:   89 c2                           	mov edx, eax
0x804aa44:   83 ec 04                        	sub esp, 4
0x804aa47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa4a:   8d 83 dc dd ff ff               	lea eax, [ebx - 0x2224]
0x804aa50:   50                              	push eax
0x804aa51:   52                              	push edx
0x804aa52:   e8 20 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa57:   83 c4 10                        	add esp, 0x10
0x804aa5a:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804aa60:   89 c2                           	mov edx, eax
0x804aa62:   83 ec 04                        	sub esp, 4
0x804aa65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa68:   8d 83 e1 dd ff ff               	lea eax, [ebx - 0x221f]
0x804aa6e:   50                              	push eax
0x804aa6f:   52                              	push edx
0x804aa70:   e8 02 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa75:   83 c4 10                        	add esp, 0x10
0x804aa78:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804aa7f:   0f be c0                        	movsx eax, al
0x804aa82:   83 ec 04                        	sub esp, 4
0x804aa85:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa88:   8d 93 e6 dd ff ff               	lea edx, [ebx - 0x221a]
0x804aa8e:   52                              	push edx
0x804aa8f:   50                              	push eax
0x804aa90:   e8 e2 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa95:   83 c4 10                        	add esp, 0x10
0x804aa98:   0f b6 83 51 00 00 00            	movzx eax, byte ptr [ebx + 0x51]
0x804aa9f:   0f b6 c0                        	movzx eax, al
0x804aaa2:   83 ec 04                        	sub esp, 4
0x804aaa5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaa8:   8d 93 eb dd ff ff               	lea edx, [ebx - 0x2215]
0x804aaae:   52                              	push edx
0x804aaaf:   50                              	push eax
0x804aab0:   e8 c2 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aab5:   83 c4 10                        	add esp, 0x10
0x804aab8:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804aabe:   89 c2                           	mov edx, eax
0x804aac0:   83 ec 04                        	sub esp, 4
0x804aac3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac6:   8d 83 f0 dd ff ff               	lea eax, [ebx - 0x2210]
0x804aacc:   50                              	push eax
0x804aacd:   52                              	push edx
0x804aace:   e8 a4 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aad3:   83 c4 10                        	add esp, 0x10
0x804aad6:   0f b6 83 52 00 00 00            	movzx eax, byte ptr [ebx + 0x52]
0x804aadd:   0f be c0                        	movsx eax, al
0x804aae0:   83 ec 04                        	sub esp, 4
0x804aae3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae6:   8d 93 f5 dd ff ff               	lea edx, [ebx - 0x220b]
0x804aaec:   52                              	push edx
0x804aaed:   50                              	push eax
0x804aaee:   e8 84 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaf3:   83 c4 10                        	add esp, 0x10
0x804aaf6:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804aafc:   89 c2                           	mov edx, eax
0x804aafe:   83 ec 04                        	sub esp, 4
0x804ab01:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab04:   8d 83 fa dd ff ff               	lea eax, [ebx - 0x2206]
0x804ab0a:   50                              	push eax
0x804ab0b:   52                              	push edx
0x804ab0c:   e8 66 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab11:   83 c4 10                        	add esp, 0x10
0x804ab14:   0f b6 83 53 00 00 00            	movzx eax, byte ptr [ebx + 0x53]
0x804ab1b:   0f b6 c0                        	movzx eax, al
0x804ab1e:   83 ec 04                        	sub esp, 4
0x804ab21:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab24:   8d 93 ff dd ff ff               	lea edx, [ebx - 0x2201]
0x804ab2a:   52                              	push edx
0x804ab2b:   50                              	push eax
0x804ab2c:   e8 46 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab31:   83 c4 10                        	add esp, 0x10
0x804ab34:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ab3a:   83 ec 04                        	sub esp, 4
0x804ab3d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab40:   8d 93 04 de ff ff               	lea edx, [ebx - 0x21fc]
0x804ab46:   52                              	push edx
0x804ab47:   50                              	push eax
0x804ab48:   e8 2a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab4d:   83 c4 10                        	add esp, 0x10
0x804ab50:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804ab57:   0f b7 c0                        	movzx eax, ax
0x804ab5a:   83 ec 04                        	sub esp, 4
0x804ab5d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab60:   8d 93 0a de ff ff               	lea edx, [ebx - 0x21f6]
0x804ab66:   52                              	push edx
0x804ab67:   50                              	push eax
0x804ab68:   e8 0a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab6d:   83 c4 10                        	add esp, 0x10
0x804ab70:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ab76:   83 ec 04                        	sub esp, 4
0x804ab79:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab7c:   8d 93 10 de ff ff               	lea edx, [ebx - 0x21f0]
0x804ab82:   52                              	push edx
0x804ab83:   50                              	push eax
0x804ab84:   e8 ee e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab89:   83 c4 10                        	add esp, 0x10
0x804ab8c:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ab92:   83 ec 04                        	sub esp, 4
0x804ab95:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab98:   8d 93 16 de ff ff               	lea edx, [ebx - 0x21ea]
0x804ab9e:   52                              	push edx
0x804ab9f:   50                              	push eax
0x804aba0:   e8 d2 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba5:   83 c4 10                        	add esp, 0x10
0x804aba8:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804abaf:   98                              	cwde 
0x804abb0:   83 ec 04                        	sub esp, 4
0x804abb3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abb6:   8d 93 1c de ff ff               	lea edx, [ebx - 0x21e4]
0x804abbc:   52                              	push edx
0x804abbd:   50                              	push eax
0x804abbe:   e8 b4 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc3:   83 c4 10                        	add esp, 0x10
0x804abc6:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804abcc:   83 ec 04                        	sub esp, 4
0x804abcf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abd2:   8d 93 22 de ff ff               	lea edx, [ebx - 0x21de]
0x804abd8:   52                              	push edx
0x804abd9:   50                              	push eax
0x804abda:   e8 98 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abdf:   83 c4 10                        	add esp, 0x10
0x804abe2:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804abe9:   0f b6 c0                        	movzx eax, al
0x804abec:   83 ec 04                        	sub esp, 4
0x804abef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf2:   8d 93 28 de ff ff               	lea edx, [ebx - 0x21d8]
0x804abf8:   52                              	push edx
0x804abf9:   50                              	push eax
0x804abfa:   e8 78 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abff:   83 c4 10                        	add esp, 0x10
0x804ac02:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ac08:   89 c2                           	mov edx, eax
0x804ac0a:   83 ec 04                        	sub esp, 4
0x804ac0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac10:   8d 83 2e de ff ff               	lea eax, [ebx - 0x21d2]
0x804ac16:   50                              	push eax
0x804ac17:   52                              	push edx
0x804ac18:   e8 5a e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac1d:   83 c4 10                        	add esp, 0x10
0x804ac20:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804ac26:   83 ec 04                        	sub esp, 4
0x804ac29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac2c:   8d 93 34 de ff ff               	lea edx, [ebx - 0x21cc]
0x804ac32:   52                              	push edx
0x804ac33:   50                              	push eax
0x804ac34:   e8 3e e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac39:   83 c4 10                        	add esp, 0x10
0x804ac3c:   0f b6 83 ac 04 00 00            	movzx eax, byte ptr [ebx + 0x4ac]
0x804ac43:   0f b6 c0                        	movzx eax, al
0x804ac46:   83 ec 04                        	sub esp, 4
0x804ac49:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac4c:   8d 93 3a de ff ff               	lea edx, [ebx - 0x21c6]
0x804ac52:   52                              	push edx
0x804ac53:   50                              	push eax
0x804ac54:   e8 1e e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac59:   83 c4 10                        	add esp, 0x10
0x804ac5c:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804ac62:   83 ec 04                        	sub esp, 4
0x804ac65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac68:   8d 93 40 de ff ff               	lea edx, [ebx - 0x21c0]
0x804ac6e:   52                              	push edx
0x804ac6f:   50                              	push eax
0x804ac70:   e8 02 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac75:   83 c4 10                        	add esp, 0x10
0x804ac78:   0f b6 83 7c 00 00 00            	movzx eax, byte ptr [ebx + 0x7c]
0x804ac7f:   0f b6 c0                        	movzx eax, al
0x804ac82:   83 ec 04                        	sub esp, 4
0x804ac85:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac88:   8d 93 46 de ff ff               	lea edx, [ebx - 0x21ba]
0x804ac8e:   52                              	push edx
0x804ac8f:   50                              	push eax
0x804ac90:   e8 e2 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac95:   83 c4 10                        	add esp, 0x10
0x804ac98:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ac9e:   f7 d0                           	not eax
0x804aca0:   83 ec 08                        	sub esp, 8
0x804aca3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca6:   50                              	push eax
0x804aca7:   e8 ba d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804acac:   83 c4 10                        	add esp, 0x10
0x804acaf:   b8 00 00 00 00                  	mov eax, 0
0x804acb4:   8d 65 f8                        	lea esp, [ebp - 8]
0x804acb7:   59                              	pop ecx
0x804acb8:   5b                              	pop ebx
0x804acb9:   5d                              	pop ebp
0x804acba:   8d 61 fc                        	lea esp, [ecx - 4]
0x804acbd:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804acbe -- 0x804acc2
0x804acbe:   8b 04 24                        	mov eax, dword ptr [esp]
0x804acc1:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804acc2 -- 0x804acc6
0x804acc2:   8b 14 24                        	mov edx, dword ptr [esp]
0x804acc5:   c3                              	ret 
; data inside code section at 0x804acc6 -- 0x804acd0
0x804acc6:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804acd0 -- 0x804ad2d
0x804acd0:   55                              	push ebp
0x804acd1:   57                              	push edi
0x804acd2:   56                              	push esi
0x804acd3:   53                              	push ebx
0x804acd4:   e8 b7 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804acd9:   81 c3 27 23 00 00               	add ebx, 0x2327
0x804acdf:   83 ec 0c                        	sub esp, 0xc
0x804ace2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ace6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804acec:   e8 db d5 ff ff                  	call 0x80482cc <_init>
0x804acf1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804acf7:   29 c6                           	sub esi, eax
0x804acf9:   c1 fe 02                        	sar esi, 2
0x804acfc:   85 f6                           	test esi, esi
0x804acfe:   74 25                           	je 0x804ad25 <__libc_csu_init+0x55>
0x804ad00:   31 ff                           	xor edi, edi
0x804ad02:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ad08:   83 ec 04                        	sub esp, 4
0x804ad0b:   55                              	push ebp
0x804ad0c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad10:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad14:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ad1b:   83 c7 01                        	add edi, 1
0x804ad1e:   83 c4 10                        	add esp, 0x10
0x804ad21:   39 fe                           	cmp esi, edi
0x804ad23:   75 e3                           	jne 0x804ad08 <__libc_csu_init+0x38>
0x804ad25:   83 c4 0c                        	add esp, 0xc
0x804ad28:   5b                              	pop ebx
0x804ad29:   5e                              	pop esi
0x804ad2a:   5f                              	pop edi
0x804ad2b:   5d                              	pop ebp
0x804ad2c:   c3                              	ret 
; data inside code section at 0x804ad2d -- 0x804ad30
0x804ad2d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ad30 -- 0x804ad32
0x804ad30:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ad34 -- 0x804ad48
0x804ad34:   53                              	push ebx
0x804ad35:   83 ec 08                        	sub esp, 8
0x804ad38:   e8 53 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad3d:   81 c3 c3 22 00 00               	add ebx, 0x22c3
0x804ad43:   83 c4 08                        	add esp, 8
0x804ad46:   5b                              	pop ebx
0x804ad47:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 4c ad 04 08  04 00 00 00 11 00 10 00   |....L...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ad48:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ad58:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ad68:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ad78:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ad88:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ad98:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ada8:   31 00 67 5f 31 35 00 67  5f 31 36 00 67 5f 31 37   |1.g_15.g_16.g_17|
0x804adb8:   00 67 5f 32 31 00 67 5f  32 38 00 67 5f 32 39 00   |.g_21.g_28.g_29.|
0x804adc8:   67 5f 33 36 00 67 5f 33  38 00 67 5f 33 39 00 67   |g_36.g_38.g_39.g|
0x804add8:   5f 35 30 00 67 5f 35 36  00 67 5f 35 37 00 67 5f   |_50.g_56.g_57.g_|
0x804ade8:   37 32 00 67 5f 37 33 00  67 5f 38 34 00 67 5f 38   |72.g_73.g_84.g_8|
0x804adf8:   35 00 67 5f 38 37 00 67  5f 38 39 00 67 5f 31 32   |5.g_87.g_89.g_12|
0x804ae08:   31 00 67 5f 31 33 33 00  67 5f 31 34 36 00 67 5f   |1.g_133.g_146.g_|
0x804ae18:   31 35 33 00 67 5f 32 31  38 00 67 5f 32 31 39 00   |153.g_218.g_219.|
0x804ae28:   67 5f 32 35 37 00 67 5f  32 36 30 00 67 5f 32 36   |g_257.g_260.g_26|
0x804ae38:   31 00 67 5f 33 33 32 00  67 5f 33 33 36 00 67 5f   |1.g_332.g_336.g_|
0x804ae48:   33 36 38 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |368....?...~....|
0x804ae58:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804ae68:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804ae78:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804ae88:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804ae98:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804aea8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804aeb8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804aeb8:   01 1b 03 3b b8 02 00 00  56 00 00 00 38 d4 ff ff   |...;....V...8...|
0x804aec8:   e8 02 00 00 78 d4 ff ff  0c 03 00 00 c8 d4 ff ff   |....x...........|
0x804aed8:   d4 02 00 00 9e d5 ff ff  20 03 00 00 ae d5 ff ff   |........ .......|
0x804aee8:   40 03 00 00 dc d5 ff ff  64 03 00 00 fa d5 ff ff   |@.......d.......|
0x804aef8:   84 03 00 00 22 d6 ff ff  a4 03 00 00 4c d6 ff ff   |....".......L...|
0x804af08:   c4 03 00 00 75 d6 ff ff  e4 03 00 00 b8 d6 ff ff   |....u...........|
0x804af18:   04 04 00 00 f9 d6 ff ff  24 04 00 00 51 d7 ff ff   |........$...Q...|
0x804af28:   48 04 00 00 a3 d7 ff ff  6c 04 00 00 e0 d7 ff ff   |H.......l.......|
0x804af38:   8c 04 00 00 17 d8 ff ff  ac 04 00 00 36 d8 ff ff   |............6...|
0x804af48:   cc 04 00 00 60 d8 ff ff  ec 04 00 00 8c d8 ff ff   |....`...........|
0x804af58:   0c 05 00 00 b7 d8 ff ff  2c 05 00 00 00 d9 ff ff   |........,.......|
0x804af68:   4c 05 00 00 47 d9 ff ff  6c 05 00 00 a1 d9 ff ff   |L...G...l.......|
0x804af78:   90 05 00 00 f5 d9 ff ff  b4 05 00 00 34 da ff ff   |............4...|
0x804af88:   d4 05 00 00 6d da ff ff  f4 05 00 00 8f da ff ff   |....m...........|
0x804af98:   14 06 00 00 dd da ff ff  34 06 00 00 19 db ff ff   |........4.......|
0x804afa8:   54 06 00 00 a2 db ff ff  74 06 00 00 d4 db ff ff   |T.......t.......|
0x804afb8:   94 06 00 00 04 dc ff ff  b4 06 00 00 49 dc ff ff   |............I...|
0x804afc8:   d4 06 00 00 88 dc ff ff  f4 06 00 00 ba dc ff ff   |................|
0x804afd8:   14 07 00 00 e6 dc ff ff  34 07 00 00 04 dd ff ff   |........4.......|
0x804afe8:   54 07 00 00 2c dd ff ff  74 07 00 00 51 dd ff ff   |T...,...t...Q...|
0x804aff8:   94 07 00 00 76 dd ff ff  b4 07 00 00 ad dd ff ff   |....v...........|
0x804b008:   d4 07 00 00 e1 dd ff ff  f4 07 00 00 33 de ff ff   |............3...|
0x804b018:   18 08 00 00 7f de ff ff  3c 08 00 00 b6 de ff ff   |........<.......|
0x804b028:   5c 08 00 00 e7 de ff ff  7c 08 00 00 06 df ff ff   |\.......|.......|
0x804b038:   9c 08 00 00 30 df ff ff  bc 08 00 00 58 df ff ff   |....0.......X...|
0x804b048:   dc 08 00 00 81 df ff ff  fc 08 00 00 bd df ff ff   |................|
0x804b058:   1c 09 00 00 f7 df ff ff  3c 09 00 00 4a e0 ff ff   |........<...J...|
0x804b068:   60 09 00 00 97 e0 ff ff  84 09 00 00 cf e0 ff ff   |`...............|
0x804b078:   a4 09 00 00 01 e1 ff ff  c4 09 00 00 15 e1 ff ff   |................|
0x804b088:   e4 09 00 00 2c e1 ff ff  04 0a 00 00 41 e1 ff ff   |....,.......A...|
0x804b098:   24 0a 00 00 57 e1 ff ff  44 0a 00 00 7e e1 ff ff   |$...W...D...~...|
0x804b0a8:   64 0a 00 00 a3 e1 ff ff  84 0a 00 00 e2 e1 ff ff   |d...............|
0x804b0b8:   a4 0a 00 00 1b e2 ff ff  c4 0a 00 00 47 e2 ff ff   |............G...|
0x804b0c8:   e4 0a 00 00 6d e2 ff ff  04 0b 00 00 af e2 ff ff   |....m...........|
0x804b0d8:   24 0b 00 00 f1 e2 ff ff  44 0b 00 00 33 e3 ff ff   |$.......D...3...|
0x804b0e8:   64 0b 00 00 a8 e3 ff ff  84 0b 00 00 05 e4 ff ff   |d...............|
0x804b0f8:   a4 0b 00 00 62 e4 ff ff  c4 0b 00 00 bf e4 ff ff   |....b...........|
0x804b108:   e4 0b 00 00 4f e5 ff ff  04 0c 00 00 b3 e5 ff ff   |....O...........|
0x804b118:   24 0c 00 00 23 e6 ff ff  44 0c 00 00 6a e6 ff ff   |$...#...D...j...|
0x804b128:   68 0c 00 00 bf e6 ff ff  88 0c 00 00 06 e7 ff ff   |h...............|
0x804b138:   ac 0c 00 00 6e e7 ff ff  d0 0c 00 00 2e e9 ff ff   |....n...........|
0x804b148:   00 0d 00 00 fe f9 ff ff  30 0d 00 00 06 fe ff ff   |........0.......|
0x804b158:   68 0d 00 00 0a fe ff ff  7c 0d 00 00 18 fe ff ff   |h.......|.......|
0x804b168:   90 0d 00 00 78 fe ff ff  dc 0d 00 00 14            |....x........   |
; section: .eh_frame
0x804b174:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b184:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b194:   ec d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b1a4:   30 00 00 00 48 d1 ff ff  40 00 00 00 00 0e 08 46   |0...H...@......F|
0x804b1b4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b1c4:   10 00 00 00 54 00 00 00  64 d1 ff ff 08 00 00 00   |....T...d.......|
0x804b1d4:   00 00 00 00 1c 00 00 00  68 00 00 00 76 d2 ff ff   |........h...v...|
0x804b1e4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b1f4:   04 04 00 00 20 00 00 00  88 00 00 00 66 d2 ff ff   |.... .......f...|
0x804b204:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b214:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b224:   70 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |p........A....B.|
0x804b234:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b244:   6e d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |n...(....A....B.|
0x804b254:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b264:   76 d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |v...*....A....B.|
0x804b274:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b284:   80 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b294:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b2a4:   89 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b2b4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b2c4:   ac d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b2d4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b2e4:   cd d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b2f4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b304:   90 01 00 00 01 d3 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b314:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b324:   1c 00 00 00 b4 01 00 00  2f d3 ff ff 3d 00 00 00   |......../...=...|
0x804b334:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b344:   1c 00 00 00 d4 01 00 00  4c d3 ff ff 37 00 00 00   |........L...7...|
0x804b354:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b364:   1c 00 00 00 f4 01 00 00  63 d3 ff ff 1f 00 00 00   |........c.......|
0x804b374:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b384:   1c 00 00 00 14 02 00 00  62 d3 ff ff 2a 00 00 00   |........b...*...|
0x804b394:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b3a4:   1c 00 00 00 34 02 00 00  6c d3 ff ff 2c 00 00 00   |....4...l...,...|
0x804b3b4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b3c4:   1c 00 00 00 54 02 00 00  78 d3 ff ff 2b 00 00 00   |....T...x...+...|
0x804b3d4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b3e4:   1c 00 00 00 74 02 00 00  83 d3 ff ff 49 00 00 00   |....t.......I...|
0x804b3f4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b404:   1c 00 00 00 94 02 00 00  ac d3 ff ff 47 00 00 00   |............G...|
0x804b414:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b424:   20 00 00 00 b4 02 00 00  d3 d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b434:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b444:   c5 0c 04 04 20 00 00 00  d8 02 00 00 09 d4 ff ff   |.... ...........|
0x804b454:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b464:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b474:   39 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |9...?....A....B.|
0x804b484:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b494:   58 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |X...9....A....B.|
0x804b4a4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b4b4:   71 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |q..."....A....B.|
0x804b4c4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b4d4:   73 d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |s...N....A....B.|
0x804b4e4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b4f4:   a1 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b504:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b514:   bd d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b524:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b534:   26 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |&...2....A....B.|
0x804b544:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b554:   38 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |8...0....A....B.|
0x804b564:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b574:   48 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |H...E....A....B.|
0x804b584:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b594:   6d d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |m...?....A....B.|
0x804b5a4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b5b4:   8c d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b5c4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b5d4:   9e d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b5e4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b5f4:   aa d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b604:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b614:   a8 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b624:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b634:   b0 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b644:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b654:   b5 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b664:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b674:   ba d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b684:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b694:   d1 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b6a4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b6b4:   e5 d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b6c4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b6d4:   60 05 00 00 13 d6 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b6e4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b6f4:   1c 00 00 00 84 05 00 00  3b d6 ff ff 37 00 00 00   |........;...7...|
0x804b704:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b714:   1c 00 00 00 a4 05 00 00  52 d6 ff ff 31 00 00 00   |........R...1...|
0x804b724:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b734:   1c 00 00 00 c4 05 00 00  63 d6 ff ff 1f 00 00 00   |........c.......|
0x804b744:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b754:   1c 00 00 00 e4 05 00 00  62 d6 ff ff 2a 00 00 00   |........b...*...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b774:   1c 00 00 00 04 06 00 00  6c d6 ff ff 28 00 00 00   |........l...(...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b794:   1c 00 00 00 24 06 00 00  74 d6 ff ff 29 00 00 00   |....$...t...)...|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b7b4:   1c 00 00 00 44 06 00 00  7d d6 ff ff 3c 00 00 00   |....D...}...<...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b7d4:   1c 00 00 00 64 06 00 00  99 d6 ff ff 3a 00 00 00   |....d.......:...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b7f4:   20 00 00 00 84 06 00 00  b3 d6 ff ff 53 00 00 00   | ...........S...|
0x804b804:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b814:   c5 0c 04 04 20 00 00 00  a8 06 00 00 e2 d6 ff ff   |.... ...........|
0x804b824:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b834:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b844:   0b d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b854:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b864:   23 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |#...2....A....B.|
0x804b874:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b884:   35 d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |5........A....B.|
0x804b894:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b8a4:   29 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |)........A....B.|
0x804b8b4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b8c4:   20 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   | ........A....B.|
0x804b8d4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b8e4:   15 d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8f4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b904:   0b d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b914:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b924:   12 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b934:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b944:   17 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b954:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b964:   36 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |6...9....A....B.|
0x804b974:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b984:   4f d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |O...,....A....B.|
0x804b994:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b9a4:   5b d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |[...&....A....B.|
0x804b9b4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b9c4:   61 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |a...B....A....B.|
0x804b9d4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b9e4:   83 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9f4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804ba04:   a5 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba14:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ba24:   c7 d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804ba34:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804ba44:   1c d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba54:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ba64:   59 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Y...]....A....B.|
0x804ba74:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804ba84:   96 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba94:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804baa4:   d3 d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bab4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bac4:   43 d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |C...d....A....B.|
0x804bad4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bae4:   87 d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804baf4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bb04:   d7 d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bb14:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bb24:   b0 09 00 00 fa d9 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bb34:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bb44:   d0 09 00 00 2f da ff ff  47 00 00 00 00 41 0e 08   |..../...G....A..|
0x804bb54:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bb64:   20 00 00 00 f4 09 00 00  52 da ff ff 68 00 00 00   | .......R...h...|
0x804bb74:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bb84:   0c 04 04 00 2c 00 00 00  18 0a 00 00 96 da ff ff   |....,...........|
0x804bb94:   c0 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bba4:   86 04 83 05 03 b3 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bbb4:   04 00 00 00 2c 00 00 00  48 0a 00 00 26 dc ff ff   |....,...H...&...|
0x804bbc4:   d0 10 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bbd4:   86 04 83 05 03 c0 10 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bbe4:   04 00 00 00 34 00 00 00  78 0a 00 00 c6 ec ff ff   |....4...x.......|
0x804bbf4:   08 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bc04:   0f 03 75 78 06 10 03 02  75 7c 03 f3 03 c1 0c 01   |..ux....u|......|
0x804bc14:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bc24:   b0 0a 00 00 96 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bc34:   10 00 00 00 c4 0a 00 00  86 f0 ff ff 04 00 00 00   |................|
0x804bc44:   00 00 00 00 48 00 00 00  d8 0a 00 00 80 f0 ff ff   |....H...........|
0x804bc54:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bc64:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bc74:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bc84:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bc94:   10 00 00 00 24 0b 00 00  94 f0 ff ff 02 00 00 00   |....$...........|
0x804bca4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 34 ad 04 08  19 00 00 00 0c cf 04 08   |....4...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff b0 a8 f5 8c   |................|
0x804d028:   6f 7b 7f 92 db 1f 6f 7c  42 00 00 00 d9 05 c0 12   |o{....o|B.......|
0x804d038:   55 29 53 d9 01 3c 00 00  d6 f7 4b 09 23 3e f3 60   |U)S..<....K.#>.`|
0x804d048:   57 35 4d 9c 75 35 d5 a2  43 a8 f6 02 01 00 00 00   |W5M.u5..C.......|
0x804d058:   41 85 00 00 31 99 48 37  9c 26 28 3b ff ff 00 00   |A...1.H7.&(;....|
0x804d068:   7d 2c 01 4c 01 00 00 00  73 1e a5 ec fe ff ff ff   |},.L....s.......|
0x804d078:   01 00 00 00 6d ??                                  |....m?          |
