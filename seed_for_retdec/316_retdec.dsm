;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:34
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 e0 dd ff ff               	lea eax, [ebx - 0x2220]
0x804835c:   50                              	push eax
0x804835d:   8d 83 80 dd ff ff               	lea eax, [ebx - 0x2280]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 40 a9 04 08               	mov eax, 0x804a940
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 10 29 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 fc 28 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 00 de ff ff               	lea edx, [eax - 0x2200]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 cf 28 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 b1 28 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 89 28 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 5f 28 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 36 28 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 f3 27 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 b1 27 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 59 27 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 08 27 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 cb 26 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 94 26 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 75 26 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 4b 26 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 1f 26 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 f4 25 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 ab 25 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 63 25 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 09 25 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 b6 24 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 77 24 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 41 24 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 1f 24 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 d1 23 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 95 23 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 0c 23 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 da 22 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 aa 22 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 65 22 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 26 22 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 f4 21 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 c5 21 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 a7 21 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 7f 21 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 5a 21 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 35 21 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 fe 20 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 c9 20 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 77 20 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 2c 20 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 f5 1f 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 c4 1f 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 a5 1f 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 7b 1f 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 53 1f 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 2a 1f 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 ee 1e 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 b3 1e 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 60 1e 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 14 1e 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 dc 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 ad 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 99 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 82 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 6d 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 57 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 30 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 0b 1d 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 cc 1c 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 93 1c 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 67 1c 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 41 1c 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 10 df ff ff               	fld dword ptr [eax - 0x20f0]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 ff 1b 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 0c df ff ff               	fld dword ptr [eax - 0x20f4]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 10 df ff ff               	fld dword ptr [eax - 0x20f0]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 bd 1b 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 14 df ff ff               	fld dword ptr [eax - 0x20ec]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 18 df ff ff               	fld dword ptr [eax - 0x20e8]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 1c df ff ff               	fld dword ptr [eax - 0x20e4]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 7b 1b 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 20 df ff ff               	fld dword ptr [eax - 0x20e0]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 24 df ff ff               	fld dword ptr [eax - 0x20dc]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 28 df ff ff               	fld dword ptr [eax - 0x20d8]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 03 1b 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 38 df ff ff               	fld qword ptr [eax - 0x20c8]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 a6 1a 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 30 df ff ff               	fld qword ptr [eax - 0x20d0]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 38 df ff ff               	fld qword ptr [eax - 0x20c8]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 49 1a 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 40 df ff ff               	fld qword ptr [eax - 0x20c0]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 48 df ff ff               	fld qword ptr [eax - 0x20b8]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 50 df ff ff               	fld qword ptr [eax - 0x20b0]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 ec 19 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 58 df ff ff               	fld qword ptr [eax - 0x20a8]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 60 df ff ff               	fld qword ptr [eax - 0x20a0]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 68 df ff ff               	fld qword ptr [eax - 0x2098]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 5c 19 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 70 df ff ff               	fld dword ptr [eax - 0x2090]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 74 df ff ff               	fld dword ptr [eax - 0x208c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 f8 18 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 87 18 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 44 18 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 10 de ff ff               	lea eax, [ebx - 0x21f0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 34 de ff ff               	lea eax, [ebx - 0x21cc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497fb
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 60                        	sub esp, 0x60
0x804962f:   e8 3e 17 00 00                  	call 0x804ad72 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049640:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049649:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x804964c:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804964f:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049652:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049655:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049658:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804965b:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804965e:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049661:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049664:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049667:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804966a:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804966d:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049670:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049673:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049676:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049679:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804967c:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804967f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049682:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049686:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804968a:   89 c8                           	mov eax, ecx
0x804968c:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804968f:   89 d8                           	mov eax, ebx
0x8049691:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049694:   89 f0                           	mov eax, esi
0x8049696:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804969a:   89 f8                           	mov eax, edi
0x804969c:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804969f:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x80496a3:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496a6:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496aa:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x80496ad:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496b1:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496b4:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b8:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496bb:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496bf:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496c3:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c7:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496ca:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496ce:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496d1:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496d5:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496d9:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496dd:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496e0:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496e4:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x80496eb:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496ef:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x80496f5:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496f8:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496fe:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049701:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049707:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804970b:   88 82 34 00 00 00               	mov byte ptr [edx + 0x34], al
0x8049711:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049714:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804971a:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804971e:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x8049725:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049729:   88 82 3e 00 00 00               	mov byte ptr [edx + 0x3e], al
0x804972f:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049733:   88 82 3f 00 00 00               	mov byte ptr [edx + 0x3f], al
0x8049739:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804973c:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049742:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049745:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804974b:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x804974f:   88 82 48 00 00 00               	mov byte ptr [edx + 0x48], al
0x8049755:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049758:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x804975e:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049761:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049767:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804976b:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x8049771:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049775:   88 82 55 00 00 00               	mov byte ptr [edx + 0x55], al
0x804977b:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804977f:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x8049786:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049789:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804978f:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049792:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049798:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x804979b:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497a1:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497a5:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497ab:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497ae:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497b4:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497b8:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x80497be:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497c2:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x80497c9:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x80497cd:   88 82 6d 00 00 00               	mov byte ptr [edx + 0x6d], al
0x80497d3:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497d6:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497dc:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497df:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x80497e5:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x80497e8:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x80497ee:   b8 00 00 00 00                  	mov eax, 0
0x80497f3:   83 c4 60                        	add esp, 0x60
0x80497f6:   5b                              	pop ebx
0x80497f7:   5e                              	pop esi
0x80497f8:   5f                              	pop edi
0x80497f9:   5d                              	pop ebp
0x80497fa:   c3                              	ret 
; function: func_1 at 0x80497fb -- 0x804a940
0x80497fb:   55                              	push ebp
0x80497fc:   89 e5                           	mov ebp, esp
0x80497fe:   57                              	push edi
0x80497ff:   56                              	push esi
0x8049800:   53                              	push ebx
0x8049801:   81 ec 70 01 00 00               	sub esp, 0x170
0x8049807:   e8 62 15 00 00                  	call 0x804ad6e <__x86.get_pc_thunk.ax>
0x804980c:   05 f4 37 00 00                  	add eax, 0x37f4
0x8049811:   66 c7 85 7a ff ff ff b3 7c      	mov word ptr [ebp - 0x86], 0x7cb3
0x804981a:   66 c7 45 f2 01 00               	mov word ptr [ebp - 0xe], 1
0x8049820:   c6 45 ea ff                     	mov byte ptr [ebp - 0x16], 0xff
0x8049824:   c7 45 ec e8 da 6b d8            	mov dword ptr [ebp - 0x14], 0xd86bdae8
0x804982b:   c7 85 74 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffa
0x8049835:   c6 45 e9 ff                     	mov byte ptr [ebp - 0x17], 0xff
0x8049839:   c7 45 e4 fe ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffffe
0x8049840:   66 c7 85 72 ff ff ff 09 00      	mov word ptr [ebp - 0x8e], 9
0x8049849:   c6 45 eb 3f                     	mov byte ptr [ebp - 0x15], 0x3f
0x804984d:   c6 45 e3 c7                     	mov byte ptr [ebp - 0x1d], 0xc7
0x8049851:   c7 45 dc d9 32 ca 6b            	mov dword ptr [ebp - 0x24], 0x6bca32d9
0x8049858:   c7 45 d8 05 00 00 00            	mov dword ptr [ebp - 0x28], 5
0x804985f:   c6 45 d7 4c                     	mov byte ptr [ebp - 0x29], 0x4c
0x8049863:   c7 45 d0 31 94 35 87            	mov dword ptr [ebp - 0x30], 0x87359431
0x804986a:   c6 85 71 ff ff ff fe            	mov byte ptr [ebp - 0x8f], 0xfe
0x8049871:   c7 45 cc 04 26 d7 44            	mov dword ptr [ebp - 0x34], 0x44d72604
0x8049878:   c6 85 70 ff ff ff e3            	mov byte ptr [ebp - 0x90], 0xe3
0x804987f:   c6 85 6f ff ff ff f7            	mov byte ptr [ebp - 0x91], 0xf7
0x8049886:   c6 85 6e ff ff ff ff            	mov byte ptr [ebp - 0x92], 0xff
0x804988d:   66 c7 45 ca 01 00               	mov word ptr [ebp - 0x36], 1
0x8049893:   c7 85 68 ff ff ff 71 51 26 6d   	mov dword ptr [ebp - 0x98], 0x6d265171
0x804989d:   c7 45 c4 b1 0d cd 13            	mov dword ptr [ebp - 0x3c], 0x13cd0db1
0x80498a4:   c7 45 c0 ff ff ff ff            	mov dword ptr [ebp - 0x40], 0xffffffff
0x80498ab:   c6 45 bf b3                     	mov byte ptr [ebp - 0x41], 0xb3
0x80498af:   c7 45 b8 ae 24 04 49            	mov dword ptr [ebp - 0x48], 0x490424ae
0x80498b6:   c6 45 b7 01                     	mov byte ptr [ebp - 0x49], 1
0x80498ba:   66 c7 45 b4 00 00               	mov word ptr [ebp - 0x4c], 0
0x80498c0:   c6 45 b3 fa                     	mov byte ptr [ebp - 0x4d], 0xfa
0x80498c4:   c7 45 ac f9 ff ff ff            	mov dword ptr [ebp - 0x54], 0xfffffff9
0x80498cb:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x80498d5:   c7 45 a8 4f 88 b1 1b            	mov dword ptr [ebp - 0x58], 0x1bb1884f
0x80498dc:   c7 85 60 ff ff ff b8 67 18 97   	mov dword ptr [ebp - 0xa0], 0x971867b8
0x80498e6:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x80498ed:   c7 45 a0 fa ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffffa
0x80498f4:   66 c7 85 5e ff ff ff ff ff      	mov word ptr [ebp - 0xa2], 0xffff
0x80498fd:   c7 85 58 ff ff ff 84 45 6c 33   	mov dword ptr [ebp - 0xa8], 0x336c4584
0x8049907:   c7 45 9c 0d d8 1f 3e            	mov dword ptr [ebp - 0x64], 0x3e1fd80d
0x804990e:   c7 85 54 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xac], 0xffffffff
0x8049918:   c7 85 50 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xb0], 3
0x8049922:   c6 85 4f ff ff ff 00            	mov byte ptr [ebp - 0xb1], 0
0x8049929:   66 c7 85 4c ff ff ff 03 00      	mov word ptr [ebp - 0xb4], 3
0x8049932:   c7 85 48 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb8], 0
0x804993c:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x8049943:   0f be d0                        	movsx edx, al
0x8049946:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804994c:   0f be c0                        	movsx eax, al
0x804994f:   89 c1                           	mov ecx, eax
0x8049951:   d3 fa                           	sar edx, cl
0x8049953:   89 d0                           	mov eax, edx
0x8049955:   85 c0                           	test eax, eax
0x8049957:   75 0a                           	jne 0x8049963 <func_1+0x168>
0x8049959:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x8049961:   74 07                           	je 0x804996a <func_1+0x16f>
0x8049963:   b8 01 00 00 00                  	mov eax, 1
0x8049968:   eb 05                           	jmp 0x804996f <func_1+0x174>
0x804996a:   b8 00 00 00 00                  	mov eax, 0
0x804996f:   0f bf c8                        	movsx ecx, ax
0x8049972:   b8 40 4c 00 00                  	mov eax, 0x4c40
0x8049977:   99                              	cdq 
0x8049978:   f7 f9                           	idiv ecx
0x804997a:   89 d0                           	mov eax, edx
0x804997c:   85 c0                           	test eax, eax
0x804997e:   74 11                           	je 0x8049991 <func_1+0x196>
0x8049980:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x8049988:   74 07                           	je 0x8049991 <func_1+0x196>
0x804998a:   b8 01 00 00 00                  	mov eax, 1
0x804998f:   eb 05                           	jmp 0x8049996 <func_1+0x19b>
0x8049991:   b8 00 00 00 00                  	mov eax, 0
0x8049996:   0f b6 d0                        	movzx edx, al
0x8049999:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804999d:   0f b6 c0                        	movzx eax, al
0x80499a0:   89 c1                           	mov ecx, eax
0x80499a2:   d3 fa                           	sar edx, cl
0x80499a4:   89 d0                           	mov eax, edx
0x80499a6:   85 c0                           	test eax, eax
0x80499a8:   75 09                           	jne 0x80499b3 <func_1+0x1b8>
0x80499aa:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x80499b1:   74 07                           	je 0x80499ba <func_1+0x1bf>
0x80499b3:   b8 01 00 00 00                  	mov eax, 1
0x80499b8:   eb 05                           	jmp 0x80499bf <func_1+0x1c4>
0x80499ba:   b8 00 00 00 00                  	mov eax, 0
0x80499bf:   0f bf d0                        	movsx edx, ax
0x80499c2:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x80499c8:   98                              	cwde 
0x80499c9:   0f af c2                        	imul eax, edx
0x80499cc:   85 c0                           	test eax, eax
0x80499ce:   0f 84 4e 01 00 00               	je 0x8049b22 <func_1+0x327>
0x80499d4:   c6 85 45 ff ff ff 01            	mov byte ptr [ebp - 0xbb], 1
0x80499db:   c7 45 98 24 e7 3c fa            	mov dword ptr [ebp - 0x68], 0xfa3ce724
0x80499e2:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x80499e7:   7f 07                           	jg 0x80499f0 <func_1+0x1f5>
0x80499e9:   b8 25 00 00 00                  	mov eax, 0x25
0x80499ee:   eb 05                           	jmp 0x80499f5 <func_1+0x1fa>
0x80499f0:   b8 00 00 00 00                  	mov eax, 0
0x80499f5:   88 45 ea                        	mov byte ptr [ebp - 0x16], al
0x80499f8:   66 0f be 85 45 ff ff ff         	movsx ax, byte ptr [ebp - 0xbb]
0x8049a00:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049a04:   b8 02 00 00 00                  	mov eax, 2
0x8049a09:   ba 00 00 00 00                  	mov edx, 0
0x8049a0e:   f7 b5 60 ff ff ff               	div dword ptr [ebp - 0xa0]
0x8049a14:   89 d0                           	mov eax, edx
0x8049a16:   0f be d0                        	movsx edx, al
0x8049a19:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a1c:   0f be c0                        	movsx eax, al
0x8049a1f:   29 c2                           	sub edx, eax
0x8049a21:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049a27:   01 d0                           	add eax, edx
0x8049a29:   8b bd 60 ff ff ff               	mov edi, dword ptr [ebp - 0xa0]
0x8049a2f:   99                              	cdq 
0x8049a30:   f7 ff                           	idiv edi
0x8049a32:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x8049a35:   66 c7 45 f2 0d 00               	mov word ptr [ebp - 0xe], 0xd
0x8049a3b:   e9 d2 00 00 00                  	jmp 0x8049b12 <func_1+0x317>
0x8049a40:   66 c7 85 42 ff ff ff 5a e0      	mov word ptr [ebp - 0xbe], 0xe05a
0x8049a49:   c7 45 94 ff ff ff ff            	mov dword ptr [ebp - 0x6c], 0xffffffff
0x8049a50:   66 83 bd 42 ff ff ff 00         	cmp word ptr [ebp - 0xbe], 0
0x8049a58:   74 21                           	je 0x8049a7b <func_1+0x280>
0x8049a5a:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049a5e:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049a61:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049a65:   74 07                           	je 0x8049a6e <func_1+0x273>
0x8049a67:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049a6e:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049a72:   74 07                           	je 0x8049a7b <func_1+0x280>
0x8049a74:   b8 01 00 00 00                  	mov eax, 1
0x8049a79:   eb 05                           	jmp 0x8049a80 <func_1+0x285>
0x8049a7b:   b8 00 00 00 00                  	mov eax, 0
0x8049a80:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049a83:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x8049a8a:   eb 5e                           	jmp 0x8049aea <func_1+0x2ef>
0x8049a8c:   c6 85 41 ff ff ff 00            	mov byte ptr [ebp - 0xbf], 0
0x8049a93:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x8049a9a:   0f b6 c0                        	movzx eax, al
0x8049a9d:   80 ad 41 ff ff ff 01            	sub byte ptr [ebp - 0xbf], 1
0x8049aa4:   0f b6 95 41 ff ff ff            	movzx edx, byte ptr [ebp - 0xbf]
0x8049aab:   89 d1                           	mov ecx, edx
0x8049aad:   83 e1 70                        	and ecx, 0x70
0x8049ab0:   99                              	cdq 
0x8049ab1:   f7 f9                           	idiv ecx
0x8049ab3:   89 d0                           	mov eax, edx
0x8049ab5:   85 c0                           	test eax, eax
0x8049ab7:   75 0e                           	jne 0x8049ac7 <func_1+0x2cc>
0x8049ab9:   0f bf 85 42 ff ff ff            	movsx eax, word ptr [ebp - 0xbe]
0x8049ac0:   25 98 cd 00 00                  	and eax, 0xcd98
0x8049ac5:   85 c0                           	test eax, eax
0x8049ac7:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049aca:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049acd:   0f bf d2                        	movsx edx, dx
0x8049ad0:   c1 fa 0b                        	sar edx, 0xb
0x8049ad3:   89 d1                           	mov ecx, edx
0x8049ad5:   0f be 95 45 ff ff ff            	movsx edx, byte ptr [ebp - 0xbb]
0x8049adc:   01 ca                           	add edx, ecx
0x8049ade:   89 d3                           	mov ebx, edx
0x8049ae0:   99                              	cdq 
0x8049ae1:   f7 fb                           	idiv ebx
0x8049ae3:   21 45 94                        	and dword ptr [ebp - 0x6c], eax
0x8049ae6:   83 6d 98 03                     	sub dword ptr [ebp - 0x68], 3
0x8049aea:   83 7d 98 f2                     	cmp dword ptr [ebp - 0x68], -0xe
0x8049aee:   7d 9c                           	jge 0x8049a8c <func_1+0x291>
0x8049af0:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049af4:   83 c0 01                        	add eax, 1
0x8049af7:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049afa:   80 bd 45 ff ff ff 00            	cmp byte ptr [ebp - 0xbb], 0
0x8049b01:   0f 85 a4 01 00 00               	jne 0x8049cab <func_1+0x4b0>
0x8049b07:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049b0b:   83 c0 01                        	add eax, 1
0x8049b0e:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049b12:   66 83 7d f2 15                  	cmp word ptr [ebp - 0xe], 0x15
0x8049b17:   0f 8f 23 ff ff ff               	jg 0x8049a40 <func_1+0x245>
0x8049b1d:   e9 8a 01 00 00                  	jmp 0x8049cac <func_1+0x4b1>
0x8049b22:   c6 85 47 ff ff ff 01            	mov byte ptr [ebp - 0xb9], 1
0x8049b29:   c6 85 46 ff ff ff 03            	mov byte ptr [ebp - 0xba], 3
0x8049b30:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049b37:   0f 95 c0                        	setne al
0x8049b3a:   30 85 47 ff ff ff               	xor byte ptr [ebp - 0xb9], al
0x8049b40:   0f be 95 47 ff ff ff            	movsx edx, byte ptr [ebp - 0xb9]
0x8049b47:   0f b7 8d 7a ff ff ff            	movzx ecx, word ptr [ebp - 0x86]
0x8049b4e:   0f be 85 47 ff ff ff            	movsx eax, byte ptr [ebp - 0xb9]
0x8049b55:   39 c1                           	cmp ecx, eax
0x8049b57:   0f 95 c0                        	setne al
0x8049b5a:   0f b6 c8                        	movzx ecx, al
0x8049b5d:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049b61:   39 c1                           	cmp ecx, eax
0x8049b63:   0f 95 c0                        	setne al
0x8049b66:   0f b6 c0                        	movzx eax, al
0x8049b69:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049b6c:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049b6f:   0f bf d8                        	movsx ebx, ax
0x8049b72:   0f be 85 46 ff ff ff            	movsx eax, byte ptr [ebp - 0xba]
0x8049b79:   89 c1                           	mov ecx, eax
0x8049b7b:   d3 fb                           	sar ebx, cl
0x8049b7d:   89 d8                           	mov eax, ebx
0x8049b7f:   83 f8 6c                        	cmp eax, 0x6c
0x8049b82:   0f 9f c0                        	setg al
0x8049b85:   0f b6 c0                        	movzx eax, al
0x8049b88:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049b8b:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049b8f:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x8049b95:   b8 01 00 00 00                  	mov eax, 1
0x8049b9a:   89 c1                           	mov ecx, eax
0x8049b9c:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x8049ba3:   21 c8                           	and eax, ecx
0x8049ba5:   66 89 85 5e ff ff ff            	mov word ptr [ebp - 0xa2], ax
0x8049bac:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x8049bb3:   0f b6 c0                        	movzx eax, al
0x8049bb6:   8d 48 7f                        	lea ecx, [eax + 0x7f]
0x8049bb9:   0f be 85 46 ff ff ff            	movsx eax, byte ptr [ebp - 0xba]
0x8049bc0:   39 c1                           	cmp ecx, eax
0x8049bc2:   7e 0a                           	jle 0x8049bce <func_1+0x3d3>
0x8049bc4:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x8049bcc:   74 07                           	je 0x8049bd5 <func_1+0x3da>
0x8049bce:   b8 01 00 00 00                  	mov eax, 1
0x8049bd3:   eb 05                           	jmp 0x8049bda <func_1+0x3df>
0x8049bd5:   b8 00 00 00 00                  	mov eax, 0
0x8049bda:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x8049be0:   0f 93 c0                        	setae al
0x8049be3:   0f b6 c0                        	movzx eax, al
0x8049be6:   39 c2                           	cmp edx, eax
0x8049be8:   0f 94 c0                        	sete al
0x8049beb:   0f b6 c0                        	movzx eax, al
0x8049bee:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049bf1:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049bf5:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x8049bf8:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049bfb:   89 c1                           	mov ecx, eax
0x8049bfd:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049c00:   ba 00 00 00 00                  	mov edx, 0
0x8049c05:   66 f7 b5 5e ff ff ff            	div word ptr [ebp - 0xa2]
0x8049c0c:   0f b7 c0                        	movzx eax, ax
0x8049c0f:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049c12:   0f 95 c0                        	setne al
0x8049c15:   0f b6 c0                        	movzx eax, al
0x8049c18:   66 69 c0 cb ef                  	imul ax, ax, 0xefcb
0x8049c1d:   21 c8                           	and eax, ecx
0x8049c1f:   0f b7 d0                        	movzx edx, ax
0x8049c22:   66 0f be 45 e9                  	movsx ax, byte ptr [ebp - 0x17]
0x8049c27:   0f b7 c0                        	movzx eax, ax
0x8049c2a:   89 c1                           	mov ecx, eax
0x8049c2c:   d3 e2                           	shl edx, cl
0x8049c2e:   89 d0                           	mov eax, edx
0x8049c30:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x8049c33:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x8049c37:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x8049c3a:   0f b6 c0                        	movzx eax, al
0x8049c3d:   f6 f2                           	div dl
0x8049c3f:   0f b6 c0                        	movzx eax, al
0x8049c42:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x8049c45:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049c48:   76 10                           	jbe 0x8049c5a <func_1+0x45f>
0x8049c4a:   80 bd 47 ff ff ff 00            	cmp byte ptr [ebp - 0xb9], 0
0x8049c51:   74 07                           	je 0x8049c5a <func_1+0x45f>
0x8049c53:   ba 01 00 00 00                  	mov edx, 1
0x8049c58:   eb 05                           	jmp 0x8049c5f <func_1+0x464>
0x8049c5a:   ba 00 00 00 00                  	mov edx, 0
0x8049c5f:   0f be 85 47 ff ff ff            	movsx eax, byte ptr [ebp - 0xb9]
0x8049c66:   31 c2                           	xor edx, eax
0x8049c68:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049c6c:   39 c2                           	cmp edx, eax
0x8049c6e:   0f 9e c0                        	setle al
0x8049c71:   0f b6 c0                        	movzx eax, al
0x8049c74:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049c77:   0f 9c c0                        	setl al
0x8049c7a:   0f b6 c0                        	movzx eax, al
0x8049c7d:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049c80:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049c83:   83 f8 05                        	cmp eax, 5
0x8049c86:   0f 97 c0                        	seta al
0x8049c89:   0f b6 c0                        	movzx eax, al
0x8049c8c:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049c8f:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049c96:   eb 0b                           	jmp 0x8049ca3 <func_1+0x4a8>
0x8049c98:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049c9c:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049c9f:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x8049ca3:   83 7d a4 ec                     	cmp dword ptr [ebp - 0x5c], -0x14
0x8049ca7:   7c ef                           	jl 0x8049c98 <func_1+0x49d>
0x8049ca9:   eb 01                           	jmp 0x8049cac <func_1+0x4b1>
0x8049cab:   90                              	nop 
0x8049cac:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x8049cb3:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x8049cbb:   75 06                           	jne 0x8049cc3 <func_1+0x4c8>
0x8049cbd:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x8049cc1:   74 07                           	je 0x8049cca <func_1+0x4cf>
0x8049cc3:   b8 01 00 00 00                  	mov eax, 1
0x8049cc8:   eb 05                           	jmp 0x8049ccf <func_1+0x4d4>
0x8049cca:   b8 00 00 00 00                  	mov eax, 0
0x8049ccf:   98                              	cwde 
0x8049cd0:   8b 95 74 ff ff ff               	mov edx, dword ptr [ebp - 0x8c]
0x8049cd6:   0f bf fa                        	movsx edi, dx
0x8049cd9:   99                              	cdq 
0x8049cda:   f7 ff                           	idiv edi
0x8049cdc:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049cdf:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049ce3:   74 06                           	je 0x8049ceb <func_1+0x4f0>
0x8049ce5:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049ce9:   75 06                           	jne 0x8049cf1 <func_1+0x4f6>
0x8049ceb:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049cef:   74 07                           	je 0x8049cf8 <func_1+0x4fd>
0x8049cf1:   b8 01 00 00 00                  	mov eax, 1
0x8049cf6:   eb 05                           	jmp 0x8049cfd <func_1+0x502>
0x8049cf8:   b8 00 00 00 00                  	mov eax, 0
0x8049cfd:   0f b6 d0                        	movzx edx, al
0x8049d00:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049d03:   0f b6 c0                        	movzx eax, al
0x8049d06:   29 c2                           	sub edx, eax
0x8049d08:   89 d0                           	mov eax, edx
0x8049d0a:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049d0d:   0f 84 b0 06 00 00               	je 0x804a3c3 <func_1+0xbc8>
0x8049d13:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049d1d:   c7 45 90 ff ff ff ff            	mov dword ptr [ebp - 0x70], 0xffffffff
0x8049d24:   c6 85 17 ff ff ff 70            	mov byte ptr [ebp - 0xe9], 0x70
0x8049d2b:   c7 85 10 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xf0], 2
0x8049d35:   c7 85 0c ff ff ff f2 65 9b 97   	mov dword ptr [ebp - 0xf4], 0x979b65f2
0x8049d3f:   c6 85 0b ff ff ff dd            	mov byte ptr [ebp - 0xf5], 0xdd
0x8049d46:   c7 85 04 ff ff ff ba 07 f9 ad   	mov dword ptr [ebp - 0xfc], 0xadf907ba
0x8049d50:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049d56:   98                              	cwde 
0x8049d57:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x8049d5a:   0f bf ca                        	movsx ecx, dx
0x8049d5d:   99                              	cdq 
0x8049d5e:   f7 f9                           	idiv ecx
0x8049d60:   89 d0                           	mov eax, edx
0x8049d62:   85 c0                           	test eax, eax
0x8049d64:   0f 84 4f 05 00 00               	je 0x804a2b9 <func_1+0xabe>
0x8049d6a:   c7 85 f8 fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x108], 9
0x8049d74:   c7 45 8c 07 00 00 00            	mov dword ptr [ebp - 0x74], 7
0x8049d7b:   c7 85 f4 fe ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff8
0x8049d85:   66 c7 85 f2 fe ff ff 5f 8f      	mov word ptr [ebp - 0x10e], 0x8f5f
0x8049d8e:   c7 85 ec fe ff ff 0b b2 ad 7d   	mov dword ptr [ebp - 0x114], 0x7dadb20b
0x8049d98:   c7 85 e8 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x118], 2
0x8049da2:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x8049da9:   0f b6 d0                        	movzx edx, al
0x8049dac:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049db2:   0f b6 c0                        	movzx eax, al
0x8049db5:   89 c1                           	mov ecx, eax
0x8049db7:   d3 e2                           	shl edx, cl
0x8049db9:   89 d0                           	mov eax, edx
0x8049dbb:   3d f6 f0 a2 43                  	cmp eax, 0x43a2f0f6
0x8049dc0:   0f 9e c0                        	setle al
0x8049dc3:   0f b6 c0                        	movzx eax, al
0x8049dc6:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049dc9:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049dcc:   09 45 8c                        	or dword ptr [ebp - 0x74], eax
0x8049dcf:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049dd2:   88 85 17 ff ff ff               	mov byte ptr [ebp - 0xe9], al
0x8049dd8:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049dde:   0f b6 c8                        	movzx ecx, al
0x8049de1:   b8 f0 00 00 00                  	mov eax, 0xf0
0x8049de6:   99                              	cdq 
0x8049de7:   f7 f9                           	idiv ecx
0x8049de9:   89 d0                           	mov eax, edx
0x8049deb:   83 f8 ff                        	cmp eax, -1
0x8049dee:   75 07                           	jne 0x8049df7 <func_1+0x5fc>
0x8049df0:   b8 01 00 00 00                  	mov eax, 1
0x8049df5:   eb 05                           	jmp 0x8049dfc <func_1+0x601>
0x8049df7:   b8 00 00 00 00                  	mov eax, 0
0x8049dfc:   0f b6 d0                        	movzx edx, al
0x8049dff:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x8049e03:   0f b6 c0                        	movzx eax, al
0x8049e06:   01 d0                           	add eax, edx
0x8049e08:   98                              	cwde 
0x8049e09:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049e0c:   0f bf da                        	movsx ebx, dx
0x8049e0f:   99                              	cdq 
0x8049e10:   f7 fb                           	idiv ebx
0x8049e12:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049e18:   b8 01 00 00 00                  	mov eax, 1
0x8049e1d:   98                              	cwde 
0x8049e1e:   c1 e0 05                        	shl eax, 5
0x8049e21:   3d 23 57 00 00                  	cmp eax, 0x5723
0x8049e26:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x8049e2d:   66 0f be 95 17 ff ff ff         	movsx dx, byte ptr [ebp - 0xe9]
0x8049e35:   0f b7 ca                        	movzx ecx, dx
0x8049e38:   99                              	cdq 
0x8049e39:   f7 f9                           	idiv ecx
0x8049e3b:   89 d0                           	mov eax, edx
0x8049e3d:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049e40:   7c 35                           	jl 0x8049e77 <func_1+0x67c>
0x8049e42:   66 c7 85 e4 fe ff ff 00 00      	mov word ptr [ebp - 0x11c], 0
0x8049e4b:   c7 45 cc 08 10 02 bd            	mov dword ptr [ebp - 0x34], 0xbd021008
0x8049e52:   66 0f be 45 ea                  	movsx ax, byte ptr [ebp - 0x16]
0x8049e57:   66 89 85 e4 fe ff ff            	mov word ptr [ebp - 0x11c], ax
0x8049e5e:   0f b7 85 e4 fe ff ff            	movzx eax, word ptr [ebp - 0x11c]
0x8049e65:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e68:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049e6c:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049e6f:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e72:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049e75:   eb 32                           	jmp 0x8049ea9 <func_1+0x6ae>
0x8049e77:   66 c7 85 e6 fe ff ff 05 00      	mov word ptr [ebp - 0x11a], 5
0x8049e80:   66 83 bd e6 fe ff ff 01         	cmp word ptr [ebp - 0x11a], 1
0x8049e88:   0f 95 c0                        	setne al
0x8049e8b:   0f b6 c8                        	movzx ecx, al
0x8049e8e:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049e94:   0f be c0                        	movsx eax, al
0x8049e97:   0f be 7d d7                     	movsx edi, byte ptr [ebp - 0x29]
0x8049e9b:   99                              	cdq 
0x8049e9c:   f7 ff                           	idiv edi
0x8049e9e:   39 c1                           	cmp ecx, eax
0x8049ea0:   0f 95 c0                        	setne al
0x8049ea3:   0f b6 c0                        	movzx eax, al
0x8049ea6:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049ea9:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049eb0:   0f 84 79 03 00 00               	je 0x804a22f <func_1+0xa34>
0x8049eb6:   c6 85 db fe ff ff fa            	mov byte ptr [ebp - 0x125], 0xfa
0x8049ebd:   c7 45 88 f7 ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffff7
0x8049ec4:   c7 45 d8 02 00 00 00            	mov dword ptr [ebp - 0x28], 2
0x8049ecb:   c7 45 8c 01 00 00 00            	mov dword ptr [ebp - 0x74], 1
0x8049ed2:   c7 45 9c 1a 00 00 00            	mov dword ptr [ebp - 0x64], 0x1a
0x8049ed9:   e9 42 03 00 00                  	jmp 0x804a220 <func_1+0xa25>
0x8049ede:   c7 85 d4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x12c], 0xfffffff9
0x8049ee8:   c7 85 d0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x130], 0
0x8049ef2:   66 c7 85 ce fe ff ff 54 82      	mov word ptr [ebp - 0x132], 0x8254
0x8049efb:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x8049f05:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049f09:   74 3d                           	je 0x8049f48 <func_1+0x74d>
0x8049f0b:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x8049f12:   0f b6 c0                        	movzx eax, al
0x8049f15:   ba 2a 00 00 00                  	mov edx, 0x2a
0x8049f1a:   89 c1                           	mov ecx, eax
0x8049f1c:   d3 fa                           	sar edx, cl
0x8049f1e:   89 d0                           	mov eax, edx
0x8049f20:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049f23:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049f26:   08 45 eb                        	or byte ptr [ebp - 0x15], al
0x8049f29:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049f2d:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049f30:   0f 9e c0                        	setle al
0x8049f33:   0f b6 d0                        	movzx edx, al
0x8049f36:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049f3d:   39 c2                           	cmp edx, eax
0x8049f3f:   7d 07                           	jge 0x8049f48 <func_1+0x74d>
0x8049f41:   ba 01 00 00 00                  	mov edx, 1
0x8049f46:   eb 05                           	jmp 0x8049f4d <func_1+0x752>
0x8049f48:   ba 00 00 00 00                  	mov edx, 0
0x8049f4d:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x8049f54:   21 d0                           	and eax, edx
0x8049f56:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x8049f5c:   0f 9c c0                        	setl al
0x8049f5f:   0f b6 d0                        	movzx edx, al
0x8049f62:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049f66:   39 c2                           	cmp edx, eax
0x8049f68:   74 77                           	je 0x8049fe1 <func_1+0x7e6>
0x8049f6a:   c7 85 c0 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x140], 1
0x8049f74:   0f bf 95 72 ff ff ff            	movsx edx, word ptr [ebp - 0x8e]
0x8049f7b:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x8049f82:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x8049f89:   83 e0 08                        	and eax, 8
0x8049f8c:   85 c0                           	test eax, eax
0x8049f8e:   74 07                           	je 0x8049f97 <func_1+0x79c>
0x8049f90:   b8 01 00 00 00                  	mov eax, 1
0x8049f95:   eb 05                           	jmp 0x8049f9c <func_1+0x7a1>
0x8049f97:   b8 00 00 00 00                  	mov eax, 0
0x8049f9c:   25 88 e9 c6 a1                  	and eax, 0xa1c6e988
0x8049fa1:   89 c1                           	mov ecx, eax
0x8049fa3:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049fa6:   39 c1                           	cmp ecx, eax
0x8049fa8:   0f 95 c0                        	setne al
0x8049fab:   0f b6 c0                        	movzx eax, al
0x8049fae:   0f af c2                        	imul eax, edx
0x8049fb1:   f7 d0                           	not eax
0x8049fb3:   83 c8 01                        	or eax, 1
0x8049fb6:   3d 93 f2 f5 2b                  	cmp eax, 0x2bf5f293
0x8049fbb:   7e 04                           	jle 0x8049fc1 <func_1+0x7c6>
0x8049fbd:   80 7d e9 00                     	cmp byte ptr [ebp - 0x17], 0
0x8049fc1:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049fc4:   8d 90 01 49 a6 1e               	lea edx, [eax + 0x1ea64901]
0x8049fca:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x8049fce:   39 c2                           	cmp edx, eax
0x8049fd0:   0f 95 c0                        	setne al
0x8049fd3:   0f b6 c0                        	movzx eax, al
0x8049fd6:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049fdc:   e9 cf 00 00 00                  	jmp 0x804a0b0 <func_1+0x8b5>
0x8049fe1:   c7 85 c4 fe ff ff ae b0 75 00   	mov dword ptr [ebp - 0x13c], 0x75b0ae
0x8049feb:   80 bd 6e ff ff ff 00            	cmp byte ptr [ebp - 0x92], 0
0x8049ff2:   75 5e                           	jne 0x804a052 <func_1+0x857>
0x8049ff4:   0f bf 85 72 ff ff ff            	movsx eax, word ptr [ebp - 0x8e]
0x8049ffb:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049ffe:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a001:   32 85 6f ff ff ff               	xor al, byte ptr [ebp - 0x91]
0x804a007:   0f be d0                        	movsx edx, al
0x804a00a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a00d:   0f be c0                        	movsx eax, al
0x804a010:   89 c1                           	mov ecx, eax
0x804a012:   d3 fa                           	sar edx, cl
0x804a014:   89 d0                           	mov eax, edx
0x804a016:   66 c1 e8 0c                     	shr ax, 0xc
0x804a01a:   3c 8a                           	cmp al, 0x8a
0x804a01c:   0f 93 c0                        	setae al
0x804a01f:   0f b6 c0                        	movzx eax, al
0x804a022:   66 39 45 ca                     	cmp word ptr [ebp - 0x36], ax
0x804a026:   72 10                           	jb 0x804a038 <func_1+0x83d>
0x804a028:   80 bd 17 ff ff ff 00            	cmp byte ptr [ebp - 0xe9], 0
0x804a02f:   74 07                           	je 0x804a038 <func_1+0x83d>
0x804a031:   b8 01 00 00 00                  	mov eax, 1
0x804a036:   eb 05                           	jmp 0x804a03d <func_1+0x842>
0x804a038:   b8 00 00 00 00                  	mov eax, 0
0x804a03d:   89 c2                           	mov edx, eax
0x804a03f:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a045:   01 c2                           	add edx, eax
0x804a047:   0f b6 85 db fe ff ff            	movzx eax, byte ptr [ebp - 0x125]
0x804a04e:   39 c2                           	cmp edx, eax
0x804a050:   72 07                           	jb 0x804a059 <func_1+0x85e>
0x804a052:   b8 01 00 00 00                  	mov eax, 1
0x804a057:   eb 05                           	jmp 0x804a05e <func_1+0x863>
0x804a059:   b8 00 00 00 00                  	mov eax, 0
0x804a05e:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a064:   b8 00 00 00 00                  	mov eax, 0
0x804a069:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804a06c:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a072:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a075:   0f 92 c0                        	setb al
0x804a078:   0f b6 c0                        	movzx eax, al
0x804a07b:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x804a07f:   0f b6 ca                        	movzx ecx, dl
0x804a082:   99                              	cdq 
0x804a083:   f7 f9                           	idiv ecx
0x804a085:   89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x804a088:   0f bf 85 72 ff ff ff            	movsx eax, word ptr [ebp - 0x8e]
0x804a08f:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a092:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a095:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a098:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x804a09f:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x804a0a5:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a0a9:   74 05                           	je 0x804a0b0 <func_1+0x8b5>
0x804a0ab:   e9 f2 fc ff ff                  	jmp 0x8049da2 <func_1+0x5a7>
0x804a0b0:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a0b6:   89 c2                           	mov edx, eax
0x804a0b8:   66 0f be 45 eb                  	movsx ax, byte ptr [ebp - 0x15]
0x804a0bd:   21 d0                           	and eax, edx
0x804a0bf:   66 c1 e8 08                     	shr ax, 8
0x804a0c3:   0f b6 c0                        	movzx eax, al
0x804a0c6:   c1 e0 07                        	shl eax, 7
0x804a0c9:   89 c2                           	mov edx, eax
0x804a0cb:   0f b6 85 db fe ff ff            	movzx eax, byte ptr [ebp - 0x125]
0x804a0d2:   39 c2                           	cmp edx, eax
0x804a0d4:   0f 94 c0                        	sete al
0x804a0d7:   0f b6 d0                        	movzx edx, al
0x804a0da:   83 bd d4 fe ff ff 00            	cmp dword ptr [ebp - 0x12c], 0
0x804a0e1:   0f 94 c0                        	sete al
0x804a0e4:   0f b6 c0                        	movzx eax, al
0x804a0e7:   39 c2                           	cmp edx, eax
0x804a0e9:   7f 54                           	jg 0x804a13f <func_1+0x944>
0x804a0eb:   0f be 85 17 ff ff ff            	movsx eax, byte ptr [ebp - 0xe9]
0x804a0f2:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a0f5:   83 ca 01                        	or edx, 1
0x804a0f8:   39 d0                           	cmp eax, edx
0x804a0fa:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x804a100:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x804a104:   0f b6 8d 71 ff ff ff            	movzx ecx, byte ptr [ebp - 0x8f]
0x804a10b:   99                              	cdq 
0x804a10c:   f7 f9                           	idiv ecx
0x804a10e:   89 55 90                        	mov dword ptr [ebp - 0x70], edx
0x804a111:   80 bd db fe ff ff 00            	cmp byte ptr [ebp - 0x125], 0
0x804a118:   74 04                           	je 0x804a11e <func_1+0x923>
0x804a11a:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a11e:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x804a125:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x804a12c:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a130:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a136:   83 75 c0 01                     	xor dword ptr [ebp - 0x40], 1
0x804a13a:   e9 dd 00 00 00                  	jmp 0x804a21c <func_1+0xa21>
0x804a13f:   c6 85 bf fe ff ff 01            	mov byte ptr [ebp - 0x141], 1
0x804a146:   c7 85 b8 fe ff ff e7 b6 3f 62   	mov dword ptr [ebp - 0x148], 0x623fb6e7
0x804a150:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a156:   0f be d0                        	movsx edx, al
0x804a159:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a15c:   0f be c0                        	movsx eax, al
0x804a15f:   01 d0                           	add eax, edx
0x804a161:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a164:   c6 45 bf ff                     	mov byte ptr [ebp - 0x41], 0xff
0x804a168:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x804a16f:   0f 9f c0                        	setg al
0x804a172:   0f b6 c0                        	movzx eax, al
0x804a175:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a178:   0f 96 c0                        	setbe al
0x804a17b:   0f b6 c0                        	movzx eax, al
0x804a17e:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a181:   80 bd bf fe ff ff 2d            	cmp byte ptr [ebp - 0x141], 0x2d
0x804a188:   0f 96 c0                        	setbe al
0x804a18b:   0f b6 c0                        	movzx eax, al
0x804a18e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a191:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x804a197:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a19a:   0f b6 55 b7                     	movzx edx, byte ptr [ebp - 0x49]
0x804a19e:   0f b6 85 bf fe ff ff            	movzx eax, byte ptr [ebp - 0x141]
0x804a1a5:   01 d0                           	add eax, edx
0x804a1a7:   0f b7 d0                        	movzx edx, ax
0x804a1aa:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a1ad:   0f b7 c0                        	movzx eax, ax
0x804a1b0:   01 d0                           	add eax, edx
0x804a1b2:   ba 00 00 00 00                  	mov edx, 0
0x804a1b7:   f7 75 b8                        	div dword ptr [ebp - 0x48]
0x804a1ba:   89 c2                           	mov edx, eax
0x804a1bc:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a1bf:   01 d0                           	add eax, edx
0x804a1c1:   23 85 c8 fe ff ff               	and eax, dword ptr [ebp - 0x138]
0x804a1c7:   89 c2                           	mov edx, eax
0x804a1c9:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a1cc:   31 d0                           	xor eax, edx
0x804a1ce:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a1d1:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x804a1d7:   f7 d8                           	neg eax
0x804a1d9:   0f be c0                        	movsx eax, al
0x804a1dc:   99                              	cdq 
0x804a1dd:   f7 7d 88                        	idiv dword ptr [ebp - 0x78]
0x804a1e0:   0f be c0                        	movsx eax, al
0x804a1e3:   01 c0                           	add eax, eax
0x804a1e5:   98                              	cwde 
0x804a1e6:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x804a1e9:   0f bf ca                        	movsx ecx, dx
0x804a1ec:   99                              	cdq 
0x804a1ed:   f7 f9                           	idiv ecx
0x804a1ef:   89 d0                           	mov eax, edx
0x804a1f1:   3d 49 74 56 d6                  	cmp eax, 0xd6567449
0x804a1f6:   77 06                           	ja 0x804a1fe <func_1+0xa03>
0x804a1f8:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a1fc:   74 07                           	je 0x804a205 <func_1+0xa0a>
0x804a1fe:   b8 01 00 00 00                  	mov eax, 1
0x804a203:   eb 05                           	jmp 0x804a20a <func_1+0xa0f>
0x804a205:   b8 00 00 00 00                  	mov eax, 0
0x804a20a:   3b 45 88                        	cmp eax, dword ptr [ebp - 0x78]
0x804a20d:   0f 9e c0                        	setle al
0x804a210:   0f b6 c0                        	movzx eax, al
0x804a213:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a216:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a219:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a21c:   83 6d 9c 01                     	sub dword ptr [ebp - 0x64], 1
0x804a220:   83 7d 9c 0c                     	cmp dword ptr [ebp - 0x64], 0xc
0x804a224:   0f 8f b4 fc ff ff               	jg 0x8049ede <func_1+0x6e3>
0x804a22a:   e9 d0 00 00 00                  	jmp 0x804a2ff <func_1+0xb04>
0x804a22f:   c6 85 e3 fe ff ff 81            	mov byte ptr [ebp - 0x11d], 0x81
0x804a236:   c7 85 dc fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x124], 0xfffffff9
0x804a240:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a244:   74 10                           	je 0x804a256 <func_1+0xa5b>
0x804a246:   80 bd e3 fe ff ff 00            	cmp byte ptr [ebp - 0x11d], 0
0x804a24d:   74 07                           	je 0x804a256 <func_1+0xa5b>
0x804a24f:   b8 01 00 00 00                  	mov eax, 1
0x804a254:   eb 05                           	jmp 0x804a25b <func_1+0xa60>
0x804a256:   b8 00 00 00 00                  	mov eax, 0
0x804a25b:   0f b6 c0                        	movzx eax, al
0x804a25e:   05 ff 00 00 00                  	add eax, 0xff
0x804a263:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a266:   0f 9f c0                        	setg al
0x804a269:   0f b6 c0                        	movzx eax, al
0x804a26c:   39 85 0c ff ff ff               	cmp dword ptr [ebp - 0xf4], eax
0x804a272:   0f 94 c0                        	sete al
0x804a275:   0f b6 c0                        	movzx eax, al
0x804a278:   f7 d8                           	neg eax
0x804a27a:   89 c2                           	mov edx, eax
0x804a27c:   0f b6 85 e3 fe ff ff            	movzx eax, byte ptr [ebp - 0x11d]
0x804a283:   31 d0                           	xor eax, edx
0x804a285:   31 85 dc fe ff ff               	xor dword ptr [ebp - 0x124], eax
0x804a28b:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a292:   0f b7 c0                        	movzx eax, ax
0x804a295:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a298:   80 6d b3 01                     	sub byte ptr [ebp - 0x4d], 1
0x804a29c:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a29f:   8d 50 ff                        	lea edx, [eax - 1]
0x804a2a2:   89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x804a2a5:   0f b6 95 71 ff ff ff            	movzx edx, byte ptr [ebp - 0x8f]
0x804a2ac:   39 d0                           	cmp eax, edx
0x804a2ae:   0f 96 c0                        	setbe al
0x804a2b1:   0f b6 c0                        	movzx eax, al
0x804a2b4:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a2b7:   eb 46                           	jmp 0x804a2ff <func_1+0xb04>
0x804a2b9:   c7 85 00 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffffe
0x804a2c3:   c7 85 fc fe ff ff bc 39 5b 68   	mov dword ptr [ebp - 0x104], 0x685b39bc
0x804a2cd:   80 bd 17 ff ff ff 00            	cmp byte ptr [ebp - 0xe9], 0
0x804a2d4:   80 bd 6e ff ff ff 00            	cmp byte ptr [ebp - 0x92], 0
0x804a2db:   74 07                           	je 0x804a2e4 <func_1+0xae9>
0x804a2dd:   b8 01 00 00 00                  	mov eax, 1
0x804a2e2:   eb 05                           	jmp 0x804a2e9 <func_1+0xaee>
0x804a2e4:   b8 00 00 00 00                  	mov eax, 0
0x804a2e9:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a2ec:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a2f0:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a2f3:   8b 85 00 ff ff ff               	mov eax, dword ptr [ebp - 0x100]
0x804a2f9:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804a2ff:   c7 45 a0 fc ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffffc
0x804a306:   c7 85 b4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x14c], 0xffffffff
0x804a310:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a314:   8b 8d 54 ff ff ff               	mov ecx, dword ptr [ebp - 0xac]
0x804a31a:   99                              	cdq 
0x804a31b:   f7 f9                           	idiv ecx
0x804a31d:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a321:   0b 45 90                        	or eax, dword ptr [ebp - 0x70]
0x804a324:   09 d0                           	or eax, edx
0x804a326:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a329:   0f b6 55 e3                     	movzx edx, byte ptr [ebp - 0x1d]
0x804a32d:   83 7d d0 06                     	cmp dword ptr [ebp - 0x30], 6
0x804a331:   0f 97 c0                        	seta al
0x804a334:   0f b6 c0                        	movzx eax, al
0x804a337:   01 d0                           	add eax, edx
0x804a339:   83 c8 f7                        	or eax, 0xfffffff7
0x804a33c:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x804a33f:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a342:   0f b6 c0                        	movzx eax, al
0x804a345:   69 c0 fc 00 00 00               	imul eax, eax, 0xfc
0x804a34b:   85 c0                           	test eax, eax
0x804a34d:   74 0e                           	je 0x804a35d <func_1+0xb62>
0x804a34f:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a355:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a358:   e9 ac 04 00 00                  	jmp 0x804a809 <func_1+0x100e>
0x804a35d:   66 c7 85 b2 fe ff ff 68 eb      	mov word ptr [ebp - 0x14e], 0xeb68
0x804a366:   c7 85 ac fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x154], 0xfffffff9
0x804a370:   83 6d a8 01                     	sub dword ptr [ebp - 0x58], 1
0x804a374:   0f be 55 eb                     	movsx edx, byte ptr [ebp - 0x15]
0x804a378:   66 0f be 45 bf                  	movsx ax, byte ptr [ebp - 0x41]
0x804a37d:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a381:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a388:   74 07                           	je 0x804a391 <func_1+0xb96>
0x804a38a:   b8 01 00 00 00                  	mov eax, 1
0x804a38f:   eb 05                           	jmp 0x804a396 <func_1+0xb9b>
0x804a391:   b8 00 00 00 00                  	mov eax, 0
0x804a396:   25 76 32 00 00                  	and eax, 0x3276
0x804a39b:   39 c2                           	cmp edx, eax
0x804a39d:   80 7d bf fe                     	cmp byte ptr [ebp - 0x41], 0xfe
0x804a3a1:   7c 09                           	jl 0x804a3ac <func_1+0xbb1>
0x804a3a3:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a3aa:   74 07                           	je 0x804a3b3 <func_1+0xbb8>
0x804a3ac:   b8 01 00 00 00                  	mov eax, 1
0x804a3b1:   eb 05                           	jmp 0x804a3b8 <func_1+0xbbd>
0x804a3b3:   b8 00 00 00 00                  	mov eax, 0
0x804a3b8:   89 85 ac fe ff ff               	mov dword ptr [ebp - 0x154], eax
0x804a3be:   e9 46 04 00 00                  	jmp 0x804a809 <func_1+0x100e>
0x804a3c3:   66 c7 85 3e ff ff ff 64 64      	mov word ptr [ebp - 0xc2], 0x6464
0x804a3cc:   c7 45 84 78 2c 3a b8            	mov dword ptr [ebp - 0x7c], 0xb83a2c78
0x804a3d3:   c7 85 38 ff ff ff c7 97 fa 4c   	mov dword ptr [ebp - 0xc8], 0x4cfa97c7
0x804a3dd:   66 c7 45 f2 ef ff               	mov word ptr [ebp - 0xe], 0xffef
0x804a3e3:   e9 0f 04 00 00                  	jmp 0x804a7f7 <func_1+0xffc>
0x804a3e8:   c6 85 37 ff ff ff f0            	mov byte ptr [ebp - 0xc9], 0xf0
0x804a3ef:   66 c7 85 34 ff ff ff e8 66      	mov word ptr [ebp - 0xcc], 0x66e8
0x804a3f8:   c7 45 80 f6 ff ff ff            	mov dword ptr [ebp - 0x80], 0xfffffff6
0x804a3ff:   c6 85 33 ff ff ff 01            	mov byte ptr [ebp - 0xcd], 1
0x804a406:   c7 85 2c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xd4], 0xfffffffb
0x804a410:   0f be 95 6f ff ff ff            	movsx edx, byte ptr [ebp - 0x91]
0x804a417:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a41a:   89 c3                           	mov ebx, eax
0x804a41c:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a41f:   0f b6 c0                        	movzx eax, al
0x804a422:   be 5c 00 00 00                  	mov esi, 0x5c
0x804a427:   89 c1                           	mov ecx, eax
0x804a429:   d3 fe                           	sar esi, cl
0x804a42b:   89 f0                           	mov eax, esi
0x804a42d:   66 31 45 b4                     	xor word ptr [ebp - 0x4c], ax
0x804a431:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a438:   0f 94 c0                        	sete al
0x804a43b:   88 45 bf                        	mov byte ptr [ebp - 0x41], al
0x804a43e:   0f b6 45 bf                     	movzx eax, byte ptr [ebp - 0x41]
0x804a442:   38 c3                           	cmp bl, al
0x804a444:   74 07                           	je 0x804a44d <func_1+0xc52>
0x804a446:   80 bd 37 ff ff ff 00            	cmp byte ptr [ebp - 0xc9], 0
0x804a44d:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x804a454:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a457:   0f 96 c0                        	setbe al
0x804a45a:   0f b6 c8                        	movzx ecx, al
0x804a45d:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x804a464:   39 c1                           	cmp ecx, eax
0x804a466:   0f 9e c0                        	setle al
0x804a469:   0f b6 c0                        	movzx eax, al
0x804a46c:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a46f:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a472:   0f b6 d8                        	movzx ebx, al
0x804a475:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a47c:   89 c1                           	mov ecx, eax
0x804a47e:   d3 fb                           	sar ebx, cl
0x804a480:   89 d9                           	mov ecx, ebx
0x804a482:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a489:   09 c8                           	or eax, ecx
0x804a48b:   39 c2                           	cmp edx, eax
0x804a48d:   66 81 bd 3e ff ff ff 1d c7      	cmp word ptr [ebp - 0xc2], 0xc71d
0x804a496:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a499:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x804a49c:   0f 94 c0                        	sete al
0x804a49f:   0f b6 c0                        	movzx eax, al
0x804a4a2:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a4a5:   c7 45 cc 00 00 00 00            	mov dword ptr [ebp - 0x34], 0
0x804a4ac:   e9 d4 02 00 00                  	jmp 0x804a785 <func_1+0xf8a>
0x804a4b1:   c6 85 2b ff ff ff 99            	mov byte ptr [ebp - 0xd5], 0x99
0x804a4b8:   c7 85 7c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x84], 1
0x804a4c2:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a4ca:   0f 84 ea 00 00 00               	je 0x804a5ba <func_1+0xdbf>
0x804a4d0:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a4d4:   0f bf 55 b4                     	movsx edx, word ptr [ebp - 0x4c]
0x804a4d8:   0f b6 4d b7                     	movzx ecx, byte ptr [ebp - 0x49]
0x804a4dc:   0f be 5d bf                     	movsx ebx, byte ptr [ebp - 0x41]
0x804a4e0:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a4e4:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a4ea:   0f be b5 6e ff ff ff            	movsx esi, byte ptr [ebp - 0x92]
0x804a4f1:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a4f7:   0f b6 bd 70 ff ff ff            	movzx edi, byte ptr [ebp - 0x90]
0x804a4fe:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a504:   0f be 75 d7                     	movsx esi, byte ptr [ebp - 0x29]
0x804a508:   89 b5 94 fe ff ff               	mov dword ptr [ebp - 0x16c], esi
0x804a50e:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x804a512:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a518:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a51c:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x804a522:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a529:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a52f:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a533:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a539:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x804a53d:   0f bf 75 f2                     	movsx esi, word ptr [ebp - 0xe]
0x804a541:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a544:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a54a:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a54d:   50                              	push eax
0x804a54e:   52                              	push edx
0x804a54f:   51                              	push ecx
0x804a550:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a553:   53                              	push ebx
0x804a554:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a557:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a55a:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a560:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a566:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a56c:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a572:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a575:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a578:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a57e:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a581:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a584:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a58a:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a590:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a596:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a599:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a59f:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a5a5:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5a8:   57                              	push edi
0x804a5a9:   56                              	push esi
0x804a5aa:   e8 77 f0 ff ff                  	call 0x8049626 <set_var>
0x804a5af:   83 c4 70                        	add esp, 0x70
0x804a5b2:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a5b5:   e9 7e 03 00 00                  	jmp 0x804a938 <func_1+0x113d>
0x804a5ba:   c6 85 2a ff ff ff b9            	mov byte ptr [ebp - 0xd6], 0xb9
0x804a5c1:   c7 85 24 ff ff ff e5 32 fa 83   	mov dword ptr [ebp - 0xdc], 0x83fa32e5
0x804a5cb:   80 6d b7 01                     	sub byte ptr [ebp - 0x49], 1
0x804a5cf:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a5d3:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a5d6:   0f 9e c0                        	setle al
0x804a5d9:   0f b6 d0                        	movzx edx, al
0x804a5dc:   0f be 85 2a ff ff ff            	movsx eax, byte ptr [ebp - 0xd6]
0x804a5e3:   39 c2                           	cmp edx, eax
0x804a5e5:   0f be 85 2b ff ff ff            	movsx eax, byte ptr [ebp - 0xd5]
0x804a5ec:   0b 45 c4                        	or eax, dword ptr [ebp - 0x3c]
0x804a5ef:   89 c2                           	mov edx, eax
0x804a5f1:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a5f5:   39 c2                           	cmp edx, eax
0x804a5f7:   0f 93 c0                        	setae al
0x804a5fa:   0f b6 d0                        	movzx edx, al
0x804a5fd:   0f be 85 2b ff ff ff            	movsx eax, byte ptr [ebp - 0xd5]
0x804a604:   39 c2                           	cmp edx, eax
0x804a606:   0f 9e c0                        	setle al
0x804a609:   0f b6 d0                        	movzx edx, al
0x804a60c:   0f be 85 6f ff ff ff            	movsx eax, byte ptr [ebp - 0x91]
0x804a613:   29 c2                           	sub edx, eax
0x804a615:   89 d0                           	mov eax, edx
0x804a617:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a61a:   75 06                           	jne 0x804a622 <func_1+0xe27>
0x804a61c:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a620:   74 07                           	je 0x804a629 <func_1+0xe2e>
0x804a622:   b8 01 00 00 00                  	mov eax, 1
0x804a627:   eb 05                           	jmp 0x804a62e <func_1+0xe33>
0x804a629:   b8 00 00 00 00                  	mov eax, 0
0x804a62e:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a631:   0f b6 8d 33 ff ff ff            	movzx ecx, byte ptr [ebp - 0xcd]
0x804a638:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x804a63f:   0f be 9d 2a ff ff ff            	movsx ebx, byte ptr [ebp - 0xd6]
0x804a646:   99                              	cdq 
0x804a647:   f7 fb                           	idiv ebx
0x804a649:   89 d0                           	mov eax, edx
0x804a64b:   39 c1                           	cmp ecx, eax
0x804a64d:   0f 9c c0                        	setl al
0x804a650:   0f b6 c0                        	movzx eax, al
0x804a653:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a656:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a659:   21 45 ac                        	and dword ptr [ebp - 0x54], eax
0x804a65c:   c6 45 e9 00                     	mov byte ptr [ebp - 0x17], 0
0x804a660:   e9 0f 01 00 00                  	jmp 0x804a774 <func_1+0xf79>
0x804a665:   c7 85 20 ff ff ff f5 44 ce 23   	mov dword ptr [ebp - 0xe0], 0x23ce44f5
0x804a66f:   c7 85 1c ff ff ff 21 f9 10 2e   	mov dword ptr [ebp - 0xe4], 0x2e10f921
0x804a679:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x804a67e:   0f 85 fc 00 00 00               	jne 0x804a780 <func_1+0xf85>
0x804a684:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a68b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a68e:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a695:   0f b6 d0                        	movzx edx, al
0x804a698:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x804a69f:   89 c1                           	mov ecx, eax
0x804a6a1:   d3 fa                           	sar edx, cl
0x804a6a3:   89 d0                           	mov eax, edx
0x804a6a5:   83 f8 01                        	cmp eax, 1
0x804a6a8:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a6ae:   09 45 84                        	or dword ptr [ebp - 0x7c], eax
0x804a6b1:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a6b4:   f7 d8                           	neg eax
0x804a6b6:   83 f0 08                        	xor eax, 8
0x804a6b9:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x804a6bf:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a6c2:   3b 85 24 ff ff ff               	cmp eax, dword ptr [ebp - 0xdc]
0x804a6c8:   0f 9f c0                        	setg al
0x804a6cb:   0f b6 d0                        	movzx edx, al
0x804a6ce:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x804a6d5:   0f af d0                        	imul edx, eax
0x804a6d8:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a6df:   39 c2                           	cmp edx, eax
0x804a6e1:   0f 9d c0                        	setge al
0x804a6e4:   0f b6 d0                        	movzx edx, al
0x804a6e7:   0f b6 85 71 ff ff ff            	movzx eax, byte ptr [ebp - 0x8f]
0x804a6ee:   09 d0                           	or eax, edx
0x804a6f0:   3d a0 00 00 00                  	cmp eax, 0xa0
0x804a6f5:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a6fb:   88 85 4f ff ff ff               	mov byte ptr [ebp - 0xb1], al
0x804a701:   0f b6 85 4f ff ff ff            	movzx eax, byte ptr [ebp - 0xb1]
0x804a708:   0f b6 c0                        	movzx eax, al
0x804a70b:   31 85 7c ff ff ff               	xor dword ptr [ebp - 0x84], eax
0x804a711:   83 65 9c 01                     	and dword ptr [ebp - 0x64], 1
0x804a715:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a718:   0f b6 c0                        	movzx eax, al
0x804a71b:   f7 d8                           	neg eax
0x804a71d:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804a721:   c7 85 1c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe4], 0
0x804a72b:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a731:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a734:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a737:   23 45 84                        	and eax, dword ptr [ebp - 0x7c]
0x804a73a:   89 c2                           	mov edx, eax
0x804a73c:   0f be 45 e9                     	movsx eax, byte ptr [ebp - 0x17]
0x804a740:   09 d0                           	or eax, edx
0x804a742:   21 45 80                        	and dword ptr [ebp - 0x80], eax
0x804a745:   8b 4d 80                        	mov ecx, dword ptr [ebp - 0x80]
0x804a748:   ba 1b 46 71 63                  	mov edx, 0x6371461b
0x804a74d:   89 c8                           	mov eax, ecx
0x804a74f:   f7 ea                           	imul edx
0x804a751:   c1 fa 1d                        	sar edx, 0x1d
0x804a754:   89 c8                           	mov eax, ecx
0x804a756:   c1 f8 1f                        	sar eax, 0x1f
0x804a759:   29 c2                           	sub edx, eax
0x804a75b:   89 d0                           	mov eax, edx
0x804a75d:   69 c0 c7 18 61 52               	imul eax, eax, 0x526118c7
0x804a763:   29 c1                           	sub ecx, eax
0x804a765:   89 c8                           	mov eax, ecx
0x804a767:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a76a:   0f b6 45 e9                     	movzx eax, byte ptr [ebp - 0x17]
0x804a76e:   83 e8 01                        	sub eax, 1
0x804a771:   88 45 e9                        	mov byte ptr [ebp - 0x17], al
0x804a774:   80 7d e9 eb                     	cmp byte ptr [ebp - 0x17], 0xeb
0x804a778:   0f 8d e7 fe ff ff               	jge 0x804a665 <func_1+0xe6a>
0x804a77e:   eb 01                           	jmp 0x804a781 <func_1+0xf86>
0x804a780:   90                              	nop 
0x804a781:   83 45 cc 03                     	add dword ptr [ebp - 0x34], 3
0x804a785:   83 7d cc 14                     	cmp dword ptr [ebp - 0x34], 0x14
0x804a789:   0f 84 22 fd ff ff               	je 0x804a4b1 <func_1+0xcb6>
0x804a78f:   c7 45 80 fe ff ff ff            	mov dword ptr [ebp - 0x80], 0xfffffffe
0x804a796:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a79a:   75 06                           	jne 0x804a7a2 <func_1+0xfa7>
0x804a79c:   80 7d b7 00                     	cmp byte ptr [ebp - 0x49], 0
0x804a7a0:   74 07                           	je 0x804a7a9 <func_1+0xfae>
0x804a7a2:   ba 01 00 00 00                  	mov edx, 1
0x804a7a7:   eb 05                           	jmp 0x804a7ae <func_1+0xfb3>
0x804a7a9:   ba 00 00 00 00                  	mov edx, 0
0x804a7ae:   0f bf 85 4c ff ff ff            	movsx eax, word ptr [ebp - 0xb4]
0x804a7b5:   01 d0                           	add eax, edx
0x804a7b7:   c1 e8 03                        	shr eax, 3
0x804a7ba:   ba 35 cc d5 26                  	mov edx, 0x26d5cc35
0x804a7bf:   f7 e2                           	mul edx
0x804a7c1:   89 d0                           	mov eax, edx
0x804a7c3:   c1 e8 19                        	shr eax, 0x19
0x804a7c6:   0f be c0                        	movsx eax, al
0x804a7c9:   ba 67 00 00 00                  	mov edx, 0x67
0x804a7ce:   29 c2                           	sub edx, eax
0x804a7d0:   89 d0                           	mov eax, edx
0x804a7d2:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x804a7d8:   77 07                           	ja 0x804a7e1 <func_1+0xfe6>
0x804a7da:   b8 01 00 00 00                  	mov eax, 1
0x804a7df:   eb 05                           	jmp 0x804a7e6 <func_1+0xfeb>
0x804a7e1:   b8 02 00 00 00                  	mov eax, 2
0x804a7e6:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a7ec:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a7f0:   83 c0 06                        	add eax, 6
0x804a7f3:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a7f7:   66 83 7d f2 f2                  	cmp word ptr [ebp - 0xe], -0xe
0x804a7fc:   0f 8d e6 fb ff ff               	jge 0x804a3e8 <func_1+0xbed>
0x804a802:   83 ad 38 ff ff ff 01            	sub dword ptr [ebp - 0xc8], 1
0x804a809:   80 6d b7 01                     	sub byte ptr [ebp - 0x49], 1
0x804a80d:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a811:   75 09                           	jne 0x804a81c <func_1+0x1021>
0x804a813:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a81a:   74 07                           	je 0x804a823 <func_1+0x1028>
0x804a81c:   bb 01 00 00 00                  	mov ebx, 1
0x804a821:   eb 05                           	jmp 0x804a828 <func_1+0x102d>
0x804a823:   bb 00 00 00 00                  	mov ebx, 0
0x804a828:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a82b:   c1 e8 1f                        	shr eax, 0x1f
0x804a82e:   0f b6 d0                        	movzx edx, al
0x804a831:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a835:   89 c1                           	mov ecx, eax
0x804a837:   d3 e2                           	shl edx, cl
0x804a839:   89 d0                           	mov eax, edx
0x804a83b:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a83e:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a842:   39 c3                           	cmp ebx, eax
0x804a844:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a847:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a84a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a84d:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a850:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a854:   0f bf 55 b4                     	movsx edx, word ptr [ebp - 0x4c]
0x804a858:   0f b6 4d b7                     	movzx ecx, byte ptr [ebp - 0x49]
0x804a85c:   0f be 5d bf                     	movsx ebx, byte ptr [ebp - 0x41]
0x804a860:   0f b7 7d ca                     	movzx edi, word ptr [ebp - 0x36]
0x804a864:   89 bd a0 fe ff ff               	mov dword ptr [ebp - 0x160], edi
0x804a86a:   0f be b5 6e ff ff ff            	movsx esi, byte ptr [ebp - 0x92]
0x804a871:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a877:   0f b6 bd 70 ff ff ff            	movzx edi, byte ptr [ebp - 0x90]
0x804a87e:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a884:   0f be 75 d7                     	movsx esi, byte ptr [ebp - 0x29]
0x804a888:   89 b5 94 fe ff ff               	mov dword ptr [ebp - 0x16c], esi
0x804a88e:   0f b6 7d e3                     	movzx edi, byte ptr [ebp - 0x1d]
0x804a892:   89 bd 90 fe ff ff               	mov dword ptr [ebp - 0x170], edi
0x804a898:   0f be 75 eb                     	movsx esi, byte ptr [ebp - 0x15]
0x804a89c:   89 b5 8c fe ff ff               	mov dword ptr [ebp - 0x174], esi
0x804a8a2:   0f bf bd 72 ff ff ff            	movsx edi, word ptr [ebp - 0x8e]
0x804a8a9:   89 bd 88 fe ff ff               	mov dword ptr [ebp - 0x178], edi
0x804a8af:   0f be 75 e9                     	movsx esi, byte ptr [ebp - 0x17]
0x804a8b3:   89 b5 84 fe ff ff               	mov dword ptr [ebp - 0x17c], esi
0x804a8b9:   0f be 7d ea                     	movsx edi, byte ptr [ebp - 0x16]
0x804a8bd:   0f bf 75 f2                     	movsx esi, word ptr [ebp - 0xe]
0x804a8c1:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a8c4:   ff b5 64 ff ff ff               	push dword ptr [ebp - 0x9c]
0x804a8ca:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a8cd:   50                              	push eax
0x804a8ce:   52                              	push edx
0x804a8cf:   51                              	push ecx
0x804a8d0:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a8d3:   53                              	push ebx
0x804a8d4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a8d7:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a8da:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a8e0:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a8e6:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a8ec:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a8f2:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a8f5:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a8f8:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a8fe:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a901:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a904:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a90a:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a910:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a916:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a919:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a91f:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a925:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a928:   57                              	push edi
0x804a929:   56                              	push esi
0x804a92a:   e8 f7 ec ff ff                  	call 0x8049626 <set_var>
0x804a92f:   83 c4 70                        	add esp, 0x70
0x804a932:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a938:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a93b:   5b                              	pop ebx
0x804a93c:   5e                              	pop esi
0x804a93d:   5f                              	pop edi
0x804a93e:   5d                              	pop ebp
0x804a93f:   c3                              	ret 
; function: main at 0x804a940 -- 0x804ad6e
0x804a940:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a944:   83 e4 f0                        	and esp, 0xfffffff0
0x804a947:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a94a:   55                              	push ebp
0x804a94b:   89 e5                           	mov ebp, esp
0x804a94d:   53                              	push ebx
0x804a94e:   51                              	push ecx
0x804a94f:   83 ec 10                        	sub esp, 0x10
0x804a952:   e8 39 da ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a957:   81 c3 a9 26 00 00               	add ebx, 0x26a9
0x804a95d:   89 c8                           	mov eax, ecx
0x804a95f:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a966:   83 38 02                        	cmp dword ptr [eax], 2
0x804a969:   75 26                           	jne 0x804a991 <main+0x51>
0x804a96b:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a96e:   83 c0 04                        	add eax, 4
0x804a971:   8b 00                           	mov eax, dword ptr [eax]
0x804a973:   83 ec 08                        	sub esp, 8
0x804a976:   8d 93 5a de ff ff               	lea edx, [ebx - 0x21a6]
0x804a97c:   52                              	push edx
0x804a97d:   50                              	push eax
0x804a97e:   e8 7d d9 ff ff                  	call 0x8048300 <strcmp>
0x804a983:   83 c4 10                        	add esp, 0x10
0x804a986:   85 c0                           	test eax, eax
0x804a988:   75 07                           	jne 0x804a991 <main+0x51>
0x804a98a:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a991:   e8 c0 da ff ff                  	call 0x8048456 <platform_main_begin>
0x804a996:   e8 d0 ea ff ff                  	call 0x804946b <crc32_gentab>
0x804a99b:   e8 5b ee ff ff                  	call 0x80497fb <func_1>
0x804a9a0:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a9a7:   0f b7 c0                        	movzx eax, ax
0x804a9aa:   83 ec 04                        	sub esp, 4
0x804a9ad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9b0:   8d 93 5c de ff ff               	lea edx, [ebx - 0x21a4]
0x804a9b6:   52                              	push edx
0x804a9b7:   50                              	push eax
0x804a9b8:   e8 ba eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9bd:   83 c4 10                        	add esp, 0x10
0x804a9c0:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804a9c7:   98                              	cwde 
0x804a9c8:   83 ec 04                        	sub esp, 4
0x804a9cb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ce:   8d 93 60 de ff ff               	lea edx, [ebx - 0x21a0]
0x804a9d4:   52                              	push edx
0x804a9d5:   50                              	push eax
0x804a9d6:   e8 9c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9db:   83 c4 10                        	add esp, 0x10
0x804a9de:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a9e5:   0f be c0                        	movsx eax, al
0x804a9e8:   83 ec 04                        	sub esp, 4
0x804a9eb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ee:   8d 93 65 de ff ff               	lea edx, [ebx - 0x219b]
0x804a9f4:   52                              	push edx
0x804a9f5:   50                              	push eax
0x804a9f6:   e8 7c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9fb:   83 c4 10                        	add esp, 0x10
0x804a9fe:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804aa04:   83 ec 04                        	sub esp, 4
0x804aa07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa0a:   8d 93 6a de ff ff               	lea edx, [ebx - 0x2196]
0x804aa10:   52                              	push edx
0x804aa11:   50                              	push eax
0x804aa12:   e8 60 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa17:   83 c4 10                        	add esp, 0x10
0x804aa1a:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aa20:   89 c2                           	mov edx, eax
0x804aa22:   83 ec 04                        	sub esp, 4
0x804aa25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa28:   8d 83 6f de ff ff               	lea eax, [ebx - 0x2191]
0x804aa2e:   50                              	push eax
0x804aa2f:   52                              	push edx
0x804aa30:   e8 42 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa35:   83 c4 10                        	add esp, 0x10
0x804aa38:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804aa3f:   0f be c0                        	movsx eax, al
0x804aa42:   83 ec 04                        	sub esp, 4
0x804aa45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa48:   8d 93 74 de ff ff               	lea edx, [ebx - 0x218c]
0x804aa4e:   52                              	push edx
0x804aa4f:   50                              	push eax
0x804aa50:   e8 22 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa55:   83 c4 10                        	add esp, 0x10
0x804aa58:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804aa5e:   83 ec 04                        	sub esp, 4
0x804aa61:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa64:   8d 93 79 de ff ff               	lea edx, [ebx - 0x2187]
0x804aa6a:   52                              	push edx
0x804aa6b:   50                              	push eax
0x804aa6c:   e8 06 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa71:   83 c4 10                        	add esp, 0x10
0x804aa74:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804aa7b:   98                              	cwde 
0x804aa7c:   83 ec 04                        	sub esp, 4
0x804aa7f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa82:   8d 93 7e de ff ff               	lea edx, [ebx - 0x2182]
0x804aa88:   52                              	push edx
0x804aa89:   50                              	push eax
0x804aa8a:   e8 e8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8f:   83 c4 10                        	add esp, 0x10
0x804aa92:   0f b6 83 3e 00 00 00            	movzx eax, byte ptr [ebx + 0x3e]
0x804aa99:   0f be c0                        	movsx eax, al
0x804aa9c:   83 ec 04                        	sub esp, 4
0x804aa9f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaa2:   8d 93 83 de ff ff               	lea edx, [ebx - 0x217d]
0x804aaa8:   52                              	push edx
0x804aaa9:   50                              	push eax
0x804aaaa:   e8 c8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaaf:   83 c4 10                        	add esp, 0x10
0x804aab2:   0f b6 83 3f 00 00 00            	movzx eax, byte ptr [ebx + 0x3f]
0x804aab9:   0f b6 c0                        	movzx eax, al
0x804aabc:   83 ec 04                        	sub esp, 4
0x804aabf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac2:   8d 93 88 de ff ff               	lea edx, [ebx - 0x2178]
0x804aac8:   52                              	push edx
0x804aac9:   50                              	push eax
0x804aaca:   e8 a8 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aacf:   83 c4 10                        	add esp, 0x10
0x804aad2:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aad8:   89 c2                           	mov edx, eax
0x804aada:   83 ec 04                        	sub esp, 4
0x804aadd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae0:   8d 83 8d de ff ff               	lea eax, [ebx - 0x2173]
0x804aae6:   50                              	push eax
0x804aae7:   52                              	push edx
0x804aae8:   e8 8a ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaed:   83 c4 10                        	add esp, 0x10
0x804aaf0:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aaf6:   89 c2                           	mov edx, eax
0x804aaf8:   83 ec 04                        	sub esp, 4
0x804aafb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aafe:   8d 83 92 de ff ff               	lea eax, [ebx - 0x216e]
0x804ab04:   50                              	push eax
0x804ab05:   52                              	push edx
0x804ab06:   e8 6c ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab0b:   83 c4 10                        	add esp, 0x10
0x804ab0e:   0f b6 83 48 00 00 00            	movzx eax, byte ptr [ebx + 0x48]
0x804ab15:   0f be c0                        	movsx eax, al
0x804ab18:   83 ec 04                        	sub esp, 4
0x804ab1b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab1e:   8d 93 97 de ff ff               	lea edx, [ebx - 0x2169]
0x804ab24:   52                              	push edx
0x804ab25:   50                              	push eax
0x804ab26:   e8 4c ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab2b:   83 c4 10                        	add esp, 0x10
0x804ab2e:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ab34:   83 ec 04                        	sub esp, 4
0x804ab37:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab3a:   8d 93 9d de ff ff               	lea edx, [ebx - 0x2163]
0x804ab40:   52                              	push edx
0x804ab41:   50                              	push eax
0x804ab42:   e8 30 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab47:   83 c4 10                        	add esp, 0x10
0x804ab4a:   b8 fe ff ff ff                  	mov eax, 0xfffffffe
0x804ab4f:   0f b6 c0                        	movzx eax, al
0x804ab52:   83 ec 04                        	sub esp, 4
0x804ab55:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab58:   8d 93 a3 de ff ff               	lea edx, [ebx - 0x215d]
0x804ab5e:   52                              	push edx
0x804ab5f:   50                              	push eax
0x804ab60:   e8 12 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab65:   83 c4 10                        	add esp, 0x10
0x804ab68:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ab6e:   89 c2                           	mov edx, eax
0x804ab70:   83 ec 04                        	sub esp, 4
0x804ab73:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab76:   8d 83 a9 de ff ff               	lea eax, [ebx - 0x2157]
0x804ab7c:   50                              	push eax
0x804ab7d:   52                              	push edx
0x804ab7e:   e8 f4 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab83:   83 c4 10                        	add esp, 0x10
0x804ab86:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804ab8d:   0f b6 c0                        	movzx eax, al
0x804ab90:   83 ec 04                        	sub esp, 4
0x804ab93:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab96:   8d 93 af de ff ff               	lea edx, [ebx - 0x2151]
0x804ab9c:   52                              	push edx
0x804ab9d:   50                              	push eax
0x804ab9e:   e8 d4 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804aba3:   83 c4 10                        	add esp, 0x10
0x804aba6:   b8 f7 ff ff ff                  	mov eax, 0xfffffff7
0x804abab:   0f be c0                        	movsx eax, al
0x804abae:   83 ec 04                        	sub esp, 4
0x804abb1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abb4:   8d 93 b5 de ff ff               	lea edx, [ebx - 0x214b]
0x804abba:   52                              	push edx
0x804abbb:   50                              	push eax
0x804abbc:   e8 b6 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abc1:   83 c4 10                        	add esp, 0x10
0x804abc4:   0f b6 83 55 00 00 00            	movzx eax, byte ptr [ebx + 0x55]
0x804abcb:   0f be c0                        	movsx eax, al
0x804abce:   83 ec 04                        	sub esp, 4
0x804abd1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abd4:   8d 93 bb de ff ff               	lea edx, [ebx - 0x2145]
0x804abda:   52                              	push edx
0x804abdb:   50                              	push eax
0x804abdc:   e8 96 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abe1:   83 c4 10                        	add esp, 0x10
0x804abe4:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804abeb:   0f b7 c0                        	movzx eax, ax
0x804abee:   83 ec 04                        	sub esp, 4
0x804abf1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abf4:   8d 93 c1 de ff ff               	lea edx, [ebx - 0x213f]
0x804abfa:   52                              	push edx
0x804abfb:   50                              	push eax
0x804abfc:   e8 76 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac01:   83 c4 10                        	add esp, 0x10
0x804ac04:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ac0a:   83 ec 04                        	sub esp, 4
0x804ac0d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac10:   8d 93 c7 de ff ff               	lea edx, [ebx - 0x2139]
0x804ac16:   52                              	push edx
0x804ac17:   50                              	push eax
0x804ac18:   e8 5a e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac1d:   83 c4 10                        	add esp, 0x10
0x804ac20:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ac26:   83 ec 04                        	sub esp, 4
0x804ac29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac2c:   8d 93 cd de ff ff               	lea edx, [ebx - 0x2133]
0x804ac32:   52                              	push edx
0x804ac33:   50                              	push eax
0x804ac34:   e8 3e e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac39:   83 c4 10                        	add esp, 0x10
0x804ac3c:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ac42:   83 ec 04                        	sub esp, 4
0x804ac45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac48:   8d 93 d3 de ff ff               	lea edx, [ebx - 0x212d]
0x804ac4e:   52                              	push edx
0x804ac4f:   50                              	push eax
0x804ac50:   e8 22 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac55:   83 c4 10                        	add esp, 0x10
0x804ac58:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804ac5f:   0f be c0                        	movsx eax, al
0x804ac62:   83 ec 04                        	sub esp, 4
0x804ac65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac68:   8d 93 d9 de ff ff               	lea edx, [ebx - 0x2127]
0x804ac6e:   52                              	push edx
0x804ac6f:   50                              	push eax
0x804ac70:   e8 02 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac75:   83 c4 10                        	add esp, 0x10
0x804ac78:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ac7e:   83 ec 04                        	sub esp, 4
0x804ac81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac84:   8d 93 df de ff ff               	lea edx, [ebx - 0x2121]
0x804ac8a:   52                              	push edx
0x804ac8b:   50                              	push eax
0x804ac8c:   e8 e6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac91:   83 c4 10                        	add esp, 0x10
0x804ac94:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804ac9b:   0f b6 c0                        	movzx eax, al
0x804ac9e:   83 ec 04                        	sub esp, 4
0x804aca1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca4:   8d 93 e5 de ff ff               	lea edx, [ebx - 0x211b]
0x804acaa:   52                              	push edx
0x804acab:   50                              	push eax
0x804acac:   e8 c6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acb1:   83 c4 10                        	add esp, 0x10
0x804acb4:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804acbb:   98                              	cwde 
0x804acbc:   83 ec 04                        	sub esp, 4
0x804acbf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acc2:   8d 93 eb de ff ff               	lea edx, [ebx - 0x2115]
0x804acc8:   52                              	push edx
0x804acc9:   50                              	push eax
0x804acca:   e8 a8 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804accf:   83 c4 10                        	add esp, 0x10
0x804acd2:   0f b6 83 6d 00 00 00            	movzx eax, byte ptr [ebx + 0x6d]
0x804acd9:   0f b6 c0                        	movzx eax, al
0x804acdc:   83 ec 04                        	sub esp, 4
0x804acdf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace2:   8d 93 f1 de ff ff               	lea edx, [ebx - 0x210f]
0x804ace8:   52                              	push edx
0x804ace9:   50                              	push eax
0x804acea:   e8 88 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acef:   83 c4 10                        	add esp, 0x10
0x804acf2:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804acf8:   89 c2                           	mov edx, eax
0x804acfa:   83 ec 04                        	sub esp, 4
0x804acfd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad00:   8d 83 f7 de ff ff               	lea eax, [ebx - 0x2109]
0x804ad06:   50                              	push eax
0x804ad07:   52                              	push edx
0x804ad08:   e8 6a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad0d:   83 c4 10                        	add esp, 0x10
0x804ad10:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804ad16:   83 ec 04                        	sub esp, 4
0x804ad19:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad1c:   8d 93 fd de ff ff               	lea edx, [ebx - 0x2103]
0x804ad22:   52                              	push edx
0x804ad23:   50                              	push eax
0x804ad24:   e8 4e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad29:   83 c4 10                        	add esp, 0x10
0x804ad2c:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804ad32:   83 ec 04                        	sub esp, 4
0x804ad35:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad38:   8d 93 03 df ff ff               	lea edx, [ebx - 0x20fd]
0x804ad3e:   52                              	push edx
0x804ad3f:   50                              	push eax
0x804ad40:   e8 32 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad45:   83 c4 10                        	add esp, 0x10
0x804ad48:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ad4e:   f7 d0                           	not eax
0x804ad50:   83 ec 08                        	sub esp, 8
0x804ad53:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad56:   50                              	push eax
0x804ad57:   e8 0a d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ad5c:   83 c4 10                        	add esp, 0x10
0x804ad5f:   b8 00 00 00 00                  	mov eax, 0
0x804ad64:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ad67:   59                              	pop ecx
0x804ad68:   5b                              	pop ebx
0x804ad69:   5d                              	pop ebp
0x804ad6a:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ad6d:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ad6e -- 0x804ad72
0x804ad6e:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ad71:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ad72 -- 0x804ad76
0x804ad72:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ad75:   c3                              	ret 
; data inside code section at 0x804ad76 -- 0x804ad80
0x804ad76:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804ad80 -- 0x804addd
0x804ad80:   55                              	push ebp
0x804ad81:   57                              	push edi
0x804ad82:   56                              	push esi
0x804ad83:   53                              	push ebx
0x804ad84:   e8 07 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad89:   81 c3 77 22 00 00               	add ebx, 0x2277
0x804ad8f:   83 ec 0c                        	sub esp, 0xc
0x804ad92:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ad96:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ad9c:   e8 2b d5 ff ff                  	call 0x80482cc <_init>
0x804ada1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ada7:   29 c6                           	sub esi, eax
0x804ada9:   c1 fe 02                        	sar esi, 2
0x804adac:   85 f6                           	test esi, esi
0x804adae:   74 25                           	je 0x804add5 <__libc_csu_init+0x55>
0x804adb0:   31 ff                           	xor edi, edi
0x804adb2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804adb8:   83 ec 04                        	sub esp, 4
0x804adbb:   55                              	push ebp
0x804adbc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804adc0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804adc4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804adcb:   83 c7 01                        	add edi, 1
0x804adce:   83 c4 10                        	add esp, 0x10
0x804add1:   39 fe                           	cmp esi, edi
0x804add3:   75 e3                           	jne 0x804adb8 <__libc_csu_init+0x38>
0x804add5:   83 c4 0c                        	add esp, 0xc
0x804add8:   5b                              	pop ebx
0x804add9:   5e                              	pop esi
0x804adda:   5f                              	pop edi
0x804addb:   5d                              	pop ebp
0x804addc:   c3                              	ret 
; data inside code section at 0x804addd -- 0x804ade0
0x804addd:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ade0 -- 0x804ade2
0x804ade0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ade4 -- 0x804adf8
0x804ade4:   53                              	push ebx
0x804ade5:   83 ec 08                        	sub esp, 8
0x804ade8:   e8 a3 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aded:   81 c3 13 22 00 00               	add ebx, 0x2213
0x804adf3:   83 c4 08                        	add esp, 8
0x804adf6:   5b                              	pop ebx
0x804adf7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 fc ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804adf8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ae08:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ae18:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ae28:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ae38:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ae48:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ae58:   fe f7 31 00 67 5f 32 00  67 5f 31 32 00 67 5f 33   |..1.g_2.g_12.g_3|
0x804ae68:   39 00 67 5f 34 30 00 67  5f 34 31 00 67 5f 34 32   |9.g_40.g_41.g_42|
0x804ae78:   00 67 5f 35 34 00 67 5f  37 30 00 67 5f 37 31 00   |.g_54.g_70.g_71.|
0x804ae88:   67 5f 37 32 00 67 5f 39  30 00 67 5f 39 35 00 67   |g_72.g_90.g_95.g|
0x804ae98:   5f 31 30 30 00 67 5f 31  30 31 00 67 5f 31 30 39   |_100.g_101.g_109|
0x804aea8:   00 67 5f 31 31 30 00 67  5f 31 32 32 00 67 5f 31   |.g_110.g_122.g_1|
0x804aeb8:   35 38 00 67 5f 31 36 37  00 67 5f 31 38 30 00 67   |58.g_167.g_180.g|
0x804aec8:   5f 32 30 34 00 67 5f 32  31 30 00 67 5f 32 31 35   |_204.g_210.g_215|
0x804aed8:   00 67 5f 32 32 34 00 67  5f 32 32 35 00 67 5f 32   |.g_224.g_225.g_2|
0x804aee8:   33 39 00 67 5f 32 36 35  00 67 5f 32 36 36 00 67   |39.g_265.g_266.g|
0x804aef8:   5f 32 37 37 00 67 5f 33  30 32 00 67 5f 33 32 39   |_277.g_302.g_329|
0x804af08:   00 00 00 00 00 00 00 3f  ff ff ff 7e 00 00 80 0d   |.......?...~....|
0x804af18:   00 00 80 31 ff ff 7f 3f  00 00 00 27 00 00 80 71   |...1...?...'...q|
0x804af28:   ff ff ff 34 00 00 00 00  00 00 00 00 00 00 e0 3f   |...4...........?|
0x804af38:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804af48:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804af58:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804af68:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804af78:   01                                                 |.               |
; section: .eh_frame_hdr
0x804af78:   01 1b 03 3b b8 02 00 00  56 00 00 00 78 d3 ff ff   |...;....V...x...|
0x804af88:   e8 02 00 00 b8 d3 ff ff  0c 03 00 00 08 d4 ff ff   |................|
0x804af98:   d4 02 00 00 de d4 ff ff  20 03 00 00 ee d4 ff ff   |........ .......|
0x804afa8:   40 03 00 00 1c d5 ff ff  64 03 00 00 3a d5 ff ff   |@.......d...:...|
0x804afb8:   84 03 00 00 62 d5 ff ff  a4 03 00 00 8c d5 ff ff   |....b...........|
0x804afc8:   c4 03 00 00 b5 d5 ff ff  e4 03 00 00 f8 d5 ff ff   |................|
0x804afd8:   04 04 00 00 39 d6 ff ff  24 04 00 00 91 d6 ff ff   |....9...$.......|
0x804afe8:   48 04 00 00 e3 d6 ff ff  6c 04 00 00 20 d7 ff ff   |H.......l... ...|
0x804aff8:   8c 04 00 00 57 d7 ff ff  ac 04 00 00 76 d7 ff ff   |....W.......v...|
0x804b008:   cc 04 00 00 a0 d7 ff ff  ec 04 00 00 cc d7 ff ff   |................|
0x804b018:   0c 05 00 00 f7 d7 ff ff  2c 05 00 00 40 d8 ff ff   |........,...@...|
0x804b028:   4c 05 00 00 87 d8 ff ff  6c 05 00 00 e1 d8 ff ff   |L.......l.......|
0x804b038:   90 05 00 00 35 d9 ff ff  b4 05 00 00 74 d9 ff ff   |....5.......t...|
0x804b048:   d4 05 00 00 ad d9 ff ff  f4 05 00 00 cf d9 ff ff   |................|
0x804b058:   14 06 00 00 1d da ff ff  34 06 00 00 59 da ff ff   |........4...Y...|
0x804b068:   54 06 00 00 e2 da ff ff  74 06 00 00 14 db ff ff   |T.......t.......|
0x804b078:   94 06 00 00 44 db ff ff  b4 06 00 00 89 db ff ff   |....D...........|
0x804b088:   d4 06 00 00 c8 db ff ff  f4 06 00 00 fa db ff ff   |................|
0x804b098:   14 07 00 00 26 dc ff ff  34 07 00 00 44 dc ff ff   |....&...4...D...|
0x804b0a8:   54 07 00 00 6c dc ff ff  74 07 00 00 91 dc ff ff   |T...l...t.......|
0x804b0b8:   94 07 00 00 b6 dc ff ff  b4 07 00 00 ed dc ff ff   |................|
0x804b0c8:   d4 07 00 00 21 dd ff ff  f4 07 00 00 73 dd ff ff   |....!.......s...|
0x804b0d8:   18 08 00 00 bf dd ff ff  3c 08 00 00 f6 dd ff ff   |........<.......|
0x804b0e8:   5c 08 00 00 27 de ff ff  7c 08 00 00 46 de ff ff   |\...'...|...F...|
0x804b0f8:   9c 08 00 00 70 de ff ff  bc 08 00 00 98 de ff ff   |....p...........|
0x804b108:   dc 08 00 00 c1 de ff ff  fc 08 00 00 fd de ff ff   |................|
0x804b118:   1c 09 00 00 37 df ff ff  3c 09 00 00 8a df ff ff   |....7...<.......|
0x804b128:   60 09 00 00 d7 df ff ff  84 09 00 00 0f e0 ff ff   |`...............|
0x804b138:   a4 09 00 00 41 e0 ff ff  c4 09 00 00 55 e0 ff ff   |....A.......U...|
0x804b148:   e4 09 00 00 6c e0 ff ff  04 0a 00 00 81 e0 ff ff   |....l...........|
0x804b158:   24 0a 00 00 97 e0 ff ff  44 0a 00 00 be e0 ff ff   |$.......D.......|
0x804b168:   64 0a 00 00 e3 e0 ff ff  84 0a 00 00 22 e1 ff ff   |d..........."...|
0x804b178:   a4 0a 00 00 5b e1 ff ff  c4 0a 00 00 87 e1 ff ff   |....[...........|
0x804b188:   e4 0a 00 00 ad e1 ff ff  04 0b 00 00 ef e1 ff ff   |................|
0x804b198:   24 0b 00 00 31 e2 ff ff  44 0b 00 00 73 e2 ff ff   |$...1...D...s...|
0x804b1a8:   64 0b 00 00 e8 e2 ff ff  84 0b 00 00 45 e3 ff ff   |d...........E...|
0x804b1b8:   a4 0b 00 00 a2 e3 ff ff  c4 0b 00 00 ff e3 ff ff   |................|
0x804b1c8:   e4 0b 00 00 8f e4 ff ff  04 0c 00 00 f3 e4 ff ff   |................|
0x804b1d8:   24 0c 00 00 63 e5 ff ff  44 0c 00 00 aa e5 ff ff   |$...c...D.......|
0x804b1e8:   68 0c 00 00 ff e5 ff ff  88 0c 00 00 46 e6 ff ff   |h...........F...|
0x804b1f8:   ac 0c 00 00 ae e6 ff ff  d0 0c 00 00 83 e8 ff ff   |................|
0x804b208:   00 0d 00 00 c8 f9 ff ff  30 0d 00 00 f6 fd ff ff   |........0.......|
0x804b218:   68 0d 00 00 fa fd ff ff  7c 0d 00 00 08 fe ff ff   |h.......|.......|
0x804b228:   90 0d 00 00 68 fe ff ff  dc 0d 00 00 14            |....h........   |
; section: .eh_frame
0x804b234:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b244:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b254:   2c d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |,........... ...|
0x804b264:   30 00 00 00 88 d0 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b274:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b284:   10 00 00 00 54 00 00 00  a4 d0 ff ff 08 00 00 00   |....T...........|
0x804b294:   00 00 00 00 1c 00 00 00  68 00 00 00 b6 d1 ff ff   |........h.......|
0x804b2a4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b2b4:   04 04 00 00 20 00 00 00  88 00 00 00 a6 d1 ff ff   |.... ...........|
0x804b2c4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b2d4:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b2e4:   b0 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b2f4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b304:   ae d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b314:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b324:   b6 d1 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b334:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b344:   c0 d1 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b354:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b364:   c9 d1 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b374:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b384:   ec d1 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b394:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b3a4:   0d d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b3b4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b3c4:   90 01 00 00 41 d2 ff ff  52 00 00 00 00 41 0e 08   |....A...R....A..|
0x804b3d4:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b3e4:   1c 00 00 00 b4 01 00 00  6f d2 ff ff 3d 00 00 00   |........o...=...|
0x804b3f4:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b404:   1c 00 00 00 d4 01 00 00  8c d2 ff ff 37 00 00 00   |............7...|
0x804b414:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b424:   1c 00 00 00 f4 01 00 00  a3 d2 ff ff 1f 00 00 00   |................|
0x804b434:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b444:   1c 00 00 00 14 02 00 00  a2 d2 ff ff 2a 00 00 00   |............*...|
0x804b454:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b464:   1c 00 00 00 34 02 00 00  ac d2 ff ff 2c 00 00 00   |....4.......,...|
0x804b474:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b484:   1c 00 00 00 54 02 00 00  b8 d2 ff ff 2b 00 00 00   |....T.......+...|
0x804b494:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b4a4:   1c 00 00 00 74 02 00 00  c3 d2 ff ff 49 00 00 00   |....t.......I...|
0x804b4b4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b4c4:   1c 00 00 00 94 02 00 00  ec d2 ff ff 47 00 00 00   |............G...|
0x804b4d4:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b4e4:   20 00 00 00 b4 02 00 00  13 d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b4f4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b504:   c5 0c 04 04 20 00 00 00  d8 02 00 00 49 d3 ff ff   |.... .......I...|
0x804b514:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b524:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b534:   79 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |y...?....A....B.|
0x804b544:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b554:   98 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b564:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b574:   b1 d3 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b584:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b594:   b3 d3 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b5a4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b5b4:   e1 d3 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b5c4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b5d4:   fd d3 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5e4:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b5f4:   66 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |f...2....A....B.|
0x804b604:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b614:   78 d4 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |x...0....A....B.|
0x804b624:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b634:   88 d4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b644:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b654:   ad d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b664:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b674:   cc d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b684:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b694:   de d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b6a4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b6b4:   ea d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6c4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b6d4:   e8 d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b6e4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b6f4:   f0 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b704:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b714:   f5 d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b724:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b734:   fa d4 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b744:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b754:   11 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b764:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b774:   25 d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |%...R....A....B.|
0x804b784:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b794:   60 05 00 00 53 d5 ff ff  4c 00 00 00 00 41 0e 08   |`...S...L....A..|
0x804b7a4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b7b4:   1c 00 00 00 84 05 00 00  7b d5 ff ff 37 00 00 00   |........{...7...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b7d4:   1c 00 00 00 a4 05 00 00  92 d5 ff ff 31 00 00 00   |............1...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b7f4:   1c 00 00 00 c4 05 00 00  a3 d5 ff ff 1f 00 00 00   |................|
0x804b804:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b814:   1c 00 00 00 e4 05 00 00  a2 d5 ff ff 2a 00 00 00   |............*...|
0x804b824:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b834:   1c 00 00 00 04 06 00 00  ac d5 ff ff 28 00 00 00   |............(...|
0x804b844:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b854:   1c 00 00 00 24 06 00 00  b4 d5 ff ff 29 00 00 00   |....$.......)...|
0x804b864:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b874:   1c 00 00 00 44 06 00 00  bd d5 ff ff 3c 00 00 00   |....D.......<...|
0x804b884:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b894:   1c 00 00 00 64 06 00 00  d9 d5 ff ff 3a 00 00 00   |....d.......:...|
0x804b8a4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b8b4:   20 00 00 00 84 06 00 00  f3 d5 ff ff 53 00 00 00   | ...........S...|
0x804b8c4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b8d4:   c5 0c 04 04 20 00 00 00  a8 06 00 00 22 d6 ff ff   |.... ......."...|
0x804b8e4:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b8f4:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b904:   4b d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |K...8....A....B.|
0x804b914:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b924:   63 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |c...2....A....B.|
0x804b934:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b944:   75 d6 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804b954:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b964:   69 d6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |i........A....B.|
0x804b974:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b984:   60 d6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |`........A....B.|
0x804b994:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b9a4:   55 d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804b9b4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b9c4:   4b d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |K...'....A....B.|
0x804b9d4:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b9e4:   52 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |R...%....A....B.|
0x804b9f4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804ba04:   57 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |W...?....A....B.|
0x804ba14:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804ba24:   76 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |v...9....A....B.|
0x804ba34:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804ba44:   8f d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804ba54:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804ba64:   9b d6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804ba74:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804ba84:   a1 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba94:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804baa4:   c3 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bab4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bac4:   e5 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bad4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bae4:   07 d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804baf4:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bb04:   5c d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |\...]....A....B.|
0x804bb14:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bb24:   99 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb34:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bb44:   d6 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bb54:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bb64:   13 d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb74:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bb84:   83 d8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bb94:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bba4:   c7 d8 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bbb4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bbc4:   17 d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bbd4:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bbe4:   b0 09 00 00 3a d9 ff ff  55 00 00 00 00 41 0e 08   |....:...U....A..|
0x804bbf4:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bc04:   d0 09 00 00 6f d9 ff ff  47 00 00 00 00 41 0e 08   |....o...G....A..|
0x804bc14:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bc24:   20 00 00 00 f4 09 00 00  92 d9 ff ff 68 00 00 00   | ...........h...|
0x804bc34:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bc44:   0c 04 04 00 2c 00 00 00  18 0a 00 00 d6 d9 ff ff   |....,...........|
0x804bc54:   d5 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804bc64:   86 04 83 05 03 c8 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bc74:   04 00 00 00 2c 00 00 00  48 0a 00 00 7b db ff ff   |....,...H...{...|
0x804bc84:   45 11 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |E....A....B..I..|
0x804bc94:   86 04 83 05 03 35 11 c3  41 c6 41 c7 41 c5 0c 04   |.....5..A.A.A...|
0x804bca4:   04 00 00 00 34 00 00 00  78 0a 00 00 90 ec ff ff   |....4...x.......|
0x804bcb4:   2e 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bcc4:   0f 03 75 78 06 10 03 02  75 7c 03 19 04 c1 0c 01   |..ux....u|......|
0x804bcd4:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bce4:   b0 0a 00 00 86 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bcf4:   10 00 00 00 c4 0a 00 00  76 f0 ff ff 04 00 00 00   |........v.......|
0x804bd04:   00 00 00 00 48 00 00 00  d8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804bd14:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bd24:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bd34:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bd44:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bd54:   10 00 00 00 24 0b 00 00  84 f0 ff ff 02 00 00 00   |....$...........|
0x804bd64:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 e4 ad 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff b3 7c 01 00   |.............|..|
0x804d028:   ff 00 00 00 e8 da 6b d8  fa ff ff ff ff 00 00 00   |......k.........|
0x804d038:   fe ff ff ff 09 00 3f c7  d9 32 ca 6b 05 00 00 00   |......?..2.k....|
0x804d048:   4c 00 00 00 31 94 35 87  04 26 d7 44 e3 ff 01 00   |L...1.5..&.D....|
0x804d058:   71 51 26 6d b1 0d cd 13  ff ff ff ff b3 00 00 00   |qQ&m............|
0x804d068:   ae 24 04 49 01 fa 00 00  f9 ff ff ff 4f 88 b1 1b   |.$.I........O...|
0x804d078:   ??                                                 |?               |
