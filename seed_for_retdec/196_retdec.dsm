;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:00:20
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 50 db ff ff               	lea eax, [ebx - 0x24b0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 f0 da ff ff               	lea eax, [ebx - 0x2510]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 5c a6 04 08               	mov eax, 0x804a65c
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 d0 04 08                  	mov eax, 0x804d080
0x80483a5:   3d 80 d0 04 08                  	cmp eax, 0x804d080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 d0 04 08                  	push 0x804d080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 d0 04 08                  	mov eax, 0x804d080
0x80483e5:   2d 80 d0 04 08                  	sub eax, 0x804d080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 d0 04 08                  	push 0x804d080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 82 26 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 6e 26 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 70 db ff ff               	lea edx, [eax - 0x2490]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 41 26 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 23 26 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 fb 25 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 d1 25 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 a8 25 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 65 25 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 23 25 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 cb 24 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 7a 24 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 3d 24 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 06 24 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 e7 23 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 bd 23 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 91 23 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 66 23 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 1d 23 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 d5 22 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 7b 22 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 28 22 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 e9 21 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 b3 21 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 91 21 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 43 21 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 07 21 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 7e 20 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 4c 20 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 1c 20 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 d7 1f 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 98 1f 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 66 1f 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 37 1f 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 19 1f 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 f1 1e 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 cc 1e 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 a7 1e 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 70 1e 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 3b 1e 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 e9 1d 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 9e 1d 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 67 1d 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 36 1d 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 17 1d 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 ed 1c 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 c5 1c 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 9c 1c 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 60 1c 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 25 1c 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 d2 1b 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 86 1b 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 4e 1b 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 1f 1b 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 0b 1b 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 f4 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 df 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 c9 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 a2 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 7d 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 3e 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 05 1a 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 d9 19 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 b3 19 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 94 dc ff ff               	fld dword ptr [eax - 0x236c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 71 19 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 90 dc ff ff               	fld dword ptr [eax - 0x2370]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 94 dc ff ff               	fld dword ptr [eax - 0x236c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 2f 19 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 98 dc ff ff               	fld dword ptr [eax - 0x2368]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 9c dc ff ff               	fld dword ptr [eax - 0x2364]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a0 dc ff ff               	fld dword ptr [eax - 0x2360]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 ed 18 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a4 dc ff ff               	fld dword ptr [eax - 0x235c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a8 dc ff ff               	fld dword ptr [eax - 0x2358]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 ac dc ff ff               	fld dword ptr [eax - 0x2354]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 75 18 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b8 dc ff ff               	fld qword ptr [eax - 0x2348]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 18 18 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b0 dc ff ff               	fld qword ptr [eax - 0x2350]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b8 dc ff ff               	fld qword ptr [eax - 0x2348]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 bb 17 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c0 dc ff ff               	fld qword ptr [eax - 0x2340]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c8 dc ff ff               	fld qword ptr [eax - 0x2338]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d0 dc ff ff               	fld qword ptr [eax - 0x2330]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 5e 17 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d8 dc ff ff               	fld qword ptr [eax - 0x2328]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e0 dc ff ff               	fld qword ptr [eax - 0x2320]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 ce 16 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f0 dc ff ff               	fld dword ptr [eax - 0x2310]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 f4 dc ff ff               	fld dword ptr [eax - 0x230c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 6a 16 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 f9 15 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 b6 15 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 80 db ff ff               	lea eax, [ebx - 0x2480]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 a4 db ff ff               	lea eax, [ebx - 0x245c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049873
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 78                        	sub esp, 0x78
0x804962f:   e8 b0 14 00 00                  	call 0x804aae4 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 14                        	mov ebx, dword ptr [ebp + 0x14]
0x8049646:   8b 75 18                        	mov esi, dword ptr [ebp + 0x18]
0x8049649:   8b 7d 1c                        	mov edi, dword ptr [ebp + 0x1c]
0x804964c:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804964f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049652:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049655:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049658:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804965b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804965e:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049661:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049664:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049667:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804966a:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804966d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049670:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049673:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049676:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049679:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804967c:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804967f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049682:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049685:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049688:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x804968e:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049691:   8b 85 8c 00 00 00               	mov eax, dword ptr [ebp + 0x8c]
0x8049697:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804969d:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496a1:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496a4:   89 c8                           	mov eax, ecx
0x80496a6:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496aa:   89 d8                           	mov eax, ebx
0x80496ac:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496b0:   89 f0                           	mov eax, esi
0x80496b2:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496b5:   89 f8                           	mov eax, edi
0x80496b7:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496ba:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496be:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496c2:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c6:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496ca:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496ce:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496d2:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d6:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496d9:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496dd:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496e0:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e4:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e7:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496eb:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496ef:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f3:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496f7:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x80496fb:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496fe:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x8049702:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x8049705:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x8049709:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x804970c:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049713:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049716:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049719:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x804971f:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049723:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x8049729:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804972d:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049734:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049738:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x804973f:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049743:   88 82 2e 00 00 00               	mov byte ptr [edx + 0x2e], al
0x8049749:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x804974d:   88 82 2f 00 00 00               	mov byte ptr [edx + 0x2f], al
0x8049753:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049756:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x804975c:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804975f:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049765:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049768:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804976e:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049771:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049777:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804977a:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049780:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049784:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x804978b:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804978f:   66 89 82 46 00 00 00            	mov word ptr [edx + 0x46], ax
0x8049796:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049799:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804979f:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497a3:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x80497aa:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497ae:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x80497b4:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497b8:   88 82 4d 00 00 00               	mov byte ptr [edx + 0x4d], al
0x80497be:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497c2:   88 82 4e 00 00 00               	mov byte ptr [edx + 0x4e], al
0x80497c8:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497cc:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497d3:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497d7:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x80497de:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497e1:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x80497e7:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497ea:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497f0:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x80497f3:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497f9:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497fc:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049802:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049806:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x804980c:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804980f:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x8049815:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049818:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x804981e:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049821:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049827:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804982a:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x8049830:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049834:   88 82 ac 04 00 00               	mov byte ptr [edx + 0x4ac], al
0x804983a:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049840:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049846:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x804984c:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049852:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x8049856:   88 82 7c 00 00 00               	mov byte ptr [edx + 0x7c], al
0x804985c:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x8049860:   88 82 ad 04 00 00               	mov byte ptr [edx + 0x4ad], al
0x8049866:   b8 00 00 00 00                  	mov eax, 0
0x804986b:   83 c4 78                        	add esp, 0x78
0x804986e:   5b                              	pop ebx
0x804986f:   5e                              	pop esi
0x8049870:   5f                              	pop edi
0x8049871:   5d                              	pop ebp
0x8049872:   c3                              	ret 
; function: func_1 at 0x8049873 -- 0x804a65c
0x8049873:   55                              	push ebp
0x8049874:   89 e5                           	mov ebp, esp
0x8049876:   57                              	push edi
0x8049877:   56                              	push esi
0x8049878:   53                              	push ebx
0x8049879:   81 ec 0c 01 00 00               	sub esp, 0x10c
0x804987f:   e8 5c 12 00 00                  	call 0x804aae0 <__x86.get_pc_thunk.ax>
0x8049884:   05 7c 37 00 00                  	add eax, 0x377c
0x8049889:   c7 45 f0 d3 3d 31 ad            	mov dword ptr [ebp - 0x10], 0xad313dd3
0x8049890:   c6 45 db c4                     	mov byte ptr [ebp - 0x25], 0xc4
0x8049894:   66 c7 45 d8 f6 ff               	mov word ptr [ebp - 0x28], 0xfff6
0x804989a:   66 c7 45 d6 9d 2c               	mov word ptr [ebp - 0x2a], 0x2c9d
0x80498a0:   c6 45 d5 ff                     	mov byte ptr [ebp - 0x2b], 0xff
0x80498a4:   c6 45 d4 ff                     	mov byte ptr [ebp - 0x2c], 0xff
0x80498a8:   c7 45 90 56 81 83 20            	mov dword ptr [ebp - 0x70], 0x20838156
0x80498af:   c7 45 8c f6 ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffff6
0x80498b6:   c7 45 88 9b 4d 85 ee            	mov dword ptr [ebp - 0x78], 0xee854d9b
0x80498bd:   c7 45 84 5a 86 85 83            	mov dword ptr [ebp - 0x7c], 0x8385865a
0x80498c4:   c7 45 b4 ea cc c3 d4            	mov dword ptr [ebp - 0x4c], 0xd4c3ccea
0x80498cb:   66 c7 45 b2 fb ff               	mov word ptr [ebp - 0x4e], 0xfffb
0x80498d1:   66 c7 45 b0 f1 63               	mov word ptr [ebp - 0x50], 0x63f1
0x80498d7:   c7 45 ac 96 48 a2 64            	mov dword ptr [ebp - 0x54], 0x64a24896
0x80498de:   66 c7 45 aa 00 00               	mov word ptr [ebp - 0x56], 0
0x80498e4:   c6 45 a9 01                     	mov byte ptr [ebp - 0x57], 1
0x80498e8:   c6 45 a8 a4                     	mov byte ptr [ebp - 0x58], 0xa4
0x80498ec:   c6 45 a7 ff                     	mov byte ptr [ebp - 0x59], 0xff
0x80498f0:   66 c7 45 a4 34 df               	mov word ptr [ebp - 0x5c], 0xdf34
0x80498f6:   66 c7 45 ca ff ff               	mov word ptr [ebp - 0x36], 0xffff
0x80498fc:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049903:   c7 45 cc fc ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffffc
0x804990a:   c7 45 c0 f9 ff ff ff            	mov dword ptr [ebp - 0x40], 0xfffffff9
0x8049911:   c7 45 a0 8b 2f a3 b0            	mov dword ptr [ebp - 0x60], 0xb0a32f8b
0x8049918:   c6 45 9f 63                     	mov byte ptr [ebp - 0x61], 0x63
0x804991c:   c7 45 98 57 c2 89 f3            	mov dword ptr [ebp - 0x68], 0xf389c257
0x8049923:   c7 45 94 57 01 35 b1            	mov dword ptr [ebp - 0x6c], 0xb1350157
0x804992a:   c7 85 58 ff ff ff ad 29 c8 ab   	mov dword ptr [ebp - 0xa8], 0xabc829ad
0x8049934:   c7 85 54 ff ff ff 01 6f df 75   	mov dword ptr [ebp - 0xac], 0x75df6f01
0x804993e:   c6 45 83 00                     	mov byte ptr [ebp - 0x7d], 0
0x8049942:   c7 85 7c ff ff ff 33 45 82 9b   	mov dword ptr [ebp - 0x84], 0x9b824533
0x804994c:   c7 85 78 ff ff ff 41 d1 ee 13   	mov dword ptr [ebp - 0x88], 0x13eed141
0x8049956:   c6 85 77 ff ff ff fc            	mov byte ptr [ebp - 0x89], 0xfc
0x804995d:   c6 85 76 ff ff ff 00            	mov byte ptr [ebp - 0x8a], 0
0x8049964:   c7 45 dc 6e c5 db a3            	mov dword ptr [ebp - 0x24], 0xa3dbc56e
0x804996b:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x8049975:   c7 85 6c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x94], 0xffffffff
0x804997f:   c7 85 68 ff ff ff 64 ea 3d 41   	mov dword ptr [ebp - 0x98], 0x413dea64
0x8049989:   66 c7 85 66 ff ff ff 94 f6      	mov word ptr [ebp - 0x9a], 0xf694
0x8049992:   66 c7 85 64 ff ff ff f8 f0      	mov word ptr [ebp - 0x9c], 0xf0f8
0x804999b:   c7 85 60 ff ff ff 10 35 f9 da   	mov dword ptr [ebp - 0xa0], 0xdaf93510
0x80499a5:   c7 85 5c ff ff ff 2d 09 bb d3   	mov dword ptr [ebp - 0xa4], 0xd3bb092d
0x80499af:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x80499b6:   e9 fa 0a 00 00                  	jmp 0x804a4b5 <func_1+0xc42>
0x80499bb:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x80499c2:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x80499c9:   c7 45 e4 4b 29 70 bb            	mov dword ptr [ebp - 0x1c], 0xbb70294b
0x80499d0:   66 c7 45 e2 01 00               	mov word ptr [ebp - 0x1e], 1
0x80499d6:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499d9:   0f b7 c0                        	movzx eax, ax
0x80499dc:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x80499df:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80499e3:   75 07                           	jne 0x80499ec <func_1+0x179>
0x80499e5:   b8 72 07 00 00                  	mov eax, 0x772
0x80499ea:   eb 05                           	jmp 0x80499f1 <func_1+0x17e>
0x80499ec:   b8 71 07 00 00                  	mov eax, 0x771
0x80499f1:   3b 45 f0                        	cmp eax, dword ptr [ebp - 0x10]
0x80499f4:   0f 9c c0                        	setl al
0x80499f7:   0f b6 c0                        	movzx eax, al
0x80499fa:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049a00:   0f 97 c0                        	seta al
0x8049a03:   0f b6 d0                        	movzx edx, al
0x8049a06:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a09:   98                              	cwde 
0x8049a0a:   0f af c2                        	imul eax, edx
0x8049a0d:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049a10:   66 0f be 45 db                  	movsx ax, byte ptr [ebp - 0x25]
0x8049a15:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049a19:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a1c:   89 c2                           	mov edx, eax
0x8049a1e:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049a24:   c0 e8 03                        	shr al, 3
0x8049a27:   0f b6 c0                        	movzx eax, al
0x8049a2a:   29 c2                           	sub edx, eax
0x8049a2c:   0f b7 c2                        	movzx eax, dx
0x8049a2f:   69 c0 63 51 00 00               	imul eax, eax, 0x5163
0x8049a35:   c1 e8 10                        	shr eax, 0x10
0x8049a38:   66 c1 e8 0c                     	shr ax, 0xc
0x8049a3c:   66 69 c0 54 32                  	imul ax, ax, 0x3254
0x8049a41:   29 c2                           	sub edx, eax
0x8049a43:   89 d0                           	mov eax, edx
0x8049a45:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049a49:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049a4d:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049a51:   b8 00 00 00 00                  	mov eax, 0
0x8049a56:   08 45 d5                        	or byte ptr [ebp - 0x2b], al
0x8049a59:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049a5d:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x8049a60:   66 0f be 45 d4                  	movsx ax, byte ptr [ebp - 0x2c]
0x8049a65:   66 c1 e8 03                     	shr ax, 3
0x8049a69:   0f b7 c0                        	movzx eax, ax
0x8049a6c:   23 45 dc                        	and eax, dword ptr [ebp - 0x24]
0x8049a6f:   89 c2                           	mov edx, eax
0x8049a71:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x8049a75:   39 c2                           	cmp edx, eax
0x8049a77:   0f 9c c0                        	setl al
0x8049a7a:   89 c2                           	mov edx, eax
0x8049a7c:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049a82:   31 d0                           	xor eax, edx
0x8049a84:   0f b6 d0                        	movzx edx, al
0x8049a87:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049a8d:   0f b6 c0                        	movzx eax, al
0x8049a90:   89 c1                           	mov ecx, eax
0x8049a92:   d3 fa                           	sar edx, cl
0x8049a94:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a97:   39 c2                           	cmp edx, eax
0x8049a99:   0f 84 5f 06 00 00               	je 0x804a0fe <func_1+0x88b>
0x8049a9f:   c6 85 53 ff ff ff 00            	mov byte ptr [ebp - 0xad], 0
0x8049aa6:   c7 85 4c ff ff ff 1e 17 0d 1a   	mov dword ptr [ebp - 0xb4], 0x1a0d171e
0x8049ab0:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x8049aba:   c6 85 47 ff ff ff e1            	mov byte ptr [ebp - 0xb9], 0xe1
0x8049ac1:   c6 85 46 ff ff ff cf            	mov byte ptr [ebp - 0xba], 0xcf
0x8049ac8:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049acb:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ace:   0f 95 c0                        	setne al
0x8049ad1:   88 85 53 ff ff ff               	mov byte ptr [ebp - 0xad], al
0x8049ad7:   c7 85 6c ff ff ff 0d 16 00 00   	mov dword ptr [ebp - 0x94], 0x160d
0x8049ae1:   0f b6 45 d5                     	movzx eax, byte ptr [ebp - 0x2b]
0x8049ae5:   66 0f be d0                     	movsx dx, al
0x8049ae9:   6b d2 67                        	imul edx, edx, 0x67
0x8049aec:   66 c1 ea 08                     	shr dx, 8
0x8049af0:   d0 fa                           	sar dl, 1
0x8049af2:   c0 f8 07                        	sar al, 7
0x8049af5:   29 c2                           	sub edx, eax
0x8049af7:   89 d0                           	mov eax, edx
0x8049af9:   0f be c0                        	movsx eax, al
0x8049afc:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049aff:   0f 94 c0                        	sete al
0x8049b02:   0f b6 c0                        	movzx eax, al
0x8049b05:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049b08:   0f 97 c0                        	seta al
0x8049b0b:   0f b6 d0                        	movzx edx, al
0x8049b0e:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049b12:   39 c2                           	cmp edx, eax
0x8049b14:   0f 9c c0                        	setl al
0x8049b17:   22 45 d4                        	and al, byte ptr [ebp - 0x2c]
0x8049b1a:   89 c2                           	mov edx, eax
0x8049b1c:   c0 ea 07                        	shr dl, 7
0x8049b1f:   01 d0                           	add eax, edx
0x8049b21:   d0 f8                           	sar al, 1
0x8049b23:   f7 d8                           	neg eax
0x8049b25:   66 98                           	cbw 
0x8049b27:   f7 d8                           	neg eax
0x8049b29:   0f bf d0                        	movsx edx, ax
0x8049b2c:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049b2f:   98                              	cwde 
0x8049b30:   0f af d0                        	imul edx, eax
0x8049b33:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x8049b37:   01 d0                           	add eax, edx
0x8049b39:   3d 0d 16 00 00                  	cmp eax, 0x160d
0x8049b3e:   0f 95 c0                        	setne al
0x8049b41:   0a 45 d4                        	or al, byte ptr [ebp - 0x2c]
0x8049b44:   0f be d0                        	movsx edx, al
0x8049b47:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049b4d:   0f be c0                        	movsx eax, al
0x8049b50:   89 c1                           	mov ecx, eax
0x8049b52:   d3 e2                           	shl edx, cl
0x8049b54:   89 d0                           	mov eax, edx
0x8049b56:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b59:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b5d:   0f 85 5e 09 00 00               	jne 0x804a4c1 <func_1+0xc4e>
0x8049b63:   80 7d d5 00                     	cmp byte ptr [ebp - 0x2b], 0
0x8049b67:   0f 84 2e 05 00 00               	je 0x804a09b <func_1+0x828>
0x8049b6d:   c6 85 43 ff ff ff ef            	mov byte ptr [ebp - 0xbd], 0xef
0x8049b74:   c7 85 3c ff ff ff f3 1f 9a a5   	mov dword ptr [ebp - 0xc4], 0xa59a1ff3
0x8049b7e:   c6 85 3b ff ff ff c9            	mov byte ptr [ebp - 0xc5], 0xc9
0x8049b85:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x8049b8f:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049b93:   0f be c0                        	movsx eax, al
0x8049b96:   8d 48 01                        	lea ecx, [eax + 1]
0x8049b99:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b9c:   89 c2                           	mov edx, eax
0x8049b9e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049ba1:   89 c3                           	mov ebx, eax
0x8049ba3:   89 d0                           	mov eax, edx
0x8049ba5:   ba 00 00 00 00                  	mov edx, 0
0x8049baa:   66 f7 f3                        	div bx
0x8049bad:   0f b7 c0                        	movzx eax, ax
0x8049bb0:   39 c1                           	cmp ecx, eax
0x8049bb2:   0f 95 c0                        	setne al
0x8049bb5:   0f b6 c0                        	movzx eax, al
0x8049bb8:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049bbb:   66 c7 85 32 ff ff ff 0a 12      	mov word ptr [ebp - 0xce], 0x120a
0x8049bc4:   80 bd 43 ff ff ff 00            	cmp byte ptr [ebp - 0xbd], 0
0x8049bcb:   0f 94 c0                        	sete al
0x8049bce:   0f b6 c0                        	movzx eax, al
0x8049bd1:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049bd4:   81 7d 84 e8 6d b7 10            	cmp dword ptr [ebp - 0x7c], 0x10b76de8
0x8049bdb:   0f 94 c0                        	sete al
0x8049bde:   0f b6 c0                        	movzx eax, al
0x8049be1:   23 85 4c ff ff ff               	and eax, dword ptr [ebp - 0xb4]
0x8049be7:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x8049bea:   25 24 cf 00 00                  	and eax, 0xcf24
0x8049bef:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049bf2:   0f 94 c0                        	sete al
0x8049bf5:   0f b6 d0                        	movzx edx, al
0x8049bf8:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x8049bff:   21 d0                           	and eax, edx
0x8049c01:   0f be 4d d4                     	movsx ecx, byte ptr [ebp - 0x2c]
0x8049c05:   ba 00 00 00 00                  	mov edx, 0
0x8049c0a:   f7 f1                           	div ecx
0x8049c0c:   89 d0                           	mov eax, edx
0x8049c0e:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049c14:   c7 85 34 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xcc], 0
0x8049c1e:   66 c7 45 b2 00 00               	mov word ptr [ebp - 0x4e], 0
0x8049c24:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049c2a:   0d 44 75 fa ce                  	or eax, 0xcefa7544
0x8049c2f:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x8049c35:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049c3b:   0f bf d0                        	movsx edx, ax
0x8049c3e:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049c42:   98                              	cwde 
0x8049c43:   29 c2                           	sub edx, eax
0x8049c45:   89 d0                           	mov eax, edx
0x8049c47:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049c4a:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049c4d:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x8049c53:   0f be 45 d5                     	movsx eax, byte ptr [ebp - 0x2b]
0x8049c57:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x8049c5d:   0f 9c c0                        	setl al
0x8049c60:   0f b6 d0                        	movzx edx, al
0x8049c63:   0f bf 45 d8                     	movsx eax, word ptr [ebp - 0x28]
0x8049c67:   09 d0                           	or eax, edx
0x8049c69:   21 45 e8                        	and dword ptr [ebp - 0x18], eax
0x8049c6c:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x8049c73:   83 e0 01                        	and eax, 1
0x8049c76:   85 c0                           	test eax, eax
0x8049c78:   74 10                           	je 0x8049c8a <func_1+0x417>
0x8049c7a:   80 bd 43 ff ff ff 00            	cmp byte ptr [ebp - 0xbd], 0
0x8049c81:   74 07                           	je 0x8049c8a <func_1+0x417>
0x8049c83:   b8 01 00 00 00                  	mov eax, 1
0x8049c88:   eb 05                           	jmp 0x8049c8f <func_1+0x41c>
0x8049c8a:   b8 00 00 00 00                  	mov eax, 0
0x8049c8f:   0f b6 c0                        	movzx eax, al
0x8049c92:   83 e8 01                        	sub eax, 1
0x8049c95:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049c98:   0f 85 50 01 00 00               	jne 0x8049dee <func_1+0x57b>
0x8049c9e:   c7 85 2c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd4], 0xffffffff
0x8049ca8:   66 c7 45 d8 00 00               	mov word ptr [ebp - 0x28], 0
0x8049cae:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x8049cb4:   c1 e8 1f                        	shr eax, 0x1f
0x8049cb7:   0f b6 c0                        	movzx eax, al
0x8049cba:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049cc0:   80 45 a7 01                     	add byte ptr [ebp - 0x59], 1
0x8049cc4:   0f be 85 76 ff ff ff            	movsx eax, byte ptr [ebp - 0x8a]
0x8049ccb:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x8049cd2:   0f b6 4d 83                     	movzx ecx, byte ptr [ebp - 0x7d]
0x8049cd6:   0f b6 5d 9f                     	movzx ebx, byte ptr [ebp - 0x61]
0x8049cda:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x8049cde:   89 b5 10 ff ff ff               	mov dword ptr [ebp - 0xf0], esi
0x8049ce4:   0f b7 7d a4                     	movzx edi, word ptr [ebp - 0x5c]
0x8049ce8:   89 bd 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edi
0x8049cee:   0f b6 75 a7                     	movzx esi, byte ptr [ebp - 0x59]
0x8049cf2:   89 b5 08 ff ff ff               	mov dword ptr [ebp - 0xf8], esi
0x8049cf8:   0f be 7d a8                     	movsx edi, byte ptr [ebp - 0x58]
0x8049cfc:   89 bd 04 ff ff ff               	mov dword ptr [ebp - 0xfc], edi
0x8049d02:   0f be 75 a9                     	movsx esi, byte ptr [ebp - 0x57]
0x8049d06:   89 b5 00 ff ff ff               	mov dword ptr [ebp - 0x100], esi
0x8049d0c:   0f bf 7d aa                     	movsx edi, word ptr [ebp - 0x56]
0x8049d10:   89 bd fc fe ff ff               	mov dword ptr [ebp - 0x104], edi
0x8049d16:   0f b7 75 b0                     	movzx esi, word ptr [ebp - 0x50]
0x8049d1a:   89 b5 f8 fe ff ff               	mov dword ptr [ebp - 0x108], esi
0x8049d20:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x8049d24:   89 bd f4 fe ff ff               	mov dword ptr [ebp - 0x10c], edi
0x8049d2a:   0f be 75 d4                     	movsx esi, byte ptr [ebp - 0x2c]
0x8049d2e:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x8049d34:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x8049d38:   89 bd ec fe ff ff               	mov dword ptr [ebp - 0x114], edi
0x8049d3e:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x8049d42:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x8049d48:   0f bf 7d d8                     	movsx edi, word ptr [ebp - 0x28]
0x8049d4c:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x8049d50:   50                              	push eax
0x8049d51:   52                              	push edx
0x8049d52:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049d58:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049d5e:   51                              	push ecx
0x8049d5f:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x8049d65:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049d6b:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049d6e:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049d71:   53                              	push ebx
0x8049d72:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049d75:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049d78:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049d7b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d7e:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x8049d84:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x8049d8a:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x8049d90:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x8049d96:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x8049d9c:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x8049da2:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049da5:   ff b5 f8 fe ff ff               	push dword ptr [ebp - 0x108]
0x8049dab:   ff b5 f4 fe ff ff               	push dword ptr [ebp - 0x10c]
0x8049db1:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049db4:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049db7:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049dba:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049dbd:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049dc0:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049dc6:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049dcc:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049dd2:   57                              	push edi
0x8049dd3:   56                              	push esi
0x8049dd4:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049dd7:   e8 4a f8 ff ff                  	call 0x8049626 <set_var>
0x8049ddc:   81 c4 88 00 00 00               	add esp, 0x88
0x8049de2:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x8049de9:   e9 66 08 00 00                  	jmp 0x804a654 <func_1+0xde1>
0x8049dee:   66 c7 85 30 ff ff ff 00 00      	mov word ptr [ebp - 0xd0], 0
0x8049df7:   0f be 85 53 ff ff ff            	movsx eax, byte ptr [ebp - 0xad]
0x8049dfe:   f7 d0                           	not eax
0x8049e00:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x8049e03:   85 c0                           	test eax, eax
0x8049e05:   75 06                           	jne 0x8049e0d <func_1+0x59a>
0x8049e07:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049e0b:   74 07                           	je 0x8049e14 <func_1+0x5a1>
0x8049e0d:   b8 01 00 00 00                  	mov eax, 1
0x8049e12:   eb 05                           	jmp 0x8049e19 <func_1+0x5a6>
0x8049e14:   b8 00 00 00 00                  	mov eax, 0
0x8049e19:   83 c0 07                        	add eax, 7
0x8049e1c:   83 f8 0e                        	cmp eax, 0xe
0x8049e1f:   76 2a                           	jbe 0x8049e4b <func_1+0x5d8>
0x8049e21:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x8049e25:   83 c0 01                        	add eax, 1
0x8049e28:   66 89 45 a4                     	mov word ptr [ebp - 0x5c], ax
0x8049e2c:   0f b6 85 47 ff ff ff            	movzx eax, byte ptr [ebp - 0xb9]
0x8049e33:   83 c0 01                        	add eax, 1
0x8049e36:   88 85 47 ff ff ff               	mov byte ptr [ebp - 0xb9], al
0x8049e3c:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049e40:   0f 84 2b 01 00 00               	je 0x8049f71 <func_1+0x6fe>
0x8049e46:   e9 7a 06 00 00                  	jmp 0x804a4c5 <func_1+0xc52>
0x8049e4b:   0f be 85 76 ff ff ff            	movsx eax, byte ptr [ebp - 0x8a]
0x8049e52:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x8049e59:   0f b6 4d 83                     	movzx ecx, byte ptr [ebp - 0x7d]
0x8049e5d:   0f b6 5d 9f                     	movzx ebx, byte ptr [ebp - 0x61]
0x8049e61:   0f bf 7d ca                     	movsx edi, word ptr [ebp - 0x36]
0x8049e65:   89 bd 10 ff ff ff               	mov dword ptr [ebp - 0xf0], edi
0x8049e6b:   0f b7 75 a4                     	movzx esi, word ptr [ebp - 0x5c]
0x8049e6f:   89 b5 0c ff ff ff               	mov dword ptr [ebp - 0xf4], esi
0x8049e75:   0f b6 7d a7                     	movzx edi, byte ptr [ebp - 0x59]
0x8049e79:   89 bd 08 ff ff ff               	mov dword ptr [ebp - 0xf8], edi
0x8049e7f:   0f be 75 a8                     	movsx esi, byte ptr [ebp - 0x58]
0x8049e83:   89 b5 04 ff ff ff               	mov dword ptr [ebp - 0xfc], esi
0x8049e89:   0f be 7d a9                     	movsx edi, byte ptr [ebp - 0x57]
0x8049e8d:   89 bd 00 ff ff ff               	mov dword ptr [ebp - 0x100], edi
0x8049e93:   0f bf 75 aa                     	movsx esi, word ptr [ebp - 0x56]
0x8049e97:   89 b5 fc fe ff ff               	mov dword ptr [ebp - 0x104], esi
0x8049e9d:   0f b7 7d b0                     	movzx edi, word ptr [ebp - 0x50]
0x8049ea1:   89 bd f8 fe ff ff               	mov dword ptr [ebp - 0x108], edi
0x8049ea7:   0f b7 75 b2                     	movzx esi, word ptr [ebp - 0x4e]
0x8049eab:   89 b5 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], esi
0x8049eb1:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x8049eb5:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x8049ebb:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x8049ebf:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x8049ec5:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x8049ec9:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x8049ecf:   0f bf 7d d8                     	movsx edi, word ptr [ebp - 0x28]
0x8049ed3:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x8049ed7:   50                              	push eax
0x8049ed8:   52                              	push edx
0x8049ed9:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x8049edf:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ee5:   51                              	push ecx
0x8049ee6:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x8049eec:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x8049ef2:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049ef5:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049ef8:   53                              	push ebx
0x8049ef9:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049efc:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049eff:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049f02:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049f05:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x8049f0b:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x8049f11:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x8049f17:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x8049f1d:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x8049f23:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x8049f29:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049f2c:   ff b5 f8 fe ff ff               	push dword ptr [ebp - 0x108]
0x8049f32:   ff b5 f4 fe ff ff               	push dword ptr [ebp - 0x10c]
0x8049f38:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049f3b:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049f3e:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x8049f41:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049f44:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x8049f47:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049f4d:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049f53:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049f59:   57                              	push edi
0x8049f5a:   56                              	push esi
0x8049f5b:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049f5e:   e8 c3 f6 ff ff                  	call 0x8049626 <set_var>
0x8049f63:   81 c4 88 00 00 00               	add esp, 0x88
0x8049f69:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049f6c:   e9 e3 06 00 00                  	jmp 0x804a654 <func_1+0xde1>
0x8049f71:   0f be 85 76 ff ff ff            	movsx eax, byte ptr [ebp - 0x8a]
0x8049f78:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x8049f7f:   0f b6 4d 83                     	movzx ecx, byte ptr [ebp - 0x7d]
0x8049f83:   0f b6 5d 9f                     	movzx ebx, byte ptr [ebp - 0x61]
0x8049f87:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x8049f8b:   89 b5 10 ff ff ff               	mov dword ptr [ebp - 0xf0], esi
0x8049f91:   0f b7 7d a4                     	movzx edi, word ptr [ebp - 0x5c]
0x8049f95:   89 bd 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edi
0x8049f9b:   0f b6 75 a7                     	movzx esi, byte ptr [ebp - 0x59]
0x8049f9f:   89 b5 08 ff ff ff               	mov dword ptr [ebp - 0xf8], esi
0x8049fa5:   0f be 7d a8                     	movsx edi, byte ptr [ebp - 0x58]
0x8049fa9:   89 bd 04 ff ff ff               	mov dword ptr [ebp - 0xfc], edi
0x8049faf:   0f be 75 a9                     	movsx esi, byte ptr [ebp - 0x57]
0x8049fb3:   89 b5 00 ff ff ff               	mov dword ptr [ebp - 0x100], esi
0x8049fb9:   0f bf 7d aa                     	movsx edi, word ptr [ebp - 0x56]
0x8049fbd:   89 bd fc fe ff ff               	mov dword ptr [ebp - 0x104], edi
0x8049fc3:   0f b7 75 b0                     	movzx esi, word ptr [ebp - 0x50]
0x8049fc7:   89 b5 f8 fe ff ff               	mov dword ptr [ebp - 0x108], esi
0x8049fcd:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x8049fd1:   89 bd f4 fe ff ff               	mov dword ptr [ebp - 0x10c], edi
0x8049fd7:   0f be 75 d4                     	movsx esi, byte ptr [ebp - 0x2c]
0x8049fdb:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x8049fe1:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x8049fe5:   89 bd ec fe ff ff               	mov dword ptr [ebp - 0x114], edi
0x8049feb:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x8049fef:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x8049ff5:   0f bf 7d d8                     	movsx edi, word ptr [ebp - 0x28]
0x8049ff9:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x8049ffd:   50                              	push eax
0x8049ffe:   52                              	push edx
0x8049fff:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a005:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a00b:   51                              	push ecx
0x804a00c:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a012:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a018:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a01b:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a01e:   53                              	push ebx
0x804a01f:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a022:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a025:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a028:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a02b:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a031:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a037:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a03d:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a043:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a049:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a04f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a052:   ff b5 f8 fe ff ff               	push dword ptr [ebp - 0x108]
0x804a058:   ff b5 f4 fe ff ff               	push dword ptr [ebp - 0x10c]
0x804a05e:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a061:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a064:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a067:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a06a:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a06d:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a073:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a079:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a07f:   57                              	push edi
0x804a080:   56                              	push esi
0x804a081:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a084:   e8 9d f5 ff ff                  	call 0x8049626 <set_var>
0x804a089:   81 c4 88 00 00 00               	add esp, 0x88
0x804a08f:   0f be 85 43 ff ff ff            	movsx eax, byte ptr [ebp - 0xbd]
0x804a096:   e9 b9 05 00 00                  	jmp 0x804a654 <func_1+0xde1>
0x804a09b:   66 c7 85 44 ff ff ff 6c aa      	mov word ptr [ebp - 0xbc], 0xaa6c
0x804a0a4:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a0a7:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a0ad:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a0b0:   66 35 d7 1c                     	xor ax, 0x1cd7
0x804a0b4:   66 89 85 44 ff ff ff            	mov word ptr [ebp - 0xbc], ax
0x804a0bb:   66 81 7d a4 31 fa               	cmp word ptr [ebp - 0x5c], 0xfa31
0x804a0c1:   0f 94 c0                        	sete al
0x804a0c4:   0f b6 c0                        	movzx eax, al
0x804a0c7:   8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x804a0ca:   ba 00 00 00 00                  	mov edx, 0
0x804a0cf:   f7 f1                           	div ecx
0x804a0d1:   89 d0                           	mov eax, edx
0x804a0d3:   85 c0                           	test eax, eax
0x804a0d5:   0f 94 c0                        	sete al
0x804a0d8:   0f b6 c0                        	movzx eax, al
0x804a0db:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804a0e1:   0f 95 c0                        	setne al
0x804a0e4:   0f b6 c0                        	movzx eax, al
0x804a0e7:   66 21 45 aa                     	and word ptr [ebp - 0x56], ax
0x804a0eb:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x804a0ef:   c1 f8 02                        	sar eax, 2
0x804a0f2:   66 09 85 66 ff ff ff            	or word ptr [ebp - 0x9a], ax
0x804a0f9:   e9 58 01 00 00                  	jmp 0x804a256 <func_1+0x9e3>
0x804a0fe:   c6 45 bf 01                     	mov byte ptr [ebp - 0x41], 1
0x804a102:   c7 45 b8 09 00 00 00            	mov dword ptr [ebp - 0x48], 9
0x804a109:   c7 45 b8 01 00 00 00            	mov dword ptr [ebp - 0x48], 1
0x804a110:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a113:   66 31 45 ca                     	xor word ptr [ebp - 0x36], ax
0x804a117:   0f bf 45 ca                     	movsx eax, word ptr [ebp - 0x36]
0x804a11b:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a11e:   0f 97 c0                        	seta al
0x804a121:   0f b6 c0                        	movzx eax, al
0x804a124:   09 45 d0                        	or dword ptr [ebp - 0x30], eax
0x804a127:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a12a:   0f be d0                        	movsx edx, al
0x804a12d:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a131:   0f be c0                        	movsx eax, al
0x804a134:   89 c1                           	mov ecx, eax
0x804a136:   d3 e2                           	shl edx, cl
0x804a138:   89 d0                           	mov eax, edx
0x804a13a:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a13d:   c7 45 e4 f1 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff1
0x804a144:   e9 03 01 00 00                  	jmp 0x804a24c <func_1+0x9d9>
0x804a149:   c7 45 c4 f6 ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffff6
0x804a150:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a154:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x804a159:   0f 95 c0                        	setne al
0x804a15c:   0f b6 c0                        	movzx eax, al
0x804a15f:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a162:   80 7d bf 00                     	cmp byte ptr [ebp - 0x41], 0
0x804a166:   0f 85 db 00 00 00               	jne 0x804a247 <func_1+0x9d4>
0x804a16c:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x804a170:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a174:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a177:   83 c0 03                        	add eax, 3
0x804a17a:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a17e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a181:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x804a185:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a188:   0f be c0                        	movsx eax, al
0x804a18b:   66 31 85 64 ff ff ff            	xor word ptr [ebp - 0x9c], ax
0x804a192:   0f bf 8d 64 ff ff ff            	movsx ecx, word ptr [ebp - 0x9c]
0x804a199:   ba 2d 73 b2 7b                  	mov edx, 0x7bb2732d
0x804a19e:   89 c8                           	mov eax, ecx
0x804a1a0:   f7 ea                           	imul edx
0x804a1a2:   c1 fa 1d                        	sar edx, 0x1d
0x804a1a5:   89 c8                           	mov eax, ecx
0x804a1a7:   c1 f8 1f                        	sar eax, 0x1f
0x804a1aa:   29 c2                           	sub edx, eax
0x804a1ac:   89 d0                           	mov eax, edx
0x804a1ae:   89 c2                           	mov edx, eax
0x804a1b0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a1b3:   29 c2                           	sub edx, eax
0x804a1b5:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a1b8:   31 d0                           	xor eax, edx
0x804a1ba:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804a1be:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a1c2:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a1c8:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a1ce:   98                              	cwde 
0x804a1cf:   ba c4 0e 00 00                  	mov edx, 0xec4
0x804a1d4:   89 c1                           	mov ecx, eax
0x804a1d6:   d3 fa                           	sar edx, cl
0x804a1d8:   89 d0                           	mov eax, edx
0x804a1da:   89 c3                           	mov ebx, eax
0x804a1dc:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a1e0:   ba 00 00 00 00                  	mov edx, 0
0x804a1e5:   66 f7 f3                        	div bx
0x804a1e8:   0f b7 d0                        	movzx edx, ax
0x804a1eb:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a1ee:   0f b7 c0                        	movzx eax, ax
0x804a1f1:   89 c1                           	mov ecx, eax
0x804a1f3:   d3 fa                           	sar edx, cl
0x804a1f5:   89 d0                           	mov eax, edx
0x804a1f7:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a1fa:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a1fd:   3b 45 e8                        	cmp eax, dword ptr [ebp - 0x18]
0x804a200:   0f 9c c0                        	setl al
0x804a203:   0f b6 c0                        	movzx eax, al
0x804a206:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a209:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a20d:   75 24                           	jne 0x804a233 <func_1+0x9c0>
0x804a20f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a212:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a216:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a21a:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a21e:   29 c2                           	sub edx, eax
0x804a220:   89 d0                           	mov eax, edx
0x804a222:   83 c8 1b                        	or eax, 0x1b
0x804a225:   0f bf d0                        	movsx edx, ax
0x804a228:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a22b:   98                              	cwde 
0x804a22c:   0f af c2                        	imul eax, edx
0x804a22f:   85 c0                           	test eax, eax
0x804a231:   74 07                           	je 0x804a23a <func_1+0x9c7>
0x804a233:   b8 01 00 00 00                  	mov eax, 1
0x804a238:   eb 05                           	jmp 0x804a23f <func_1+0x9cc>
0x804a23a:   b8 00 00 00 00                  	mov eax, 0
0x804a23f:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a245:   eb 01                           	jmp 0x804a248 <func_1+0x9d5>
0x804a247:   90                              	nop 
0x804a248:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a24c:   83 7d e4 02                     	cmp dword ptr [ebp - 0x1c], 2
0x804a250:   0f 8e f3 fe ff ff               	jle 0x804a149 <func_1+0x8d6>
0x804a256:   c7 45 e8 fa 00 00 00            	mov dword ptr [ebp - 0x18], 0xfa
0x804a25d:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a260:   ba 00 00 00 00                  	mov edx, 0
0x804a265:   66 f7 75 a4                     	div word ptr [ebp - 0x5c]
0x804a269:   0f b6 c8                        	movzx ecx, al
0x804a26c:   b8 fa 00 00 00                  	mov eax, 0xfa
0x804a271:   99                              	cdq 
0x804a272:   f7 f9                           	idiv ecx
0x804a274:   89 d0                           	mov eax, edx
0x804a276:   85 c0                           	test eax, eax
0x804a278:   74 60                           	je 0x804a2da <func_1+0xa67>
0x804a27a:   c7 85 18 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffff6
0x804a284:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x804a28b:   0f 85 33 02 00 00               	jne 0x804a4c4 <func_1+0xc51>
0x804a291:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x804a295:   83 f0 92                        	xor eax, 0xffffff92
0x804a298:   88 45 9f                        	mov byte ptr [ebp - 0x61], al
0x804a29b:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a29e:   0f b6 d0                        	movzx edx, al
0x804a2a1:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a2a4:   0f b6 c0                        	movzx eax, al
0x804a2a7:   0f af c2                        	imul eax, edx
0x804a2aa:   85 c0                           	test eax, eax
0x804a2ac:   0f 94 c0                        	sete al
0x804a2af:   0f b6 d0                        	movzx edx, al
0x804a2b2:   0f be 45 a8                     	movsx eax, byte ptr [ebp - 0x58]
0x804a2b6:   39 c2                           	cmp edx, eax
0x804a2b8:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a2be:   98                              	cwde 
0x804a2bf:   ba 01 00 00 00                  	mov edx, 1
0x804a2c4:   89 c1                           	mov ecx, eax
0x804a2c6:   d3 e2                           	shl edx, cl
0x804a2c8:   89 d0                           	mov eax, edx
0x804a2ca:   0f be c0                        	movsx eax, al
0x804a2cd:   f7 d8                           	neg eax
0x804a2cf:   09 85 68 ff ff ff               	or dword ptr [ebp - 0x98], eax
0x804a2d5:   e9 d7 01 00 00                  	jmp 0x804a4b1 <func_1+0xc3e>
0x804a2da:   c7 85 28 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd8], 0
0x804a2e4:   c7 85 24 ff ff ff d9 53 e2 59   	mov dword ptr [ebp - 0xdc], 0x59e253d9
0x804a2ee:   c7 85 20 ff ff ff 28 7e 50 c9   	mov dword ptr [ebp - 0xe0], 0xc9507e28
0x804a2f8:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a2fb:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a301:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a307:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a30d:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a313:   f7 d0                           	not eax
0x804a315:   0f bf d0                        	movsx edx, ax
0x804a318:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a31b:   98                              	cwde 
0x804a31c:   89 c1                           	mov ecx, eax
0x804a31e:   d3 e2                           	shl edx, cl
0x804a320:   0f bf 85 64 ff ff ff            	movsx eax, word ptr [ebp - 0x9c]
0x804a327:   39 c2                           	cmp edx, eax
0x804a329:   0f 95 c0                        	setne al
0x804a32c:   0f b6 c0                        	movzx eax, al
0x804a32f:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x804a335:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a33b:   23 85 60 ff ff ff               	and eax, dword ptr [ebp - 0xa0]
0x804a341:   89 c2                           	mov edx, eax
0x804a343:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a347:   39 c2                           	cmp edx, eax
0x804a349:   c6 85 1f ff ff ff fd            	mov byte ptr [ebp - 0xe1], 0xfd
0x804a350:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x804a354:   ba 00 00 00 00                  	mov edx, 0
0x804a359:   f7 b5 28 ff ff ff               	div dword ptr [ebp - 0xd8]
0x804a35f:   89 d0                           	mov eax, edx
0x804a361:   0f b6 d0                        	movzx edx, al
0x804a364:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x804a368:   0f b6 c0                        	movzx eax, al
0x804a36b:   89 c1                           	mov ecx, eax
0x804a36d:   d3 e2                           	shl edx, cl
0x804a36f:   89 d0                           	mov eax, edx
0x804a371:   85 c0                           	test eax, eax
0x804a373:   0f 95 c0                        	setne al
0x804a376:   0f b6 d0                        	movzx edx, al
0x804a379:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a37d:   31 d0                           	xor eax, edx
0x804a37f:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a383:   c7 45 98 f7 ff ff ff            	mov dword ptr [ebp - 0x68], 0xfffffff7
0x804a38a:   0f be 85 76 ff ff ff            	movsx eax, byte ptr [ebp - 0x8a]
0x804a391:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x804a398:   0f b6 4d 83                     	movzx ecx, byte ptr [ebp - 0x7d]
0x804a39c:   0f b6 5d 9f                     	movzx ebx, byte ptr [ebp - 0x61]
0x804a3a0:   0f bf 7d ca                     	movsx edi, word ptr [ebp - 0x36]
0x804a3a4:   89 bd 10 ff ff ff               	mov dword ptr [ebp - 0xf0], edi
0x804a3aa:   0f b7 75 a4                     	movzx esi, word ptr [ebp - 0x5c]
0x804a3ae:   89 b5 0c ff ff ff               	mov dword ptr [ebp - 0xf4], esi
0x804a3b4:   0f b6 7d a7                     	movzx edi, byte ptr [ebp - 0x59]
0x804a3b8:   89 bd 08 ff ff ff               	mov dword ptr [ebp - 0xf8], edi
0x804a3be:   0f be 75 a8                     	movsx esi, byte ptr [ebp - 0x58]
0x804a3c2:   89 b5 04 ff ff ff               	mov dword ptr [ebp - 0xfc], esi
0x804a3c8:   0f be 7d a9                     	movsx edi, byte ptr [ebp - 0x57]
0x804a3cc:   89 bd 00 ff ff ff               	mov dword ptr [ebp - 0x100], edi
0x804a3d2:   0f bf 75 aa                     	movsx esi, word ptr [ebp - 0x56]
0x804a3d6:   89 b5 fc fe ff ff               	mov dword ptr [ebp - 0x104], esi
0x804a3dc:   0f b7 7d b0                     	movzx edi, word ptr [ebp - 0x50]
0x804a3e0:   89 bd f8 fe ff ff               	mov dword ptr [ebp - 0x108], edi
0x804a3e6:   0f b7 75 b2                     	movzx esi, word ptr [ebp - 0x4e]
0x804a3ea:   89 b5 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], esi
0x804a3f0:   0f be 7d d4                     	movsx edi, byte ptr [ebp - 0x2c]
0x804a3f4:   89 bd f0 fe ff ff               	mov dword ptr [ebp - 0x110], edi
0x804a3fa:   0f be 75 d5                     	movsx esi, byte ptr [ebp - 0x2b]
0x804a3fe:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a404:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x804a408:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a40e:   0f bf 7d d8                     	movsx edi, word ptr [ebp - 0x28]
0x804a412:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a416:   50                              	push eax
0x804a417:   52                              	push edx
0x804a418:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a41e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a424:   51                              	push ecx
0x804a425:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a42b:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a431:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a434:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a437:   53                              	push ebx
0x804a438:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a43b:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a43e:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a441:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a444:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a44a:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a450:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a456:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a45c:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a462:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a468:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a46b:   ff b5 f8 fe ff ff               	push dword ptr [ebp - 0x108]
0x804a471:   ff b5 f4 fe ff ff               	push dword ptr [ebp - 0x10c]
0x804a477:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a47a:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a47d:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a480:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a483:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a486:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a48c:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a492:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a498:   57                              	push edi
0x804a499:   56                              	push esi
0x804a49a:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a49d:   e8 84 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4a2:   81 c4 88 00 00 00               	add esp, 0x88
0x804a4a8:   0f be 45 a9                     	movsx eax, byte ptr [ebp - 0x57]
0x804a4ac:   e9 a3 01 00 00                  	jmp 0x804a654 <func_1+0xde1>
0x804a4b1:   83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x804a4b5:   83 7d f0 e8                     	cmp dword ptr [ebp - 0x10], -0x18
0x804a4b9:   0f 8c fc f4 ff ff               	jl 0x80499bb <func_1+0x148>
0x804a4bf:   eb 04                           	jmp 0x804a4c5 <func_1+0xc52>
0x804a4c1:   90                              	nop 
0x804a4c2:   eb 01                           	jmp 0x804a4c5 <func_1+0xc52>
0x804a4c4:   90                              	nop 
0x804a4c5:   66 c7 85 66 ff ff ff 00 00      	mov word ptr [ebp - 0x9a], 0
0x804a4ce:   eb 1f                           	jmp 0x804a4ef <func_1+0xc7c>
0x804a4d0:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x804a4d7:   74 05                           	je 0x804a4de <func_1+0xc6b>
0x804a4d9:   e9 d1 f4 ff ff                  	jmp 0x80499af <func_1+0x13c>
0x804a4de:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a4e5:   83 c0 01                        	add eax, 1
0x804a4e8:   66 89 85 66 ff ff ff            	mov word ptr [ebp - 0x9a], ax
0x804a4ef:   66 83 bd 66 ff ff ff 0c         	cmp word ptr [ebp - 0x9a], 0xc
0x804a4f7:   7e d7                           	jle 0x804a4d0 <func_1+0xc5d>
0x804a4f9:   0f b7 85 64 ff ff ff            	movzx eax, word ptr [ebp - 0x9c]
0x804a500:   0f b7 c0                        	movzx eax, ax
0x804a503:   8d 14 00                        	lea edx, [eax + eax]
0x804a506:   0f bf 45 aa                     	movsx eax, word ptr [ebp - 0x56]
0x804a50a:   39 c2                           	cmp edx, eax
0x804a50c:   7f 07                           	jg 0x804a515 <func_1+0xca2>
0x804a50e:   b8 25 00 00 00                  	mov eax, 0x25
0x804a513:   eb 05                           	jmp 0x804a51a <func_1+0xca7>
0x804a515:   b8 00 00 00 00                  	mov eax, 0
0x804a51a:   89 85 6c ff ff ff               	mov dword ptr [ebp - 0x94], eax
0x804a520:   83 bd 6c ff ff ff 05            	cmp dword ptr [ebp - 0x94], 5
0x804a527:   0f 9f c0                        	setg al
0x804a52a:   0f b6 c0                        	movzx eax, al
0x804a52d:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a530:   0f be 85 76 ff ff ff            	movsx eax, byte ptr [ebp - 0x8a]
0x804a537:   0f be 95 77 ff ff ff            	movsx edx, byte ptr [ebp - 0x89]
0x804a53e:   0f b6 4d 83                     	movzx ecx, byte ptr [ebp - 0x7d]
0x804a542:   0f b6 5d 9f                     	movzx ebx, byte ptr [ebp - 0x61]
0x804a546:   0f bf 75 ca                     	movsx esi, word ptr [ebp - 0x36]
0x804a54a:   89 b5 10 ff ff ff               	mov dword ptr [ebp - 0xf0], esi
0x804a550:   0f b7 7d a4                     	movzx edi, word ptr [ebp - 0x5c]
0x804a554:   89 bd 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edi
0x804a55a:   0f b6 75 a7                     	movzx esi, byte ptr [ebp - 0x59]
0x804a55e:   89 b5 08 ff ff ff               	mov dword ptr [ebp - 0xf8], esi
0x804a564:   0f be 7d a8                     	movsx edi, byte ptr [ebp - 0x58]
0x804a568:   89 bd 04 ff ff ff               	mov dword ptr [ebp - 0xfc], edi
0x804a56e:   0f be 75 a9                     	movsx esi, byte ptr [ebp - 0x57]
0x804a572:   89 b5 00 ff ff ff               	mov dword ptr [ebp - 0x100], esi
0x804a578:   0f bf 7d aa                     	movsx edi, word ptr [ebp - 0x56]
0x804a57c:   89 bd fc fe ff ff               	mov dword ptr [ebp - 0x104], edi
0x804a582:   0f b7 75 b0                     	movzx esi, word ptr [ebp - 0x50]
0x804a586:   89 b5 f8 fe ff ff               	mov dword ptr [ebp - 0x108], esi
0x804a58c:   0f b7 7d b2                     	movzx edi, word ptr [ebp - 0x4e]
0x804a590:   89 bd f4 fe ff ff               	mov dword ptr [ebp - 0x10c], edi
0x804a596:   0f be 75 d4                     	movsx esi, byte ptr [ebp - 0x2c]
0x804a59a:   89 b5 f0 fe ff ff               	mov dword ptr [ebp - 0x110], esi
0x804a5a0:   0f be 7d d5                     	movsx edi, byte ptr [ebp - 0x2b]
0x804a5a4:   89 bd ec fe ff ff               	mov dword ptr [ebp - 0x114], edi
0x804a5aa:   0f b7 75 d6                     	movzx esi, word ptr [ebp - 0x2a]
0x804a5ae:   89 b5 e8 fe ff ff               	mov dword ptr [ebp - 0x118], esi
0x804a5b4:   0f bf 7d d8                     	movsx edi, word ptr [ebp - 0x28]
0x804a5b8:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a5bc:   50                              	push eax
0x804a5bd:   52                              	push edx
0x804a5be:   ff b5 78 ff ff ff               	push dword ptr [ebp - 0x88]
0x804a5c4:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a5ca:   51                              	push ecx
0x804a5cb:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804a5d1:   ff b5 58 ff ff ff               	push dword ptr [ebp - 0xa8]
0x804a5d7:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a5da:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a5dd:   53                              	push ebx
0x804a5de:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a5e1:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a5e4:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a5e7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a5ea:   ff b5 10 ff ff ff               	push dword ptr [ebp - 0xf0]
0x804a5f0:   ff b5 0c ff ff ff               	push dword ptr [ebp - 0xf4]
0x804a5f6:   ff b5 08 ff ff ff               	push dword ptr [ebp - 0xf8]
0x804a5fc:   ff b5 04 ff ff ff               	push dword ptr [ebp - 0xfc]
0x804a602:   ff b5 00 ff ff ff               	push dword ptr [ebp - 0x100]
0x804a608:   ff b5 fc fe ff ff               	push dword ptr [ebp - 0x104]
0x804a60e:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a611:   ff b5 f8 fe ff ff               	push dword ptr [ebp - 0x108]
0x804a617:   ff b5 f4 fe ff ff               	push dword ptr [ebp - 0x10c]
0x804a61d:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a620:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a623:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a626:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a629:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a62c:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a632:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a638:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a63e:   57                              	push edi
0x804a63f:   56                              	push esi
0x804a640:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a643:   e8 de ef ff ff                  	call 0x8049626 <set_var>
0x804a648:   81 c4 88 00 00 00               	add esp, 0x88
0x804a64e:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a654:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a657:   5b                              	pop ebx
0x804a658:   5e                              	pop esi
0x804a659:   5f                              	pop edi
0x804a65a:   5d                              	pop ebp
0x804a65b:   c3                              	ret 
; function: main at 0x804a65c -- 0x804aae0
0x804a65c:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a660:   83 e4 f0                        	and esp, 0xfffffff0
0x804a663:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a666:   55                              	push ebp
0x804a667:   89 e5                           	mov ebp, esp
0x804a669:   53                              	push ebx
0x804a66a:   51                              	push ecx
0x804a66b:   83 ec 10                        	sub esp, 0x10
0x804a66e:   e8 1d dd ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a673:   81 c3 8d 29 00 00               	add ebx, 0x298d
0x804a679:   89 c8                           	mov eax, ecx
0x804a67b:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a682:   83 38 02                        	cmp dword ptr [eax], 2
0x804a685:   75 26                           	jne 0x804a6ad <main+0x51>
0x804a687:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a68a:   83 c0 04                        	add eax, 4
0x804a68d:   8b 00                           	mov eax, dword ptr [eax]
0x804a68f:   83 ec 08                        	sub esp, 8
0x804a692:   8d 93 c8 db ff ff               	lea edx, [ebx - 0x2438]
0x804a698:   52                              	push edx
0x804a699:   50                              	push eax
0x804a69a:   e8 61 dc ff ff                  	call 0x8048300 <strcmp>
0x804a69f:   83 c4 10                        	add esp, 0x10
0x804a6a2:   85 c0                           	test eax, eax
0x804a6a4:   75 07                           	jne 0x804a6ad <main+0x51>
0x804a6a6:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a6ad:   e8 a4 dd ff ff                  	call 0x8048456 <platform_main_begin>
0x804a6b2:   e8 b4 ed ff ff                  	call 0x804946b <crc32_gentab>
0x804a6b7:   e8 b7 f1 ff ff                  	call 0x8049873 <func_1>
0x804a6bc:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a6c2:   89 c2                           	mov edx, eax
0x804a6c4:   83 ec 04                        	sub esp, 4
0x804a6c7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ca:   8d 83 ca db ff ff               	lea eax, [ebx - 0x2436]
0x804a6d0:   50                              	push eax
0x804a6d1:   52                              	push edx
0x804a6d2:   e8 a0 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6d7:   83 c4 10                        	add esp, 0x10
0x804a6da:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a6e1:   0f be c0                        	movsx eax, al
0x804a6e4:   83 ec 04                        	sub esp, 4
0x804a6e7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6ea:   8d 93 ce db ff ff               	lea edx, [ebx - 0x2432]
0x804a6f0:   52                              	push edx
0x804a6f1:   50                              	push eax
0x804a6f2:   e8 80 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f7:   83 c4 10                        	add esp, 0x10
0x804a6fa:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804a701:   98                              	cwde 
0x804a702:   83 ec 04                        	sub esp, 4
0x804a705:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a708:   8d 93 d3 db ff ff               	lea edx, [ebx - 0x242d]
0x804a70e:   52                              	push edx
0x804a70f:   50                              	push eax
0x804a710:   e8 62 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a715:   83 c4 10                        	add esp, 0x10
0x804a718:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804a71f:   0f b7 c0                        	movzx eax, ax
0x804a722:   83 ec 04                        	sub esp, 4
0x804a725:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a728:   8d 93 d8 db ff ff               	lea edx, [ebx - 0x2428]
0x804a72e:   52                              	push edx
0x804a72f:   50                              	push eax
0x804a730:   e8 42 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a735:   83 c4 10                        	add esp, 0x10
0x804a738:   0f b6 83 2e 00 00 00            	movzx eax, byte ptr [ebx + 0x2e]
0x804a73f:   0f be c0                        	movsx eax, al
0x804a742:   83 ec 04                        	sub esp, 4
0x804a745:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a748:   8d 93 dd db ff ff               	lea edx, [ebx - 0x2423]
0x804a74e:   52                              	push edx
0x804a74f:   50                              	push eax
0x804a750:   e8 22 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a755:   83 c4 10                        	add esp, 0x10
0x804a758:   0f b6 83 2f 00 00 00            	movzx eax, byte ptr [ebx + 0x2f]
0x804a75f:   0f be c0                        	movsx eax, al
0x804a762:   83 ec 04                        	sub esp, 4
0x804a765:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a768:   8d 93 e2 db ff ff               	lea edx, [ebx - 0x241e]
0x804a76e:   52                              	push edx
0x804a76f:   50                              	push eax
0x804a770:   e8 02 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a775:   83 c4 10                        	add esp, 0x10
0x804a778:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a77e:   83 ec 04                        	sub esp, 4
0x804a781:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a784:   8d 93 e7 db ff ff               	lea edx, [ebx - 0x2419]
0x804a78a:   52                              	push edx
0x804a78b:   50                              	push eax
0x804a78c:   e8 e6 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a791:   83 c4 10                        	add esp, 0x10
0x804a794:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a79a:   89 c2                           	mov edx, eax
0x804a79c:   83 ec 04                        	sub esp, 4
0x804a79f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7a2:   8d 83 ec db ff ff               	lea eax, [ebx - 0x2414]
0x804a7a8:   50                              	push eax
0x804a7a9:   52                              	push edx
0x804a7aa:   e8 c8 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7af:   83 c4 10                        	add esp, 0x10
0x804a7b2:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a7b8:   89 c2                           	mov edx, eax
0x804a7ba:   83 ec 04                        	sub esp, 4
0x804a7bd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7c0:   8d 83 f2 db ff ff               	lea eax, [ebx - 0x240e]
0x804a7c6:   50                              	push eax
0x804a7c7:   52                              	push edx
0x804a7c8:   e8 aa ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7cd:   83 c4 10                        	add esp, 0x10
0x804a7d0:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a7d6:   83 ec 04                        	sub esp, 4
0x804a7d9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7dc:   8d 93 f8 db ff ff               	lea edx, [ebx - 0x2408]
0x804a7e2:   52                              	push edx
0x804a7e3:   50                              	push eax
0x804a7e4:   e8 8e ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7e9:   83 c4 10                        	add esp, 0x10
0x804a7ec:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a7f2:   83 ec 04                        	sub esp, 4
0x804a7f5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7f8:   8d 93 fe db ff ff               	lea edx, [ebx - 0x2402]
0x804a7fe:   52                              	push edx
0x804a7ff:   50                              	push eax
0x804a800:   e8 72 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a805:   83 c4 10                        	add esp, 0x10
0x804a808:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804a80f:   0f b7 c0                        	movzx eax, ax
0x804a812:   83 ec 04                        	sub esp, 4
0x804a815:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a818:   8d 93 04 dc ff ff               	lea edx, [ebx - 0x23fc]
0x804a81e:   52                              	push edx
0x804a81f:   50                              	push eax
0x804a820:   e8 52 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a825:   83 c4 10                        	add esp, 0x10
0x804a828:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x804a82f:   0f b7 c0                        	movzx eax, ax
0x804a832:   83 ec 04                        	sub esp, 4
0x804a835:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a838:   8d 93 0a dc ff ff               	lea edx, [ebx - 0x23f6]
0x804a83e:   52                              	push edx
0x804a83f:   50                              	push eax
0x804a840:   e8 32 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a845:   83 c4 10                        	add esp, 0x10
0x804a848:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a84e:   83 ec 04                        	sub esp, 4
0x804a851:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a854:   8d 93 10 dc ff ff               	lea edx, [ebx - 0x23f0]
0x804a85a:   52                              	push edx
0x804a85b:   50                              	push eax
0x804a85c:   e8 16 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a861:   83 c4 10                        	add esp, 0x10
0x804a864:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804a86b:   98                              	cwde 
0x804a86c:   83 ec 04                        	sub esp, 4
0x804a86f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a872:   8d 93 16 dc ff ff               	lea edx, [ebx - 0x23ea]
0x804a878:   52                              	push edx
0x804a879:   50                              	push eax
0x804a87a:   e8 f8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a87f:   83 c4 10                        	add esp, 0x10
0x804a882:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804a889:   0f be c0                        	movsx eax, al
0x804a88c:   83 ec 04                        	sub esp, 4
0x804a88f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a892:   8d 93 1c dc ff ff               	lea edx, [ebx - 0x23e4]
0x804a898:   52                              	push edx
0x804a899:   50                              	push eax
0x804a89a:   e8 d8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a89f:   83 c4 10                        	add esp, 0x10
0x804a8a2:   0f b6 83 4d 00 00 00            	movzx eax, byte ptr [ebx + 0x4d]
0x804a8a9:   0f be c0                        	movsx eax, al
0x804a8ac:   83 ec 04                        	sub esp, 4
0x804a8af:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b2:   8d 93 22 dc ff ff               	lea edx, [ebx - 0x23de]
0x804a8b8:   52                              	push edx
0x804a8b9:   50                              	push eax
0x804a8ba:   e8 b8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8bf:   83 c4 10                        	add esp, 0x10
0x804a8c2:   0f b6 83 4e 00 00 00            	movzx eax, byte ptr [ebx + 0x4e]
0x804a8c9:   0f b6 c0                        	movzx eax, al
0x804a8cc:   83 ec 04                        	sub esp, 4
0x804a8cf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d2:   8d 93 28 dc ff ff               	lea edx, [ebx - 0x23d8]
0x804a8d8:   52                              	push edx
0x804a8d9:   50                              	push eax
0x804a8da:   e8 98 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8df:   83 c4 10                        	add esp, 0x10
0x804a8e2:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a8e9:   0f b7 c0                        	movzx eax, ax
0x804a8ec:   83 ec 04                        	sub esp, 4
0x804a8ef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f2:   8d 93 2e dc ff ff               	lea edx, [ebx - 0x23d2]
0x804a8f8:   52                              	push edx
0x804a8f9:   50                              	push eax
0x804a8fa:   e8 78 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8ff:   83 c4 10                        	add esp, 0x10
0x804a902:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a909:   98                              	cwde 
0x804a90a:   83 ec 04                        	sub esp, 4
0x804a90d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a910:   8d 93 34 dc ff ff               	lea edx, [ebx - 0x23cc]
0x804a916:   52                              	push edx
0x804a917:   50                              	push eax
0x804a918:   e8 5a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91d:   83 c4 10                        	add esp, 0x10
0x804a920:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804a926:   83 ec 04                        	sub esp, 4
0x804a929:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92c:   8d 93 3a dc ff ff               	lea edx, [ebx - 0x23c6]
0x804a932:   52                              	push edx
0x804a933:   50                              	push eax
0x804a934:   e8 3e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a939:   83 c4 10                        	add esp, 0x10
0x804a93c:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a942:   83 ec 04                        	sub esp, 4
0x804a945:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a948:   8d 93 40 dc ff ff               	lea edx, [ebx - 0x23c0]
0x804a94e:   52                              	push edx
0x804a94f:   50                              	push eax
0x804a950:   e8 22 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a955:   83 c4 10                        	add esp, 0x10
0x804a958:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a95e:   83 ec 04                        	sub esp, 4
0x804a961:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a964:   8d 93 46 dc ff ff               	lea edx, [ebx - 0x23ba]
0x804a96a:   52                              	push edx
0x804a96b:   50                              	push eax
0x804a96c:   e8 06 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a971:   83 c4 10                        	add esp, 0x10
0x804a974:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a97a:   89 c2                           	mov edx, eax
0x804a97c:   83 ec 04                        	sub esp, 4
0x804a97f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a982:   8d 83 4c dc ff ff               	lea eax, [ebx - 0x23b4]
0x804a988:   50                              	push eax
0x804a989:   52                              	push edx
0x804a98a:   e8 e8 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a98f:   83 c4 10                        	add esp, 0x10
0x804a992:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804a999:   0f b6 c0                        	movzx eax, al
0x804a99c:   83 ec 04                        	sub esp, 4
0x804a99f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a2:   8d 93 52 dc ff ff               	lea edx, [ebx - 0x23ae]
0x804a9a8:   52                              	push edx
0x804a9a9:   50                              	push eax
0x804a9aa:   e8 c8 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9af:   83 c4 10                        	add esp, 0x10
0x804a9b2:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a9b8:   83 ec 04                        	sub esp, 4
0x804a9bb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9be:   8d 93 58 dc ff ff               	lea edx, [ebx - 0x23a8]
0x804a9c4:   52                              	push edx
0x804a9c5:   50                              	push eax
0x804a9c6:   e8 ac eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9cb:   83 c4 10                        	add esp, 0x10
0x804a9ce:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a9d4:   83 ec 04                        	sub esp, 4
0x804a9d7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9da:   8d 93 5e dc ff ff               	lea edx, [ebx - 0x23a2]
0x804a9e0:   52                              	push edx
0x804a9e1:   50                              	push eax
0x804a9e2:   e8 90 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9e7:   83 c4 10                        	add esp, 0x10
0x804a9ea:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804a9f0:   83 ec 04                        	sub esp, 4
0x804a9f3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9f6:   8d 93 64 dc ff ff               	lea edx, [ebx - 0x239c]
0x804a9fc:   52                              	push edx
0x804a9fd:   50                              	push eax
0x804a9fe:   e8 74 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa03:   83 c4 10                        	add esp, 0x10
0x804aa06:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804aa0c:   83 ec 04                        	sub esp, 4
0x804aa0f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa12:   8d 93 6a dc ff ff               	lea edx, [ebx - 0x2396]
0x804aa18:   52                              	push edx
0x804aa19:   50                              	push eax
0x804aa1a:   e8 58 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa1f:   83 c4 10                        	add esp, 0x10
0x804aa22:   0f b6 83 ac 04 00 00            	movzx eax, byte ptr [ebx + 0x4ac]
0x804aa29:   0f b6 c0                        	movzx eax, al
0x804aa2c:   83 ec 04                        	sub esp, 4
0x804aa2f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa32:   8d 93 70 dc ff ff               	lea edx, [ebx - 0x2390]
0x804aa38:   52                              	push edx
0x804aa39:   50                              	push eax
0x804aa3a:   e8 38 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa3f:   83 c4 10                        	add esp, 0x10
0x804aa42:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804aa48:   83 ec 04                        	sub esp, 4
0x804aa4b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa4e:   8d 93 76 dc ff ff               	lea edx, [ebx - 0x238a]
0x804aa54:   52                              	push edx
0x804aa55:   50                              	push eax
0x804aa56:   e8 1c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa5b:   83 c4 10                        	add esp, 0x10
0x804aa5e:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804aa64:   83 ec 04                        	sub esp, 4
0x804aa67:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa6a:   8d 93 7c dc ff ff               	lea edx, [ebx - 0x2384]
0x804aa70:   52                              	push edx
0x804aa71:   50                              	push eax
0x804aa72:   e8 00 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa77:   83 c4 10                        	add esp, 0x10
0x804aa7a:   0f b6 83 7c 00 00 00            	movzx eax, byte ptr [ebx + 0x7c]
0x804aa81:   0f be c0                        	movsx eax, al
0x804aa84:   83 ec 04                        	sub esp, 4
0x804aa87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa8a:   8d 93 82 dc ff ff               	lea edx, [ebx - 0x237e]
0x804aa90:   52                              	push edx
0x804aa91:   50                              	push eax
0x804aa92:   e8 e0 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa97:   83 c4 10                        	add esp, 0x10
0x804aa9a:   0f b6 83 ad 04 00 00            	movzx eax, byte ptr [ebx + 0x4ad]
0x804aaa1:   0f be c0                        	movsx eax, al
0x804aaa4:   83 ec 04                        	sub esp, 4
0x804aaa7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaaa:   8d 93 88 dc ff ff               	lea edx, [ebx - 0x2378]
0x804aab0:   52                              	push edx
0x804aab1:   50                              	push eax
0x804aab2:   e8 c0 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aab7:   83 c4 10                        	add esp, 0x10
0x804aaba:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804aac0:   f7 d0                           	not eax
0x804aac2:   83 ec 08                        	sub esp, 8
0x804aac5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aac8:   50                              	push eax
0x804aac9:   e8 98 d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804aace:   83 c4 10                        	add esp, 0x10
0x804aad1:   b8 00 00 00 00                  	mov eax, 0
0x804aad6:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aad9:   59                              	pop ecx
0x804aada:   5b                              	pop ebx
0x804aadb:   5d                              	pop ebp
0x804aadc:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aadf:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aae0 -- 0x804aae4
0x804aae0:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aae3:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aae4 -- 0x804aae8
0x804aae4:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aae7:   c3                              	ret 
; data inside code section at 0x804aae8 -- 0x804aaf0
0x804aae8:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804aaf0 -- 0x804ab4d
0x804aaf0:   55                              	push ebp
0x804aaf1:   57                              	push edi
0x804aaf2:   56                              	push esi
0x804aaf3:   53                              	push ebx
0x804aaf4:   e8 97 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aaf9:   81 c3 07 25 00 00               	add ebx, 0x2507
0x804aaff:   83 ec 0c                        	sub esp, 0xc
0x804ab02:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab06:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab0c:   e8 bb d7 ff ff                  	call 0x80482cc <_init>
0x804ab11:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab17:   29 c6                           	sub esi, eax
0x804ab19:   c1 fe 02                        	sar esi, 2
0x804ab1c:   85 f6                           	test esi, esi
0x804ab1e:   74 25                           	je 0x804ab45 <__libc_csu_init+0x55>
0x804ab20:   31 ff                           	xor edi, edi
0x804ab22:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ab28:   83 ec 04                        	sub esp, 4
0x804ab2b:   55                              	push ebp
0x804ab2c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab30:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab34:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ab3b:   83 c7 01                        	add edi, 1
0x804ab3e:   83 c4 10                        	add esp, 0x10
0x804ab41:   39 fe                           	cmp esi, edi
0x804ab43:   75 e3                           	jne 0x804ab28 <__libc_csu_init+0x38>
0x804ab45:   83 c4 0c                        	add esp, 0xc
0x804ab48:   5b                              	pop ebx
0x804ab49:   5e                              	pop esi
0x804ab4a:   5f                              	pop edi
0x804ab4b:   5d                              	pop ebp
0x804ab4c:   c3                              	ret 
; data inside code section at 0x804ab4d -- 0x804ab50
0x804ab4d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ab50 -- 0x804ab52
0x804ab50:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ab54 -- 0x804ab68
0x804ab54:   53                              	push ebx
0x804ab55:   83 ec 08                        	sub esp, 8
0x804ab58:   e8 33 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab5d:   81 c3 a3 24 00 00               	add ebx, 0x24a3
0x804ab63:   83 c4 08                        	add esp, 8
0x804ab66:   5b                              	pop ebx
0x804ab67:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 6c ab 04 08  04 00 00 00 11 00 10 00   |....l...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ab68:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ab78:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ab88:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ab98:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aba8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804abb8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804abc8:   31 00 67 5f 32 00 67 5f  31 39 00 67 5f 32 30 00   |1.g_2.g_19.g_20.|
0x804abd8:   67 5f 34 34 00 67 5f 34  35 00 67 5f 34 36 00 67   |g_44.g_45.g_46.g|
0x804abe8:   5f 37 31 00 67 5f 31 31  35 00 67 5f 31 31 36 00   |_71.g_115.g_116.|
0x804abf8:   67 5f 31 31 37 00 67 5f  31 32 36 00 67 5f 31 34   |g_117.g_126.g_14|
0x804ac08:   33 00 67 5f 31 36 35 00  67 5f 31 37 31 00 67 5f   |3.g_165.g_171.g_|
0x804ac18:   31 37 33 00 67 5f 31 37  34 00 67 5f 31 37 35 00   |173.g_174.g_175.|
0x804ac28:   67 5f 31 37 36 00 67 5f  32 30 32 00 67 5f 32 32   |g_176.g_202.g_22|
0x804ac38:   38 00 67 5f 32 32 39 00  67 5f 32 33 32 00 67 5f   |8.g_229.g_232.g_|
0x804ac48:   32 33 38 00 67 5f 32 35  34 00 67 5f 32 36 38 00   |238.g_254.g_268.|
0x804ac58:   67 5f 32 39 36 00 67 5f  33 30 37 00 67 5f 33 31   |g_296.g_307.g_31|
0x804ac68:   34 00 67 5f 33 32 33 00  67 5f 33 34 30 00 67 5f   |4.g_323.g_340.g_|
0x804ac78:   33 37 36 00 67 5f 33 37  37 00 67 5f 34 30 38 00   |376.g_377.g_408.|
0x804ac88:   67 5f 34 30 39 00 00 00  00 00 00 3f ff ff ff 7e   |g_409......?...~|
0x804ac98:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804aca8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804acb8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804acc8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804acd8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804ace8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804acf8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804acf8:   01 1b 03 3b b8 02 00 00  56 00 00 00 f8 d5 ff ff   |...;....V.......|
0x804ad08:   e8 02 00 00 38 d6 ff ff  0c 03 00 00 88 d6 ff ff   |....8...........|
0x804ad18:   d4 02 00 00 5e d7 ff ff  20 03 00 00 6e d7 ff ff   |....^... ...n...|
0x804ad28:   40 03 00 00 9c d7 ff ff  64 03 00 00 ba d7 ff ff   |@.......d.......|
0x804ad38:   84 03 00 00 e2 d7 ff ff  a4 03 00 00 0c d8 ff ff   |................|
0x804ad48:   c4 03 00 00 35 d8 ff ff  e4 03 00 00 78 d8 ff ff   |....5.......x...|
0x804ad58:   04 04 00 00 b9 d8 ff ff  24 04 00 00 11 d9 ff ff   |........$.......|
0x804ad68:   48 04 00 00 63 d9 ff ff  6c 04 00 00 a0 d9 ff ff   |H...c...l.......|
0x804ad78:   8c 04 00 00 d7 d9 ff ff  ac 04 00 00 f6 d9 ff ff   |................|
0x804ad88:   cc 04 00 00 20 da ff ff  ec 04 00 00 4c da ff ff   |.... .......L...|
0x804ad98:   0c 05 00 00 77 da ff ff  2c 05 00 00 c0 da ff ff   |....w...,.......|
0x804ada8:   4c 05 00 00 07 db ff ff  6c 05 00 00 61 db ff ff   |L.......l...a...|
0x804adb8:   90 05 00 00 b5 db ff ff  b4 05 00 00 f4 db ff ff   |................|
0x804adc8:   d4 05 00 00 2d dc ff ff  f4 05 00 00 4f dc ff ff   |....-.......O...|
0x804add8:   14 06 00 00 9d dc ff ff  34 06 00 00 d9 dc ff ff   |........4.......|
0x804ade8:   54 06 00 00 62 dd ff ff  74 06 00 00 94 dd ff ff   |T...b...t.......|
0x804adf8:   94 06 00 00 c4 dd ff ff  b4 06 00 00 09 de ff ff   |................|
0x804ae08:   d4 06 00 00 48 de ff ff  f4 06 00 00 7a de ff ff   |....H.......z...|
0x804ae18:   14 07 00 00 a6 de ff ff  34 07 00 00 c4 de ff ff   |........4.......|
0x804ae28:   54 07 00 00 ec de ff ff  74 07 00 00 11 df ff ff   |T.......t.......|
0x804ae38:   94 07 00 00 36 df ff ff  b4 07 00 00 6d df ff ff   |....6.......m...|
0x804ae48:   d4 07 00 00 a1 df ff ff  f4 07 00 00 f3 df ff ff   |................|
0x804ae58:   18 08 00 00 3f e0 ff ff  3c 08 00 00 76 e0 ff ff   |....?...<...v...|
0x804ae68:   5c 08 00 00 a7 e0 ff ff  7c 08 00 00 c6 e0 ff ff   |\.......|.......|
0x804ae78:   9c 08 00 00 f0 e0 ff ff  bc 08 00 00 18 e1 ff ff   |................|
0x804ae88:   dc 08 00 00 41 e1 ff ff  fc 08 00 00 7d e1 ff ff   |....A.......}...|
0x804ae98:   1c 09 00 00 b7 e1 ff ff  3c 09 00 00 0a e2 ff ff   |........<.......|
0x804aea8:   60 09 00 00 57 e2 ff ff  84 09 00 00 8f e2 ff ff   |`...W...........|
0x804aeb8:   a4 09 00 00 c1 e2 ff ff  c4 09 00 00 d5 e2 ff ff   |................|
0x804aec8:   e4 09 00 00 ec e2 ff ff  04 0a 00 00 01 e3 ff ff   |................|
0x804aed8:   24 0a 00 00 17 e3 ff ff  44 0a 00 00 3e e3 ff ff   |$.......D...>...|
0x804aee8:   64 0a 00 00 63 e3 ff ff  84 0a 00 00 a2 e3 ff ff   |d...c...........|
0x804aef8:   a4 0a 00 00 db e3 ff ff  c4 0a 00 00 07 e4 ff ff   |................|
0x804af08:   e4 0a 00 00 2d e4 ff ff  04 0b 00 00 6f e4 ff ff   |....-.......o...|
0x804af18:   24 0b 00 00 b1 e4 ff ff  44 0b 00 00 f3 e4 ff ff   |$.......D.......|
0x804af28:   64 0b 00 00 68 e5 ff ff  84 0b 00 00 c5 e5 ff ff   |d...h...........|
0x804af38:   a4 0b 00 00 22 e6 ff ff  c4 0b 00 00 7f e6 ff ff   |...."...........|
0x804af48:   e4 0b 00 00 0f e7 ff ff  04 0c 00 00 73 e7 ff ff   |............s...|
0x804af58:   24 0c 00 00 e3 e7 ff ff  44 0c 00 00 2a e8 ff ff   |$.......D...*...|
0x804af68:   68 0c 00 00 7f e8 ff ff  88 0c 00 00 c6 e8 ff ff   |h...............|
0x804af78:   ac 0c 00 00 2e e9 ff ff  d0 0c 00 00 7b eb ff ff   |............{...|
0x804af88:   00 0d 00 00 64 f9 ff ff  30 0d 00 00 e8 fd ff ff   |....d...0.......|
0x804af98:   68 0d 00 00 ec fd ff ff  7c 0d 00 00 f8 fd ff ff   |h.......|.......|
0x804afa8:   90 0d 00 00 58 fe ff ff  dc 0d 00 00 14            |....X........   |
; section: .eh_frame
0x804afb4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804afc4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804afd4:   ac d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804afe4:   30 00 00 00 08 d3 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804aff4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b004:   10 00 00 00 54 00 00 00  24 d3 ff ff 08 00 00 00   |....T...$.......|
0x804b014:   00 00 00 00 1c 00 00 00  68 00 00 00 36 d4 ff ff   |........h...6...|
0x804b024:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b034:   04 04 00 00 20 00 00 00  88 00 00 00 26 d4 ff ff   |.... .......&...|
0x804b044:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b054:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b064:   30 d4 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804b074:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b084:   2e d4 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b094:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b0a4:   36 d4 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |6...*....A....B.|
0x804b0b4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0c4:   40 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |@...)....A....B.|
0x804b0d4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b0e4:   49 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |I...C....A....B.|
0x804b0f4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b104:   6c d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |l...A....A....B.|
0x804b114:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b124:   8d d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b134:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b144:   90 01 00 00 c1 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b154:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b164:   1c 00 00 00 b4 01 00 00  ef d4 ff ff 3d 00 00 00   |............=...|
0x804b174:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b184:   1c 00 00 00 d4 01 00 00  0c d5 ff ff 37 00 00 00   |............7...|
0x804b194:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1a4:   1c 00 00 00 f4 01 00 00  23 d5 ff ff 1f 00 00 00   |........#.......|
0x804b1b4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1c4:   1c 00 00 00 14 02 00 00  22 d5 ff ff 2a 00 00 00   |........"...*...|
0x804b1d4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b1e4:   1c 00 00 00 34 02 00 00  2c d5 ff ff 2c 00 00 00   |....4...,...,...|
0x804b1f4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b204:   1c 00 00 00 54 02 00 00  38 d5 ff ff 2b 00 00 00   |....T...8...+...|
0x804b214:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b224:   1c 00 00 00 74 02 00 00  43 d5 ff ff 49 00 00 00   |....t...C...I...|
0x804b234:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b244:   1c 00 00 00 94 02 00 00  6c d5 ff ff 47 00 00 00   |........l...G...|
0x804b254:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b264:   20 00 00 00 b4 02 00 00  93 d5 ff ff 5a 00 00 00   | ...........Z...|
0x804b274:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b284:   c5 0c 04 04 20 00 00 00  d8 02 00 00 c9 d5 ff ff   |.... ...........|
0x804b294:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b2a4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2b4:   f9 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2c4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b2d4:   18 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b2e4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b2f4:   31 d6 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |1..."....A....B.|
0x804b304:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b314:   33 d6 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |3...N....A....B.|
0x804b324:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b334:   61 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |a...<....A....B.|
0x804b344:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b354:   7d d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b364:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b374:   e6 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b384:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b394:   f8 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b3a4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3b4:   08 d7 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3c4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b3d4:   2d d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |-...?....A....B.|
0x804b3e4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b3f4:   4c d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |L...2....A....B.|
0x804b404:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b414:   5e d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |^...,....A....B.|
0x804b424:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b434:   6a d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |j........A....B.|
0x804b444:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b454:   68 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |h...(....A....B.|
0x804b464:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b474:   70 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |p...%....A....B.|
0x804b484:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b494:   75 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |u...%....A....B.|
0x804b4a4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4b4:   7a d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |z...7....A....B.|
0x804b4c4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b4d4:   91 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b4e4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b4f4:   a5 d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b504:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b514:   60 05 00 00 d3 d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b524:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b534:   1c 00 00 00 84 05 00 00  fb d7 ff ff 37 00 00 00   |............7...|
0x804b544:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b554:   1c 00 00 00 a4 05 00 00  12 d8 ff ff 31 00 00 00   |............1...|
0x804b564:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b574:   1c 00 00 00 c4 05 00 00  23 d8 ff ff 1f 00 00 00   |........#.......|
0x804b584:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b594:   1c 00 00 00 e4 05 00 00  22 d8 ff ff 2a 00 00 00   |........"...*...|
0x804b5a4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5b4:   1c 00 00 00 04 06 00 00  2c d8 ff ff 28 00 00 00   |........,...(...|
0x804b5c4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b5d4:   1c 00 00 00 24 06 00 00  34 d8 ff ff 29 00 00 00   |....$...4...)...|
0x804b5e4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b5f4:   1c 00 00 00 44 06 00 00  3d d8 ff ff 3c 00 00 00   |....D...=...<...|
0x804b604:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b614:   1c 00 00 00 64 06 00 00  59 d8 ff ff 3a 00 00 00   |....d...Y...:...|
0x804b624:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b634:   20 00 00 00 84 06 00 00  73 d8 ff ff 53 00 00 00   | .......s...S...|
0x804b644:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b654:   c5 0c 04 04 20 00 00 00  a8 06 00 00 a2 d8 ff ff   |.... ...........|
0x804b664:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b674:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b684:   cb d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b694:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b6a4:   e3 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6b4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6c4:   f5 d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6d4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b6e4:   e9 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b6f4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b704:   e0 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b714:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b724:   d5 d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b734:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b744:   cb d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b754:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b764:   d2 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b774:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b784:   d7 d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b794:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b7a4:   f6 d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7b4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7c4:   0f d9 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b7d4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b7e4:   1b d9 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b7f4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b804:   21 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |!...B....A....B.|
0x804b814:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b824:   43 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |C...B....A....B.|
0x804b834:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b844:   65 d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |e...B....A....B.|
0x804b854:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b864:   87 d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b874:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b884:   dc d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b894:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b8a4:   19 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8b4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8c4:   56 da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |V...]....A....B.|
0x804b8d4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b8e4:   93 da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8f4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b904:   03 db ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b914:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b924:   47 db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |G...p....A....B.|
0x804b934:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b944:   97 db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b954:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b964:   b0 09 00 00 ba db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b974:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b984:   d0 09 00 00 ef db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b994:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b9a4:   20 00 00 00 f4 09 00 00  12 dc ff ff 68 00 00 00   | ...........h...|
0x804b9b4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9c4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 56 dc ff ff   |....,.......V...|
0x804b9d4:   4d 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |M....A....B..F..|
0x804b9e4:   86 04 83 05 03 40 02 c3  41 c6 41 c7 41 c5 0c 04   |.....@..A.A.A...|
0x804b9f4:   04 00 00 00 2c 00 00 00  48 0a 00 00 73 de ff ff   |....,...H...s...|
0x804ba04:   e9 0d 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804ba14:   86 04 83 05 03 d9 0d c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba24:   04 00 00 00 34 00 00 00  78 0a 00 00 2c ec ff ff   |....4...x...,...|
0x804ba34:   84 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804ba44:   0f 03 75 78 06 10 03 02  75 7c 03 6f 04 c1 0c 01   |..ux....u|.o....|
0x804ba54:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba64:   b0 0a 00 00 78 f0 ff ff  04 00 00 00 00 00 00 00   |....x...........|
0x804ba74:   10 00 00 00 c4 0a 00 00  68 f0 ff ff 04 00 00 00   |........h.......|
0x804ba84:   00 00 00 00 48 00 00 00  d8 0a 00 00 60 f0 ff ff   |....H.......`...|
0x804ba94:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804baa4:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bab4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bac4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bad4:   10 00 00 00 24 0b 00 00  74 f0 ff ff 02 00 00 00   |....$...t.......|
0x804bae4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 54 ab 04 08  19 00 00 00 0c cf 04 08   |....T...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff d3 3d 31 ad   |.............=1.|
0x804d028:   c4 00 f6 ff 9d 2c ff ff  56 81 83 20 f6 ff ff ff   |.....,..V.. ....|
0x804d038:   9b 4d 85 ee 5a 86 85 83  ea cc c3 d4 fb ff f1 63   |.M..Z..........c|
0x804d048:   96 48 a2 64 01 a4 ff 00  34 df ff ff fc ff ff ff   |.H.d....4.......|
0x804d058:   f9 ff ff ff 8b 2f a3 b0  63 00 00 00 57 c2 89 f3   |...../..c...W...|
0x804d068:   57 01 35 b1 ad 29 c8 ab  01 6f df 75 33 45 82 9b   |W.5..)...o.u3E..|
0x804d078:   41 d1 ee 13 fc ??                                  |A....?          |
