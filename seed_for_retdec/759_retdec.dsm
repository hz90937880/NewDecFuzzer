;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:23:11
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 f0 dc ff ff               	lea eax, [ebx - 0x2310]
0x804835c:   50                              	push eax
0x804835d:   8d 83 90 dc ff ff               	lea eax, [ebx - 0x2370]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 07 a8 04 08               	mov eax, 0x804a807
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 84 d0 04 08                  	mov eax, 0x804d084
0x80483a5:   3d 84 d0 04 08                  	cmp eax, 0x804d084
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 84 d0 04 08                  	push 0x804d084
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 84 d0 04 08                  	mov eax, 0x804d084
0x80483e5:   2d 84 d0 04 08                  	sub eax, 0x804d084
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 84 d0 04 08                  	push 0x804d084
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 d0 04 08 00            	cmp byte ptr [0x804d0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 d0 04 08 01            	mov byte ptr [0x804d0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 1c 28 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 08 28 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 10 dd ff ff               	lea edx, [eax - 0x22f0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 db 27 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 bd 27 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 95 27 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 6b 27 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 42 27 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 ff 26 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 bd 26 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 65 26 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 14 26 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 d7 25 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 a0 25 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 81 25 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 57 25 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 2b 25 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 00 25 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 b7 24 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 6f 24 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 15 24 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 c2 23 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 83 23 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 4d 23 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 2b 23 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 dd 22 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 a1 22 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 18 22 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 e6 21 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 b6 21 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 71 21 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 32 21 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 00 21 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 d1 20 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 b3 20 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 8b 20 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 66 20 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 41 20 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 0a 20 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 d5 1f 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 83 1f 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 38 1f 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 01 1f 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 d0 1e 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 b1 1e 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 87 1e 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 5f 1e 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 36 1e 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 fa 1d 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 bf 1d 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 6c 1d 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 20 1d 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 e8 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 b9 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 a5 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 8e 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 79 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 63 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 3c 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 17 1c 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 d8 1b 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 9f 1b 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 73 1b 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 4d 1b 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 28 de ff ff               	fld dword ptr [eax - 0x21d8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 28 de ff ff               	fld dword ptr [eax - 0x21d8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 2c de ff ff               	fld dword ptr [eax - 0x21d4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 0b 1b 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 28 de ff ff               	fld dword ptr [eax - 0x21d8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 28 de ff ff               	fld dword ptr [eax - 0x21d8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 2c de ff ff               	fld dword ptr [eax - 0x21d4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 c9 1a 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 30 de ff ff               	fld dword ptr [eax - 0x21d0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 34 de ff ff               	fld dword ptr [eax - 0x21cc]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 38 de ff ff               	fld dword ptr [eax - 0x21c8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 87 1a 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 3c de ff ff               	fld dword ptr [eax - 0x21c4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 40 de ff ff               	fld dword ptr [eax - 0x21c0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 44 de ff ff               	fld dword ptr [eax - 0x21bc]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 0f 1a 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 48 de ff ff               	fld qword ptr [eax - 0x21b8]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 48 de ff ff               	fld qword ptr [eax - 0x21b8]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 50 de ff ff               	fld qword ptr [eax - 0x21b0]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 b2 19 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 48 de ff ff               	fld qword ptr [eax - 0x21b8]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 48 de ff ff               	fld qword ptr [eax - 0x21b8]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 50 de ff ff               	fld qword ptr [eax - 0x21b0]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 55 19 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 58 de ff ff               	fld qword ptr [eax - 0x21a8]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 60 de ff ff               	fld qword ptr [eax - 0x21a0]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 68 de ff ff               	fld qword ptr [eax - 0x2198]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 f8 18 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 70 de ff ff               	fld qword ptr [eax - 0x2190]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 78 de ff ff               	fld qword ptr [eax - 0x2188]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 80 de ff ff               	fld qword ptr [eax - 0x2180]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 68 18 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 88 de ff ff               	fld dword ptr [eax - 0x2178]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 8c de ff ff               	fld dword ptr [eax - 0x2174]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 04 18 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 93 17 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 50 17 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 20 dd ff ff               	lea eax, [ebx - 0x22e0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 44 dd ff ff               	lea eax, [ebx - 0x22bc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804987f
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 c4 80                        	add esp, -0x80
0x804962f:   e8 4a 16 00 00                  	call 0x804ac7e <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049640:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049646:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049649:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804964c:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804964f:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049652:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049655:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049658:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x804965b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965e:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049661:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049664:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049667:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804966a:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804966d:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049670:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049673:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049676:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049679:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804967c:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804967f:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049682:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049685:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049688:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804968b:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049691:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049694:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804969a:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804969d:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a3:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496a7:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496ab:   89 c8                           	mov eax, ecx
0x80496ad:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496b1:   89 d8                           	mov eax, ebx
0x80496b3:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496b6:   89 f0                           	mov eax, esi
0x80496b8:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496bc:   89 f8                           	mov eax, edi
0x80496be:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496c2:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c6:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496ca:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496ce:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496d2:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d6:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496da:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496de:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496e2:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496e6:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496ea:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496ee:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496f1:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496f5:   88 45 c4                        	mov byte ptr [ebp - 0x3c], al
0x80496f8:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496fc:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049700:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049704:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049708:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x804970c:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x804970f:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049716:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049719:   0f b7 85 78 ff ff ff            	movzx eax, word ptr [ebp - 0x88]
0x8049720:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049724:   0f b6 85 74 ff ff ff            	movzx eax, byte ptr [ebp - 0x8c]
0x804972b:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x804972e:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x8049732:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x8049739:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804973c:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049742:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049745:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804974b:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804974f:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049756:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049759:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804975f:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049762:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049768:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804976c:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x8049772:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049775:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x804977b:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804977f:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x8049786:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804978a:   66 89 82 46 00 00 00            	mov word ptr [edx + 0x46], ax
0x8049791:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049795:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x804979c:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804979f:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497a5:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x80497a8:   89 82 c4 04 00 00               	mov dword ptr [edx + 0x4c4], eax
0x80497ae:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x80497b1:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497b7:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497bb:   66 89 82 54 00 00 00            	mov word ptr [edx + 0x54], ax
0x80497c2:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497c6:   66 89 82 56 00 00 00            	mov word ptr [edx + 0x56], ax
0x80497cd:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497d1:   66 89 82 c8 04 00 00            	mov word ptr [edx + 0x4c8], ax
0x80497d8:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497dc:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497e3:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497e7:   88 82 ca 04 00 00               	mov byte ptr [edx + 0x4ca], al
0x80497ed:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80497f1:   88 82 5a 00 00 00               	mov byte ptr [edx + 0x5a], al
0x80497f7:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497fb:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x8049802:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049806:   66 89 82 5e 00 00 00            	mov word ptr [edx + 0x5e], ax
0x804980d:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049810:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049816:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804981a:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x8049820:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049823:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049829:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x804982c:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049832:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049835:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x804983b:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804983f:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x8049845:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049849:   66 89 82 76 00 00 00            	mov word ptr [edx + 0x76], ax
0x8049850:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x8049854:   88 82 78 00 00 00               	mov byte ptr [edx + 0x78], al
0x804985a:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049860:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049866:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x804986c:   89 82 80 00 00 00               	mov dword ptr [edx + 0x80], eax
0x8049872:   b8 00 00 00 00                  	mov eax, 0
0x8049877:   83 ec 80                        	sub esp, -0x80
0x804987a:   5b                              	pop ebx
0x804987b:   5e                              	pop esi
0x804987c:   5f                              	pop edi
0x804987d:   5d                              	pop ebp
0x804987e:   c3                              	ret 
; function: func_1 at 0x804987f -- 0x804a807
0x804987f:   55                              	push ebp
0x8049880:   89 e5                           	mov ebp, esp
0x8049882:   57                              	push edi
0x8049883:   56                              	push esi
0x8049884:   53                              	push ebx
0x8049885:   81 ec 60 01 00 00               	sub esp, 0x160
0x804988b:   e8 ea 13 00 00                  	call 0x804ac7a <__x86.get_pc_thunk.ax>
0x8049890:   05 70 37 00 00                  	add eax, 0x3770
0x8049895:   c7 45 c8 fd ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffd
0x804989c:   66 c7 45 c6 a1 32               	mov word ptr [ebp - 0x3a], 0x32a1
0x80498a2:   c7 45 c0 ff ff ff ff            	mov dword ptr [ebp - 0x40], 0xffffffff
0x80498a9:   c7 45 bc d8 0c cd 83            	mov dword ptr [ebp - 0x44], 0x83cd0cd8
0x80498b0:   66 c7 45 a2 4a 17               	mov word ptr [ebp - 0x5e], 0x174a
0x80498b6:   c7 45 9c 27 ea 2f bf            	mov dword ptr [ebp - 0x64], 0xbf2fea27
0x80498bd:   c7 45 98 07 d4 41 fa            	mov dword ptr [ebp - 0x68], 0xfa41d407
0x80498c4:   c6 45 ac 62                     	mov byte ptr [ebp - 0x54], 0x62
0x80498c8:   c7 45 94 29 da 8e b4            	mov dword ptr [ebp - 0x6c], 0xb48eda29
0x80498cf:   66 c7 45 aa 6d e4               	mov word ptr [ebp - 0x56], 0xe46d
0x80498d5:   66 c7 45 92 ef f0               	mov word ptr [ebp - 0x6e], 0xf0ef
0x80498db:   66 c7 45 90 01 00               	mov word ptr [ebp - 0x70], 1
0x80498e1:   c7 45 a4 fd ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffffd
0x80498e8:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x80498ef:   c7 45 8c 05 68 26 2a            	mov dword ptr [ebp - 0x74], 0x2a266805
0x80498f6:   66 c7 45 8a 83 c5               	mov word ptr [ebp - 0x76], 0xc583
0x80498fc:   66 c7 45 88 01 00               	mov word ptr [ebp - 0x78], 1
0x8049902:   66 c7 45 ee 00 00               	mov word ptr [ebp - 0x12], 0
0x8049908:   66 c7 45 ec 63 e2               	mov word ptr [ebp - 0x14], 0xe263
0x804990e:   c6 45 eb 00                     	mov byte ptr [ebp - 0x15], 0
0x8049912:   c6 45 ea de                     	mov byte ptr [ebp - 0x16], 0xde
0x8049916:   66 c7 45 e8 69 d9               	mov word ptr [ebp - 0x18], 0xd969
0x804991c:   66 c7 45 e6 fe ff               	mov word ptr [ebp - 0x1a], 0xfffe
0x8049922:   c7 45 e0 fb ff ff ff            	mov dword ptr [ebp - 0x20], 0xfffffffb
0x8049929:   c6 45 bb 74                     	mov byte ptr [ebp - 0x45], 0x74
0x804992d:   c7 45 b4 0c be 7d c5            	mov dword ptr [ebp - 0x4c], 0xc57dbe0c
0x8049934:   c7 45 84 fd 42 64 7c            	mov dword ptr [ebp - 0x7c], 0x7c6442fd
0x804993b:   c7 45 b0 dc 5c a1 7d            	mov dword ptr [ebp - 0x50], 0x7da15cdc
0x8049942:   c6 45 83 05                     	mov byte ptr [ebp - 0x7d], 5
0x8049946:   66 c7 45 ae 01 00               	mov word ptr [ebp - 0x52], 1
0x804994c:   c6 45 ad ef                     	mov byte ptr [ebp - 0x53], 0xef
0x8049950:   c7 85 7c ff ff ff 73 16 d3 95   	mov dword ptr [ebp - 0x84], 0x95d31673
0x804995a:   c7 45 dc 15 ab 68 ca            	mov dword ptr [ebp - 0x24], 0xca68ab15
0x8049961:   c6 85 7b ff ff ff 00            	mov byte ptr [ebp - 0x85], 0
0x8049968:   c7 85 74 ff ff ff 6b 08 d2 ca   	mov dword ptr [ebp - 0x8c], 0xcad2086b
0x8049972:   66 c7 85 72 ff ff ff 07 00      	mov word ptr [ebp - 0x8e], 7
0x804997b:   66 c7 85 70 ff ff ff 4d 02      	mov word ptr [ebp - 0x90], 0x24d
0x8049984:   c7 85 6c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x94], 0xffffffff
0x804998e:   66 c7 85 6a ff ff ff 06 00      	mov word ptr [ebp - 0x96], 6
0x8049997:   c6 85 69 ff ff ff 00            	mov byte ptr [ebp - 0x97], 0
0x804999e:   c7 45 d8 07 18 4a fb            	mov dword ptr [ebp - 0x28], 0xfb4a1807
0x80499a5:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x80499af:   c7 85 60 ff ff ff 2d 72 46 66   	mov dword ptr [ebp - 0xa0], 0x6646722d
0x80499b9:   c6 85 5f ff ff ff 01            	mov byte ptr [ebp - 0xa1], 1
0x80499c0:   c7 45 d4 a8 35 49 cb            	mov dword ptr [ebp - 0x2c], 0xcb4935a8
0x80499c7:   c7 85 58 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xa8], 0xfffffff6
0x80499d1:   c7 85 54 ff ff ff 5d f4 34 30   	mov dword ptr [ebp - 0xac], 0x3034f45d
0x80499db:   66 c7 85 52 ff ff ff cf 41      	mov word ptr [ebp - 0xae], 0x41cf
0x80499e4:   0f b6 9d 7b ff ff ff            	movzx ebx, byte ptr [ebp - 0x85]
0x80499eb:   83 7d c8 fd                     	cmp dword ptr [ebp - 0x38], -3
0x80499ef:   0f 9c c0                        	setl al
0x80499f2:   0f b6 c0                        	movzx eax, al
0x80499f5:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80499fb:   8b 8d 74 ff ff ff               	mov ecx, dword ptr [ebp - 0x8c]
0x8049a01:   ba ff 74 39 2c                  	mov edx, 0x2c3974ff
0x8049a06:   89 c8                           	mov eax, ecx
0x8049a08:   f7 e2                           	mul edx
0x8049a0a:   89 d0                           	mov eax, edx
0x8049a0c:   c1 e8 1c                        	shr eax, 0x1c
0x8049a0f:   69 c0 e5 53 9e 5c               	imul eax, eax, 0x5c9e53e5
0x8049a15:   29 c1                           	sub ecx, eax
0x8049a17:   89 c8                           	mov eax, ecx
0x8049a19:   66 89 85 72 ff ff ff            	mov word ptr [ebp - 0x8e], ax
0x8049a20:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x8049a27:   09 d8                           	or eax, ebx
0x8049a29:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049a2c:   0f 9e c0                        	setle al
0x8049a2f:   0f b6 d0                        	movzx edx, al
0x8049a32:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x8049a39:   09 d0                           	or eax, edx
0x8049a3b:   85 c0                           	test eax, eax
0x8049a3d:   0f 84 e2 06 00 00               	je 0x804a125 <func_1+0x8a6>
0x8049a43:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x8049a4d:   c7 85 08 ff ff ff 4f 58 e3 11   	mov dword ptr [ebp - 0xf8], 0x11e3584f
0x8049a57:   c7 85 04 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xfc], 1
0x8049a61:   c6 85 03 ff ff ff fb            	mov byte ptr [ebp - 0xfd], 0xfb
0x8049a68:   c7 85 fc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x104], 0xffffffff
0x8049a72:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049a75:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x8049a79:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x8049a7d:   98                              	cwde 
0x8049a7e:   31 85 74 ff ff ff               	xor dword ptr [ebp - 0x8c], eax
0x8049a84:   c7 85 f8 fe ff ff 43 75 2b e4   	mov dword ptr [ebp - 0x108], 0xe42b7543
0x8049a8e:   c7 85 f4 fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff7
0x8049a98:   66 c7 85 f2 fe ff ff 01 00      	mov word ptr [ebp - 0x10e], 1
0x8049aa1:   c7 85 ec fe ff ff ee 1f 83 3a   	mov dword ptr [ebp - 0x114], 0x3a831fee
0x8049aab:   c7 85 e8 fe ff ff 0a 82 8b a0   	mov dword ptr [ebp - 0x118], 0xa08b820a
0x8049ab5:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x8049abc:   75 17                           	jne 0x8049ad5 <func_1+0x256>
0x8049abe:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049ac4:   0f bf d0                        	movsx edx, ax
0x8049ac7:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049aca:   98                              	cwde 
0x8049acb:   01 d0                           	add eax, edx
0x8049acd:   85 c0                           	test eax, eax
0x8049acf:   0f 84 3e 05 00 00               	je 0x804a013 <func_1+0x794>
0x8049ad5:   66 c7 85 e2 fe ff ff 82 22      	mov word ptr [ebp - 0x11e], 0x2282
0x8049ade:   c7 45 d0 04 00 00 00            	mov dword ptr [ebp - 0x30], 4
0x8049ae5:   0f b7 85 e2 fe ff ff            	movzx eax, word ptr [ebp - 0x11e]
0x8049aec:   0f be c8                        	movsx ecx, al
0x8049aef:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x8049af4:   75 13                           	jne 0x8049b09 <func_1+0x28a>
0x8049af6:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049af9:   0f bf f0                        	movsx esi, ax
0x8049afc:   b8 02 00 00 00                  	mov eax, 2
0x8049b01:   99                              	cdq 
0x8049b02:   f7 fe                           	idiv esi
0x8049b04:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049b07:   7d 07                           	jge 0x8049b10 <func_1+0x291>
0x8049b09:   b8 01 00 00 00                  	mov eax, 1
0x8049b0e:   eb 05                           	jmp 0x8049b15 <func_1+0x296>
0x8049b10:   b8 00 00 00 00                  	mov eax, 0
0x8049b15:   89 c3                           	mov ebx, eax
0x8049b17:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049b1d:   89 c2                           	mov edx, eax
0x8049b1f:   89 d8                           	mov eax, ebx
0x8049b21:   0f af c2                        	imul eax, edx
0x8049b24:   c0 f8 03                        	sar al, 3
0x8049b27:   0f be c0                        	movsx eax, al
0x8049b2a:   0f bf 7d 92                     	movsx edi, word ptr [ebp - 0x6e]
0x8049b2e:   99                              	cdq 
0x8049b2f:   f7 ff                           	idiv edi
0x8049b31:   0f be c0                        	movsx eax, al
0x8049b34:   0f b7 55 a2                     	movzx edx, word ptr [ebp - 0x5e]
0x8049b38:   0f be da                        	movsx ebx, dl
0x8049b3b:   99                              	cdq 
0x8049b3c:   f7 fb                           	idiv ebx
0x8049b3e:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049b45:   39 c2                           	cmp edx, eax
0x8049b47:   0f 9d c0                        	setge al
0x8049b4a:   89 c2                           	mov edx, eax
0x8049b4c:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049b52:   21 d0                           	and eax, edx
0x8049b54:   0f be d8                        	movsx ebx, al
0x8049b57:   89 c8                           	mov eax, ecx
0x8049b59:   99                              	cdq 
0x8049b5a:   f7 fb                           	idiv ebx
0x8049b5c:   89 d0                           	mov eax, edx
0x8049b5e:   85 c0                           	test eax, eax
0x8049b60:   74 10                           	je 0x8049b72 <func_1+0x2f3>
0x8049b62:   c7 45 a4 df 10 8b 37            	mov dword ptr [ebp - 0x5c], 0x378b10df
0x8049b69:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x8049b6d:   e9 fc 01 00 00                  	jmp 0x8049d6e <func_1+0x4ef>
0x8049b72:   c6 85 e1 fe ff ff f8            	mov byte ptr [ebp - 0x11f], 0xf8
0x8049b79:   c7 85 dc fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x124], 6
0x8049b83:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x8049b88:   75 0a                           	jne 0x8049b94 <func_1+0x315>
0x8049b8a:   c7 85 04 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xfc], 0
0x8049b94:   0f b7 95 e2 fe ff ff            	movzx edx, word ptr [ebp - 0x11e]
0x8049b9b:   89 d0                           	mov eax, edx
0x8049b9d:   01 c0                           	add eax, eax
0x8049b9f:   01 d0                           	add eax, edx
0x8049ba1:   01 c0                           	add eax, eax
0x8049ba3:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x8049ba9:   73 05                           	jae 0x8049bb0 <func_1+0x331>
0x8049bab:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x8049bb0:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049bb4:   74 07                           	je 0x8049bbd <func_1+0x33e>
0x8049bb6:   b8 1f e7 00 00                  	mov eax, 0xe71f
0x8049bbb:   eb 05                           	jmp 0x8049bc2 <func_1+0x343>
0x8049bbd:   b8 00 00 00 00                  	mov eax, 0
0x8049bc2:   09 85 74 ff ff ff               	or dword ptr [ebp - 0x8c], eax
0x8049bc8:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x8049bce:   0f be d0                        	movsx edx, al
0x8049bd1:   0f b7 4d 90                     	movzx ecx, word ptr [ebp - 0x70]
0x8049bd5:   83 7d f0 41                     	cmp dword ptr [ebp - 0x10], 0x41
0x8049bd9:   76 07                           	jbe 0x8049be2 <func_1+0x363>
0x8049bdb:   bb 7f a4 ff ff                  	mov ebx, 0xffffa47f
0x8049be0:   eb 05                           	jmp 0x8049be7 <func_1+0x368>
0x8049be2:   bb 7e a4 ff ff                  	mov ebx, 0xffffa47e
0x8049be7:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049bea:   98                              	cwde 
0x8049beb:   0f af c3                        	imul eax, ebx
0x8049bee:   39 c1                           	cmp ecx, eax
0x8049bf0:   0f 95 c0                        	setne al
0x8049bf3:   0f b6 c0                        	movzx eax, al
0x8049bf6:   29 c2                           	sub edx, eax
0x8049bf8:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x8049bfc:   39 c2                           	cmp edx, eax
0x8049bfe:   7f 3f                           	jg 0x8049c3f <func_1+0x3c0>
0x8049c00:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x8049c0a:   0f b7 45 ee                     	movzx eax, word ptr [ebp - 0x12]
0x8049c0e:   83 c0 01                        	add eax, 1
0x8049c11:   66 89 45 ee                     	mov word ptr [ebp - 0x12], ax
0x8049c15:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049c1b:   89 c2                           	mov edx, eax
0x8049c1d:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049c20:   01 d0                           	add eax, edx
0x8049c22:   0f b6 d0                        	movzx edx, al
0x8049c25:   0f b6 85 e1 fe ff ff            	movzx eax, byte ptr [ebp - 0x11f]
0x8049c2c:   0f af c2                        	imul eax, edx
0x8049c2f:   66 09 45 ec                     	or word ptr [ebp - 0x14], ax
0x8049c33:   80 7d ac 00                     	cmp byte ptr [ebp - 0x54], 0
0x8049c37:   0f 84 2a 01 00 00               	je 0x8049d67 <func_1+0x4e8>
0x8049c3d:   eb cb                           	jmp 0x8049c0a <func_1+0x38b>
0x8049c3f:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049c45:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049c4b:   0f b6 45 ad                     	movzx eax, byte ptr [ebp - 0x53]
0x8049c4f:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x8049c53:   0f be 4d 83                     	movsx ecx, byte ptr [ebp - 0x7d]
0x8049c57:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x8049c5b:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049c61:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x8049c65:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049c6b:   0f bf 5d e8                     	movsx ebx, word ptr [ebp - 0x18]
0x8049c6f:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x8049c75:   0f b6 75 ea                     	movzx esi, byte ptr [ebp - 0x16]
0x8049c79:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x8049c7f:   0f be 7d eb                     	movsx edi, byte ptr [ebp - 0x15]
0x8049c83:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x8049c89:   0f bf 5d ec                     	movsx ebx, word ptr [ebp - 0x14]
0x8049c8d:   89 9d ac fe ff ff               	mov dword ptr [ebp - 0x154], ebx
0x8049c93:   0f b7 75 ee                     	movzx esi, word ptr [ebp - 0x12]
0x8049c97:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049c9d:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x8049ca1:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x8049ca7:   0f bf 5d 8a                     	movsx ebx, word ptr [ebp - 0x76]
0x8049cab:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x8049cb1:   0f b7 75 90                     	movzx esi, word ptr [ebp - 0x70]
0x8049cb5:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x8049cbb:   0f bf 7d 92                     	movsx edi, word ptr [ebp - 0x6e]
0x8049cbf:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049cc5:   0f b7 5d aa                     	movzx ebx, word ptr [ebp - 0x56]
0x8049cc9:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049ccf:   0f be 7d ac                     	movsx edi, byte ptr [ebp - 0x54]
0x8049cd3:   0f bf 75 a2                     	movsx esi, word ptr [ebp - 0x5e]
0x8049cd7:   0f bf 5d c6                     	movsx ebx, word ptr [ebp - 0x3a]
0x8049cdb:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049cde:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049ce4:   50                              	push eax
0x8049ce5:   52                              	push edx
0x8049ce6:   51                              	push ecx
0x8049ce7:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049cea:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049ced:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049cf0:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049cf6:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049cf9:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049cff:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049d05:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049d0b:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049d11:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049d17:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049d1d:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049d23:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049d29:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049d2c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049d2f:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049d32:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049d38:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049d3e:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049d44:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049d47:   57                              	push edi
0x8049d48:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049d4b:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049d4e:   56                              	push esi
0x8049d4f:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049d52:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049d55:   53                              	push ebx
0x8049d56:   e8 cb f8 ff ff                  	call 0x8049626 <set_var>
0x8049d5b:   83 ec 80                        	sub esp, -0x80
0x8049d5e:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x8049d62:   e9 98 0a 00 00                  	jmp 0x804a7ff <func_1+0xf80>
0x8049d67:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x8049d6e:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049d71:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x8049d77:   85 c0                           	test eax, eax
0x8049d79:   0f 84 6b 02 00 00               	je 0x8049fea <func_1+0x76b>
0x8049d7f:   c7 85 d4 fe ff ff dc d3 f8 23   	mov dword ptr [ebp - 0x12c], 0x23f8d3dc
0x8049d89:   c7 45 cc 06 00 00 00            	mov dword ptr [ebp - 0x34], 6
0x8049d90:   0f bf 85 f2 fe ff ff            	movsx eax, word ptr [ebp - 0x10e]
0x8049d97:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049d9a:   0f 8f 55 01 00 00               	jg 0x8049ef5 <func_1+0x676>
0x8049da0:   66 c7 85 ce fe ff ff 6e 7d      	mov word ptr [ebp - 0x132], 0x7d6e
0x8049da9:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049daf:   0f be c0                        	movsx eax, al
0x8049db2:   c1 e0 04                        	shl eax, 4
0x8049db5:   08 45 eb                        	or byte ptr [ebp - 0x15], al
0x8049db8:   0f b7 85 f2 fe ff ff            	movzx eax, word ptr [ebp - 0x10e]
0x8049dbf:   0f be c0                        	movsx eax, al
0x8049dc2:   01 c0                           	add eax, eax
0x8049dc4:   0f be c0                        	movsx eax, al
0x8049dc7:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x8049dcd:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x8049dd3:   66 09 85 ce fe ff ff            	or word ptr [ebp - 0x132], ax
0x8049dda:   0f b6 45 ad                     	movzx eax, byte ptr [ebp - 0x53]
0x8049dde:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x8049de2:   0f be 4d 83                     	movsx ecx, byte ptr [ebp - 0x7d]
0x8049de6:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x8049dea:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x8049df0:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x8049df4:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x8049dfa:   0f bf 5d e8                     	movsx ebx, word ptr [ebp - 0x18]
0x8049dfe:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x8049e04:   0f b6 75 ea                     	movzx esi, byte ptr [ebp - 0x16]
0x8049e08:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x8049e0e:   0f be 7d eb                     	movsx edi, byte ptr [ebp - 0x15]
0x8049e12:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x8049e18:   0f bf 5d ec                     	movsx ebx, word ptr [ebp - 0x14]
0x8049e1c:   89 9d ac fe ff ff               	mov dword ptr [ebp - 0x154], ebx
0x8049e22:   0f b7 75 ee                     	movzx esi, word ptr [ebp - 0x12]
0x8049e26:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x8049e2c:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x8049e30:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x8049e36:   0f bf 5d 8a                     	movsx ebx, word ptr [ebp - 0x76]
0x8049e3a:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x8049e40:   0f b7 75 90                     	movzx esi, word ptr [ebp - 0x70]
0x8049e44:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x8049e4a:   0f bf 7d 92                     	movsx edi, word ptr [ebp - 0x6e]
0x8049e4e:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x8049e54:   0f b7 5d aa                     	movzx ebx, word ptr [ebp - 0x56]
0x8049e58:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x8049e5e:   0f be 7d ac                     	movsx edi, byte ptr [ebp - 0x54]
0x8049e62:   0f bf 75 a2                     	movsx esi, word ptr [ebp - 0x5e]
0x8049e66:   0f bf 5d c6                     	movsx ebx, word ptr [ebp - 0x3a]
0x8049e6a:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049e6d:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049e73:   50                              	push eax
0x8049e74:   52                              	push edx
0x8049e75:   51                              	push ecx
0x8049e76:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049e79:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049e7c:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049e7f:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x8049e85:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049e88:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x8049e8e:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x8049e94:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x8049e9a:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x8049ea0:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x8049ea6:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x8049eac:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x8049eb2:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049eb8:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049ebb:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049ebe:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049ec1:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049ec7:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049ecd:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049ed3:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049ed6:   57                              	push edi
0x8049ed7:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049eda:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049edd:   56                              	push esi
0x8049ede:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049ee1:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049ee4:   53                              	push ebx
0x8049ee5:   e8 3c f7 ff ff                  	call 0x8049626 <set_var>
0x8049eea:   83 ec 80                        	sub esp, -0x80
0x8049eed:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ef0:   e9 0a 09 00 00                  	jmp 0x804a7ff <func_1+0xf80>
0x8049ef5:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049efc:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x8049f00:   83 e8 01                        	sub eax, 1
0x8049f03:   88 45 ea                        	mov byte ptr [ebp - 0x16], al
0x8049f06:   81 bd d4 fe ff ff bb cf 00 00   	cmp dword ptr [ebp - 0x12c], 0xcfbb
0x8049f10:   0f 9f c0                        	setg al
0x8049f13:   0f b6 c0                        	movzx eax, al
0x8049f16:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049f1a:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049f1e:   21 45 d0                        	and dword ptr [ebp - 0x30], eax
0x8049f21:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f24:   0f b6 d0                        	movzx edx, al
0x8049f27:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049f2a:   0f b6 d8                        	movzx ebx, al
0x8049f2d:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x8049f34:   33 85 d4 fe ff ff               	xor eax, dword ptr [ebp - 0x12c]
0x8049f3a:   89 85 ec fe ff ff               	mov dword ptr [ebp - 0x114], eax
0x8049f40:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049f46:   89 c1                           	mov ecx, eax
0x8049f48:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x8049f4c:   09 c8                           	or eax, ecx
0x8049f4e:   0f b6 c0                        	movzx eax, al
0x8049f51:   89 c1                           	mov ecx, eax
0x8049f53:   d3 fb                           	sar ebx, cl
0x8049f55:   89 d8                           	mov eax, ebx
0x8049f57:   85 c0                           	test eax, eax
0x8049f59:   75 06                           	jne 0x8049f61 <func_1+0x6e2>
0x8049f5b:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049f5f:   74 07                           	je 0x8049f68 <func_1+0x6e9>
0x8049f61:   b8 01 00 00 00                  	mov eax, 1
0x8049f66:   eb 05                           	jmp 0x8049f6d <func_1+0x6ee>
0x8049f68:   b8 00 00 00 00                  	mov eax, 0
0x8049f6d:   0f b6 c0                        	movzx eax, al
0x8049f70:   0f af c2                        	imul eax, edx
0x8049f73:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049f76:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049f7d:   eb 49                           	jmp 0x8049fc8 <func_1+0x749>
0x8049f7f:   c7 85 d0 fe ff ff d1 18 a7 32   	mov dword ptr [ebp - 0x130], 0x32a718d1
0x8049f89:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049f8c:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049f90:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x8049f93:   89 c2                           	mov edx, eax
0x8049f95:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049f98:   21 d0                           	and eax, edx
0x8049f9a:   66 89 45 c6                     	mov word ptr [ebp - 0x3a], ax
0x8049f9e:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x8049fa2:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049fa5:   0f 9f c0                        	setg al
0x8049fa8:   0f b6 c0                        	movzx eax, al
0x8049fab:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x8049fb1:   0f b6 85 7b ff ff ff            	movzx eax, byte ptr [ebp - 0x85]
0x8049fb8:   ba 04 00 00 00                  	mov edx, 4
0x8049fbd:   29 c2                           	sub edx, eax
0x8049fbf:   89 d0                           	mov eax, edx
0x8049fc1:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049fc4:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x8049fc8:   83 7d d0 0a                     	cmp dword ptr [ebp - 0x30], 0xa
0x8049fcc:   7e b1                           	jle 0x8049f7f <func_1+0x700>
0x8049fce:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049fd1:   0b 85 f8 fe ff ff               	or eax, dword ptr [ebp - 0x108]
0x8049fd7:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049fda:   c7 45 e0 93 56 ac 8b            	mov dword ptr [ebp - 0x20], 0x8bac5693
0x8049fe1:   c6 45 bb 93                     	mov byte ptr [ebp - 0x45], 0x93
0x8049fe5:   e9 a0 00 00 00                  	jmp 0x804a08a <func_1+0x80b>
0x8049fea:   81 75 e0 b2 25 de 27            	xor dword ptr [ebp - 0x20], 0x27de25b2
0x8049ff1:   83 65 f0 01                     	and dword ptr [ebp - 0x10], 1
0x8049ff5:   8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x8049ff8:   b8 f5 ff 00 00                  	mov eax, 0xfff5
0x8049ffd:   99                              	cdq 
0x8049ffe:   f7 f9                           	idiv ecx
0x804a000:   89 d0                           	mov eax, edx
0x804a002:   31 85 ec fe ff ff               	xor dword ptr [ebp - 0x114], eax
0x804a008:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x804a00e:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a011:   eb 77                           	jmp 0x804a08a <func_1+0x80b>
0x804a013:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x804a01d:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x804a024:   74 1c                           	je 0x804a042 <func_1+0x7c3>
0x804a026:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a02c:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a032:   83 bd f8 fe ff ff 01            	cmp dword ptr [ebp - 0x108], 1
0x804a039:   74 07                           	je 0x804a042 <func_1+0x7c3>
0x804a03b:   b8 01 00 00 00                  	mov eax, 1
0x804a040:   eb 05                           	jmp 0x804a047 <func_1+0x7c8>
0x804a042:   b8 00 00 00 00                  	mov eax, 0
0x804a047:   23 85 fc fe ff ff               	and eax, dword ptr [ebp - 0x104]
0x804a04d:   89 c2                           	mov edx, eax
0x804a04f:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a052:   09 d0                           	or eax, edx
0x804a054:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a057:   80 7d bb 00                     	cmp byte ptr [ebp - 0x45], 0
0x804a05b:   74 0e                           	je 0x804a06b <func_1+0x7ec>
0x804a05d:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a062:   74 07                           	je 0x804a06b <func_1+0x7ec>
0x804a064:   b8 01 00 00 00                  	mov eax, 1
0x804a069:   eb 05                           	jmp 0x804a070 <func_1+0x7f1>
0x804a06b:   b8 00 00 00 00                  	mov eax, 0
0x804a070:   33 45 bc                        	xor eax, dword ptr [ebp - 0x44]
0x804a073:   89 c2                           	mov edx, eax
0x804a075:   83 fa ff                        	cmp edx, -1
0x804a078:   0f 93 c0                        	setae al
0x804a07b:   0f b6 c0                        	movzx eax, al
0x804a07e:   f7 d8                           	neg eax
0x804a080:   29 c2                           	sub edx, eax
0x804a082:   89 d0                           	mov eax, edx
0x804a084:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a08a:   0f bf 85 f2 fe ff ff            	movsx eax, word ptr [ebp - 0x10e]
0x804a091:   66 83 bd 70 ff ff ff 01         	cmp word ptr [ebp - 0x90], 1
0x804a099:   0f 9e c2                        	setle dl
0x804a09c:   0f b6 d2                        	movzx edx, dl
0x804a09f:   8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x804a0a2:   29 d1                           	sub ecx, edx
0x804a0a4:   89 ca                           	mov edx, ecx
0x804a0a6:   09 d0                           	or eax, edx
0x804a0a8:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a0ab:   0f 94 c0                        	sete al
0x804a0ae:   0f b6 c0                        	movzx eax, al
0x804a0b1:   99                              	cdq 
0x804a0b2:   f7 7d 9c                        	idiv dword ptr [ebp - 0x64]
0x804a0b5:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a0bb:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a0c1:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a0c4:   83 45 b4 01                     	add dword ptr [ebp - 0x4c], 1
0x804a0c8:   83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x804a0cc:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x804a0d0:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x804a0d5:   0f 95 c2                        	setne dl
0x804a0d8:   0f b6 d2                        	movzx edx, dl
0x804a0db:   0f bf d2                        	movsx edx, dx
0x804a0de:   c1 e2 0b                        	shl edx, 0xb
0x804a0e1:   89 d1                           	mov ecx, edx
0x804a0e3:   ba 00 00 00 00                  	mov edx, 0
0x804a0e8:   f7 f1                           	div ecx
0x804a0ea:   89 d0                           	mov eax, edx
0x804a0ec:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a0f2:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a0f9:   75 06                           	jne 0x804a101 <func_1+0x882>
0x804a0fb:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a0ff:   74 07                           	je 0x804a108 <func_1+0x889>
0x804a101:   b8 01 00 00 00                  	mov eax, 1
0x804a106:   eb 05                           	jmp 0x804a10d <func_1+0x88e>
0x804a108:   b8 00 00 00 00                  	mov eax, 0
0x804a10d:   20 45 ac                        	and byte ptr [ebp - 0x54], al
0x804a110:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x804a115:   b8 01 00 00 00                  	mov eax, 1
0x804a11a:   31 85 60 ff ff ff               	xor dword ptr [ebp - 0xa0], eax
0x804a120:   e9 29 05 00 00                  	jmp 0x804a64e <func_1+0xdcf>
0x804a125:   c7 85 4c ff ff ff 09 9e cb e3   	mov dword ptr [ebp - 0xb4], 0xe3cb9e09
0x804a12f:   c7 85 48 ff ff ff d3 fe a2 ce   	mov dword ptr [ebp - 0xb8], 0xcea2fed3
0x804a139:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x804a143:   83 bd 60 ff ff ff f4            	cmp dword ptr [ebp - 0xa0], -0xc
0x804a14a:   0f 84 1c 01 00 00               	je 0x804a26c <func_1+0x9ed>
0x804a150:   0f b6 45 ad                     	movzx eax, byte ptr [ebp - 0x53]
0x804a154:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x804a158:   0f be 4d 83                     	movsx ecx, byte ptr [ebp - 0x7d]
0x804a15c:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a160:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a166:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a16a:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a170:   0f bf 5d e8                     	movsx ebx, word ptr [ebp - 0x18]
0x804a174:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a17a:   0f b6 75 ea                     	movzx esi, byte ptr [ebp - 0x16]
0x804a17e:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a184:   0f be 7d eb                     	movsx edi, byte ptr [ebp - 0x15]
0x804a188:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a18e:   0f bf 5d ec                     	movsx ebx, word ptr [ebp - 0x14]
0x804a192:   89 9d ac fe ff ff               	mov dword ptr [ebp - 0x154], ebx
0x804a198:   0f b7 75 ee                     	movzx esi, word ptr [ebp - 0x12]
0x804a19c:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a1a2:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a1a6:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a1ac:   0f bf 5d 8a                     	movsx ebx, word ptr [ebp - 0x76]
0x804a1b0:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x804a1b6:   0f b7 75 90                     	movzx esi, word ptr [ebp - 0x70]
0x804a1ba:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a1c0:   0f bf 7d 92                     	movsx edi, word ptr [ebp - 0x6e]
0x804a1c4:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a1ca:   0f b7 5d aa                     	movzx ebx, word ptr [ebp - 0x56]
0x804a1ce:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a1d4:   0f be 7d ac                     	movsx edi, byte ptr [ebp - 0x54]
0x804a1d8:   0f bf 75 a2                     	movsx esi, word ptr [ebp - 0x5e]
0x804a1dc:   0f bf 5d c6                     	movsx ebx, word ptr [ebp - 0x3a]
0x804a1e0:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a1e3:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a1e9:   50                              	push eax
0x804a1ea:   52                              	push edx
0x804a1eb:   51                              	push ecx
0x804a1ec:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a1ef:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a1f2:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a1f5:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a1fb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a1fe:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a204:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a20a:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a210:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a216:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a21c:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a222:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a228:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a22e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a231:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a234:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a237:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a23d:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a243:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a249:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a24c:   57                              	push edi
0x804a24d:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a250:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a253:   56                              	push esi
0x804a254:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a257:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a25a:   53                              	push ebx
0x804a25b:   e8 c6 f3 ff ff                  	call 0x8049626 <set_var>
0x804a260:   83 ec 80                        	sub esp, -0x80
0x804a263:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x804a267:   e9 93 05 00 00                  	jmp 0x804a7ff <func_1+0xf80>
0x804a26c:   c7 45 f0 1d 00 00 00            	mov dword ptr [ebp - 0x10], 0x1d
0x804a273:   eb 39                           	jmp 0x804a2ae <func_1+0xa2f>
0x804a275:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a279:   75 0a                           	jne 0x804a285 <func_1+0xa06>
0x804a27b:   66 83 bd 72 ff ff ff 00         	cmp word ptr [ebp - 0x8e], 0
0x804a283:   74 07                           	je 0x804a28c <func_1+0xa0d>
0x804a285:   b8 01 00 00 00                  	mov eax, 1
0x804a28a:   eb 05                           	jmp 0x804a291 <func_1+0xa12>
0x804a28c:   b8 00 00 00 00                  	mov eax, 0
0x804a291:   0f b6 d0                        	movzx edx, al
0x804a294:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a29a:   0f b6 c0                        	movzx eax, al
0x804a29d:   0f af c2                        	imul eax, edx
0x804a2a0:   f7 d0                           	not eax
0x804a2a2:   66 c1 f8 08                     	sar ax, 8
0x804a2a6:   98                              	cwde 
0x804a2a7:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a2aa:   83 6d f0 01                     	sub dword ptr [ebp - 0x10], 1
0x804a2ae:   83 7d f0 0e                     	cmp dword ptr [ebp - 0x10], 0xe
0x804a2b2:   75 c1                           	jne 0x804a275 <func_1+0x9f6>
0x804a2b4:   0f b7 45 8a                     	movzx eax, word ptr [ebp - 0x76]
0x804a2b8:   66 c1 e8 0f                     	shr ax, 0xf
0x804a2bc:   0f b6 d0                        	movzx edx, al
0x804a2bf:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a2c3:   39 c2                           	cmp edx, eax
0x804a2c5:   0f 8f e4 02 00 00               	jg 0x804a5af <func_1+0xd30>
0x804a2cb:   66 c7 85 3e ff ff ff 00 00      	mov word ptr [ebp - 0xc2], 0
0x804a2d4:   c7 85 38 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xc8], 7
0x804a2de:   66 c7 85 36 ff ff ff 01 00      	mov word ptr [ebp - 0xca], 1
0x804a2e7:   c6 85 35 ff ff ff 00            	mov byte ptr [ebp - 0xcb], 0
0x804a2ee:   66 c7 85 32 ff ff ff 01 00      	mov word ptr [ebp - 0xce], 1
0x804a2f7:   c7 85 2c ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xd4], 2
0x804a301:   66 83 bd 3e ff ff ff 01         	cmp word ptr [ebp - 0xc2], 1
0x804a309:   0f 94 c0                        	sete al
0x804a30c:   0f b6 c0                        	movzx eax, al
0x804a30f:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a312:   0f 95 c0                        	setne al
0x804a315:   89 c2                           	mov edx, eax
0x804a317:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a31b:   21 d0                           	and eax, edx
0x804a31d:   83 c0 11                        	add eax, 0x11
0x804a320:   f7 d0                           	not eax
0x804a322:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x804a325:   80 7d ac 43                     	cmp byte ptr [ebp - 0x54], 0x43
0x804a329:   0f 9f c0                        	setg al
0x804a32c:   0f b6 c0                        	movzx eax, al
0x804a32f:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a332:   80 7d bb 00                     	cmp byte ptr [ebp - 0x45], 0
0x804a336:   0f 84 e6 01 00 00               	je 0x804a522 <func_1+0xca3>
0x804a33c:   66 c7 85 22 ff ff ff 95 fe      	mov word ptr [ebp - 0xde], 0xfe95
0x804a345:   c7 45 d8 39 00 00 00            	mov dword ptr [ebp - 0x28], 0x39
0x804a34c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a34f:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a355:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a35c:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x804a360:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a366:   0f be c0                        	movsx eax, al
0x804a369:   ba fd ff ff ff                  	mov edx, 0xfffffffd
0x804a36e:   89 c1                           	mov ecx, eax
0x804a370:   d3 fa                           	sar edx, cl
0x804a372:   89 d0                           	mov eax, edx
0x804a374:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a377:   0f 8d d6 00 00 00               	jge 0x804a453 <func_1+0xbd4>
0x804a37d:   c6 85 13 ff ff ff 00            	mov byte ptr [ebp - 0xed], 0
0x804a384:   0f b7 85 36 ff ff ff            	movzx eax, word ptr [ebp - 0xca]
0x804a38b:   8d 50 01                        	lea edx, [eax + 1]
0x804a38e:   66 89 95 36 ff ff ff            	mov word ptr [ebp - 0xca], dx
0x804a395:   88 85 35 ff ff ff               	mov byte ptr [ebp - 0xcb], al
0x804a39b:   80 7d ea 00                     	cmp byte ptr [ebp - 0x16], 0
0x804a39f:   74 07                           	je 0x804a3a8 <func_1+0xb29>
0x804a3a1:   b8 01 00 00 00                  	mov eax, 1
0x804a3a6:   eb 05                           	jmp 0x804a3ad <func_1+0xb2e>
0x804a3a8:   b8 00 00 00 00                  	mov eax, 0
0x804a3ad:   88 45 ac                        	mov byte ptr [ebp - 0x54], al
0x804a3b0:   80 7d ac 00                     	cmp byte ptr [ebp - 0x54], 0
0x804a3b4:   75 06                           	jne 0x804a3bc <func_1+0xb3d>
0x804a3b6:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a3ba:   74 07                           	je 0x804a3c3 <func_1+0xb44>
0x804a3bc:   b8 01 00 00 00                  	mov eax, 1
0x804a3c1:   eb 05                           	jmp 0x804a3c8 <func_1+0xb49>
0x804a3c3:   b8 00 00 00 00                  	mov eax, 0
0x804a3c8:   0f be d0                        	movsx edx, al
0x804a3cb:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a3ce:   0f be c0                        	movsx eax, al
0x804a3d1:   29 c2                           	sub edx, eax
0x804a3d3:   89 d0                           	mov eax, edx
0x804a3d5:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804a3db:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a3e1:   0f b7 c0                        	movzx eax, ax
0x804a3e4:   c1 e0 0a                        	shl eax, 0xa
0x804a3e7:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804a3ed:   0f 93 c0                        	setae al
0x804a3f0:   0f b6 c0                        	movzx eax, al
0x804a3f3:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3f6:   66 83 6d ae 01                  	sub word ptr [ebp - 0x52], 1
0x804a3fb:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a401:   88 45 bb                        	mov byte ptr [ebp - 0x45], al
0x804a404:   80 7d eb 1e                     	cmp byte ptr [ebp - 0x15], 0x1e
0x804a408:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a40c:   75 05                           	jne 0x804a413 <func_1+0xb94>
0x804a40e:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a413:   90                              	nop 
0x804a414:   0f b6 45 83                     	movzx eax, byte ptr [ebp - 0x7d]
0x804a418:   c0 e8 05                        	shr al, 5
0x804a41b:   0f b6 d8                        	movzx ebx, al
0x804a41e:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804a422:   0f be c8                        	movsx ecx, al
0x804a425:   ba 29 8d 8f 4c                  	mov edx, 0x4c8f8d29
0x804a42a:   89 c8                           	mov eax, ecx
0x804a42c:   f7 ea                           	imul edx
0x804a42e:   89 d0                           	mov eax, edx
0x804a430:   c1 f8 05                        	sar eax, 5
0x804a433:   c1 f9 1f                        	sar ecx, 0x1f
0x804a436:   89 ca                           	mov edx, ecx
0x804a438:   29 c2                           	sub edx, eax
0x804a43a:   89 d0                           	mov eax, edx
0x804a43c:   39 c3                           	cmp ebx, eax
0x804a43e:   83 7d 9c 03                     	cmp dword ptr [ebp - 0x64], 3
0x804a442:   0f 94 c0                        	sete al
0x804a445:   0f b6 c0                        	movzx eax, al
0x804a448:   0b 45 98                        	or eax, dword ptr [ebp - 0x68]
0x804a44b:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a451:   eb 79                           	jmp 0x804a4cc <func_1+0xc4d>
0x804a453:   c7 85 1c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe4], 0xffffffff
0x804a45d:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x804a467:   c6 45 ea 00                     	mov byte ptr [ebp - 0x16], 0
0x804a46b:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a472:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a475:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a478:   66 c7 45 e8 e3 ff               	mov word ptr [ebp - 0x18], 0xffe3
0x804a47e:   eb 42                           	jmp 0x804a4c2 <func_1+0xc43>
0x804a480:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x804a48a:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a48e:   75 3b                           	jne 0x804a4cb <func_1+0xc4c>
0x804a490:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a497:   0f 94 c0                        	sete al
0x804a49a:   0f b6 c0                        	movzx eax, al
0x804a49d:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x804a4a3:   0f 9c c0                        	setl al
0x804a4a6:   0f b6 c0                        	movzx eax, al
0x804a4a9:   f7 d0                           	not eax
0x804a4ab:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a4ae:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a4b1:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a4b7:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804a4bb:   83 c0 01                        	add eax, 1
0x804a4be:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x804a4c2:   66 83 7d e8 e8                  	cmp word ptr [ebp - 0x18], -0x18
0x804a4c7:   75 b7                           	jne 0x804a480 <func_1+0xc01>
0x804a4c9:   eb 01                           	jmp 0x804a4cc <func_1+0xc4d>
0x804a4cb:   90                              	nop 
0x804a4cc:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a4d2:   98                              	cwde 
0x804a4d3:   01 c0                           	add eax, eax
0x804a4d5:   66 c1 f8 0b                     	sar ax, 0xb
0x804a4d9:   66 83 f8 01                     	cmp ax, 1
0x804a4dd:   0f 9e c0                        	setle al
0x804a4e0:   0f b6 d0                        	movzx edx, al
0x804a4e3:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a4e7:   0f af c2                        	imul eax, edx
0x804a4ea:   f7 d0                           	not eax
0x804a4ec:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x804a4ef:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a4f2:   89 c1                           	mov ecx, eax
0x804a4f4:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a4f8:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a4fc:   0f bf f2                        	movsx esi, dx
0x804a4ff:   99                              	cdq 
0x804a500:   f7 fe                           	idiv esi
0x804a502:   29 c1                           	sub ecx, eax
0x804a504:   89 c8                           	mov eax, ecx
0x804a506:   0f bf d0                        	movsx edx, ax
0x804a509:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a50f:   98                              	cwde 
0x804a510:   29 c2                           	sub edx, eax
0x804a512:   89 d0                           	mov eax, edx
0x804a514:   83 f8 09                        	cmp eax, 9
0x804a517:   0f 97 c0                        	seta al
0x804a51a:   0f b6 c0                        	movzx eax, al
0x804a51d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a520:   eb 66                           	jmp 0x804a588 <func_1+0xd09>
0x804a522:   c7 85 28 ff ff ff 34 d2 a7 27   	mov dword ptr [ebp - 0xd8], 0x27a7d234
0x804a52c:   c7 85 24 ff ff ff c4 eb 10 be   	mov dword ptr [ebp - 0xdc], 0xbe10ebc4
0x804a536:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a539:   0f be c0                        	movsx eax, al
0x804a53c:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a53f:   0f be 55 ac                     	movsx edx, byte ptr [ebp - 0x54]
0x804a543:   81 bd 28 ff ff ff 2d 06 e9 06   	cmp dword ptr [ebp - 0xd8], 0x6e9062d
0x804a54d:   0f 9f c0                        	setg al
0x804a550:   0f b6 c0                        	movzx eax, al
0x804a553:   01 c2                           	add edx, eax
0x804a555:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a558:   01 d0                           	add eax, edx
0x804a55a:   0d 32 ec 00 00                  	or eax, 0xec32
0x804a55f:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a565:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a56b:   89 c2                           	mov edx, eax
0x804a56d:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a571:   21 d0                           	and eax, edx
0x804a573:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x804a577:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x804a581:   83 ad 24 ff ff ff 01            	sub dword ptr [ebp - 0xdc], 1
0x804a588:   8b bd 74 ff ff ff               	mov edi, dword ptr [ebp - 0x8c]
0x804a58e:   b8 db 01 86 3f                  	mov eax, 0x3f8601db
0x804a593:   ba 00 00 00 00                  	mov edx, 0
0x804a598:   f7 f7                           	div edi
0x804a59a:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a59d:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a5a1:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804a5a4:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a5a7:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a5aa:   e9 9f 00 00 00                  	jmp 0x804a64e <func_1+0xdcf>
0x804a5af:   66 c7 85 46 ff ff ff 6f ea      	mov word ptr [ebp - 0xba], 0xea6f
0x804a5b8:   66 c7 85 44 ff ff ff ff ff      	mov word ptr [ebp - 0xbc], 0xffff
0x804a5c1:   c7 85 40 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc0], 0xffffffff
0x804a5cb:   0f bf 45 ec                     	movsx eax, word ptr [ebp - 0x14]
0x804a5cf:   8b 95 54 ff ff ff               	mov edx, dword ptr [ebp - 0xac]
0x804a5d5:   30 55 ad                        	xor byte ptr [ebp - 0x53], dl
0x804a5d8:   80 7d ad 04                     	cmp byte ptr [ebp - 0x53], 4
0x804a5dc:   0f 94 c2                        	sete dl
0x804a5df:   0f b6 ca                        	movzx ecx, dl
0x804a5e2:   0f bf 95 44 ff ff ff            	movsx edx, word ptr [ebp - 0xbc]
0x804a5e9:   39 d1                           	cmp ecx, edx
0x804a5eb:   7e 07                           	jle 0x804a5f4 <func_1+0xd75>
0x804a5ed:   ba 81 71 58 12                  	mov edx, 0x12587181
0x804a5f2:   eb 05                           	jmp 0x804a5f9 <func_1+0xd7a>
0x804a5f4:   ba 80 71 58 12                  	mov edx, 0x12587180
0x804a5f9:   39 c2                           	cmp edx, eax
0x804a5fb:   0f 94 c0                        	sete al
0x804a5fe:   0f b6 c0                        	movzx eax, al
0x804a601:   66 89 85 52 ff ff ff            	mov word ptr [ebp - 0xae], ax
0x804a608:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a60e:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a614:   0f b6 85 69 ff ff ff            	movzx eax, byte ptr [ebp - 0x97]
0x804a61b:   0f b7 95 44 ff ff ff            	movzx edx, word ptr [ebp - 0xbc]
0x804a622:   66 c1 ea 09                     	shr dx, 9
0x804a626:   0f b6 c0                        	movzx eax, al
0x804a629:   f6 f2                           	div dl
0x804a62b:   0f b6 c4                        	movzx eax, ah
0x804a62e:   0f b6 c0                        	movzx eax, al
0x804a631:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a637:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a63d:   33 45 b4                        	xor eax, dword ptr [ebp - 0x4c]
0x804a640:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a643:   80 7d bb 00                     	cmp byte ptr [ebp - 0x45], 0
0x804a647:   74 05                           	je 0x804a64e <func_1+0xdcf>
0x804a649:   e9 eb fa ff ff                  	jmp 0x804a139 <func_1+0x8ba>
0x804a64e:   0f bf 45 92                     	movsx eax, word ptr [ebp - 0x6e]
0x804a652:   21 45 d4                        	and dword ptr [ebp - 0x2c], eax
0x804a655:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a65c:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804a662:   c7 45 f0 fe ff ff ff            	mov dword ptr [ebp - 0x10], 0xfffffffe
0x804a669:   eb 74                           	jmp 0x804a6df <func_1+0xe60>
0x804a66b:   c7 85 c8 fe ff ff ce 24 f4 42   	mov dword ptr [ebp - 0x138], 0x42f424ce
0x804a675:   66 c7 85 c6 fe ff ff b2 25      	mov word ptr [ebp - 0x13a], 0x25b2
0x804a67e:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x804a684:   0f be c0                        	movsx eax, al
0x804a687:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804a68c:   89 c1                           	mov ecx, eax
0x804a68e:   d3 fa                           	sar edx, cl
0x804a690:   89 d0                           	mov eax, edx
0x804a692:   23 45 94                        	and eax, dword ptr [ebp - 0x6c]
0x804a695:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x804a698:   0f b6 55 bb                     	movzx edx, byte ptr [ebp - 0x45]
0x804a69c:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a69f:   01 d0                           	add eax, edx
0x804a6a1:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804a6a7:   0f b7 85 72 ff ff ff            	movzx eax, word ptr [ebp - 0x8e]
0x804a6ae:   66 81 bd c6 fe ff ff 6a 01      	cmp word ptr [ebp - 0x13a], 0x16a
0x804a6b7:   7f 07                           	jg 0x804a6c0 <func_1+0xe41>
0x804a6b9:   ba ff 4e b8 e1                  	mov edx, 0xe1b84eff
0x804a6be:   eb 05                           	jmp 0x804a6c5 <func_1+0xe46>
0x804a6c0:   ba 00 4f b8 e1                  	mov edx, 0xe1b84f00
0x804a6c5:   39 c2                           	cmp edx, eax
0x804a6c7:   0f 93 c0                        	setae al
0x804a6ca:   0f b6 c0                        	movzx eax, al
0x804a6cd:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a6d3:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x804a6d7:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a6db:   83 45 f0 01                     	add dword ptr [ebp - 0x10], 1
0x804a6df:   83 7d f0 26                     	cmp dword ptr [ebp - 0x10], 0x26
0x804a6e3:   76 86                           	jbe 0x804a66b <func_1+0xdec>
0x804a6e5:   0f b6 45 ad                     	movzx eax, byte ptr [ebp - 0x53]
0x804a6e9:   0f b7 55 ae                     	movzx edx, word ptr [ebp - 0x52]
0x804a6ed:   0f be 4d 83                     	movsx ecx, byte ptr [ebp - 0x7d]
0x804a6f1:   0f b6 75 bb                     	movzx esi, byte ptr [ebp - 0x45]
0x804a6f5:   89 b5 c0 fe ff ff               	mov dword ptr [ebp - 0x140], esi
0x804a6fb:   0f b7 7d e6                     	movzx edi, word ptr [ebp - 0x1a]
0x804a6ff:   89 bd bc fe ff ff               	mov dword ptr [ebp - 0x144], edi
0x804a705:   0f bf 5d e8                     	movsx ebx, word ptr [ebp - 0x18]
0x804a709:   89 9d b8 fe ff ff               	mov dword ptr [ebp - 0x148], ebx
0x804a70f:   0f b6 75 ea                     	movzx esi, byte ptr [ebp - 0x16]
0x804a713:   89 b5 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], esi
0x804a719:   0f be 7d eb                     	movsx edi, byte ptr [ebp - 0x15]
0x804a71d:   89 bd b0 fe ff ff               	mov dword ptr [ebp - 0x150], edi
0x804a723:   0f bf 5d ec                     	movsx ebx, word ptr [ebp - 0x14]
0x804a727:   89 9d ac fe ff ff               	mov dword ptr [ebp - 0x154], ebx
0x804a72d:   0f b7 75 ee                     	movzx esi, word ptr [ebp - 0x12]
0x804a731:   89 b5 a8 fe ff ff               	mov dword ptr [ebp - 0x158], esi
0x804a737:   0f bf 7d 88                     	movsx edi, word ptr [ebp - 0x78]
0x804a73b:   89 bd a4 fe ff ff               	mov dword ptr [ebp - 0x15c], edi
0x804a741:   0f bf 5d 8a                     	movsx ebx, word ptr [ebp - 0x76]
0x804a745:   89 9d a0 fe ff ff               	mov dword ptr [ebp - 0x160], ebx
0x804a74b:   0f b7 75 90                     	movzx esi, word ptr [ebp - 0x70]
0x804a74f:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a755:   0f bf 7d 92                     	movsx edi, word ptr [ebp - 0x6e]
0x804a759:   89 bd 98 fe ff ff               	mov dword ptr [ebp - 0x168], edi
0x804a75f:   0f b7 5d aa                     	movzx ebx, word ptr [ebp - 0x56]
0x804a763:   89 9d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ebx
0x804a769:   0f be 7d ac                     	movsx edi, byte ptr [ebp - 0x54]
0x804a76d:   0f bf 75 a2                     	movsx esi, word ptr [ebp - 0x5e]
0x804a771:   0f bf 5d c6                     	movsx ebx, word ptr [ebp - 0x3a]
0x804a775:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a778:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a77e:   50                              	push eax
0x804a77f:   52                              	push edx
0x804a780:   51                              	push ecx
0x804a781:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a784:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a787:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a78a:   ff b5 c0 fe ff ff               	push dword ptr [ebp - 0x140]
0x804a790:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a793:   ff b5 bc fe ff ff               	push dword ptr [ebp - 0x144]
0x804a799:   ff b5 b8 fe ff ff               	push dword ptr [ebp - 0x148]
0x804a79f:   ff b5 b4 fe ff ff               	push dword ptr [ebp - 0x14c]
0x804a7a5:   ff b5 b0 fe ff ff               	push dword ptr [ebp - 0x150]
0x804a7ab:   ff b5 ac fe ff ff               	push dword ptr [ebp - 0x154]
0x804a7b1:   ff b5 a8 fe ff ff               	push dword ptr [ebp - 0x158]
0x804a7b7:   ff b5 a4 fe ff ff               	push dword ptr [ebp - 0x15c]
0x804a7bd:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a7c3:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a7c6:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a7c9:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a7cc:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a7d2:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a7d8:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a7de:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a7e1:   57                              	push edi
0x804a7e2:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a7e5:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a7e8:   56                              	push esi
0x804a7e9:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a7ec:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7ef:   53                              	push ebx
0x804a7f0:   e8 31 ee ff ff                  	call 0x8049626 <set_var>
0x804a7f5:   83 ec 80                        	sub esp, -0x80
0x804a7f8:   0f bf 85 70 ff ff ff            	movsx eax, word ptr [ebp - 0x90]
0x804a7ff:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a802:   5b                              	pop ebx
0x804a803:   5e                              	pop esi
0x804a804:   5f                              	pop edi
0x804a805:   5d                              	pop ebp
0x804a806:   c3                              	ret 
; function: main at 0x804a807 -- 0x804ac7a
0x804a807:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a80b:   83 e4 f0                        	and esp, 0xfffffff0
0x804a80e:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a811:   55                              	push ebp
0x804a812:   89 e5                           	mov ebp, esp
0x804a814:   53                              	push ebx
0x804a815:   51                              	push ecx
0x804a816:   83 ec 10                        	sub esp, 0x10
0x804a819:   e8 72 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a81e:   81 c3 e2 27 00 00               	add ebx, 0x27e2
0x804a824:   89 c8                           	mov eax, ecx
0x804a826:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a82d:   83 38 02                        	cmp dword ptr [eax], 2
0x804a830:   75 26                           	jne 0x804a858 <main+0x51>
0x804a832:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a835:   83 c0 04                        	add eax, 4
0x804a838:   8b 00                           	mov eax, dword ptr [eax]
0x804a83a:   83 ec 08                        	sub esp, 8
0x804a83d:   8d 93 6c dd ff ff               	lea edx, [ebx - 0x2294]
0x804a843:   52                              	push edx
0x804a844:   50                              	push eax
0x804a845:   e8 b6 da ff ff                  	call 0x8048300 <strcmp>
0x804a84a:   83 c4 10                        	add esp, 0x10
0x804a84d:   85 c0                           	test eax, eax
0x804a84f:   75 07                           	jne 0x804a858 <main+0x51>
0x804a851:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a858:   e8 f9 db ff ff                  	call 0x8048456 <platform_main_begin>
0x804a85d:   e8 09 ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a862:   e8 18 f0 ff ff                  	call 0x804987f <func_1>
0x804a867:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x804a86c:   89 c2                           	mov edx, eax
0x804a86e:   83 ec 04                        	sub esp, 4
0x804a871:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a874:   8d 83 6e dd ff ff               	lea eax, [ebx - 0x2292]
0x804a87a:   50                              	push eax
0x804a87b:   52                              	push edx
0x804a87c:   e8 f6 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a881:   83 c4 10                        	add esp, 0x10
0x804a884:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a88b:   98                              	cwde 
0x804a88c:   83 ec 04                        	sub esp, 4
0x804a88f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a892:   8d 93 72 dd ff ff               	lea edx, [ebx - 0x228e]
0x804a898:   52                              	push edx
0x804a899:   50                              	push eax
0x804a89a:   e8 d8 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a89f:   83 c4 10                        	add esp, 0x10
0x804a8a2:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a8a8:   89 c2                           	mov edx, eax
0x804a8aa:   83 ec 04                        	sub esp, 4
0x804a8ad:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b0:   8d 83 77 dd ff ff               	lea eax, [ebx - 0x2289]
0x804a8b6:   50                              	push eax
0x804a8b7:   52                              	push edx
0x804a8b8:   e8 ba ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8bd:   83 c4 10                        	add esp, 0x10
0x804a8c0:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a8c6:   89 c2                           	mov edx, eax
0x804a8c8:   83 ec 04                        	sub esp, 4
0x804a8cb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ce:   8d 83 7c dd ff ff               	lea eax, [ebx - 0x2284]
0x804a8d4:   50                              	push eax
0x804a8d5:   52                              	push edx
0x804a8d6:   e8 9c ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8db:   83 c4 10                        	add esp, 0x10
0x804a8de:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804a8e5:   98                              	cwde 
0x804a8e6:   83 ec 04                        	sub esp, 4
0x804a8e9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8ec:   8d 93 81 dd ff ff               	lea edx, [ebx - 0x227f]
0x804a8f2:   52                              	push edx
0x804a8f3:   50                              	push eax
0x804a8f4:   e8 7e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8f9:   83 c4 10                        	add esp, 0x10
0x804a8fc:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a902:   89 c2                           	mov edx, eax
0x804a904:   83 ec 04                        	sub esp, 4
0x804a907:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a90a:   8d 83 86 dd ff ff               	lea eax, [ebx - 0x227a]
0x804a910:   50                              	push eax
0x804a911:   52                              	push edx
0x804a912:   e8 60 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a917:   83 c4 10                        	add esp, 0x10
0x804a91a:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a920:   89 c2                           	mov edx, eax
0x804a922:   83 ec 04                        	sub esp, 4
0x804a925:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a928:   8d 83 8b dd ff ff               	lea eax, [ebx - 0x2275]
0x804a92e:   50                              	push eax
0x804a92f:   52                              	push edx
0x804a930:   e8 42 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a935:   83 c4 10                        	add esp, 0x10
0x804a938:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804a93f:   0f be c0                        	movsx eax, al
0x804a942:   83 ec 04                        	sub esp, 4
0x804a945:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a948:   8d 93 90 dd ff ff               	lea edx, [ebx - 0x2270]
0x804a94e:   52                              	push edx
0x804a94f:   50                              	push eax
0x804a950:   e8 22 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a955:   83 c4 10                        	add esp, 0x10
0x804a958:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804a95e:   89 c2                           	mov edx, eax
0x804a960:   83 ec 04                        	sub esp, 4
0x804a963:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a966:   8d 83 95 dd ff ff               	lea eax, [ebx - 0x226b]
0x804a96c:   50                              	push eax
0x804a96d:   52                              	push edx
0x804a96e:   e8 04 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a973:   83 c4 10                        	add esp, 0x10
0x804a976:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804a97d:   0f b7 c0                        	movzx eax, ax
0x804a980:   83 ec 04                        	sub esp, 4
0x804a983:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a986:   8d 93 9a dd ff ff               	lea edx, [ebx - 0x2266]
0x804a98c:   52                              	push edx
0x804a98d:   50                              	push eax
0x804a98e:   e8 e4 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a993:   83 c4 10                        	add esp, 0x10
0x804a996:   0f b7 83 46 00 00 00            	movzx eax, word ptr [ebx + 0x46]
0x804a99d:   98                              	cwde 
0x804a99e:   83 ec 04                        	sub esp, 4
0x804a9a1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a4:   8d 93 9f dd ff ff               	lea edx, [ebx - 0x2261]
0x804a9aa:   52                              	push edx
0x804a9ab:   50                              	push eax
0x804a9ac:   e8 c6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b1:   83 c4 10                        	add esp, 0x10
0x804a9b4:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804a9bb:   0f b7 c0                        	movzx eax, ax
0x804a9be:   83 ec 04                        	sub esp, 4
0x804a9c1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c4:   8d 93 a4 dd ff ff               	lea edx, [ebx - 0x225c]
0x804a9ca:   52                              	push edx
0x804a9cb:   50                              	push eax
0x804a9cc:   e8 a6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d1:   83 c4 10                        	add esp, 0x10
0x804a9d4:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a9da:   89 c2                           	mov edx, eax
0x804a9dc:   83 ec 04                        	sub esp, 4
0x804a9df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e2:   8d 83 a9 dd ff ff               	lea eax, [ebx - 0x2257]
0x804a9e8:   50                              	push eax
0x804a9e9:   52                              	push edx
0x804a9ea:   e8 88 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ef:   83 c4 10                        	add esp, 0x10
0x804a9f2:   8b 83 c4 04 00 00               	mov eax, dword ptr [ebx + 0x4c4]
0x804a9f8:   83 ec 04                        	sub esp, 4
0x804a9fb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fe:   8d 93 af dd ff ff               	lea edx, [ebx - 0x2251]
0x804aa04:   52                              	push edx
0x804aa05:   50                              	push eax
0x804aa06:   e8 6c eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa0b:   83 c4 10                        	add esp, 0x10
0x804aa0e:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804aa14:   89 c2                           	mov edx, eax
0x804aa16:   83 ec 04                        	sub esp, 4
0x804aa19:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa1c:   8d 83 b5 dd ff ff               	lea eax, [ebx - 0x224b]
0x804aa22:   50                              	push eax
0x804aa23:   52                              	push edx
0x804aa24:   e8 4e eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa29:   83 c4 10                        	add esp, 0x10
0x804aa2c:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804aa33:   98                              	cwde 
0x804aa34:   83 ec 04                        	sub esp, 4
0x804aa37:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa3a:   8d 93 bb dd ff ff               	lea edx, [ebx - 0x2245]
0x804aa40:   52                              	push edx
0x804aa41:   50                              	push eax
0x804aa42:   e8 30 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa47:   83 c4 10                        	add esp, 0x10
0x804aa4a:   0f b7 83 56 00 00 00            	movzx eax, word ptr [ebx + 0x56]
0x804aa51:   98                              	cwde 
0x804aa52:   83 ec 04                        	sub esp, 4
0x804aa55:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa58:   8d 93 c1 dd ff ff               	lea edx, [ebx - 0x223f]
0x804aa5e:   52                              	push edx
0x804aa5f:   50                              	push eax
0x804aa60:   e8 12 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa65:   83 c4 10                        	add esp, 0x10
0x804aa68:   0f b7 83 c8 04 00 00            	movzx eax, word ptr [ebx + 0x4c8]
0x804aa6f:   0f b7 c0                        	movzx eax, ax
0x804aa72:   83 ec 04                        	sub esp, 4
0x804aa75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa78:   8d 93 c7 dd ff ff               	lea edx, [ebx - 0x2239]
0x804aa7e:   52                              	push edx
0x804aa7f:   50                              	push eax
0x804aa80:   e8 f2 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa85:   83 c4 10                        	add esp, 0x10
0x804aa88:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804aa8f:   98                              	cwde 
0x804aa90:   83 ec 04                        	sub esp, 4
0x804aa93:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa96:   8d 93 cd dd ff ff               	lea edx, [ebx - 0x2233]
0x804aa9c:   52                              	push edx
0x804aa9d:   50                              	push eax
0x804aa9e:   e8 d4 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa3:   83 c4 10                        	add esp, 0x10
0x804aaa6:   0f b6 83 ca 04 00 00            	movzx eax, byte ptr [ebx + 0x4ca]
0x804aaad:   0f be c0                        	movsx eax, al
0x804aab0:   83 ec 04                        	sub esp, 4
0x804aab3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab6:   8d 93 d3 dd ff ff               	lea edx, [ebx - 0x222d]
0x804aabc:   52                              	push edx
0x804aabd:   50                              	push eax
0x804aabe:   e8 b4 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac3:   83 c4 10                        	add esp, 0x10
0x804aac6:   0f b6 83 5a 00 00 00            	movzx eax, byte ptr [ebx + 0x5a]
0x804aacd:   0f b6 c0                        	movzx eax, al
0x804aad0:   83 ec 04                        	sub esp, 4
0x804aad3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad6:   8d 93 d9 dd ff ff               	lea edx, [ebx - 0x2227]
0x804aadc:   52                              	push edx
0x804aadd:   50                              	push eax
0x804aade:   e8 94 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae3:   83 c4 10                        	add esp, 0x10
0x804aae6:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804aaed:   98                              	cwde 
0x804aaee:   83 ec 04                        	sub esp, 4
0x804aaf1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf4:   8d 93 df dd ff ff               	lea edx, [ebx - 0x2221]
0x804aafa:   52                              	push edx
0x804aafb:   50                              	push eax
0x804aafc:   e8 76 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab01:   83 c4 10                        	add esp, 0x10
0x804ab04:   0f b7 83 5e 00 00 00            	movzx eax, word ptr [ebx + 0x5e]
0x804ab0b:   0f b7 c0                        	movzx eax, ax
0x804ab0e:   83 ec 04                        	sub esp, 4
0x804ab11:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab14:   8d 93 e5 dd ff ff               	lea edx, [ebx - 0x221b]
0x804ab1a:   52                              	push edx
0x804ab1b:   50                              	push eax
0x804ab1c:   e8 56 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab21:   83 c4 10                        	add esp, 0x10
0x804ab24:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ab2a:   89 c2                           	mov edx, eax
0x804ab2c:   83 ec 04                        	sub esp, 4
0x804ab2f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab32:   8d 83 eb dd ff ff               	lea eax, [ebx - 0x2215]
0x804ab38:   50                              	push eax
0x804ab39:   52                              	push edx
0x804ab3a:   e8 38 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab3f:   83 c4 10                        	add esp, 0x10
0x804ab42:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804ab49:   0f b6 c0                        	movzx eax, al
0x804ab4c:   83 ec 04                        	sub esp, 4
0x804ab4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab52:   8d 93 f1 dd ff ff               	lea edx, [ebx - 0x220f]
0x804ab58:   52                              	push edx
0x804ab59:   50                              	push eax
0x804ab5a:   e8 18 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab5f:   83 c4 10                        	add esp, 0x10
0x804ab62:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804ab68:   83 ec 04                        	sub esp, 4
0x804ab6b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab6e:   8d 93 f7 dd ff ff               	lea edx, [ebx - 0x2209]
0x804ab74:   52                              	push edx
0x804ab75:   50                              	push eax
0x804ab76:   e8 fc e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab7b:   83 c4 10                        	add esp, 0x10
0x804ab7e:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ab84:   89 c2                           	mov edx, eax
0x804ab86:   83 ec 04                        	sub esp, 4
0x804ab89:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab8c:   8d 83 fd dd ff ff               	lea eax, [ebx - 0x2203]
0x804ab92:   50                              	push eax
0x804ab93:   52                              	push edx
0x804ab94:   e8 de e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab99:   83 c4 10                        	add esp, 0x10
0x804ab9c:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804aba2:   89 c2                           	mov edx, eax
0x804aba4:   83 ec 04                        	sub esp, 4
0x804aba7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abaa:   8d 83 03 de ff ff               	lea eax, [ebx - 0x21fd]
0x804abb0:   50                              	push eax
0x804abb1:   52                              	push edx
0x804abb2:   e8 c0 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb7:   83 c4 10                        	add esp, 0x10
0x804abba:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804abc1:   0f be c0                        	movsx eax, al
0x804abc4:   83 ec 04                        	sub esp, 4
0x804abc7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abca:   8d 93 09 de ff ff               	lea edx, [ebx - 0x21f7]
0x804abd0:   52                              	push edx
0x804abd1:   50                              	push eax
0x804abd2:   e8 a0 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abd7:   83 c4 10                        	add esp, 0x10
0x804abda:   0f b7 83 76 00 00 00            	movzx eax, word ptr [ebx + 0x76]
0x804abe1:   0f b7 c0                        	movzx eax, ax
0x804abe4:   83 ec 04                        	sub esp, 4
0x804abe7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abea:   8d 93 0f de ff ff               	lea edx, [ebx - 0x21f1]
0x804abf0:   52                              	push edx
0x804abf1:   50                              	push eax
0x804abf2:   e8 80 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abf7:   83 c4 10                        	add esp, 0x10
0x804abfa:   0f b6 83 78 00 00 00            	movzx eax, byte ptr [ebx + 0x78]
0x804ac01:   0f b6 c0                        	movzx eax, al
0x804ac04:   83 ec 04                        	sub esp, 4
0x804ac07:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac0a:   8d 93 15 de ff ff               	lea edx, [ebx - 0x21eb]
0x804ac10:   52                              	push edx
0x804ac11:   50                              	push eax
0x804ac12:   e8 60 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac17:   83 c4 10                        	add esp, 0x10
0x804ac1a:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804ac20:   89 c2                           	mov edx, eax
0x804ac22:   83 ec 04                        	sub esp, 4
0x804ac25:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac28:   8d 83 1b de ff ff               	lea eax, [ebx - 0x21e5]
0x804ac2e:   50                              	push eax
0x804ac2f:   52                              	push edx
0x804ac30:   e8 42 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac35:   83 c4 10                        	add esp, 0x10
0x804ac38:   8b 83 80 00 00 00               	mov eax, dword ptr [ebx + 0x80]
0x804ac3e:   83 ec 04                        	sub esp, 4
0x804ac41:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac44:   8d 93 21 de ff ff               	lea edx, [ebx - 0x21df]
0x804ac4a:   52                              	push edx
0x804ac4b:   50                              	push eax
0x804ac4c:   e8 26 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac51:   83 c4 10                        	add esp, 0x10
0x804ac54:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ac5a:   f7 d0                           	not eax
0x804ac5c:   83 ec 08                        	sub esp, 8
0x804ac5f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac62:   50                              	push eax
0x804ac63:   e8 fe d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ac68:   83 c4 10                        	add esp, 0x10
0x804ac6b:   b8 00 00 00 00                  	mov eax, 0
0x804ac70:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ac73:   59                              	pop ecx
0x804ac74:   5b                              	pop ebx
0x804ac75:   5d                              	pop ebp
0x804ac76:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ac79:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ac7a -- 0x804ac7e
0x804ac7a:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ac7d:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ac7e -- 0x804ac82
0x804ac7e:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ac81:   c3                              	ret 
; data inside code section at 0x804ac82 -- 0x804ac90
0x804ac82:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __libc_csu_init at 0x804ac90 -- 0x804aced
0x804ac90:   55                              	push ebp
0x804ac91:   57                              	push edi
0x804ac92:   56                              	push esi
0x804ac93:   53                              	push ebx
0x804ac94:   e8 f7 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac99:   81 c3 67 23 00 00               	add ebx, 0x2367
0x804ac9f:   83 ec 0c                        	sub esp, 0xc
0x804aca2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aca6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804acac:   e8 1b d6 ff ff                  	call 0x80482cc <_init>
0x804acb1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804acb7:   29 c6                           	sub esi, eax
0x804acb9:   c1 fe 02                        	sar esi, 2
0x804acbc:   85 f6                           	test esi, esi
0x804acbe:   74 25                           	je 0x804ace5 <__libc_csu_init+0x55>
0x804acc0:   31 ff                           	xor edi, edi
0x804acc2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804acc8:   83 ec 04                        	sub esp, 4
0x804accb:   55                              	push ebp
0x804accc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804acd0:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804acd4:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804acdb:   83 c7 01                        	add edi, 1
0x804acde:   83 c4 10                        	add esp, 0x10
0x804ace1:   39 fe                           	cmp esi, edi
0x804ace3:   75 e3                           	jne 0x804acc8 <__libc_csu_init+0x38>
0x804ace5:   83 c4 0c                        	add esp, 0xc
0x804ace8:   5b                              	pop ebx
0x804ace9:   5e                              	pop esi
0x804acea:   5f                              	pop edi
0x804aceb:   5d                              	pop ebp
0x804acec:   c3                              	ret 
; data inside code section at 0x804aced -- 0x804acf0
0x804aced:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804acf0 -- 0x804acf2
0x804acf0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804acf4 -- 0x804ad08
0x804acf4:   53                              	push ebx
0x804acf5:   83 ec 08                        	sub esp, 8
0x804acf8:   e8 93 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804acfd:   81 c3 03 23 00 00               	add ebx, 0x2303
0x804ad03:   83 c4 08                        	add esp, 8
0x804ad06:   5b                              	pop ebx
0x804ad07:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 0c ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804ad08:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804ad18:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ad28:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ad38:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ad48:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ad58:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ad68:   fd ff ff ff 31 00 67 5f  32 00 67 5f 31 32 00 67   |....1.g_2.g_12.g|
0x804ad78:   5f 33 30 00 67 5f 33 31  00 67 5f 34 36 00 67 5f   |_30.g_31.g_46.g_|
0x804ad88:   34 37 00 67 5f 34 38 00  67 5f 36 31 00 67 5f 36   |47.g_48.g_61.g_6|
0x804ad98:   35 00 67 5f 37 34 00 67  5f 39 30 00 67 5f 39 36   |5.g_74.g_90.g_96|
0x804ada8:   00 67 5f 31 32 32 00 67  5f 31 32 33 00 67 5f 31   |.g_122.g_123.g_1|
0x804adb8:   34 38 00 67 5f 31 35 30  00 67 5f 31 35 31 00 67   |48.g_150.g_151.g|
0x804adc8:   5f 31 35 32 00 67 5f 31  36 32 00 67 5f 31 36 39   |_152.g_162.g_169|
0x804add8:   00 67 5f 31 39 30 00 67  5f 31 39 33 00 67 5f 32   |.g_190.g_193.g_2|
0x804ade8:   30 33 00 67 5f 32 30 39  00 67 5f 32 31 30 00 67   |03.g_209.g_210.g|
0x804adf8:   5f 32 34 30 00 67 5f 32  39 38 00 67 5f 33 33 36   |_240.g_298.g_336|
0x804ae08:   00 67 5f 33 33 37 00 67  5f 33 33 38 00 67 5f 34   |.g_337.g_338.g_4|
0x804ae18:   31 38 00 67 5f 34 34 32  00 67 5f 34 34 33 00 00   |18.g_442.g_443..|
0x804ae28:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804ae38:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804ae48:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ae58:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ae68:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ae78:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ae88:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ae90:   01 1b 03 3b b8 02 00 00  56 00 00 00 60 d4 ff ff   |...;....V...`...|
0x804aea0:   e8 02 00 00 a0 d4 ff ff  0c 03 00 00 f0 d4 ff ff   |................|
0x804aeb0:   d4 02 00 00 c6 d5 ff ff  20 03 00 00 d6 d5 ff ff   |........ .......|
0x804aec0:   40 03 00 00 04 d6 ff ff  64 03 00 00 22 d6 ff ff   |@.......d..."...|
0x804aed0:   84 03 00 00 4a d6 ff ff  a4 03 00 00 74 d6 ff ff   |....J.......t...|
0x804aee0:   c4 03 00 00 9d d6 ff ff  e4 03 00 00 e0 d6 ff ff   |................|
0x804aef0:   04 04 00 00 21 d7 ff ff  24 04 00 00 79 d7 ff ff   |....!...$...y...|
0x804af00:   48 04 00 00 cb d7 ff ff  6c 04 00 00 08 d8 ff ff   |H.......l.......|
0x804af10:   8c 04 00 00 3f d8 ff ff  ac 04 00 00 5e d8 ff ff   |....?.......^...|
0x804af20:   cc 04 00 00 88 d8 ff ff  ec 04 00 00 b4 d8 ff ff   |................|
0x804af30:   0c 05 00 00 df d8 ff ff  2c 05 00 00 28 d9 ff ff   |........,...(...|
0x804af40:   4c 05 00 00 6f d9 ff ff  6c 05 00 00 c9 d9 ff ff   |L...o...l.......|
0x804af50:   90 05 00 00 1d da ff ff  b4 05 00 00 5c da ff ff   |............\...|
0x804af60:   d4 05 00 00 95 da ff ff  f4 05 00 00 b7 da ff ff   |................|
0x804af70:   14 06 00 00 05 db ff ff  34 06 00 00 41 db ff ff   |........4...A...|
0x804af80:   54 06 00 00 ca db ff ff  74 06 00 00 fc db ff ff   |T.......t.......|
0x804af90:   94 06 00 00 2c dc ff ff  b4 06 00 00 71 dc ff ff   |....,.......q...|
0x804afa0:   d4 06 00 00 b0 dc ff ff  f4 06 00 00 e2 dc ff ff   |................|
0x804afb0:   14 07 00 00 0e dd ff ff  34 07 00 00 2c dd ff ff   |........4...,...|
0x804afc0:   54 07 00 00 54 dd ff ff  74 07 00 00 79 dd ff ff   |T...T...t...y...|
0x804afd0:   94 07 00 00 9e dd ff ff  b4 07 00 00 d5 dd ff ff   |................|
0x804afe0:   d4 07 00 00 09 de ff ff  f4 07 00 00 5b de ff ff   |............[...|
0x804aff0:   18 08 00 00 a7 de ff ff  3c 08 00 00 de de ff ff   |........<.......|
0x804b000:   5c 08 00 00 0f df ff ff  7c 08 00 00 2e df ff ff   |\.......|.......|
0x804b010:   9c 08 00 00 58 df ff ff  bc 08 00 00 80 df ff ff   |....X...........|
0x804b020:   dc 08 00 00 a9 df ff ff  fc 08 00 00 e5 df ff ff   |................|
0x804b030:   1c 09 00 00 1f e0 ff ff  3c 09 00 00 72 e0 ff ff   |........<...r...|
0x804b040:   60 09 00 00 bf e0 ff ff  84 09 00 00 f7 e0 ff ff   |`...............|
0x804b050:   a4 09 00 00 29 e1 ff ff  c4 09 00 00 3d e1 ff ff   |....).......=...|
0x804b060:   e4 09 00 00 54 e1 ff ff  04 0a 00 00 69 e1 ff ff   |....T.......i...|
0x804b070:   24 0a 00 00 7f e1 ff ff  44 0a 00 00 a6 e1 ff ff   |$.......D.......|
0x804b080:   64 0a 00 00 cb e1 ff ff  84 0a 00 00 0a e2 ff ff   |d...............|
0x804b090:   a4 0a 00 00 43 e2 ff ff  c4 0a 00 00 6f e2 ff ff   |....C.......o...|
0x804b0a0:   e4 0a 00 00 95 e2 ff ff  04 0b 00 00 d7 e2 ff ff   |................|
0x804b0b0:   24 0b 00 00 19 e3 ff ff  44 0b 00 00 5b e3 ff ff   |$.......D...[...|
0x804b0c0:   64 0b 00 00 d0 e3 ff ff  84 0b 00 00 2d e4 ff ff   |d...........-...|
0x804b0d0:   a4 0b 00 00 8a e4 ff ff  c4 0b 00 00 e7 e4 ff ff   |................|
0x804b0e0:   e4 0b 00 00 77 e5 ff ff  04 0c 00 00 db e5 ff ff   |....w...........|
0x804b0f0:   24 0c 00 00 4b e6 ff ff  44 0c 00 00 92 e6 ff ff   |$...K...D.......|
0x804b100:   68 0c 00 00 e7 e6 ff ff  88 0c 00 00 2e e7 ff ff   |h...............|
0x804b110:   ac 0c 00 00 96 e7 ff ff  d0 0c 00 00 ef e9 ff ff   |................|
0x804b120:   00 0d 00 00 77 f9 ff ff  30 0d 00 00 ea fd ff ff   |....w...0.......|
0x804b130:   68 0d 00 00 ee fd ff ff  7c 0d 00 00 00 fe ff ff   |h.......|.......|
0x804b140:   90 0d 00 00 60 fe ff ff  dc 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804b14c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b15c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b16c:   14 d2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b17c:   30 00 00 00 70 d1 ff ff  40 00 00 00 00 0e 08 46   |0...p...@......F|
0x804b18c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b19c:   10 00 00 00 54 00 00 00  8c d1 ff ff 08 00 00 00   |....T...........|
0x804b1ac:   00 00 00 00 1c 00 00 00  68 00 00 00 9e d2 ff ff   |........h.......|
0x804b1bc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b1cc:   04 04 00 00 20 00 00 00  88 00 00 00 8e d2 ff ff   |.... ...........|
0x804b1dc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b1ec:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b1fc:   98 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b20c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b21c:   96 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b22c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b23c:   9e d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b24c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b25c:   a8 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b26c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b27c:   b1 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b28c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b29c:   d4 d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b2ac:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b2bc:   f5 d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b2cc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b2dc:   90 01 00 00 29 d3 ff ff  52 00 00 00 00 41 0e 08   |....)...R....A..|
0x804b2ec:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b2fc:   1c 00 00 00 b4 01 00 00  57 d3 ff ff 3d 00 00 00   |........W...=...|
0x804b30c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b31c:   1c 00 00 00 d4 01 00 00  74 d3 ff ff 37 00 00 00   |........t...7...|
0x804b32c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b33c:   1c 00 00 00 f4 01 00 00  8b d3 ff ff 1f 00 00 00   |................|
0x804b34c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b35c:   1c 00 00 00 14 02 00 00  8a d3 ff ff 2a 00 00 00   |............*...|
0x804b36c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b37c:   1c 00 00 00 34 02 00 00  94 d3 ff ff 2c 00 00 00   |....4.......,...|
0x804b38c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b39c:   1c 00 00 00 54 02 00 00  a0 d3 ff ff 2b 00 00 00   |....T.......+...|
0x804b3ac:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b3bc:   1c 00 00 00 74 02 00 00  ab d3 ff ff 49 00 00 00   |....t.......I...|
0x804b3cc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b3dc:   1c 00 00 00 94 02 00 00  d4 d3 ff ff 47 00 00 00   |............G...|
0x804b3ec:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b3fc:   20 00 00 00 b4 02 00 00  fb d3 ff ff 5a 00 00 00   | ...........Z...|
0x804b40c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b41c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 31 d4 ff ff   |.... .......1...|
0x804b42c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b43c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b44c:   61 d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |a...?....A....B.|
0x804b45c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b46c:   80 d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b47c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b48c:   99 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b49c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b4ac:   9b d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b4bc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b4cc:   c9 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b4dc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b4ec:   e5 d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b4fc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b50c:   4e d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |N...2....A....B.|
0x804b51c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b52c:   60 d5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |`...0....A....B.|
0x804b53c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b54c:   70 d5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |p...E....A....B.|
0x804b55c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b56c:   95 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b57c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b58c:   b4 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b59c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b5ac:   c6 d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b5bc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b5cc:   d2 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5dc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b5ec:   d0 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b5fc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b60c:   d8 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b61c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b62c:   dd d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b63c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b64c:   e2 d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b65c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b66c:   f9 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b67c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b68c:   0d d6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b69c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b6ac:   60 05 00 00 3b d6 ff ff  4c 00 00 00 00 41 0e 08   |`...;...L....A..|
0x804b6bc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b6cc:   1c 00 00 00 84 05 00 00  63 d6 ff ff 37 00 00 00   |........c...7...|
0x804b6dc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6ec:   1c 00 00 00 a4 05 00 00  7a d6 ff ff 31 00 00 00   |........z...1...|
0x804b6fc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b70c:   1c 00 00 00 c4 05 00 00  8b d6 ff ff 1f 00 00 00   |................|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b72c:   1c 00 00 00 e4 05 00 00  8a d6 ff ff 2a 00 00 00   |............*...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b74c:   1c 00 00 00 04 06 00 00  94 d6 ff ff 28 00 00 00   |............(...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b76c:   1c 00 00 00 24 06 00 00  9c d6 ff ff 29 00 00 00   |....$.......)...|
0x804b77c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b78c:   1c 00 00 00 44 06 00 00  a5 d6 ff ff 3c 00 00 00   |....D.......<...|
0x804b79c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b7ac:   1c 00 00 00 64 06 00 00  c1 d6 ff ff 3a 00 00 00   |....d.......:...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b7cc:   20 00 00 00 84 06 00 00  db d6 ff ff 53 00 00 00   | ...........S...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b7ec:   c5 0c 04 04 20 00 00 00  a8 06 00 00 0a d7 ff ff   |.... ...........|
0x804b7fc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b80c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b81c:   33 d7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |3...8....A....B.|
0x804b82c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b83c:   4b d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |K...2....A....B.|
0x804b84c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b85c:   5d d7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804b86c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b87c:   51 d7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |Q........A....B.|
0x804b88c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b89c:   48 d7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804b8ac:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b8bc:   3d d7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |=........A....B.|
0x804b8cc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b8dc:   33 d7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |3...'....A....B.|
0x804b8ec:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b8fc:   3a d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |:...%....A....B.|
0x804b90c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b91c:   3f d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |?...?....A....B.|
0x804b92c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b93c:   5e d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |^...9....A....B.|
0x804b94c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b95c:   77 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |w...,....A....B.|
0x804b96c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b97c:   83 d7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b98c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b99c:   89 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9ac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b9bc:   ab d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9cc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b9dc:   cd d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b9ec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b9fc:   ef d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804ba0c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804ba1c:   44 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |D...]....A....B.|
0x804ba2c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804ba3c:   81 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba4c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804ba5c:   be d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804ba6c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804ba7c:   fb d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba8c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804ba9c:   6b d9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |k...d....A....B.|
0x804baac:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804babc:   af d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bacc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804badc:   ff d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804baec:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bafc:   b0 09 00 00 22 da ff ff  55 00 00 00 00 41 0e 08   |...."...U....A..|
0x804bb0c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bb1c:   d0 09 00 00 57 da ff ff  47 00 00 00 00 41 0e 08   |....W...G....A..|
0x804bb2c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bb3c:   20 00 00 00 f4 09 00 00  7a da ff ff 68 00 00 00   | .......z...h...|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bb5c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 be da ff ff   |....,...........|
0x804bb6c:   59 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |Y....A....B..F..|
0x804bb7c:   86 04 83 05 03 4c 02 c3  41 c6 41 c7 41 c5 0c 04   |.....L..A.A.A...|
0x804bb8c:   04 00 00 00 2c 00 00 00  48 0a 00 00 e7 dc ff ff   |....,...H.......|
0x804bb9c:   88 0f 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bbac:   86 04 83 05 03 78 0f c3  41 c6 41 c7 41 c5 0c 04   |.....x..A.A.A...|
0x804bbbc:   04 00 00 00 34 00 00 00  78 0a 00 00 3f ec ff ff   |....4...x...?...|
0x804bbcc:   73 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |s....D...G...u.D|
0x804bbdc:   0f 03 75 78 06 10 03 02  75 7c 03 5e 04 c1 0c 01   |..ux....u|.^....|
0x804bbec:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bbfc:   b0 0a 00 00 7a f0 ff ff  04 00 00 00 00 00 00 00   |....z...........|
0x804bc0c:   10 00 00 00 c4 0a 00 00  6a f0 ff ff 04 00 00 00   |........j.......|
0x804bc1c:   00 00 00 00 48 00 00 00  d8 0a 00 00 68 f0 ff ff   |....H.......h...|
0x804bc2c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bc3c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bc4c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bc5c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bc6c:   10 00 00 00 24 0b 00 00  7c f0 ff ff 02 00 00 00   |....$...|.......|
0x804bc7c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 f4 ac 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff a1 32 00 00   |.............2..|
0x804d028:   ff ff ff ff d8 0c cd 83  4a 17 00 00 27 ea 2f bf   |........J...'./.|
0x804d038:   07 d4 41 fa 62 00 00 00  29 da 8e b4 6d e4 ef f0   |..A.b...)...m...|
0x804d048:   01 00 00 00 fd ff ff ff  05 68 26 2a 83 c5 01 00   |.........h&*....|
0x804d058:   63 e2 de 00 69 d9 fe ff  fb ff ff ff 74 00 00 00   |c...i.......t...|
0x804d068:   0c be 7d c5 fd 42 64 7c  dc 5c a1 7d 05 00 01 00   |..}..Bd|.\.}....|
0x804d078:   ef 00 00 00 73 16 d3 95  15 ab 68 ca ??            |....s.....h.?   |
