;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:22:44
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 50 d8 ff ff               	lea eax, [ebx - 0x27b0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 f0 d7 ff ff               	lea eax, [ebx - 0x2810]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 d4 a4 04 08               	mov eax, 0x804a4d4
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 6c d0 04 08                  	mov eax, 0x804d06c
0x80483a5:   3d 6c d0 04 08                  	cmp eax, 0x804d06c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 6c d0 04 08                  	push 0x804d06c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 6c d0 04 08                  	mov eax, 0x804d06c
0x80483e5:   2d 6c d0 04 08                  	sub eax, 0x804d06c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 6c d0 04 08                  	push 0x804d06c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 86 23 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 72 23 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 70 d8 ff ff               	lea edx, [eax - 0x2790]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 45 23 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 27 23 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 ff 22 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 d5 22 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 ac 22 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 69 22 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 27 22 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 cf 21 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 7e 21 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 41 21 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 0a 21 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 eb 20 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 c1 20 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 95 20 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 6a 20 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 21 20 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 d9 1f 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 7f 1f 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 2c 1f 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 ed 1e 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 b7 1e 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 95 1e 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 47 1e 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 0b 1e 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 82 1d 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 50 1d 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 20 1d 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 db 1c 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 9c 1c 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 6a 1c 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 3b 1c 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 1d 1c 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 f5 1b 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 d0 1b 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 ab 1b 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 74 1b 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 3f 1b 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 ed 1a 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 a2 1a 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 6b 1a 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 3a 1a 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 1b 1a 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 f1 19 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 c9 19 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 a0 19 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 64 19 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 29 19 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 d6 18 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 8a 18 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 52 18 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 23 18 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 0f 18 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 f8 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 e3 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 cd 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 a6 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 81 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 42 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 09 17 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 dd 16 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 b7 16 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 4c d9 ff ff               	fld dword ptr [eax - 0x26b4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 75 16 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 48 d9 ff ff               	fld dword ptr [eax - 0x26b8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 4c d9 ff ff               	fld dword ptr [eax - 0x26b4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 33 16 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 50 d9 ff ff               	fld dword ptr [eax - 0x26b0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 54 d9 ff ff               	fld dword ptr [eax - 0x26ac]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 58 d9 ff ff               	fld dword ptr [eax - 0x26a8]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 f1 15 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 5c d9 ff ff               	fld dword ptr [eax - 0x26a4]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 60 d9 ff ff               	fld dword ptr [eax - 0x26a0]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 64 d9 ff ff               	fld dword ptr [eax - 0x269c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 79 15 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 70 d9 ff ff               	fld qword ptr [eax - 0x2690]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 1c 15 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 68 d9 ff ff               	fld qword ptr [eax - 0x2698]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 70 d9 ff ff               	fld qword ptr [eax - 0x2690]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 bf 14 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 78 d9 ff ff               	fld qword ptr [eax - 0x2688]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 80 d9 ff ff               	fld qword ptr [eax - 0x2680]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 88 d9 ff ff               	fld qword ptr [eax - 0x2678]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 62 14 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 90 d9 ff ff               	fld qword ptr [eax - 0x2670]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 98 d9 ff ff               	fld qword ptr [eax - 0x2668]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 a0 d9 ff ff               	fld qword ptr [eax - 0x2660]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 d2 13 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 a8 d9 ff ff               	fld dword ptr [eax - 0x2658]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 ac d9 ff ff               	fld dword ptr [eax - 0x2654]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 6e 13 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 fd 12 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 ba 12 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 80 d8 ff ff               	lea eax, [ebx - 0x2780]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 a4 d8 ff ff               	lea eax, [ebx - 0x275c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049751
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 1c                        	sub esp, 0x1c
0x804962f:   e8 b0 11 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804963c:   8b 4d 20                        	mov ecx, dword ptr [ebp + 0x20]
0x804963f:   89 4d d8                        	mov dword ptr [ebp - 0x28], ecx
0x8049642:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x8049645:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049648:   8b 5d 38                        	mov ebx, dword ptr [ebp + 0x38]
0x804964b:   8b 4d 50                        	mov ecx, dword ptr [ebp + 0x50]
0x804964e:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049652:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x8049656:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x804965a:   89 fa                           	mov edx, edi
0x804965c:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x8049660:   89 f2                           	mov edx, esi
0x8049662:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049666:   89 da                           	mov edx, ebx
0x8049668:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x804966c:   89 ca                           	mov edx, ecx
0x804966e:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x8049672:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x8049676:   66 89 90 24 00 00 00            	mov word ptr [eax + 0x24], dx
0x804967d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049680:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x8049686:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049689:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x804968f:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049692:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x8049698:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x804969b:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496a1:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496a4:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496aa:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496ae:   66 89 90 3c 00 00 00            	mov word ptr [eax + 0x3c], dx
0x80496b5:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x80496b9:   66 89 90 3e 00 00 00            	mov word ptr [eax + 0x3e], dx
0x80496c0:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x80496c4:   66 89 90 40 00 00 00            	mov word ptr [eax + 0x40], dx
0x80496cb:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x80496ce:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x80496d4:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496d7:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496dd:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x80496e0:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x80496e6:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x80496ea:   66 89 90 50 00 00 00            	mov word ptr [eax + 0x50], dx
0x80496f1:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x80496f4:   89 90 54 00 00 00               	mov dword ptr [eax + 0x54], edx
0x80496fa:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x80496fd:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x8049703:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049706:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x804970c:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x804970f:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x8049715:   8b 55 4c                        	mov edx, dword ptr [ebp + 0x4c]
0x8049718:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x804971e:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x8049722:   66 89 90 a8 04 00 00            	mov word ptr [eax + 0x4a8], dx
0x8049729:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x804972c:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049732:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x8049735:   89 90 68 00 00 00               	mov dword ptr [eax + 0x68], edx
0x804973b:   8b 55 5c                        	mov edx, dword ptr [ebp + 0x5c]
0x804973e:   89 90 ac 04 00 00               	mov dword ptr [eax + 0x4ac], edx
0x8049744:   b8 00 00 00 00                  	mov eax, 0
0x8049749:   83 c4 1c                        	add esp, 0x1c
0x804974c:   5b                              	pop ebx
0x804974d:   5e                              	pop esi
0x804974e:   5f                              	pop edi
0x804974f:   5d                              	pop ebp
0x8049750:   c3                              	ret 
; function: func_1 at 0x8049751 -- 0x804a4d4
0x8049751:   55                              	push ebp
0x8049752:   89 e5                           	mov ebp, esp
0x8049754:   57                              	push edi
0x8049755:   56                              	push esi
0x8049756:   53                              	push ebx
0x8049757:   81 ec 30 01 00 00               	sub esp, 0x130
0x804975d:   e8 82 10 00 00                  	call 0x804a7e4 <__x86.get_pc_thunk.ax>
0x8049762:   05 9e 38 00 00                  	add eax, 0x389e
0x8049767:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x804976d:   c7 45 9c a3 c5 e1 a1            	mov dword ptr [ebp - 0x64], 0xa1e1c5a3
0x8049774:   c7 45 ec 6b 94 1c cf            	mov dword ptr [ebp - 0x14], 0xcf1c946b
0x804977b:   c7 45 e8 fc ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffffc
0x8049782:   c7 45 e4 c5 0f 8f 62            	mov dword ptr [ebp - 0x1c], 0x628f0fc5
0x8049789:   c7 45 e0 ff ff ff ff            	mov dword ptr [ebp - 0x20], 0xffffffff
0x8049790:   66 c7 45 de 61 13               	mov word ptr [ebp - 0x22], 0x1361
0x8049796:   66 c7 45 dc dc a8               	mov word ptr [ebp - 0x24], 0xa8dc
0x804979c:   66 c7 45 da f7 ff               	mov word ptr [ebp - 0x26], 0xfff7
0x80497a2:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x80497a9:   c7 45 94 6c 03 a6 4a            	mov dword ptr [ebp - 0x6c], 0x4aa6036c
0x80497b0:   c7 45 90 9c 4f d6 3d            	mov dword ptr [ebp - 0x70], 0x3dd64f9c
0x80497b7:   66 c7 45 8e 04 00               	mov word ptr [ebp - 0x72], 4
0x80497bd:   c7 45 d4 28 39 dd 25            	mov dword ptr [ebp - 0x2c], 0x25dd3928
0x80497c4:   c7 45 88 ae 92 ed 99            	mov dword ptr [ebp - 0x78], 0x99ed92ae
0x80497cb:   c7 45 d0 02 2e 72 93            	mov dword ptr [ebp - 0x30], 0x93722e02
0x80497d2:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x80497d9:   c7 45 80 39 88 ab 9a            	mov dword ptr [ebp - 0x80], 0x9aab8839
0x80497e0:   66 c7 85 7e ff ff ff 00 00      	mov word ptr [ebp - 0x82], 0
0x80497e9:   c7 45 cc 3e b7 ea 41            	mov dword ptr [ebp - 0x34], 0x41eab73e
0x80497f0:   c7 45 c8 36 0b 07 24            	mov dword ptr [ebp - 0x38], 0x24070b36
0x80497f7:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x80497fe:   c6 85 7d ff ff ff 00            	mov byte ptr [ebp - 0x83], 0
0x8049805:   c7 45 c0 10 d2 66 a2            	mov dword ptr [ebp - 0x40], 0xa266d210
0x804980c:   66 c7 45 be f8 ff               	mov word ptr [ebp - 0x42], 0xfff8
0x8049812:   c7 85 78 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x88], 1
0x804981c:   c7 45 b8 fe ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffffe
0x8049823:   66 c7 85 76 ff ff ff 07 00      	mov word ptr [ebp - 0x8a], 7
0x804982c:   c7 85 70 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x90], 6
0x8049836:   c7 85 6c ff ff ff 4f a3 d7 3e   	mov dword ptr [ebp - 0x94], 0x3ed7a34f
0x8049840:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804984a:   c7 85 64 ff ff ff 76 1e d1 31   	mov dword ptr [ebp - 0x9c], 0x31d11e76
0x8049854:   c7 85 60 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa0], 1
0x804985e:   c7 85 5c ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xa4], 0xfffffffa
0x8049868:   c7 85 58 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa8], 0xffffffff
0x8049872:   c7 85 54 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffff7
0x804987c:   c7 85 50 ff ff ff 26 48 a0 42   	mov dword ptr [ebp - 0xb0], 0x42a04826
0x8049886:   c7 85 4c ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xb4], 5
0x8049890:   66 c7 85 4a ff ff ff ff ff      	mov word ptr [ebp - 0xb6], 0xffff
0x8049899:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x80498a0:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x80498a4:   8d 50 ff                        	lea edx, [eax - 1]
0x80498a7:   66 89 55 f2                     	mov word ptr [ebp - 0xe], dx
0x80498ab:   89 c3                           	mov ebx, eax
0x80498ad:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x80498b0:   89 c6                           	mov esi, eax
0x80498b2:   81 65 e8 fa 51 00 00            	and dword ptr [ebp - 0x18], 0x51fa
0x80498b9:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80498bc:   83 e8 02                        	sub eax, 2
0x80498bf:   0f b6 c0                        	movzx eax, al
0x80498c2:   c1 e0 05                        	shl eax, 5
0x80498c5:   89 c2                           	mov edx, eax
0x80498c7:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x80498ce:   39 c2                           	cmp edx, eax
0x80498d0:   0f 9e c0                        	setle al
0x80498d3:   0f b6 c0                        	movzx eax, al
0x80498d6:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80498d9:   0f 9f c0                        	setg al
0x80498dc:   0f b6 c0                        	movzx eax, al
0x80498df:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x80498e2:   0f be ca                        	movsx ecx, dl
0x80498e5:   99                              	cdq 
0x80498e6:   f7 f9                           	idiv ecx
0x80498e8:   89 d0                           	mov eax, edx
0x80498ea:   0f b7 7d be                     	movzx edi, word ptr [ebp - 0x42]
0x80498ee:   99                              	cdq 
0x80498ef:   f7 ff                           	idiv edi
0x80498f1:   0f af c6                        	imul eax, esi
0x80498f4:   09 d8                           	or eax, ebx
0x80498f6:   0f b7 c0                        	movzx eax, ax
0x80498f9:   69 c0 ff cb 00 00               	imul eax, eax, 0xcbff
0x80498ff:   c1 e8 10                        	shr eax, 0x10
0x8049902:   66 c1 e8 0e                     	shr ax, 0xe
0x8049906:   0f b7 c0                        	movzx eax, ax
0x8049909:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804990c:   74 4a                           	je 0x8049958 <func_1+0x207>
0x804990e:   c7 85 cc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x134], 1
0x8049918:   c7 85 c8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x138], 0xfffffffc
0x8049922:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049926:   89 c1                           	mov ecx, eax
0x8049928:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804992b:   66 c1 f8 05                     	sar ax, 5
0x804992f:   89 c2                           	mov edx, eax
0x8049931:   0f b6 c1                        	movzx eax, cl
0x8049934:   f6 f2                           	div dl
0x8049936:   0f b6 c0                        	movzx eax, al
0x8049939:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804993c:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049940:   83 c8 01                        	or eax, 1
0x8049943:   0f b7 c0                        	movzx eax, ax
0x8049946:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x804994c:   83 ad 78 ff ff ff 01            	sub dword ptr [ebp - 0x88], 1
0x8049953:   e9 10 0b 00 00                  	jmp 0x804a468 <func_1+0xd17>
0x8049958:   c7 45 b4 02 23 51 97            	mov dword ptr [ebp - 0x4c], 0x97512302
0x804995f:   c6 85 49 ff ff ff b3            	mov byte ptr [ebp - 0xb7], 0xb3
0x8049966:   66 c7 85 46 ff ff ff 97 1e      	mov word ptr [ebp - 0xba], 0x1e97
0x804996f:   c7 85 40 ff ff ff 1e e4 90 09   	mov dword ptr [ebp - 0xc0], 0x990e41e
0x8049979:   c6 85 3f ff ff ff ff            	mov byte ptr [ebp - 0xc1], 0xff
0x8049980:   c7 85 38 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc8], 0
0x804998a:   c7 85 34 ff ff ff de f9 d8 86   	mov dword ptr [ebp - 0xcc], 0x86d8f9de
0x8049994:   c7 85 30 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xd0], 0xfffffffe
0x804999e:   0f b6 85 49 ff ff ff            	movzx eax, byte ptr [ebp - 0xb7]
0x80499a5:   83 e8 01                        	sub eax, 1
0x80499a8:   88 85 49 ff ff ff               	mov byte ptr [ebp - 0xb7], al
0x80499ae:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x80499b2:   90                              	nop 
0x80499b3:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x80499ba:   e9 4a 07 00 00                  	jmp 0x804a109 <func_1+0x9b8>
0x80499bf:   66 c7 85 2e ff ff ff 01 00      	mov word ptr [ebp - 0xd2], 1
0x80499c8:   c7 85 28 ff ff ff d3 74 79 d7   	mov dword ptr [ebp - 0xd8], 0xd77974d3
0x80499d2:   c6 45 b3 57                     	mov byte ptr [ebp - 0x4d], 0x57
0x80499d6:   66 c7 85 26 ff ff ff ff ff      	mov word ptr [ebp - 0xda], 0xffff
0x80499df:   c7 85 20 ff ff ff fe 3c 9f 1e   	mov dword ptr [ebp - 0xe0], 0x1e9f3cfe
0x80499e9:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x80499ec:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x80499ef:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x80499f2:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x80499f5:   66 83 bd 2e ff ff ff 00         	cmp word ptr [ebp - 0xd2], 0
0x80499fd:   0f 84 8d 04 00 00               	je 0x8049e90 <func_1+0x73f>
0x8049a03:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x8049a0a:   c7 85 18 ff ff ff aa ee 40 e0   	mov dword ptr [ebp - 0xe8], 0xe040eeaa
0x8049a14:   c7 85 14 ff ff ff a1 6c 2f 9b   	mov dword ptr [ebp - 0xec], 0x9b2f6ca1
0x8049a1e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a22:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a25:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049a28:   0f b6 c8                        	movzx ecx, al
0x8049a2b:   0f b6 85 49 ff ff ff            	movzx eax, byte ptr [ebp - 0xb7]
0x8049a32:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049a35:   83 ca 06                        	or edx, 6
0x8049a38:   0f b6 d2                        	movzx edx, dl
0x8049a3b:   8d 5a 49                        	lea ebx, [edx + 0x49]
0x8049a3e:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x8049a42:   21 da                           	and edx, ebx
0x8049a44:   31 d0                           	xor eax, edx
0x8049a46:   83 f8 01                        	cmp eax, 1
0x8049a49:   0f 94 c0                        	sete al
0x8049a4c:   0f b6 d0                        	movzx edx, al
0x8049a4f:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049a52:   0f b6 c0                        	movzx eax, al
0x8049a55:   0f af c2                        	imul eax, edx
0x8049a58:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x8049a5e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a62:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x8049a68:   0f 9d c0                        	setge al
0x8049a6b:   0f b6 c0                        	movzx eax, al
0x8049a6e:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x8049a72:   0f b6 da                        	movzx ebx, dl
0x8049a75:   99                              	cdq 
0x8049a76:   f7 fb                           	idiv ebx
0x8049a78:   89 d0                           	mov eax, edx
0x8049a7a:   89 c3                           	mov ebx, eax
0x8049a7c:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049a82:   89 c2                           	mov edx, eax
0x8049a84:   0f b6 c3                        	movzx eax, bl
0x8049a87:   f6 f2                           	div dl
0x8049a89:   0f b6 c4                        	movzx eax, ah
0x8049a8c:   0f b6 d0                        	movzx edx, al
0x8049a8f:   0f bf 85 2e ff ff ff            	movsx eax, word ptr [ebp - 0xd2]
0x8049a96:   39 c2                           	cmp edx, eax
0x8049a98:   0f 94 c0                        	sete al
0x8049a9b:   0f b6 c0                        	movzx eax, al
0x8049a9e:   29 c1                           	sub ecx, eax
0x8049aa0:   89 c8                           	mov eax, ecx
0x8049aa2:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049aa5:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049aa8:   66 09 45 f2                     	or word ptr [ebp - 0xe], ax
0x8049aac:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049ab0:   74 07                           	je 0x8049ab9 <func_1+0x368>
0x8049ab2:   b8 01 00 00 00                  	mov eax, 1
0x8049ab7:   eb 05                           	jmp 0x8049abe <func_1+0x36d>
0x8049ab9:   b8 00 00 00 00                  	mov eax, 0
0x8049abe:   3b 85 28 ff ff ff               	cmp eax, dword ptr [ebp - 0xd8]
0x8049ac4:   7f 07                           	jg 0x8049acd <func_1+0x37c>
0x8049ac6:   b8 04 00 00 00                  	mov eax, 4
0x8049acb:   eb 05                           	jmp 0x8049ad2 <func_1+0x381>
0x8049acd:   b8 00 00 00 00                  	mov eax, 0
0x8049ad2:   3b 45 e8                        	cmp eax, dword ptr [ebp - 0x18]
0x8049ad5:   0f 86 ce 01 00 00               	jbe 0x8049ca9 <func_1+0x558>
0x8049adb:   c7 85 08 ff ff ff 72 59 b7 39   	mov dword ptr [ebp - 0xf8], 0x39b75972
0x8049ae5:   66 c7 45 aa 6e 99               	mov word ptr [ebp - 0x56], 0x996e
0x8049aeb:   c7 85 04 ff ff ff bc 77 13 00   	mov dword ptr [ebp - 0xfc], 0x1377bc
0x8049af5:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049afc:   eb 62                           	jmp 0x8049b60 <func_1+0x40f>
0x8049afe:   66 c7 85 02 ff ff ff f8 61      	mov word ptr [ebp - 0xfe], 0x61f8
0x8049b07:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049b0b:   75 5b                           	jne 0x8049b68 <func_1+0x417>
0x8049b0d:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049b10:   0f b7 c0                        	movzx eax, ax
0x8049b13:   ba 18 6e 00 00                  	mov edx, 0x6e18
0x8049b18:   29 c2                           	sub edx, eax
0x8049b1a:   89 d0                           	mov eax, edx
0x8049b1c:   23 45 ac                        	and eax, dword ptr [ebp - 0x54]
0x8049b1f:   85 c0                           	test eax, eax
0x8049b21:   75 0a                           	jne 0x8049b2d <func_1+0x3dc>
0x8049b23:   66 83 bd 02 ff ff ff 00         	cmp word ptr [ebp - 0xfe], 0
0x8049b2b:   74 07                           	je 0x8049b34 <func_1+0x3e3>
0x8049b2d:   b8 01 00 00 00                  	mov eax, 1
0x8049b32:   eb 05                           	jmp 0x8049b39 <func_1+0x3e8>
0x8049b34:   b8 00 00 00 00                  	mov eax, 0
0x8049b39:   89 c2                           	mov edx, eax
0x8049b3b:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b3e:   01 d0                           	add eax, edx
0x8049b40:   85 c0                           	test eax, eax
0x8049b42:   75 06                           	jne 0x8049b4a <func_1+0x3f9>
0x8049b44:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049b48:   74 07                           	je 0x8049b51 <func_1+0x400>
0x8049b4a:   b8 01 00 00 00                  	mov eax, 1
0x8049b4f:   eb 05                           	jmp 0x8049b56 <func_1+0x405>
0x8049b51:   b8 00 00 00 00                  	mov eax, 0
0x8049b56:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049b5c:   83 6d ac 09                     	sub dword ptr [ebp - 0x54], 9
0x8049b60:   83 7d ac e6                     	cmp dword ptr [ebp - 0x54], -0x1a
0x8049b64:   7d 98                           	jge 0x8049afe <func_1+0x3ad>
0x8049b66:   eb 01                           	jmp 0x8049b69 <func_1+0x418>
0x8049b68:   90                              	nop 
0x8049b69:   66 c7 45 f2 db bf               	mov word ptr [ebp - 0xe], 0xbfdb
0x8049b6f:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x8049b76:   0f b7 c8                        	movzx ecx, ax
0x8049b79:   ba 91 94 cb aa                  	mov edx, 0xaacb9491
0x8049b7e:   89 c8                           	mov eax, ecx
0x8049b80:   f7 ea                           	imul edx
0x8049b82:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049b85:   c1 f8 0f                        	sar eax, 0xf
0x8049b88:   89 c2                           	mov edx, eax
0x8049b8a:   89 c8                           	mov eax, ecx
0x8049b8c:   c1 f8 1f                        	sar eax, 0x1f
0x8049b8f:   29 c2                           	sub edx, eax
0x8049b91:   89 d0                           	mov eax, edx
0x8049b93:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049b96:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b99:   69 c0 db bf 00 00               	imul eax, eax, 0xbfdb
0x8049b9f:   29 c1                           	sub ecx, eax
0x8049ba1:   89 c8                           	mov eax, ecx
0x8049ba3:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ba6:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049bad:   e9 e8 00 00 00                  	jmp 0x8049c9a <func_1+0x549>
0x8049bb2:   66 c7 85 00 ff ff ff 35 36      	mov word ptr [ebp - 0x100], 0x3635
0x8049bbb:   66 83 45 aa 01                  	add word ptr [ebp - 0x56], 1
0x8049bc0:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049bc4:   0f b7 c0                        	movzx eax, ax
0x8049bc7:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x8049bca:   0f b7 85 00 ff ff ff            	movzx eax, word ptr [ebp - 0x100]
0x8049bd1:   66 c1 e8 05                     	shr ax, 5
0x8049bd5:   89 c3                           	mov ebx, eax
0x8049bd7:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bda:   23 45 e8                        	and eax, dword ptr [ebp - 0x18]
0x8049bdd:   83 f8 0d                        	cmp eax, 0xd
0x8049be0:   0f 96 c0                        	setbe al
0x8049be3:   0f b6 d0                        	movzx edx, al
0x8049be6:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049be9:   98                              	cwde 
0x8049bea:   89 c1                           	mov ecx, eax
0x8049bec:   d3 e2                           	shl edx, cl
0x8049bee:   89 d0                           	mov eax, edx
0x8049bf0:   83 f8 4c                        	cmp eax, 0x4c
0x8049bf3:   0f 95 c0                        	setne al
0x8049bf6:   0f b6 c0                        	movzx eax, al
0x8049bf9:   01 d8                           	add eax, ebx
0x8049bfb:   01 c0                           	add eax, eax
0x8049bfd:   0f b7 d0                        	movzx edx, ax
0x8049c00:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c03:   0f b7 c0                        	movzx eax, ax
0x8049c06:   89 c1                           	mov ecx, eax
0x8049c08:   d3 e2                           	shl edx, cl
0x8049c0a:   89 d0                           	mov eax, edx
0x8049c0c:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049c12:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049c17:   0f 94 c0                        	sete al
0x8049c1a:   0f b6 c0                        	movzx eax, al
0x8049c1d:   8b 55 b4                        	mov edx, dword ptr [ebp - 0x4c]
0x8049c20:   0f b7 ca                        	movzx ecx, dx
0x8049c23:   99                              	cdq 
0x8049c24:   f7 f9                           	idiv ecx
0x8049c26:   89 d0                           	mov eax, edx
0x8049c28:   83 f8 16                        	cmp eax, 0x16
0x8049c2b:   0f 9f c0                        	setg al
0x8049c2e:   0f b6 c0                        	movzx eax, al
0x8049c31:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049c35:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049c39:   89 c1                           	mov ecx, eax
0x8049c3b:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c3e:   89 c2                           	mov edx, eax
0x8049c40:   89 c8                           	mov eax, ecx
0x8049c42:   0f af c2                        	imul eax, edx
0x8049c45:   c0 f8 02                        	sar al, 2
0x8049c48:   0f be c0                        	movsx eax, al
0x8049c4b:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049c4e:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049c52:   83 e8 01                        	sub eax, 1
0x8049c55:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049c59:   66 81 7d de f8 69               	cmp word ptr [ebp - 0x22], 0x69f8
0x8049c5f:   0f 95 c0                        	setne al
0x8049c62:   0f b6 c0                        	movzx eax, al
0x8049c65:   2b 85 40 ff ff ff               	sub eax, dword ptr [ebp - 0xc0]
0x8049c6b:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049c6e:   75 07                           	jne 0x8049c77 <func_1+0x526>
0x8049c70:   80 bd 49 ff ff ff 00            	cmp byte ptr [ebp - 0xb7], 0
0x8049c77:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049c7a:   0f be c0                        	movsx eax, al
0x8049c7d:   83 e8 51                        	sub eax, 0x51
0x8049c80:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x8049c83:   0f 9c c0                        	setl al
0x8049c86:   0f b6 c0                        	movzx eax, al
0x8049c89:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049c8c:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049c96:   83 45 ac 05                     	add dword ptr [ebp - 0x54], 5
0x8049c9a:   83 7d ac 0e                     	cmp dword ptr [ebp - 0x54], 0xe
0x8049c9e:   0f 8e 0e ff ff ff               	jle 0x8049bb2 <func_1+0x461>
0x8049ca4:   e9 dc 01 00 00                  	jmp 0x8049e85 <func_1+0x734>
0x8049ca9:   c6 85 13 ff ff ff 30            	mov byte ptr [ebp - 0xed], 0x30
0x8049cb0:   c7 45 a4 ff ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffff
0x8049cb7:   c7 45 a0 5d 2e d0 5d            	mov dword ptr [ebp - 0x60], 0x5dd02e5d
0x8049cbe:   66 c7 45 be f5 ff               	mov word ptr [ebp - 0x42], 0xfff5
0x8049cc4:   e9 ae 01 00 00                  	jmp 0x8049e77 <func_1+0x726>
0x8049cc9:   c6 85 12 ff ff ff fb            	mov byte ptr [ebp - 0xee], 0xfb
0x8049cd0:   c7 85 0c ff ff ff 87 4f 99 8d   	mov dword ptr [ebp - 0xf4], 0x8d994f87
0x8049cda:   81 75 b4 b5 00 00 00            	xor dword ptr [ebp - 0x4c], 0xb5
0x8049ce1:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049ce4:   0f be c8                        	movsx ecx, al
0x8049ce7:   ba 5b 3d 3b 04                  	mov edx, 0x43b3d5b
0x8049cec:   89 c8                           	mov eax, ecx
0x8049cee:   f7 ea                           	imul edx
0x8049cf0:   d1 fa                           	sar edx, 1
0x8049cf2:   89 c8                           	mov eax, ecx
0x8049cf4:   c1 f8 1f                        	sar eax, 0x1f
0x8049cf7:   29 c2                           	sub edx, eax
0x8049cf9:   89 d0                           	mov eax, edx
0x8049cfb:   6b c0 79                        	imul eax, eax, 0x79
0x8049cfe:   29 c1                           	sub ecx, eax
0x8049d00:   89 c8                           	mov eax, ecx
0x8049d02:   89 c1                           	mov ecx, eax
0x8049d04:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x8049d0a:   89 c2                           	mov edx, eax
0x8049d0c:   89 c8                           	mov eax, ecx
0x8049d0e:   0f af c2                        	imul eax, edx
0x8049d11:   f7 d8                           	neg eax
0x8049d13:   0f b6 c0                        	movzx eax, al
0x8049d16:   c1 e0 06                        	shl eax, 6
0x8049d19:   0f b7 d0                        	movzx edx, ax
0x8049d1c:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x8049d22:   0f b7 c0                        	movzx eax, ax
0x8049d25:   89 c1                           	mov ecx, eax
0x8049d27:   d3 fa                           	sar edx, cl
0x8049d29:   89 d0                           	mov eax, edx
0x8049d2b:   0f b7 d0                        	movzx edx, ax
0x8049d2e:   0f b7 85 2e ff ff ff            	movzx eax, word ptr [ebp - 0xd2]
0x8049d35:   0f b7 c0                        	movzx eax, ax
0x8049d38:   89 c1                           	mov ecx, eax
0x8049d3a:   d3 e2                           	shl edx, cl
0x8049d3c:   89 d0                           	mov eax, edx
0x8049d3e:   3d fa 00 00 00                  	cmp eax, 0xfa
0x8049d43:   0f 9e c0                        	setle al
0x8049d46:   0f b6 c0                        	movzx eax, al
0x8049d49:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049d4d:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049d51:   98                              	cwde 
0x8049d52:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x8049d55:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x8049d5c:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x8049d5f:   0f 9f c0                        	setg al
0x8049d62:   0f b6 c0                        	movzx eax, al
0x8049d65:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8049d68:   0f bf ca                        	movsx ecx, dx
0x8049d6b:   99                              	cdq 
0x8049d6c:   f7 f9                           	idiv ecx
0x8049d6e:   89 d0                           	mov eax, edx
0x8049d70:   88 45 b3                        	mov byte ptr [ebp - 0x4d], al
0x8049d73:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d76:   89 c2                           	mov edx, eax
0x8049d78:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x8049d7c:   0f b6 c0                        	movzx eax, al
0x8049d7f:   f6 f2                           	div dl
0x8049d81:   0f b6 c4                        	movzx eax, ah
0x8049d84:   0f b6 c0                        	movzx eax, al
0x8049d87:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049d8a:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049d8e:   0f 85 f0 00 00 00               	jne 0x8049e84 <func_1+0x733>
0x8049d94:   80 bd 12 ff ff ff 07            	cmp byte ptr [ebp - 0xee], 7
0x8049d9b:   0f 96 c0                        	setbe al
0x8049d9e:   0f b6 c0                        	movzx eax, al
0x8049da1:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x8049da4:   01 d0                           	add eax, edx
0x8049da6:   98                              	cwde 
0x8049da7:   83 e0 30                        	and eax, 0x30
0x8049daa:   0f b6 8d 12 ff ff ff            	movzx ecx, byte ptr [ebp - 0xee]
0x8049db1:   99                              	cdq 
0x8049db2:   f7 f9                           	idiv ecx
0x8049db4:   89 95 0c ff ff ff               	mov dword ptr [ebp - 0xf4], edx
0x8049dba:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049dbe:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049dc1:   0f 97 c0                        	seta al
0x8049dc4:   f7 d0                           	not eax
0x8049dc6:   88 85 13 ff ff ff               	mov byte ptr [ebp - 0xed], al
0x8049dcc:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x8049dd3:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049dd7:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049dda:   29 c2                           	sub edx, eax
0x8049ddc:   89 d0                           	mov eax, edx
0x8049dde:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049de1:   0f bf 4d de                     	movsx ecx, word ptr [ebp - 0x22]
0x8049de5:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049de8:   99                              	cdq 
0x8049de9:   f7 f9                           	idiv ecx
0x8049deb:   89 d0                           	mov eax, edx
0x8049ded:   0f b7 75 de                     	movzx esi, word ptr [ebp - 0x22]
0x8049df1:   ba 00 00 00 00                  	mov edx, 0
0x8049df6:   66 f7 f6                        	div si
0x8049df9:   66 3d ea db                     	cmp ax, 0xdbea
0x8049dfd:   0f 95 c0                        	setne al
0x8049e00:   0f b6 c0                        	movzx eax, al
0x8049e03:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x8049e06:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049e09:   0f b7 d0                        	movzx edx, ax
0x8049e0c:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049e10:   89 c1                           	mov ecx, eax
0x8049e12:   d3 fa                           	sar edx, cl
0x8049e14:   89 d0                           	mov eax, edx
0x8049e16:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x8049e19:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e1c:   0f bf d0                        	movsx edx, ax
0x8049e1f:   0f b6 8d 49 ff ff ff            	movzx ecx, byte ptr [ebp - 0xb7]
0x8049e26:   0f b6 85 7d ff ff ff            	movzx eax, byte ptr [ebp - 0x83]
0x8049e2d:   3a 85 49 ff ff ff               	cmp al, byte ptr [ebp - 0xb7]
0x8049e33:   0f 94 c0                        	sete al
0x8049e36:   0f b6 c0                        	movzx eax, al
0x8049e39:   39 c1                           	cmp ecx, eax
0x8049e3b:   0f 9e c0                        	setle al
0x8049e3e:   0f b6 c0                        	movzx eax, al
0x8049e41:   0b 45 a0                        	or eax, dword ptr [ebp - 0x60]
0x8049e44:   89 c1                           	mov ecx, eax
0x8049e46:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x8049e4a:   39 c1                           	cmp ecx, eax
0x8049e4c:   0f 9c c0                        	setl al
0x8049e4f:   0f b6 c0                        	movzx eax, al
0x8049e52:   29 c2                           	sub edx, eax
0x8049e54:   89 d0                           	mov eax, edx
0x8049e56:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049e5c:   81 bd 14 ff ff ff 3f bb 00 00   	cmp dword ptr [ebp - 0xec], 0xbb3f
0x8049e66:   0f 9f c0                        	setg al
0x8049e69:   0f b6 c0                        	movzx eax, al
0x8049e6c:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049e72:   66 83 45 be 01                  	add word ptr [ebp - 0x42], 1
0x8049e77:   66 83 7d be 32                  	cmp word ptr [ebp - 0x42], 0x32
0x8049e7c:   0f 86 47 fe ff ff               	jbe 0x8049cc9 <func_1+0x578>
0x8049e82:   eb 01                           	jmp 0x8049e85 <func_1+0x734>
0x8049e84:   90                              	nop 
0x8049e85:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x8049e89:   74 74                           	je 0x8049eff <func_1+0x7ae>
0x8049e8b:   e9 83 02 00 00                  	jmp 0x804a113 <func_1+0x9c2>
0x8049e90:   c7 85 1c ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xe4], 7
0x8049e9a:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049e9e:   74 05                           	je 0x8049ea5 <func_1+0x754>
0x8049ea0:   e9 f4 f9 ff ff                  	jmp 0x8049899 <func_1+0x148>
0x8049ea5:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049eab:   0f b6 c0                        	movzx eax, al
0x8049eae:   ba 02 00 00 00                  	mov edx, 2
0x8049eb3:   89 c1                           	mov ecx, eax
0x8049eb5:   d3 fa                           	sar edx, cl
0x8049eb7:   89 d0                           	mov eax, edx
0x8049eb9:   0f b7 d0                        	movzx edx, ax
0x8049ebc:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049ebf:   0f b7 c0                        	movzx eax, ax
0x8049ec2:   89 c1                           	mov ecx, eax
0x8049ec4:   d3 e2                           	shl edx, cl
0x8049ec6:   89 d0                           	mov eax, edx
0x8049ec8:   66 09 45 da                     	or word ptr [ebp - 0x26], ax
0x8049ecc:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x8049ed1:   74 05                           	je 0x8049ed8 <func_1+0x787>
0x8049ed3:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049ed8:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049edb:   25 fc 00 00 00                  	and eax, 0xfc
0x8049ee0:   3d ff 00 00 00                  	cmp eax, 0xff
0x8049ee5:   0f 97 c0                        	seta al
0x8049ee8:   0f b6 c0                        	movzx eax, al
0x8049eeb:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049eee:   0f b7 85 26 ff ff ff            	movzx eax, word ptr [ebp - 0xda]
0x8049ef5:   83 e8 01                        	sub eax, 1
0x8049ef8:   66 89 85 26 ff ff ff            	mov word ptr [ebp - 0xda], ax
0x8049eff:   66 c7 85 2e ff ff ff 00 00      	mov word ptr [ebp - 0xd2], 0
0x8049f08:   66 83 bd 2e ff ff ff fa         	cmp word ptr [ebp - 0xd2], -6
0x8049f10:   0f 8c ef 01 00 00               	jl 0x804a105 <func_1+0x9b4>
0x8049f16:   c7 85 fc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x104], 1
0x8049f20:   c7 85 f8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x108], 1
0x8049f2a:   c7 85 f4 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff6
0x8049f34:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x8049f3a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049f3d:   66 c7 45 f2 00 00               	mov word ptr [ebp - 0xe], 0
0x8049f43:   66 83 7d f2 2d                  	cmp word ptr [ebp - 0xe], 0x2d
0x8049f48:   0f 86 55 01 00 00               	jbe 0x804a0a3 <func_1+0x952>
0x8049f4e:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x8049f58:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049f5c:   83 e8 01                        	sub eax, 1
0x8049f5f:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x8049f63:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049f6a:   0f b6 d0                        	movzx edx, al
0x8049f6d:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049f73:   0f b6 c0                        	movzx eax, al
0x8049f76:   0f af c2                        	imul eax, edx
0x8049f79:   85 c0                           	test eax, eax
0x8049f7b:   75 04                           	jne 0x8049f81 <func_1+0x830>
0x8049f7d:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049f81:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049f85:   74 59                           	je 0x8049fe0 <func_1+0x88f>
0x8049f87:   66 c7 85 ec fe ff ff 00 00      	mov word ptr [ebp - 0x114], 0
0x8049f90:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049f94:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x8049f9a:   66 c7 85 ec fe ff ff ff ff      	mov word ptr [ebp - 0x114], 0xffff
0x8049fa3:   66 83 7d dc 01                  	cmp word ptr [ebp - 0x24], 1
0x8049fa8:   74 07                           	je 0x8049fb1 <func_1+0x860>
0x8049faa:   ba 01 00 00 00                  	mov edx, 1
0x8049faf:   eb 05                           	jmp 0x8049fb6 <func_1+0x865>
0x8049fb1:   ba 00 00 00 00                  	mov edx, 0
0x8049fb6:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049fba:   01 d0                           	add eax, edx
0x8049fbc:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049fbf:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049fc2:   f7 d8                           	neg eax
0x8049fc4:   85 c0                           	test eax, eax
0x8049fc6:   0f 95 c0                        	setne al
0x8049fc9:   0f b6 c0                        	movzx eax, al
0x8049fcc:   f7 d8                           	neg eax
0x8049fce:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049fd1:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x8049fd9:   74 64                           	je 0x804a03f <func_1+0x8ee>
0x8049fdb:   e9 c3 00 00 00                  	jmp 0x804a0a3 <func_1+0x952>
0x8049fe0:   66 c7 85 ee fe ff ff d9 6a      	mov word ptr [ebp - 0x112], 0x6ad9
0x8049fe9:   66 81 7d de cb 00               	cmp word ptr [ebp - 0x22], 0xcb
0x8049fef:   0f 94 c0                        	sete al
0x8049ff2:   0f b6 c0                        	movzx eax, al
0x8049ff5:   66 89 85 ee fe ff ff            	mov word ptr [ebp - 0x112], ax
0x8049ffc:   0f b7 85 ee fe ff ff            	movzx eax, word ptr [ebp - 0x112]
0x804a003:   0f b6 c0                        	movzx eax, al
0x804a006:   f7 d8                           	neg eax
0x804a008:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804a00b:   0f 9f c0                        	setg al
0x804a00e:   0f b6 c0                        	movzx eax, al
0x804a011:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a017:   0f b6 95 7d ff ff ff            	movzx edx, byte ptr [ebp - 0x83]
0x804a01e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a021:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804a025:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a029:   39 c2                           	cmp edx, eax
0x804a02b:   0f 9e c0                        	setle al
0x804a02e:   0f b6 c0                        	movzx eax, al
0x804a031:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a034:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a038:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a03b:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x804a03f:   0f bf bd 7e ff ff ff            	movsx edi, word ptr [ebp - 0x82]
0x804a046:   0f bf 75 8e                     	movsx esi, word ptr [ebp - 0x72]
0x804a04a:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804a04e:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a052:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a056:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a05a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a05d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a060:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a063:   57                              	push edi
0x804a064:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a067:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a06a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a06d:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a070:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a073:   56                              	push esi
0x804a074:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a077:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a07a:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a07d:   53                              	push ebx
0x804a07e:   51                              	push ecx
0x804a07f:   52                              	push edx
0x804a080:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a083:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a086:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a089:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a08c:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a08f:   50                              	push eax
0x804a090:   e8 91 f5 ff ff                  	call 0x8049626 <set_var>
0x804a095:   83 c4 58                        	add esp, 0x58
0x804a098:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a09e:   e9 29 04 00 00                  	jmp 0x804a4cc <func_1+0xd7b>
0x804a0a3:   0f bf bd 7e ff ff ff            	movsx edi, word ptr [ebp - 0x82]
0x804a0aa:   0f bf 75 8e                     	movsx esi, word ptr [ebp - 0x72]
0x804a0ae:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804a0b2:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a0b6:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a0ba:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a0be:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a0c1:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a0c4:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a0c7:   57                              	push edi
0x804a0c8:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a0cb:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a0ce:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a0d1:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a0d4:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a0d7:   56                              	push esi
0x804a0d8:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a0db:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a0de:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a0e1:   53                              	push ebx
0x804a0e2:   51                              	push ecx
0x804a0e3:   52                              	push edx
0x804a0e4:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a0e7:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a0ea:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a0ed:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a0f0:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a0f3:   50                              	push eax
0x804a0f4:   e8 2d f5 ff ff                  	call 0x8049626 <set_var>
0x804a0f9:   83 c4 58                        	add esp, 0x58
0x804a0fc:   0f b6 45 b3                     	movzx eax, byte ptr [ebp - 0x4d]
0x804a100:   e9 c7 03 00 00                  	jmp 0x804a4cc <func_1+0xd7b>
0x804a105:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804a109:   83 7d e8 11                     	cmp dword ptr [ebp - 0x18], 0x11
0x804a10d:   0f 86 ac f8 ff ff               	jbe 0x80499bf <func_1+0x26e>
0x804a113:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a116:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a119:   0f 92 c0                        	setb al
0x804a11c:   0f b6 c8                        	movzx ecx, al
0x804a11f:   0f b6 85 49 ff ff ff            	movzx eax, byte ptr [ebp - 0xb7]
0x804a126:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a129:   0f 9c c0                        	setl al
0x804a12c:   0f b6 d0                        	movzx edx, al
0x804a12f:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a133:   21 d0                           	and eax, edx
0x804a135:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a139:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a13c:   89 c3                           	mov ebx, eax
0x804a13e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a142:   ba 00 00 00 00                  	mov edx, 0
0x804a147:   66 f7 f3                        	div bx
0x804a14a:   89 d0                           	mov eax, edx
0x804a14c:   0f b7 c0                        	movzx eax, ax
0x804a14f:   09 c8                           	or eax, ecx
0x804a151:   3d b3 31 00 00                  	cmp eax, 0x31b3
0x804a156:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a15c:   0f b6 c0                        	movzx eax, al
0x804a15f:   f7 d8                           	neg eax
0x804a161:   89 c2                           	mov edx, eax
0x804a163:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x804a16a:   39 c2                           	cmp edx, eax
0x804a16c:   0f 8f 8b 02 00 00               	jg 0x804a3fd <func_1+0xcac>
0x804a172:   c6 85 e7 fe ff ff 82            	mov byte ptr [ebp - 0x119], 0x82
0x804a179:   66 c7 85 e4 fe ff ff 07 00      	mov word ptr [ebp - 0x11c], 7
0x804a182:   c6 85 e7 fe ff ff f7            	mov byte ptr [ebp - 0x119], 0xf7
0x804a189:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a18c:   8d 50 ff                        	lea edx, [eax - 1]
0x804a18f:   89 55 d0                        	mov dword ptr [ebp - 0x30], edx
0x804a192:   85 c0                           	test eax, eax
0x804a194:   0f 84 0b 02 00 00               	je 0x804a3a5 <func_1+0xc54>
0x804a19a:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a19e:   0f 84 01 02 00 00               	je 0x804a3a5 <func_1+0xc54>
0x804a1a4:   c7 85 e0 fe ff ff e0 b7 9a a2   	mov dword ptr [ebp - 0x120], 0xa29ab7e0
0x804a1ae:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x804a1b8:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a1bb:   0f b6 d0                        	movzx edx, al
0x804a1be:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a1c1:   89 c1                           	mov ecx, eax
0x804a1c3:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a1c9:   09 c8                           	or eax, ecx
0x804a1cb:   0f b6 c0                        	movzx eax, al
0x804a1ce:   0f af c2                        	imul eax, edx
0x804a1d1:   85 c0                           	test eax, eax
0x804a1d3:   74 20                           	je 0x804a1f5 <func_1+0xaa4>
0x804a1d5:   c6 85 d3 fe ff ff 04            	mov byte ptr [ebp - 0x12d], 4
0x804a1dc:   0f b6 85 d3 fe ff ff            	movzx eax, byte ptr [ebp - 0x12d]
0x804a1e3:   89 85 dc fe ff ff               	mov dword ptr [ebp - 0x124], eax
0x804a1e9:   c7 45 b8 15 00 00 00            	mov dword ptr [ebp - 0x48], 0x15
0x804a1f0:   e9 a5 01 00 00                  	jmp 0x804a39a <func_1+0xc49>
0x804a1f5:   c7 85 d8 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x128], 0xfffffff6
0x804a1ff:   c7 85 d4 fe ff ff 0c 1d ae d7   	mov dword ptr [ebp - 0x12c], 0xd7ae1d0c
0x804a209:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a20d:   0f 95 c0                        	setne al
0x804a210:   0f b6 c0                        	movzx eax, al
0x804a213:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a216:   0f 96 c0                        	setbe al
0x804a219:   0f b6 d0                        	movzx edx, al
0x804a21c:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a220:   0f be c0                        	movsx eax, al
0x804a223:   29 c2                           	sub edx, eax
0x804a225:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a229:   39 c2                           	cmp edx, eax
0x804a22b:   0f 9c c0                        	setl al
0x804a22e:   0f b6 c0                        	movzx eax, al
0x804a231:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a234:   0f 9d c0                        	setge al
0x804a237:   0f b6 d0                        	movzx edx, al
0x804a23a:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a240:   98                              	cwde 
0x804a241:   29 c2                           	sub edx, eax
0x804a243:   89 d0                           	mov eax, edx
0x804a245:   39 85 40 ff ff ff               	cmp dword ptr [ebp - 0xc0], eax
0x804a24b:   0f 9e c0                        	setle al
0x804a24e:   0f b6 c0                        	movzx eax, al
0x804a251:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a254:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a257:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a25a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a25d:   0f be c8                        	movsx ecx, al
0x804a260:   b8 09 00 00 00                  	mov eax, 9
0x804a265:   99                              	cdq 
0x804a266:   f7 f9                           	idiv ecx
0x804a268:   89 d0                           	mov eax, edx
0x804a26a:   66 89 85 7e ff ff ff            	mov word ptr [ebp - 0x82], ax
0x804a271:   66 83 bd 7e ff ff ff 00         	cmp word ptr [ebp - 0x82], 0
0x804a279:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a27d:   74 07                           	je 0x804a286 <func_1+0xb35>
0x804a27f:   b8 01 00 00 00                  	mov eax, 1
0x804a284:   eb 05                           	jmp 0x804a28b <func_1+0xb3a>
0x804a286:   b8 00 00 00 00                  	mov eax, 0
0x804a28b:   3b 85 40 ff ff ff               	cmp eax, dword ptr [ebp - 0xc0]
0x804a291:   0f 94 c0                        	sete al
0x804a294:   0f b6 c0                        	movzx eax, al
0x804a297:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x804a29d:   0f 94 c0                        	sete al
0x804a2a0:   0f b6 c0                        	movzx eax, al
0x804a2a3:   66 89 45 8e                     	mov word ptr [ebp - 0x72], ax
0x804a2a7:   0f bf 45 8e                     	movsx eax, word ptr [ebp - 0x72]
0x804a2ab:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a2ae:   0f 9d c0                        	setge al
0x804a2b1:   0f b6 c0                        	movzx eax, al
0x804a2b4:   39 45 b4                        	cmp dword ptr [ebp - 0x4c], eax
0x804a2b7:   75 06                           	jne 0x804a2bf <func_1+0xb6e>
0x804a2b9:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a2bd:   74 07                           	je 0x804a2c6 <func_1+0xb75>
0x804a2bf:   b8 01 00 00 00                  	mov eax, 1
0x804a2c4:   eb 05                           	jmp 0x804a2cb <func_1+0xb7a>
0x804a2c6:   b8 00 00 00 00                  	mov eax, 0
0x804a2cb:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a2d1:   0f b6 85 e7 fe ff ff            	movzx eax, byte ptr [ebp - 0x119]
0x804a2d8:   33 85 d4 fe ff ff               	xor eax, dword ptr [ebp - 0x12c]
0x804a2de:   21 45 88                        	and dword ptr [ebp - 0x78], eax
0x804a2e1:   0f bf bd 7e ff ff ff            	movsx edi, word ptr [ebp - 0x82]
0x804a2e8:   0f bf 75 8e                     	movsx esi, word ptr [ebp - 0x72]
0x804a2ec:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804a2f0:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a2f4:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a2f8:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a2fc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a2ff:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a302:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a305:   57                              	push edi
0x804a306:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a309:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a30c:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a30f:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a312:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a315:   56                              	push esi
0x804a316:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a319:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a31c:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a31f:   53                              	push ebx
0x804a320:   51                              	push ecx
0x804a321:   52                              	push edx
0x804a322:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a325:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a328:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a32b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a32e:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a331:   50                              	push eax
0x804a332:   e8 ef f2 ff ff                  	call 0x8049626 <set_var>
0x804a337:   83 c4 58                        	add esp, 0x58
0x804a33a:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a33d:   e9 8a 01 00 00                  	jmp 0x804a4cc <func_1+0xd7b>
0x804a342:   c6 85 d2 fe ff ff d8            	mov byte ptr [ebp - 0x12e], 0xd8
0x804a349:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a34d:   99                              	cdq 
0x804a34e:   f7 7d 94                        	idiv dword ptr [ebp - 0x6c]
0x804a351:   f7 d0                           	not eax
0x804a353:   0f b6 c0                        	movzx eax, al
0x804a356:   66 2d bc 00                     	sub ax, 0xbc
0x804a35a:   89 c2                           	mov edx, eax
0x804a35c:   0f b6 85 e7 fe ff ff            	movzx eax, byte ptr [ebp - 0x119]
0x804a363:   21 d0                           	and eax, edx
0x804a365:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804a369:   b8 01 00 00 00                  	mov eax, 1
0x804a36e:   f7 d0                           	not eax
0x804a370:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a373:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a376:   0f be c0                        	movsx eax, al
0x804a379:   01 c0                           	add eax, eax
0x804a37b:   89 c2                           	mov edx, eax
0x804a37d:   81 fa 8b e3 92 b2               	cmp edx, 0xb292e38b
0x804a383:   0f 93 c0                        	setae al
0x804a386:   0f b6 c0                        	movzx eax, al
0x804a389:   69 c0 8b e3 92 b2               	imul eax, eax, 0xb292e38b
0x804a38f:   29 c2                           	sub edx, eax
0x804a391:   89 d0                           	mov eax, edx
0x804a393:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a396:   83 6d b8 07                     	sub dword ptr [ebp - 0x48], 7
0x804a39a:   83 7d b8 ea                     	cmp dword ptr [ebp - 0x48], -0x16
0x804a39e:   74 a2                           	je 0x804a342 <func_1+0xbf1>
0x804a3a0:   e9 c3 00 00 00                  	jmp 0x804a468 <func_1+0xd17>
0x804a3a5:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a3a9:   21 45 c8                        	and dword ptr [ebp - 0x38], eax
0x804a3ac:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a3af:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a3b2:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a3b6:   74 10                           	je 0x804a3c8 <func_1+0xc77>
0x804a3b8:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x804a3bf:   74 07                           	je 0x804a3c8 <func_1+0xc77>
0x804a3c1:   b8 01 00 00 00                  	mov eax, 1
0x804a3c6:   eb 05                           	jmp 0x804a3cd <func_1+0xc7c>
0x804a3c8:   b8 00 00 00 00                  	mov eax, 0
0x804a3cd:   0f b7 c0                        	movzx eax, ax
0x804a3d0:   01 c0                           	add eax, eax
0x804a3d2:   0f be c0                        	movsx eax, al
0x804a3d5:   0f b6 95 e7 fe ff ff            	movzx edx, byte ptr [ebp - 0x119]
0x804a3dc:   0f be fa                        	movsx edi, dl
0x804a3df:   99                              	cdq 
0x804a3e0:   f7 ff                           	idiv edi
0x804a3e2:   0f b6 d0                        	movzx edx, al
0x804a3e5:   0f b7 85 46 ff ff ff            	movzx eax, word ptr [ebp - 0xba]
0x804a3ec:   0f b6 c0                        	movzx eax, al
0x804a3ef:   89 c1                           	mov ecx, eax
0x804a3f1:   d3 e2                           	shl edx, cl
0x804a3f3:   89 d0                           	mov eax, edx
0x804a3f5:   09 85 30 ff ff ff               	or dword ptr [ebp - 0xd0], eax
0x804a3fb:   eb 6b                           	jmp 0x804a468 <func_1+0xd17>
0x804a3fd:   c7 85 e8 fe ff ff 03 7c 58 b3   	mov dword ptr [ebp - 0x118], 0xb3587c03
0x804a407:   0f bf bd 7e ff ff ff            	movsx edi, word ptr [ebp - 0x82]
0x804a40e:   0f bf 75 8e                     	movsx esi, word ptr [ebp - 0x72]
0x804a412:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804a416:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a41a:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a41e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a422:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a425:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a428:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a42b:   57                              	push edi
0x804a42c:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a42f:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a432:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a435:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a438:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a43b:   56                              	push esi
0x804a43c:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a43f:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a442:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a445:   53                              	push ebx
0x804a446:   51                              	push ecx
0x804a447:   52                              	push edx
0x804a448:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a44b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a44e:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a451:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a454:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a457:   50                              	push eax
0x804a458:   e8 c9 f1 ff ff                  	call 0x8049626 <set_var>
0x804a45d:   83 c4 58                        	add esp, 0x58
0x804a460:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a466:   eb 64                           	jmp 0x804a4cc <func_1+0xd7b>
0x804a468:   66 83 ad 4a ff ff ff 01         	sub word ptr [ebp - 0xb6], 1
0x804a470:   0f bf bd 7e ff ff ff            	movsx edi, word ptr [ebp - 0x82]
0x804a477:   0f bf 75 8e                     	movsx esi, word ptr [ebp - 0x72]
0x804a47b:   0f bf 5d da                     	movsx ebx, word ptr [ebp - 0x26]
0x804a47f:   0f b7 4d dc                     	movzx ecx, word ptr [ebp - 0x24]
0x804a483:   0f bf 55 de                     	movsx edx, word ptr [ebp - 0x22]
0x804a487:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a48b:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a48e:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a491:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a494:   57                              	push edi
0x804a495:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a498:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a49b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a49e:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a4a1:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a4a4:   56                              	push esi
0x804a4a5:   ff 75 90                        	push dword ptr [ebp - 0x70]
0x804a4a8:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a4ab:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a4ae:   53                              	push ebx
0x804a4af:   51                              	push ecx
0x804a4b0:   52                              	push edx
0x804a4b1:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4b4:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a4b7:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a4ba:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4bd:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a4c0:   50                              	push eax
0x804a4c1:   e8 60 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4c6:   83 c4 58                        	add esp, 0x58
0x804a4c9:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a4cc:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a4cf:   5b                              	pop ebx
0x804a4d0:   5e                              	pop esi
0x804a4d1:   5f                              	pop edi
0x804a4d2:   5d                              	pop ebp
0x804a4d3:   c3                              	ret 
; function: main at 0x804a4d4 -- 0x804a7e4
0x804a4d4:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a4d8:   83 e4 f0                        	and esp, 0xfffffff0
0x804a4db:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a4de:   55                              	push ebp
0x804a4df:   89 e5                           	mov ebp, esp
0x804a4e1:   53                              	push ebx
0x804a4e2:   51                              	push ecx
0x804a4e3:   83 ec 10                        	sub esp, 0x10
0x804a4e6:   e8 a5 de ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a4eb:   81 c3 15 2b 00 00               	add ebx, 0x2b15
0x804a4f1:   89 c8                           	mov eax, ecx
0x804a4f3:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a4fa:   83 38 02                        	cmp dword ptr [eax], 2
0x804a4fd:   75 26                           	jne 0x804a525 <main+0x51>
0x804a4ff:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a502:   83 c0 04                        	add eax, 4
0x804a505:   8b 00                           	mov eax, dword ptr [eax]
0x804a507:   83 ec 08                        	sub esp, 8
0x804a50a:   8d 93 c8 d8 ff ff               	lea edx, [ebx - 0x2738]
0x804a510:   52                              	push edx
0x804a511:   50                              	push eax
0x804a512:   e8 e9 dd ff ff                  	call 0x8048300 <strcmp>
0x804a517:   83 c4 10                        	add esp, 0x10
0x804a51a:   85 c0                           	test eax, eax
0x804a51c:   75 07                           	jne 0x804a525 <main+0x51>
0x804a51e:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a525:   e8 2c df ff ff                  	call 0x8048456 <platform_main_begin>
0x804a52a:   e8 3c ef ff ff                  	call 0x804946b <crc32_gentab>
0x804a52f:   e8 1d f2 ff ff                  	call 0x8049751 <func_1>
0x804a534:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804a53b:   0f b7 c0                        	movzx eax, ax
0x804a53e:   83 ec 04                        	sub esp, 4
0x804a541:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a544:   8d 93 ca d8 ff ff               	lea edx, [ebx - 0x2736]
0x804a54a:   52                              	push edx
0x804a54b:   50                              	push eax
0x804a54c:   e8 26 f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a551:   83 c4 10                        	add esp, 0x10
0x804a554:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a55a:   83 ec 04                        	sub esp, 4
0x804a55d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a560:   8d 93 ce d8 ff ff               	lea edx, [ebx - 0x2732]
0x804a566:   52                              	push edx
0x804a567:   50                              	push eax
0x804a568:   e8 0a f0 ff ff                  	call 0x8049577 <transparent_crc>
0x804a56d:   83 c4 10                        	add esp, 0x10
0x804a570:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a576:   89 c2                           	mov edx, eax
0x804a578:   83 ec 04                        	sub esp, 4
0x804a57b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a57e:   8d 83 d3 d8 ff ff               	lea eax, [ebx - 0x272d]
0x804a584:   50                              	push eax
0x804a585:   52                              	push edx
0x804a586:   e8 ec ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a58b:   83 c4 10                        	add esp, 0x10
0x804a58e:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a594:   83 ec 04                        	sub esp, 4
0x804a597:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a59a:   8d 93 d8 d8 ff ff               	lea edx, [ebx - 0x2728]
0x804a5a0:   52                              	push edx
0x804a5a1:   50                              	push eax
0x804a5a2:   e8 d0 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5a7:   83 c4 10                        	add esp, 0x10
0x804a5aa:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a5b0:   89 c2                           	mov edx, eax
0x804a5b2:   83 ec 04                        	sub esp, 4
0x804a5b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5b8:   8d 83 dd d8 ff ff               	lea eax, [ebx - 0x2723]
0x804a5be:   50                              	push eax
0x804a5bf:   52                              	push edx
0x804a5c0:   e8 b2 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5c5:   83 c4 10                        	add esp, 0x10
0x804a5c8:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a5ce:   89 c2                           	mov edx, eax
0x804a5d0:   83 ec 04                        	sub esp, 4
0x804a5d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5d6:   8d 83 e2 d8 ff ff               	lea eax, [ebx - 0x271e]
0x804a5dc:   50                              	push eax
0x804a5dd:   52                              	push edx
0x804a5de:   e8 94 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a5e3:   83 c4 10                        	add esp, 0x10
0x804a5e6:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a5ed:   98                              	cwde 
0x804a5ee:   83 ec 04                        	sub esp, 4
0x804a5f1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a5f4:   8d 93 e7 d8 ff ff               	lea edx, [ebx - 0x2719]
0x804a5fa:   52                              	push edx
0x804a5fb:   50                              	push eax
0x804a5fc:   e8 76 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a601:   83 c4 10                        	add esp, 0x10
0x804a604:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804a60b:   0f b7 c0                        	movzx eax, ax
0x804a60e:   83 ec 04                        	sub esp, 4
0x804a611:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a614:   8d 93 ec d8 ff ff               	lea edx, [ebx - 0x2714]
0x804a61a:   52                              	push edx
0x804a61b:   50                              	push eax
0x804a61c:   e8 56 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a621:   83 c4 10                        	add esp, 0x10
0x804a624:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804a62b:   98                              	cwde 
0x804a62c:   83 ec 04                        	sub esp, 4
0x804a62f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a632:   8d 93 f2 d8 ff ff               	lea edx, [ebx - 0x270e]
0x804a638:   52                              	push edx
0x804a639:   50                              	push eax
0x804a63a:   e8 38 ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a63f:   83 c4 10                        	add esp, 0x10
0x804a642:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a648:   89 c2                           	mov edx, eax
0x804a64a:   83 ec 04                        	sub esp, 4
0x804a64d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a650:   8d 83 f8 d8 ff ff               	lea eax, [ebx - 0x2708]
0x804a656:   50                              	push eax
0x804a657:   52                              	push edx
0x804a658:   e8 1a ef ff ff                  	call 0x8049577 <transparent_crc>
0x804a65d:   83 c4 10                        	add esp, 0x10
0x804a660:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a666:   89 c2                           	mov edx, eax
0x804a668:   83 ec 04                        	sub esp, 4
0x804a66b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a66e:   8d 83 fe d8 ff ff               	lea eax, [ebx - 0x2702]
0x804a674:   50                              	push eax
0x804a675:   52                              	push edx
0x804a676:   e8 fc ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a67b:   83 c4 10                        	add esp, 0x10
0x804a67e:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a684:   89 c2                           	mov edx, eax
0x804a686:   83 ec 04                        	sub esp, 4
0x804a689:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a68c:   8d 83 04 d9 ff ff               	lea eax, [ebx - 0x26fc]
0x804a692:   50                              	push eax
0x804a693:   52                              	push edx
0x804a694:   e8 de ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a699:   83 c4 10                        	add esp, 0x10
0x804a69c:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804a6a3:   98                              	cwde 
0x804a6a4:   83 ec 04                        	sub esp, 4
0x804a6a7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6aa:   8d 93 0a d9 ff ff               	lea edx, [ebx - 0x26f6]
0x804a6b0:   52                              	push edx
0x804a6b1:   50                              	push eax
0x804a6b2:   e8 c0 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6b7:   83 c4 10                        	add esp, 0x10
0x804a6ba:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a6c0:   83 ec 04                        	sub esp, 4
0x804a6c3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6c6:   8d 93 10 d9 ff ff               	lea edx, [ebx - 0x26f0]
0x804a6cc:   52                              	push edx
0x804a6cd:   50                              	push eax
0x804a6ce:   e8 a4 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6d3:   83 c4 10                        	add esp, 0x10
0x804a6d6:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804a6dc:   89 c2                           	mov edx, eax
0x804a6de:   83 ec 04                        	sub esp, 4
0x804a6e1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a6e4:   8d 83 16 d9 ff ff               	lea eax, [ebx - 0x26ea]
0x804a6ea:   50                              	push eax
0x804a6eb:   52                              	push edx
0x804a6ec:   e8 86 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a6f1:   83 c4 10                        	add esp, 0x10
0x804a6f4:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804a6fa:   83 ec 04                        	sub esp, 4
0x804a6fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a700:   8d 93 1c d9 ff ff               	lea edx, [ebx - 0x26e4]
0x804a706:   52                              	push edx
0x804a707:   50                              	push eax
0x804a708:   e8 6a ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a70d:   83 c4 10                        	add esp, 0x10
0x804a710:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804a716:   83 ec 04                        	sub esp, 4
0x804a719:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a71c:   8d 93 22 d9 ff ff               	lea edx, [ebx - 0x26de]
0x804a722:   52                              	push edx
0x804a723:   50                              	push eax
0x804a724:   e8 4e ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a729:   83 c4 10                        	add esp, 0x10
0x804a72c:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804a732:   89 c2                           	mov edx, eax
0x804a734:   83 ec 04                        	sub esp, 4
0x804a737:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a73a:   8d 83 28 d9 ff ff               	lea eax, [ebx - 0x26d8]
0x804a740:   50                              	push eax
0x804a741:   52                              	push edx
0x804a742:   e8 30 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a747:   83 c4 10                        	add esp, 0x10
0x804a74a:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804a751:   98                              	cwde 
0x804a752:   83 ec 04                        	sub esp, 4
0x804a755:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a758:   8d 93 2e d9 ff ff               	lea edx, [ebx - 0x26d2]
0x804a75e:   52                              	push edx
0x804a75f:   50                              	push eax
0x804a760:   e8 12 ee ff ff                  	call 0x8049577 <transparent_crc>
0x804a765:   83 c4 10                        	add esp, 0x10
0x804a768:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804a76e:   89 c2                           	mov edx, eax
0x804a770:   83 ec 04                        	sub esp, 4
0x804a773:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a776:   8d 83 34 d9 ff ff               	lea eax, [ebx - 0x26cc]
0x804a77c:   50                              	push eax
0x804a77d:   52                              	push edx
0x804a77e:   e8 f4 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a783:   83 c4 10                        	add esp, 0x10
0x804a786:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804a78c:   83 ec 04                        	sub esp, 4
0x804a78f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a792:   8d 93 3a d9 ff ff               	lea edx, [ebx - 0x26c6]
0x804a798:   52                              	push edx
0x804a799:   50                              	push eax
0x804a79a:   e8 d8 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a79f:   83 c4 10                        	add esp, 0x10
0x804a7a2:   8b 83 ac 04 00 00               	mov eax, dword ptr [ebx + 0x4ac]
0x804a7a8:   83 ec 04                        	sub esp, 4
0x804a7ab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7ae:   8d 93 40 d9 ff ff               	lea edx, [ebx - 0x26c0]
0x804a7b4:   52                              	push edx
0x804a7b5:   50                              	push eax
0x804a7b6:   e8 bc ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7bb:   83 c4 10                        	add esp, 0x10
0x804a7be:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a7c4:   f7 d0                           	not eax
0x804a7c6:   83 ec 08                        	sub esp, 8
0x804a7c9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7cc:   50                              	push eax
0x804a7cd:   e8 94 dc ff ff                  	call 0x8048466 <platform_main_end>
0x804a7d2:   83 c4 10                        	add esp, 0x10
0x804a7d5:   b8 00 00 00 00                  	mov eax, 0
0x804a7da:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a7dd:   59                              	pop ecx
0x804a7de:   5b                              	pop ebx
0x804a7df:   5d                              	pop ebp
0x804a7e0:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a7e3:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a7e4 -- 0x804a7e8
0x804a7e4:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a7e7:   c3                              	ret 
; data inside code section at 0x804a7e8 -- 0x804a7f0
0x804a7e8:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804a7f0 -- 0x804a84d
0x804a7f0:   55                              	push ebp
0x804a7f1:   57                              	push edi
0x804a7f2:   56                              	push esi
0x804a7f3:   53                              	push ebx
0x804a7f4:   e8 97 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a7f9:   81 c3 07 28 00 00               	add ebx, 0x2807
0x804a7ff:   83 ec 0c                        	sub esp, 0xc
0x804a802:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a806:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a80c:   e8 bb da ff ff                  	call 0x80482cc <_init>
0x804a811:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a817:   29 c6                           	sub esi, eax
0x804a819:   c1 fe 02                        	sar esi, 2
0x804a81c:   85 f6                           	test esi, esi
0x804a81e:   74 25                           	je 0x804a845 <__libc_csu_init+0x55>
0x804a820:   31 ff                           	xor edi, edi
0x804a822:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a828:   83 ec 04                        	sub esp, 4
0x804a82b:   55                              	push ebp
0x804a82c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a830:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a834:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a83b:   83 c7 01                        	add edi, 1
0x804a83e:   83 c4 10                        	add esp, 0x10
0x804a841:   39 fe                           	cmp esi, edi
0x804a843:   75 e3                           	jne 0x804a828 <__libc_csu_init+0x38>
0x804a845:   83 c4 0c                        	add esp, 0xc
0x804a848:   5b                              	pop ebx
0x804a849:   5e                              	pop esi
0x804a84a:   5f                              	pop edi
0x804a84b:   5d                              	pop ebp
0x804a84c:   c3                              	ret 
; data inside code section at 0x804a84d -- 0x804a850
0x804a84d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a850 -- 0x804a852
0x804a850:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a854 -- 0x804a868
0x804a854:   53                              	push ebx
0x804a855:   83 ec 08                        	sub esp, 8
0x804a858:   e8 33 db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a85d:   81 c3 a3 27 00 00               	add ebx, 0x27a3
0x804a863:   83 c4 08                        	add esp, 8
0x804a866:   5b                              	pop ebx
0x804a867:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 6c a8 04 08  04 00 00 00 11 00 10 00   |....l...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a868:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a878:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a888:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a898:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a8a8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a8b8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a8c8:   31 00 67 5f 38 00 67 5f  31 36 00 67 5f 31 39 00   |1.g_8.g_16.g_19.|
0x804a8d8:   67 5f 32 36 00 67 5f 36  30 00 67 5f 39 34 00 67   |g_26.g_60.g_94.g|
0x804a8e8:   5f 39 38 00 67 5f 31 30  30 00 67 5f 31 37 35 00   |_98.g_100.g_175.|
0x804a8f8:   67 5f 32 32 36 00 67 5f  32 33 32 00 67 5f 32 33   |g_226.g_232.g_23|
0x804a908:   33 00 67 5f 32 33 35 00  67 5f 32 33 36 00 67 5f   |3.g_235.g_236.g_|
0x804a918:   32 35 30 00 67 5f 32 35  31 00 67 5f 32 37 34 00   |250.g_251.g_274.|
0x804a928:   67 5f 32 37 35 00 67 5f  32 37 36 00 67 5f 32 39   |g_275.g_276.g_29|
0x804a938:   31 00 67 5f 32 39 39 00  67 5f 33 30 30 00 00 00   |1.g_299.g_300...|
0x804a948:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804a958:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804a968:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804a978:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804a988:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804a998:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804a9a8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804a9b0:   01 1b 03 3b b0 02 00 00  55 00 00 00 40 d9 ff ff   |...;....U...@...|
0x804a9c0:   e0 02 00 00 80 d9 ff ff  04 03 00 00 d0 d9 ff ff   |................|
0x804a9d0:   cc 02 00 00 a6 da ff ff  18 03 00 00 b6 da ff ff   |................|
0x804a9e0:   38 03 00 00 e4 da ff ff  5c 03 00 00 02 db ff ff   |8.......\.......|
0x804a9f0:   7c 03 00 00 2a db ff ff  9c 03 00 00 54 db ff ff   ||...*.......T...|
0x804aa00:   bc 03 00 00 7d db ff ff  dc 03 00 00 c0 db ff ff   |....}...........|
0x804aa10:   fc 03 00 00 01 dc ff ff  1c 04 00 00 59 dc ff ff   |............Y...|
0x804aa20:   40 04 00 00 ab dc ff ff  64 04 00 00 e8 dc ff ff   |@.......d.......|
0x804aa30:   84 04 00 00 1f dd ff ff  a4 04 00 00 3e dd ff ff   |............>...|
0x804aa40:   c4 04 00 00 68 dd ff ff  e4 04 00 00 94 dd ff ff   |....h...........|
0x804aa50:   04 05 00 00 bf dd ff ff  24 05 00 00 08 de ff ff   |........$.......|
0x804aa60:   44 05 00 00 4f de ff ff  64 05 00 00 a9 de ff ff   |D...O...d.......|
0x804aa70:   88 05 00 00 fd de ff ff  ac 05 00 00 3c df ff ff   |............<...|
0x804aa80:   cc 05 00 00 75 df ff ff  ec 05 00 00 97 df ff ff   |....u...........|
0x804aa90:   0c 06 00 00 e5 df ff ff  2c 06 00 00 21 e0 ff ff   |........,...!...|
0x804aaa0:   4c 06 00 00 aa e0 ff ff  6c 06 00 00 dc e0 ff ff   |L.......l.......|
0x804aab0:   8c 06 00 00 0c e1 ff ff  ac 06 00 00 51 e1 ff ff   |............Q...|
0x804aac0:   cc 06 00 00 90 e1 ff ff  ec 06 00 00 c2 e1 ff ff   |................|
0x804aad0:   0c 07 00 00 ee e1 ff ff  2c 07 00 00 0c e2 ff ff   |........,.......|
0x804aae0:   4c 07 00 00 34 e2 ff ff  6c 07 00 00 59 e2 ff ff   |L...4...l...Y...|
0x804aaf0:   8c 07 00 00 7e e2 ff ff  ac 07 00 00 b5 e2 ff ff   |....~...........|
0x804ab00:   cc 07 00 00 e9 e2 ff ff  ec 07 00 00 3b e3 ff ff   |............;...|
0x804ab10:   10 08 00 00 87 e3 ff ff  34 08 00 00 be e3 ff ff   |........4.......|
0x804ab20:   54 08 00 00 ef e3 ff ff  74 08 00 00 0e e4 ff ff   |T.......t.......|
0x804ab30:   94 08 00 00 38 e4 ff ff  b4 08 00 00 60 e4 ff ff   |....8.......`...|
0x804ab40:   d4 08 00 00 89 e4 ff ff  f4 08 00 00 c5 e4 ff ff   |................|
0x804ab50:   14 09 00 00 ff e4 ff ff  34 09 00 00 52 e5 ff ff   |........4...R...|
0x804ab60:   58 09 00 00 9f e5 ff ff  7c 09 00 00 d7 e5 ff ff   |X.......|.......|
0x804ab70:   9c 09 00 00 09 e6 ff ff  bc 09 00 00 1d e6 ff ff   |................|
0x804ab80:   dc 09 00 00 34 e6 ff ff  fc 09 00 00 49 e6 ff ff   |....4.......I...|
0x804ab90:   1c 0a 00 00 5f e6 ff ff  3c 0a 00 00 86 e6 ff ff   |...._...<.......|
0x804aba0:   5c 0a 00 00 ab e6 ff ff  7c 0a 00 00 ea e6 ff ff   |\.......|.......|
0x804abb0:   9c 0a 00 00 23 e7 ff ff  bc 0a 00 00 4f e7 ff ff   |....#.......O...|
0x804abc0:   dc 0a 00 00 75 e7 ff ff  fc 0a 00 00 b7 e7 ff ff   |....u...........|
0x804abd0:   1c 0b 00 00 f9 e7 ff ff  3c 0b 00 00 3b e8 ff ff   |........<...;...|
0x804abe0:   5c 0b 00 00 b0 e8 ff ff  7c 0b 00 00 0d e9 ff ff   |\.......|.......|
0x804abf0:   9c 0b 00 00 6a e9 ff ff  bc 0b 00 00 c7 e9 ff ff   |....j...........|
0x804ac00:   dc 0b 00 00 57 ea ff ff  fc 0b 00 00 bb ea ff ff   |....W...........|
0x804ac10:   1c 0c 00 00 2b eb ff ff  3c 0c 00 00 72 eb ff ff   |....+...<...r...|
0x804ac20:   60 0c 00 00 c7 eb ff ff  80 0c 00 00 0e ec ff ff   |`...............|
0x804ac30:   a4 0c 00 00 76 ec ff ff  c8 0c 00 00 a1 ed ff ff   |....v...........|
0x804ac40:   f8 0c 00 00 24 fb ff ff  28 0d 00 00 34 fe ff ff   |....$...(...4...|
0x804ac50:   60 0d 00 00 40 fe ff ff  74 0d 00 00 a0 fe ff ff   |`...@...t.......|
0x804ac60:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804ac64:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ac74:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804ac84:   fc d6 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804ac94:   30 00 00 00 58 d6 ff ff  40 00 00 00 00 0e 08 46   |0...X...@......F|
0x804aca4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804acb4:   10 00 00 00 54 00 00 00  74 d6 ff ff 08 00 00 00   |....T...t.......|
0x804acc4:   00 00 00 00 1c 00 00 00  68 00 00 00 86 d7 ff ff   |........h.......|
0x804acd4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804ace4:   04 04 00 00 20 00 00 00  88 00 00 00 76 d7 ff ff   |.... .......v...|
0x804acf4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ad04:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ad14:   80 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ad24:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ad34:   7e d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |~...(....A....B.|
0x804ad44:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ad54:   86 d7 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804ad64:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ad74:   90 d7 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804ad84:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804ad94:   99 d7 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804ada4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804adb4:   bc d7 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804adc4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804add4:   dd d7 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804ade4:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804adf4:   90 01 00 00 11 d8 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804ae04:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804ae14:   1c 00 00 00 b4 01 00 00  3f d8 ff ff 3d 00 00 00   |........?...=...|
0x804ae24:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804ae34:   1c 00 00 00 d4 01 00 00  5c d8 ff ff 37 00 00 00   |........\...7...|
0x804ae44:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ae54:   1c 00 00 00 f4 01 00 00  73 d8 ff ff 1f 00 00 00   |........s.......|
0x804ae64:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ae74:   1c 00 00 00 14 02 00 00  72 d8 ff ff 2a 00 00 00   |........r...*...|
0x804ae84:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ae94:   1c 00 00 00 34 02 00 00  7c d8 ff ff 2c 00 00 00   |....4...|...,...|
0x804aea4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804aeb4:   1c 00 00 00 54 02 00 00  88 d8 ff ff 2b 00 00 00   |....T.......+...|
0x804aec4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804aed4:   1c 00 00 00 74 02 00 00  93 d8 ff ff 49 00 00 00   |....t.......I...|
0x804aee4:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804aef4:   1c 00 00 00 94 02 00 00  bc d8 ff ff 47 00 00 00   |............G...|
0x804af04:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804af14:   20 00 00 00 b4 02 00 00  e3 d8 ff ff 5a 00 00 00   | ...........Z...|
0x804af24:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804af34:   c5 0c 04 04 20 00 00 00  d8 02 00 00 19 d9 ff ff   |.... ...........|
0x804af44:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804af54:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804af64:   49 d9 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |I...?....A....B.|
0x804af74:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804af84:   68 d9 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |h...9....A....B.|
0x804af94:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804afa4:   81 d9 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804afb4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804afc4:   83 d9 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804afd4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804afe4:   b1 d9 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804aff4:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b004:   cd d9 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b014:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b024:   36 da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |6...2....A....B.|
0x804b034:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b044:   48 da ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |H...0....A....B.|
0x804b054:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b064:   58 da ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |X...E....A....B.|
0x804b074:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b084:   7d da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |}...?....A....B.|
0x804b094:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b0a4:   9c da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b0b4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b0c4:   ae da ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b0d4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b0e4:   ba da ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b0f4:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b104:   b8 da ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b114:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b124:   c0 da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b134:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b144:   c5 da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b154:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b164:   ca da ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b174:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b184:   e1 da ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b194:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b1a4:   f5 da ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b1b4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b1c4:   60 05 00 00 23 db ff ff  4c 00 00 00 00 41 0e 08   |`...#...L....A..|
0x804b1d4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b1e4:   1c 00 00 00 84 05 00 00  4b db ff ff 37 00 00 00   |........K...7...|
0x804b1f4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b204:   1c 00 00 00 a4 05 00 00  62 db ff ff 31 00 00 00   |........b...1...|
0x804b214:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b224:   1c 00 00 00 c4 05 00 00  73 db ff ff 1f 00 00 00   |........s.......|
0x804b234:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b244:   1c 00 00 00 e4 05 00 00  72 db ff ff 2a 00 00 00   |........r...*...|
0x804b254:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b264:   1c 00 00 00 04 06 00 00  7c db ff ff 28 00 00 00   |........|...(...|
0x804b274:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b284:   1c 00 00 00 24 06 00 00  84 db ff ff 29 00 00 00   |....$.......)...|
0x804b294:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b2a4:   1c 00 00 00 44 06 00 00  8d db ff ff 3c 00 00 00   |....D.......<...|
0x804b2b4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b2c4:   1c 00 00 00 64 06 00 00  a9 db ff ff 3a 00 00 00   |....d.......:...|
0x804b2d4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b2e4:   20 00 00 00 84 06 00 00  c3 db ff ff 53 00 00 00   | ...........S...|
0x804b2f4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b304:   c5 0c 04 04 20 00 00 00  a8 06 00 00 f2 db ff ff   |.... ...........|
0x804b314:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b324:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b334:   1b dc ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b344:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b354:   33 dc ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |3...2....A....B.|
0x804b364:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b374:   45 dc ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804b384:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b394:   39 dc ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |9........A....B.|
0x804b3a4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b3b4:   30 dc ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804b3c4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b3d4:   25 dc ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |%........A....B.|
0x804b3e4:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b3f4:   1b dc ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b404:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b414:   22 dc ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |"...%....A....B.|
0x804b424:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b434:   27 dc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |'...?....A....B.|
0x804b444:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b454:   46 dc ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |F...9....A....B.|
0x804b464:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b474:   5f dc ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |_...,....A....B.|
0x804b484:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b494:   6b dc ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |k...&....A....B.|
0x804b4a4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b4b4:   71 dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |q...B....A....B.|
0x804b4c4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b4d4:   93 dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b4e4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b4f4:   b5 dc ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b504:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b514:   d7 dc ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b524:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b534:   2c dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |,...]....A....B.|
0x804b544:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b554:   69 dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |i...]....A....B.|
0x804b564:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b574:   a6 dd ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b584:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b594:   e3 dd ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5a4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b5b4:   53 de ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |S...d....A....B.|
0x804b5c4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b5d4:   97 de ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b5e4:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b5f4:   e7 de ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b604:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b614:   b0 09 00 00 0a df ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b624:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b634:   d0 09 00 00 3f df ff ff  47 00 00 00 00 41 0e 08   |....?...G....A..|
0x804b644:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b654:   20 00 00 00 f4 09 00 00  62 df ff ff 68 00 00 00   | .......b...h...|
0x804b664:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b674:   0c 04 04 00 2c 00 00 00  18 0a 00 00 a6 df ff ff   |....,...........|
0x804b684:   2b 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |+....A....B..F..|
0x804b694:   86 04 83 05 03 1e 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b6a4:   04 00 00 00 2c 00 00 00  48 0a 00 00 a1 e0 ff ff   |....,...H.......|
0x804b6b4:   83 0d 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804b6c4:   86 04 83 05 03 73 0d c3  41 c6 41 c7 41 c5 0c 04   |.....s..A.A.A...|
0x804b6d4:   04 00 00 00 34 00 00 00  78 0a 00 00 f4 ed ff ff   |....4...x.......|
0x804b6e4:   10 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b6f4:   0f 03 75 78 06 10 03 02  75 7c 03 fb 02 c1 0c 01   |..ux....u|......|
0x804b704:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b714:   b0 0a 00 00 cc f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b724:   48 00 00 00 c4 0a 00 00  c4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804b734:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b744:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b754:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b764:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b774:   10 0b 00 00 d8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b784:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 54 a8 04 08  19 00 00 00 0c cf 04 08   |....T...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff 00 00   |................|
0x804d028:   a3 c5 e1 a1 6b 94 1c cf  fc ff ff ff c5 0f 8f 62   |....k..........b|
0x804d038:   ff ff ff ff 61 13 dc a8  f7 ff 00 00 01 00 00 00   |....a...........|
0x804d048:   6c 03 a6 4a 9c 4f d6 3d  04 00 00 00 28 39 dd 25   |l..J.O.=....(9.%|
0x804d058:   ae 92 ed 99 02 2e 72 93  39 88 ab 9a 3e b7 ea 41   |......r.9...>..A|
0x804d068:   36 0b 07 24 ??                                     |6..$?           |
