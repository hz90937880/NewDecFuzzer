;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:31:44
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 a0 dd ff ff               	lea eax, [ebx - 0x2260]
0x804835c:   50                              	push eax
0x804835d:   8d 83 40 dd ff ff               	lea eax, [ebx - 0x22c0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 a3 a9 04 08               	mov eax, 0x804a9a3
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483a5:   3d 78 d0 04 08                  	cmp eax, 0x804d078
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 78 d0 04 08                  	push 0x804d078
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 78 d0 04 08                  	mov eax, 0x804d078
0x80483e5:   2d 78 d0 04 08                  	sub eax, 0x804d078
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 78 d0 04 08                  	push 0x804d078
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 de 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 ca 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 c0 dd ff ff               	lea edx, [eax - 0x2240]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 9d 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 7f 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 57 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 2d 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 04 28 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 c1 27 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 7f 27 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 27 27 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 d6 26 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 99 26 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 62 26 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 43 26 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 19 26 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 ed 25 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c2 25 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 79 25 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 31 25 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 d7 24 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 84 24 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 45 24 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 0f 24 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 ed 23 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 9f 23 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 63 23 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 da 22 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 a8 22 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 78 22 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 33 22 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 f4 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c2 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 93 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 75 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 4d 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 28 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 03 21 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 cc 20 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 97 20 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 45 20 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 fa 1f 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 c3 1f 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 92 1f 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 73 1f 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 49 1f 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 21 1f 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 f8 1e 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 bc 1e 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 81 1e 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 2e 1e 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e2 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 aa 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 7b 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 67 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 50 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 3b 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 25 1d 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 fe 1c 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 d9 1c 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 9a 1c 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 61 1c 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 35 1c 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 0f 1c 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 b8 de ff ff               	fld dword ptr [eax - 0x2148]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 b8 de ff ff               	fld dword ptr [eax - 0x2148]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 bc de ff ff               	fld dword ptr [eax - 0x2144]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 cd 1b 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 b8 de ff ff               	fld dword ptr [eax - 0x2148]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 b8 de ff ff               	fld dword ptr [eax - 0x2148]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 bc de ff ff               	fld dword ptr [eax - 0x2144]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 8b 1b 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 c0 de ff ff               	fld dword ptr [eax - 0x2140]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 c4 de ff ff               	fld dword ptr [eax - 0x213c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 c8 de ff ff               	fld dword ptr [eax - 0x2138]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 49 1b 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 cc de ff ff               	fld dword ptr [eax - 0x2134]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 d0 de ff ff               	fld dword ptr [eax - 0x2130]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 d4 de ff ff               	fld dword ptr [eax - 0x212c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 d1 1a 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 e0 de ff ff               	fld qword ptr [eax - 0x2120]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 74 1a 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 e0 de ff ff               	fld qword ptr [eax - 0x2120]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 17 1a 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 e8 de ff ff               	fld qword ptr [eax - 0x2118]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 f0 de ff ff               	fld qword ptr [eax - 0x2110]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 f8 de ff ff               	fld qword ptr [eax - 0x2108]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 ba 19 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 00 df ff ff               	fld qword ptr [eax - 0x2100]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 08 df ff ff               	fld qword ptr [eax - 0x20f8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 10 df ff ff               	fld qword ptr [eax - 0x20f0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 2a 19 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 18 df ff ff               	fld dword ptr [eax - 0x20e8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 1c df ff ff               	fld dword ptr [eax - 0x20e4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 c6 18 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 55 18 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 12 18 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 d0 dd ff ff               	lea eax, [ebx - 0x2230]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 f4 dd ff ff               	lea eax, [ebx - 0x220c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049778
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 24                        	sub esp, 0x24
0x804962f:   e8 08 17 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x804963c:   8b 5d 38                        	mov ebx, dword ptr [ebp + 0x38]
0x804963f:   8b 4d 48                        	mov ecx, dword ptr [ebp + 0x48]
0x8049642:   89 4d d4                        	mov dword ptr [ebp - 0x2c], ecx
0x8049645:   8b 75 4c                        	mov esi, dword ptr [ebp + 0x4c]
0x8049648:   89 75 d0                        	mov dword ptr [ebp - 0x30], esi
0x804964b:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x804964e:   8b 75 5c                        	mov esi, dword ptr [ebp + 0x5c]
0x8049651:   8b 4d 68                        	mov ecx, dword ptr [ebp + 0x68]
0x8049654:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049658:   89 da                           	mov edx, ebx
0x804965a:   66 89 55 ec                     	mov word ptr [ebp - 0x14], dx
0x804965e:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049662:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x8049666:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x804966a:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x804966e:   89 fa                           	mov edx, edi
0x8049670:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x8049674:   89 f2                           	mov edx, esi
0x8049676:   88 55 dc                        	mov byte ptr [ebp - 0x24], dl
0x8049679:   89 ca                           	mov edx, ecx
0x804967b:   88 55 d8                        	mov byte ptr [ebp - 0x28], dl
0x804967e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049681:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x8049687:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x804968a:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x8049690:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049693:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x8049699:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804969c:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496a2:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496a5:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496ab:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496ae:   89 90 38 00 00 00               	mov dword ptr [eax + 0x38], edx
0x80496b4:   8b 55 20                        	mov edx, dword ptr [ebp + 0x20]
0x80496b7:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x80496bd:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x80496c0:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x80496c6:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x80496ca:   66 89 90 44 00 00 00            	mov word ptr [eax + 0x44], dx
0x80496d1:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x80496d4:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x80496da:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x80496dd:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x80496e3:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x80496e6:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x80496ec:   0f b7 55 ec                     	movzx edx, word ptr [ebp - 0x14]
0x80496f0:   66 89 90 54 00 00 00            	mov word ptr [eax + 0x54], dx
0x80496f7:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x80496fa:   89 90 58 00 00 00               	mov dword ptr [eax + 0x58], edx
0x8049700:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x8049703:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x8049709:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x804970c:   89 90 a4 04 00 00               	mov dword ptr [eax + 0x4a4], edx
0x8049712:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x8049716:   66 89 90 60 00 00 00            	mov word ptr [eax + 0x60], dx
0x804971d:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x8049721:   66 89 90 62 00 00 00            	mov word ptr [eax + 0x62], dx
0x8049728:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x804972b:   89 90 a8 04 00 00               	mov dword ptr [eax + 0x4a8], edx
0x8049731:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x8049734:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x804973a:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x804973e:   66 89 90 68 00 00 00            	mov word ptr [eax + 0x68], dx
0x8049745:   0f b6 55 dc                     	movzx edx, byte ptr [ebp - 0x24]
0x8049749:   88 90 ac 04 00 00               	mov byte ptr [eax + 0x4ac], dl
0x804974f:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x8049752:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x8049758:   8b 55 64                        	mov edx, dword ptr [ebp + 0x64]
0x804975b:   89 90 70 00 00 00               	mov dword ptr [eax + 0x70], edx
0x8049761:   0f b6 55 d8                     	movzx edx, byte ptr [ebp - 0x28]
0x8049765:   88 90 74 00 00 00               	mov byte ptr [eax + 0x74], dl
0x804976b:   b8 00 00 00 00                  	mov eax, 0
0x8049770:   83 c4 24                        	add esp, 0x24
0x8049773:   5b                              	pop ebx
0x8049774:   5e                              	pop esi
0x8049775:   5f                              	pop edi
0x8049776:   5d                              	pop ebp
0x8049777:   c3                              	ret 
; function: func_1 at 0x8049778 -- 0x804a9a3
0x8049778:   55                              	push ebp
0x8049779:   89 e5                           	mov ebp, esp
0x804977b:   57                              	push edi
0x804977c:   56                              	push esi
0x804977d:   53                              	push ebx
0x804977e:   81 ec 64 01 00 00               	sub esp, 0x164
0x8049784:   e8 b3 15 00 00                  	call 0x804ad3c <__x86.get_pc_thunk.ax>
0x8049789:   05 77 38 00 00                  	add eax, 0x3877
0x804978e:   66 c7 85 76 ff ff ff bf a1      	mov word ptr [ebp - 0x8a], 0xa1bf
0x8049797:   c7 85 70 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x90], 0xfffffff8
0x80497a1:   c7 85 6c ff ff ff ef 8c fb d8   	mov dword ptr [ebp - 0x94], 0xd8fb8cef
0x80497ab:   c7 45 f0 5e 80 d8 28            	mov dword ptr [ebp - 0x10], 0x28d8805e
0x80497b2:   c7 45 ec fd ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffffd
0x80497b9:   c7 45 e8 ff ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffff
0x80497c0:   c7 45 e4 1b 4e ed dd            	mov dword ptr [ebp - 0x1c], 0xdded4e1b
0x80497c7:   c7 45 e0 09 00 00 00            	mov dword ptr [ebp - 0x20], 9
0x80497ce:   c7 45 dc c5 14 34 7f            	mov dword ptr [ebp - 0x24], 0x7f3414c5
0x80497d5:   66 c7 45 da 5e a0               	mov word ptr [ebp - 0x26], 0xa05e
0x80497db:   c7 45 d4 fd ff ff ff            	mov dword ptr [ebp - 0x2c], 0xfffffffd
0x80497e2:   c7 45 d0 5e c3 a4 c0            	mov dword ptr [ebp - 0x30], 0xc0a4c35e
0x80497e9:   c7 45 cc 02 00 00 00            	mov dword ptr [ebp - 0x34], 2
0x80497f0:   66 c7 45 ca ff ff               	mov word ptr [ebp - 0x36], 0xffff
0x80497f6:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x80497fd:   c7 45 c0 14 a9 2d fa            	mov dword ptr [ebp - 0x40], 0xfa2da914
0x8049804:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x804980e:   66 c7 45 be 24 c6               	mov word ptr [ebp - 0x42], 0xc624
0x8049814:   66 c7 45 bc 5b f5               	mov word ptr [ebp - 0x44], 0xf55b
0x804981a:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049821:   c7 85 64 ff ff ff 91 34 df c7   	mov dword ptr [ebp - 0x9c], 0xc7df3491
0x804982b:   c7 45 b4 11 29 69 a7            	mov dword ptr [ebp - 0x4c], 0xa7692911
0x8049832:   66 c7 45 b2 f8 ff               	mov word ptr [ebp - 0x4e], 0xfff8
0x8049838:   c6 45 b1 00                     	mov byte ptr [ebp - 0x4f], 0
0x804983c:   c7 85 60 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0xa0], 7
0x8049846:   c7 45 ac 1f 67 c4 b1            	mov dword ptr [ebp - 0x54], 0xb1c4671f
0x804984d:   c6 45 ab f9                     	mov byte ptr [ebp - 0x55], 0xf9
0x8049851:   c7 45 a4 f6 87 ee 54            	mov dword ptr [ebp - 0x5c], 0x54ee87f6
0x8049858:   66 c7 85 5e ff ff ff f3 26      	mov word ptr [ebp - 0xa2], 0x26f3
0x8049861:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049868:   c7 45 9c 53 a0 6b 96            	mov dword ptr [ebp - 0x64], 0x966ba053
0x804986f:   c7 45 98 04 00 00 00            	mov dword ptr [ebp - 0x68], 4
0x8049876:   66 c7 45 96 91 76               	mov word ptr [ebp - 0x6a], 0x7691
0x804987c:   66 c7 85 5c ff ff ff ff ff      	mov word ptr [ebp - 0xa4], 0xffff
0x8049885:   c7 85 58 ff ff ff 52 eb 2e f0   	mov dword ptr [ebp - 0xa8], 0xf02eeb52
0x804988f:   66 c7 85 56 ff ff ff 09 00      	mov word ptr [ebp - 0xaa], 9
0x8049898:   66 c7 85 54 ff ff ff 7e 16      	mov word ptr [ebp - 0xac], 0x167e
0x80498a1:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x80498a8:   0f b7 c0                        	movzx eax, ax
0x80498ab:   ba 01 00 00 00                  	mov edx, 1
0x80498b0:   29 c2                           	sub edx, eax
0x80498b2:   89 d0                           	mov eax, edx
0x80498b4:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x80498ba:   c7 45 a4 f3 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffff3
0x80498c1:   83 7d a4 f1                     	cmp dword ptr [ebp - 0x5c], -0xf
0x80498c5:   0f 84 83 00 00 00               	je 0x804994e <func_1+0x1d6>
0x80498cb:   0f be 45 ab                     	movsx eax, byte ptr [ebp - 0x55]
0x80498cf:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x80498d5:   0f b6 7d b1                     	movzx edi, byte ptr [ebp - 0x4f]
0x80498d9:   0f bf 75 b2                     	movsx esi, word ptr [ebp - 0x4e]
0x80498dd:   0f b7 5d bc                     	movzx ebx, word ptr [ebp - 0x44]
0x80498e1:   0f b7 4d be                     	movzx ecx, word ptr [ebp - 0x42]
0x80498e5:   0f bf 55 ca                     	movsx edx, word ptr [ebp - 0x36]
0x80498e9:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x80498ed:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x80498f3:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x80498f6:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x80498fc:   57                              	push edi
0x80498fd:   56                              	push esi
0x80498fe:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x8049901:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049904:   53                              	push ebx
0x8049905:   51                              	push ecx
0x8049906:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804990c:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804990f:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049912:   52                              	push edx
0x8049913:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049916:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049919:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804991c:   50                              	push eax
0x804991d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049920:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049923:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049926:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049929:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804992c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804992f:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x8049935:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804993b:   e8 e6 fc ff ff                  	call 0x8049626 <set_var>
0x8049940:   83 c4 64                        	add esp, 0x64
0x8049943:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049949:   e9 4d 10 00 00                  	jmp 0x804a99b <func_1+0x1223>
0x804994e:   83 bd 6c ff ff ff 01            	cmp dword ptr [ebp - 0x94], 1
0x8049955:   0f 95 c0                        	setne al
0x8049958:   0f b6 c0                        	movzx eax, al
0x804995b:   33 45 a4                        	xor eax, dword ptr [ebp - 0x5c]
0x804995e:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049964:   0f 86 53 0e 00 00               	jbe 0x804a7bd <func_1+0x1045>
0x804996a:   c6 85 37 ff ff ff fe            	mov byte ptr [ebp - 0xc9], 0xfe
0x8049971:   c7 45 90 83 39 64 2b            	mov dword ptr [ebp - 0x70], 0x2b643983
0x8049978:   c7 85 30 ff ff ff e7 4e fd 95   	mov dword ptr [ebp - 0xd0], 0x95fd4ee7
0x8049982:   c7 85 2c ff ff ff 30 bc 90 dc   	mov dword ptr [ebp - 0xd4], 0xdc90bc30
0x804998c:   c7 85 28 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd8], 0
0x8049996:   c7 45 8c c8 80 c3 4e            	mov dword ptr [ebp - 0x74], 0x4ec380c8
0x804999d:   66 c7 85 26 ff ff ff 69 d2      	mov word ptr [ebp - 0xda], 0xd269
0x80499a6:   c7 85 20 ff ff ff b0 08 52 56   	mov dword ptr [ebp - 0xe0], 0x565208b0
0x80499b0:   66 c7 85 1e ff ff ff b4 21      	mov word ptr [ebp - 0xe2], 0x21b4
0x80499b9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x80499bc:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x80499c2:   0f 95 c0                        	setne al
0x80499c5:   0f b6 c0                        	movzx eax, al
0x80499c8:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x80499cb:   80 bd 37 ff ff ff 00            	cmp byte ptr [ebp - 0xc9], 0
0x80499d2:   0f 85 af 00 00 00               	jne 0x8049a87 <func_1+0x30f>
0x80499d8:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x80499df:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x80499e2:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x80499e6:   74 08                           	je 0x80499f0 <func_1+0x278>
0x80499e8:   c7 45 a4 ff 00 00 00            	mov dword ptr [ebp - 0x5c], 0xff
0x80499ef:   90                              	nop 
0x80499f0:   0f b7 95 5e ff ff ff            	movzx edx, word ptr [ebp - 0xa2]
0x80499f7:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x80499fe:   29 c2                           	sub edx, eax
0x8049a00:   89 d0                           	mov eax, edx
0x8049a02:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049a05:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049a08:   0f be c0                        	movsx eax, al
0x8049a0b:   83 e8 14                        	sub eax, 0x14
0x8049a0e:   0f bf 8d 76 ff ff ff            	movsx ecx, word ptr [ebp - 0x8a]
0x8049a15:   ba 00 00 00 00                  	mov edx, 0
0x8049a1a:   f7 f1                           	div ecx
0x8049a1c:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049a23:   01 c2                           	add edx, eax
0x8049a25:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049a2c:   39 c2                           	cmp edx, eax
0x8049a2e:   0f 95 c0                        	setne al
0x8049a31:   0f b6 c0                        	movzx eax, al
0x8049a34:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049a37:   0f 9c c0                        	setl al
0x8049a3a:   0f b6 d0                        	movzx edx, al
0x8049a3d:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049a44:   39 c2                           	cmp edx, eax
0x8049a46:   0f 9e c0                        	setle al
0x8049a49:   0f b6 d0                        	movzx edx, al
0x8049a4c:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049a53:   31 c2                           	xor edx, eax
0x8049a55:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x8049a5c:   39 c2                           	cmp edx, eax
0x8049a5e:   0f 9e c0                        	setle al
0x8049a61:   0f b6 c0                        	movzx eax, al
0x8049a64:   0b 85 70 ff ff ff               	or eax, dword ptr [ebp - 0x90]
0x8049a6a:   89 c2                           	mov edx, eax
0x8049a6c:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049a6f:   21 c2                           	and edx, eax
0x8049a71:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049a78:   39 c2                           	cmp edx, eax
0x8049a7a:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049a7d:   0d b0 4c 27 59                  	or eax, 0x59274cb0
0x8049a82:   83 f8 25                        	cmp eax, 0x25
0x8049a85:   7e 07                           	jle 0x8049a8e <func_1+0x316>
0x8049a87:   b8 01 00 00 00                  	mov eax, 1
0x8049a8c:   eb 05                           	jmp 0x8049a93 <func_1+0x31b>
0x8049a8e:   b8 00 00 00 00                  	mov eax, 0
0x8049a93:   83 f8 ff                        	cmp eax, -1
0x8049a96:   0f 94 c0                        	sete al
0x8049a99:   0f b6 d0                        	movzx edx, al
0x8049a9c:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049aa3:   09 d0                           	or eax, edx
0x8049aa5:   0f b6 8d 37 ff ff ff            	movzx ecx, byte ptr [ebp - 0xc9]
0x8049aac:   ba 00 00 00 00                  	mov edx, 0
0x8049ab1:   f7 f1                           	div ecx
0x8049ab3:   89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x8049ab6:   80 bd 37 ff ff ff 00            	cmp byte ptr [ebp - 0xc9], 0
0x8049abd:   74 0f                           	je 0x8049ace <func_1+0x356>
0x8049abf:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049ac6:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049ac9:   e9 c9 0c 00 00                  	jmp 0x804a797 <func_1+0x101f>
0x8049ace:   66 c7 85 1c ff ff ff ff ff      	mov word ptr [ebp - 0xe4], 0xffff
0x8049ad7:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x8049ae1:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049ae8:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x8049af2:   66 c7 85 12 ff ff ff 00 00      	mov word ptr [ebp - 0xee], 0
0x8049afb:   c7 85 0c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffffc
0x8049b05:   c6 85 0b ff ff ff f9            	mov byte ptr [ebp - 0xf5], 0xf9
0x8049b0c:   66 c7 85 08 ff ff ff 08 00      	mov word ptr [ebp - 0xf8], 8
0x8049b15:   c7 45 84 6b 3e 28 72            	mov dword ptr [ebp - 0x7c], 0x72283e6b
0x8049b1c:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049b22:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049b25:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x8049b2c:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049b33:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049b36:   0f b6 ca                        	movzx ecx, dl
0x8049b39:   0f b7 95 76 ff ff ff            	movzx edx, word ptr [ebp - 0x8a]
0x8049b40:   89 d3                           	mov ebx, edx
0x8049b42:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x8049b45:   09 da                           	or edx, ebx
0x8049b47:   0f b6 d2                        	movzx edx, dl
0x8049b4a:   0f af ca                        	imul ecx, edx
0x8049b4d:   0f bf 95 1c ff ff ff            	movsx edx, word ptr [ebp - 0xe4]
0x8049b54:   39 d1                           	cmp ecx, edx
0x8049b56:   0f 9f c2                        	setg dl
0x8049b59:   0f b6 d2                        	movzx edx, dl
0x8049b5c:   0b 95 6c ff ff ff               	or edx, dword ptr [ebp - 0x94]
0x8049b62:   89 d7                           	mov edi, edx
0x8049b64:   0b bd 70 ff ff ff               	or edi, dword ptr [ebp - 0x90]
0x8049b6a:   ba 00 00 00 00                  	mov edx, 0
0x8049b6f:   f7 f7                           	div edi
0x8049b71:   85 c0                           	test eax, eax
0x8049b73:   0f 84 16 06 00 00               	je 0x804a18f <func_1+0xa17>
0x8049b79:   c6 85 07 ff ff ff c7            	mov byte ptr [ebp - 0xf9], 0xc7
0x8049b80:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x8049b87:   66 c7 85 04 ff ff ff fc ff      	mov word ptr [ebp - 0xfc], 0xfffc
0x8049b90:   c7 85 00 ff ff ff 76 7d 93 a0   	mov dword ptr [ebp - 0x100], 0xa0937d76
0x8049b9a:   c7 85 7c ff ff ff e0 8d 43 81   	mov dword ptr [ebp - 0x84], 0x81438de0
0x8049ba4:   c7 85 fc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x104], 1
0x8049bae:   c7 85 f8 fe ff ff f0 ad f6 6f   	mov dword ptr [ebp - 0x108], 0x6ff6adf0
0x8049bb8:   66 c7 85 f6 fe ff ff 00 00      	mov word ptr [ebp - 0x10a], 0
0x8049bc1:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x8049bc9:   0f 84 8a 02 00 00               	je 0x8049e59 <func_1+0x6e1>
0x8049bcf:   c7 85 f0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x110], 0xffffffff
0x8049bd9:   66 c7 85 ee fe ff ff ff ff      	mov word ptr [ebp - 0x112], 0xffff
0x8049be2:   c7 85 e8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x118], 1
0x8049bec:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049bf3:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049bf9:   0f 95 c0                        	setne al
0x8049bfc:   0f b6 c0                        	movzx eax, al
0x8049bff:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x8049c02:   0f b6 fa                        	movzx edi, dl
0x8049c05:   99                              	cdq 
0x8049c06:   f7 ff                           	idiv edi
0x8049c08:   83 f8 01                        	cmp eax, 1
0x8049c0b:   0f 95 c0                        	setne al
0x8049c0e:   0f b6 c0                        	movzx eax, al
0x8049c11:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049c14:   0f 94 c0                        	sete al
0x8049c17:   0f b6 d0                        	movzx edx, al
0x8049c1a:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049c21:   39 c2                           	cmp edx, eax
0x8049c23:   0f 9c c0                        	setl al
0x8049c26:   0f b6 c0                        	movzx eax, al
0x8049c29:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049c2c:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049c2f:   0f b6 d0                        	movzx edx, al
0x8049c32:   0f b6 85 07 ff ff ff            	movzx eax, byte ptr [ebp - 0xf9]
0x8049c39:   89 c1                           	mov ecx, eax
0x8049c3b:   d3 fa                           	sar edx, cl
0x8049c3d:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049c44:   39 c2                           	cmp edx, eax
0x8049c46:   0f 9c c0                        	setl al
0x8049c49:   0f b6 c0                        	movzx eax, al
0x8049c4c:   f7 d8                           	neg eax
0x8049c4e:   83 f0 01                        	xor eax, 1
0x8049c51:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049c57:   0f 94 c0                        	sete al
0x8049c5a:   0f b6 c0                        	movzx eax, al
0x8049c5d:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049c60:   0f 9d c0                        	setge al
0x8049c63:   0f b6 c0                        	movzx eax, al
0x8049c66:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049c69:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049c6d:   74 7c                           	je 0x8049ceb <func_1+0x573>
0x8049c6f:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c72:   23 85 6c ff ff ff               	and eax, dword ptr [ebp - 0x94]
0x8049c78:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049c7b:   83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x8049c7f:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049c86:   8b 95 70 ff ff ff               	mov edx, dword ptr [ebp - 0x90]
0x8049c8c:   0f b7 d2                        	movzx edx, dx
0x8049c8f:   f7 da                           	neg edx
0x8049c91:   39 d0                           	cmp eax, edx
0x8049c93:   0f 9d c0                        	setge al
0x8049c96:   0f b6 c0                        	movzx eax, al
0x8049c99:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049c9c:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c9f:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049ca2:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049ca6:   75 17                           	jne 0x8049cbf <func_1+0x547>
0x8049ca8:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049cae:   0f be c0                        	movsx eax, al
0x8049cb1:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x8049cb6:   89 c1                           	mov ecx, eax
0x8049cb8:   d3 fa                           	sar edx, cl
0x8049cba:   89 d0                           	mov eax, edx
0x8049cbc:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049cbf:   b8 01 00 00 00                  	mov eax, 1
0x8049cc4:   3d 95 c3 57 4a                  	cmp eax, 0x4a57c395
0x8049cc9:   0f 94 c0                        	sete al
0x8049ccc:   0f b6 c0                        	movzx eax, al
0x8049ccf:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049cd2:   0f bf 95 76 ff ff ff            	movsx edx, word ptr [ebp - 0x8a]
0x8049cd9:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049cdc:   21 d0                           	and eax, edx
0x8049cde:   25 35 7c 4f c3                  	and eax, 0xc34f7c35
0x8049ce3:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049ce6:   e9 aa 00 00 00                  	jmp 0x8049d95 <func_1+0x61d>
0x8049ceb:   c7 85 e4 fe ff ff d1 ed 63 f5   	mov dword ptr [ebp - 0x11c], 0xf563edd1
0x8049cf5:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049cf9:   0f 94 c0                        	sete al
0x8049cfc:   0f b6 d0                        	movzx edx, al
0x8049cff:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049d05:   0f b6 c8                        	movzx ecx, al
0x8049d08:   83 bd e4 fe ff ff 00            	cmp dword ptr [ebp - 0x11c], 0
0x8049d0f:   7e 06                           	jle 0x8049d17 <func_1+0x59f>
0x8049d11:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049d15:   74 07                           	je 0x8049d1e <func_1+0x5a6>
0x8049d17:   b8 01 00 00 00                  	mov eax, 1
0x8049d1c:   eb 05                           	jmp 0x8049d23 <func_1+0x5ab>
0x8049d1e:   b8 00 00 00 00                  	mov eax, 0
0x8049d23:   88 85 90 fe ff ff               	mov byte ptr [ebp - 0x170], al
0x8049d29:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049d30:   89 c3                           	mov ebx, eax
0x8049d32:   0f b6 85 90 fe ff ff            	movzx eax, byte ptr [ebp - 0x170]
0x8049d39:   0f af c3                        	imul eax, ebx
0x8049d3c:   0f b6 c0                        	movzx eax, al
0x8049d3f:   01 c8                           	add eax, ecx
0x8049d41:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049d44:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049d47:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049d4a:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049d4d:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x8049d53:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x8049d59:   0f b6 c8                        	movzx ecx, al
0x8049d5c:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049d5f:   0f b6 c0                        	movzx eax, al
0x8049d62:   0f af c1                        	imul eax, ecx
0x8049d65:   31 d0                           	xor eax, edx
0x8049d67:   ba df e7 e5 15                  	mov edx, 0x15e5e7df
0x8049d6c:   29 c2                           	sub edx, eax
0x8049d6e:   89 d0                           	mov eax, edx
0x8049d70:   3d 48 70 37 6a                  	cmp eax, 0x6a377048
0x8049d75:   0f 97 c0                        	seta al
0x8049d78:   0f b6 c0                        	movzx eax, al
0x8049d7b:   66 21 45 da                     	and word ptr [ebp - 0x26], ax
0x8049d7f:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x8049d83:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049d86:   81 75 f0 8a 60 45 3a            	xor dword ptr [ebp - 0x10], 0x3a45608a
0x8049d8d:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049d91:   83 6d cc 01                     	sub dword ptr [ebp - 0x34], 1
0x8049d95:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049d98:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x8049d9c:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x8049da0:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049da4:   09 d0                           	or eax, edx
0x8049da6:   66 89 45 96                     	mov word ptr [ebp - 0x6a], ax
0x8049daa:   0f b7 55 96                     	movzx edx, word ptr [ebp - 0x6a]
0x8049dae:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049db5:   66 c1 f8 0b                     	sar ax, 0xb
0x8049db9:   0f bf d8                        	movsx ebx, ax
0x8049dbc:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049dbf:   0f be f0                        	movsx esi, al
0x8049dc2:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049dc8:   0f be c0                        	movsx eax, al
0x8049dcb:   89 c1                           	mov ecx, eax
0x8049dcd:   d3 e6                           	shl esi, cl
0x8049dcf:   89 f0                           	mov eax, esi
0x8049dd1:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049dd4:   0f 97 c0                        	seta al
0x8049dd7:   0f b6 f0                        	movzx esi, al
0x8049dda:   0f b7 85 1c ff ff ff            	movzx eax, word ptr [ebp - 0xe4]
0x8049de1:   0f b6 c0                        	movzx eax, al
0x8049de4:   89 c1                           	mov ecx, eax
0x8049de6:   d3 e6                           	shl esi, cl
0x8049de8:   89 f0                           	mov eax, esi
0x8049dea:   0b 45 cc                        	or eax, dword ptr [ebp - 0x34]
0x8049ded:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049df0:   0f 95 c0                        	setne al
0x8049df3:   0f b6 c0                        	movzx eax, al
0x8049df6:   39 c3                           	cmp ebx, eax
0x8049df8:   0f 9d c0                        	setge al
0x8049dfb:   0f b6 c0                        	movzx eax, al
0x8049dfe:   09 d0                           	or eax, edx
0x8049e00:   85 c0                           	test eax, eax
0x8049e02:   74 07                           	je 0x8049e0b <func_1+0x693>
0x8049e04:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x8049e0b:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049e0e:   83 f0 01                        	xor eax, 1
0x8049e11:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049e17:   0f 95 c0                        	setne al
0x8049e1a:   0f b6 d0                        	movzx edx, al
0x8049e1d:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e20:   0f b6 c0                        	movzx eax, al
0x8049e23:   0f af c2                        	imul eax, edx
0x8049e26:   85 c0                           	test eax, eax
0x8049e28:   75 07                           	jne 0x8049e31 <func_1+0x6b9>
0x8049e2a:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x8049e31:   66 c7 45 da 00 00               	mov word ptr [ebp - 0x26], 0
0x8049e37:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x8049e3d:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049e40:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e43:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e46:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x8049e4d:   66 c1 e8 0e                     	shr ax, 0xe
0x8049e51:   0f b7 c0                        	movzx eax, ax
0x8049e54:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049e57:   eb 5c                           	jmp 0x8049eb5 <func_1+0x73d>
0x8049e59:   66 c7 85 f4 fe ff ff 00 00      	mov word ptr [ebp - 0x10c], 0
0x8049e62:   0f bf 85 76 ff ff ff            	movsx eax, word ptr [ebp - 0x8a]
0x8049e69:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049e6c:   0f b7 85 f4 fe ff ff            	movzx eax, word ptr [ebp - 0x10c]
0x8049e73:   0f b7 d0                        	movzx edx, ax
0x8049e76:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x8049e7d:   01 d0                           	add eax, edx
0x8049e7f:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049e82:   0f 96 c0                        	setbe al
0x8049e85:   0f b6 c0                        	movzx eax, al
0x8049e88:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049e8b:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049e8e:   21 45 88                        	and dword ptr [ebp - 0x78], eax
0x8049e91:   66 83 45 be 01                  	add word ptr [ebp - 0x42], 1
0x8049e96:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e99:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049e9f:   83 bd 7c ff ff ff 00            	cmp dword ptr [ebp - 0x84], 0
0x8049ea6:   74 04                           	je 0x8049eac <func_1+0x734>
0x8049ea8:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049eac:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049eaf:   0f b7 c0                        	movzx eax, ax
0x8049eb2:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049eb5:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049eb8:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049ebb:   0f b6 85 37 ff ff ff            	movzx eax, byte ptr [ebp - 0xc9]
0x8049ec2:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x8049ec8:   0f 95 c0                        	setne al
0x8049ecb:   0f b6 c0                        	movzx eax, al
0x8049ece:   f7 d8                           	neg eax
0x8049ed0:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x8049ed6:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x8049edc:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x8049ee0:   c1 e2 02                        	shl edx, 2
0x8049ee3:   0f b7 d2                        	movzx edx, dx
0x8049ee6:   31 45 a0                        	xor dword ptr [ebp - 0x60], eax
0x8049ee9:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049eec:   0f b7 c0                        	movzx eax, ax
0x8049eef:   29 c2                           	sub edx, eax
0x8049ef1:   89 d0                           	mov eax, edx
0x8049ef3:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049ef6:   0f 85 bc 00 00 00               	jne 0x8049fb8 <func_1+0x840>
0x8049efc:   66 c7 85 da fe ff ff 37 24      	mov word ptr [ebp - 0x126], 0x2437
0x8049f05:   c7 85 d4 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x12c], 4
0x8049f0f:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049f15:   98                              	cwde 
0x8049f16:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x8049f19:   0f bf ca                        	movsx ecx, dx
0x8049f1c:   99                              	cdq 
0x8049f1d:   f7 f9                           	idiv ecx
0x8049f1f:   89 d0                           	mov eax, edx
0x8049f21:   0f b7 d0                        	movzx edx, ax
0x8049f24:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049f27:   0f b7 c0                        	movzx eax, ax
0x8049f2a:   89 c1                           	mov ecx, eax
0x8049f2c:   d3 e2                           	shl edx, cl
0x8049f2e:   89 d0                           	mov eax, edx
0x8049f30:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x8049f34:   0f b7 bd da fe ff ff            	movzx edi, word ptr [ebp - 0x126]
0x8049f3b:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x8049f3f:   ba 00 00 00 00                  	mov edx, 0
0x8049f44:   66 f7 f7                        	div di
0x8049f47:   89 c2                           	mov edx, eax
0x8049f49:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049f4c:   29 c2                           	sub edx, eax
0x8049f4e:   89 d0                           	mov eax, edx
0x8049f50:   8b 95 f8 fe ff ff               	mov edx, dword ptr [ebp - 0x108]
0x8049f56:   89 d1                           	mov ecx, edx
0x8049f58:   ba 00 00 00 00                  	mov edx, 0
0x8049f5d:   66 f7 f1                        	div cx
0x8049f60:   89 d0                           	mov eax, edx
0x8049f62:   66 85 c0                        	test ax, ax
0x8049f65:   75 08                           	jne 0x8049f6f <func_1+0x7f7>
0x8049f67:   66 83 bd da fe ff ff 00         	cmp word ptr [ebp - 0x126], 0
0x8049f6f:   b8 01 00 00 00                  	mov eax, 1
0x8049f74:   89 c2                           	mov edx, eax
0x8049f76:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049f7a:   21 d0                           	and eax, edx
0x8049f7c:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049f80:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049f84:   98                              	cwde 
0x8049f85:   0f b7 95 da fe ff ff            	movzx edx, word ptr [ebp - 0x126]
0x8049f8c:   66 0f be ca                     	movsx cx, dl
0x8049f90:   8b 95 18 ff ff ff               	mov edx, dword ptr [ebp - 0xe8]
0x8049f96:   66 0f be d2                     	movsx dx, dl
0x8049f9a:   01 ca                           	add edx, ecx
0x8049f9c:   0f bf fa                        	movsx edi, dx
0x8049f9f:   99                              	cdq 
0x8049fa0:   f7 ff                           	idiv edi
0x8049fa2:   3d ba 33 00 00                  	cmp eax, 0x33ba
0x8049fa7:   0f 94 c0                        	sete al
0x8049faa:   0f b6 c0                        	movzx eax, al
0x8049fad:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x8049fb3:   e9 b1 01 00 00                  	jmp 0x804a169 <func_1+0x9f1>
0x8049fb8:   66 c7 85 e2 fe ff ff ff ff      	mov word ptr [ebp - 0x11e], 0xffff
0x8049fc1:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x8049fc7:   0f bf c8                        	movsx ecx, ax
0x8049fca:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049fcd:   98                              	cwde 
0x8049fce:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x8049fd4:   0f bf da                        	movsx ebx, dx
0x8049fd7:   99                              	cdq 
0x8049fd8:   f7 fb                           	idiv ebx
0x8049fda:   89 55 a0                        	mov dword ptr [ebp - 0x60], edx
0x8049fdd:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049fe0:   c0 e8 02                        	shr al, 2
0x8049fe3:   0f b6 c0                        	movzx eax, al
0x8049fe6:   c1 e0 09                        	shl eax, 9
0x8049fe9:   89 c2                           	mov edx, eax
0x8049feb:   0f b7 85 f6 fe ff ff            	movzx eax, word ptr [ebp - 0x10a]
0x8049ff2:   21 d0                           	and eax, edx
0x8049ff4:   98                              	cwde 
0x8049ff5:   29 c1                           	sub ecx, eax
0x8049ff7:   89 c8                           	mov eax, ecx
0x8049ff9:   39 85 28 ff ff ff               	cmp dword ptr [ebp - 0xd8], eax
0x8049fff:   c6 85 e1 fe ff ff 01            	mov byte ptr [ebp - 0x11f], 1
0x804a006:   c7 85 dc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x124], 0
0x804a010:   b8 43 c9 37 40                  	mov eax, 0x4037c943
0x804a015:   ba 00 00 00 00                  	mov edx, 0
0x804a01a:   f7 75 dc                        	div dword ptr [ebp - 0x24]
0x804a01d:   89 d0                           	mov eax, edx
0x804a01f:   66 89 45 da                     	mov word ptr [ebp - 0x26], ax
0x804a023:   0f b7 45 da                     	movzx eax, word ptr [ebp - 0x26]
0x804a027:   66 c1 f8 06                     	sar ax, 6
0x804a02b:   98                              	cwde 
0x804a02c:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a02f:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a033:   0f 94 c0                        	sete al
0x804a036:   0f b6 c0                        	movzx eax, al
0x804a039:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804a03f:   0f b7 ca                        	movzx ecx, dx
0x804a042:   0f b6 95 e1 fe ff ff            	movzx edx, byte ptr [ebp - 0x11f]
0x804a049:   0f af d1                        	imul edx, ecx
0x804a04c:   81 fa 74 e8 ec 99               	cmp edx, 0x99ece874
0x804a052:   0f 96 c2                        	setbe dl
0x804a055:   0f b6 ca                        	movzx ecx, dl
0x804a058:   8b 95 7c ff ff ff               	mov edx, dword ptr [ebp - 0x84]
0x804a05e:   01 ca                           	add edx, ecx
0x804a060:   39 d0                           	cmp eax, edx
0x804a062:   0f 97 c0                        	seta al
0x804a065:   0f b6 c0                        	movzx eax, al
0x804a068:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a06b:   0f 94 c0                        	sete al
0x804a06e:   0f b6 c0                        	movzx eax, al
0x804a071:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a074:   c7 85 dc fe ff ff e0 69 07 d1   	mov dword ptr [ebp - 0x124], 0xd10769e0
0x804a07e:   c7 45 b8 b2 00 00 00            	mov dword ptr [ebp - 0x48], 0xb2
0x804a085:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a088:   0f be c0                        	movsx eax, al
0x804a08b:   ba b2 ff ff ff                  	mov edx, 0xffffffb2
0x804a090:   89 c1                           	mov ecx, eax
0x804a092:   d3 e2                           	shl edx, cl
0x804a094:   89 d0                           	mov eax, edx
0x804a096:   23 85 7c ff ff ff               	and eax, dword ptr [ebp - 0x84]
0x804a09c:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a09f:   8b 4d e0                        	mov ecx, dword ptr [ebp - 0x20]
0x804a0a2:   b8 b5 58 60 cc                  	mov eax, 0xcc6058b5
0x804a0a7:   99                              	cdq 
0x804a0a8:   f7 f9                           	idiv ecx
0x804a0aa:   89 d0                           	mov eax, edx
0x804a0ac:   0f bf 8d e2 fe ff ff            	movsx ecx, word ptr [ebp - 0x11e]
0x804a0b3:   99                              	cdq 
0x804a0b4:   f7 f9                           	idiv ecx
0x804a0b6:   89 d0                           	mov eax, edx
0x804a0b8:   85 c0                           	test eax, eax
0x804a0ba:   74 0d                           	je 0x804a0c9 <func_1+0x951>
0x804a0bc:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a0c0:   74 07                           	je 0x804a0c9 <func_1+0x951>
0x804a0c2:   b8 01 00 00 00                  	mov eax, 1
0x804a0c7:   eb 05                           	jmp 0x804a0ce <func_1+0x956>
0x804a0c9:   b8 00 00 00 00                  	mov eax, 0
0x804a0ce:   0f b7 d0                        	movzx edx, ax
0x804a0d1:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a0d7:   0f b7 c0                        	movzx eax, ax
0x804a0da:   89 c1                           	mov ecx, eax
0x804a0dc:   d3 fa                           	sar edx, cl
0x804a0de:   89 d0                           	mov eax, edx
0x804a0e0:   3d fa 00 00 00                  	cmp eax, 0xfa
0x804a0e5:   0f 96 c0                        	setbe al
0x804a0e8:   0f b6 c0                        	movzx eax, al
0x804a0eb:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804a0ee:   89 c2                           	mov edx, eax
0x804a0f0:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a0f3:   39 c2                           	cmp edx, eax
0x804a0f5:   0f 96 c0                        	setbe al
0x804a0f8:   0f b6 d0                        	movzx edx, al
0x804a0fb:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a101:   0f b6 c0                        	movzx eax, al
0x804a104:   29 c2                           	sub edx, eax
0x804a106:   89 d0                           	mov eax, edx
0x804a108:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a10b:   8b 4d c0                        	mov ecx, dword ptr [ebp - 0x40]
0x804a10e:   b8 93 92 5f ab                  	mov eax, 0xab5f9293
0x804a113:   ba 00 00 00 00                  	mov edx, 0
0x804a118:   f7 f1                           	div ecx
0x804a11a:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a11d:   09 d0                           	or eax, edx
0x804a11f:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a122:   81 7d d0 93 28 00 00            	cmp dword ptr [ebp - 0x30], 0x2893
0x804a129:   0f 94 c0                        	sete al
0x804a12c:   0f b6 c0                        	movzx eax, al
0x804a12f:   0f b7 95 e2 fe ff ff            	movzx edx, word ptr [ebp - 0x11e]
0x804a136:   0f b6 ca                        	movzx ecx, dl
0x804a139:   99                              	cdq 
0x804a13a:   f7 f9                           	idiv ecx
0x804a13c:   89 d0                           	mov eax, edx
0x804a13e:   89 c7                           	mov edi, eax
0x804a140:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a146:   ba 00 00 00 00                  	mov edx, 0
0x804a14b:   f7 f7                           	div edi
0x804a14d:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a150:   81 bd 6c ff ff ff c1 35 da 9c   	cmp dword ptr [ebp - 0x94], 0x9cda35c1
0x804a15a:   0f 94 c0                        	sete al
0x804a15d:   0f b6 c0                        	movzx eax, al
0x804a160:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a163:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a166:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a169:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a16c:   83 f0 01                        	xor eax, 1
0x804a16f:   89 c2                           	mov edx, eax
0x804a171:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a174:   21 d0                           	and eax, edx
0x804a176:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a179:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a17c:   f7 d8                           	neg eax
0x804a17e:   98                              	cwde 
0x804a17f:   ba 06 00 00 00                  	mov edx, 6
0x804a184:   89 c1                           	mov ecx, eax
0x804a186:   d3 fa                           	sar edx, cl
0x804a188:   89 d0                           	mov eax, edx
0x804a18a:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a18d:   eb 07                           	jmp 0x804a196 <func_1+0xa1e>
0x804a18f:   c7 45 8c fb ff ff ff            	mov dword ptr [ebp - 0x74], 0xfffffffb
0x804a196:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a199:   8d 50 01                        	lea edx, [eax + 1]
0x804a19c:   89 55 cc                        	mov dword ptr [ebp - 0x34], edx
0x804a19f:   89 c2                           	mov edx, eax
0x804a1a1:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a1a4:   66 25 a0 00                     	and ax, 0xa0
0x804a1a8:   31 d0                           	xor eax, edx
0x804a1aa:   0f b7 d0                        	movzx edx, ax
0x804a1ad:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804a1b1:   29 c2                           	sub edx, eax
0x804a1b3:   89 d0                           	mov eax, edx
0x804a1b5:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a1b8:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a1bb:   0f bf c8                        	movsx ecx, ax
0x804a1be:   81 bd 6c ff ff ff 64 72 00 00   	cmp dword ptr [ebp - 0x94], 0x7264
0x804a1c8:   76 13                           	jbe 0x804a1dd <func_1+0xa65>
0x804a1ca:   b8 01 00 00 00                  	mov eax, 1
0x804a1cf:   bb 00 00 00 00                  	mov ebx, 0
0x804a1d4:   99                              	cdq 
0x804a1d5:   f7 fb                           	idiv ebx
0x804a1d7:   89 d0                           	mov eax, edx
0x804a1d9:   89 c2                           	mov edx, eax
0x804a1db:   eb 11                           	jmp 0x804a1ee <func_1+0xa76>
0x804a1dd:   b8 00 00 00 00                  	mov eax, 0
0x804a1e2:   bb 00 00 00 00                  	mov ebx, 0
0x804a1e7:   99                              	cdq 
0x804a1e8:   f7 fb                           	idiv ebx
0x804a1ea:   89 d0                           	mov eax, edx
0x804a1ec:   89 c2                           	mov edx, eax
0x804a1ee:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a1f2:   09 d0                           	or eax, edx
0x804a1f4:   0f b6 d0                        	movzx edx, al
0x804a1f7:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a1fa:   0f b6 c0                        	movzx eax, al
0x804a1fd:   29 c2                           	sub edx, eax
0x804a1ff:   89 d0                           	mov eax, edx
0x804a201:   0f bf f0                        	movsx esi, ax
0x804a204:   89 c8                           	mov eax, ecx
0x804a206:   99                              	cdq 
0x804a207:   f7 fe                           	idiv esi
0x804a209:   98                              	cwde 
0x804a20a:   c1 e0 0f                        	shl eax, 0xf
0x804a20d:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a213:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a219:   0f b7 d0                        	movzx edx, ax
0x804a21c:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a222:   0f b7 c0                        	movzx eax, ax
0x804a225:   0f af c2                        	imul eax, edx
0x804a228:   25 97 bf 1a 20                  	and eax, 0x201abf97
0x804a22d:   85 c0                           	test eax, eax
0x804a22f:   74 10                           	je 0x804a241 <func_1+0xac9>
0x804a231:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x804a238:   74 07                           	je 0x804a241 <func_1+0xac9>
0x804a23a:   b8 01 00 00 00                  	mov eax, 1
0x804a23f:   eb 05                           	jmp 0x804a246 <func_1+0xace>
0x804a241:   b8 00 00 00 00                  	mov eax, 0
0x804a246:   3b 45 c4                        	cmp eax, dword ptr [ebp - 0x3c]
0x804a249:   0f 9e c0                        	setle al
0x804a24c:   0f b6 d0                        	movzx edx, al
0x804a24f:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a255:   0f b7 c0                        	movzx eax, ax
0x804a258:   01 d0                           	add eax, edx
0x804a25a:   85 c0                           	test eax, eax
0x804a25c:   0f 84 95 03 00 00               	je 0x804a5f7 <func_1+0xe7f>
0x804a262:   c6 85 c2 fe ff ff 95            	mov byte ptr [ebp - 0x13e], 0x95
0x804a269:   c7 85 78 ff ff ff 4a 2a 7e 95   	mov dword ptr [ebp - 0x88], 0x957e2a4a
0x804a273:   c7 85 bc fe ff ff 80 a2 98 6a   	mov dword ptr [ebp - 0x144], 0x6a98a280
0x804a27d:   0f bf 85 26 ff ff ff            	movsx eax, word ptr [ebp - 0xda]
0x804a284:   23 45 8c                        	and eax, dword ptr [ebp - 0x74]
0x804a287:   8b 4d f0                        	mov ecx, dword ptr [ebp - 0x10]
0x804a28a:   ba 00 00 00 00                  	mov edx, 0
0x804a28f:   f7 f1                           	div ecx
0x804a291:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a294:   09 d0                           	or eax, edx
0x804a296:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a299:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a29d:   0f 84 c9 02 00 00               	je 0x804a56c <func_1+0xdf4>
0x804a2a3:   c6 85 b7 fe ff ff 9d            	mov byte ptr [ebp - 0x149], 0x9d
0x804a2aa:   66 c7 85 b4 fe ff ff 00 00      	mov word ptr [ebp - 0x14c], 0
0x804a2b3:   c6 85 b3 fe ff ff 01            	mov byte ptr [ebp - 0x14d], 1
0x804a2ba:   c7 85 ac fe ff ff 6f fd f3 84   	mov dword ptr [ebp - 0x154], 0x84f3fd6f
0x804a2c4:   66 c7 85 12 ff ff ff ff ff      	mov word ptr [ebp - 0xee], 0xffff
0x804a2cd:   c6 85 c2 fe ff ff ff            	mov byte ptr [ebp - 0x13e], 0xff
0x804a2d4:   0f b6 85 c2 fe ff ff            	movzx eax, byte ptr [ebp - 0x13e]
0x804a2db:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a2df:   75 09                           	jne 0x804a2ea <func_1+0xb72>
0x804a2e1:   80 bd b7 fe ff ff 00            	cmp byte ptr [ebp - 0x149], 0
0x804a2e8:   74 07                           	je 0x804a2f1 <func_1+0xb79>
0x804a2ea:   ba 01 00 00 00                  	mov edx, 1
0x804a2ef:   eb 05                           	jmp 0x804a2f6 <func_1+0xb7e>
0x804a2f1:   ba 00 00 00 00                  	mov edx, 0
0x804a2f6:   39 c2                           	cmp edx, eax
0x804a2f8:   0f 9e c0                        	setle al
0x804a2fb:   0f b6 c0                        	movzx eax, al
0x804a2fe:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a301:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a305:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a308:   75 07                           	jne 0x804a311 <func_1+0xb99>
0x804a30a:   ba 01 00 00 00                  	mov edx, 1
0x804a30f:   eb 05                           	jmp 0x804a316 <func_1+0xb9e>
0x804a311:   ba 00 00 00 00                  	mov edx, 0
0x804a316:   0f be 85 b7 fe ff ff            	movsx eax, byte ptr [ebp - 0x149]
0x804a31d:   09 d0                           	or eax, edx
0x804a31f:   89 c2                           	mov edx, eax
0x804a321:   0f b7 85 b4 fe ff ff            	movzx eax, word ptr [ebp - 0x14c]
0x804a328:   09 d0                           	or eax, edx
0x804a32a:   66 89 85 b4 fe ff ff            	mov word ptr [ebp - 0x14c], ax
0x804a331:   66 c7 45 be 01 00               	mov word ptr [ebp - 0x42], 1
0x804a337:   83 bd 68 ff ff ff 00            	cmp dword ptr [ebp - 0x98], 0
0x804a33e:   0f 9e c0                        	setle al
0x804a341:   0f b6 d0                        	movzx edx, al
0x804a344:   0f b6 85 c2 fe ff ff            	movzx eax, byte ptr [ebp - 0x13e]
0x804a34b:   39 c2                           	cmp edx, eax
0x804a34d:   0f 9e c0                        	setle al
0x804a350:   0f b6 c0                        	movzx eax, al
0x804a353:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a357:   0f b7 85 b4 fe ff ff            	movzx eax, word ptr [ebp - 0x14c]
0x804a35e:   98                              	cwde 
0x804a35f:   31 45 c4                        	xor dword ptr [ebp - 0x3c], eax
0x804a362:   c7 45 88 ff ff 00 00            	mov dword ptr [ebp - 0x78], 0xffff
0x804a369:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a36c:   f7 d0                           	not eax
0x804a36e:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x804a374:   0f 95 c0                        	setne al
0x804a377:   0f b6 d0                        	movzx edx, al
0x804a37a:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a37d:   0f b7 c0                        	movzx eax, ax
0x804a380:   0f af d0                        	imul edx, eax
0x804a383:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804a387:   39 c2                           	cmp edx, eax
0x804a389:   0f 9f c0                        	setg al
0x804a38c:   0f b6 c0                        	movzx eax, al
0x804a38f:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a392:   75 0a                           	jne 0x804a39e <func_1+0xc26>
0x804a394:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x804a39c:   74 07                           	je 0x804a3a5 <func_1+0xc2d>
0x804a39e:   b8 01 00 00 00                  	mov eax, 1
0x804a3a3:   eb 05                           	jmp 0x804a3aa <func_1+0xc32>
0x804a3a5:   b8 00 00 00 00                  	mov eax, 0
0x804a3aa:   23 85 14 ff ff ff               	and eax, dword ptr [ebp - 0xec]
0x804a3b0:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a3b3:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804a3b7:   0f be c0                        	movsx eax, al
0x804a3ba:   8b 95 14 ff ff ff               	mov edx, dword ptr [ebp - 0xec]
0x804a3c0:   0f be ca                        	movsx ecx, dl
0x804a3c3:   99                              	cdq 
0x804a3c4:   f7 f9                           	idiv ecx
0x804a3c6:   89 d0                           	mov eax, edx
0x804a3c8:   85 c0                           	test eax, eax
0x804a3ca:   74 79                           	je 0x804a445 <func_1+0xccd>
0x804a3cc:   c7 85 a0 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x160], 8
0x804a3d6:   66 c7 45 be 32 33               	mov word ptr [ebp - 0x42], 0x3332
0x804a3dc:   66 0f be 95 b7 fe ff ff         	movsx dx, byte ptr [ebp - 0x149]
0x804a3e4:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x804a3ea:   0f b7 d8                        	movzx ebx, ax
0x804a3ed:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a3f0:   89 c1                           	mov ecx, eax
0x804a3f2:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a3f5:   09 c8                           	or eax, ecx
0x804a3f7:   66 0f be c8                     	movsx cx, al
0x804a3fb:   0f b7 85 b4 fe ff ff            	movzx eax, word ptr [ebp - 0x14c]
0x804a402:   66 98                           	cbw 
0x804a404:   0f af c1                        	imul eax, ecx
0x804a407:   0f b7 c0                        	movzx eax, ax
0x804a40a:   89 c1                           	mov ecx, eax
0x804a40c:   d3 fb                           	sar ebx, cl
0x804a40e:   89 d8                           	mov eax, ebx
0x804a410:   29 c2                           	sub edx, eax
0x804a412:   89 d0                           	mov eax, edx
0x804a414:   0f bf f8                        	movsx edi, ax
0x804a417:   b8 70 4c 00 00                  	mov eax, 0x4c70
0x804a41c:   99                              	cdq 
0x804a41d:   f7 ff                           	idiv edi
0x804a41f:   0f b6 d0                        	movzx edx, al
0x804a422:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a425:   0f b6 c0                        	movzx eax, al
0x804a428:   89 c1                           	mov ecx, eax
0x804a42a:   d3 fa                           	sar edx, cl
0x804a42c:   89 d0                           	mov eax, edx
0x804a42e:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a431:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a437:   0f be c0                        	movsx eax, al
0x804a43a:   6b c0 71                        	imul eax, eax, 0x71
0x804a43d:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a440:   e9 4a 01 00 00                  	jmp 0x804a58f <func_1+0xe17>
0x804a445:   66 c7 85 aa fe ff ff ff ff      	mov word ptr [ebp - 0x156], 0xffff
0x804a44e:   c7 85 a4 fe ff ff 06 45 13 81   	mov dword ptr [ebp - 0x15c], 0x81134506
0x804a458:   66 83 bd aa fe ff ff 00         	cmp word ptr [ebp - 0x156], 0
0x804a460:   75 31                           	jne 0x804a493 <func_1+0xd1b>
0x804a462:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a465:   98                              	cwde 
0x804a466:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x804a469:   0f bf f2                        	movsx esi, dx
0x804a46c:   99                              	cdq 
0x804a46d:   f7 fe                           	idiv esi
0x804a46f:   83 f8 01                        	cmp eax, 1
0x804a472:   0f 9f c0                        	setg al
0x804a475:   0f b6 d0                        	movzx edx, al
0x804a478:   0f b7 85 b4 fe ff ff            	movzx eax, word ptr [ebp - 0x14c]
0x804a47f:   0f b7 c0                        	movzx eax, ax
0x804a482:   29 c2                           	sub edx, eax
0x804a484:   89 d0                           	mov eax, edx
0x804a486:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x804a489:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a48c:   b8 00 00 00 00                  	mov eax, 0
0x804a491:   eb 05                           	jmp 0x804a498 <func_1+0xd20>
0x804a493:   b8 01 00 00 00                  	mov eax, 1
0x804a498:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a49b:   0f 94 c0                        	sete al
0x804a49e:   0f b6 c0                        	movzx eax, al
0x804a4a1:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a4a4:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a4a7:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804a4ab:   c7 45 90 09 00 00 00            	mov dword ptr [ebp - 0x70], 9
0x804a4b2:   66 83 7d 96 00                  	cmp word ptr [ebp - 0x6a], 0
0x804a4b7:   90                              	nop 
0x804a4b8:   80 a5 0b ff ff ff 7f            	and byte ptr [ebp - 0xf5], 0x7f
0x804a4bf:   0f b6 85 0b ff ff ff            	movzx eax, byte ptr [ebp - 0xf5]
0x804a4c6:   0f be c0                        	movsx eax, al
0x804a4c9:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x804a4cc:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a4d2:   0f b6 d0                        	movzx edx, al
0x804a4d5:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a4db:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x804a4de:   0f 96 c0                        	setbe al
0x804a4e1:   0f b6 c0                        	movzx eax, al
0x804a4e4:   89 c1                           	mov ecx, eax
0x804a4e6:   d3 fa                           	sar edx, cl
0x804a4e8:   89 d0                           	mov eax, edx
0x804a4ea:   66 21 45 b2                     	and word ptr [ebp - 0x4e], ax
0x804a4ee:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a4f2:   66 0b 45 ca                     	or ax, word ptr [ebp - 0x36]
0x804a4f6:   f7 d8                           	neg eax
0x804a4f8:   66 89 45 ca                     	mov word ptr [ebp - 0x36], ax
0x804a4fc:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a500:   98                              	cwde 
0x804a501:   21 85 a4 fe ff ff               	and dword ptr [ebp - 0x15c], eax
0x804a507:   0f bf 85 1c ff ff ff            	movsx eax, word ptr [ebp - 0xe4]
0x804a50e:   39 85 a4 fe ff ff               	cmp dword ptr [ebp - 0x15c], eax
0x804a514:   0f 94 c0                        	sete al
0x804a517:   0f b6 c0                        	movzx eax, al
0x804a51a:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a51d:   0f b6 85 c2 fe ff ff            	movzx eax, byte ptr [ebp - 0x13e]
0x804a524:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x804a52a:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a530:   89 c2                           	mov edx, eax
0x804a532:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a536:   66 3b 85 aa fe ff ff            	cmp ax, word ptr [ebp - 0x156]
0x804a53d:   76 11                           	jbe 0x804a550 <func_1+0xdd8>
0x804a53f:   66 83 bd 5e ff ff ff 00         	cmp word ptr [ebp - 0xa2], 0
0x804a547:   74 07                           	je 0x804a550 <func_1+0xdd8>
0x804a549:   b8 01 00 00 00                  	mov eax, 1
0x804a54e:   eb 05                           	jmp 0x804a555 <func_1+0xddd>
0x804a550:   b8 00 00 00 00                  	mov eax, 0
0x804a555:   21 d0                           	and eax, edx
0x804a557:   0f bf d0                        	movsx edx, ax
0x804a55a:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a55d:   98                              	cwde 
0x804a55e:   89 c1                           	mov ecx, eax
0x804a560:   d3 e2                           	shl edx, cl
0x804a562:   89 d0                           	mov eax, edx
0x804a564:   31 85 ac fe ff ff               	xor dword ptr [ebp - 0x154], eax
0x804a56a:   eb 23                           	jmp 0x804a58f <func_1+0xe17>
0x804a56c:   c7 85 b8 fe ff ff d0 e9 32 2f   	mov dword ptr [ebp - 0x148], 0x2f32e9d0
0x804a576:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a579:   0f be d0                        	movsx edx, al
0x804a57c:   89 d0                           	mov eax, edx
0x804a57e:   01 c0                           	add eax, eax
0x804a580:   01 d0                           	add eax, edx
0x804a582:   c1 e0 05                        	shl eax, 5
0x804a585:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a588:   83 ad b8 fe ff ff 01            	sub dword ptr [ebp - 0x148], 1
0x804a58f:   c6 45 b1 01                     	mov byte ptr [ebp - 0x4f], 1
0x804a593:   66 83 bd 76 ff ff ff 00         	cmp word ptr [ebp - 0x8a], 0
0x804a59b:   75 0e                           	jne 0x804a5ab <func_1+0xe33>
0x804a59d:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x804a5a1:   8d 50 ff                        	lea edx, [eax - 1]
0x804a5a4:   88 55 b1                        	mov byte ptr [ebp - 0x4f], dl
0x804a5a7:   84 c0                           	test al, al
0x804a5a9:   74 07                           	je 0x804a5b2 <func_1+0xe3a>
0x804a5ab:   b8 01 00 00 00                  	mov eax, 1
0x804a5b0:   eb 05                           	jmp 0x804a5b7 <func_1+0xe3f>
0x804a5b2:   b8 00 00 00 00                  	mov eax, 0
0x804a5b7:   0f b6 d0                        	movzx edx, al
0x804a5ba:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a5bd:   0f be d8                        	movsx ebx, al
0x804a5c0:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a5c3:   35 81 b9 29 22                  	xor eax, 0x2229b981
0x804a5c8:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a5cb:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a5ce:   0f be c0                        	movsx eax, al
0x804a5d1:   89 c1                           	mov ecx, eax
0x804a5d3:   d3 fb                           	sar ebx, cl
0x804a5d5:   89 d8                           	mov eax, ebx
0x804a5d7:   0f b6 c0                        	movzx eax, al
0x804a5da:   01 d0                           	add eax, edx
0x804a5dc:   85 c0                           	test eax, eax
0x804a5de:   c7 45 90 82 26 ea 9b            	mov dword ptr [ebp - 0x70], 0x9bea2682
0x804a5e5:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a5ec:   0f 84 a5 01 00 00               	je 0x804a797 <func_1+0x101f>
0x804a5f2:   e9 c3 f2 ff ff                  	jmp 0x80498ba <func_1+0x142>
0x804a5f7:   c6 85 d3 fe ff ff 03            	mov byte ptr [ebp - 0x12d], 3
0x804a5fe:   c7 85 cc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x134], 1
0x804a608:   c6 85 cb fe ff ff 14            	mov byte ptr [ebp - 0x135], 0x14
0x804a60f:   c6 85 ca fe ff ff 7c            	mov byte ptr [ebp - 0x136], 0x7c
0x804a616:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a619:   88 85 d3 fe ff ff               	mov byte ptr [ebp - 0x12d], al
0x804a61f:   b8 0a f5 ff ff                  	mov eax, 0xfffff50a
0x804a624:   ba 00 00 00 00                  	mov edx, 0
0x804a629:   66 f7 b5 5e ff ff ff            	div word ptr [ebp - 0xa2]
0x804a630:   0f b6 85 cb fe ff ff            	movzx eax, byte ptr [ebp - 0x135]
0x804a637:   66 39 c2                        	cmp dx, ax
0x804a63a:   0f 94 c0                        	sete al
0x804a63d:   0f b6 d0                        	movzx edx, al
0x804a640:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a646:   01 d0                           	add eax, edx
0x804a648:   ba 00 00 00 00                  	mov edx, 0
0x804a64d:   f7 75 d0                        	div dword ptr [ebp - 0x30]
0x804a650:   30 45 b1                        	xor byte ptr [ebp - 0x4f], al
0x804a653:   80 7d b1 06                     	cmp byte ptr [ebp - 0x4f], 6
0x804a657:   0f 97 c0                        	seta al
0x804a65a:   0f b6 d0                        	movzx edx, al
0x804a65d:   0f b7 85 1e ff ff ff            	movzx eax, word ptr [ebp - 0xe2]
0x804a664:   39 c2                           	cmp edx, eax
0x804a666:   7d 06                           	jge 0x804a66e <func_1+0xef6>
0x804a668:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a66c:   74 07                           	je 0x804a675 <func_1+0xefd>
0x804a66e:   b8 01 00 00 00                  	mov eax, 1
0x804a673:   eb 05                           	jmp 0x804a67a <func_1+0xf02>
0x804a675:   b8 00 00 00 00                  	mov eax, 0
0x804a67a:   09 45 d4                        	or dword ptr [ebp - 0x2c], eax
0x804a67d:   c7 45 cc 05 00 00 00            	mov dword ptr [ebp - 0x34], 5
0x804a684:   e9 04 01 00 00                  	jmp 0x804a78d <func_1+0x1015>
0x804a689:   c7 85 c4 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x13c], 3
0x804a693:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a696:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a699:   c7 45 a4 14 00 00 00            	mov dword ptr [ebp - 0x5c], 0x14
0x804a6a0:   e9 b5 00 00 00                  	jmp 0x804a75a <func_1+0xfe2>
0x804a6a5:   c6 85 c3 fe ff ff 00            	mov byte ptr [ebp - 0x13d], 0
0x804a6ac:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a6af:   0b 85 60 ff ff ff               	or eax, dword ptr [ebp - 0xa0]
0x804a6b5:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a6b8:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a6be:   0f b6 d0                        	movzx edx, al
0x804a6c1:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a6c4:   0f b6 c0                        	movzx eax, al
0x804a6c7:   01 d0                           	add eax, edx
0x804a6c9:   0f bf 8d 12 ff ff ff            	movsx ecx, word ptr [ebp - 0xee]
0x804a6d0:   ba 00 00 00 00                  	mov edx, 0
0x804a6d5:   f7 f1                           	div ecx
0x804a6d7:   89 d0                           	mov eax, edx
0x804a6d9:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a6dc:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a6df:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a6e2:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804a6e6:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a6e9:   0f 94 c0                        	sete al
0x804a6ec:   0f b6 c0                        	movzx eax, al
0x804a6ef:   31 45 88                        	xor dword ptr [ebp - 0x78], eax
0x804a6f2:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a6f5:   3b 45 c4                        	cmp eax, dword ptr [ebp - 0x3c]
0x804a6f8:   0f 95 c0                        	setne al
0x804a6fb:   0f b6 c0                        	movzx eax, al
0x804a6fe:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a704:   83 bd 28 ff ff ff 00            	cmp dword ptr [ebp - 0xd8], 0
0x804a70b:   0f 94 c0                        	sete al
0x804a70e:   0f b6 c0                        	movzx eax, al
0x804a711:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a714:   0f 97 c0                        	seta al
0x804a717:   0f b6 c0                        	movzx eax, al
0x804a71a:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a71d:   81 7d d0 46 8a e7 56            	cmp dword ptr [ebp - 0x30], 0x56e78a46
0x804a724:   0f 94 c0                        	sete al
0x804a727:   0f b6 c0                        	movzx eax, al
0x804a72a:   31 45 84                        	xor dword ptr [ebp - 0x7c], eax
0x804a72d:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a730:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a733:   0f 96 c0                        	setbe al
0x804a736:   0f b6 c0                        	movzx eax, al
0x804a739:   f7 d0                           	not eax
0x804a73b:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a73e:   77 07                           	ja 0x804a747 <func_1+0xfcf>
0x804a740:   66 83 7d da 00                  	cmp word ptr [ebp - 0x26], 0
0x804a745:   74 07                           	je 0x804a74e <func_1+0xfd6>
0x804a747:   b8 01 00 00 00                  	mov eax, 1
0x804a74c:   eb 05                           	jmp 0x804a753 <func_1+0xfdb>
0x804a74e:   b8 00 00 00 00                  	mov eax, 0
0x804a753:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a756:   83 6d a4 01                     	sub dword ptr [ebp - 0x5c], 1
0x804a75a:   83 7d a4 07                     	cmp dword ptr [ebp - 0x5c], 7
0x804a75e:   0f 8f 41 ff ff ff               	jg 0x804a6a5 <func_1+0xf2d>
0x804a764:   c7 45 d0 19 00 00 00            	mov dword ptr [ebp - 0x30], 0x19
0x804a76b:   eb 16                           	jmp 0x804a783 <func_1+0x100b>
0x804a76d:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x804a774:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a778:   c7 45 d4 01 00 00 00            	mov dword ptr [ebp - 0x2c], 1
0x804a77f:   83 45 d0 06                     	add dword ptr [ebp - 0x30], 6
0x804a783:   83 7d d0 24                     	cmp dword ptr [ebp - 0x30], 0x24
0x804a787:   76 e4                           	jbe 0x804a76d <func_1+0xff5>
0x804a789:   83 45 cc 02                     	add dword ptr [ebp - 0x34], 2
0x804a78d:   83 7d cc 19                     	cmp dword ptr [ebp - 0x34], 0x19
0x804a791:   0f 87 f2 fe ff ff               	ja 0x804a689 <func_1+0xf11>
0x804a797:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a79b:   0f 9f c0                        	setg al
0x804a79e:   0f b6 c0                        	movzx eax, al
0x804a7a1:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x804a7a7:   76 07                           	jbe 0x804a7b0 <func_1+0x1038>
0x804a7a9:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a7ae:   eb 05                           	jmp 0x804a7b5 <func_1+0x103d>
0x804a7b0:   b8 fe ff ff ff                  	mov eax, 0xfffffffe
0x804a7b5:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a7b8:   e9 62 01 00 00                  	jmp 0x804a91f <func_1+0x11a7>
0x804a7bd:   c7 85 50 ff ff ff 50 76 75 f9   	mov dword ptr [ebp - 0xb0], 0xf9757650
0x804a7c7:   c7 85 4c ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xb4], 8
0x804a7d1:   c7 85 48 ff ff ff 26 cf d5 17   	mov dword ptr [ebp - 0xb8], 0x17d5cf26
0x804a7db:   c7 85 44 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xbc], 1
0x804a7e5:   c7 85 40 ff ff ff c8 02 47 a7   	mov dword ptr [ebp - 0xc0], 0xa74702c8
0x804a7ef:   c7 85 3c ff ff ff e1 1d e1 63   	mov dword ptr [ebp - 0xc4], 0x63e11de1
0x804a7f9:   c7 85 38 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc8], 1
0x804a803:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a806:   8d 50 01                        	lea edx, [eax + 1]
0x804a809:   89 55 e8                        	mov dword ptr [ebp - 0x18], edx
0x804a80c:   8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0x804a812:   31 d0                           	xor eax, edx
0x804a814:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a81a:   8b 95 4c ff ff ff               	mov edx, dword ptr [ebp - 0xb4]
0x804a820:   0f b6 45 b1                     	movzx eax, byte ptr [ebp - 0x4f]
0x804a824:   23 85 60 ff ff ff               	and eax, dword ptr [ebp - 0xa0]
0x804a82a:   89 c1                           	mov ecx, eax
0x804a82c:   0f b7 85 5e ff ff ff            	movzx eax, word ptr [ebp - 0xa2]
0x804a833:   31 c8                           	xor eax, ecx
0x804a835:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x804a83b:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a841:   0f be d8                        	movsx ebx, al
0x804a844:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a84a:   0f be c0                        	movsx eax, al
0x804a84d:   89 c1                           	mov ecx, eax
0x804a84f:   d3 fb                           	sar ebx, cl
0x804a851:   89 d8                           	mov eax, ebx
0x804a853:   89 c3                           	mov ebx, eax
0x804a855:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a85c:   89 c1                           	mov ecx, eax
0x804a85e:   0f b6 c3                        	movzx eax, bl
0x804a861:   f6 f1                           	div cl
0x804a863:   0f b6 c0                        	movzx eax, al
0x804a866:   23 85 50 ff ff ff               	and eax, dword ptr [ebp - 0xb0]
0x804a86c:   89 c1                           	mov ecx, eax
0x804a86e:   89 d0                           	mov eax, edx
0x804a870:   ba 00 00 00 00                  	mov edx, 0
0x804a875:   f7 f1                           	div ecx
0x804a877:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a87a:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x804a881:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x804a884:   89 c2                           	mov edx, eax
0x804a886:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a88c:   31 d0                           	xor eax, edx
0x804a88e:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a894:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a897:   98                              	cwde 
0x804a898:   83 c0 01                        	add eax, 1
0x804a89b:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a89e:   0f 95 c0                        	setne al
0x804a8a1:   0f b6 c0                        	movzx eax, al
0x804a8a4:   89 c2                           	mov edx, eax
0x804a8a6:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a8ac:   0f af c2                        	imul eax, edx
0x804a8af:   0f b7 d0                        	movzx edx, ax
0x804a8b2:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804a8b5:   0f b7 c0                        	movzx eax, ax
0x804a8b8:   89 c1                           	mov ecx, eax
0x804a8ba:   d3 e2                           	shl edx, cl
0x804a8bc:   89 d0                           	mov eax, edx
0x804a8be:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x804a8c4:   0f 97 c0                        	seta al
0x804a8c7:   0f b6 c0                        	movzx eax, al
0x804a8ca:   09 85 3c ff ff ff               	or dword ptr [ebp - 0xc4], eax
0x804a8d0:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a8d3:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a8d9:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a8df:   88 45 ab                        	mov byte ptr [ebp - 0x55], al
0x804a8e2:   80 7d ab 00                     	cmp byte ptr [ebp - 0x55], 0
0x804a8e6:   74 0d                           	je 0x804a8f5 <func_1+0x117d>
0x804a8e8:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a8ec:   74 07                           	je 0x804a8f5 <func_1+0x117d>
0x804a8ee:   b8 01 00 00 00                  	mov eax, 1
0x804a8f3:   eb 05                           	jmp 0x804a8fa <func_1+0x1182>
0x804a8f5:   b8 00 00 00 00                  	mov eax, 0
0x804a8fa:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a8fd:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a903:   c1 e8 1f                        	shr eax, 0x1f
0x804a906:   83 e0 01                        	and eax, 1
0x804a909:   84 c0                           	test al, al
0x804a90b:   74 07                           	je 0x804a914 <func_1+0x119c>
0x804a90d:   b8 01 00 00 00                  	mov eax, 1
0x804a912:   eb 05                           	jmp 0x804a919 <func_1+0x11a1>
0x804a914:   b8 00 00 00 00                  	mov eax, 0
0x804a919:   31 85 40 ff ff ff               	xor dword ptr [ebp - 0xc0], eax
0x804a91f:   0f be 45 ab                     	movsx eax, byte ptr [ebp - 0x55]
0x804a923:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804a929:   0f b6 7d b1                     	movzx edi, byte ptr [ebp - 0x4f]
0x804a92d:   0f bf 75 b2                     	movsx esi, word ptr [ebp - 0x4e]
0x804a931:   0f b7 5d bc                     	movzx ebx, word ptr [ebp - 0x44]
0x804a935:   0f b7 4d be                     	movzx ecx, word ptr [ebp - 0x42]
0x804a939:   0f bf 55 ca                     	movsx edx, word ptr [ebp - 0x36]
0x804a93d:   0f bf 45 da                     	movsx eax, word ptr [ebp - 0x26]
0x804a941:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a947:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a94a:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a950:   57                              	push edi
0x804a951:   56                              	push esi
0x804a952:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a955:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a958:   53                              	push ebx
0x804a959:   51                              	push ecx
0x804a95a:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a960:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a963:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a966:   52                              	push edx
0x804a967:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a96a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a96d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a970:   50                              	push eax
0x804a971:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a974:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a977:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a97a:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a97d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a980:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a983:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a989:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a98f:   e8 92 ec ff ff                  	call 0x8049626 <set_var>
0x804a994:   83 c4 64                        	add esp, 0x64
0x804a997:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804a99b:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a99e:   5b                              	pop ebx
0x804a99f:   5e                              	pop esi
0x804a9a0:   5f                              	pop edi
0x804a9a1:   5d                              	pop ebp
0x804a9a2:   c3                              	ret 
; function: main at 0x804a9a3 -- 0x804ad3c
0x804a9a3:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a9a7:   83 e4 f0                        	and esp, 0xfffffff0
0x804a9aa:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a9ad:   55                              	push ebp
0x804a9ae:   89 e5                           	mov ebp, esp
0x804a9b0:   53                              	push ebx
0x804a9b1:   51                              	push ecx
0x804a9b2:   83 ec 10                        	sub esp, 0x10
0x804a9b5:   e8 d6 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a9ba:   81 c3 46 26 00 00               	add ebx, 0x2646
0x804a9c0:   89 c8                           	mov eax, ecx
0x804a9c2:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a9c9:   83 38 02                        	cmp dword ptr [eax], 2
0x804a9cc:   75 26                           	jne 0x804a9f4 <main+0x51>
0x804a9ce:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a9d1:   83 c0 04                        	add eax, 4
0x804a9d4:   8b 00                           	mov eax, dword ptr [eax]
0x804a9d6:   83 ec 08                        	sub esp, 8
0x804a9d9:   8d 93 20 de ff ff               	lea edx, [ebx - 0x21e0]
0x804a9df:   52                              	push edx
0x804a9e0:   50                              	push eax
0x804a9e1:   e8 1a d9 ff ff                  	call 0x8048300 <strcmp>
0x804a9e6:   83 c4 10                        	add esp, 0x10
0x804a9e9:   85 c0                           	test eax, eax
0x804a9eb:   75 07                           	jne 0x804a9f4 <main+0x51>
0x804a9ed:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a9f4:   e8 5d da ff ff                  	call 0x8048456 <platform_main_begin>
0x804a9f9:   e8 6d ea ff ff                  	call 0x804946b <crc32_gentab>
0x804a9fe:   e8 75 ed ff ff                  	call 0x8049778 <func_1>
0x804aa03:   b8 bf a1 ff ff                  	mov eax, 0xffffa1bf
0x804aa08:   98                              	cwde 
0x804aa09:   83 ec 04                        	sub esp, 4
0x804aa0c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa0f:   8d 93 22 de ff ff               	lea edx, [ebx - 0x21de]
0x804aa15:   52                              	push edx
0x804aa16:   50                              	push eax
0x804aa17:   e8 5b eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa1c:   83 c4 10                        	add esp, 0x10
0x804aa1f:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aa25:   83 ec 04                        	sub esp, 4
0x804aa28:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa2b:   8d 93 26 de ff ff               	lea edx, [ebx - 0x21da]
0x804aa31:   52                              	push edx
0x804aa32:   50                              	push eax
0x804aa33:   e8 3f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa38:   83 c4 10                        	add esp, 0x10
0x804aa3b:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aa41:   83 ec 04                        	sub esp, 4
0x804aa44:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa47:   8d 93 2b de ff ff               	lea edx, [ebx - 0x21d5]
0x804aa4d:   52                              	push edx
0x804aa4e:   50                              	push eax
0x804aa4f:   e8 23 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa54:   83 c4 10                        	add esp, 0x10
0x804aa57:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804aa5d:   89 c2                           	mov edx, eax
0x804aa5f:   83 ec 04                        	sub esp, 4
0x804aa62:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa65:   8d 83 30 de ff ff               	lea eax, [ebx - 0x21d0]
0x804aa6b:   50                              	push eax
0x804aa6c:   52                              	push edx
0x804aa6d:   e8 05 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa72:   83 c4 10                        	add esp, 0x10
0x804aa75:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aa7b:   83 ec 04                        	sub esp, 4
0x804aa7e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa81:   8d 93 35 de ff ff               	lea edx, [ebx - 0x21cb]
0x804aa87:   52                              	push edx
0x804aa88:   50                              	push eax
0x804aa89:   e8 e9 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8e:   83 c4 10                        	add esp, 0x10
0x804aa91:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aa97:   83 ec 04                        	sub esp, 4
0x804aa9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9d:   8d 93 3a de ff ff               	lea edx, [ebx - 0x21c6]
0x804aaa3:   52                              	push edx
0x804aaa4:   50                              	push eax
0x804aaa5:   e8 cd ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaaa:   83 c4 10                        	add esp, 0x10
0x804aaad:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804aab3:   83 ec 04                        	sub esp, 4
0x804aab6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aab9:   8d 93 3f de ff ff               	lea edx, [ebx - 0x21c1]
0x804aabf:   52                              	push edx
0x804aac0:   50                              	push eax
0x804aac1:   e8 b1 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac6:   83 c4 10                        	add esp, 0x10
0x804aac9:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804aacf:   83 ec 04                        	sub esp, 4
0x804aad2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad5:   8d 93 44 de ff ff               	lea edx, [ebx - 0x21bc]
0x804aadb:   52                              	push edx
0x804aadc:   50                              	push eax
0x804aadd:   e8 95 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae2:   83 c4 10                        	add esp, 0x10
0x804aae5:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aaeb:   83 ec 04                        	sub esp, 4
0x804aaee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf1:   8d 93 49 de ff ff               	lea edx, [ebx - 0x21b7]
0x804aaf7:   52                              	push edx
0x804aaf8:   50                              	push eax
0x804aaf9:   e8 79 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aafe:   83 c4 10                        	add esp, 0x10
0x804ab01:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804ab08:   98                              	cwde 
0x804ab09:   83 ec 04                        	sub esp, 4
0x804ab0c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab0f:   8d 93 4e de ff ff               	lea edx, [ebx - 0x21b2]
0x804ab15:   52                              	push edx
0x804ab16:   50                              	push eax
0x804ab17:   e8 5b ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab1c:   83 c4 10                        	add esp, 0x10
0x804ab1f:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ab25:   89 c2                           	mov edx, eax
0x804ab27:   83 ec 04                        	sub esp, 4
0x804ab2a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab2d:   8d 83 53 de ff ff               	lea eax, [ebx - 0x21ad]
0x804ab33:   50                              	push eax
0x804ab34:   52                              	push edx
0x804ab35:   e8 3d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab3a:   83 c4 10                        	add esp, 0x10
0x804ab3d:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ab43:   83 ec 04                        	sub esp, 4
0x804ab46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab49:   8d 93 58 de ff ff               	lea edx, [ebx - 0x21a8]
0x804ab4f:   52                              	push edx
0x804ab50:   50                              	push eax
0x804ab51:   e8 21 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab56:   83 c4 10                        	add esp, 0x10
0x804ab59:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ab5f:   83 ec 04                        	sub esp, 4
0x804ab62:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab65:   8d 93 5e de ff ff               	lea edx, [ebx - 0x21a2]
0x804ab6b:   52                              	push edx
0x804ab6c:   50                              	push eax
0x804ab6d:   e8 05 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab72:   83 c4 10                        	add esp, 0x10
0x804ab75:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804ab7c:   98                              	cwde 
0x804ab7d:   83 ec 04                        	sub esp, 4
0x804ab80:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab83:   8d 93 64 de ff ff               	lea edx, [ebx - 0x219c]
0x804ab89:   52                              	push edx
0x804ab8a:   50                              	push eax
0x804ab8b:   e8 e7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab90:   83 c4 10                        	add esp, 0x10
0x804ab93:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ab99:   89 c2                           	mov edx, eax
0x804ab9b:   83 ec 04                        	sub esp, 4
0x804ab9e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba1:   8d 83 6a de ff ff               	lea eax, [ebx - 0x2196]
0x804aba7:   50                              	push eax
0x804aba8:   52                              	push edx
0x804aba9:   e8 c9 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abae:   83 c4 10                        	add esp, 0x10
0x804abb1:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804abb7:   89 c2                           	mov edx, eax
0x804abb9:   83 ec 04                        	sub esp, 4
0x804abbc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abbf:   8d 83 70 de ff ff               	lea eax, [ebx - 0x2190]
0x804abc5:   50                              	push eax
0x804abc6:   52                              	push edx
0x804abc7:   e8 ab e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abcc:   83 c4 10                        	add esp, 0x10
0x804abcf:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804abd5:   89 c2                           	mov edx, eax
0x804abd7:   83 ec 04                        	sub esp, 4
0x804abda:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abdd:   8d 83 76 de ff ff               	lea eax, [ebx - 0x218a]
0x804abe3:   50                              	push eax
0x804abe4:   52                              	push edx
0x804abe5:   e8 8d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abea:   83 c4 10                        	add esp, 0x10
0x804abed:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804abf4:   0f b7 c0                        	movzx eax, ax
0x804abf7:   83 ec 04                        	sub esp, 4
0x804abfa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abfd:   8d 93 7c de ff ff               	lea edx, [ebx - 0x2184]
0x804ac03:   52                              	push edx
0x804ac04:   50                              	push eax
0x804ac05:   e8 6d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac0a:   83 c4 10                        	add esp, 0x10
0x804ac0d:   0f b7 83 62 00 00 00            	movzx eax, word ptr [ebx + 0x62]
0x804ac14:   0f b7 c0                        	movzx eax, ax
0x804ac17:   83 ec 04                        	sub esp, 4
0x804ac1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac1d:   8d 93 82 de ff ff               	lea edx, [ebx - 0x217e]
0x804ac23:   52                              	push edx
0x804ac24:   50                              	push eax
0x804ac25:   e8 4d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac2a:   83 c4 10                        	add esp, 0x10
0x804ac2d:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804ac33:   83 ec 04                        	sub esp, 4
0x804ac36:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac39:   8d 93 88 de ff ff               	lea edx, [ebx - 0x2178]
0x804ac3f:   52                              	push edx
0x804ac40:   50                              	push eax
0x804ac41:   e8 31 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac46:   83 c4 10                        	add esp, 0x10
0x804ac49:   ba 91 34 df c7                  	mov edx, 0xc7df3491
0x804ac4e:   83 ec 04                        	sub esp, 4
0x804ac51:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac54:   8d 83 8e de ff ff               	lea eax, [ebx - 0x2172]
0x804ac5a:   50                              	push eax
0x804ac5b:   52                              	push edx
0x804ac5c:   e8 16 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac61:   83 c4 10                        	add esp, 0x10
0x804ac64:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804ac6a:   83 ec 04                        	sub esp, 4
0x804ac6d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac70:   8d 93 94 de ff ff               	lea edx, [ebx - 0x216c]
0x804ac76:   52                              	push edx
0x804ac77:   50                              	push eax
0x804ac78:   e8 fa e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac7d:   83 c4 10                        	add esp, 0x10
0x804ac80:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804ac87:   98                              	cwde 
0x804ac88:   83 ec 04                        	sub esp, 4
0x804ac8b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac8e:   8d 93 9a de ff ff               	lea edx, [ebx - 0x2166]
0x804ac94:   52                              	push edx
0x804ac95:   50                              	push eax
0x804ac96:   e8 dc e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac9b:   83 c4 10                        	add esp, 0x10
0x804ac9e:   0f b6 83 ac 04 00 00            	movzx eax, byte ptr [ebx + 0x4ac]
0x804aca5:   0f b6 c0                        	movzx eax, al
0x804aca8:   83 ec 04                        	sub esp, 4
0x804acab:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acae:   8d 93 a0 de ff ff               	lea edx, [ebx - 0x2160]
0x804acb4:   52                              	push edx
0x804acb5:   50                              	push eax
0x804acb6:   e8 bc e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acbb:   83 c4 10                        	add esp, 0x10
0x804acbe:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804acc4:   83 ec 04                        	sub esp, 4
0x804acc7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acca:   8d 93 a6 de ff ff               	lea edx, [ebx - 0x215a]
0x804acd0:   52                              	push edx
0x804acd1:   50                              	push eax
0x804acd2:   e8 a0 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd7:   83 c4 10                        	add esp, 0x10
0x804acda:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804ace0:   83 ec 04                        	sub esp, 4
0x804ace3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ace6:   8d 93 ac de ff ff               	lea edx, [ebx - 0x2154]
0x804acec:   52                              	push edx
0x804aced:   50                              	push eax
0x804acee:   e8 84 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acf3:   83 c4 10                        	add esp, 0x10
0x804acf6:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804acfd:   0f be c0                        	movsx eax, al
0x804ad00:   83 ec 04                        	sub esp, 4
0x804ad03:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad06:   8d 93 b2 de ff ff               	lea edx, [ebx - 0x214e]
0x804ad0c:   52                              	push edx
0x804ad0d:   50                              	push eax
0x804ad0e:   e8 64 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad13:   83 c4 10                        	add esp, 0x10
0x804ad16:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ad1c:   f7 d0                           	not eax
0x804ad1e:   83 ec 08                        	sub esp, 8
0x804ad21:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad24:   50                              	push eax
0x804ad25:   e8 3c d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ad2a:   83 c4 10                        	add esp, 0x10
0x804ad2d:   b8 00 00 00 00                  	mov eax, 0
0x804ad32:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ad35:   59                              	pop ecx
0x804ad36:   5b                              	pop ebx
0x804ad37:   5d                              	pop ebp
0x804ad38:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ad3b:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ad3c -- 0x804ad40
0x804ad3c:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ad3f:   c3                              	ret 
; function: __libc_csu_init at 0x804ad40 -- 0x804ad9d
0x804ad40:   55                              	push ebp
0x804ad41:   57                              	push edi
0x804ad42:   56                              	push esi
0x804ad43:   53                              	push ebx
0x804ad44:   e8 47 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad49:   81 c3 b7 22 00 00               	add ebx, 0x22b7
0x804ad4f:   83 ec 0c                        	sub esp, 0xc
0x804ad52:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ad56:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ad5c:   e8 6b d5 ff ff                  	call 0x80482cc <_init>
0x804ad61:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ad67:   29 c6                           	sub esi, eax
0x804ad69:   c1 fe 02                        	sar esi, 2
0x804ad6c:   85 f6                           	test esi, esi
0x804ad6e:   74 25                           	je 0x804ad95 <__libc_csu_init+0x55>
0x804ad70:   31 ff                           	xor edi, edi
0x804ad72:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ad78:   83 ec 04                        	sub esp, 4
0x804ad7b:   55                              	push ebp
0x804ad7c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad80:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad84:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ad8b:   83 c7 01                        	add edi, 1
0x804ad8e:   83 c4 10                        	add esp, 0x10
0x804ad91:   39 fe                           	cmp esi, edi
0x804ad93:   75 e3                           	jne 0x804ad78 <__libc_csu_init+0x38>
0x804ad95:   83 c4 0c                        	add esp, 0xc
0x804ad98:   5b                              	pop ebx
0x804ad99:   5e                              	pop esi
0x804ad9a:   5f                              	pop edi
0x804ad9b:   5d                              	pop ebp
0x804ad9c:   c3                              	ret 
; data inside code section at 0x804ad9d -- 0x804ada0
0x804ad9d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804ada0 -- 0x804ada2
0x804ada0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804ada4 -- 0x804adb8
0x804ada4:   53                              	push ebx
0x804ada5:   83 ec 08                        	sub esp, 8
0x804ada8:   e8 e3 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804adad:   81 c3 53 22 00 00               	add ebx, 0x2253
0x804adb3:   83 c4 08                        	add esp, 8
0x804adb6:   5b                              	pop ebx
0x804adb7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 bc ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804adb8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804adc8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804add8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804ade8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804adf8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ae08:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ae18:   bf a1 00 00 91 34 df c7  31 00 67 5f 36 00 67 5f   |.....4..1.g_6.g_|
0x804ae28:   31 32 00 67 5f 32 31 00  67 5f 34 31 00 67 5f 34   |12.g_21.g_41.g_4|
0x804ae38:   35 00 67 5f 36 39 00 67  5f 38 31 00 67 5f 39 34   |5.g_69.g_81.g_94|
0x804ae48:   00 67 5f 39 35 00 67 5f  39 36 00 67 5f 39 38 00   |.g_95.g_96.g_98.|
0x804ae58:   67 5f 31 30 30 00 67 5f  31 30 34 00 67 5f 31 31   |g_100.g_104.g_11|
0x804ae68:   36 00 67 5f 31 36 30 00  67 5f 31 36 34 00 67 5f   |6.g_160.g_164.g_|
0x804ae78:   31 36 36 00 67 5f 31 36  38 00 67 5f 32 31 38 00   |166.g_168.g_218.|
0x804ae88:   67 5f 32 36 37 00 67 5f  32 37 35 00 67 5f 33 38   |g_267.g_275.g_38|
0x804ae98:   38 00 67 5f 33 38 39 00  67 5f 34 32 32 00 67 5f   |8.g_389.g_422.g_|
0x804aea8:   34 35 38 00 67 5f 34 37  35 00 67 5f 35 31 31 00   |458.g_475.g_511.|
0x804aeb8:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804aec8:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804aed8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804aee8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804aef8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804af08:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804af18:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804af20:   01 1b 03 3b b0 02 00 00  55 00 00 00 d0 d3 ff ff   |...;....U.......|
0x804af30:   e0 02 00 00 10 d4 ff ff  04 03 00 00 60 d4 ff ff   |............`...|
0x804af40:   cc 02 00 00 36 d5 ff ff  18 03 00 00 46 d5 ff ff   |....6.......F...|
0x804af50:   38 03 00 00 74 d5 ff ff  5c 03 00 00 92 d5 ff ff   |8...t...\.......|
0x804af60:   7c 03 00 00 ba d5 ff ff  9c 03 00 00 e4 d5 ff ff   ||...............|
0x804af70:   bc 03 00 00 0d d6 ff ff  dc 03 00 00 50 d6 ff ff   |............P...|
0x804af80:   fc 03 00 00 91 d6 ff ff  1c 04 00 00 e9 d6 ff ff   |................|
0x804af90:   40 04 00 00 3b d7 ff ff  64 04 00 00 78 d7 ff ff   |@...;...d...x...|
0x804afa0:   84 04 00 00 af d7 ff ff  a4 04 00 00 ce d7 ff ff   |................|
0x804afb0:   c4 04 00 00 f8 d7 ff ff  e4 04 00 00 24 d8 ff ff   |............$...|
0x804afc0:   04 05 00 00 4f d8 ff ff  24 05 00 00 98 d8 ff ff   |....O...$.......|
0x804afd0:   44 05 00 00 df d8 ff ff  64 05 00 00 39 d9 ff ff   |D.......d...9...|
0x804afe0:   88 05 00 00 8d d9 ff ff  ac 05 00 00 cc d9 ff ff   |................|
0x804aff0:   cc 05 00 00 05 da ff ff  ec 05 00 00 27 da ff ff   |............'...|
0x804b000:   0c 06 00 00 75 da ff ff  2c 06 00 00 b1 da ff ff   |....u...,.......|
0x804b010:   4c 06 00 00 3a db ff ff  6c 06 00 00 6c db ff ff   |L...:...l...l...|
0x804b020:   8c 06 00 00 9c db ff ff  ac 06 00 00 e1 db ff ff   |................|
0x804b030:   cc 06 00 00 20 dc ff ff  ec 06 00 00 52 dc ff ff   |.... .......R...|
0x804b040:   0c 07 00 00 7e dc ff ff  2c 07 00 00 9c dc ff ff   |....~...,.......|
0x804b050:   4c 07 00 00 c4 dc ff ff  6c 07 00 00 e9 dc ff ff   |L.......l.......|
0x804b060:   8c 07 00 00 0e dd ff ff  ac 07 00 00 45 dd ff ff   |............E...|
0x804b070:   cc 07 00 00 79 dd ff ff  ec 07 00 00 cb dd ff ff   |....y...........|
0x804b080:   10 08 00 00 17 de ff ff  34 08 00 00 4e de ff ff   |........4...N...|
0x804b090:   54 08 00 00 7f de ff ff  74 08 00 00 9e de ff ff   |T.......t.......|
0x804b0a0:   94 08 00 00 c8 de ff ff  b4 08 00 00 f0 de ff ff   |................|
0x804b0b0:   d4 08 00 00 19 df ff ff  f4 08 00 00 55 df ff ff   |............U...|
0x804b0c0:   14 09 00 00 8f df ff ff  34 09 00 00 e2 df ff ff   |........4.......|
0x804b0d0:   58 09 00 00 2f e0 ff ff  7c 09 00 00 67 e0 ff ff   |X.../...|...g...|
0x804b0e0:   9c 09 00 00 99 e0 ff ff  bc 09 00 00 ad e0 ff ff   |................|
0x804b0f0:   dc 09 00 00 c4 e0 ff ff  fc 09 00 00 d9 e0 ff ff   |................|
0x804b100:   1c 0a 00 00 ef e0 ff ff  3c 0a 00 00 16 e1 ff ff   |........<.......|
0x804b110:   5c 0a 00 00 3b e1 ff ff  7c 0a 00 00 7a e1 ff ff   |\...;...|...z...|
0x804b120:   9c 0a 00 00 b3 e1 ff ff  bc 0a 00 00 df e1 ff ff   |................|
0x804b130:   dc 0a 00 00 05 e2 ff ff  fc 0a 00 00 47 e2 ff ff   |............G...|
0x804b140:   1c 0b 00 00 89 e2 ff ff  3c 0b 00 00 cb e2 ff ff   |........<.......|
0x804b150:   5c 0b 00 00 40 e3 ff ff  7c 0b 00 00 9d e3 ff ff   |\...@...|.......|
0x804b160:   9c 0b 00 00 fa e3 ff ff  bc 0b 00 00 57 e4 ff ff   |............W...|
0x804b170:   dc 0b 00 00 e7 e4 ff ff  fc 0b 00 00 4b e5 ff ff   |............K...|
0x804b180:   1c 0c 00 00 bb e5 ff ff  3c 0c 00 00 02 e6 ff ff   |........<.......|
0x804b190:   60 0c 00 00 57 e6 ff ff  80 0c 00 00 9e e6 ff ff   |`...W...........|
0x804b1a0:   a4 0c 00 00 06 e7 ff ff  c8 0c 00 00 58 e8 ff ff   |............X...|
0x804b1b0:   f8 0c 00 00 83 fa ff ff  28 0d 00 00 1c fe ff ff   |........(.......|
0x804b1c0:   60 0d 00 00 20 fe ff ff  74 0d 00 00 80 fe ff ff   |`... ...t.......|
0x804b1d0:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804b1d4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b1e4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b1f4:   8c d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b204:   30 00 00 00 e8 d0 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b214:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b224:   10 00 00 00 54 00 00 00  04 d1 ff ff 08 00 00 00   |....T...........|
0x804b234:   00 00 00 00 1c 00 00 00  68 00 00 00 16 d2 ff ff   |........h.......|
0x804b244:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b254:   04 04 00 00 20 00 00 00  88 00 00 00 06 d2 ff ff   |.... ...........|
0x804b264:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b274:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b284:   10 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b294:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b2a4:   0e d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b2b4:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b2c4:   16 d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b2d4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b2e4:   20 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   | ...)....A....B.|
0x804b2f4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b304:   29 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |)...C....A....B.|
0x804b314:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b324:   4c d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |L...A....A....B.|
0x804b334:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b344:   6d d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |m...X....A....B.|
0x804b354:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b364:   90 01 00 00 a1 d2 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b374:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b384:   1c 00 00 00 b4 01 00 00  cf d2 ff ff 3d 00 00 00   |............=...|
0x804b394:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b3a4:   1c 00 00 00 d4 01 00 00  ec d2 ff ff 37 00 00 00   |............7...|
0x804b3b4:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b3c4:   1c 00 00 00 f4 01 00 00  03 d3 ff ff 1f 00 00 00   |................|
0x804b3d4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b3e4:   1c 00 00 00 14 02 00 00  02 d3 ff ff 2a 00 00 00   |............*...|
0x804b3f4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b404:   1c 00 00 00 34 02 00 00  0c d3 ff ff 2c 00 00 00   |....4.......,...|
0x804b414:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b424:   1c 00 00 00 54 02 00 00  18 d3 ff ff 2b 00 00 00   |....T.......+...|
0x804b434:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b444:   1c 00 00 00 74 02 00 00  23 d3 ff ff 49 00 00 00   |....t...#...I...|
0x804b454:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b464:   1c 00 00 00 94 02 00 00  4c d3 ff ff 47 00 00 00   |........L...G...|
0x804b474:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b484:   20 00 00 00 b4 02 00 00  73 d3 ff ff 5a 00 00 00   | .......s...Z...|
0x804b494:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b4a4:   c5 0c 04 04 20 00 00 00  d8 02 00 00 a9 d3 ff ff   |.... ...........|
0x804b4b4:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b4c4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b4d4:   d9 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b4e4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b4f4:   f8 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b504:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b514:   11 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b524:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b534:   13 d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b544:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b554:   41 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |A...<....A....B.|
0x804b564:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b574:   5d d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804b584:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b594:   c6 d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b5a4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b5b4:   d8 d4 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b5c4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b5d4:   e8 d4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b5e4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b5f4:   0d d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b604:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b614:   2c d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |,...2....A....B.|
0x804b624:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b634:   3e d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |>...,....A....B.|
0x804b644:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b654:   4a d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |J........A....B.|
0x804b664:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b674:   48 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |H...(....A....B.|
0x804b684:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b694:   50 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |P...%....A....B.|
0x804b6a4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b6b4:   55 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |U...%....A....B.|
0x804b6c4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b6d4:   5a d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |Z...7....A....B.|
0x804b6e4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b6f4:   71 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |q...4....A....B.|
0x804b704:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b714:   85 d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b724:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b734:   60 05 00 00 b3 d5 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b744:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b754:   1c 00 00 00 84 05 00 00  db d5 ff ff 37 00 00 00   |............7...|
0x804b764:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b774:   1c 00 00 00 a4 05 00 00  f2 d5 ff ff 31 00 00 00   |............1...|
0x804b784:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b794:   1c 00 00 00 c4 05 00 00  03 d6 ff ff 1f 00 00 00   |................|
0x804b7a4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b7b4:   1c 00 00 00 e4 05 00 00  02 d6 ff ff 2a 00 00 00   |............*...|
0x804b7c4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b7d4:   1c 00 00 00 04 06 00 00  0c d6 ff ff 28 00 00 00   |............(...|
0x804b7e4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b7f4:   1c 00 00 00 24 06 00 00  14 d6 ff ff 29 00 00 00   |....$.......)...|
0x804b804:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b814:   1c 00 00 00 44 06 00 00  1d d6 ff ff 3c 00 00 00   |....D.......<...|
0x804b824:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b834:   1c 00 00 00 64 06 00 00  39 d6 ff ff 3a 00 00 00   |....d...9...:...|
0x804b844:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b854:   20 00 00 00 84 06 00 00  53 d6 ff ff 53 00 00 00   | .......S...S...|
0x804b864:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b874:   c5 0c 04 04 20 00 00 00  a8 06 00 00 82 d6 ff ff   |.... ...........|
0x804b884:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b894:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b8a4:   ab d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b8b4:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b8c4:   c3 d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8d4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b8e4:   d5 d6 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8f4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b904:   c9 d6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b914:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b924:   c0 d6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b934:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b944:   b5 d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b954:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b964:   ab d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b974:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b984:   b2 d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b994:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b9a4:   b7 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b9b4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b9c4:   d6 d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b9d4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b9e4:   ef d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9f4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804ba04:   fb d6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804ba14:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804ba24:   01 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba34:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804ba44:   23 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |#...B....A....B.|
0x804ba54:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804ba64:   45 d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |E...B....A....B.|
0x804ba74:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ba84:   67 d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |g...u....A....B.|
0x804ba94:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804baa4:   bc d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bab4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bac4:   f9 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bad4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bae4:   36 d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |6...]....A....B.|
0x804baf4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bb04:   73 d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |s........A....B.|
0x804bb14:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bb24:   e3 d8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bb34:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bb44:   27 d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |'...p....A....B.|
0x804bb54:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bb64:   77 d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |w...G....A....B.|
0x804bb74:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bb84:   b0 09 00 00 9a d9 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bb94:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bba4:   d0 09 00 00 cf d9 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bbb4:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bbc4:   20 00 00 00 f4 09 00 00  f2 d9 ff ff 68 00 00 00   | ...........h...|
0x804bbd4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bbe4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 36 da ff ff   |....,.......6...|
0x804bbf4:   52 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |R....A....B..F..|
0x804bc04:   86 04 83 05 03 45 01 c3  41 c6 41 c7 41 c5 0c 04   |.....E..A.A.A...|
0x804bc14:   04 00 00 00 2c 00 00 00  48 0a 00 00 58 db ff ff   |....,...H...X...|
0x804bc24:   2b 12 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |+....A....B..I..|
0x804bc34:   86 04 83 05 03 1b 12 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bc44:   04 00 00 00 34 00 00 00  78 0a 00 00 53 ed ff ff   |....4...x...S...|
0x804bc54:   99 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bc64:   0f 03 75 78 06 10 03 02  75 7c 03 84 03 c1 0c 01   |..ux....u|......|
0x804bc74:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bc84:   b0 0a 00 00 b4 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bc94:   48 00 00 00 c4 0a 00 00  a4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804bca4:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804bcb4:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804bcc4:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804bcd4:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804bce4:   10 0b 00 00 b8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804bcf4:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 a4 ad 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff f8 ff ff ff   |................|
0x804d028:   ef 8c fb d8 5e 80 d8 28  fd ff ff ff ff ff ff ff   |....^..(........|
0x804d038:   1b 4e ed dd 09 00 00 00  c5 14 34 7f 5e a0 00 00   |.N........4.^...|
0x804d048:   fd ff ff ff 5e c3 a4 c0  02 00 00 00 ff ff 00 00   |....^...........|
0x804d058:   ff ff ff ff 14 a9 2d fa  24 c6 5b f5 11 29 69 a7   |......-.$.[..)i.|
0x804d068:   f8 ff 00 00 07 00 00 00  1f 67 c4 b1 f9 ??         |.........g...?  |
