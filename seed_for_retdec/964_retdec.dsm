;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 10:21:05
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 dd ff ff               	lea eax, [ebx - 0x2250]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 dd ff ff               	lea eax, [ebx - 0x22b0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 f5 a9 04 08               	mov eax, 0x804a9f5
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483a5:   3d 74 d0 04 08                  	cmp eax, 0x804d074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 d0 04 08                  	push 0x804d074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483e5:   2d 74 d0 04 08                  	sub eax, 0x804d074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 d0 04 08                  	push 0x804d074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 e9 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 d5 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 dd ff ff               	lea edx, [eax - 0x2230]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 a8 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 8a 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 62 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 38 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 0f 28 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 cc 27 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 8a 27 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 32 27 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 e1 26 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 a4 26 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 6d 26 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 4e 26 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 24 26 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 f8 25 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 cd 25 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 84 25 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 3c 25 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 e2 24 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 8f 24 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 50 24 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 1a 24 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 f8 23 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 aa 23 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 6e 23 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 e5 22 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 b3 22 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 83 22 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 3e 22 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 ff 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 cd 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 9e 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 80 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 58 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 33 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 0e 21 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 d7 20 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 a2 20 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 50 20 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 05 20 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 ce 1f 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 9d 1f 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 7e 1f 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 54 1f 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 2c 1f 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 03 1f 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 c7 1e 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 8c 1e 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 39 1e 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 ed 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 b5 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 86 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 72 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 5b 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 46 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 30 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 09 1d 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 e4 1c 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 a5 1c 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 6c 1c 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 40 1c 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 1a 1c 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 b4 de ff ff               	fld dword ptr [eax - 0x214c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 b4 de ff ff               	fld dword ptr [eax - 0x214c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 b8 de ff ff               	fld dword ptr [eax - 0x2148]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 d8 1b 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 b4 de ff ff               	fld dword ptr [eax - 0x214c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 b4 de ff ff               	fld dword ptr [eax - 0x214c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 b8 de ff ff               	fld dword ptr [eax - 0x2148]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 96 1b 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 bc de ff ff               	fld dword ptr [eax - 0x2144]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 c0 de ff ff               	fld dword ptr [eax - 0x2140]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 c4 de ff ff               	fld dword ptr [eax - 0x213c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 54 1b 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 c8 de ff ff               	fld dword ptr [eax - 0x2138]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 cc de ff ff               	fld dword ptr [eax - 0x2134]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 d0 de ff ff               	fld dword ptr [eax - 0x2130]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 dc 1a 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 e0 de ff ff               	fld qword ptr [eax - 0x2120]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 7f 1a 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 d8 de ff ff               	fld qword ptr [eax - 0x2128]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 e0 de ff ff               	fld qword ptr [eax - 0x2120]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 22 1a 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 e8 de ff ff               	fld qword ptr [eax - 0x2118]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 f0 de ff ff               	fld qword ptr [eax - 0x2110]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 f8 de ff ff               	fld qword ptr [eax - 0x2108]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 c5 19 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 00 df ff ff               	fld qword ptr [eax - 0x2100]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 08 df ff ff               	fld qword ptr [eax - 0x20f8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 10 df ff ff               	fld qword ptr [eax - 0x20f0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 35 19 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 18 df ff ff               	fld dword ptr [eax - 0x20e8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 1c df ff ff               	fld dword ptr [eax - 0x20e4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 d1 18 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 60 18 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 1d 18 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 dd ff ff               	lea eax, [ebx - 0x2220]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 de ff ff               	lea eax, [ebx - 0x21fc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 15 17 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 28 de ff ff               	lea edx, [eax - 0x21d8]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x80497bb
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 34                        	sub esp, 0x34
0x804965d:   e8 e5 16 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x8049662:   05 9e 39 00 00                  	add eax, 0x399e
0x8049667:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804966a:   8b 4d 20                        	mov ecx, dword ptr [ebp + 0x20]
0x804966d:   8b 75 3c                        	mov esi, dword ptr [ebp + 0x3c]
0x8049670:   8b 5d 40                        	mov ebx, dword ptr [ebp + 0x40]
0x8049673:   89 5d cc                        	mov dword ptr [ebp - 0x34], ebx
0x8049676:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049679:   89 7d c8                        	mov dword ptr [ebp - 0x38], edi
0x804967c:   8b 5d 48                        	mov ebx, dword ptr [ebp + 0x48]
0x804967f:   89 5d c4                        	mov dword ptr [ebp - 0x3c], ebx
0x8049682:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049685:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x8049688:   8b 7d 5c                        	mov edi, dword ptr [ebp + 0x5c]
0x804968b:   8b 5d 64                        	mov ebx, dword ptr [ebp + 0x64]
0x804968e:   66 89 55 f0                     	mov word ptr [ebp - 0x10], dx
0x8049692:   89 ca                           	mov edx, ecx
0x8049694:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049697:   89 f2                           	mov edx, esi
0x8049699:   66 89 55 e8                     	mov word ptr [ebp - 0x18], dx
0x804969d:   0f b6 55 cc                     	movzx edx, byte ptr [ebp - 0x34]
0x80496a1:   88 55 e4                        	mov byte ptr [ebp - 0x1c], dl
0x80496a4:   0f b7 55 c8                     	movzx edx, word ptr [ebp - 0x38]
0x80496a8:   66 89 55 e0                     	mov word ptr [ebp - 0x20], dx
0x80496ac:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x80496b0:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x80496b4:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x80496b8:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x80496bc:   89 fa                           	mov edx, edi
0x80496be:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x80496c2:   89 da                           	mov edx, ebx
0x80496c4:   88 55 d0                        	mov byte ptr [ebp - 0x30], dl
0x80496c7:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80496ca:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496d0:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80496d3:   89 90 28 00 00 00               	mov dword ptr [eax + 0x28], edx
0x80496d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80496dc:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496e2:   0f b7 55 f0                     	movzx edx, word ptr [ebp - 0x10]
0x80496e6:   66 89 90 a4 04 00 00            	mov word ptr [eax + 0x4a4], dx
0x80496ed:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496f0:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496f6:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496f9:   89 90 34 00 00 00               	mov dword ptr [eax + 0x34], edx
0x80496ff:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x8049703:   88 90 38 00 00 00               	mov byte ptr [eax + 0x38], dl
0x8049709:   8b 55 24                        	mov edx, dword ptr [ebp + 0x24]
0x804970c:   89 90 3c 00 00 00               	mov dword ptr [eax + 0x3c], edx
0x8049712:   8b 55 28                        	mov edx, dword ptr [ebp + 0x28]
0x8049715:   89 90 40 00 00 00               	mov dword ptr [eax + 0x40], edx
0x804971b:   8b 55 2c                        	mov edx, dword ptr [ebp + 0x2c]
0x804971e:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x8049724:   8b 55 30                        	mov edx, dword ptr [ebp + 0x30]
0x8049727:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x804972d:   8b 55 34                        	mov edx, dword ptr [ebp + 0x34]
0x8049730:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049736:   8b 55 38                        	mov edx, dword ptr [ebp + 0x38]
0x8049739:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x804973f:   0f b7 55 e8                     	movzx edx, word ptr [ebp - 0x18]
0x8049743:   66 89 90 54 00 00 00            	mov word ptr [eax + 0x54], dx
0x804974a:   0f b6 55 e4                     	movzx edx, byte ptr [ebp - 0x1c]
0x804974e:   88 90 56 00 00 00               	mov byte ptr [eax + 0x56], dl
0x8049754:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049758:   66 89 90 58 00 00 00            	mov word ptr [eax + 0x58], dx
0x804975f:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x8049763:   66 89 90 5a 00 00 00            	mov word ptr [eax + 0x5a], dx
0x804976a:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x804976e:   66 89 90 a6 04 00 00            	mov word ptr [eax + 0x4a6], dx
0x8049775:   8b 55 50                        	mov edx, dword ptr [ebp + 0x50]
0x8049778:   89 90 5c 00 00 00               	mov dword ptr [eax + 0x5c], edx
0x804977e:   8b 55 54                        	mov edx, dword ptr [ebp + 0x54]
0x8049781:   89 90 60 00 00 00               	mov dword ptr [eax + 0x60], edx
0x8049787:   8b 55 58                        	mov edx, dword ptr [ebp + 0x58]
0x804978a:   89 90 64 00 00 00               	mov dword ptr [eax + 0x64], edx
0x8049790:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049794:   66 89 90 68 00 00 00            	mov word ptr [eax + 0x68], dx
0x804979b:   8b 55 60                        	mov edx, dword ptr [ebp + 0x60]
0x804979e:   89 90 6c 00 00 00               	mov dword ptr [eax + 0x6c], edx
0x80497a4:   0f b6 55 d0                     	movzx edx, byte ptr [ebp - 0x30]
0x80497a8:   88 90 70 00 00 00               	mov byte ptr [eax + 0x70], dl
0x80497ae:   b8 00 00 00 00                  	mov eax, 0
0x80497b3:   83 c4 34                        	add esp, 0x34
0x80497b6:   5b                              	pop ebx
0x80497b7:   5e                              	pop esi
0x80497b8:   5f                              	pop edi
0x80497b9:   5d                              	pop ebp
0x80497ba:   c3                              	ret 
; function: func_1 at 0x80497bb -- 0x804a9f5
0x80497bb:   55                              	push ebp
0x80497bc:   89 e5                           	mov ebp, esp
0x80497be:   57                              	push edi
0x80497bf:   56                              	push esi
0x80497c0:   53                              	push ebx
0x80497c1:   81 ec 8c 01 00 00               	sub esp, 0x18c
0x80497c7:   e8 7b 15 00 00                  	call 0x804ad47 <__x86.get_pc_thunk.ax>
0x80497cc:   05 34 38 00 00                  	add eax, 0x3834
0x80497d1:   c7 45 8c 27 a9 66 05            	mov dword ptr [ebp - 0x74], 0x566a927
0x80497d8:   c7 45 c8 fe ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffe
0x80497df:   c7 45 c4 ca ed 29 e2            	mov dword ptr [ebp - 0x3c], 0xe229edca
0x80497e6:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x80497ec:   c7 45 f0 01 9c 93 62            	mov dword ptr [ebp - 0x10], 0x62939c01
0x80497f3:   c7 45 ec f7 ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffff7
0x80497fa:   c6 45 eb 04                     	mov byte ptr [ebp - 0x15], 4
0x80497fe:   c7 45 88 f1 93 53 48            	mov dword ptr [ebp - 0x78], 0x485393f1
0x8049805:   c7 45 e4 01 00 00 00            	mov dword ptr [ebp - 0x1c], 1
0x804980c:   c7 45 e0 19 c7 9a 1c            	mov dword ptr [ebp - 0x20], 0x1c9ac719
0x8049813:   c7 45 dc ff ff ff ff            	mov dword ptr [ebp - 0x24], 0xffffffff
0x804981a:   c7 45 d8 02 00 00 00            	mov dword ptr [ebp - 0x28], 2
0x8049821:   c7 45 d4 e6 a8 3b f7            	mov dword ptr [ebp - 0x2c], 0xf73ba8e6
0x8049828:   66 c7 45 d2 67 a6               	mov word ptr [ebp - 0x2e], 0xa667
0x804982e:   c6 45 d1 36                     	mov byte ptr [ebp - 0x2f], 0x36
0x8049832:   66 c7 45 86 77 ce               	mov word ptr [ebp - 0x7a], 0xce77
0x8049838:   66 c7 45 ce 8d c0               	mov word ptr [ebp - 0x32], 0xc08d
0x804983e:   66 c7 45 c0 00 00               	mov word ptr [ebp - 0x40], 0
0x8049844:   c7 45 bc fa ff ff ff            	mov dword ptr [ebp - 0x44], 0xfffffffa
0x804984b:   c7 45 b8 a8 ed 04 db            	mov dword ptr [ebp - 0x48], 0xdb04eda8
0x8049852:   c7 45 80 ff ff ff ff            	mov dword ptr [ebp - 0x80], 0xffffffff
0x8049859:   66 c7 45 b6 01 00               	mov word ptr [ebp - 0x4a], 1
0x804985f:   c7 85 7c ff ff ff 2a 95 9e ce   	mov dword ptr [ebp - 0x84], 0xce9e952a
0x8049869:   c6 45 b5 68                     	mov byte ptr [ebp - 0x4b], 0x68
0x804986d:   66 c7 85 7a ff ff ff 00 00      	mov word ptr [ebp - 0x86], 0
0x8049876:   c7 45 b0 da 68 46 85            	mov dword ptr [ebp - 0x50], 0x854668da
0x804987d:   66 c7 85 78 ff ff ff 00 00      	mov word ptr [ebp - 0x88], 0
0x8049886:   c7 85 74 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x8c], 1
0x8049890:   c6 85 73 ff ff ff f7            	mov byte ptr [ebp - 0x8d], 0xf7
0x8049897:   c7 85 6c ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffffe
0x80498a1:   c7 45 ac 4c 62 ef f3            	mov dword ptr [ebp - 0x54], 0xf3ef624c
0x80498a8:   66 c7 85 6a ff ff ff fe ff      	mov word ptr [ebp - 0x96], 0xfffe
0x80498b1:   c6 85 69 ff ff ff 08            	mov byte ptr [ebp - 0x97], 8
0x80498b8:   c7 85 64 ff ff ff 04 08 dc ab   	mov dword ptr [ebp - 0x9c], 0xabdc0804
0x80498c2:   c7 85 60 ff ff ff ed 27 25 90   	mov dword ptr [ebp - 0xa0], 0x902527ed
0x80498cc:   c7 85 5c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa4], 0xffffffff
0x80498d6:   c7 85 58 ff ff ff f7 22 d2 5d   	mov dword ptr [ebp - 0xa8], 0x5dd222f7
0x80498e0:   66 c7 85 56 ff ff ff 78 d8      	mov word ptr [ebp - 0xaa], 0xd878
0x80498e9:   c6 85 55 ff ff ff e0            	mov byte ptr [ebp - 0xab], 0xe0
0x80498f0:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x80498f7:   83 c8 7e                        	or eax, 0x7e
0x80498fa:   0f b7 c0                        	movzx eax, ax
0x80498fd:   d1 f8                           	sar eax, 1
0x80498ff:   3d eb 00 00 00                  	cmp eax, 0xeb
0x8049904:   0f 9f c0                        	setg al
0x8049907:   0f b6 c0                        	movzx eax, al
0x804990a:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804990d:   0f 95 c0                        	setne al
0x8049910:   0f b6 c0                        	movzx eax, al
0x8049913:   31 45 c4                        	xor dword ptr [ebp - 0x3c], eax
0x8049916:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804991a:   0f 85 bb 0e 00 00               	jne 0x804a7db <func_1+0x1020>
0x8049920:   66 c7 45 aa f7 ff               	mov word ptr [ebp - 0x56], 0xfff7
0x8049926:   c7 45 a4 1d 53 f9 e1            	mov dword ptr [ebp - 0x5c], 0xe1f9531d
0x804992d:   c7 85 3c ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xc4], 6
0x8049937:   c6 45 a3 00                     	mov byte ptr [ebp - 0x5d], 0
0x804993b:   c7 45 9c 9a 74 07 ad            	mov dword ptr [ebp - 0x64], 0xad07749a
0x8049942:   c6 85 3b ff ff ff fc            	mov byte ptr [ebp - 0xc5], 0xfc
0x8049949:   c7 85 34 ff ff ff ef 73 79 e7   	mov dword ptr [ebp - 0xcc], 0xe77973ef
0x8049953:   c6 85 33 ff ff ff 00            	mov byte ptr [ebp - 0xcd], 0
0x804995a:   c6 85 32 ff ff ff 8c            	mov byte ptr [ebp - 0xce], 0x8c
0x8049961:   66 c7 85 30 ff ff ff b7 d1      	mov word ptr [ebp - 0xd0], 0xd1b7
0x804996a:   c7 85 2c ff ff ff 18 73 bd 25   	mov dword ptr [ebp - 0xd4], 0x25bd7318
0x8049974:   66 c7 85 2a ff ff ff 6f ac      	mov word ptr [ebp - 0xd6], 0xac6f
0x804997d:   c7 85 24 ff ff ff 79 26 4b ee   	mov dword ptr [ebp - 0xdc], 0xee4b2679
0x8049987:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804998a:   66 09 45 aa                     	or word ptr [ebp - 0x56], ax
0x804998e:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049992:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049995:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x8049999:   74 33                           	je 0x80499ce <func_1+0x213>
0x804999b:   c7 45 f0 38 30 00 00            	mov dword ptr [ebp - 0x10], 0x3038
0x80499a2:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x80499a5:   98                              	cwde 
0x80499a6:   69 c0 38 30 00 00               	imul eax, eax, 0x3038
0x80499ac:   23 45 c4                        	and eax, dword ptr [ebp - 0x3c]
0x80499af:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x80499b2:   0f 9e c0                        	setle al
0x80499b5:   0f b6 c0                        	movzx eax, al
0x80499b8:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x80499bb:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x80499bf:   74 0d                           	je 0x80499ce <func_1+0x213>
0x80499c1:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x80499c5:   74 07                           	je 0x80499ce <func_1+0x213>
0x80499c7:   b8 01 00 00 00                  	mov eax, 1
0x80499cc:   eb 05                           	jmp 0x80499d3 <func_1+0x218>
0x80499ce:   b8 00 00 00 00                  	mov eax, 0
0x80499d3:   83 f8 01                        	cmp eax, 1
0x80499d6:   0f 9e c0                        	setle al
0x80499d9:   0f b6 d0                        	movzx edx, al
0x80499dc:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x80499e0:   89 c1                           	mov ecx, eax
0x80499e2:   d3 fa                           	sar edx, cl
0x80499e4:   89 d0                           	mov eax, edx
0x80499e6:   23 85 3c ff ff ff               	and eax, dword ptr [ebp - 0xc4]
0x80499ec:   83 f8 ff                        	cmp eax, -1
0x80499ef:   0f 95 c0                        	setne al
0x80499f2:   0f b6 c0                        	movzx eax, al
0x80499f5:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x80499f9:   0f b6 fa                        	movzx edi, dl
0x80499fc:   99                              	cdq 
0x80499fd:   f7 ff                           	idiv edi
0x80499ff:   85 c0                           	test eax, eax
0x8049a01:   0f 84 ea 00 00 00               	je 0x8049af1 <func_1+0x336>
0x8049a07:   c7 85 e8 fe ff ff 11 e0 ec 6a   	mov dword ptr [ebp - 0x118], 0x6aece011
0x8049a11:   c7 85 e4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x11c], 1
0x8049a1b:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049a1f:   c6 85 e3 fe ff ff c8            	mov byte ptr [ebp - 0x11d], 0xc8
0x8049a26:   0f b6 95 e3 fe ff ff            	movzx edx, byte ptr [ebp - 0x11d]
0x8049a2d:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x8049a33:   0f b7 d8                        	movzx ebx, ax
0x8049a36:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049a3a:   0f b6 f0                        	movzx esi, al
0x8049a3d:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a40:   88 85 70 fe ff ff               	mov byte ptr [ebp - 0x190], al
0x8049a46:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049a4a:   89 c1                           	mov ecx, eax
0x8049a4c:   0f b6 85 70 fe ff ff            	movzx eax, byte ptr [ebp - 0x190]
0x8049a53:   f6 f1                           	div cl
0x8049a55:   0f b6 c4                        	movzx eax, ah
0x8049a58:   0f b6 c0                        	movzx eax, al
0x8049a5b:   89 c1                           	mov ecx, eax
0x8049a5d:   d3 fe                           	sar esi, cl
0x8049a5f:   89 f1                           	mov ecx, esi
0x8049a61:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x8049a68:   39 c1                           	cmp ecx, eax
0x8049a6a:   0f 9d c0                        	setge al
0x8049a6d:   0f b6 c8                        	movzx ecx, al
0x8049a70:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049a73:   0f b7 c0                        	movzx eax, ax
0x8049a76:   0f af c1                        	imul eax, ecx
0x8049a79:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049a7c:   72 07                           	jb 0x8049a85 <func_1+0x2ca>
0x8049a7e:   b9 8d 00 00 00                  	mov ecx, 0x8d
0x8049a83:   eb 05                           	jmp 0x8049a8a <func_1+0x2cf>
0x8049a85:   b9 8c 00 00 00                  	mov ecx, 0x8c
0x8049a8a:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049a8e:   29 c1                           	sub ecx, eax
0x8049a90:   89 c8                           	mov eax, ecx
0x8049a92:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a95:   0f 9f c0                        	setg al
0x8049a98:   0f b6 c0                        	movzx eax, al
0x8049a9b:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049a9e:   0f 9e c0                        	setle al
0x8049aa1:   0f b6 c0                        	movzx eax, al
0x8049aa4:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049aa7:   0f 9e c0                        	setle al
0x8049aaa:   0f b6 f0                        	movzx esi, al
0x8049aad:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049ab0:   0f b6 c0                        	movzx eax, al
0x8049ab3:   89 c1                           	mov ecx, eax
0x8049ab5:   d3 e6                           	shl esi, cl
0x8049ab7:   89 f0                           	mov eax, esi
0x8049ab9:   0b 85 e8 fe ff ff               	or eax, dword ptr [ebp - 0x118]
0x8049abf:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049ac2:   7e 07                           	jle 0x8049acb <func_1+0x310>
0x8049ac4:   b8 02 00 00 00                  	mov eax, 2
0x8049ac9:   eb 05                           	jmp 0x8049ad0 <func_1+0x315>
0x8049acb:   b8 00 00 00 00                  	mov eax, 0
0x8049ad0:   89 c1                           	mov ecx, eax
0x8049ad2:   d3 e3                           	shl ebx, cl
0x8049ad4:   89 d8                           	mov eax, ebx
0x8049ad6:   39 c2                           	cmp edx, eax
0x8049ad8:   74 07                           	je 0x8049ae1 <func_1+0x326>
0x8049ada:   b8 20 00 00 00                  	mov eax, 0x20
0x8049adf:   eb 05                           	jmp 0x8049ae6 <func_1+0x32b>
0x8049ae1:   b8 1f 00 00 00                  	mov eax, 0x1f
0x8049ae6:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x8049aec:   e9 16 06 00 00                  	jmp 0x804a107 <func_1+0x94c>
0x8049af1:   c7 85 20 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xe0], 5
0x8049afb:   c7 85 1c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffffc
0x8049b05:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x8049b0a:   74 13                           	je 0x8049b1f <func_1+0x364>
0x8049b0c:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049b0f:   30 45 eb                        	xor byte ptr [ebp - 0x15], al
0x8049b12:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049b16:   74 07                           	je 0x8049b1f <func_1+0x364>
0x8049b18:   b8 01 00 00 00                  	mov eax, 1
0x8049b1d:   eb 05                           	jmp 0x8049b24 <func_1+0x369>
0x8049b1f:   b8 00 00 00 00                  	mov eax, 0
0x8049b24:   89 c2                           	mov edx, eax
0x8049b26:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049b29:   31 d0                           	xor eax, edx
0x8049b2b:   89 c7                           	mov edi, eax
0x8049b2d:   b8 05 00 00 00                  	mov eax, 5
0x8049b32:   ba 00 00 00 00                  	mov edx, 0
0x8049b37:   66 f7 f7                        	div di
0x8049b3a:   98                              	cwde 
0x8049b3b:   8b 55 88                        	mov edx, dword ptr [ebp - 0x78]
0x8049b3e:   0f bf fa                        	movsx edi, dx
0x8049b41:   99                              	cdq 
0x8049b42:   f7 ff                           	idiv edi
0x8049b44:   ba 41 26 00 00                  	mov edx, 0x2641
0x8049b49:   29 c2                           	sub edx, eax
0x8049b4b:   89 d0                           	mov eax, edx
0x8049b4d:   0f b7 d0                        	movzx edx, ax
0x8049b50:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x8049b54:   89 c1                           	mov ecx, eax
0x8049b56:   d3 e2                           	shl edx, cl
0x8049b58:   89 d0                           	mov eax, edx
0x8049b5a:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049b5d:   c6 45 a3 00                     	mov byte ptr [ebp - 0x5d], 0
0x8049b61:   e9 45 01 00 00                  	jmp 0x8049cab <func_1+0x4f0>
0x8049b66:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x8049b70:   c7 85 f0 fe ff ff b3 c1 ce e8   	mov dword ptr [ebp - 0x110], 0xe8cec1b3
0x8049b7a:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x8049b81:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049b87:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049b8a:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049b8e:   31 45 b0                        	xor dword ptr [ebp - 0x50], eax
0x8049b91:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049b94:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049b97:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049b9d:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x8049ba0:   0f 96 c0                        	setbe al
0x8049ba3:   0f b6 c0                        	movzx eax, al
0x8049ba6:   8b 95 74 ff ff ff               	mov edx, dword ptr [ebp - 0x8c]
0x8049bac:   0f b7 fa                        	movzx edi, dx
0x8049baf:   99                              	cdq 
0x8049bb0:   f7 ff                           	idiv edi
0x8049bb2:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x8049bb8:   0f 9c c0                        	setl al
0x8049bbb:   0f b6 c0                        	movzx eax, al
0x8049bbe:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049bc1:   0f 96 c0                        	setbe al
0x8049bc4:   0f b6 c0                        	movzx eax, al
0x8049bc7:   8b 95 f4 fe ff ff               	mov edx, dword ptr [ebp - 0x10c]
0x8049bcd:   0f b7 fa                        	movzx edi, dx
0x8049bd0:   99                              	cdq 
0x8049bd1:   f7 ff                           	idiv edi
0x8049bd3:   66 0f be d0                     	movsx dx, al
0x8049bd7:   66 0f be 85 73 ff ff ff         	movsx ax, byte ptr [ebp - 0x8d]
0x8049bdf:   0f af c2                        	imul eax, edx
0x8049be2:   0f b7 c0                        	movzx eax, ax
0x8049be5:   f7 d8                           	neg eax
0x8049be7:   89 c2                           	mov edx, eax
0x8049be9:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x8049bf0:   39 c2                           	cmp edx, eax
0x8049bf2:   0f 95 c0                        	setne al
0x8049bf5:   0f b6 c0                        	movzx eax, al
0x8049bf8:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x8049bfb:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bfe:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049c01:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049c05:   74 07                           	je 0x8049c0e <func_1+0x453>
0x8049c07:   b8 01 00 00 00                  	mov eax, 1
0x8049c0c:   eb 05                           	jmp 0x8049c13 <func_1+0x458>
0x8049c0e:   b8 00 00 00 00                  	mov eax, 0
0x8049c13:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049c16:   66 c7 45 aa 06 00               	mov word ptr [ebp - 0x56], 6
0x8049c1c:   eb 7b                           	jmp 0x8049c99 <func_1+0x4de>
0x8049c1e:   c7 85 ec fe ff ff 38 5d 38 4b   	mov dword ptr [ebp - 0x114], 0x4b385d38
0x8049c28:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049c2c:   75 78                           	jne 0x8049ca6 <func_1+0x4eb>
0x8049c2e:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049c34:   66 c1 e8 09                     	shr ax, 9
0x8049c38:   0f b7 c0                        	movzx eax, ax
0x8049c3b:   39 85 ec fe ff ff               	cmp dword ptr [ebp - 0x114], eax
0x8049c41:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x8049c46:   99                              	cdq 
0x8049c47:   f7 bd 20 ff ff ff               	idiv dword ptr [ebp - 0xe0]
0x8049c4d:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049c51:   39 c2                           	cmp edx, eax
0x8049c53:   0f 9c c0                        	setl al
0x8049c56:   0f b6 c0                        	movzx eax, al
0x8049c59:   23 85 ec fe ff ff               	and eax, dword ptr [ebp - 0x114]
0x8049c5f:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049c62:   0f 92 c0                        	setb al
0x8049c65:   0f b6 c0                        	movzx eax, al
0x8049c68:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x8049c6e:   0f be 85 73 ff ff ff            	movsx eax, byte ptr [ebp - 0x8d]
0x8049c75:   39 85 f0 fe ff ff               	cmp dword ptr [ebp - 0x110], eax
0x8049c7b:   0f 94 c0                        	sete al
0x8049c7e:   0f b6 d0                        	movzx edx, al
0x8049c81:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049c84:   98                              	cwde 
0x8049c85:   89 c1                           	mov ecx, eax
0x8049c87:   d3 fa                           	sar edx, cl
0x8049c89:   89 d0                           	mov eax, edx
0x8049c8b:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049c8e:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049c92:   83 c0 01                        	add eax, 1
0x8049c95:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x8049c99:   66 83 7d aa 33                  	cmp word ptr [ebp - 0x56], 0x33
0x8049c9e:   0f 86 7a ff ff ff               	jbe 0x8049c1e <func_1+0x463>
0x8049ca4:   eb 01                           	jmp 0x8049ca7 <func_1+0x4ec>
0x8049ca6:   90                              	nop 
0x8049ca7:   80 45 a3 01                     	add byte ptr [ebp - 0x5d], 1
0x8049cab:   80 7d a3 17                     	cmp byte ptr [ebp - 0x5d], 0x17
0x8049caf:   0f 87 b1 fe ff ff               	ja 0x8049b66 <func_1+0x3ab>
0x8049cb5:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049cb8:   0b 45 c8                        	or eax, dword ptr [ebp - 0x38]
0x8049cbb:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049cc1:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049cc7:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049cca:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x8049cce:   8d 50 01                        	lea edx, [eax + 1]
0x8049cd1:   88 55 d1                        	mov byte ptr [ebp - 0x2f], dl
0x8049cd4:   84 c0                           	test al, al
0x8049cd6:   0f 94 c0                        	sete al
0x8049cd9:   0f b6 d0                        	movzx edx, al
0x8049cdc:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x8049ce3:   09 d0                           	or eax, edx
0x8049ce5:   83 f8 59                        	cmp eax, 0x59
0x8049ce8:   0f 95 c0                        	setne al
0x8049ceb:   0f b6 c0                        	movzx eax, al
0x8049cee:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x8049cf1:   0f 93 c0                        	setae al
0x8049cf4:   0f b6 d0                        	movzx edx, al
0x8049cf7:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x8049cfe:   31 c2                           	xor edx, eax
0x8049d00:   0f b6 45 a3                     	movzx eax, byte ptr [ebp - 0x5d]
0x8049d04:   39 c2                           	cmp edx, eax
0x8049d06:   0f 9e c0                        	setle al
0x8049d09:   0f b6 c0                        	movzx eax, al
0x8049d0c:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049d0f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049d12:   3c 01                           	cmp al, 1
0x8049d14:   0f 84 71 01 00 00               	je 0x8049e8b <func_1+0x6d0>
0x8049d1a:   c7 85 08 ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xf8], 5
0x8049d24:   c7 85 04 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffff8
0x8049d2e:   c7 45 94 08 c0 6a 53            	mov dword ptr [ebp - 0x6c], 0x536ac008
0x8049d35:   80 75 eb 01                     	xor byte ptr [ebp - 0x15], 1
0x8049d39:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049d3d:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x8049d43:   0f 97 c0                        	seta al
0x8049d46:   0f b6 c0                        	movzx eax, al
0x8049d49:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049d4f:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049d53:   83 c0 01                        	add eax, 1
0x8049d56:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x8049d5a:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x8049d5e:   89 85 1c ff ff ff               	mov dword ptr [ebp - 0xe4], eax
0x8049d64:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x8049d68:   39 85 1c ff ff ff               	cmp dword ptr [ebp - 0xe4], eax
0x8049d6e:   0f 9c c0                        	setl al
0x8049d71:   0f b6 c0                        	movzx eax, al
0x8049d74:   21 85 04 ff ff ff               	and dword ptr [ebp - 0xfc], eax
0x8049d7a:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x8049d80:   39 85 08 ff ff ff               	cmp dword ptr [ebp - 0xf8], eax
0x8049d86:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049d8a:   75 04                           	jne 0x8049d90 <func_1+0x5d5>
0x8049d8c:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049d90:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049d96:   83 c8 f9                        	or eax, 0xfffffff9
0x8049d99:   83 f8 fd                        	cmp eax, -3
0x8049d9c:   0f 97 c0                        	seta al
0x8049d9f:   0f b6 c0                        	movzx eax, al
0x8049da2:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x8049da5:   7d 16                           	jge 0x8049dbd <func_1+0x602>
0x8049da7:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049db1:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049dbb:   eb 35                           	jmp 0x8049df2 <func_1+0x637>
0x8049dbd:   66 c7 85 02 ff ff ff 01 00      	mov word ptr [ebp - 0xfe], 1
0x8049dc6:   c6 85 01 ff ff ff e7            	mov byte ptr [ebp - 0xff], 0xe7
0x8049dcd:   c7 85 fc fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x104], 7
0x8049dd7:   0f b6 85 01 ff ff ff            	movzx eax, byte ptr [ebp - 0xff]
0x8049dde:   83 c0 01                        	add eax, 1
0x8049de1:   88 85 01 ff ff ff               	mov byte ptr [ebp - 0xff], al
0x8049de7:   83 45 94 01                     	add dword ptr [ebp - 0x6c], 1
0x8049deb:   0f bf 45 86                     	movsx eax, word ptr [ebp - 0x7a]
0x8049def:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049df2:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049df5:   0f bf d0                        	movsx edx, ax
0x8049df8:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x8049dff:   2b 45 94                        	sub eax, dword ptr [ebp - 0x6c]
0x8049e02:   89 c1                           	mov ecx, eax
0x8049e04:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x8049e0a:   39 c1                           	cmp ecx, eax
0x8049e0c:   0f 94 c0                        	sete al
0x8049e0f:   0f b6 c0                        	movzx eax, al
0x8049e12:   31 85 3c ff ff ff               	xor dword ptr [ebp - 0xc4], eax
0x8049e18:   81 bd 3c ff ff ff 52 7c 97 65   	cmp dword ptr [ebp - 0xc4], 0x65977c52
0x8049e22:   0f 95 c0                        	setne al
0x8049e25:   0f b6 c0                        	movzx eax, al
0x8049e28:   8b 8d 04 ff ff ff               	mov ecx, dword ptr [ebp - 0xfc]
0x8049e2e:   01 c8                           	add eax, ecx
0x8049e30:   0f b7 c8                        	movzx ecx, ax
0x8049e33:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049e37:   01 c1                           	add ecx, eax
0x8049e39:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x8049e3d:   21 c8                           	and eax, ecx
0x8049e3f:   85 c0                           	test eax, eax
0x8049e41:   74 10                           	je 0x8049e53 <func_1+0x698>
0x8049e43:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x8049e4a:   74 07                           	je 0x8049e53 <func_1+0x698>
0x8049e4c:   b8 01 00 00 00                  	mov eax, 1
0x8049e51:   eb 05                           	jmp 0x8049e58 <func_1+0x69d>
0x8049e53:   b8 00 00 00 00                  	mov eax, 0
0x8049e58:   85 c0                           	test eax, eax
0x8049e5a:   0f 9e c0                        	setle al
0x8049e5d:   0f b6 c0                        	movzx eax, al
0x8049e60:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x8049e63:   0f 9c c0                        	setl al
0x8049e66:   0f b6 c0                        	movzx eax, al
0x8049e69:   89 c1                           	mov ecx, eax
0x8049e6b:   d3 fa                           	sar edx, cl
0x8049e6d:   89 d0                           	mov eax, edx
0x8049e6f:   39 85 20 ff ff ff               	cmp dword ptr [ebp - 0xe0], eax
0x8049e75:   74 07                           	je 0x8049e7e <func_1+0x6c3>
0x8049e77:   b8 20 00 00 00                  	mov eax, 0x20
0x8049e7c:   eb 05                           	jmp 0x8049e83 <func_1+0x6c8>
0x8049e7e:   b8 00 00 00 00                  	mov eax, 0
0x8049e83:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e86:   e9 7c 02 00 00                  	jmp 0x804a107 <func_1+0x94c>
0x8049e8b:   c7 85 18 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe8], 0
0x8049e95:   c7 85 14 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xec], 0xfffffff7
0x8049e9f:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x8049ea5:   0f be d0                        	movsx edx, al
0x8049ea8:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x8049eac:   0f be c0                        	movsx eax, al
0x8049eaf:   89 c1                           	mov ecx, eax
0x8049eb1:   d3 e2                           	shl edx, cl
0x8049eb3:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049eb6:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x8049eb9:   39 55 b0                        	cmp dword ptr [ebp - 0x50], edx
0x8049ebc:   0f 9d c0                        	setge al
0x8049ebf:   0f b6 d0                        	movzx edx, al
0x8049ec2:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x8049ec6:   39 c2                           	cmp edx, eax
0x8049ec8:   0f 9e c0                        	setle al
0x8049ecb:   f7 d8                           	neg eax
0x8049ecd:   0f be d0                        	movsx edx, al
0x8049ed0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ed3:   0f be c0                        	movsx eax, al
0x8049ed6:   01 d0                           	add eax, edx
0x8049ed8:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x8049edb:   0f 94 c0                        	sete al
0x8049ede:   0f b6 c0                        	movzx eax, al
0x8049ee1:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049ee4:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049ee7:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049eea:   c7 45 e4 f2 ff ff ff            	mov dword ptr [ebp - 0x1c], 0xfffffff2
0x8049ef1:   e9 04 02 00 00                  	jmp 0x804a0fa <func_1+0x93f>
0x8049ef6:   c6 85 13 ff ff ff ac            	mov byte ptr [ebp - 0xed], 0xac
0x8049efd:   c7 85 0c ff ff ff 8d 78 75 6c   	mov dword ptr [ebp - 0xf4], 0x6c75788d
0x8049f07:   83 bd 18 ff ff ff 00            	cmp dword ptr [ebp - 0xe8], 0
0x8049f0e:   75 7f                           	jne 0x8049f8f <func_1+0x7d4>
0x8049f10:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x8049f16:   83 f0 01                        	xor eax, 1
0x8049f19:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x8049f1d:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x8049f21:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8049f24:   0f be da                        	movsx ebx, dl
0x8049f27:   0f b7 95 78 ff ff ff            	movzx edx, word ptr [ebp - 0x88]
0x8049f2e:   0f be d2                        	movsx edx, dl
0x8049f31:   89 d1                           	mov ecx, edx
0x8049f33:   d3 e3                           	shl ebx, cl
0x8049f35:   89 da                           	mov edx, ebx
0x8049f37:   0f b7 da                        	movzx ebx, dx
0x8049f3a:   66 0f be 95 73 ff ff ff         	movsx dx, byte ptr [ebp - 0x8d]
0x8049f42:   0f b7 d2                        	movzx edx, dx
0x8049f45:   89 d1                           	mov ecx, edx
0x8049f47:   d3 e3                           	shl ebx, cl
0x8049f49:   89 d9                           	mov ecx, ebx
0x8049f4b:   0f b6 55 d1                     	movzx edx, byte ptr [ebp - 0x2f]
0x8049f4f:   39 d1                           	cmp ecx, edx
0x8049f51:   0f 9f c2                        	setg dl
0x8049f54:   0f b6 ca                        	movzx ecx, dl
0x8049f57:   8b 55 8c                        	mov edx, dword ptr [ebp - 0x74]
0x8049f5a:   0f b6 d2                        	movzx edx, dl
0x8049f5d:   01 ca                           	add edx, ecx
0x8049f5f:   83 fa f8                        	cmp edx, -8
0x8049f62:   0f 9d c2                        	setge dl
0x8049f65:   0f b6 d2                        	movzx edx, dl
0x8049f68:   39 55 dc                        	cmp dword ptr [ebp - 0x24], edx
0x8049f6b:   0f 93 c2                        	setae dl
0x8049f6e:   0f b6 da                        	movzx ebx, dl
0x8049f71:   8b 95 18 ff ff ff               	mov edx, dword ptr [ebp - 0xe8]
0x8049f77:   0f b7 d2                        	movzx edx, dx
0x8049f7a:   89 d1                           	mov ecx, edx
0x8049f7c:   d3 fb                           	sar ebx, cl
0x8049f7e:   89 da                           	mov edx, ebx
0x8049f80:   c1 e2 04                        	shl edx, 4
0x8049f83:   0f b6 ca                        	movzx ecx, dl
0x8049f86:   99                              	cdq 
0x8049f87:   f7 f9                           	idiv ecx
0x8049f89:   89 d0                           	mov eax, edx
0x8049f8b:   85 c0                           	test eax, eax
0x8049f8d:   74 07                           	je 0x8049f96 <func_1+0x7db>
0x8049f8f:   b8 01 00 00 00                  	mov eax, 1
0x8049f94:   eb 05                           	jmp 0x8049f9b <func_1+0x7e0>
0x8049f96:   b8 00 00 00 00                  	mov eax, 0
0x8049f9b:   0f be c0                        	movsx eax, al
0x8049f9e:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049fa1:   0f be ca                        	movsx ecx, dl
0x8049fa4:   99                              	cdq 
0x8049fa5:   f7 f9                           	idiv ecx
0x8049fa7:   89 95 3c ff ff ff               	mov dword ptr [ebp - 0xc4], edx
0x8049fad:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049fb1:   0f 85 3e 01 00 00               	jne 0x804a0f5 <func_1+0x93a>
0x8049fb7:   80 bd 13 ff ff ff 00            	cmp byte ptr [ebp - 0xed], 0
0x8049fbe:   0f 84 92 00 00 00               	je 0x804a056 <func_1+0x89b>
0x8049fc4:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x8049fc8:   0f b7 55 b6                     	movzx edx, word ptr [ebp - 0x4a]
0x8049fcc:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x8049fd0:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x8049fd6:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x8049fda:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x8049fe0:   0f bf 5d 86                     	movsx ebx, word ptr [ebp - 0x7a]
0x8049fe4:   89 9d 68 fe ff ff               	mov dword ptr [ebp - 0x198], ebx
0x8049fea:   0f b6 7d d1                     	movzx edi, byte ptr [ebp - 0x2f]
0x8049fee:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x8049ff2:   0f be 5d eb                     	movsx ebx, byte ptr [ebp - 0x15]
0x8049ff6:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x8049ffa:   50                              	push eax
0x8049ffb:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a001:   52                              	push edx
0x804a002:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a005:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a008:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a00b:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a011:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a017:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a01d:   57                              	push edi
0x804a01e:   56                              	push esi
0x804a01f:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a022:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a025:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a028:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a02b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a02e:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a031:   53                              	push ebx
0x804a032:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a035:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a038:   51                              	push ecx
0x804a039:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a03c:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a03f:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a042:   e8 0d f6 ff ff                  	call 0x8049654 <set_var>
0x804a047:   83 c4 60                        	add esp, 0x60
0x804a04a:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x804a051:   e9 97 09 00 00                  	jmp 0x804a9ed <func_1+0x1232>
0x804a056:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x804a060:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a066:   89 c2                           	mov edx, eax
0x804a068:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a06c:   21 d0                           	and eax, edx
0x804a06e:   c0 e8 03                        	shr al, 3
0x804a071:   0f b6 c0                        	movzx eax, al
0x804a074:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a077:   0f be 85 13 ff ff ff            	movsx eax, byte ptr [ebp - 0xed]
0x804a07e:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a081:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a085:   75 7f                           	jne 0x804a106 <func_1+0x94b>
0x804a087:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x804a08b:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a091:   c7 45 9c cf 64 00 00            	mov dword ptr [ebp - 0x64], 0x64cf
0x804a098:   83 7d 9c 01                     	cmp dword ptr [ebp - 0x64], 1
0x804a09c:   0f 97 c0                        	seta al
0x804a09f:   0f b6 d0                        	movzx edx, al
0x804a0a2:   0f b6 45 d1                     	movzx eax, byte ptr [ebp - 0x2f]
0x804a0a6:   0f af c2                        	imul eax, edx
0x804a0a9:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a0ad:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a0b1:   75 0a                           	jne 0x804a0bd <func_1+0x902>
0x804a0b3:   66 83 bd 78 ff ff ff 00         	cmp word ptr [ebp - 0x88], 0
0x804a0bb:   74 07                           	je 0x804a0c4 <func_1+0x909>
0x804a0bd:   b8 01 00 00 00                  	mov eax, 1
0x804a0c2:   eb 05                           	jmp 0x804a0c9 <func_1+0x90e>
0x804a0c4:   b8 00 00 00 00                  	mov eax, 0
0x804a0c9:   f7 d8                           	neg eax
0x804a0cb:   89 c2                           	mov edx, eax
0x804a0cd:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a0d0:   39 c2                           	cmp edx, eax
0x804a0d2:   0f 93 c0                        	setae al
0x804a0d5:   0f b6 d0                        	movzx edx, al
0x804a0d8:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a0db:   0f b6 c0                        	movzx eax, al
0x804a0de:   29 c2                           	sub edx, eax
0x804a0e0:   89 d0                           	mov eax, edx
0x804a0e2:   3d 24 b8 00 00                  	cmp eax, 0xb824
0x804a0e7:   0f 95 c0                        	setne al
0x804a0ea:   0f b6 c0                        	movzx eax, al
0x804a0ed:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804a0f3:   eb 01                           	jmp 0x804a0f6 <func_1+0x93b>
0x804a0f5:   90                              	nop 
0x804a0f6:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x804a0fa:   83 7d e4 07                     	cmp dword ptr [ebp - 0x1c], 7
0x804a0fe:   0f 87 f2 fd ff ff               	ja 0x8049ef6 <func_1+0x73b>
0x804a104:   eb 01                           	jmp 0x804a107 <func_1+0x94c>
0x804a106:   90                              	nop 
0x804a107:   f7 55 a4                        	not dword ptr [ebp - 0x5c]
0x804a10a:   80 7d a3 00                     	cmp byte ptr [ebp - 0x5d], 0
0x804a10e:   0f 84 31 01 00 00               	je 0x804a245 <func_1+0xa8a>
0x804a114:   66 c7 85 82 fe ff ff 3a 23      	mov word ptr [ebp - 0x17e], 0x233a
0x804a11d:   c6 85 81 fe ff ff 55            	mov byte ptr [ebp - 0x17f], 0x55
0x804a124:   0f be 9d 73 ff ff ff            	movsx ebx, byte ptr [ebp - 0x8d]
0x804a12b:   0f bf 85 82 fe ff ff            	movsx eax, word ptr [ebp - 0x17e]
0x804a132:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a135:   0f bf f2                        	movsx esi, dx
0x804a138:   99                              	cdq 
0x804a139:   f7 fe                           	idiv esi
0x804a13b:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a13f:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a143:   66 31 45 c0                     	xor word ptr [ebp - 0x40], ax
0x804a147:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a14b:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a14e:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a151:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a155:   0f 94 c2                        	sete dl
0x804a158:   0f b6 d2                        	movzx edx, dl
0x804a15b:   89 55 b8                        	mov dword ptr [ebp - 0x48], edx
0x804a15e:   33 45 b8                        	xor eax, dword ptr [ebp - 0x48]
0x804a161:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804a167:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x804a16d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a170:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a173:   66 0f be d0                     	movsx dx, al
0x804a177:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a17a:   66 98                           	cbw 
0x804a17c:   0f af c2                        	imul eax, edx
0x804a17f:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a183:   66 83 7d d2 01                  	cmp word ptr [ebp - 0x2e], 1
0x804a188:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a18e:   3b 45 d4                        	cmp eax, dword ptr [ebp - 0x2c]
0x804a191:   0f 97 c0                        	seta al
0x804a194:   0f b6 c0                        	movzx eax, al
0x804a197:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804a19a:   0f b7 ca                        	movzx ecx, dx
0x804a19d:   99                              	cdq 
0x804a19e:   f7 f9                           	idiv ecx
0x804a1a0:   89 d0                           	mov eax, edx
0x804a1a2:   98                              	cwde 
0x804a1a3:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x804a1a7:   0f bf ca                        	movsx ecx, dx
0x804a1aa:   99                              	cdq 
0x804a1ab:   f7 f9                           	idiv ecx
0x804a1ad:   89 d0                           	mov eax, edx
0x804a1af:   88 45 d1                        	mov byte ptr [ebp - 0x2f], al
0x804a1b2:   0f b6 55 d1                     	movzx edx, byte ptr [ebp - 0x2f]
0x804a1b6:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a1ba:   0f b6 c0                        	movzx eax, al
0x804a1bd:   89 c1                           	mov ecx, eax
0x804a1bf:   d3 e2                           	shl edx, cl
0x804a1c1:   89 d0                           	mov eax, edx
0x804a1c3:   83 f8 ff                        	cmp eax, -1
0x804a1c6:   0f 95 c0                        	setne al
0x804a1c9:   0f b6 c0                        	movzx eax, al
0x804a1cc:   33 45 d4                        	xor eax, dword ptr [ebp - 0x2c]
0x804a1cf:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a1d2:   66 83 7d aa 00                  	cmp word ptr [ebp - 0x56], 0
0x804a1d7:   74 07                           	je 0x804a1e0 <func_1+0xa25>
0x804a1d9:   b8 01 00 00 00                  	mov eax, 1
0x804a1de:   eb 05                           	jmp 0x804a1e5 <func_1+0xa2a>
0x804a1e0:   b8 00 00 00 00                  	mov eax, 0
0x804a1e5:   0f b6 d0                        	movzx edx, al
0x804a1e8:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a1eb:   0f b6 c0                        	movzx eax, al
0x804a1ee:   01 d0                           	add eax, edx
0x804a1f0:   83 c8 fd                        	or eax, 0xfffffffd
0x804a1f3:   89 c2                           	mov edx, eax
0x804a1f5:   0f be 45 eb                     	movsx eax, byte ptr [ebp - 0x15]
0x804a1f9:   39 c2                           	cmp edx, eax
0x804a1fb:   0f 94 c0                        	sete al
0x804a1fe:   0f b6 d0                        	movzx edx, al
0x804a201:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x804a208:   39 c2                           	cmp edx, eax
0x804a20a:   0f 94 c0                        	sete al
0x804a20d:   0f b6 c0                        	movzx eax, al
0x804a210:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a213:   0f 92 c0                        	setb al
0x804a216:   0f b6 c0                        	movzx eax, al
0x804a219:   21 d8                           	and eax, ebx
0x804a21b:   33 45 c8                        	xor eax, dword ptr [ebp - 0x38]
0x804a21e:   89 c2                           	mov edx, eax
0x804a220:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a223:   21 d0                           	and eax, edx
0x804a225:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a228:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a22b:   0f b7 d0                        	movzx edx, ax
0x804a22e:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a231:   0f b7 c0                        	movzx eax, ax
0x804a234:   89 c1                           	mov ecx, eax
0x804a236:   d3 fa                           	sar edx, cl
0x804a238:   89 d0                           	mov eax, edx
0x804a23a:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a240:   e9 f0 06 00 00                  	jmp 0x804a935 <func_1+0x117a>
0x804a245:   66 c7 85 e0 fe ff ff 89 da      	mov word ptr [ebp - 0x120], 0xda89
0x804a24e:   66 c7 85 de fe ff ff 04 00      	mov word ptr [ebp - 0x122], 4
0x804a257:   c7 85 d8 fe ff ff ec 62 aa 38   	mov dword ptr [ebp - 0x128], 0x38aa62ec
0x804a261:   c7 85 d4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x12c], 1
0x804a26b:   c7 85 d0 fe ff ff d3 16 5b 8c   	mov dword ptr [ebp - 0x130], 0x8c5b16d3
0x804a275:   c7 85 cc fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x134], 0xfffffffa
0x804a27f:   c7 85 c8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x138], 0
0x804a289:   c7 85 c4 fe ff ff 09 00 00 00   	mov dword ptr [ebp - 0x13c], 9
0x804a293:   c7 85 c0 fe ff ff 46 5a 1d 8b   	mov dword ptr [ebp - 0x140], 0x8b1d5a46
0x804a29d:   c7 85 bc fe ff ff 3f 0e 2f f8   	mov dword ptr [ebp - 0x144], 0xf82f0e3f
0x804a2a7:   66 83 85 e0 fe ff ff 01         	add word ptr [ebp - 0x120], 1
0x804a2af:   66 83 bd 78 ff ff ff 00         	cmp word ptr [ebp - 0x88], 0
0x804a2b7:   90                              	nop 
0x804a2b8:   c7 85 3c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xc4], 1
0x804a2c2:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a2c6:   0f 84 7a 03 00 00               	je 0x804a646 <func_1+0xe8b>
0x804a2cc:   c7 85 a8 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x158], 0xfffffffc
0x804a2d6:   c7 45 90 01 00 00 00            	mov dword ptr [ebp - 0x70], 1
0x804a2dd:   c7 85 a4 fe ff ff ed bf d4 13   	mov dword ptr [ebp - 0x15c], 0x13d4bfed
0x804a2e7:   c7 85 a0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x160], 0xffffffff
0x804a2f1:   c7 85 9c fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x164], 0xfffffffc
0x804a2fb:   c7 85 98 fe ff ff 26 03 90 75   	mov dword ptr [ebp - 0x168], 0x75900326
0x804a305:   c7 85 94 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x16c], 0xffffffff
0x804a30f:   c6 85 93 fe ff ff 20            	mov byte ptr [ebp - 0x16d], 0x20
0x804a316:   c6 85 92 fe ff ff 00            	mov byte ptr [ebp - 0x16e], 0
0x804a31d:   83 ad a8 fe ff ff 01            	sub dword ptr [ebp - 0x158], 1
0x804a324:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a328:   74 05                           	je 0x804a32f <func_1+0xb74>
0x804a32a:   e9 c1 f5 ff ff                  	jmp 0x80498f0 <func_1+0x135>
0x804a32f:   0f bf 85 78 ff ff ff            	movsx eax, word ptr [ebp - 0x88]
0x804a336:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804a33c:   66 89 55 d2                     	mov word ptr [ebp - 0x2e], dx
0x804a340:   0f bf 55 d2                     	movsx edx, word ptr [ebp - 0x2e]
0x804a344:   89 55 ac                        	mov dword ptr [ebp - 0x54], edx
0x804a347:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a34a:   74 1d                           	je 0x804a369 <func_1+0xbae>
0x804a34c:   0f bf 55 86                     	movsx edx, word ptr [ebp - 0x7a]
0x804a350:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a353:   0f be d8                        	movsx ebx, al
0x804a356:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a35a:   0f be c0                        	movsx eax, al
0x804a35d:   89 c1                           	mov ecx, eax
0x804a35f:   d3 e3                           	shl ebx, cl
0x804a361:   89 d8                           	mov eax, ebx
0x804a363:   21 d0                           	and eax, edx
0x804a365:   85 c0                           	test eax, eax
0x804a367:   74 07                           	je 0x804a370 <func_1+0xbb5>
0x804a369:   b8 01 00 00 00                  	mov eax, 1
0x804a36e:   eb 05                           	jmp 0x804a375 <func_1+0xbba>
0x804a370:   b8 00 00 00 00                  	mov eax, 0
0x804a375:   f7 d0                           	not eax
0x804a377:   66 89 45 b6                     	mov word ptr [ebp - 0x4a], ax
0x804a37b:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a37f:   0f 84 ab 01 00 00               	je 0x804a530 <func_1+0xd75>
0x804a385:   c7 85 8c fe ff ff 97 0c 70 07   	mov dword ptr [ebp - 0x174], 0x7700c97
0x804a38f:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a393:   0f 84 87 00 00 00               	je 0x804a420 <func_1+0xc65>
0x804a399:   c6 85 8b fe ff ff fc            	mov byte ptr [ebp - 0x175], 0xfc
0x804a3a0:   0f be 85 33 ff ff ff            	movsx eax, byte ptr [ebp - 0xcd]
0x804a3a7:   8d 90 4d 41 1f 48               	lea edx, [eax + 0x481f414d]
0x804a3ad:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a3b1:   83 e0 06                        	and eax, 6
0x804a3b4:   f7 d0                           	not eax
0x804a3b6:   39 c2                           	cmp edx, eax
0x804a3b8:   0f 95 c0                        	setne al
0x804a3bb:   0f b6 c0                        	movzx eax, al
0x804a3be:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a3c1:   80 7d d1 00                     	cmp byte ptr [ebp - 0x2f], 0
0x804a3c5:   74 05                           	je 0x804a3cc <func_1+0xc11>
0x804a3c7:   e9 24 f5 ff ff                  	jmp 0x80498f0 <func_1+0x135>
0x804a3cc:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a3d0:   75 51                           	jne 0x804a423 <func_1+0xc68>
0x804a3d2:   83 7d 8c 06                     	cmp dword ptr [ebp - 0x74], 6
0x804a3d6:   0f 96 c0                        	setbe al
0x804a3d9:   0f b6 c0                        	movzx eax, al
0x804a3dc:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3df:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a3e3:   74 26                           	je 0x804a40b <func_1+0xc50>
0x804a3e5:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a3e8:   0f b7 d0                        	movzx edx, ax
0x804a3eb:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a3ef:   23 45 ac                        	and eax, dword ptr [ebp - 0x54]
0x804a3f2:   3d 4b cd 55 cb                  	cmp eax, 0xcb55cd4b
0x804a3f7:   0f 97 c0                        	seta al
0x804a3fa:   0f b6 c0                        	movzx eax, al
0x804a3fd:   0f af c2                        	imul eax, edx
0x804a400:   85 c0                           	test eax, eax
0x804a402:   74 07                           	je 0x804a40b <func_1+0xc50>
0x804a404:   b8 01 00 00 00                  	mov eax, 1
0x804a409:   eb 05                           	jmp 0x804a410 <func_1+0xc55>
0x804a40b:   b8 00 00 00 00                  	mov eax, 0
0x804a410:   09 45 90                        	or dword ptr [ebp - 0x70], eax
0x804a413:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a416:   35 f1 71 24 85                  	xor eax, 0x852471f1
0x804a41b:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a41e:   eb 2f                           	jmp 0x804a44f <func_1+0xc94>
0x804a420:   90                              	nop 
0x804a421:   eb 01                           	jmp 0x804a424 <func_1+0xc69>
0x804a423:   90                              	nop 
0x804a424:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x804a42a:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a42d:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x804a435:   0f 85 f8 00 00 00               	jne 0x804a533 <func_1+0xd78>
0x804a43b:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x804a442:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a446:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a449:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a44c:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a44f:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a452:   89 c1                           	mov ecx, eax
0x804a454:   0f b7 85 e0 fe ff ff            	movzx eax, word ptr [ebp - 0x120]
0x804a45b:   66 0f be d0                     	movsx dx, al
0x804a45f:   81 bd a4 fe ff ff e0 00 00 00   	cmp dword ptr [ebp - 0x15c], 0xe0
0x804a469:   75 0d                           	jne 0x804a478 <func_1+0xcbd>
0x804a46b:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a46f:   74 07                           	je 0x804a478 <func_1+0xcbd>
0x804a471:   b8 01 00 00 00                  	mov eax, 1
0x804a476:   eb 05                           	jmp 0x804a47d <func_1+0xcc2>
0x804a478:   b8 00 00 00 00                  	mov eax, 0
0x804a47d:   66 98                           	cbw 
0x804a47f:   29 c2                           	sub edx, eax
0x804a481:   89 d0                           	mov eax, edx
0x804a483:   66 39 c1                        	cmp cx, ax
0x804a486:   74 10                           	je 0x804a498 <func_1+0xcdd>
0x804a488:   83 bd a8 fe ff ff 00            	cmp dword ptr [ebp - 0x158], 0
0x804a48f:   74 07                           	je 0x804a498 <func_1+0xcdd>
0x804a491:   b8 01 00 00 00                  	mov eax, 1
0x804a496:   eb 05                           	jmp 0x804a49d <func_1+0xce2>
0x804a498:   b8 00 00 00 00                  	mov eax, 0
0x804a49d:   0f b7 d0                        	movzx edx, ax
0x804a4a0:   0f b7 85 de fe ff ff            	movzx eax, word ptr [ebp - 0x122]
0x804a4a7:   89 c1                           	mov ecx, eax
0x804a4a9:   d3 fa                           	sar edx, cl
0x804a4ab:   89 d0                           	mov eax, edx
0x804a4ad:   0f b7 c0                        	movzx eax, ax
0x804a4b0:   f7 d8                           	neg eax
0x804a4b2:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a4b5:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a4b8:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a4bb:   83 65 c4 fc                     	and dword ptr [ebp - 0x3c], 0xfffffffc
0x804a4bf:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a4c3:   74 19                           	je 0x804a4de <func_1+0xd23>
0x804a4c5:   c7 85 84 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x17c], 0xffffffff
0x804a4cf:   c7 85 84 fe ff ff 1d 87 06 19   	mov dword ptr [ebp - 0x17c], 0x1906871d
0x804a4d9:   e9 ee 02 00 00                  	jmp 0x804a7cc <func_1+0x1011>
0x804a4de:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a4e2:   75 0a                           	jne 0x804a4ee <func_1+0xd33>
0x804a4e4:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a4ec:   74 07                           	je 0x804a4f5 <func_1+0xd3a>
0x804a4ee:   b8 01 00 00 00                  	mov eax, 1
0x804a4f3:   eb 05                           	jmp 0x804a4fa <func_1+0xd3f>
0x804a4f5:   b8 00 00 00 00                  	mov eax, 0
0x804a4fa:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a500:   c7 45 80 de 67 c2 36            	mov dword ptr [ebp - 0x80], 0x36c267de
0x804a507:   c7 85 d8 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x128], 8
0x804a511:   81 7d e4 ff ff 00 00            	cmp dword ptr [ebp - 0x1c], 0xffff
0x804a518:   0f 97 c0                        	seta al
0x804a51b:   0f b6 c0                        	movzx eax, al
0x804a51e:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a521:   80 bd 73 ff ff ff 00            	cmp byte ptr [ebp - 0x8d], 0
0x804a528:   0f 84 9e 02 00 00               	je 0x804a7cc <func_1+0x1011>
0x804a52e:   eb 04                           	jmp 0x804a534 <func_1+0xd79>
0x804a530:   90                              	nop 
0x804a531:   eb 01                           	jmp 0x804a534 <func_1+0xd79>
0x804a533:   90                              	nop 
0x804a534:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a53a:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a53d:   0f b7 85 30 ff ff ff            	movzx eax, word ptr [ebp - 0xd0]
0x804a544:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a54a:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a550:   0b 85 9c fe ff ff               	or eax, dword ptr [ebp - 0x164]
0x804a556:   85 c0                           	test eax, eax
0x804a558:   74 10                           	je 0x804a56a <func_1+0xdaf>
0x804a55a:   83 bd 98 fe ff ff 00            	cmp dword ptr [ebp - 0x168], 0
0x804a561:   74 07                           	je 0x804a56a <func_1+0xdaf>
0x804a563:   ba 01 00 00 00                  	mov edx, 1
0x804a568:   eb 05                           	jmp 0x804a56f <func_1+0xdb4>
0x804a56a:   ba 00 00 00 00                  	mov edx, 0
0x804a56f:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a576:   21 d0                           	and eax, edx
0x804a578:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x804a57b:   8b 7d e4                        	mov edi, dword ptr [ebp - 0x1c]
0x804a57e:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a581:   99                              	cdq 
0x804a582:   f7 ff                           	idiv edi
0x804a584:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a58a:   8b 85 94 fe ff ff               	mov eax, dword ptr [ebp - 0x16c]
0x804a590:   89 c1                           	mov ecx, eax
0x804a592:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a595:   89 c2                           	mov edx, eax
0x804a597:   0f b6 c1                        	movzx eax, cl
0x804a59a:   f6 f2                           	div dl
0x804a59c:   0f b6 c0                        	movzx eax, al
0x804a59f:   0f b6 b5 93 fe ff ff            	movzx esi, byte ptr [ebp - 0x16d]
0x804a5a6:   99                              	cdq 
0x804a5a7:   f7 fe                           	idiv esi
0x804a5a9:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804a5af:   0f 9c c0                        	setl al
0x804a5b2:   0f b6 c0                        	movzx eax, al
0x804a5b5:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a5b8:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a5bb:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a5bf:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a5c3:   0f 9f c0                        	setg al
0x804a5c6:   0f b6 d0                        	movzx edx, al
0x804a5c9:   0f be 85 92 fe ff ff            	movsx eax, byte ptr [ebp - 0x16e]
0x804a5d0:   39 c2                           	cmp edx, eax
0x804a5d2:   0f 9d c0                        	setge al
0x804a5d5:   0f b6 c0                        	movzx eax, al
0x804a5d8:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a5db:   0f b7 95 de fe ff ff            	movzx edx, word ptr [ebp - 0x122]
0x804a5e2:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x804a5e6:   0f 94 c0                        	sete al
0x804a5e9:   0f b6 c0                        	movzx eax, al
0x804a5ec:   66 31 45 d2                     	xor word ptr [ebp - 0x2e], ax
0x804a5f0:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a5f4:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a5f7:   98                              	cwde 
0x804a5f8:   89 c1                           	mov ecx, eax
0x804a5fa:   d3 fb                           	sar ebx, cl
0x804a5fc:   89 d8                           	mov eax, ebx
0x804a5fe:   0f b6 c0                        	movzx eax, al
0x804a601:   c1 e0 07                        	shl eax, 7
0x804a604:   83 f8 02                        	cmp eax, 2
0x804a607:   0f 94 c0                        	sete al
0x804a60a:   0f b6 c0                        	movzx eax, al
0x804a60d:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a610:   0f 96 c0                        	setbe al
0x804a613:   0f b6 c0                        	movzx eax, al
0x804a616:   39 c2                           	cmp edx, eax
0x804a618:   0f 9e c0                        	setle al
0x804a61b:   0f b6 c0                        	movzx eax, al
0x804a61e:   89 c1                           	mov ecx, eax
0x804a620:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804a626:   89 c2                           	mov edx, eax
0x804a628:   89 c8                           	mov eax, ecx
0x804a62a:   0f af c2                        	imul eax, edx
0x804a62d:   0f b6 d0                        	movzx edx, al
0x804a630:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a634:   0f b6 c0                        	movzx eax, al
0x804a637:   29 c2                           	sub edx, eax
0x804a639:   89 d0                           	mov eax, edx
0x804a63b:   89 85 2c ff ff ff               	mov dword ptr [ebp - 0xd4], eax
0x804a641:   e9 86 01 00 00                  	jmp 0x804a7cc <func_1+0x1011>
0x804a646:   66 c7 85 ba fe ff ff 52 59      	mov word ptr [ebp - 0x146], 0x5952
0x804a64f:   c7 85 b4 fe ff ff 85 6b 93 9d   	mov dword ptr [ebp - 0x14c], 0x9d936b85
0x804a659:   c7 85 b0 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x150], 0xfffffffa
0x804a663:   80 bd 69 ff ff ff 00            	cmp byte ptr [ebp - 0x97], 0
0x804a66a:   0f 94 c0                        	sete al
0x804a66d:   0f b6 d0                        	movzx edx, al
0x804a670:   0f b7 85 de fe ff ff            	movzx eax, word ptr [ebp - 0x122]
0x804a677:   0f be d8                        	movsx ebx, al
0x804a67a:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a67d:   0f be c0                        	movsx eax, al
0x804a680:   89 c1                           	mov ecx, eax
0x804a682:   d3 fb                           	sar ebx, cl
0x804a684:   89 d9                           	mov ecx, ebx
0x804a686:   0f be 85 33 ff ff ff            	movsx eax, byte ptr [ebp - 0xcd]
0x804a68d:   39 c1                           	cmp ecx, eax
0x804a68f:   0f 9e c0                        	setle al
0x804a692:   0f b6 c0                        	movzx eax, al
0x804a695:   39 c2                           	cmp edx, eax
0x804a697:   0f 9c c0                        	setl al
0x804a69a:   0f b6 c0                        	movzx eax, al
0x804a69d:   66 89 85 ba fe ff ff            	mov word ptr [ebp - 0x146], ax
0x804a6a4:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a6a7:   f7 d8                           	neg eax
0x804a6a9:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a6ac:   80 bd 32 ff ff ff 00            	cmp byte ptr [ebp - 0xce], 0
0x804a6b3:   75 06                           	jne 0x804a6bb <func_1+0xf00>
0x804a6b5:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a6b9:   74 07                           	je 0x804a6c2 <func_1+0xf07>
0x804a6bb:   b8 01 00 00 00                  	mov eax, 1
0x804a6c0:   eb 05                           	jmp 0x804a6c7 <func_1+0xf0c>
0x804a6c2:   b8 00 00 00 00                  	mov eax, 0
0x804a6c7:   3b 45 bc                        	cmp eax, dword ptr [ebp - 0x44]
0x804a6ca:   7c 08                           	jl 0x804a6d4 <func_1+0xf19>
0x804a6cc:   66 83 bd 2a ff ff ff 00         	cmp word ptr [ebp - 0xd6], 0
0x804a6d4:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a6d7:   66 98                           	cbw 
0x804a6d9:   83 e8 66                        	sub eax, 0x66
0x804a6dc:   0f b7 c0                        	movzx eax, ax
0x804a6df:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x804a6e2:   0f b7 ca                        	movzx ecx, dx
0x804a6e5:   99                              	cdq 
0x804a6e6:   f7 f9                           	idiv ecx
0x804a6e8:   89 d0                           	mov eax, edx
0x804a6ea:   66 0f af 85 ba fe ff ff         	imul ax, word ptr [ebp - 0x146]
0x804a6f2:   0f b7 c0                        	movzx eax, ax
0x804a6f5:   69 c0 06 49 00 00               	imul eax, eax, 0x4906
0x804a6fb:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a6fe:   0f 96 c0                        	setbe al
0x804a701:   0f b6 c0                        	movzx eax, al
0x804a704:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a707:   7c 09                           	jl 0x804a712 <func_1+0xf57>
0x804a709:   83 bd d0 fe ff ff 00            	cmp dword ptr [ebp - 0x130], 0
0x804a710:   74 07                           	je 0x804a719 <func_1+0xf5e>
0x804a712:   b8 01 00 00 00                  	mov eax, 1
0x804a717:   eb 05                           	jmp 0x804a71e <func_1+0xf63>
0x804a719:   b8 00 00 00 00                  	mov eax, 0
0x804a71e:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a721:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x804a728:   0f b7 95 30 ff ff ff            	movzx edx, word ptr [ebp - 0xd0]
0x804a72f:   66 0f be d2                     	movsx dx, dl
0x804a733:   8d 0c 95 00 00 00 00            	lea ecx, [edx*4]
0x804a73a:   ba 00 00 00 00                  	mov edx, 0
0x804a73f:   66 f7 f1                        	div cx
0x804a742:   89 d0                           	mov eax, edx
0x804a744:   66 0d 51 21                     	or ax, 0x2151
0x804a748:   0f b7 c0                        	movzx eax, ax
0x804a74b:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x804a751:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a757:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a75a:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a760:   23 85 b4 fe ff ff               	and eax, dword ptr [ebp - 0x14c]
0x804a766:   35 24 af 00 00                  	xor eax, 0xaf24
0x804a76b:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a76e:   0f 9f c0                        	setg al
0x804a771:   0f b6 c0                        	movzx eax, al
0x804a774:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a77a:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x804a780:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a783:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a786:   89 85 b0 fe ff ff               	mov dword ptr [ebp - 0x150], eax
0x804a78c:   83 bd b0 fe ff ff 00            	cmp dword ptr [ebp - 0x150], 0
0x804a793:   74 27                           	je 0x804a7bc <func_1+0x1001>
0x804a795:   c6 85 af fe ff ff ce            	mov byte ptr [ebp - 0x151], 0xce
0x804a79c:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a7a3:   74 05                           	je 0x804a7aa <func_1+0xfef>
0x804a7a5:   e9 46 f1 ff ff                  	jmp 0x80498f0 <func_1+0x135>
0x804a7aa:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a7ae:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a7b1:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a7b4:   08 85 af fe ff ff               	or byte ptr [ebp - 0x151], al
0x804a7ba:   eb 10                           	jmp 0x804a7cc <func_1+0x1011>
0x804a7bc:   c7 45 a4 bc ad 3e d9            	mov dword ptr [ebp - 0x5c], 0xd93eadbc
0x804a7c3:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a7c9:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a7cc:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804a7d0:   83 e8 01                        	sub eax, 1
0x804a7d3:   88 45 b5                        	mov byte ptr [ebp - 0x4b], al
0x804a7d6:   e9 5a 01 00 00                  	jmp 0x804a935 <func_1+0x117a>
0x804a7db:   c7 85 50 ff ff ff b3 52 b3 3b   	mov dword ptr [ebp - 0xb0], 0x3bb352b3
0x804a7e5:   c7 85 4c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb4], 0xffffffff
0x804a7ef:   c7 85 48 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb8], 1
0x804a7f9:   c7 85 44 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xbc], 0xffffffff
0x804a803:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a809:   89 c2                           	mov edx, eax
0x804a80b:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a80e:   89 c1                           	mov ecx, eax
0x804a810:   89 d0                           	mov eax, edx
0x804a812:   ba 00 00 00 00                  	mov edx, 0
0x804a817:   66 f7 f1                        	div cx
0x804a81a:   89 d0                           	mov eax, edx
0x804a81c:   83 c8 92                        	or eax, 0xffffff92
0x804a81f:   89 c1                           	mov ecx, eax
0x804a821:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a827:   89 c2                           	mov edx, eax
0x804a829:   0f b6 c1                        	movzx eax, cl
0x804a82c:   f6 f2                           	div dl
0x804a82e:   0f b6 c0                        	movzx eax, al
0x804a831:   0b 85 50 ff ff ff               	or eax, dword ptr [ebp - 0xb0]
0x804a837:   85 c0                           	test eax, eax
0x804a839:   74 3e                           	je 0x804a879 <func_1+0x10be>
0x804a83b:   c7 85 40 ff ff ff 40 8c 72 55   	mov dword ptr [ebp - 0xc0], 0x55728c40
0x804a845:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a848:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a84b:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804a851:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a854:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a85a:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x804a85d:   89 c2                           	mov edx, eax
0x804a85f:   81 7d 80 9b 84 e5 c3            	cmp dword ptr [ebp - 0x80], 0xc3e5849b
0x804a866:   0f 94 c0                        	sete al
0x804a869:   0f b6 c0                        	movzx eax, al
0x804a86c:   39 c2                           	cmp edx, eax
0x804a86e:   0f 95 c0                        	setne al
0x804a871:   0f b6 c0                        	movzx eax, al
0x804a874:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a877:   eb 09                           	jmp 0x804a882 <func_1+0x10c7>
0x804a879:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a87c:   31 85 4c ff ff ff               	xor dword ptr [ebp - 0xb4], eax
0x804a882:   83 ad 58 ff ff ff 01            	sub dword ptr [ebp - 0xa8], 1
0x804a889:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a890:   0f be c0                        	movsx eax, al
0x804a893:   f7 d8                           	neg eax
0x804a895:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a898:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804a89b:   89 c2                           	mov edx, eax
0x804a89d:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a8a3:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a8a9:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a8af:   31 d0                           	xor eax, edx
0x804a8b1:   0f be d0                        	movsx edx, al
0x804a8b4:   81 bd 50 ff ff ff fa c2 00 00   	cmp dword ptr [ebp - 0xb0], 0xc2fa
0x804a8be:   c7 45 c8 f6 ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffff6
0x804a8c5:   b8 00 00 00 00                  	mov eax, 0
0x804a8ca:   23 45 88                        	and eax, dword ptr [ebp - 0x78]
0x804a8cd:   85 c0                           	test eax, eax
0x804a8cf:   74 09                           	je 0x804a8da <func_1+0x111f>
0x804a8d1:   83 bd 58 ff ff ff 00            	cmp dword ptr [ebp - 0xa8], 0
0x804a8d8:   75 06                           	jne 0x804a8e0 <func_1+0x1125>
0x804a8da:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a8de:   74 07                           	je 0x804a8e7 <func_1+0x112c>
0x804a8e0:   b9 01 00 00 00                  	mov ecx, 1
0x804a8e5:   eb 05                           	jmp 0x804a8ec <func_1+0x1131>
0x804a8e7:   b9 00 00 00 00                  	mov ecx, 0
0x804a8ec:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a8f0:   09 c8                           	or eax, ecx
0x804a8f2:   83 f8 1d                        	cmp eax, 0x1d
0x804a8f5:   0f 9e c0                        	setle al
0x804a8f8:   89 c1                           	mov ecx, eax
0x804a8fa:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a8fd:   29 c1                           	sub ecx, eax
0x804a8ff:   89 c8                           	mov eax, ecx
0x804a901:   0f be c0                        	movsx eax, al
0x804a904:   89 c1                           	mov ecx, eax
0x804a906:   d3 e2                           	shl edx, cl
0x804a908:   89 d0                           	mov eax, edx
0x804a90a:   85 c0                           	test eax, eax
0x804a90c:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804a912:   0f be c8                        	movsx ecx, al
0x804a915:   ba 39 8e e3 38                  	mov edx, 0x38e38e39
0x804a91a:   89 c8                           	mov eax, ecx
0x804a91c:   f7 ea                           	imul edx
0x804a91e:   89 d0                           	mov eax, edx
0x804a920:   d1 f8                           	sar eax, 1
0x804a922:   c1 f9 1f                        	sar ecx, 0x1f
0x804a925:   89 ca                           	mov edx, ecx
0x804a927:   29 c2                           	sub edx, eax
0x804a929:   0f bf 85 56 ff ff ff            	movsx eax, word ptr [ebp - 0xaa]
0x804a930:   09 d0                           	or eax, edx
0x804a932:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a935:   0f b6 85 55 ff ff ff            	movzx eax, byte ptr [ebp - 0xab]
0x804a93c:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a93f:   0f b6 85 55 ff ff ff            	movzx eax, byte ptr [ebp - 0xab]
0x804a946:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a949:   0f 9f c0                        	setg al
0x804a94c:   0f b6 c0                        	movzx eax, al
0x804a94f:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804a952:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804a958:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x804a95b:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a961:   0f b6 45 b5                     	movzx eax, byte ptr [ebp - 0x4b]
0x804a965:   0f b7 55 b6                     	movzx edx, word ptr [ebp - 0x4a]
0x804a969:   0f b7 7d c0                     	movzx edi, word ptr [ebp - 0x40]
0x804a96d:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804a973:   0f b7 75 ce                     	movzx esi, word ptr [ebp - 0x32]
0x804a977:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804a97d:   0f bf 5d 86                     	movsx ebx, word ptr [ebp - 0x7a]
0x804a981:   89 9d 68 fe ff ff               	mov dword ptr [ebp - 0x198], ebx
0x804a987:   0f b6 7d d1                     	movzx edi, byte ptr [ebp - 0x2f]
0x804a98b:   0f bf 75 d2                     	movsx esi, word ptr [ebp - 0x2e]
0x804a98f:   0f be 5d eb                     	movsx ebx, byte ptr [ebp - 0x15]
0x804a993:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x804a997:   50                              	push eax
0x804a998:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a99e:   52                              	push edx
0x804a99f:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a9a2:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a9a5:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a9a8:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a9ae:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a9b4:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a9ba:   57                              	push edi
0x804a9bb:   56                              	push esi
0x804a9bc:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a9bf:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a9c2:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a9c5:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a9c8:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a9cb:   ff 75 88                        	push dword ptr [ebp - 0x78]
0x804a9ce:   53                              	push ebx
0x804a9cf:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a9d2:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a9d5:   51                              	push ecx
0x804a9d6:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a9d9:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a9dc:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a9df:   e8 70 ec ff ff                  	call 0x8049654 <set_var>
0x804a9e4:   83 c4 60                        	add esp, 0x60
0x804a9e7:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a9ed:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a9f0:   5b                              	pop ebx
0x804a9f1:   5e                              	pop esi
0x804a9f2:   5f                              	pop edi
0x804a9f3:   5d                              	pop ebp
0x804a9f4:   c3                              	ret 
; function: main at 0x804a9f5 -- 0x804ad47
0x804a9f5:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a9f9:   83 e4 f0                        	and esp, 0xfffffff0
0x804a9fc:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a9ff:   55                              	push ebp
0x804aa00:   89 e5                           	mov ebp, esp
0x804aa02:   53                              	push ebx
0x804aa03:   51                              	push ecx
0x804aa04:   83 ec 10                        	sub esp, 0x10
0x804aa07:   e8 84 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa0c:   81 c3 f4 25 00 00               	add ebx, 0x25f4
0x804aa12:   89 c8                           	mov eax, ecx
0x804aa14:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804aa1b:   83 38 02                        	cmp dword ptr [eax], 2
0x804aa1e:   75 26                           	jne 0x804aa46 <main+0x51>
0x804aa20:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804aa23:   83 c0 04                        	add eax, 4
0x804aa26:   8b 00                           	mov eax, dword ptr [eax]
0x804aa28:   83 ec 08                        	sub esp, 8
0x804aa2b:   8d 93 2c de ff ff               	lea edx, [ebx - 0x21d4]
0x804aa31:   52                              	push edx
0x804aa32:   50                              	push eax
0x804aa33:   e8 c8 d8 ff ff                  	call 0x8048300 <strcmp>
0x804aa38:   83 c4 10                        	add esp, 0x10
0x804aa3b:   85 c0                           	test eax, eax
0x804aa3d:   75 07                           	jne 0x804aa46 <main+0x51>
0x804aa3f:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804aa46:   e8 0b da ff ff                  	call 0x8048456 <platform_main_begin>
0x804aa4b:   e8 1b ea ff ff                  	call 0x804946b <crc32_gentab>
0x804aa50:   e8 66 ed ff ff                  	call 0x80497bb <func_1>
0x804aa55:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804aa5b:   83 ec 04                        	sub esp, 4
0x804aa5e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa61:   8d 93 2e de ff ff               	lea edx, [ebx - 0x21d2]
0x804aa67:   52                              	push edx
0x804aa68:   50                              	push eax
0x804aa69:   e8 09 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa6e:   83 c4 10                        	add esp, 0x10
0x804aa71:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804aa77:   83 ec 04                        	sub esp, 4
0x804aa7a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa7d:   8d 93 32 de ff ff               	lea edx, [ebx - 0x21ce]
0x804aa83:   52                              	push edx
0x804aa84:   50                              	push eax
0x804aa85:   e8 ed ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa8a:   83 c4 10                        	add esp, 0x10
0x804aa8d:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804aa93:   89 c2                           	mov edx, eax
0x804aa95:   83 ec 04                        	sub esp, 4
0x804aa98:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa9b:   8d 83 37 de ff ff               	lea eax, [ebx - 0x21c9]
0x804aaa1:   50                              	push eax
0x804aaa2:   52                              	push edx
0x804aaa3:   e8 cf ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaa8:   83 c4 10                        	add esp, 0x10
0x804aaab:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804aab2:   0f b7 c0                        	movzx eax, ax
0x804aab5:   83 ec 04                        	sub esp, 4
0x804aab8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aabb:   8d 93 3c de ff ff               	lea edx, [ebx - 0x21c4]
0x804aac1:   52                              	push edx
0x804aac2:   50                              	push eax
0x804aac3:   e8 af ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aac8:   83 c4 10                        	add esp, 0x10
0x804aacb:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804aad1:   89 c2                           	mov edx, eax
0x804aad3:   83 ec 04                        	sub esp, 4
0x804aad6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aad9:   8d 83 41 de ff ff               	lea eax, [ebx - 0x21bf]
0x804aadf:   50                              	push eax
0x804aae0:   52                              	push edx
0x804aae1:   e8 91 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aae6:   83 c4 10                        	add esp, 0x10
0x804aae9:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aaef:   83 ec 04                        	sub esp, 4
0x804aaf2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaf5:   8d 93 46 de ff ff               	lea edx, [ebx - 0x21ba]
0x804aafb:   52                              	push edx
0x804aafc:   50                              	push eax
0x804aafd:   e8 75 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab02:   83 c4 10                        	add esp, 0x10
0x804ab05:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804ab0c:   0f be c0                        	movsx eax, al
0x804ab0f:   83 ec 04                        	sub esp, 4
0x804ab12:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab15:   8d 93 4b de ff ff               	lea edx, [ebx - 0x21b5]
0x804ab1b:   52                              	push edx
0x804ab1c:   50                              	push eax
0x804ab1d:   e8 55 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab22:   83 c4 10                        	add esp, 0x10
0x804ab25:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804ab2b:   83 ec 04                        	sub esp, 4
0x804ab2e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab31:   8d 93 50 de ff ff               	lea edx, [ebx - 0x21b0]
0x804ab37:   52                              	push edx
0x804ab38:   50                              	push eax
0x804ab39:   e8 39 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab3e:   83 c4 10                        	add esp, 0x10
0x804ab41:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ab47:   83 ec 04                        	sub esp, 4
0x804ab4a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab4d:   8d 93 55 de ff ff               	lea edx, [ebx - 0x21ab]
0x804ab53:   52                              	push edx
0x804ab54:   50                              	push eax
0x804ab55:   e8 1d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab5a:   83 c4 10                        	add esp, 0x10
0x804ab5d:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804ab63:   83 ec 04                        	sub esp, 4
0x804ab66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab69:   8d 93 5a de ff ff               	lea edx, [ebx - 0x21a6]
0x804ab6f:   52                              	push edx
0x804ab70:   50                              	push eax
0x804ab71:   e8 01 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab76:   83 c4 10                        	add esp, 0x10
0x804ab79:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ab7f:   83 ec 04                        	sub esp, 4
0x804ab82:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab85:   8d 93 5f de ff ff               	lea edx, [ebx - 0x21a1]
0x804ab8b:   52                              	push edx
0x804ab8c:   50                              	push eax
0x804ab8d:   e8 e5 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ab92:   83 c4 10                        	add esp, 0x10
0x804ab95:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ab9b:   89 c2                           	mov edx, eax
0x804ab9d:   83 ec 04                        	sub esp, 4
0x804aba0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aba3:   8d 83 64 de ff ff               	lea eax, [ebx - 0x219c]
0x804aba9:   50                              	push eax
0x804abaa:   52                              	push edx
0x804abab:   e8 c7 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abb0:   83 c4 10                        	add esp, 0x10
0x804abb3:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804abb9:   83 ec 04                        	sub esp, 4
0x804abbc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abbf:   8d 93 6a de ff ff               	lea edx, [ebx - 0x2196]
0x804abc5:   52                              	push edx
0x804abc6:   50                              	push eax
0x804abc7:   e8 ab e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abcc:   83 c4 10                        	add esp, 0x10
0x804abcf:   0f b7 83 54 00 00 00            	movzx eax, word ptr [ebx + 0x54]
0x804abd6:   98                              	cwde 
0x804abd7:   83 ec 04                        	sub esp, 4
0x804abda:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abdd:   8d 93 70 de ff ff               	lea edx, [ebx - 0x2190]
0x804abe3:   52                              	push edx
0x804abe4:   50                              	push eax
0x804abe5:   e8 8d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804abea:   83 c4 10                        	add esp, 0x10
0x804abed:   0f b6 83 56 00 00 00            	movzx eax, byte ptr [ebx + 0x56]
0x804abf4:   0f b6 c0                        	movzx eax, al
0x804abf7:   83 ec 04                        	sub esp, 4
0x804abfa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804abfd:   8d 93 76 de ff ff               	lea edx, [ebx - 0x218a]
0x804ac03:   52                              	push edx
0x804ac04:   50                              	push eax
0x804ac05:   e8 6d e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac0a:   83 c4 10                        	add esp, 0x10
0x804ac0d:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804ac14:   98                              	cwde 
0x804ac15:   83 ec 04                        	sub esp, 4
0x804ac18:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac1b:   8d 93 7c de ff ff               	lea edx, [ebx - 0x2184]
0x804ac21:   52                              	push edx
0x804ac22:   50                              	push eax
0x804ac23:   e8 4f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac28:   83 c4 10                        	add esp, 0x10
0x804ac2b:   0f b7 83 5a 00 00 00            	movzx eax, word ptr [ebx + 0x5a]
0x804ac32:   0f b7 c0                        	movzx eax, ax
0x804ac35:   83 ec 04                        	sub esp, 4
0x804ac38:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac3b:   8d 93 82 de ff ff               	lea edx, [ebx - 0x217e]
0x804ac41:   52                              	push edx
0x804ac42:   50                              	push eax
0x804ac43:   e8 2f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac48:   83 c4 10                        	add esp, 0x10
0x804ac4b:   0f b7 83 a6 04 00 00            	movzx eax, word ptr [ebx + 0x4a6]
0x804ac52:   0f b7 c0                        	movzx eax, ax
0x804ac55:   83 ec 04                        	sub esp, 4
0x804ac58:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac5b:   8d 93 88 de ff ff               	lea edx, [ebx - 0x2178]
0x804ac61:   52                              	push edx
0x804ac62:   50                              	push eax
0x804ac63:   e8 0f e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac68:   83 c4 10                        	add esp, 0x10
0x804ac6b:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804ac71:   89 c2                           	mov edx, eax
0x804ac73:   83 ec 04                        	sub esp, 4
0x804ac76:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac79:   8d 83 8e de ff ff               	lea eax, [ebx - 0x2172]
0x804ac7f:   50                              	push eax
0x804ac80:   52                              	push edx
0x804ac81:   e8 f1 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac86:   83 c4 10                        	add esp, 0x10
0x804ac89:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804ac8f:   83 ec 04                        	sub esp, 4
0x804ac92:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac95:   8d 93 94 de ff ff               	lea edx, [ebx - 0x216c]
0x804ac9b:   52                              	push edx
0x804ac9c:   50                              	push eax
0x804ac9d:   e8 d5 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804aca2:   83 c4 10                        	add esp, 0x10
0x804aca5:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804acab:   89 c2                           	mov edx, eax
0x804acad:   83 ec 04                        	sub esp, 4
0x804acb0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb3:   8d 83 9a de ff ff               	lea eax, [ebx - 0x2166]
0x804acb9:   50                              	push eax
0x804acba:   52                              	push edx
0x804acbb:   e8 b7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc0:   83 c4 10                        	add esp, 0x10
0x804acc3:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804acca:   0f b7 c0                        	movzx eax, ax
0x804accd:   83 ec 04                        	sub esp, 4
0x804acd0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd3:   8d 93 a0 de ff ff               	lea edx, [ebx - 0x2160]
0x804acd9:   52                              	push edx
0x804acda:   50                              	push eax
0x804acdb:   e8 97 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace0:   83 c4 10                        	add esp, 0x10
0x804ace3:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804ace9:   89 c2                           	mov edx, eax
0x804aceb:   83 ec 04                        	sub esp, 4
0x804acee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf1:   8d 83 a6 de ff ff               	lea eax, [ebx - 0x215a]
0x804acf7:   50                              	push eax
0x804acf8:   52                              	push edx
0x804acf9:   e8 79 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfe:   83 c4 10                        	add esp, 0x10
0x804ad01:   0f b6 83 70 00 00 00            	movzx eax, byte ptr [ebx + 0x70]
0x804ad08:   0f b6 c0                        	movzx eax, al
0x804ad0b:   83 ec 04                        	sub esp, 4
0x804ad0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad11:   8d 93 ac de ff ff               	lea edx, [ebx - 0x2154]
0x804ad17:   52                              	push edx
0x804ad18:   50                              	push eax
0x804ad19:   e8 59 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1e:   83 c4 10                        	add esp, 0x10
0x804ad21:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ad27:   f7 d0                           	not eax
0x804ad29:   83 ec 08                        	sub esp, 8
0x804ad2c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2f:   50                              	push eax
0x804ad30:   e8 31 d7 ff ff                  	call 0x8048466 <platform_main_end>
0x804ad35:   83 c4 10                        	add esp, 0x10
0x804ad38:   b8 00 00 00 00                  	mov eax, 0
0x804ad3d:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ad40:   59                              	pop ecx
0x804ad41:   5b                              	pop ebx
0x804ad42:   5d                              	pop ebp
0x804ad43:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ad46:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ad47 -- 0x804ad4b
0x804ad47:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ad4a:   c3                              	ret 
; data inside code section at 0x804ad4b -- 0x804ad50
0x804ad4b:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804ad50 -- 0x804adad
0x804ad50:   55                              	push ebp
0x804ad51:   57                              	push edi
0x804ad52:   56                              	push esi
0x804ad53:   53                              	push ebx
0x804ad54:   e8 37 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ad59:   81 c3 a7 22 00 00               	add ebx, 0x22a7
0x804ad5f:   83 ec 0c                        	sub esp, 0xc
0x804ad62:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ad66:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ad6c:   e8 5b d5 ff ff                  	call 0x80482cc <_init>
0x804ad71:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ad77:   29 c6                           	sub esi, eax
0x804ad79:   c1 fe 02                        	sar esi, 2
0x804ad7c:   85 f6                           	test esi, esi
0x804ad7e:   74 25                           	je 0x804ada5 <__libc_csu_init+0x55>
0x804ad80:   31 ff                           	xor edi, edi
0x804ad82:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ad88:   83 ec 04                        	sub esp, 4
0x804ad8b:   55                              	push ebp
0x804ad8c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad90:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ad94:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ad9b:   83 c7 01                        	add edi, 1
0x804ad9e:   83 c4 10                        	add esp, 0x10
0x804ada1:   39 fe                           	cmp esi, edi
0x804ada3:   75 e3                           	jne 0x804ad88 <__libc_csu_init+0x38>
0x804ada5:   83 c4 0c                        	add esp, 0xc
0x804ada8:   5b                              	pop ebx
0x804ada9:   5e                              	pop esi
0x804adaa:   5f                              	pop edi
0x804adab:   5d                              	pop ebp
0x804adac:   c3                              	ret 
; data inside code section at 0x804adad -- 0x804adb0
0x804adad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804adb0 -- 0x804adb2
0x804adb0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804adb4 -- 0x804adc8
0x804adb4:   53                              	push ebx
0x804adb5:   83 ec 08                        	sub esp, 8
0x804adb8:   e8 d3 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804adbd:   81 c3 43 22 00 00               	add ebx, 0x2243
0x804adc3:   83 c4 08                        	add esp, 8
0x804adc6:   5b                              	pop ebx
0x804adc7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc ad 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804adc8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804add8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804ade8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804adf8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ae08:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ae18:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ae28:   25 64 0a 00 31 00 67 5f  39 00 67 5f 31 30 00 67   |%d..1.g_9.g_10.g|
0x804ae38:   5f 31 31 00 67 5f 31 34  00 67 5f 32 33 00 67 5f   |_11.g_14.g_23.g_|
0x804ae48:   32 36 00 67 5f 35 36 00  67 5f 35 37 00 67 5f 35   |26.g_56.g_57.g_5|
0x804ae58:   38 00 67 5f 37 32 00 67  5f 38 32 00 67 5f 31 30   |8.g_72.g_82.g_10|
0x804ae68:   34 00 67 5f 31 35 39 00  67 5f 31 36 30 00 67 5f   |4.g_159.g_160.g_|
0x804ae78:   31 36 31 00 67 5f 31 37  33 00 67 5f 31 37 34 00   |161.g_173.g_174.|
0x804ae88:   67 5f 32 33 32 00 67 5f  32 37 36 00 67 5f 32 38   |g_232.g_276.g_28|
0x804ae98:   30 00 67 5f 32 38 33 00  67 5f 32 39 39 00 67 5f   |0.g_283.g_299.g_|
0x804aea8:   34 31 31 00 67 5f 34 31  33 00 00 00 00 00 00 3f   |411.g_413......?|
0x804aeb8:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804aec8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804aed8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804aee8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804aef8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804af08:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804af18:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804af20:   01 1b 03 3b b8 02 00 00  56 00 00 00 d0 d3 ff ff   |...;....V.......|
0x804af30:   e8 02 00 00 10 d4 ff ff  0c 03 00 00 60 d4 ff ff   |............`...|
0x804af40:   d4 02 00 00 36 d5 ff ff  20 03 00 00 46 d5 ff ff   |....6... ...F...|
0x804af50:   40 03 00 00 74 d5 ff ff  64 03 00 00 92 d5 ff ff   |@...t...d.......|
0x804af60:   84 03 00 00 ba d5 ff ff  a4 03 00 00 e4 d5 ff ff   |................|
0x804af70:   c4 03 00 00 0d d6 ff ff  e4 03 00 00 50 d6 ff ff   |............P...|
0x804af80:   04 04 00 00 91 d6 ff ff  24 04 00 00 e9 d6 ff ff   |........$.......|
0x804af90:   48 04 00 00 3b d7 ff ff  6c 04 00 00 78 d7 ff ff   |H...;...l...x...|
0x804afa0:   8c 04 00 00 af d7 ff ff  ac 04 00 00 ce d7 ff ff   |................|
0x804afb0:   cc 04 00 00 f8 d7 ff ff  ec 04 00 00 24 d8 ff ff   |............$...|
0x804afc0:   0c 05 00 00 4f d8 ff ff  2c 05 00 00 98 d8 ff ff   |....O...,.......|
0x804afd0:   4c 05 00 00 df d8 ff ff  6c 05 00 00 39 d9 ff ff   |L.......l...9...|
0x804afe0:   90 05 00 00 8d d9 ff ff  b4 05 00 00 cc d9 ff ff   |................|
0x804aff0:   d4 05 00 00 05 da ff ff  f4 05 00 00 27 da ff ff   |............'...|
0x804b000:   14 06 00 00 75 da ff ff  34 06 00 00 b1 da ff ff   |....u...4.......|
0x804b010:   54 06 00 00 3a db ff ff  74 06 00 00 6c db ff ff   |T...:...t...l...|
0x804b020:   94 06 00 00 9c db ff ff  b4 06 00 00 e1 db ff ff   |................|
0x804b030:   d4 06 00 00 20 dc ff ff  f4 06 00 00 52 dc ff ff   |.... .......R...|
0x804b040:   14 07 00 00 7e dc ff ff  34 07 00 00 9c dc ff ff   |....~...4.......|
0x804b050:   54 07 00 00 c4 dc ff ff  74 07 00 00 e9 dc ff ff   |T.......t.......|
0x804b060:   94 07 00 00 0e dd ff ff  b4 07 00 00 45 dd ff ff   |............E...|
0x804b070:   d4 07 00 00 79 dd ff ff  f4 07 00 00 cb dd ff ff   |....y...........|
0x804b080:   18 08 00 00 17 de ff ff  3c 08 00 00 4e de ff ff   |........<...N...|
0x804b090:   5c 08 00 00 7f de ff ff  7c 08 00 00 9e de ff ff   |\.......|.......|
0x804b0a0:   9c 08 00 00 c8 de ff ff  bc 08 00 00 f0 de ff ff   |................|
0x804b0b0:   dc 08 00 00 19 df ff ff  fc 08 00 00 55 df ff ff   |............U...|
0x804b0c0:   1c 09 00 00 8f df ff ff  3c 09 00 00 e2 df ff ff   |........<.......|
0x804b0d0:   60 09 00 00 2f e0 ff ff  84 09 00 00 67 e0 ff ff   |`.../.......g...|
0x804b0e0:   a4 09 00 00 99 e0 ff ff  c4 09 00 00 ad e0 ff ff   |................|
0x804b0f0:   e4 09 00 00 c4 e0 ff ff  04 0a 00 00 d9 e0 ff ff   |................|
0x804b100:   24 0a 00 00 ef e0 ff ff  44 0a 00 00 16 e1 ff ff   |$.......D.......|
0x804b110:   64 0a 00 00 3b e1 ff ff  84 0a 00 00 7a e1 ff ff   |d...;.......z...|
0x804b120:   a4 0a 00 00 b3 e1 ff ff  c4 0a 00 00 df e1 ff ff   |................|
0x804b130:   e4 0a 00 00 05 e2 ff ff  04 0b 00 00 47 e2 ff ff   |............G...|
0x804b140:   24 0b 00 00 89 e2 ff ff  44 0b 00 00 cb e2 ff ff   |$.......D.......|
0x804b150:   64 0b 00 00 40 e3 ff ff  84 0b 00 00 9d e3 ff ff   |d...@...........|
0x804b160:   a4 0b 00 00 fa e3 ff ff  c4 0b 00 00 57 e4 ff ff   |............W...|
0x804b170:   e4 0b 00 00 e7 e4 ff ff  04 0c 00 00 4b e5 ff ff   |............K...|
0x804b180:   24 0c 00 00 bb e5 ff ff  44 0c 00 00 02 e6 ff ff   |$.......D.......|
0x804b190:   68 0c 00 00 57 e6 ff ff  88 0c 00 00 9e e6 ff ff   |h...W...........|
0x804b1a0:   ac 0c 00 00 06 e7 ff ff  d0 0c 00 00 34 e7 ff ff   |............4...|
0x804b1b0:   f4 0c 00 00 9b e8 ff ff  24 0d 00 00 d5 fa ff ff   |........$.......|
0x804b1c0:   54 0d 00 00 27 fe ff ff  8c 0d 00 00 30 fe ff ff   |T...'.......0...|
0x804b1d0:   a0 0d 00 00 90 fe ff ff  ec 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b1dc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b1ec:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b1fc:   84 d1 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b20c:   30 00 00 00 e0 d0 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b21c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b22c:   10 00 00 00 54 00 00 00  fc d0 ff ff 08 00 00 00   |....T...........|
0x804b23c:   00 00 00 00 1c 00 00 00  68 00 00 00 0e d2 ff ff   |........h.......|
0x804b24c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b25c:   04 04 00 00 20 00 00 00  88 00 00 00 fe d1 ff ff   |.... ...........|
0x804b26c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b27c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b28c:   08 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b29c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b2ac:   06 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b2bc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b2cc:   0e d2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b2dc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b2ec:   18 d2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b2fc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b30c:   21 d2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |!...C....A....B.|
0x804b31c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b32c:   44 d2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |D...A....A....B.|
0x804b33c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b34c:   65 d2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |e...X....A....B.|
0x804b35c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b36c:   90 01 00 00 99 d2 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b37c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b38c:   1c 00 00 00 b4 01 00 00  c7 d2 ff ff 3d 00 00 00   |............=...|
0x804b39c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b3ac:   1c 00 00 00 d4 01 00 00  e4 d2 ff ff 37 00 00 00   |............7...|
0x804b3bc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b3cc:   1c 00 00 00 f4 01 00 00  fb d2 ff ff 1f 00 00 00   |................|
0x804b3dc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b3ec:   1c 00 00 00 14 02 00 00  fa d2 ff ff 2a 00 00 00   |............*...|
0x804b3fc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b40c:   1c 00 00 00 34 02 00 00  04 d3 ff ff 2c 00 00 00   |....4.......,...|
0x804b41c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b42c:   1c 00 00 00 54 02 00 00  10 d3 ff ff 2b 00 00 00   |....T.......+...|
0x804b43c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b44c:   1c 00 00 00 74 02 00 00  1b d3 ff ff 49 00 00 00   |....t.......I...|
0x804b45c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b46c:   1c 00 00 00 94 02 00 00  44 d3 ff ff 47 00 00 00   |........D...G...|
0x804b47c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b48c:   20 00 00 00 b4 02 00 00  6b d3 ff ff 5a 00 00 00   | .......k...Z...|
0x804b49c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b4ac:   c5 0c 04 04 20 00 00 00  d8 02 00 00 a1 d3 ff ff   |.... ...........|
0x804b4bc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b4cc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b4dc:   d1 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b4ec:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b4fc:   f0 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b50c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b51c:   09 d4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b52c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b53c:   0b d4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b54c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b55c:   39 d4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |9...<....A....B.|
0x804b56c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b57c:   55 d4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |U........A....B.|
0x804b58c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b59c:   be d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b5ac:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b5bc:   d0 d4 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b5cc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b5dc:   e0 d4 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b5ec:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b5fc:   05 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b60c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b61c:   24 d5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |$...2....A....B.|
0x804b62c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b63c:   36 d5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |6...,....A....B.|
0x804b64c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b65c:   42 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |B........A....B.|
0x804b66c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b67c:   40 d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |@...(....A....B.|
0x804b68c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b69c:   48 d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |H...%....A....B.|
0x804b6ac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b6bc:   4d d5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |M...%....A....B.|
0x804b6cc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b6dc:   52 d5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |R...7....A....B.|
0x804b6ec:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b6fc:   69 d5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |i...4....A....B.|
0x804b70c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b71c:   7d d5 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |}...R....A....B.|
0x804b72c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b73c:   60 05 00 00 ab d5 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b74c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b75c:   1c 00 00 00 84 05 00 00  d3 d5 ff ff 37 00 00 00   |............7...|
0x804b76c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b77c:   1c 00 00 00 a4 05 00 00  ea d5 ff ff 31 00 00 00   |............1...|
0x804b78c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b79c:   1c 00 00 00 c4 05 00 00  fb d5 ff ff 1f 00 00 00   |................|
0x804b7ac:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b7bc:   1c 00 00 00 e4 05 00 00  fa d5 ff ff 2a 00 00 00   |............*...|
0x804b7cc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b7dc:   1c 00 00 00 04 06 00 00  04 d6 ff ff 28 00 00 00   |............(...|
0x804b7ec:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b7fc:   1c 00 00 00 24 06 00 00  0c d6 ff ff 29 00 00 00   |....$.......)...|
0x804b80c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b81c:   1c 00 00 00 44 06 00 00  15 d6 ff ff 3c 00 00 00   |....D.......<...|
0x804b82c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b83c:   1c 00 00 00 64 06 00 00  31 d6 ff ff 3a 00 00 00   |....d...1...:...|
0x804b84c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b85c:   20 00 00 00 84 06 00 00  4b d6 ff ff 53 00 00 00   | .......K...S...|
0x804b86c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b87c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 7a d6 ff ff   |.... .......z...|
0x804b88c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b89c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b8ac:   a3 d6 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b8bc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b8cc:   bb d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8dc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b8ec:   cd d6 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b8fc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b90c:   c1 d6 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b91c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b92c:   b8 d6 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b93c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b94c:   ad d6 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b95c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b96c:   a3 d6 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b97c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b98c:   aa d6 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b99c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b9ac:   af d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b9bc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b9cc:   ce d6 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b9dc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b9ec:   e7 d6 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9fc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804ba0c:   f3 d6 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804ba1c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804ba2c:   f9 d6 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba3c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804ba4c:   1b d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804ba5c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804ba6c:   3d d7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |=...B....A....B.|
0x804ba7c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804ba8c:   5f d7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |_...u....A....B.|
0x804ba9c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804baac:   b4 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804babc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bacc:   f1 d7 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804badc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804baec:   2e d8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bafc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bb0c:   6b d8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |k........A....B.|
0x804bb1c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bb2c:   db d8 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804bb3c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bb4c:   1f d9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bb5c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bb6c:   6f d9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |o...G....A....B.|
0x804bb7c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bb8c:   b0 09 00 00 92 d9 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bb9c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bbac:   d0 09 00 00 c7 d9 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804bbbc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bbcc:   20 00 00 00 f4 09 00 00  ea d9 ff ff 68 00 00 00   | ...........h...|
0x804bbdc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bbec:   0c 04 04 00 20 00 00 00  18 0a 00 00 2e da ff ff   |.... ...........|
0x804bbfc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804bc0c:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804bc1c:   38 da ff ff 67 01 00 00  00 41 0e 08 85 02 42 0d   |8...g....A....B.|
0x804bc2c:   05 46 87 03 86 04 83 05  03 5a 01 c3 41 c6 41 c7   |.F.......Z..A.A.|
0x804bc3c:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804bc4c:   6f db ff ff 3a 12 00 00  00 41 0e 08 85 02 42 0d   |o...:....A....B.|
0x804bc5c:   05 49 87 03 86 04 83 05  03 2a 12 c3 41 c6 41 c7   |.I.......*..A.A.|
0x804bc6c:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804bc7c:   79 ed ff ff 52 03 00 00  00 44 0c 01 00 47 10 05   |y...R....D...G..|
0x804bc8c:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 3d   |.u.D..ux....u|.=|
0x804bc9c:   03 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804bcac:   10 00 00 00 d4 0a 00 00  93 f0 ff ff 04 00 00 00   |................|
0x804bcbc:   00 00 00 00 48 00 00 00  e8 0a 00 00 88 f0 ff ff   |....H...........|
0x804bccc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bcdc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bcec:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bcfc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bd0c:   10 00 00 00 34 0b 00 00  9c f0 ff ff 02 00 00 00   |....4...........|
0x804bd1c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 ad 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 27 a9 66 05   |............'.f.|
0x804d028:   fe ff ff ff ca ed 29 e2  01 9c 93 62 f7 ff ff ff   |......)....b....|
0x804d038:   04 00 00 00 f1 93 53 48  01 00 00 00 19 c7 9a 1c   |......SH........|
0x804d048:   ff ff ff ff 02 00 00 00  e6 a8 3b f7 67 a6 36 00   |..........;.g.6.|
0x804d058:   77 ce 8d c0 fa ff ff ff  a8 ed 04 db ff ff ff ff   |w...............|
0x804d068:   01 00 00 00 2a 95 9e ce  68 ??                     |....*...h?      |
