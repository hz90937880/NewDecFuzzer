;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:59:02
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 70 d2 ff ff               	lea eax, [ebx - 0x2d90]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 d2 ff ff               	lea eax, [ebx - 0x2df0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 eb ad 04 08               	mov eax, 0x804adeb
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 84 e0 04 08                  	mov eax, 0x804e084
0x80483a5:   3d 84 e0 04 08                  	cmp eax, 0x804e084
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 84 e0 04 08                  	push 0x804e084
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 84 e0 04 08                  	mov eax, 0x804e084
0x80483e5:   2d 84 e0 04 08                  	sub eax, 0x804e084
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 84 e0 04 08                  	push 0x804e084
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 a3 2d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 8f 2d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 d2 ff ff               	lea edx, [eax - 0x2d70]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 62 2d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 44 2d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 1c 2d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f2 2c 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 c9 2c 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 86 2c 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 44 2c 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ec 2b 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 9b 2b 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 5e 2b 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 27 2b 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 08 2b 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 de 2a 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b2 2a 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 87 2a 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 3e 2a 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 f6 29 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 9c 29 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 49 29 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 0a 29 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 d4 28 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b2 28 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 64 28 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 28 28 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 9f 27 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 6d 27 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 3d 27 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 f8 26 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 b9 26 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 87 26 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 58 26 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 3a 26 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 12 26 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ed 25 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 c8 25 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 91 25 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 5c 25 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 0a 25 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 bf 24 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 88 24 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 57 24 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 38 24 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 0e 24 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 e6 23 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 bd 23 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 81 23 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 46 23 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 f3 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 a7 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 6f 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 40 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 2c 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 15 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 00 22 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 ea 21 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 c3 21 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 9e 21 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 5f 21 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 26 21 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 fa 20 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 d4 20 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 94 d3 ff ff               	fld dword ptr [eax - 0x2c6c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 94 d3 ff ff               	fld dword ptr [eax - 0x2c6c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 98 d3 ff ff               	fld dword ptr [eax - 0x2c68]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 92 20 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 94 d3 ff ff               	fld dword ptr [eax - 0x2c6c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 94 d3 ff ff               	fld dword ptr [eax - 0x2c6c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 98 d3 ff ff               	fld dword ptr [eax - 0x2c68]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 50 20 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 9c d3 ff ff               	fld dword ptr [eax - 0x2c64]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 a0 d3 ff ff               	fld dword ptr [eax - 0x2c60]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a4 d3 ff ff               	fld dword ptr [eax - 0x2c5c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 0e 20 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a8 d3 ff ff               	fld dword ptr [eax - 0x2c58]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 ac d3 ff ff               	fld dword ptr [eax - 0x2c54]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 b0 d3 ff ff               	fld dword ptr [eax - 0x2c50]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 96 1f 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b8 d3 ff ff               	fld qword ptr [eax - 0x2c48]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b8 d3 ff ff               	fld qword ptr [eax - 0x2c48]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 39 1f 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b8 d3 ff ff               	fld qword ptr [eax - 0x2c48]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b8 d3 ff ff               	fld qword ptr [eax - 0x2c48]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 dc 1e 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c8 d3 ff ff               	fld qword ptr [eax - 0x2c38]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 d0 d3 ff ff               	fld qword ptr [eax - 0x2c30]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d8 d3 ff ff               	fld qword ptr [eax - 0x2c28]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 7f 1e 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 e0 d3 ff ff               	fld qword ptr [eax - 0x2c20]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e8 d3 ff ff               	fld qword ptr [eax - 0x2c18]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 f0 d3 ff ff               	fld qword ptr [eax - 0x2c10]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 ef 1d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f8 d3 ff ff               	fld dword ptr [eax - 0x2c08]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 fc d3 ff ff               	fld dword ptr [eax - 0x2c04]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 8b 1d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 1a 1d 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 d7 1c 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 d2 ff ff               	lea eax, [ebx - 0x2d60]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 d2 ff ff               	lea eax, [ebx - 0x2d3c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049833
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 70                        	sub esp, 0x70
0x804962f:   e8 d1 1b 00 00                  	call 0x804b205 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049640:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049646:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049649:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804964c:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x804964f:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049652:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049655:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049658:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804965b:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804965e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049661:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049664:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049667:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804966a:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x804966d:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049670:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049673:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049676:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049679:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804967c:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804967f:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049682:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049685:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049688:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804968b:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804968e:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x8049692:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049695:   89 c8                           	mov eax, ecx
0x8049697:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804969a:   89 d8                           	mov eax, ebx
0x804969c:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x804969f:   89 f0                           	mov eax, esi
0x80496a1:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496a5:   89 f8                           	mov eax, edi
0x80496a7:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496ab:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496af:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496b3:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b7:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496bb:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496bf:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496c2:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496c6:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496ca:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496ce:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496d2:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496d6:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496d9:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496dd:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496e1:   0f b6 45 90                     	movzx eax, byte ptr [ebp - 0x70]
0x80496e5:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496e8:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496ec:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496ef:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496f3:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x80496f7:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x80496fb:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x80496ff:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049702:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049708:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x804970c:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x8049712:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049715:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804971b:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804971f:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049725:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049728:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804972e:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049732:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049738:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804973c:   66 89 82 3a 00 00 00            	mov word ptr [edx + 0x3a], ax
0x8049743:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049746:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804974c:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804974f:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049755:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049758:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x804975e:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049761:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049767:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804976b:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049772:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049775:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804977b:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804977e:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049784:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049787:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x804978d:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049790:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x8049796:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804979a:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x80497a1:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497a5:   66 89 82 62 00 00 00            	mov word ptr [edx + 0x62], ax
0x80497ac:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497b0:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497b6:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497ba:   66 89 82 66 00 00 00            	mov word ptr [edx + 0x66], ax
0x80497c1:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497c4:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497ca:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497ce:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x80497d5:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497d9:   88 82 6e 00 00 00               	mov byte ptr [edx + 0x6e], al
0x80497df:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497e3:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x80497ea:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x80497ed:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x80497f3:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497f7:   88 82 78 00 00 00               	mov byte ptr [edx + 0x78], al
0x80497fd:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049800:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049806:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x804980a:   88 82 c4 04 00 00               	mov byte ptr [edx + 0x4c4], al
0x8049810:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049814:   66 89 82 80 00 00 00            	mov word ptr [edx + 0x80], ax
0x804981b:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804981f:   66 89 82 82 00 00 00            	mov word ptr [edx + 0x82], ax
0x8049826:   b8 00 00 00 00                  	mov eax, 0
0x804982b:   83 c4 70                        	add esp, 0x70
0x804982e:   5b                              	pop ebx
0x804982f:   5e                              	pop esi
0x8049830:   5f                              	pop edi
0x8049831:   5d                              	pop ebp
0x8049832:   c3                              	ret 
; function: func_1 at 0x8049833 -- 0x804adeb
0x8049833:   55                              	push ebp
0x8049834:   89 e5                           	mov ebp, esp
0x8049836:   57                              	push edi
0x8049837:   56                              	push esi
0x8049838:   53                              	push ebx
0x8049839:   81 ec a8 01 00 00               	sub esp, 0x1a8
0x804983f:   e8 bd 19 00 00                  	call 0x804b201 <__x86.get_pc_thunk.ax>
0x8049844:   05 bc 47 00 00                  	add eax, 0x47bc
0x8049849:   c7 85 50 ff ff ff 2e 6f ad 70   	mov dword ptr [ebp - 0xb0], 0x70ad6f2e
0x8049853:   c6 45 f3 ff                     	mov byte ptr [ebp - 0xd], 0xff
0x8049857:   c7 45 ec cc 43 d7 60            	mov dword ptr [ebp - 0x14], 0x60d743cc
0x804985e:   c6 45 eb fd                     	mov byte ptr [ebp - 0x15], 0xfd
0x8049862:   c7 45 e4 18 d3 2d 9a            	mov dword ptr [ebp - 0x1c], 0x9a2dd318
0x8049869:   c6 45 e3 04                     	mov byte ptr [ebp - 0x1d], 4
0x804986d:   66 c7 45 e0 be 2c               	mov word ptr [ebp - 0x20], 0x2cbe
0x8049873:   c7 45 dc e5 40 45 2c            	mov dword ptr [ebp - 0x24], 0x2c4540e5
0x804987a:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x8049881:   c7 85 4c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb4], 1
0x804988b:   c7 45 d4 07 00 00 00            	mov dword ptr [ebp - 0x2c], 7
0x8049892:   66 c7 45 d2 55 a1               	mov word ptr [ebp - 0x2e], 0xa155
0x8049898:   c7 45 cc 53 16 c2 2b            	mov dword ptr [ebp - 0x34], 0x2bc21653
0x804989f:   c7 85 48 ff ff ff 07 9a 29 b9   	mov dword ptr [ebp - 0xb8], 0xb9299a07
0x80498a9:   c7 45 c8 01 00 00 00            	mov dword ptr [ebp - 0x38], 1
0x80498b0:   c7 45 c4 ff ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffff
0x80498b7:   66 c7 45 c2 b4 7d               	mov word ptr [ebp - 0x3e], 0x7db4
0x80498bd:   66 c7 85 46 ff ff ff be 18      	mov word ptr [ebp - 0xba], 0x18be
0x80498c6:   c6 45 c1 1f                     	mov byte ptr [ebp - 0x3f], 0x1f
0x80498ca:   66 c7 45 be d1 71               	mov word ptr [ebp - 0x42], 0x71d1
0x80498d0:   c7 85 40 ff ff ff a0 20 ea 66   	mov dword ptr [ebp - 0xc0], 0x66ea20a0
0x80498da:   66 c7 45 bc 03 00               	mov word ptr [ebp - 0x44], 3
0x80498e0:   c6 85 3f ff ff ff 6e            	mov byte ptr [ebp - 0xc1], 0x6e
0x80498e7:   66 c7 45 ba ff ff               	mov word ptr [ebp - 0x46], 0xffff
0x80498ed:   c7 45 b4 eb 34 51 ed            	mov dword ptr [ebp - 0x4c], 0xed5134eb
0x80498f4:   c6 45 b3 f1                     	mov byte ptr [ebp - 0x4d], 0xf1
0x80498f8:   c7 45 ac 42 f0 89 62            	mov dword ptr [ebp - 0x54], 0x6289f042
0x80498ff:   c6 85 3e ff ff ff 00            	mov byte ptr [ebp - 0xc2], 0
0x8049906:   66 c7 45 aa 9d 32               	mov word ptr [ebp - 0x56], 0x329d
0x804990c:   66 c7 45 a8 ff ff               	mov word ptr [ebp - 0x58], 0xffff
0x8049912:   c6 85 3d ff ff ff de            	mov byte ptr [ebp - 0xc3], 0xde
0x8049919:   c7 45 a4 a9 0c 78 7e            	mov dword ptr [ebp - 0x5c], 0x7e780ca9
0x8049920:   c7 45 a0 36 84 9e de            	mov dword ptr [ebp - 0x60], 0xde9e8436
0x8049927:   c7 45 9c fe ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffffe
0x804992e:   c7 45 98 ff ff ff ff            	mov dword ptr [ebp - 0x68], 0xffffffff
0x8049935:   66 c7 85 3a ff ff ff f8 ff      	mov word ptr [ebp - 0xc6], 0xfff8
0x804993e:   66 c7 45 96 01 00               	mov word ptr [ebp - 0x6a], 1
0x8049944:   c7 45 90 42 20 a7 19            	mov dword ptr [ebp - 0x70], 0x19a72042
0x804994b:   c7 85 34 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xcc], 4
0x8049955:   66 c7 85 32 ff ff ff 58 58      	mov word ptr [ebp - 0xce], 0x5858
0x804995e:   c7 45 8c 00 00 00 00            	mov dword ptr [ebp - 0x74], 0
0x8049965:   83 bd 50 ff ff ff 01            	cmp dword ptr [ebp - 0xb0], 1
0x804996c:   75 09                           	jne 0x8049977 <func_1+0x144>
0x804996e:   80 bd 3d ff ff ff 00            	cmp byte ptr [ebp - 0xc3], 0
0x8049975:   74 07                           	je 0x804997e <func_1+0x14b>
0x8049977:   b8 01 00 00 00                  	mov eax, 1
0x804997c:   eb 05                           	jmp 0x8049983 <func_1+0x150>
0x804997e:   b8 00 00 00 00                  	mov eax, 0
0x8049983:   0f b7 c0                        	movzx eax, ax
0x8049986:   0f b6 8d 3d ff ff ff            	movzx ecx, byte ptr [ebp - 0xc3]
0x804998d:   99                              	cdq 
0x804998e:   f7 f9                           	idiv ecx
0x8049990:   89 55 a4                        	mov dword ptr [ebp - 0x5c], edx
0x8049993:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049996:   ba 00 00 00 00                  	mov edx, 0
0x804999b:   f7 b5 50 ff ff ff               	div dword ptr [ebp - 0xb0]
0x80499a1:   89 c7                           	mov edi, eax
0x80499a3:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x80499a9:   ba 00 00 00 00                  	mov edx, 0
0x80499ae:   f7 f7                           	div edi
0x80499b0:   89 c2                           	mov edx, eax
0x80499b2:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x80499b5:   09 d0                           	or eax, edx
0x80499b7:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x80499ba:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x80499bd:   2a 85 3d ff ff ff               	sub al, byte ptr [ebp - 0xc3]
0x80499c3:   0f be c0                        	movsx eax, al
0x80499c6:   ba 58 00 00 00                  	mov edx, 0x58
0x80499cb:   89 c1                           	mov ecx, eax
0x80499cd:   d3 e2                           	shl edx, cl
0x80499cf:   89 d0                           	mov eax, edx
0x80499d1:   0b 85 50 ff ff ff               	or eax, dword ptr [ebp - 0xb0]
0x80499d7:   85 c0                           	test eax, eax
0x80499d9:   74 7a                           	je 0x8049a55 <func_1+0x222>
0x80499db:   66 c7 85 cc fe ff ff 01 00      	mov word ptr [ebp - 0x134], 1
0x80499e4:   c7 85 c8 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x138], 0xffffffff
0x80499ee:   c7 85 c4 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x13c], 8
0x80499f8:   80 6d f3 01                     	sub byte ptr [ebp - 0xd], 1
0x80499fc:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049a00:   89 85 c8 fe ff ff               	mov dword ptr [ebp - 0x138], eax
0x8049a06:   8b 85 c8 fe ff ff               	mov eax, dword ptr [ebp - 0x138]
0x8049a0c:   83 f8 01                        	cmp eax, 1
0x8049a0f:   0f 96 c0                        	setbe al
0x8049a12:   0f b6 c0                        	movzx eax, al
0x8049a15:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049a1b:   72 09                           	jb 0x8049a26 <func_1+0x1f3>
0x8049a1d:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049a24:   74 07                           	je 0x8049a2d <func_1+0x1fa>
0x8049a26:   b8 01 00 00 00                  	mov eax, 1
0x8049a2b:   eb 05                           	jmp 0x8049a32 <func_1+0x1ff>
0x8049a2d:   b8 00 00 00 00                  	mov eax, 0
0x8049a32:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a35:   b8 a9 df ff ff                  	mov eax, 0xffffdfa9
0x8049a3a:   21 85 c4 fe ff ff               	and dword ptr [ebp - 0x13c], eax
0x8049a40:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049a44:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049a47:   0f 92 c0                        	setb al
0x8049a4a:   0f b6 c0                        	movzx eax, al
0x8049a4d:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049a50:   e9 6f 0b 00 00                  	jmp 0x804a5c4 <func_1+0xd91>
0x8049a55:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x8049a5f:   c7 45 88 e2 22 74 fd            	mov dword ptr [ebp - 0x78], 0xfd7422e2
0x8049a66:   c7 45 84 ff ff ff ff            	mov dword ptr [ebp - 0x7c], 0xffffffff
0x8049a6d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a70:   0f b7 c0                        	movzx eax, ax
0x8049a73:   c1 e0 07                        	shl eax, 7
0x8049a76:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049a7c:   72 07                           	jb 0x8049a85 <func_1+0x252>
0x8049a7e:   b8 10 00 00 00                  	mov eax, 0x10
0x8049a83:   eb 05                           	jmp 0x8049a8a <func_1+0x257>
0x8049a85:   b8 00 00 00 00                  	mov eax, 0
0x8049a8a:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049a8d:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049a91:   ba 01 00 00 00                  	mov edx, 1
0x8049a96:   29 c2                           	sub edx, eax
0x8049a98:   89 d0                           	mov eax, edx
0x8049a9a:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049a9d:   0f 93 c0                        	setae al
0x8049aa0:   0f b6 c0                        	movzx eax, al
0x8049aa3:   39 85 2c ff ff ff               	cmp dword ptr [ebp - 0xd4], eax
0x8049aa9:   0f 93 c0                        	setae al
0x8049aac:   0f b6 d0                        	movzx edx, al
0x8049aaf:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ab2:   0f b6 c0                        	movzx eax, al
0x8049ab5:   01 d0                           	add eax, edx
0x8049ab7:   89 c2                           	mov edx, eax
0x8049ab9:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049abc:   31 d0                           	xor eax, edx
0x8049abe:   34 ff                           	xor al, 0xff
0x8049ac0:   0f b7 d0                        	movzx edx, ax
0x8049ac3:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049ac9:   0f b7 c0                        	movzx eax, ax
0x8049acc:   89 c1                           	mov ecx, eax
0x8049ace:   d3 fa                           	sar edx, cl
0x8049ad0:   89 d0                           	mov eax, edx
0x8049ad2:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ad5:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049ad8:   33 85 2c ff ff ff               	xor eax, dword ptr [ebp - 0xd4]
0x8049ade:   89 c2                           	mov edx, eax
0x8049ae0:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049ae4:   39 c2                           	cmp edx, eax
0x8049ae6:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049ae9:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049aec:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049af0:   0f 84 88 09 00 00               	je 0x804a47e <func_1+0xc4b>
0x8049af6:   c7 45 80 01 00 00 00            	mov dword ptr [ebp - 0x80], 1
0x8049afd:   c7 85 7c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x84], 0xffffffff
0x8049b07:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x8049b11:   c7 85 1c ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xe4], 8
0x8049b1b:   66 c7 85 1a ff ff ff fd ff      	mov word ptr [ebp - 0xe6], 0xfffd
0x8049b24:   81 7d ec ff f2 68 14            	cmp dword ptr [ebp - 0x14], 0x1468f2ff
0x8049b2b:   0f 96 c0                        	setbe al
0x8049b2e:   0f b6 d0                        	movzx edx, al
0x8049b31:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049b35:   74 1e                           	je 0x8049b55 <func_1+0x322>
0x8049b37:   81 7d e4 db b9 00 00            	cmp dword ptr [ebp - 0x1c], 0xb9db
0x8049b3e:   0f 94 c0                        	sete al
0x8049b41:   0f b6 c8                        	movzx ecx, al
0x8049b44:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049b47:   0f b7 c0                        	movzx eax, ax
0x8049b4a:   39 c1                           	cmp ecx, eax
0x8049b4c:   74 07                           	je 0x8049b55 <func_1+0x322>
0x8049b4e:   b8 01 00 00 00                  	mov eax, 1
0x8049b53:   eb 05                           	jmp 0x8049b5a <func_1+0x327>
0x8049b55:   b8 00 00 00 00                  	mov eax, 0
0x8049b5a:   98                              	cwde 
0x8049b5b:   39 c2                           	cmp edx, eax
0x8049b5d:   74 0d                           	je 0x8049b6c <func_1+0x339>
0x8049b5f:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x8049b63:   74 07                           	je 0x8049b6c <func_1+0x339>
0x8049b65:   b8 01 00 00 00                  	mov eax, 1
0x8049b6a:   eb 05                           	jmp 0x8049b71 <func_1+0x33e>
0x8049b6c:   b8 00 00 00 00                  	mov eax, 0
0x8049b71:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049b74:   75 0c                           	jne 0x8049b82 <func_1+0x34f>
0x8049b76:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049b7a:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049b7d:   e9 05 07 00 00                  	jmp 0x804a287 <func_1+0xa54>
0x8049b82:   c6 85 19 ff ff ff 00            	mov byte ptr [ebp - 0xe7], 0
0x8049b89:   c7 85 74 ff ff ff b4 b1 42 4a   	mov dword ptr [ebp - 0x8c], 0x4a42b1b4
0x8049b93:   c6 85 73 ff ff ff 93            	mov byte ptr [ebp - 0x8d], 0x93
0x8049b9a:   c7 85 14 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xec], 1
0x8049ba4:   c7 85 10 ff ff ff 2e ea 54 08   	mov dword ptr [ebp - 0xf0], 0x854ea2e
0x8049bae:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x8049bb8:   c7 85 08 ff ff ff 79 54 62 98   	mov dword ptr [ebp - 0xf8], 0x98625479
0x8049bc2:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x8049bc9:   e9 cd 02 00 00                  	jmp 0x8049e9b <func_1+0x668>
0x8049bce:   c6 85 f7 fe ff ff 30            	mov byte ptr [ebp - 0x109], 0x30
0x8049bd5:   c7 85 f0 fe ff ff 6f 33 42 6c   	mov dword ptr [ebp - 0x110], 0x6c42336f
0x8049bdf:   c7 85 6c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0x94], 0xfffffffb
0x8049be9:   c7 85 ec fe ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffff7
0x8049bf3:   c7 85 e8 fe ff ff 5b ef 87 a0   	mov dword ptr [ebp - 0x118], 0xa087ef5b
0x8049bfd:   c7 45 e4 13 00 00 00            	mov dword ptr [ebp - 0x1c], 0x13
0x8049c04:   eb 0b                           	jmp 0x8049c11 <func_1+0x3de>
0x8049c06:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c09:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049c0d:   83 6d e4 06                     	sub dword ptr [ebp - 0x1c], 6
0x8049c11:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049c15:   79 ef                           	jns 0x8049c06 <func_1+0x3d3>
0x8049c17:   83 bd 2c ff ff ff 00            	cmp dword ptr [ebp - 0xd4], 0
0x8049c1e:   0f 94 c0                        	sete al
0x8049c21:   0f b6 c0                        	movzx eax, al
0x8049c24:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x8049c28:   74 0d                           	je 0x8049c37 <func_1+0x404>
0x8049c2a:   83 7d 80 00                     	cmp dword ptr [ebp - 0x80], 0
0x8049c2e:   74 07                           	je 0x8049c37 <func_1+0x404>
0x8049c30:   b9 01 00 00 00                  	mov ecx, 1
0x8049c35:   eb 05                           	jmp 0x8049c3c <func_1+0x409>
0x8049c37:   b9 00 00 00 00                  	mov ecx, 0
0x8049c3c:   0f b6 95 f7 fe ff ff            	movzx edx, byte ptr [ebp - 0x109]
0x8049c43:   39 d1                           	cmp ecx, edx
0x8049c45:   0f 9f c2                        	setg dl
0x8049c48:   0f b6 ca                        	movzx ecx, dl
0x8049c4b:   0f b6 95 19 ff ff ff            	movzx edx, byte ptr [ebp - 0xe7]
0x8049c52:   31 ca                           	xor edx, ecx
0x8049c54:   09 d0                           	or eax, edx
0x8049c56:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049c59:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049c5d:   0f 84 dd 00 00 00               	je 0x8049d40 <func_1+0x50d>
0x8049c63:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x8049c6d:   c7 85 e0 fe ff ff 3c 83 90 42   	mov dword ptr [ebp - 0x120], 0x4290833c
0x8049c77:   83 45 dc 01                     	add dword ptr [ebp - 0x24], 1
0x8049c7b:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049c7e:   0f b6 d0                        	movzx edx, al
0x8049c81:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x8049c85:   89 c1                           	mov ecx, eax
0x8049c87:   d3 e2                           	shl edx, cl
0x8049c89:   0f b6 85 19 ff ff ff            	movzx eax, byte ptr [ebp - 0xe7]
0x8049c90:   39 c2                           	cmp edx, eax
0x8049c92:   0f 95 c0                        	setne al
0x8049c95:   0f b6 d0                        	movzx edx, al
0x8049c98:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c9b:   98                              	cwde 
0x8049c9c:   0f af d0                        	imul edx, eax
0x8049c9f:   0f b6 85 19 ff ff ff            	movzx eax, byte ptr [ebp - 0xe7]
0x8049ca6:   39 c2                           	cmp edx, eax
0x8049ca8:   0f 9f c0                        	setg al
0x8049cab:   0f b6 c0                        	movzx eax, al
0x8049cae:   39 85 f0 fe ff ff               	cmp dword ptr [ebp - 0x110], eax
0x8049cb4:   0f 9d c0                        	setge al
0x8049cb7:   0f b6 d0                        	movzx edx, al
0x8049cba:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049cbe:   09 d0                           	or eax, edx
0x8049cc0:   3d 45 be be c8                  	cmp eax, 0xc8bebe45
0x8049cc5:   74 07                           	je 0x8049cce <func_1+0x49b>
0x8049cc7:   b8 ad 00 00 00                  	mov eax, 0xad
0x8049ccc:   eb 05                           	jmp 0x8049cd3 <func_1+0x4a0>
0x8049cce:   b8 ac 00 00 00                  	mov eax, 0xac
0x8049cd3:   8b 95 e4 fe ff ff               	mov edx, dword ptr [ebp - 0x11c]
0x8049cd9:   0f b6 fa                        	movzx edi, dl
0x8049cdc:   99                              	cdq 
0x8049cdd:   f7 ff                           	idiv edi
0x8049cdf:   89 c2                           	mov edx, eax
0x8049ce1:   0f b6 85 19 ff ff ff            	movzx eax, byte ptr [ebp - 0xe7]
0x8049ce8:   31 d0                           	xor eax, edx
0x8049cea:   09 85 6c ff ff ff               	or dword ptr [ebp - 0x94], eax
0x8049cf0:   83 6d d4 01                     	sub dword ptr [ebp - 0x2c], 1
0x8049cf4:   c7 85 e4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x11c], 0xffffffff
0x8049cfe:   81 4d 88 7a fc 94 30            	or dword ptr [ebp - 0x78], 0x3094fc7a
0x8049d05:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049d09:   0f be d0                        	movsx edx, al
0x8049d0c:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049d0f:   0f be c0                        	movsx eax, al
0x8049d12:   0f af c2                        	imul eax, edx
0x8049d15:   c1 e8 1f                        	shr eax, 0x1f
0x8049d18:   0f b6 d0                        	movzx edx, al
0x8049d1b:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049d1f:   39 c2                           	cmp edx, eax
0x8049d21:   7f 07                           	jg 0x8049d2a <func_1+0x4f7>
0x8049d23:   b8 01 00 00 00                  	mov eax, 1
0x8049d28:   eb 05                           	jmp 0x8049d2f <func_1+0x4fc>
0x8049d2a:   b8 00 00 00 00                  	mov eax, 0
0x8049d2f:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x8049d32:   0f 97 c0                        	seta al
0x8049d35:   0f b6 c0                        	movzx eax, al
0x8049d38:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x8049d3e:   eb 07                           	jmp 0x8049d47 <func_1+0x514>
0x8049d40:   c7 45 e4 ae 5b ff f1            	mov dword ptr [ebp - 0x1c], 0xf1ff5bae
0x8049d47:   66 83 4d d2 01                  	or word ptr [ebp - 0x2e], 1
0x8049d4c:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x8049d50:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049d53:   74 07                           	je 0x8049d5c <func_1+0x529>
0x8049d55:   ba 10 00 00 00                  	mov edx, 0x10
0x8049d5a:   eb 05                           	jmp 0x8049d61 <func_1+0x52e>
0x8049d5c:   ba 00 00 00 00                  	mov edx, 0
0x8049d61:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049d67:   29 c2                           	sub edx, eax
0x8049d69:   89 d0                           	mov eax, edx
0x8049d6b:   01 c0                           	add eax, eax
0x8049d6d:   0f b7 c0                        	movzx eax, ax
0x8049d70:   69 c0 9d 70 00 00               	imul eax, eax, 0x709d
0x8049d76:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049d79:   0f 9f c0                        	setg al
0x8049d7c:   0f b6 d0                        	movzx edx, al
0x8049d7f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049d82:   01 d0                           	add eax, edx
0x8049d84:   85 c0                           	test eax, eax
0x8049d86:   0f 84 c5 00 00 00               	je 0x8049e51 <func_1+0x61e>
0x8049d8c:   66 c7 85 da fe ff ff a6 7f      	mov word ptr [ebp - 0x126], 0x7fa6
0x8049d95:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049d98:   0f b7 d0                        	movzx edx, ax
0x8049d9b:   0f b6 85 3d ff ff ff            	movzx eax, byte ptr [ebp - 0xc3]
0x8049da2:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049da8:   76 07                           	jbe 0x8049db1 <func_1+0x57e>
0x8049daa:   b8 04 00 00 00                  	mov eax, 4
0x8049daf:   eb 05                           	jmp 0x8049db6 <func_1+0x583>
0x8049db1:   b8 00 00 00 00                  	mov eax, 0
0x8049db6:   89 c1                           	mov ecx, eax
0x8049db8:   d3 fa                           	sar edx, cl
0x8049dba:   89 d0                           	mov eax, edx
0x8049dbc:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049dbf:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x8049dc3:   74 10                           	je 0x8049dd5 <func_1+0x5a2>
0x8049dc5:   83 bd ec fe ff ff 00            	cmp dword ptr [ebp - 0x114], 0
0x8049dcc:   74 07                           	je 0x8049dd5 <func_1+0x5a2>
0x8049dce:   b8 01 00 00 00                  	mov eax, 1
0x8049dd3:   eb 05                           	jmp 0x8049dda <func_1+0x5a7>
0x8049dd5:   b8 00 00 00 00                  	mov eax, 0
0x8049dda:   0f be d0                        	movsx edx, al
0x8049ddd:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049de0:   0f be c0                        	movsx eax, al
0x8049de3:   0f af c2                        	imul eax, edx
0x8049de6:   83 f8 ff                        	cmp eax, -1
0x8049de9:   75 07                           	jne 0x8049df2 <func_1+0x5bf>
0x8049deb:   80 bd 19 ff ff ff 00            	cmp byte ptr [ebp - 0xe7], 0
0x8049df2:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049df6:   81 7d 88 08 8f 72 1c            	cmp dword ptr [ebp - 0x78], 0x1c728f08
0x8049dfd:   0f 95 c0                        	setne al
0x8049e00:   0f b6 c0                        	movzx eax, al
0x8049e03:   0f bf 55 d2                     	movsx edx, word ptr [ebp - 0x2e]
0x8049e07:   81 ca f4 a0 00 00               	or edx, 0xa0f4
0x8049e0d:   39 d0                           	cmp eax, edx
0x8049e0f:   0f 95 c0                        	setne al
0x8049e12:   0f b6 c0                        	movzx eax, al
0x8049e15:   21 45 84                        	and dword ptr [ebp - 0x7c], eax
0x8049e18:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x8049e1c:   0f b6 85 19 ff ff ff            	movzx eax, byte ptr [ebp - 0xe7]
0x8049e23:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x8049e26:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x8049e2c:   83 bd 6c ff ff ff ff            	cmp dword ptr [ebp - 0x94], -1
0x8049e33:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049e36:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049e39:   0f 94 c0                        	sete al
0x8049e3c:   0f b6 c0                        	movzx eax, al
0x8049e3f:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x8049e42:   8b 85 ec fe ff ff               	mov eax, dword ptr [ebp - 0x114]
0x8049e48:   c1 e0 0f                        	shl eax, 0xf
0x8049e4b:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x8049e4f:   eb 46                           	jmp 0x8049e97 <func_1+0x664>
0x8049e51:   c7 85 dc fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x124], 0xfffffff9
0x8049e5b:   81 7d 98 6c 82 ee 48            	cmp dword ptr [ebp - 0x68], 0x48ee826c
0x8049e62:   0f 97 c0                        	seta al
0x8049e65:   0f b6 c0                        	movzx eax, al
0x8049e68:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x8049e6b:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e6e:   31 85 f0 fe ff ff               	xor dword ptr [ebp - 0x110], eax
0x8049e74:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049e7a:   89 85 e8 fe ff ff               	mov dword ptr [ebp - 0x118], eax
0x8049e80:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049e87:   0f b6 85 73 ff ff ff            	movzx eax, byte ptr [ebp - 0x8d]
0x8049e8e:   83 e8 01                        	sub eax, 1
0x8049e91:   88 85 73 ff ff ff               	mov byte ptr [ebp - 0x8d], al
0x8049e97:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x8049e9b:   83 7d 98 24                     	cmp dword ptr [ebp - 0x68], 0x24
0x8049e9f:   0f 86 29 fd ff ff               	jbe 0x8049bce <func_1+0x39b>
0x8049ea5:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049ea8:   23 85 7c ff ff ff               	and eax, dword ptr [ebp - 0x84]
0x8049eae:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049eb1:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049eb5:   0f 84 c6 01 00 00               	je 0x804a081 <func_1+0x84e>
0x8049ebb:   c7 85 f8 fe ff ff cc 5c 3d fc   	mov dword ptr [ebp - 0x108], 0xfc3d5ccc
0x8049ec5:   80 6d e3 01                     	sub byte ptr [ebp - 0x1d], 1
0x8049ec9:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x8049ecd:   0f bf 45 e0                     	movsx eax, word ptr [ebp - 0x20]
0x8049ed1:   ba 01 00 00 00                  	mov edx, 1
0x8049ed6:   89 c1                           	mov ecx, eax
0x8049ed8:   d3 fa                           	sar edx, cl
0x8049eda:   89 d0                           	mov eax, edx
0x8049edc:   0f bf d0                        	movsx edx, ax
0x8049edf:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049ee5:   98                              	cwde 
0x8049ee6:   01 d0                           	add eax, edx
0x8049ee8:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049eeb:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049eee:   89 c2                           	mov edx, eax
0x8049ef0:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049ef3:   09 d0                           	or eax, edx
0x8049ef5:   0f bf d0                        	movsx edx, ax
0x8049ef8:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x8049efe:   98                              	cwde 
0x8049eff:   0f af c2                        	imul eax, edx
0x8049f02:   83 f8 f8                        	cmp eax, -8
0x8049f05:   7c 10                           	jl 0x8049f17 <func_1+0x6e4>
0x8049f07:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x8049f0e:   74 07                           	je 0x8049f17 <func_1+0x6e4>
0x8049f10:   b8 01 00 00 00                  	mov eax, 1
0x8049f15:   eb 05                           	jmp 0x8049f1c <func_1+0x6e9>
0x8049f17:   b8 00 00 00 00                  	mov eax, 0
0x8049f1c:   0f be c0                        	movsx eax, al
0x8049f1f:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x8049f22:   0f be fa                        	movsx edi, dl
0x8049f25:   99                              	cdq 
0x8049f26:   f7 ff                           	idiv edi
0x8049f28:   0f b7 d0                        	movzx edx, ax
0x8049f2b:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049f2f:   89 c1                           	mov ecx, eax
0x8049f31:   d3 fa                           	sar edx, cl
0x8049f33:   0f b7 85 3a ff ff ff            	movzx eax, word ptr [ebp - 0xc6]
0x8049f3a:   29 c2                           	sub edx, eax
0x8049f3c:   89 d0                           	mov eax, edx
0x8049f3e:   0c 80                           	or al, 0x80
0x8049f40:   0f b6 95 19 ff ff ff            	movzx edx, byte ptr [ebp - 0xe7]
0x8049f47:   66 09 45 d2                     	or word ptr [ebp - 0x2e], ax
0x8049f4b:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x8049f4f:   39 c2                           	cmp edx, eax
0x8049f51:   7c 07                           	jl 0x8049f5a <func_1+0x727>
0x8049f53:   ba 09 00 00 00                  	mov edx, 9
0x8049f58:   eb 05                           	jmp 0x8049f5f <func_1+0x72c>
0x8049f5a:   ba 08 00 00 00                  	mov edx, 8
0x8049f5f:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049f65:   0f b6 c0                        	movzx eax, al
0x8049f68:   0f af c2                        	imul eax, edx
0x8049f6b:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049f6e:   83 7d 84 fe                     	cmp dword ptr [ebp - 0x7c], -2
0x8049f72:   0f 9d c0                        	setge al
0x8049f75:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049f78:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049f7c:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049f7f:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049f83:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049f86:   0f 94 c0                        	sete al
0x8049f89:   0f b6 c0                        	movzx eax, al
0x8049f8c:   09 45 80                        	or dword ptr [ebp - 0x80], eax
0x8049f8f:   b8 01 00 00 00                  	mov eax, 1
0x8049f94:   3b 85 4c ff ff ff               	cmp eax, dword ptr [ebp - 0xb4]
0x8049f9a:   0f 9c c0                        	setl al
0x8049f9d:   0f b6 c0                        	movzx eax, al
0x8049fa0:   0f af c3                        	imul eax, ebx
0x8049fa3:   85 c0                           	test eax, eax
0x8049fa5:   74 04                           	je 0x8049fab <func_1+0x778>
0x8049fa7:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049fab:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049fae:   0f b7 c0                        	movzx eax, ax
0x8049fb1:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049fb5:   0f b7 ca                        	movzx ecx, dx
0x8049fb8:   99                              	cdq 
0x8049fb9:   f7 f9                           	idiv ecx
0x8049fbb:   89 55 d8                        	mov dword ptr [ebp - 0x28], edx
0x8049fbe:   0f bf 4d d2                     	movsx ecx, word ptr [ebp - 0x2e]
0x8049fc2:   ba 3d 53 19 6a                  	mov edx, 0x6a19533d
0x8049fc7:   89 c8                           	mov eax, ecx
0x8049fc9:   f7 ea                           	imul edx
0x8049fcb:   c1 fa 1c                        	sar edx, 0x1c
0x8049fce:   89 c8                           	mov eax, ecx
0x8049fd0:   c1 f8 1f                        	sar eax, 0x1f
0x8049fd3:   29 c2                           	sub edx, eax
0x8049fd5:   89 d0                           	mov eax, edx
0x8049fd7:   69 c0 c0 00 9b 26               	imul eax, eax, 0x269b00c0
0x8049fdd:   29 c1                           	sub ecx, eax
0x8049fdf:   89 c8                           	mov eax, ecx
0x8049fe1:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x8049fe7:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049fea:   39 85 78 ff ff ff               	cmp dword ptr [ebp - 0x88], eax
0x8049ff0:   0f 94 c0                        	sete al
0x8049ff3:   0f b6 c0                        	movzx eax, al
0x8049ff6:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049ff9:   83 bd f8 fe ff ff 05            	cmp dword ptr [ebp - 0x108], 5
0x804a000:   0f 9e c0                        	setle al
0x804a003:   0f b6 c0                        	movzx eax, al
0x804a006:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a009:   76 07                           	jbe 0x804a012 <func_1+0x7df>
0x804a00b:   b8 04 00 00 00                  	mov eax, 4
0x804a010:   eb 05                           	jmp 0x804a017 <func_1+0x7e4>
0x804a012:   b8 05 00 00 00                  	mov eax, 5
0x804a017:   21 85 74 ff ff ff               	and dword ptr [ebp - 0x8c], eax
0x804a01d:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a023:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a026:   0f 96 c0                        	setbe al
0x804a029:   0f b6 d0                        	movzx edx, al
0x804a02c:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a030:   01 d0                           	add eax, edx
0x804a032:   98                              	cwde 
0x804a033:   0f b6 4d e3                     	movzx ecx, byte ptr [ebp - 0x1d]
0x804a037:   99                              	cdq 
0x804a038:   f7 f9                           	idiv ecx
0x804a03a:   89 d0                           	mov eax, edx
0x804a03c:   85 c0                           	test eax, eax
0x804a03e:   75 07                           	jne 0x804a047 <func_1+0x814>
0x804a040:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a047:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a04a:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a04d:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a051:   81 bd 48 ff ff ff b1 00 00 00   	cmp dword ptr [ebp - 0xb8], 0xb1
0x804a05b:   0f 95 c0                        	setne al
0x804a05e:   0f b6 c0                        	movzx eax, al
0x804a061:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x804a064:   0f 9d c0                        	setge al
0x804a067:   0f b6 c0                        	movzx eax, al
0x804a06a:   09 85 1c ff ff ff               	or dword ptr [ebp - 0xe4], eax
0x804a070:   8b 85 1c ff ff ff               	mov eax, dword ptr [ebp - 0xe4]
0x804a076:   0b 45 80                        	or eax, dword ptr [ebp - 0x80]
0x804a079:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a07c:   e9 06 02 00 00                  	jmp 0x804a287 <func_1+0xa54>
0x804a081:   c7 85 04 ff ff ff 16 f5 02 3e   	mov dword ptr [ebp - 0xfc], 0x3e02f516
0x804a08b:   c7 85 00 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0x100], 6
0x804a095:   c6 85 73 ff ff ff 05            	mov byte ptr [ebp - 0x8d], 5
0x804a09c:   80 bd 73 ff ff ff 3a            	cmp byte ptr [ebp - 0x8d], 0x3a
0x804a0a3:   0f 87 c9 01 00 00               	ja 0x804a272 <func_1+0xa3f>
0x804a0a9:   c6 85 ff fe ff ff 00            	mov byte ptr [ebp - 0x101], 0
0x804a0b0:   66 c7 85 fc fe ff ff a9 ba      	mov word ptr [ebp - 0x104], 0xbaa9
0x804a0b9:   c7 45 a4 01 00 00 00            	mov dword ptr [ebp - 0x5c], 1
0x804a0c0:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a0c4:   75 75                           	jne 0x804a13b <func_1+0x908>
0x804a0c6:   0f b6 95 ff fe ff ff            	movzx edx, byte ptr [ebp - 0x101]
0x804a0cd:   80 bd ff fe ff ff 00            	cmp byte ptr [ebp - 0x101], 0
0x804a0d4:   0f 94 c0                        	sete al
0x804a0d7:   0f b6 c8                        	movzx ecx, al
0x804a0da:   0f b7 45 d2                     	movzx eax, word ptr [ebp - 0x2e]
0x804a0de:   01 c8                           	add eax, ecx
0x804a0e0:   89 c1                           	mov ecx, eax
0x804a0e2:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a0e6:   21 c8                           	and eax, ecx
0x804a0e8:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a0ec:   0f b7 4d c2                     	movzx ecx, word ptr [ebp - 0x3e]
0x804a0f0:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a0f4:   01 c8                           	add eax, ecx
0x804a0f6:   3d 2d 45 f4 51                  	cmp eax, 0x51f4452d
0x804a0fb:   0f 94 c0                        	sete al
0x804a0fe:   0f b6 c0                        	movzx eax, al
0x804a101:   33 85 4c ff ff ff               	xor eax, dword ptr [ebp - 0xb4]
0x804a107:   09 45 a0                        	or dword ptr [ebp - 0x60], eax
0x804a10a:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a110:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x804a113:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a117:   22 45 eb                        	and al, byte ptr [ebp - 0x15]
0x804a11a:   3c fe                           	cmp al, 0xfe
0x804a11c:   0f 95 c0                        	setne al
0x804a11f:   0f b6 c0                        	movzx eax, al
0x804a122:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a125:   0f 9e c0                        	setle al
0x804a128:   0f b6 c0                        	movzx eax, al
0x804a12b:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a12e:   0f 9e c0                        	setle al
0x804a131:   0f b6 c0                        	movzx eax, al
0x804a134:   0f af c2                        	imul eax, edx
0x804a137:   85 c0                           	test eax, eax
0x804a139:   74 07                           	je 0x804a142 <func_1+0x90f>
0x804a13b:   b8 01 00 00 00                  	mov eax, 1
0x804a140:   eb 05                           	jmp 0x804a147 <func_1+0x914>
0x804a142:   b8 00 00 00 00                  	mov eax, 0
0x804a147:   0f be d0                        	movsx edx, al
0x804a14a:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a150:   0f be c0                        	movsx eax, al
0x804a153:   89 c1                           	mov ecx, eax
0x804a155:   d3 e2                           	shl edx, cl
0x804a157:   89 d0                           	mov eax, edx
0x804a159:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a15c:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a15f:   0b 45 c4                        	or eax, dword ptr [ebp - 0x3c]
0x804a162:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a165:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804a169:   0f b7 55 aa                     	movzx edx, word ptr [ebp - 0x56]
0x804a16d:   0f be 8d 3e ff ff ff            	movsx ecx, byte ptr [ebp - 0xc2]
0x804a174:   0f b6 7d b3                     	movzx edi, byte ptr [ebp - 0x4d]
0x804a178:   0f b7 75 ba                     	movzx esi, word ptr [ebp - 0x46]
0x804a17c:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a182:   0f be 9d 3f ff ff ff            	movsx ebx, byte ptr [ebp - 0xc1]
0x804a189:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a18f:   0f b7 75 bc                     	movzx esi, word ptr [ebp - 0x44]
0x804a193:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a199:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a19d:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804a1a3:   0f b6 75 c1                     	movzx esi, byte ptr [ebp - 0x3f]
0x804a1a7:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a1ad:   0f bf 9d 46 ff ff ff            	movsx ebx, word ptr [ebp - 0xba]
0x804a1b4:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a1ba:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a1be:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a1c4:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a1c8:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a1ce:   0f bf 75 e0                     	movsx esi, word ptr [ebp - 0x20]
0x804a1d2:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a1d8:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804a1dc:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804a1e2:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a1e6:   0f b6 5d f3                     	movzx ebx, byte ptr [ebp - 0xd]
0x804a1ea:   50                              	push eax
0x804a1eb:   52                              	push edx
0x804a1ec:   51                              	push ecx
0x804a1ed:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a1f0:   57                              	push edi
0x804a1f1:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a1f4:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a1fa:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a200:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a206:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a20c:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a212:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a218:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a21e:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a224:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a227:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a22a:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a230:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a233:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a239:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a23c:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a242:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a245:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a248:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a24e:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a254:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a257:   56                              	push esi
0x804a258:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a25b:   53                              	push ebx
0x804a25c:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a262:   e8 bf f3 ff ff                  	call 0x8049626 <set_var>
0x804a267:   83 c4 78                        	add esp, 0x78
0x804a26a:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a26d:   e9 71 0b 00 00                  	jmp 0x804ade3 <func_1+0x15b0>
0x804a272:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a276:   83 c0 01                        	add eax, 1
0x804a279:   88 45 c1                        	mov byte ptr [ebp - 0x3f], al
0x804a27c:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a27f:   0d 66 d2 f5 f4                  	or eax, 0xf4f5d266
0x804a284:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a287:   c7 85 7c ff ff ff 11 00 00 00   	mov dword ptr [ebp - 0x84], 0x11
0x804a291:   e9 d6 01 00 00                  	jmp 0x804a46c <func_1+0xc39>
0x804a296:   c7 85 d4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x12c], 0
0x804a2a0:   c7 85 d0 fe ff ff 28 ed 14 e9   	mov dword ptr [ebp - 0x130], 0xe914ed28
0x804a2aa:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x804a2ae:   0f 95 c0                        	setne al
0x804a2b1:   0f b6 c8                        	movzx ecx, al
0x804a2b4:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a2b7:   99                              	cdq 
0x804a2b8:   f7 f9                           	idiv ecx
0x804a2ba:   89 55 a0                        	mov dword ptr [ebp - 0x60], edx
0x804a2bd:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a2c1:   0f 94 c0                        	sete al
0x804a2c4:   0f b6 c0                        	movzx eax, al
0x804a2c7:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x804a2cd:   31 d0                           	xor eax, edx
0x804a2cf:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804a2d3:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a2d7:   0f be c0                        	movsx eax, al
0x804a2da:   ba 48 00 00 00                  	mov edx, 0x48
0x804a2df:   89 c1                           	mov ecx, eax
0x804a2e1:   d3 e2                           	shl edx, cl
0x804a2e3:   89 d0                           	mov eax, edx
0x804a2e5:   89 c1                           	mov ecx, eax
0x804a2e7:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a2ed:   89 c3                           	mov ebx, eax
0x804a2ef:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a2f3:   ba 00 00 00 00                  	mov edx, 0
0x804a2f8:   66 f7 f3                        	div bx
0x804a2fb:   89 d0                           	mov eax, edx
0x804a2fd:   0f b7 c0                        	movzx eax, ax
0x804a300:   83 e0 03                        	and eax, 3
0x804a303:   09 c8                           	or eax, ecx
0x804a305:   85 c0                           	test eax, eax
0x804a307:   75 06                           	jne 0x804a30f <func_1+0xadc>
0x804a309:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a30d:   74 07                           	je 0x804a316 <func_1+0xae3>
0x804a30f:   b8 01 00 00 00                  	mov eax, 1
0x804a314:   eb 05                           	jmp 0x804a31b <func_1+0xae8>
0x804a316:   b8 00 00 00 00                  	mov eax, 0
0x804a31b:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a321:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a327:   05 fb 98 8d 6f                  	add eax, 0x6f8d98fb
0x804a32c:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x804a332:   75 24                           	jne 0x804a358 <func_1+0xb25>
0x804a334:   66 c7 85 ce fe ff ff ff ff      	mov word ptr [ebp - 0x132], 0xffff
0x804a33d:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a341:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a344:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a347:   66 89 85 ce fe ff ff            	mov word ptr [ebp - 0x132], ax
0x804a34e:   66 83 45 bc 01                  	add word ptr [ebp - 0x44], 1
0x804a353:   e9 0d 01 00 00                  	jmp 0x804a465 <func_1+0xc32>
0x804a358:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804a35c:   0f b7 55 aa                     	movzx edx, word ptr [ebp - 0x56]
0x804a360:   0f be 8d 3e ff ff ff            	movsx ecx, byte ptr [ebp - 0xc2]
0x804a367:   0f b6 7d b3                     	movzx edi, byte ptr [ebp - 0x4d]
0x804a36b:   0f b7 75 ba                     	movzx esi, word ptr [ebp - 0x46]
0x804a36f:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a375:   0f be 9d 3f ff ff ff            	movsx ebx, byte ptr [ebp - 0xc1]
0x804a37c:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a382:   0f b7 75 bc                     	movzx esi, word ptr [ebp - 0x44]
0x804a386:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a38c:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a390:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804a396:   0f b6 75 c1                     	movzx esi, byte ptr [ebp - 0x3f]
0x804a39a:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a3a0:   0f bf 9d 46 ff ff ff            	movsx ebx, word ptr [ebp - 0xba]
0x804a3a7:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a3ad:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a3b1:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a3b7:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a3bb:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a3c1:   0f bf 75 e0                     	movsx esi, word ptr [ebp - 0x20]
0x804a3c5:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a3cb:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804a3cf:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804a3d5:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a3d9:   0f b6 5d f3                     	movzx ebx, byte ptr [ebp - 0xd]
0x804a3dd:   50                              	push eax
0x804a3de:   52                              	push edx
0x804a3df:   51                              	push ecx
0x804a3e0:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a3e3:   57                              	push edi
0x804a3e4:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a3e7:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a3ed:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a3f3:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a3f9:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a3ff:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a405:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a40b:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a411:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a417:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a41a:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a41d:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a423:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a426:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a42c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a42f:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a435:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a438:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a43b:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a441:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a447:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a44a:   56                              	push esi
0x804a44b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a44e:   53                              	push ebx
0x804a44f:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a455:   e8 cc f1 ff ff                  	call 0x8049626 <set_var>
0x804a45a:   83 c4 78                        	add esp, 0x78
0x804a45d:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a460:   e9 7e 09 00 00                  	jmp 0x804ade3 <func_1+0x15b0>
0x804a465:   83 ad 7c ff ff ff 07            	sub dword ptr [ebp - 0x84], 7
0x804a46c:   83 bd 7c ff ff ff 02            	cmp dword ptr [ebp - 0x84], 2
0x804a473:   0f 86 1d fe ff ff               	jbe 0x804a296 <func_1+0xa63>
0x804a479:   e9 46 01 00 00                  	jmp 0x804a5c4 <func_1+0xd91>
0x804a47e:   c7 85 68 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x98], 0xffffffff
0x804a488:   c7 85 64 ff ff ff e4 ed 13 d0   	mov dword ptr [ebp - 0x9c], 0xd013ede4
0x804a492:   66 83 45 ba 01                  	add word ptr [ebp - 0x46], 1
0x804a497:   c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x804a49b:   e9 ac 00 00 00                  	jmp 0x804a54c <func_1+0xd19>
0x804a4a0:   66 c7 85 2a ff ff ff 02 4b      	mov word ptr [ebp - 0xd6], 0x4b02
0x804a4a9:   c7 85 24 ff ff ff 7b 8f 88 72   	mov dword ptr [ebp - 0xdc], 0x72888f7b
0x804a4b3:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a4b6:   98                              	cwde 
0x804a4b7:   0f b7 55 96                     	movzx edx, word ptr [ebp - 0x6a]
0x804a4bb:   66 0f be ca                     	movsx cx, dl
0x804a4bf:   8b 55 88                        	mov edx, dword ptr [ebp - 0x78]
0x804a4c2:   66 0f be d2                     	movsx dx, dl
0x804a4c6:   0f af d1                        	imul edx, ecx
0x804a4c9:   0f bf fa                        	movsx edi, dx
0x804a4cc:   99                              	cdq 
0x804a4cd:   f7 ff                           	idiv edi
0x804a4cf:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a4d5:   0f 9f c0                        	setg al
0x804a4d8:   0f b6 c0                        	movzx eax, al
0x804a4db:   0b 45 ec                        	or eax, dword ptr [ebp - 0x14]
0x804a4de:   89 c2                           	mov edx, eax
0x804a4e0:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a4e6:   39 c2                           	cmp edx, eax
0x804a4e8:   74 0e                           	je 0x804a4f8 <func_1+0xcc5>
0x804a4ea:   66 83 7d e0 00                  	cmp word ptr [ebp - 0x20], 0
0x804a4ef:   74 07                           	je 0x804a4f8 <func_1+0xcc5>
0x804a4f1:   b8 01 00 00 00                  	mov eax, 1
0x804a4f6:   eb 05                           	jmp 0x804a4fd <func_1+0xcca>
0x804a4f8:   b8 00 00 00 00                  	mov eax, 0
0x804a4fd:   3b 45 c8                        	cmp eax, dword ptr [ebp - 0x38]
0x804a500:   0f 95 c0                        	setne al
0x804a503:   0f b6 c0                        	movzx eax, al
0x804a506:   21 85 64 ff ff ff               	and dword ptr [ebp - 0x9c], eax
0x804a50c:   66 83 7d e0 00                  	cmp word ptr [ebp - 0x20], 0
0x804a511:   75 45                           	jne 0x804a558 <func_1+0xd25>
0x804a513:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a517:   0f be d0                        	movsx edx, al
0x804a51a:   66 81 7d ba 27 5d               	cmp word ptr [ebp - 0x46], 0x5d27
0x804a520:   0f 96 c0                        	setbe al
0x804a523:   0f b6 c0                        	movzx eax, al
0x804a526:   01 d0                           	add eax, edx
0x804a528:   39 85 64 ff ff ff               	cmp dword ptr [ebp - 0x9c], eax
0x804a52e:   0f 95 c0                        	setne al
0x804a531:   0f b6 c0                        	movzx eax, al
0x804a534:   0b 85 24 ff ff ff               	or eax, dword ptr [ebp - 0xdc]
0x804a53a:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a53d:   b8 00 00 00 00                  	mov eax, 0
0x804a542:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a548:   80 45 e3 02                     	add byte ptr [ebp - 0x1d], 2
0x804a54c:   80 7d e3 1e                     	cmp byte ptr [ebp - 0x1d], 0x1e
0x804a550:   0f 86 4a ff ff ff               	jbe 0x804a4a0 <func_1+0xc6d>
0x804a556:   eb 01                           	jmp 0x804a559 <func_1+0xd26>
0x804a558:   90                              	nop 
0x804a559:   66 c7 45 e0 00 00               	mov word ptr [ebp - 0x20], 0
0x804a55f:   eb 5c                           	jmp 0x804a5bd <func_1+0xd8a>
0x804a561:   c7 85 20 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xe0], 3
0x804a56b:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x804a56f:   66 c7 45 d2 08 00               	mov word ptr [ebp - 0x2e], 8
0x804a575:   0f bf 45 d2                     	movsx eax, word ptr [ebp - 0x2e]
0x804a579:   0f b6 7d f3                     	movzx edi, byte ptr [ebp - 0xd]
0x804a57d:   99                              	cdq 
0x804a57e:   f7 ff                           	idiv edi
0x804a580:   99                              	cdq 
0x804a581:   f7 bd 40 ff ff ff               	idiv dword ptr [ebp - 0xc0]
0x804a587:   89 c2                           	mov edx, eax
0x804a589:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a58c:   01 d0                           	add eax, edx
0x804a58e:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a591:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a594:   98                              	cwde 
0x804a595:   69 d0 72 53 00 00               	imul edx, eax, 0x5372
0x804a59b:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a5a1:   01 d0                           	add eax, edx
0x804a5a3:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804a5a6:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x804a5ab:   74 05                           	je 0x804a5b2 <func_1+0xd7f>
0x804a5ad:   e9 e0 fe ff ff                  	jmp 0x804a492 <func_1+0xc5f>
0x804a5b2:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804a5b6:   83 c0 08                        	add eax, 8
0x804a5b9:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x804a5bd:   66 83 7d e0 1a                  	cmp word ptr [ebp - 0x20], 0x1a
0x804a5c2:   7e 9d                           	jle 0x804a561 <func_1+0xd2e>
0x804a5c4:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a5c7:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x804a5ca:   0f 94 c0                        	sete al
0x804a5cd:   0f b6 c0                        	movzx eax, al
0x804a5d0:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a5d3:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a5d7:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x804a5da:   0f b7 85 3a ff ff ff            	movzx eax, word ptr [ebp - 0xc6]
0x804a5e1:   0f be d0                        	movsx edx, al
0x804a5e4:   66 83 7d be 00                  	cmp word ptr [ebp - 0x42], 0
0x804a5e9:   0f 94 c0                        	sete al
0x804a5ec:   0f b6 c8                        	movzx ecx, al
0x804a5ef:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a5f3:   39 c1                           	cmp ecx, eax
0x804a5f5:   0f 9d c0                        	setge al
0x804a5f8:   0f b6 c0                        	movzx eax, al
0x804a5fb:   89 c1                           	mov ecx, eax
0x804a5fd:   d3 e2                           	shl edx, cl
0x804a5ff:   66 83 6d ba 01                  	sub word ptr [ebp - 0x46], 1
0x804a604:   0f b6 85 3d ff ff ff            	movzx eax, byte ptr [ebp - 0xc3]
0x804a60b:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804a60f:   31 55 d8                        	xor dword ptr [ebp - 0x28], edx
0x804a612:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a615:   0f be c0                        	movsx eax, al
0x804a618:   c1 e0 03                        	shl eax, 3
0x804a61b:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a61e:   0f 84 0e 06 00 00               	je 0x804ac32 <func_1+0x13ff>
0x804a624:   c7 85 bc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x144], 0xffffffff
0x804a62e:   c7 85 b8 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x148], 7
0x804a638:   c7 85 b4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x14c], 0
0x804a642:   c7 85 b0 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x150], 8
0x804a64c:   c7 85 60 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa0], 0xffffffff
0x804a656:   c7 85 5c ff ff ff 0c dd 52 8e   	mov dword ptr [ebp - 0xa4], 0x8e52dd0c
0x804a660:   80 45 b3 01                     	add byte ptr [ebp - 0x4d], 1
0x804a664:   c7 45 90 7d 00 00 00            	mov dword ptr [ebp - 0x70], 0x7d
0x804a66b:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x804a671:   3b 85 bc fe ff ff               	cmp eax, dword ptr [ebp - 0x144]
0x804a677:   0f 85 72 03 00 00               	jne 0x804a9ef <func_1+0x11bc>
0x804a67d:   c7 85 9c fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x164], 1
0x804a687:   c7 85 98 fe ff ff 7f 76 a5 1c   	mov dword ptr [ebp - 0x168], 0x1ca5767f
0x804a691:   c7 85 94 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x16c], 1
0x804a69b:   66 c7 85 92 fe ff ff 01 00      	mov word ptr [ebp - 0x16e], 1
0x804a6a4:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a6a7:   8d 50 01                        	lea edx, [eax + 1]
0x804a6aa:   89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x804a6ad:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a6b3:   83 bd bc fe ff ff 00            	cmp dword ptr [ebp - 0x144], 0
0x804a6ba:   75 0a                           	jne 0x804a6c6 <func_1+0xe93>
0x804a6bc:   66 83 bd 46 ff ff ff 00         	cmp word ptr [ebp - 0xba], 0
0x804a6c4:   74 07                           	je 0x804a6cd <func_1+0xe9a>
0x804a6c6:   b8 01 00 00 00                  	mov eax, 1
0x804a6cb:   eb 05                           	jmp 0x804a6d2 <func_1+0xe9f>
0x804a6cd:   b8 00 00 00 00                  	mov eax, 0
0x804a6d2:   0b 85 b4 fe ff ff               	or eax, dword ptr [ebp - 0x14c]
0x804a6d8:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x804a6de:   0f b7 85 3a ff ff ff            	movzx eax, word ptr [ebp - 0xc6]
0x804a6e5:   89 85 9c fe ff ff               	mov dword ptr [ebp - 0x164], eax
0x804a6eb:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804a6ef:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a6f5:   c7 45 cc f9 ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffff9
0x804a6fc:   e9 df 02 00 00                  	jmp 0x804a9e0 <func_1+0x11ad>
0x804a701:   c7 85 8c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x174], 0
0x804a70b:   66 c7 45 ba 00 00               	mov word ptr [ebp - 0x46], 0
0x804a711:   66 83 7d ba 3a                  	cmp word ptr [ebp - 0x46], 0x3a
0x804a716:   0f 85 30 01 00 00               	jne 0x804a84c <func_1+0x1019>
0x804a71c:   c6 85 7d fe ff ff 05            	mov byte ptr [ebp - 0x183], 5
0x804a723:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x804a729:   0f be c0                        	movsx eax, al
0x804a72c:   01 c0                           	add eax, eax
0x804a72e:   3d da e8 00 00                  	cmp eax, 0xe8da
0x804a733:   0f 94 c0                        	sete al
0x804a736:   88 85 7d fe ff ff               	mov byte ptr [ebp - 0x183], al
0x804a73c:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804a740:   0f b7 55 aa                     	movzx edx, word ptr [ebp - 0x56]
0x804a744:   0f be 8d 3e ff ff ff            	movsx ecx, byte ptr [ebp - 0xc2]
0x804a74b:   0f b6 7d b3                     	movzx edi, byte ptr [ebp - 0x4d]
0x804a74f:   0f b7 75 ba                     	movzx esi, word ptr [ebp - 0x46]
0x804a753:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804a759:   0f be 9d 3f ff ff ff            	movsx ebx, byte ptr [ebp - 0xc1]
0x804a760:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804a766:   0f b7 75 bc                     	movzx esi, word ptr [ebp - 0x44]
0x804a76a:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804a770:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804a774:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804a77a:   0f b6 75 c1                     	movzx esi, byte ptr [ebp - 0x3f]
0x804a77e:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804a784:   0f bf 9d 46 ff ff ff            	movsx ebx, word ptr [ebp - 0xba]
0x804a78b:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a791:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a795:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a79b:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804a79f:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804a7a5:   0f bf 75 e0                     	movsx esi, word ptr [ebp - 0x20]
0x804a7a9:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804a7af:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804a7b3:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804a7b9:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804a7bd:   0f b6 5d f3                     	movzx ebx, byte ptr [ebp - 0xd]
0x804a7c1:   50                              	push eax
0x804a7c2:   52                              	push edx
0x804a7c3:   51                              	push ecx
0x804a7c4:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a7c7:   57                              	push edi
0x804a7c8:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804a7cb:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a7d1:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a7d7:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a7dd:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804a7e3:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a7e9:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a7ef:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a7f5:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a7fb:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7fe:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a801:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804a807:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a80a:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804a810:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a813:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804a819:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a81c:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a81f:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804a825:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804a82b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a82e:   56                              	push esi
0x804a82f:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a832:   53                              	push ebx
0x804a833:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804a839:   e8 e8 ed ff ff                  	call 0x8049626 <set_var>
0x804a83e:   83 c4 78                        	add esp, 0x78
0x804a841:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a847:   e9 97 05 00 00                  	jmp 0x804ade3 <func_1+0x15b0>
0x804a84c:   c7 85 94 fe ff ff 06 0b 35 07   	mov dword ptr [ebp - 0x16c], 0x7350b06
0x804a856:   66 c7 45 c2 f2 ff               	mov word ptr [ebp - 0x3e], 0xfff2
0x804a85c:   e9 70 01 00 00                  	jmp 0x804a9d1 <func_1+0x119e>
0x804a861:   66 83 bd 46 ff ff ff 00         	cmp word ptr [ebp - 0xba], 0
0x804a869:   0f 84 90 00 00 00               	je 0x804a8ff <func_1+0x10cc>
0x804a86f:   66 c7 85 7e fe ff ff 45 82      	mov word ptr [ebp - 0x182], 0x8245
0x804a878:   0f b6 55 c1                     	movzx edx, byte ptr [ebp - 0x3f]
0x804a87c:   66 83 6d be 01                  	sub word ptr [ebp - 0x42], 1
0x804a881:   66 83 7d be 00                  	cmp word ptr [ebp - 0x42], 0
0x804a886:   74 11                           	je 0x804a899 <func_1+0x1066>
0x804a888:   66 83 bd 7e fe ff ff 00         	cmp word ptr [ebp - 0x182], 0
0x804a890:   74 07                           	je 0x804a899 <func_1+0x1066>
0x804a892:   b8 01 00 00 00                  	mov eax, 1
0x804a897:   eb 05                           	jmp 0x804a89e <func_1+0x106b>
0x804a899:   b8 00 00 00 00                  	mov eax, 0
0x804a89e:   89 c1                           	mov ecx, eax
0x804a8a0:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x804a8a5:   0f b6 c0                        	movzx eax, al
0x804a8a8:   f6 f1                           	div cl
0x804a8aa:   0f b6 c0                        	movzx eax, al
0x804a8ad:   39 85 98 fe ff ff               	cmp dword ptr [ebp - 0x168], eax
0x804a8b3:   0f 9f c0                        	setg al
0x804a8b6:   0f b6 c0                        	movzx eax, al
0x804a8b9:   21 d0                           	and eax, edx
0x804a8bb:   85 c0                           	test eax, eax
0x804a8bd:   75 09                           	jne 0x804a8c8 <func_1+0x1095>
0x804a8bf:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a8c6:   74 07                           	je 0x804a8cf <func_1+0x109c>
0x804a8c8:   b8 01 00 00 00                  	mov eax, 1
0x804a8cd:   eb 05                           	jmp 0x804a8d4 <func_1+0x10a1>
0x804a8cf:   b8 00 00 00 00                  	mov eax, 0
0x804a8d4:   0f be c0                        	movsx eax, al
0x804a8d7:   f7 d8                           	neg eax
0x804a8d9:   89 c2                           	mov edx, eax
0x804a8db:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x804a8e2:   39 c2                           	cmp edx, eax
0x804a8e4:   0f 9f c0                        	setg al
0x804a8e7:   0f b6 d0                        	movzx edx, al
0x804a8ea:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a8f0:   98                              	cwde 
0x804a8f1:   0f af c2                        	imul eax, edx
0x804a8f4:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804a8fa:   e9 c7 00 00 00                  	jmp 0x804a9c6 <func_1+0x1193>
0x804a8ff:   c7 85 88 fe ff ff 92 aa c5 c5   	mov dword ptr [ebp - 0x178], 0xc5c5aa92
0x804a909:   66 c7 85 86 fe ff ff ee f3      	mov word ptr [ebp - 0x17a], 0xf3ee
0x804a912:   c7 85 80 fe ff ff 49 48 ea 55   	mov dword ptr [ebp - 0x180], 0x55ea4849
0x804a91c:   83 bd b8 fe ff ff 00            	cmp dword ptr [ebp - 0x148], 0
0x804a923:   74 2f                           	je 0x804a954 <func_1+0x1121>
0x804a925:   80 bd 3f ff ff ff 00            	cmp byte ptr [ebp - 0xc1], 0
0x804a92c:   0f 95 c0                        	setne al
0x804a92f:   0f b6 c0                        	movzx eax, al
0x804a932:   89 c2                           	mov edx, eax
0x804a934:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a937:   29 c2                           	sub edx, eax
0x804a939:   89 d0                           	mov eax, edx
0x804a93b:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a93e:   89 d7                           	mov edi, edx
0x804a940:   ba 00 00 00 00                  	mov edx, 0
0x804a945:   66 f7 f7                        	div di
0x804a948:   66 85 c0                        	test ax, ax
0x804a94b:   74 07                           	je 0x804a954 <func_1+0x1121>
0x804a94d:   b8 01 00 00 00                  	mov eax, 1
0x804a952:   eb 05                           	jmp 0x804a959 <func_1+0x1126>
0x804a954:   b8 00 00 00 00                  	mov eax, 0
0x804a959:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a95c:   0f bf 45 e0                     	movsx eax, word ptr [ebp - 0x20]
0x804a960:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x804a966:   0f 9d c0                        	setge al
0x804a969:   0f b6 c0                        	movzx eax, al
0x804a96c:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a96f:   66 83 7d d2 00                  	cmp word ptr [ebp - 0x2e], 0
0x804a974:   0f 94 c0                        	sete al
0x804a977:   0f b6 d0                        	movzx edx, al
0x804a97a:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x804a980:   33 45 dc                        	xor eax, dword ptr [ebp - 0x24]
0x804a983:   89 c1                           	mov ecx, eax
0x804a985:   0f bf 85 86 fe ff ff            	movsx eax, word ptr [ebp - 0x17a]
0x804a98c:   01 c1                           	add ecx, eax
0x804a98e:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a991:   21 c8                           	and eax, ecx
0x804a993:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804a996:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a999:   3b 85 98 fe ff ff               	cmp eax, dword ptr [ebp - 0x168]
0x804a99f:   0f 95 c0                        	setne al
0x804a9a2:   0f b6 c0                        	movzx eax, al
0x804a9a5:   39 c2                           	cmp edx, eax
0x804a9a7:   0f bf 55 e0                     	movsx edx, word ptr [ebp - 0x20]
0x804a9ab:   83 bd b0 fe ff ff 00            	cmp dword ptr [ebp - 0x150], 0
0x804a9b2:   0f 9f c0                        	setg al
0x804a9b5:   0f b6 c0                        	movzx eax, al
0x804a9b8:   39 c2                           	cmp edx, eax
0x804a9ba:   0f 9f c0                        	setg al
0x804a9bd:   0f b6 c0                        	movzx eax, al
0x804a9c0:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804a9c6:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a9ca:   83 c0 01                        	add eax, 1
0x804a9cd:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a9d1:   66 83 7d c2 23                  	cmp word ptr [ebp - 0x3e], 0x23
0x804a9d6:   0f 87 85 fe ff ff               	ja 0x804a861 <func_1+0x102e>
0x804a9dc:   83 45 cc 01                     	add dword ptr [ebp - 0x34], 1
0x804a9e0:   83 7d cc 2f                     	cmp dword ptr [ebp - 0x34], 0x2f
0x804a9e4:   0f 87 17 fd ff ff               	ja 0x804a701 <func_1+0xece>
0x804a9ea:   e9 3d 02 00 00                  	jmp 0x804ac2c <func_1+0x13f9>
0x804a9ef:   66 c7 85 ae fe ff ff 47 26      	mov word ptr [ebp - 0x152], 0x2647
0x804a9f8:   c7 85 58 ff ff ff 08 00 00 00   	mov dword ptr [ebp - 0xa8], 8
0x804aa02:   66 c7 85 ac fe ff ff 00 00      	mov word ptr [ebp - 0x154], 0
0x804aa0b:   c7 85 a8 fe ff ff 91 15 92 56   	mov dword ptr [ebp - 0x158], 0x56921591
0x804aa15:   c6 45 c1 e6                     	mov byte ptr [ebp - 0x3f], 0xe6
0x804aa19:   e9 97 01 00 00                  	jmp 0x804abb5 <func_1+0x1382>
0x804aa1e:   c7 85 a4 fe ff ff 57 6f e1 bf   	mov dword ptr [ebp - 0x15c], 0xbfe16f57
0x804aa28:   c7 85 54 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xac], 0xffffffff
0x804aa32:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x804aa36:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804aa39:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x804aa3c:   98                              	cwde 
0x804aa3d:   8b 95 a4 fe ff ff               	mov edx, dword ptr [ebp - 0x15c]
0x804aa43:   0f bf fa                        	movsx edi, dx
0x804aa46:   99                              	cdq 
0x804aa47:   f7 ff                           	idiv edi
0x804aa49:   83 f8 01                        	cmp eax, 1
0x804aa4c:   0f 97 c0                        	seta al
0x804aa4f:   0f b6 c0                        	movzx eax, al
0x804aa52:   21 85 60 ff ff ff               	and dword ptr [ebp - 0xa0], eax
0x804aa58:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804aa5e:   2d 2e 3f b0 07                  	sub eax, 0x7b03f2e
0x804aa63:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x804aa66:   c7 45 98 0a 00 00 00            	mov dword ptr [ebp - 0x68], 0xa
0x804aa6d:   e9 c3 00 00 00                  	jmp 0x804ab35 <func_1+0x1302>
0x804aa72:   66 c7 45 96 00 00               	mov word ptr [ebp - 0x6a], 0
0x804aa78:   e9 a6 00 00 00                  	jmp 0x804ab23 <func_1+0x12f0>
0x804aa7d:   66 c7 85 a2 fe ff ff 01 00      	mov word ptr [ebp - 0x15e], 1
0x804aa86:   66 c7 85 a0 fe ff ff e4 56      	mov word ptr [ebp - 0x160], 0x56e4
0x804aa8f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aa92:   8d 50 01                        	lea edx, [eax + 1]
0x804aa95:   89 55 ec                        	mov dword ptr [ebp - 0x14], edx
0x804aa98:   89 c1                           	mov ecx, eax
0x804aa9a:   0f be 85 3e ff ff ff            	movsx eax, byte ptr [ebp - 0xc2]
0x804aaa1:   39 85 a4 fe ff ff               	cmp dword ptr [ebp - 0x15c], eax
0x804aaa7:   0f 95 c0                        	setne al
0x804aaaa:   0f b6 d0                        	movzx edx, al
0x804aaad:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804aab0:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x804aab4:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804aab8:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804aabb:   0f 9f c0                        	setg al
0x804aabe:   0f b6 c0                        	movzx eax, al
0x804aac1:   39 c2                           	cmp edx, eax
0x804aac3:   0f 9c c0                        	setl al
0x804aac6:   31 c8                           	xor eax, ecx
0x804aac8:   f7 d0                           	not eax
0x804aaca:   0f b6 c0                        	movzx eax, al
0x804aacd:   c1 e0 02                        	shl eax, 2
0x804aad0:   85 c0                           	test eax, eax
0x804aad2:   75 08                           	jne 0x804aadc <func_1+0x12a9>
0x804aad4:   66 83 bd a2 fe ff ff 00         	cmp word ptr [ebp - 0x15e], 0
0x804aadc:   66 83 bd a0 fe ff ff 00         	cmp word ptr [ebp - 0x160], 0
0x804aae4:   75 07                           	jne 0x804aaed <func_1+0x12ba>
0x804aae6:   b8 a1 62 36 11                  	mov eax, 0x113662a1
0x804aaeb:   eb 05                           	jmp 0x804aaf2 <func_1+0x12bf>
0x804aaed:   b8 a0 62 36 11                  	mov eax, 0x113662a0
0x804aaf2:   89 c2                           	mov edx, eax
0x804aaf4:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804aaf8:   09 d0                           	or eax, edx
0x804aafa:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804aafd:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804ab01:   83 f0 40                        	xor eax, 0x40
0x804ab04:   0f b6 c0                        	movzx eax, al
0x804ab07:   21 85 54 ff ff ff               	and dword ptr [ebp - 0xac], eax
0x804ab0d:   66 83 bd a0 fe ff ff 00         	cmp word ptr [ebp - 0x160], 0
0x804ab15:   75 19                           	jne 0x804ab30 <func_1+0x12fd>
0x804ab17:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804ab1b:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804ab1e:   66 83 45 96 05                  	add word ptr [ebp - 0x6a], 5
0x804ab23:   66 83 7d 96 02                  	cmp word ptr [ebp - 0x6a], 2
0x804ab28:   0f 86 4f ff ff ff               	jbe 0x804aa7d <func_1+0x124a>
0x804ab2e:   eb 01                           	jmp 0x804ab31 <func_1+0x12fe>
0x804ab30:   90                              	nop 
0x804ab31:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x804ab35:   83 7d 98 3b                     	cmp dword ptr [ebp - 0x68], 0x3b
0x804ab39:   0f 85 33 ff ff ff               	jne 0x804aa72 <func_1+0x123f>
0x804ab3f:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804ab43:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x804ab49:   0f bf 85 32 ff ff ff            	movsx eax, word ptr [ebp - 0xce]
0x804ab50:   0f bf 8d ae fe ff ff            	movsx ecx, word ptr [ebp - 0x152]
0x804ab57:   99                              	cdq 
0x804ab58:   f7 f9                           	idiv ecx
0x804ab5a:   89 d0                           	mov eax, edx
0x804ab5c:   66 89 45 d2                     	mov word ptr [ebp - 0x2e], ax
0x804ab60:   0f bf 95 ae fe ff ff            	movsx edx, word ptr [ebp - 0x152]
0x804ab67:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804ab6a:   01 c2                           	add edx, eax
0x804ab6c:   0f be 85 3e ff ff ff            	movsx eax, byte ptr [ebp - 0xc2]
0x804ab73:   39 c2                           	cmp edx, eax
0x804ab75:   83 bd a4 fe ff ff 07            	cmp dword ptr [ebp - 0x15c], 7
0x804ab7c:   76 09                           	jbe 0x804ab87 <func_1+0x1354>
0x804ab7e:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804ab85:   74 07                           	je 0x804ab8e <func_1+0x135b>
0x804ab87:   b8 01 00 00 00                  	mov eax, 1
0x804ab8c:   eb 05                           	jmp 0x804ab93 <func_1+0x1360>
0x804ab8e:   b8 00 00 00 00                  	mov eax, 0
0x804ab93:   2d 90 62 89 62                  	sub eax, 0x62896290
0x804ab98:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804ab9b:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804aba1:   0b 45 9c                        	or eax, dword ptr [ebp - 0x64]
0x804aba4:   31 85 5c ff ff ff               	xor dword ptr [ebp - 0xa4], eax
0x804abaa:   c7 45 e4 03 00 00 00            	mov dword ptr [ebp - 0x1c], 3
0x804abb1:   80 45 c1 09                     	add byte ptr [ebp - 0x3f], 9
0x804abb5:   80 7d c1 01                     	cmp byte ptr [ebp - 0x3f], 1
0x804abb9:   0f 85 5f fe ff ff               	jne 0x804aa1e <func_1+0x11eb>
0x804abbf:   0f b7 85 ac fe ff ff            	movzx eax, word ptr [ebp - 0x154]
0x804abc6:   66 33 45 e0                     	xor ax, word ptr [ebp - 0x20]
0x804abca:   66 89 85 ac fe ff ff            	mov word ptr [ebp - 0x154], ax
0x804abd1:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804abd5:   83 e8 01                        	sub eax, 1
0x804abd8:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x804abdc:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804abe0:   89 c2                           	mov edx, eax
0x804abe2:   0f b7 85 ac fe ff ff            	movzx eax, word ptr [ebp - 0x154]
0x804abe9:   83 c8 c9                        	or eax, 0xffffffc9
0x804abec:   01 d0                           	add eax, edx
0x804abee:   89 c2                           	mov edx, eax
0x804abf0:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804abf4:   21 c2                           	and edx, eax
0x804abf6:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x804abfc:   21 d0                           	and eax, edx
0x804abfe:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804ac01:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804ac05:   20 45 c1                        	and byte ptr [ebp - 0x3f], al
0x804ac08:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804ac0c:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804ac12:   0f 9d c0                        	setge al
0x804ac15:   0f b6 d0                        	movzx edx, al
0x804ac18:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804ac1c:   01 d0                           	add eax, edx
0x804ac1e:   3d 9e 00 00 00                  	cmp eax, 0x9e
0x804ac23:   0f 9f c0                        	setg al
0x804ac26:   0f b6 c0                        	movzx eax, al
0x804ac29:   31 45 a4                        	xor dword ptr [ebp - 0x5c], eax
0x804ac2c:   83 6d 8c 01                     	sub dword ptr [ebp - 0x74], 1
0x804ac30:   eb 26                           	jmp 0x804ac58 <func_1+0x1425>
0x804ac32:   c7 85 c0 fe ff ff 2e 8f 86 0c   	mov dword ptr [ebp - 0x140], 0xc868f2e
0x804ac3c:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804ac40:   c1 e0 04                        	shl eax, 4
0x804ac43:   89 c2                           	mov edx, eax
0x804ac45:   b8 37 00 00 00                  	mov eax, 0x37
0x804ac4a:   0f b6 c0                        	movzx eax, al
0x804ac4d:   f6 f2                           	div dl
0x804ac4f:   0f b6 c0                        	movzx eax, al
0x804ac52:   31 85 c0 fe ff ff               	xor dword ptr [ebp - 0x140], eax
0x804ac58:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804ac5b:   33 45 b4                        	xor eax, dword ptr [ebp - 0x4c]
0x804ac5e:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804ac61:   83 7d 98 01                     	cmp dword ptr [ebp - 0x68], 1
0x804ac65:   0f 95 c0                        	setne al
0x804ac68:   0f b6 c0                        	movzx eax, al
0x804ac6b:   33 45 a4                        	xor eax, dword ptr [ebp - 0x5c]
0x804ac6e:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804ac71:   0f 9c c0                        	setl al
0x804ac74:   0f b6 d0                        	movzx edx, al
0x804ac77:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804ac7b:   39 c2                           	cmp edx, eax
0x804ac7d:   0f 9f c0                        	setg al
0x804ac80:   0f b6 c0                        	movzx eax, al
0x804ac83:   21 45 9c                        	and dword ptr [ebp - 0x64], eax
0x804ac86:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804ac8a:   0f 95 c0                        	setne al
0x804ac8d:   0f b6 c0                        	movzx eax, al
0x804ac90:   0f b7 4d bc                     	movzx ecx, word ptr [ebp - 0x44]
0x804ac94:   99                              	cdq 
0x804ac95:   f7 f9                           	idiv ecx
0x804ac97:   89 55 90                        	mov dword ptr [ebp - 0x70], edx
0x804ac9a:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804ac9d:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804aca0:   0f 96 c0                        	setbe al
0x804aca3:   0f b6 c0                        	movzx eax, al
0x804aca6:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x804aca9:   01 d0                           	add eax, edx
0x804acab:   8b 55 ac                        	mov edx, dword ptr [ebp - 0x54]
0x804acae:   89 d1                           	mov ecx, edx
0x804acb0:   ba 00 00 00 00                  	mov edx, 0
0x804acb5:   66 f7 f1                        	div cx
0x804acb8:   89 d0                           	mov eax, edx
0x804acba:   66 85 c0                        	test ax, ax
0x804acbd:   74 10                           	je 0x804accf <func_1+0x149c>
0x804acbf:   80 bd 3f ff ff ff 00            	cmp byte ptr [ebp - 0xc1], 0
0x804acc6:   74 07                           	je 0x804accf <func_1+0x149c>
0x804acc8:   b8 01 00 00 00                  	mov eax, 1
0x804accd:   eb 05                           	jmp 0x804acd4 <func_1+0x14a1>
0x804accf:   b8 00 00 00 00                  	mov eax, 0
0x804acd4:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804acd7:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804acdb:   0f b7 55 aa                     	movzx edx, word ptr [ebp - 0x56]
0x804acdf:   0f be 8d 3e ff ff ff            	movsx ecx, byte ptr [ebp - 0xc2]
0x804ace6:   0f b6 7d b3                     	movzx edi, byte ptr [ebp - 0x4d]
0x804acea:   0f b7 75 ba                     	movzx esi, word ptr [ebp - 0x46]
0x804acee:   89 b5 70 fe ff ff               	mov dword ptr [ebp - 0x190], esi
0x804acf4:   0f be 9d 3f ff ff ff            	movsx ebx, byte ptr [ebp - 0xc1]
0x804acfb:   89 9d 6c fe ff ff               	mov dword ptr [ebp - 0x194], ebx
0x804ad01:   0f b7 75 bc                     	movzx esi, word ptr [ebp - 0x44]
0x804ad05:   89 b5 68 fe ff ff               	mov dword ptr [ebp - 0x198], esi
0x804ad0b:   0f b7 5d be                     	movzx ebx, word ptr [ebp - 0x42]
0x804ad0f:   89 9d 64 fe ff ff               	mov dword ptr [ebp - 0x19c], ebx
0x804ad15:   0f b6 75 c1                     	movzx esi, byte ptr [ebp - 0x3f]
0x804ad19:   89 b5 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], esi
0x804ad1f:   0f bf 9d 46 ff ff ff            	movsx ebx, word ptr [ebp - 0xba]
0x804ad26:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804ad2c:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804ad30:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804ad36:   0f bf 5d d2                     	movsx ebx, word ptr [ebp - 0x2e]
0x804ad3a:   89 9d 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], ebx
0x804ad40:   0f bf 75 e0                     	movsx esi, word ptr [ebp - 0x20]
0x804ad44:   89 b5 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], esi
0x804ad4a:   0f b6 5d e3                     	movzx ebx, byte ptr [ebp - 0x1d]
0x804ad4e:   89 9d 4c fe ff ff               	mov dword ptr [ebp - 0x1b4], ebx
0x804ad54:   0f b6 75 eb                     	movzx esi, byte ptr [ebp - 0x15]
0x804ad58:   0f b6 5d f3                     	movzx ebx, byte ptr [ebp - 0xd]
0x804ad5c:   50                              	push eax
0x804ad5d:   52                              	push edx
0x804ad5e:   51                              	push ecx
0x804ad5f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ad62:   57                              	push edi
0x804ad63:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ad66:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ad6c:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ad72:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ad78:   ff b5 40 ff ff ff               	push dword ptr [ebp - 0xc0]
0x804ad7e:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804ad84:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ad8a:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ad90:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ad96:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ad99:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ad9c:   ff b5 48 ff ff ff               	push dword ptr [ebp - 0xb8]
0x804ada2:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ada5:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804adab:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804adae:   ff b5 4c ff ff ff               	push dword ptr [ebp - 0xb4]
0x804adb4:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804adb7:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804adba:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804adc0:   ff b5 4c fe ff ff               	push dword ptr [ebp - 0x1b4]
0x804adc6:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804adc9:   56                              	push esi
0x804adca:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804adcd:   53                              	push ebx
0x804adce:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804add4:   e8 4d e8 ff ff                  	call 0x8049626 <set_var>
0x804add9:   83 c4 78                        	add esp, 0x78
0x804addc:   0f b7 85 3a ff ff ff            	movzx eax, word ptr [ebp - 0xc6]
0x804ade3:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ade6:   5b                              	pop ebx
0x804ade7:   5e                              	pop esi
0x804ade8:   5f                              	pop edi
0x804ade9:   5d                              	pop ebp
0x804adea:   c3                              	ret 
; function: main at 0x804adeb -- 0x804b201
0x804adeb:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804adef:   83 e4 f0                        	and esp, 0xfffffff0
0x804adf2:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804adf5:   55                              	push ebp
0x804adf6:   89 e5                           	mov ebp, esp
0x804adf8:   53                              	push ebx
0x804adf9:   51                              	push ecx
0x804adfa:   83 ec 10                        	sub esp, 0x10
0x804adfd:   e8 8e d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ae02:   81 c3 fe 31 00 00               	add ebx, 0x31fe
0x804ae08:   89 c8                           	mov eax, ecx
0x804ae0a:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ae11:   83 38 02                        	cmp dword ptr [eax], 2
0x804ae14:   75 26                           	jne 0x804ae3c <main+0x51>
0x804ae16:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ae19:   83 c0 04                        	add eax, 4
0x804ae1c:   8b 00                           	mov eax, dword ptr [eax]
0x804ae1e:   83 ec 08                        	sub esp, 8
0x804ae21:   8d 93 e8 d2 ff ff               	lea edx, [ebx - 0x2d18]
0x804ae27:   52                              	push edx
0x804ae28:   50                              	push eax
0x804ae29:   e8 d2 d4 ff ff                  	call 0x8048300 <strcmp>
0x804ae2e:   83 c4 10                        	add esp, 0x10
0x804ae31:   85 c0                           	test eax, eax
0x804ae33:   75 07                           	jne 0x804ae3c <main+0x51>
0x804ae35:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ae3c:   e8 15 d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ae41:   e8 25 e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804ae46:   e8 e8 e9 ff ff                  	call 0x8049833 <func_1>
0x804ae4b:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ae51:   83 ec 04                        	sub esp, 4
0x804ae54:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae57:   8d 93 ea d2 ff ff               	lea edx, [ebx - 0x2d16]
0x804ae5d:   52                              	push edx
0x804ae5e:   50                              	push eax
0x804ae5f:   e8 13 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae64:   83 c4 10                        	add esp, 0x10
0x804ae67:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804ae6e:   0f b6 c0                        	movzx eax, al
0x804ae71:   83 ec 04                        	sub esp, 4
0x804ae74:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae77:   8d 93 ee d2 ff ff               	lea edx, [ebx - 0x2d12]
0x804ae7d:   52                              	push edx
0x804ae7e:   50                              	push eax
0x804ae7f:   e8 f3 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae84:   83 c4 10                        	add esp, 0x10
0x804ae87:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ae8d:   83 ec 04                        	sub esp, 4
0x804ae90:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae93:   8d 93 f3 d2 ff ff               	lea edx, [ebx - 0x2d0d]
0x804ae99:   52                              	push edx
0x804ae9a:   50                              	push eax
0x804ae9b:   e8 d7 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea0:   83 c4 10                        	add esp, 0x10
0x804aea3:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804aeaa:   0f b6 c0                        	movzx eax, al
0x804aead:   83 ec 04                        	sub esp, 4
0x804aeb0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb3:   8d 93 f8 d2 ff ff               	lea edx, [ebx - 0x2d08]
0x804aeb9:   52                              	push edx
0x804aeba:   50                              	push eax
0x804aebb:   e8 b7 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec0:   83 c4 10                        	add esp, 0x10
0x804aec3:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aec9:   89 c2                           	mov edx, eax
0x804aecb:   83 ec 04                        	sub esp, 4
0x804aece:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed1:   8d 83 fd d2 ff ff               	lea eax, [ebx - 0x2d03]
0x804aed7:   50                              	push eax
0x804aed8:   52                              	push edx
0x804aed9:   e8 99 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aede:   83 c4 10                        	add esp, 0x10
0x804aee1:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804aee8:   0f b6 c0                        	movzx eax, al
0x804aeeb:   83 ec 04                        	sub esp, 4
0x804aeee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef1:   8d 93 02 d3 ff ff               	lea edx, [ebx - 0x2cfe]
0x804aef7:   52                              	push edx
0x804aef8:   50                              	push eax
0x804aef9:   e8 79 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aefe:   83 c4 10                        	add esp, 0x10
0x804af01:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804af08:   98                              	cwde 
0x804af09:   83 ec 04                        	sub esp, 4
0x804af0c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0f:   8d 93 07 d3 ff ff               	lea edx, [ebx - 0x2cf9]
0x804af15:   52                              	push edx
0x804af16:   50                              	push eax
0x804af17:   e8 5b e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1c:   83 c4 10                        	add esp, 0x10
0x804af1f:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804af25:   83 ec 04                        	sub esp, 4
0x804af28:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2b:   8d 93 0c d3 ff ff               	lea edx, [ebx - 0x2cf4]
0x804af31:   52                              	push edx
0x804af32:   50                              	push eax
0x804af33:   e8 3f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af38:   83 c4 10                        	add esp, 0x10
0x804af3b:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804af41:   89 c2                           	mov edx, eax
0x804af43:   83 ec 04                        	sub esp, 4
0x804af46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af49:   8d 83 11 d3 ff ff               	lea eax, [ebx - 0x2cef]
0x804af4f:   50                              	push eax
0x804af50:   52                              	push edx
0x804af51:   e8 21 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af56:   83 c4 10                        	add esp, 0x10
0x804af59:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804af5f:   89 c2                           	mov edx, eax
0x804af61:   83 ec 04                        	sub esp, 4
0x804af64:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af67:   8d 83 16 d3 ff ff               	lea eax, [ebx - 0x2cea]
0x804af6d:   50                              	push eax
0x804af6e:   52                              	push edx
0x804af6f:   e8 03 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af74:   83 c4 10                        	add esp, 0x10
0x804af77:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804af7d:   83 ec 04                        	sub esp, 4
0x804af80:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af83:   8d 93 1b d3 ff ff               	lea edx, [ebx - 0x2ce5]
0x804af89:   52                              	push edx
0x804af8a:   50                              	push eax
0x804af8b:   e8 e7 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af90:   83 c4 10                        	add esp, 0x10
0x804af93:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804af9a:   98                              	cwde 
0x804af9b:   83 ec 04                        	sub esp, 4
0x804af9e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa1:   8d 93 20 d3 ff ff               	lea edx, [ebx - 0x2ce0]
0x804afa7:   52                              	push edx
0x804afa8:   50                              	push eax
0x804afa9:   e8 c9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afae:   83 c4 10                        	add esp, 0x10
0x804afb1:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804afb7:   83 ec 04                        	sub esp, 4
0x804afba:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afbd:   8d 93 26 d3 ff ff               	lea edx, [ebx - 0x2cda]
0x804afc3:   52                              	push edx
0x804afc4:   50                              	push eax
0x804afc5:   e8 ad e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afca:   83 c4 10                        	add esp, 0x10
0x804afcd:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804afd3:   89 c2                           	mov edx, eax
0x804afd5:   83 ec 04                        	sub esp, 4
0x804afd8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afdb:   8d 83 2c d3 ff ff               	lea eax, [ebx - 0x2cd4]
0x804afe1:   50                              	push eax
0x804afe2:   52                              	push edx
0x804afe3:   e8 8f e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afe8:   83 c4 10                        	add esp, 0x10
0x804afeb:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804aff1:   89 c2                           	mov edx, eax
0x804aff3:   83 ec 04                        	sub esp, 4
0x804aff6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff9:   8d 83 32 d3 ff ff               	lea eax, [ebx - 0x2cce]
0x804afff:   50                              	push eax
0x804b000:   52                              	push edx
0x804b001:   e8 71 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b006:   83 c4 10                        	add esp, 0x10
0x804b009:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b00f:   83 ec 04                        	sub esp, 4
0x804b012:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b015:   8d 93 38 d3 ff ff               	lea edx, [ebx - 0x2cc8]
0x804b01b:   52                              	push edx
0x804b01c:   50                              	push eax
0x804b01d:   e8 55 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b022:   83 c4 10                        	add esp, 0x10
0x804b025:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804b02c:   0f b7 c0                        	movzx eax, ax
0x804b02f:   83 ec 04                        	sub esp, 4
0x804b032:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b035:   8d 93 3e d3 ff ff               	lea edx, [ebx - 0x2cc2]
0x804b03b:   52                              	push edx
0x804b03c:   50                              	push eax
0x804b03d:   e8 35 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b042:   83 c4 10                        	add esp, 0x10
0x804b045:   0f b7 83 62 00 00 00            	movzx eax, word ptr [ebx + 0x62]
0x804b04c:   98                              	cwde 
0x804b04d:   83 ec 04                        	sub esp, 4
0x804b050:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b053:   8d 93 44 d3 ff ff               	lea edx, [ebx - 0x2cbc]
0x804b059:   52                              	push edx
0x804b05a:   50                              	push eax
0x804b05b:   e8 17 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b060:   83 c4 10                        	add esp, 0x10
0x804b063:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804b06a:   0f b6 c0                        	movzx eax, al
0x804b06d:   83 ec 04                        	sub esp, 4
0x804b070:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b073:   8d 93 4a d3 ff ff               	lea edx, [ebx - 0x2cb6]
0x804b079:   52                              	push edx
0x804b07a:   50                              	push eax
0x804b07b:   e8 f7 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b080:   83 c4 10                        	add esp, 0x10
0x804b083:   0f b7 83 66 00 00 00            	movzx eax, word ptr [ebx + 0x66]
0x804b08a:   0f b7 c0                        	movzx eax, ax
0x804b08d:   83 ec 04                        	sub esp, 4
0x804b090:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b093:   8d 93 50 d3 ff ff               	lea edx, [ebx - 0x2cb0]
0x804b099:   52                              	push edx
0x804b09a:   50                              	push eax
0x804b09b:   e8 d7 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0a0:   83 c4 10                        	add esp, 0x10
0x804b0a3:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b0a9:   89 c2                           	mov edx, eax
0x804b0ab:   83 ec 04                        	sub esp, 4
0x804b0ae:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0b1:   8d 83 56 d3 ff ff               	lea eax, [ebx - 0x2caa]
0x804b0b7:   50                              	push eax
0x804b0b8:   52                              	push edx
0x804b0b9:   e8 b9 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0be:   83 c4 10                        	add esp, 0x10
0x804b0c1:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804b0c8:   0f b7 c0                        	movzx eax, ax
0x804b0cb:   83 ec 04                        	sub esp, 4
0x804b0ce:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0d1:   8d 93 5c d3 ff ff               	lea edx, [ebx - 0x2ca4]
0x804b0d7:   52                              	push edx
0x804b0d8:   50                              	push eax
0x804b0d9:   e8 99 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0de:   83 c4 10                        	add esp, 0x10
0x804b0e1:   0f b6 83 6e 00 00 00            	movzx eax, byte ptr [ebx + 0x6e]
0x804b0e8:   0f be c0                        	movsx eax, al
0x804b0eb:   83 ec 04                        	sub esp, 4
0x804b0ee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0f1:   8d 93 62 d3 ff ff               	lea edx, [ebx - 0x2c9e]
0x804b0f7:   52                              	push edx
0x804b0f8:   50                              	push eax
0x804b0f9:   e8 79 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0fe:   83 c4 10                        	add esp, 0x10
0x804b101:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804b108:   0f b7 c0                        	movzx eax, ax
0x804b10b:   83 ec 04                        	sub esp, 4
0x804b10e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b111:   8d 93 68 d3 ff ff               	lea edx, [ebx - 0x2c98]
0x804b117:   52                              	push edx
0x804b118:   50                              	push eax
0x804b119:   e8 59 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b11e:   83 c4 10                        	add esp, 0x10
0x804b121:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b127:   83 ec 04                        	sub esp, 4
0x804b12a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b12d:   8d 93 6e d3 ff ff               	lea edx, [ebx - 0x2c92]
0x804b133:   52                              	push edx
0x804b134:   50                              	push eax
0x804b135:   e8 3d e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b13a:   83 c4 10                        	add esp, 0x10
0x804b13d:   0f b6 83 78 00 00 00            	movzx eax, byte ptr [ebx + 0x78]
0x804b144:   0f b6 c0                        	movzx eax, al
0x804b147:   83 ec 04                        	sub esp, 4
0x804b14a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b14d:   8d 93 74 d3 ff ff               	lea edx, [ebx - 0x2c8c]
0x804b153:   52                              	push edx
0x804b154:   50                              	push eax
0x804b155:   e8 1d e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b15a:   83 c4 10                        	add esp, 0x10
0x804b15d:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b163:   89 c2                           	mov edx, eax
0x804b165:   83 ec 04                        	sub esp, 4
0x804b168:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b16b:   8d 83 7a d3 ff ff               	lea eax, [ebx - 0x2c86]
0x804b171:   50                              	push eax
0x804b172:   52                              	push edx
0x804b173:   e8 ff e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b178:   83 c4 10                        	add esp, 0x10
0x804b17b:   0f b6 83 c4 04 00 00            	movzx eax, byte ptr [ebx + 0x4c4]
0x804b182:   0f be c0                        	movsx eax, al
0x804b185:   83 ec 04                        	sub esp, 4
0x804b188:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b18b:   8d 93 80 d3 ff ff               	lea edx, [ebx - 0x2c80]
0x804b191:   52                              	push edx
0x804b192:   50                              	push eax
0x804b193:   e8 df e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b198:   83 c4 10                        	add esp, 0x10
0x804b19b:   0f b7 83 80 00 00 00            	movzx eax, word ptr [ebx + 0x80]
0x804b1a2:   0f b7 c0                        	movzx eax, ax
0x804b1a5:   83 ec 04                        	sub esp, 4
0x804b1a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1ab:   8d 93 86 d3 ff ff               	lea edx, [ebx - 0x2c7a]
0x804b1b1:   52                              	push edx
0x804b1b2:   50                              	push eax
0x804b1b3:   e8 bf e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1b8:   83 c4 10                        	add esp, 0x10
0x804b1bb:   0f b7 83 82 00 00 00            	movzx eax, word ptr [ebx + 0x82]
0x804b1c2:   0f b7 c0                        	movzx eax, ax
0x804b1c5:   83 ec 04                        	sub esp, 4
0x804b1c8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1cb:   8d 93 8c d3 ff ff               	lea edx, [ebx - 0x2c74]
0x804b1d1:   52                              	push edx
0x804b1d2:   50                              	push eax
0x804b1d3:   e8 9f e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1d8:   83 c4 10                        	add esp, 0x10
0x804b1db:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b1e1:   f7 d0                           	not eax
0x804b1e3:   83 ec 08                        	sub esp, 8
0x804b1e6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1e9:   50                              	push eax
0x804b1ea:   e8 77 d2 ff ff                  	call 0x8048466 <platform_main_end>
0x804b1ef:   83 c4 10                        	add esp, 0x10
0x804b1f2:   b8 00 00 00 00                  	mov eax, 0
0x804b1f7:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b1fa:   59                              	pop ecx
0x804b1fb:   5b                              	pop ebx
0x804b1fc:   5d                              	pop ebp
0x804b1fd:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b200:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b201 -- 0x804b205
0x804b201:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b204:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b205 -- 0x804b209
0x804b205:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b208:   c3                              	ret 
; data inside code section at 0x804b209 -- 0x804b210
0x804b209:   66 90 66 90 66 90 90                               |f.f.f..         |
; function: __libc_csu_init at 0x804b210 -- 0x804b26d
0x804b210:   55                              	push ebp
0x804b211:   57                              	push edi
0x804b212:   56                              	push esi
0x804b213:   53                              	push ebx
0x804b214:   e8 77 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b219:   81 c3 e7 2d 00 00               	add ebx, 0x2de7
0x804b21f:   83 ec 0c                        	sub esp, 0xc
0x804b222:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b226:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b22c:   e8 9b d0 ff ff                  	call 0x80482cc <_init>
0x804b231:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b237:   29 c6                           	sub esi, eax
0x804b239:   c1 fe 02                        	sar esi, 2
0x804b23c:   85 f6                           	test esi, esi
0x804b23e:   74 25                           	je 0x804b265 <__libc_csu_init+0x55>
0x804b240:   31 ff                           	xor edi, edi
0x804b242:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b248:   83 ec 04                        	sub esp, 4
0x804b24b:   55                              	push ebp
0x804b24c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b250:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b254:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b25b:   83 c7 01                        	add edi, 1
0x804b25e:   83 c4 10                        	add esp, 0x10
0x804b261:   39 fe                           	cmp esi, edi
0x804b263:   75 e3                           	jne 0x804b248 <__libc_csu_init+0x38>
0x804b265:   83 c4 0c                        	add esp, 0xc
0x804b268:   5b                              	pop ebx
0x804b269:   5e                              	pop esi
0x804b26a:   5f                              	pop edi
0x804b26b:   5d                              	pop ebp
0x804b26c:   c3                              	ret 
; data inside code section at 0x804b26d -- 0x804b270
0x804b26d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b270 -- 0x804b272
0x804b270:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b274 -- 0x804b288
0x804b274:   53                              	push ebx
0x804b275:   83 ec 08                        	sub esp, 8
0x804b278:   e8 13 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b27d:   81 c3 83 2d 00 00               	add ebx, 0x2d83
0x804b283:   83 c4 08                        	add esp, 8
0x804b286:   5b                              	pop ebx
0x804b287:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c b2 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b288:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b298:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b2a8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b2b8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b2c8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b2d8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b2e8:   31 00 67 5f 32 00 67 5f  32 38 00 67 5f 33 31 00   |1.g_2.g_28.g_31.|
0x804b2f8:   67 5f 34 33 00 67 5f 35  36 00 67 5f 35 37 00 67   |g_43.g_56.g_57.g|
0x804b308:   5f 36 37 00 67 5f 37 33  00 67 5f 39 30 00 67 5f   |_67.g_73.g_90.g_|
0x804b318:   39 32 00 67 5f 39 33 00  67 5f 31 32 36 00 67 5f   |92.g_93.g_126.g_|
0x804b328:   31 34 33 00 67 5f 31 34  35 00 67 5f 31 34 36 00   |143.g_145.g_146.|
0x804b338:   67 5f 31 34 37 00 67 5f  31 37 38 00 67 5f 32 34   |g_147.g_178.g_24|
0x804b348:   38 00 67 5f 32 35 34 00  67 5f 32 36 36 00 67 5f   |8.g_254.g_266.g_|
0x804b358:   32 37 33 00 67 5f 32 37  34 00 67 5f 32 37 38 00   |273.g_274.g_278.|
0x804b368:   67 5f 32 37 39 00 67 5f  33 30 34 00 67 5f 33 35   |g_279.g_304.g_35|
0x804b378:   30 00 67 5f 34 32 32 00  67 5f 34 32 33 00 67 5f   |0.g_422.g_423.g_|
0x804b388:   34 35 30 00 67 5f 34 36  38 00 00 00 00 00 00 3f   |450.g_468......?|
0x804b398:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b3a8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b3b8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b3c8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b3d8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b3e8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b3f8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b400:   01 1b 03 3b b8 02 00 00  56 00 00 00 f0 ce ff ff   |...;....V.......|
0x804b410:   e8 02 00 00 30 cf ff ff  0c 03 00 00 80 cf ff ff   |....0...........|
0x804b420:   d4 02 00 00 56 d0 ff ff  20 03 00 00 66 d0 ff ff   |....V... ...f...|
0x804b430:   40 03 00 00 94 d0 ff ff  64 03 00 00 b2 d0 ff ff   |@.......d.......|
0x804b440:   84 03 00 00 da d0 ff ff  a4 03 00 00 04 d1 ff ff   |................|
0x804b450:   c4 03 00 00 2d d1 ff ff  e4 03 00 00 70 d1 ff ff   |....-.......p...|
0x804b460:   04 04 00 00 b1 d1 ff ff  24 04 00 00 09 d2 ff ff   |........$.......|
0x804b470:   48 04 00 00 5b d2 ff ff  6c 04 00 00 98 d2 ff ff   |H...[...l.......|
0x804b480:   8c 04 00 00 cf d2 ff ff  ac 04 00 00 ee d2 ff ff   |................|
0x804b490:   cc 04 00 00 18 d3 ff ff  ec 04 00 00 44 d3 ff ff   |............D...|
0x804b4a0:   0c 05 00 00 6f d3 ff ff  2c 05 00 00 b8 d3 ff ff   |....o...,.......|
0x804b4b0:   4c 05 00 00 ff d3 ff ff  6c 05 00 00 59 d4 ff ff   |L.......l...Y...|
0x804b4c0:   90 05 00 00 ad d4 ff ff  b4 05 00 00 ec d4 ff ff   |................|
0x804b4d0:   d4 05 00 00 25 d5 ff ff  f4 05 00 00 47 d5 ff ff   |....%.......G...|
0x804b4e0:   14 06 00 00 95 d5 ff ff  34 06 00 00 d1 d5 ff ff   |........4.......|
0x804b4f0:   54 06 00 00 5a d6 ff ff  74 06 00 00 8c d6 ff ff   |T...Z...t.......|
0x804b500:   94 06 00 00 bc d6 ff ff  b4 06 00 00 01 d7 ff ff   |................|
0x804b510:   d4 06 00 00 40 d7 ff ff  f4 06 00 00 72 d7 ff ff   |....@.......r...|
0x804b520:   14 07 00 00 9e d7 ff ff  34 07 00 00 bc d7 ff ff   |........4.......|
0x804b530:   54 07 00 00 e4 d7 ff ff  74 07 00 00 09 d8 ff ff   |T.......t.......|
0x804b540:   94 07 00 00 2e d8 ff ff  b4 07 00 00 65 d8 ff ff   |............e...|
0x804b550:   d4 07 00 00 99 d8 ff ff  f4 07 00 00 eb d8 ff ff   |................|
0x804b560:   18 08 00 00 37 d9 ff ff  3c 08 00 00 6e d9 ff ff   |....7...<...n...|
0x804b570:   5c 08 00 00 9f d9 ff ff  7c 08 00 00 be d9 ff ff   |\.......|.......|
0x804b580:   9c 08 00 00 e8 d9 ff ff  bc 08 00 00 10 da ff ff   |................|
0x804b590:   dc 08 00 00 39 da ff ff  fc 08 00 00 75 da ff ff   |....9.......u...|
0x804b5a0:   1c 09 00 00 af da ff ff  3c 09 00 00 02 db ff ff   |........<.......|
0x804b5b0:   60 09 00 00 4f db ff ff  84 09 00 00 87 db ff ff   |`...O...........|
0x804b5c0:   a4 09 00 00 b9 db ff ff  c4 09 00 00 cd db ff ff   |................|
0x804b5d0:   e4 09 00 00 e4 db ff ff  04 0a 00 00 f9 db ff ff   |................|
0x804b5e0:   24 0a 00 00 0f dc ff ff  44 0a 00 00 36 dc ff ff   |$.......D...6...|
0x804b5f0:   64 0a 00 00 5b dc ff ff  84 0a 00 00 9a dc ff ff   |d...[...........|
0x804b600:   a4 0a 00 00 d3 dc ff ff  c4 0a 00 00 ff dc ff ff   |................|
0x804b610:   e4 0a 00 00 25 dd ff ff  04 0b 00 00 67 dd ff ff   |....%.......g...|
0x804b620:   24 0b 00 00 a9 dd ff ff  44 0b 00 00 eb dd ff ff   |$.......D.......|
0x804b630:   64 0b 00 00 60 de ff ff  84 0b 00 00 bd de ff ff   |d...`...........|
0x804b640:   a4 0b 00 00 1a df ff ff  c4 0b 00 00 77 df ff ff   |............w...|
0x804b650:   e4 0b 00 00 07 e0 ff ff  04 0c 00 00 6b e0 ff ff   |............k...|
0x804b660:   24 0c 00 00 db e0 ff ff  44 0c 00 00 22 e1 ff ff   |$.......D..."...|
0x804b670:   68 0c 00 00 77 e1 ff ff  88 0c 00 00 be e1 ff ff   |h...w...........|
0x804b680:   ac 0c 00 00 26 e2 ff ff  d0 0c 00 00 33 e4 ff ff   |....&.......3...|
0x804b690:   00 0d 00 00 eb f9 ff ff  30 0d 00 00 01 fe ff ff   |........0.......|
0x804b6a0:   68 0d 00 00 05 fe ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b6b0:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b6bc:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b6cc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b6dc:   a4 cc ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b6ec:   30 00 00 00 00 cc ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b6fc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b70c:   10 00 00 00 54 00 00 00  1c cc ff ff 08 00 00 00   |....T...........|
0x804b71c:   00 00 00 00 1c 00 00 00  68 00 00 00 2e cd ff ff   |........h.......|
0x804b72c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b73c:   04 04 00 00 20 00 00 00  88 00 00 00 1e cd ff ff   |.... ...........|
0x804b74c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b75c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b76c:   28 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |(........A....B.|
0x804b77c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b78c:   26 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |&...(....A....B.|
0x804b79c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b7ac:   2e cd ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b7bc:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b7cc:   38 cd ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |8...)....A....B.|
0x804b7dc:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b7ec:   41 cd ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |A...C....A....B.|
0x804b7fc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b80c:   64 cd ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |d...A....A....B.|
0x804b81c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b82c:   85 cd ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b83c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b84c:   90 01 00 00 b9 cd ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b85c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b86c:   1c 00 00 00 b4 01 00 00  e7 cd ff ff 3d 00 00 00   |............=...|
0x804b87c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b88c:   1c 00 00 00 d4 01 00 00  04 ce ff ff 37 00 00 00   |............7...|
0x804b89c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b8ac:   1c 00 00 00 f4 01 00 00  1b ce ff ff 1f 00 00 00   |................|
0x804b8bc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b8cc:   1c 00 00 00 14 02 00 00  1a ce ff ff 2a 00 00 00   |............*...|
0x804b8dc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b8ec:   1c 00 00 00 34 02 00 00  24 ce ff ff 2c 00 00 00   |....4...$...,...|
0x804b8fc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b90c:   1c 00 00 00 54 02 00 00  30 ce ff ff 2b 00 00 00   |....T...0...+...|
0x804b91c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b92c:   1c 00 00 00 74 02 00 00  3b ce ff ff 49 00 00 00   |....t...;...I...|
0x804b93c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b94c:   1c 00 00 00 94 02 00 00  64 ce ff ff 47 00 00 00   |........d...G...|
0x804b95c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b96c:   20 00 00 00 b4 02 00 00  8b ce ff ff 5a 00 00 00   | ...........Z...|
0x804b97c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b98c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 c1 ce ff ff   |.... ...........|
0x804b99c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b9ac:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b9bc:   f1 ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b9cc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b9dc:   10 cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b9ec:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b9fc:   29 cf ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |)..."....A....B.|
0x804ba0c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804ba1c:   2b cf ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |+...N....A....B.|
0x804ba2c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ba3c:   59 cf ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |Y...<....A....B.|
0x804ba4c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ba5c:   75 cf ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |u........A....B.|
0x804ba6c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ba7c:   de cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba8c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804ba9c:   f0 cf ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804baac:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804babc:   00 d0 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804bacc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804badc:   25 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |%...?....A....B.|
0x804baec:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bafc:   44 d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |D...2....A....B.|
0x804bb0c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bb1c:   56 d0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |V...,....A....B.|
0x804bb2c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bb3c:   62 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |b........A....B.|
0x804bb4c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bb5c:   60 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |`...(....A....B.|
0x804bb6c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bb7c:   68 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |h...%....A....B.|
0x804bb8c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bb9c:   6d d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |m...%....A....B.|
0x804bbac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bbbc:   72 d0 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |r...7....A....B.|
0x804bbcc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bbdc:   89 d0 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bbec:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bbfc:   9d d0 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bc0c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bc1c:   60 05 00 00 cb d0 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bc2c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bc3c:   1c 00 00 00 84 05 00 00  f3 d0 ff ff 37 00 00 00   |............7...|
0x804bc4c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bc5c:   1c 00 00 00 a4 05 00 00  0a d1 ff ff 31 00 00 00   |............1...|
0x804bc6c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bc7c:   1c 00 00 00 c4 05 00 00  1b d1 ff ff 1f 00 00 00   |................|
0x804bc8c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bc9c:   1c 00 00 00 e4 05 00 00  1a d1 ff ff 2a 00 00 00   |............*...|
0x804bcac:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bcbc:   1c 00 00 00 04 06 00 00  24 d1 ff ff 28 00 00 00   |........$...(...|
0x804bccc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bcdc:   1c 00 00 00 24 06 00 00  2c d1 ff ff 29 00 00 00   |....$...,...)...|
0x804bcec:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bcfc:   1c 00 00 00 44 06 00 00  35 d1 ff ff 3c 00 00 00   |....D...5...<...|
0x804bd0c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bd1c:   1c 00 00 00 64 06 00 00  51 d1 ff ff 3a 00 00 00   |....d...Q...:...|
0x804bd2c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bd3c:   20 00 00 00 84 06 00 00  6b d1 ff ff 53 00 00 00   | .......k...S...|
0x804bd4c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bd5c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 9a d1 ff ff   |.... ...........|
0x804bd6c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bd7c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bd8c:   c3 d1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bd9c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bdac:   db d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bdbc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bdcc:   ed d1 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bddc:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bdec:   e1 d1 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdfc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804be0c:   d8 d1 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be1c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804be2c:   cd d1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be3c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804be4c:   c3 d1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804be5c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804be6c:   ca d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be7c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804be8c:   cf d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804be9c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804beac:   ee d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bebc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804becc:   07 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bedc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804beec:   13 d2 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804befc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bf0c:   19 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bf1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bf2c:   3b d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |;...B....A....B.|
0x804bf3c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bf4c:   5d d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |]...B....A....B.|
0x804bf5c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bf6c:   7f d2 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bf7c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bf8c:   d4 d2 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bf9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bfac:   11 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bfbc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bfcc:   4e d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |N...]....A....B.|
0x804bfdc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bfec:   8b d3 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bffc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c00c:   fb d3 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804c01c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c02c:   3f d4 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |?...p....A....B.|
0x804c03c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c04c:   8f d4 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c05c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c06c:   b0 09 00 00 b2 d4 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c07c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c08c:   d0 09 00 00 e7 d4 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c09c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c0ac:   20 00 00 00 f4 09 00 00  0a d5 ff ff 68 00 00 00   | ...........h...|
0x804c0bc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c0cc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 4e d5 ff ff   |....,.......N...|
0x804c0dc:   0d 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804c0ec:   86 04 83 05 03 00 02 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c0fc:   04 00 00 00 2c 00 00 00  48 0a 00 00 2b d7 ff ff   |....,...H...+...|
0x804c10c:   b8 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c11c:   86 04 83 05 03 a8 15 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c12c:   04 00 00 00 34 00 00 00  78 0a 00 00 b3 ec ff ff   |....4...x.......|
0x804c13c:   16 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c14c:   0f 03 75 78 06 10 03 02  75 7c 03 01 04 c1 0c 01   |..ux....u|......|
0x804c15c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c16c:   b0 0a 00 00 91 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c17c:   10 00 00 00 c4 0a 00 00  81 f0 ff ff 04 00 00 00   |................|
0x804c18c:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804c19c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c1ac:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c1bc:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c1cc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c1dc:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804c1ec:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 74 b2 04 08  19 00 00 00 0c df 04 08   |....t...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 2e 6f ad 70   |.............o.p|
0x804e028:   ff 00 00 00 cc 43 d7 60  fd 00 00 00 18 d3 2d 9a   |.....C.`......-.|
0x804e038:   04 00 be 2c e5 40 45 2c  01 00 00 00 01 00 00 00   |...,.@E,........|
0x804e048:   07 00 00 00 55 a1 00 00  53 16 c2 2b 07 9a 29 b9   |....U...S..+..).|
0x804e058:   01 00 00 00 ff ff ff ff  b4 7d be 18 1f 00 d1 71   |.........}.....q|
0x804e068:   a0 20 ea 66 03 00 6e 00  ff ff 00 00 eb 34 51 ed   |. .f..n......4Q.|
0x804e078:   f1 00 00 00 42 f0 89 62  9d 32 ff ff ??            |....B..b.2..?   |
