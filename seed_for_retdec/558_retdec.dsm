;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:48:49
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 40 d2 ff ff               	lea eax, [ebx - 0x2dc0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 e0 d1 ff ff               	lea eax, [ebx - 0x2e20]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 b4 ad 04 08               	mov eax, 0x804adb4
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 7c e0 04 08                  	mov eax, 0x804e07c
0x80483a5:   3d 7c e0 04 08                  	cmp eax, 0x804e07c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 7c e0 04 08                  	push 0x804e07c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 7c e0 04 08                  	mov eax, 0x804e07c
0x80483e5:   2d 7c e0 04 08                  	sub eax, 0x804e07c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 7c e0 04 08                  	push 0x804e07c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 70 2d 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 5c 2d 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 60 d2 ff ff               	lea edx, [eax - 0x2da0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 2f 2d 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 11 2d 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 e9 2c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 bf 2c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 96 2c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 53 2c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 11 2c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 b9 2b 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 68 2b 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 2b 2b 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 f4 2a 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 d5 2a 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 ab 2a 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 7f 2a 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 54 2a 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 0b 2a 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 c3 29 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 69 29 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 16 29 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 d7 28 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 a1 28 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 7f 28 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 31 28 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 f5 27 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 6c 27 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 3a 27 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 0a 27 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 c5 26 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 86 26 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 54 26 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 25 26 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 07 26 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 df 25 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 ba 25 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 95 25 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 5e 25 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 29 25 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 d7 24 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 8c 24 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 55 24 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 24 24 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 05 24 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 db 23 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 b3 23 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 8a 23 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 4e 23 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 13 23 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 c0 22 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 74 22 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 3c 22 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 0d 22 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 f9 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 e2 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 cd 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 b7 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 90 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 6b 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 2c 21 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 f3 20 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 c7 20 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 a1 20 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 64 d3 ff ff               	fld dword ptr [eax - 0x2c9c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 64 d3 ff ff               	fld dword ptr [eax - 0x2c9c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 68 d3 ff ff               	fld dword ptr [eax - 0x2c98]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 5f 20 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 64 d3 ff ff               	fld dword ptr [eax - 0x2c9c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 64 d3 ff ff               	fld dword ptr [eax - 0x2c9c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 68 d3 ff ff               	fld dword ptr [eax - 0x2c98]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 1d 20 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 6c d3 ff ff               	fld dword ptr [eax - 0x2c94]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 70 d3 ff ff               	fld dword ptr [eax - 0x2c90]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 74 d3 ff ff               	fld dword ptr [eax - 0x2c8c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 db 1f 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 78 d3 ff ff               	fld dword ptr [eax - 0x2c88]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 7c d3 ff ff               	fld dword ptr [eax - 0x2c84]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 80 d3 ff ff               	fld dword ptr [eax - 0x2c80]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 63 1f 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 88 d3 ff ff               	fld qword ptr [eax - 0x2c78]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 88 d3 ff ff               	fld qword ptr [eax - 0x2c78]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 90 d3 ff ff               	fld qword ptr [eax - 0x2c70]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 06 1f 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 88 d3 ff ff               	fld qword ptr [eax - 0x2c78]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 88 d3 ff ff               	fld qword ptr [eax - 0x2c78]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 90 d3 ff ff               	fld qword ptr [eax - 0x2c70]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 a9 1e 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 98 d3 ff ff               	fld qword ptr [eax - 0x2c68]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 a0 d3 ff ff               	fld qword ptr [eax - 0x2c60]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 a8 d3 ff ff               	fld qword ptr [eax - 0x2c58]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 4c 1e 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 b0 d3 ff ff               	fld qword ptr [eax - 0x2c50]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 b8 d3 ff ff               	fld qword ptr [eax - 0x2c48]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 c0 d3 ff ff               	fld qword ptr [eax - 0x2c40]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 bc 1d 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 c8 d3 ff ff               	fld dword ptr [eax - 0x2c38]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 cc d3 ff ff               	fld dword ptr [eax - 0x2c34]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 58 1d 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 e7 1c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 a4 1c 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 70 d2 ff ff               	lea eax, [ebx - 0x2d90]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 94 d2 ff ff               	lea eax, [ebx - 0x2d6c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049816
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 68                        	sub esp, 0x68
0x804962f:   e8 9e 1b 00 00                  	call 0x804b1d2 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049640:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049649:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x804964c:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804964f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049652:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049655:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049658:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804965b:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804965e:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049661:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049664:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049667:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804966a:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x804966d:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049670:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x8049673:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049676:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049679:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804967c:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804967f:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049682:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049685:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049688:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804968c:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x804968f:   89 c8                           	mov eax, ecx
0x8049691:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x8049694:   89 d8                           	mov eax, ebx
0x8049696:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049699:   89 f0                           	mov eax, esi
0x804969b:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804969f:   89 f8                           	mov eax, edi
0x80496a1:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496a4:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a8:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496ab:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x80496af:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496b3:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496b7:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ba:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496be:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496c1:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496c5:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496c8:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496cc:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496d0:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496d4:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496d8:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496dc:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496e0:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e4:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496e8:   0f b6 45 8c                     	movzx eax, byte ptr [ebp - 0x74]
0x80496ec:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x80496ef:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496f3:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496f9:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496fc:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049702:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x8049705:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804970b:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804970f:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x8049715:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049719:   88 82 31 00 00 00               	mov byte ptr [edx + 0x31], al
0x804971f:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049722:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049728:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804972c:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049733:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049737:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x804973d:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049740:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x8049746:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x8049749:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804974f:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049753:   88 82 ac 04 00 00               	mov byte ptr [edx + 0x4ac], al
0x8049759:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804975d:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x8049764:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049768:   88 82 42 00 00 00               	mov byte ptr [edx + 0x42], al
0x804976e:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x8049772:   88 82 43 00 00 00               	mov byte ptr [edx + 0x43], al
0x8049778:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804977b:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049781:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049784:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804978a:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x804978e:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x8049794:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049797:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804979d:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497a1:   66 89 82 ae 04 00 00            	mov word ptr [edx + 0x4ae], ax
0x80497a8:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497ab:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497b1:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497b5:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497bc:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497bf:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497c5:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497c9:   66 89 82 60 00 00 00            	mov word ptr [edx + 0x60], ax
0x80497d0:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497d3:   89 82 64 00 00 00               	mov dword ptr [edx + 0x64], eax
0x80497d9:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497dd:   66 89 82 68 00 00 00            	mov word ptr [edx + 0x68], ax
0x80497e4:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x80497e7:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x80497ed:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x80497f0:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497f6:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x80497fa:   88 82 74 00 00 00               	mov byte ptr [edx + 0x74], al
0x8049800:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049803:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049809:   b8 00 00 00 00                  	mov eax, 0
0x804980e:   83 c4 68                        	add esp, 0x68
0x8049811:   5b                              	pop ebx
0x8049812:   5e                              	pop esi
0x8049813:   5f                              	pop edi
0x8049814:   5d                              	pop ebp
0x8049815:   c3                              	ret 
; function: func_1 at 0x8049816 -- 0x804adb4
0x8049816:   55                              	push ebp
0x8049817:   89 e5                           	mov ebp, esp
0x8049819:   57                              	push edi
0x804981a:   56                              	push esi
0x804981b:   53                              	push ebx
0x804981c:   81 ec a4 01 00 00               	sub esp, 0x1a4
0x8049822:   e8 a7 19 00 00                  	call 0x804b1ce <__x86.get_pc_thunk.ax>
0x8049827:   05 d9 47 00 00                  	add eax, 0x47d9
0x804982c:   c6 85 5f ff ff ff 08            	mov byte ptr [ebp - 0xa1], 8
0x8049833:   c6 85 5e ff ff ff 00            	mov byte ptr [ebp - 0xa2], 0
0x804983a:   c7 45 f0 08 00 00 00            	mov dword ptr [ebp - 0x10], 8
0x8049841:   c7 45 ec ed fe 2b d6            	mov dword ptr [ebp - 0x14], 0xd62bfeed
0x8049848:   c6 45 eb ff                     	mov byte ptr [ebp - 0x15], 0xff
0x804984c:   c6 45 ea 06                     	mov byte ptr [ebp - 0x16], 6
0x8049850:   c7 45 e4 03 00 00 00            	mov dword ptr [ebp - 0x1c], 3
0x8049857:   66 c7 85 5c ff ff ff 51 18      	mov word ptr [ebp - 0xa4], 0x1851
0x8049860:   c6 85 5b ff ff ff 00            	mov byte ptr [ebp - 0xa5], 0
0x8049867:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804986e:   c7 45 dc be 22 ab 8b            	mov dword ptr [ebp - 0x24], 0x8bab22be
0x8049875:   c6 45 db 00                     	mov byte ptr [ebp - 0x25], 0
0x8049879:   66 c7 45 d8 ff ff               	mov word ptr [ebp - 0x28], 0xffff
0x804987f:   c6 45 d7 ce                     	mov byte ptr [ebp - 0x29], 0xce
0x8049883:   c6 45 d6 8d                     	mov byte ptr [ebp - 0x2a], 0x8d
0x8049887:   c7 45 d0 02 00 00 00            	mov dword ptr [ebp - 0x30], 2
0x804988e:   c7 45 cc 9a 69 98 ef            	mov dword ptr [ebp - 0x34], 0xef98699a
0x8049895:   c6 45 cb ff                     	mov byte ptr [ebp - 0x35], 0xff
0x8049899:   c7 45 c4 01 00 00 00            	mov dword ptr [ebp - 0x3c], 1
0x80498a0:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x80498a6:   c7 85 54 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xac], 9
0x80498b0:   66 c7 45 c0 da fc               	mov word ptr [ebp - 0x40], 0xfcda
0x80498b6:   c7 45 bc 1f be 53 32            	mov dword ptr [ebp - 0x44], 0x3253be1f
0x80498bd:   66 c7 45 ba 9b a2               	mov word ptr [ebp - 0x46], 0xa29b
0x80498c3:   c7 45 b4 d9 99 50 e1            	mov dword ptr [ebp - 0x4c], 0xe15099d9
0x80498ca:   66 c7 45 b2 5f f3               	mov word ptr [ebp - 0x4e], 0xf35f
0x80498d0:   c7 45 ac a6 00 06 88            	mov dword ptr [ebp - 0x54], 0x880600a6
0x80498d7:   c7 85 50 ff ff ff d1 83 50 93   	mov dword ptr [ebp - 0xb0], 0x935083d1
0x80498e1:   c6 45 ab 23                     	mov byte ptr [ebp - 0x55], 0x23
0x80498e5:   c7 45 a4 c8 a5 c2 8b            	mov dword ptr [ebp - 0x5c], 0x8bc2a5c8
0x80498ec:   c7 45 a0 03 00 00 00            	mov dword ptr [ebp - 0x60], 3
0x80498f3:   c7 45 9c c9 f1 5c 7b            	mov dword ptr [ebp - 0x64], 0x7b5cf1c9
0x80498fa:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x8049901:   c7 85 4c ff ff ff 50 6c 7d 13   	mov dword ptr [ebp - 0xb4], 0x137d6c50
0x804990b:   c7 45 94 24 b2 53 09            	mov dword ptr [ebp - 0x6c], 0x953b224
0x8049912:   66 c7 85 4a ff ff ff 03 00      	mov word ptr [ebp - 0xb6], 3
0x804991b:   66 c7 45 92 fc ff               	mov word ptr [ebp - 0x6e], 0xfffc
0x8049921:   c7 45 8c 04 00 00 00            	mov dword ptr [ebp - 0x74], 4
0x8049928:   c7 85 44 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xbc], 0
0x8049932:   66 c7 85 42 ff ff ff 5f 3b      	mov word ptr [ebp - 0xbe], 0x3b5f
0x804993b:   c7 85 3c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc4], 0xffffffff
0x8049945:   81 7d a0 07 f3 0e f9            	cmp dword ptr [ebp - 0x60], 0xf90ef307
0x804994c:   0f 94 c0                        	sete al
0x804994f:   0f b6 d0                        	movzx edx, al
0x8049952:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049955:   0f be c0                        	movsx eax, al
0x8049958:   bb ff ff ff ff                  	mov ebx, 0xffffffff
0x804995d:   89 c1                           	mov ecx, eax
0x804995f:   d3 e3                           	shl ebx, cl
0x8049961:   89 d8                           	mov eax, ebx
0x8049963:   0f be c0                        	movsx eax, al
0x8049966:   0f af d0                        	imul edx, eax
0x8049969:   0f be 85 5e ff ff ff            	movsx eax, byte ptr [ebp - 0xa2]
0x8049970:   39 c2                           	cmp edx, eax
0x8049972:   0f 95 c0                        	setne al
0x8049975:   0f b6 d0                        	movzx edx, al
0x8049978:   66 0f be 85 5e ff ff ff         	movsx ax, byte ptr [ebp - 0xa2]
0x8049980:   0f b7 c0                        	movzx eax, ax
0x8049983:   29 c2                           	sub edx, eax
0x8049985:   0f be 85 5e ff ff ff            	movsx eax, byte ptr [ebp - 0xa2]
0x804998c:   09 d0                           	or eax, edx
0x804998e:   83 f8 0d                        	cmp eax, 0xd
0x8049991:   0f 9e c0                        	setle al
0x8049994:   0f b6 c0                        	movzx eax, al
0x8049997:   89 c1                           	mov ecx, eax
0x8049999:   66 0f be 85 5e ff ff ff         	movsx ax, byte ptr [ebp - 0xa2]
0x80499a1:   89 c2                           	mov edx, eax
0x80499a3:   89 c8                           	mov eax, ecx
0x80499a5:   0f af c2                        	imul eax, edx
0x80499a8:   0f b6 d0                        	movzx edx, al
0x80499ab:   0f b6 85 5e ff ff ff            	movzx eax, byte ptr [ebp - 0xa2]
0x80499b2:   0f b6 c0                        	movzx eax, al
0x80499b5:   29 c2                           	sub edx, eax
0x80499b7:   0f be 85 5e ff ff ff            	movsx eax, byte ptr [ebp - 0xa2]
0x80499be:   39 c2                           	cmp edx, eax
0x80499c0:   7d 07                           	jge 0x80499c9 <func_1+0x1b3>
0x80499c2:   b8 00 00 00 00                  	mov eax, 0
0x80499c7:   eb 05                           	jmp 0x80499ce <func_1+0x1b8>
0x80499c9:   b8 ff ff ff ff                  	mov eax, 0xffffffff
0x80499ce:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x80499d1:   81 75 f0 58 f7 00 00            	xor dword ptr [ebp - 0x10], 0xf758
0x80499d8:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x80499db:   0f b7 c0                        	movzx eax, ax
0x80499de:   c1 e0 0a                        	shl eax, 0xa
0x80499e1:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x80499e4:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x80499eb:   0f 94 c0                        	sete al
0x80499ee:   0f b6 d0                        	movzx edx, al
0x80499f1:   0f b6 85 5f ff ff ff            	movzx eax, byte ptr [ebp - 0xa1]
0x80499f8:   39 c2                           	cmp edx, eax
0x80499fa:   0f 9c c0                        	setl al
0x80499fd:   0f b6 c0                        	movzx eax, al
0x8049a00:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049a03:   0f 9c c0                        	setl al
0x8049a06:   0f b6 c0                        	movzx eax, al
0x8049a09:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a0c:   0f 9e c0                        	setle al
0x8049a0f:   0f b6 c0                        	movzx eax, al
0x8049a12:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x8049a15:   0f 94 c0                        	sete al
0x8049a18:   0f b6 c0                        	movzx eax, al
0x8049a1b:   f7 d0                           	not eax
0x8049a1d:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a20:   0f 94 c0                        	sete al
0x8049a23:   0f b6 c0                        	movzx eax, al
0x8049a26:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049a29:   0f 94 c0                        	sete al
0x8049a2c:   0f b6 c0                        	movzx eax, al
0x8049a2f:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049a32:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a36:   0f 84 d8 00 00 00               	je 0x8049b14 <func_1+0x2fe>
0x8049a3c:   c6 85 eb fe ff ff 4d            	mov byte ptr [ebp - 0x115], 0x4d
0x8049a43:   c7 85 e4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x11c], 0
0x8049a4d:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049a50:   83 c8 05                        	or eax, 5
0x8049a53:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049a56:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049a5a:   0f be 95 5e ff ff ff            	movsx edx, byte ptr [ebp - 0xa2]
0x8049a61:   30 45 ea                        	xor byte ptr [ebp - 0x16], al
0x8049a64:   80 7d ea 00                     	cmp byte ptr [ebp - 0x16], 0
0x8049a68:   75 07                           	jne 0x8049a71 <func_1+0x25b>
0x8049a6a:   b8 1d 74 86 c5                  	mov eax, 0xc586741d
0x8049a6f:   eb 05                           	jmp 0x8049a76 <func_1+0x260>
0x8049a71:   b8 1c 74 86 c5                  	mov eax, 0xc586741c
0x8049a76:   21 d0                           	and eax, edx
0x8049a78:   85 c0                           	test eax, eax
0x8049a7a:   75 09                           	jne 0x8049a85 <func_1+0x26f>
0x8049a7c:   80 bd 5e ff ff ff 00            	cmp byte ptr [ebp - 0xa2], 0
0x8049a83:   74 07                           	je 0x8049a8c <func_1+0x276>
0x8049a85:   b8 01 00 00 00                  	mov eax, 1
0x8049a8a:   eb 05                           	jmp 0x8049a91 <func_1+0x27b>
0x8049a8c:   b8 00 00 00 00                  	mov eax, 0
0x8049a91:   0b 45 9c                        	or eax, dword ptr [ebp - 0x64]
0x8049a94:   3d fe 00 00 00                  	cmp eax, 0xfe
0x8049a99:   77 07                           	ja 0x8049aa2 <func_1+0x28c>
0x8049a9b:   ba bf 40 00 00                  	mov edx, 0x40bf
0x8049aa0:   eb 05                           	jmp 0x8049aa7 <func_1+0x291>
0x8049aa2:   ba 00 00 00 00                  	mov edx, 0
0x8049aa7:   0f be 85 eb fe ff ff            	movsx eax, byte ptr [ebp - 0x115]
0x8049aae:   39 c2                           	cmp edx, eax
0x8049ab0:   0f 9c c0                        	setl al
0x8049ab3:   89 c2                           	mov edx, eax
0x8049ab5:   0f b6 85 eb fe ff ff            	movzx eax, byte ptr [ebp - 0x115]
0x8049abc:   29 c2                           	sub edx, eax
0x8049abe:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ac1:   89 c1                           	mov ecx, eax
0x8049ac3:   0f b6 c2                        	movzx eax, dl
0x8049ac6:   f6 f1                           	div cl
0x8049ac8:   0f b6 c0                        	movzx eax, al
0x8049acb:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049ace:   c7 45 f0 15 00 00 00            	mov dword ptr [ebp - 0x10], 0x15
0x8049ad5:   eb 32                           	jmp 0x8049b09 <func_1+0x2f3>
0x8049ad7:   c7 85 e0 fe ff ff 9b 3e 96 2e   	mov dword ptr [ebp - 0x120], 0x2e963e9b
0x8049ae1:   c7 85 dc fe ff ff 9c db 9e b0   	mov dword ptr [ebp - 0x124], 0xb09edb9c
0x8049aeb:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049aee:   83 f8 04                        	cmp eax, 4
0x8049af1:   0f 96 c0                        	setbe al
0x8049af4:   0f b6 c0                        	movzx eax, al
0x8049af7:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x8049afa:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x8049afe:   80 bd eb fe ff ff 00            	cmp byte ptr [ebp - 0x115], 0
0x8049b05:   83 45 f0 08                     	add dword ptr [ebp - 0x10], 8
0x8049b09:   83 7d f0 15                     	cmp dword ptr [ebp - 0x10], 0x15
0x8049b0d:   75 c8                           	jne 0x8049ad7 <func_1+0x2c1>
0x8049b0f:   e9 e0 0a 00 00                  	jmp 0x804a5f4 <func_1+0xdde>
0x8049b14:   c6 85 3b ff ff ff fe            	mov byte ptr [ebp - 0xc5], 0xfe
0x8049b1b:   c7 45 88 5e a9 c7 7b            	mov dword ptr [ebp - 0x78], 0x7bc7a95e
0x8049b22:   c7 45 84 7f 44 ca 35            	mov dword ptr [ebp - 0x7c], 0x35ca447f
0x8049b29:   c6 85 3a ff ff ff 6e            	mov byte ptr [ebp - 0xc6], 0x6e
0x8049b30:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x8049b37:   c7 85 7c ff ff ff ab 9a fb 3e   	mov dword ptr [ebp - 0x84], 0x3efb9aab
0x8049b41:   66 c7 85 7a ff ff ff a5 df      	mov word ptr [ebp - 0x86], 0xdfa5
0x8049b4a:   c6 85 39 ff ff ff cb            	mov byte ptr [ebp - 0xc7], 0xcb
0x8049b51:   66 c7 85 36 ff ff ff a0 17      	mov word ptr [ebp - 0xca], 0x17a0
0x8049b5a:   80 7d ea 00                     	cmp byte ptr [ebp - 0x16], 0
0x8049b5e:   74 05                           	je 0x8049b65 <func_1+0x34f>
0x8049b60:   e9 6c fe ff ff                  	jmp 0x80499d1 <func_1+0x1bb>
0x8049b65:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049b6c:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049b6f:   0f b6 9d 5f ff ff ff            	movzx ebx, byte ptr [ebp - 0xa1]
0x8049b76:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b79:   0f b7 c8                        	movzx ecx, ax
0x8049b7c:   ba 0d 80 02 80                  	mov edx, 0x8002800d
0x8049b81:   89 c8                           	mov eax, ecx
0x8049b83:   f7 ea                           	imul edx
0x8049b85:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049b88:   c1 f8 0f                        	sar eax, 0xf
0x8049b8b:   89 c2                           	mov edx, eax
0x8049b8d:   89 c8                           	mov eax, ecx
0x8049b8f:   c1 f8 1f                        	sar eax, 0x1f
0x8049b92:   29 c2                           	sub edx, eax
0x8049b94:   89 d0                           	mov eax, edx
0x8049b96:   69 c0 fb ff 00 00               	imul eax, eax, 0xfffb
0x8049b9c:   29 c1                           	sub ecx, eax
0x8049b9e:   89 c8                           	mov eax, ecx
0x8049ba0:   f7 d8                           	neg eax
0x8049ba2:   0f b7 c0                        	movzx eax, ax
0x8049ba5:   0f af c3                        	imul eax, ebx
0x8049ba8:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x8049bab:   0f b6 85 5e ff ff ff            	movzx eax, byte ptr [ebp - 0xa2]
0x8049bb2:   0f be c0                        	movsx eax, al
0x8049bb5:   31 45 dc                        	xor dword ptr [ebp - 0x24], eax
0x8049bb8:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049bbf:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x8049bc2:   c6 45 ea 00                     	mov byte ptr [ebp - 0x16], 0
0x8049bc6:   e9 16 0a 00 00                  	jmp 0x804a5e1 <func_1+0xdcb>
0x8049bcb:   66 c7 85 34 ff ff ff 06 00      	mov word ptr [ebp - 0xcc], 6
0x8049bd4:   c7 85 74 ff ff ff e8 ee 49 3c   	mov dword ptr [ebp - 0x8c], 0x3c49eee8
0x8049bde:   c6 85 33 ff ff ff 00            	mov byte ptr [ebp - 0xcd], 0
0x8049be5:   66 c7 85 30 ff ff ff be be      	mov word ptr [ebp - 0xd0], 0xbebe
0x8049bee:   c7 85 70 ff ff ff 21 73 79 02   	mov dword ptr [ebp - 0x90], 0x2797321
0x8049bf8:   c6 85 2f ff ff ff c5            	mov byte ptr [ebp - 0xd1], 0xc5
0x8049bff:   c7 85 28 ff ff ff 91 17 31 70   	mov dword ptr [ebp - 0xd8], 0x70311791
0x8049c09:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c0c:   83 f0 01                        	xor eax, 1
0x8049c0f:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049c12:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c15:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x8049c18:   0f 97 c0                        	seta al
0x8049c1b:   0f b6 c0                        	movzx eax, al
0x8049c1e:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c21:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049c28:   3a 85 5f ff ff ff               	cmp al, byte ptr [ebp - 0xa1]
0x8049c2e:   0f 92 c0                        	setb al
0x8049c31:   0f b6 d0                        	movzx edx, al
0x8049c34:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049c37:   0f b7 c0                        	movzx eax, ax
0x8049c3a:   01 d0                           	add eax, edx
0x8049c3c:   21 45 88                        	and dword ptr [ebp - 0x78], eax
0x8049c3f:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049c42:   3d 8d 82 c1 9e                  	cmp eax, 0x9ec1828d
0x8049c47:   0f 97 c0                        	seta al
0x8049c4a:   0f b6 c0                        	movzx eax, al
0x8049c4d:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049c50:   83 6d e0 01                     	sub dword ptr [ebp - 0x20], 1
0x8049c54:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c57:   0f be c0                        	movsx eax, al
0x8049c5a:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x8049c5d:   0f be fa                        	movsx edi, dl
0x8049c60:   99                              	cdq 
0x8049c61:   f7 ff                           	idiv edi
0x8049c63:   89 c1                           	mov ecx, eax
0x8049c65:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x8049c6c:   89 c2                           	mov edx, eax
0x8049c6e:   89 c8                           	mov eax, ecx
0x8049c70:   0f af c2                        	imul eax, edx
0x8049c73:   0f b6 d0                        	movzx edx, al
0x8049c76:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x8049c7d:   0f b6 c0                        	movzx eax, al
0x8049c80:   89 c1                           	mov ecx, eax
0x8049c82:   d3 e2                           	shl edx, cl
0x8049c84:   89 d0                           	mov eax, edx
0x8049c86:   85 c0                           	test eax, eax
0x8049c88:   0f 95 c0                        	setne al
0x8049c8b:   0f b6 c0                        	movzx eax, al
0x8049c8e:   89 c2                           	mov edx, eax
0x8049c90:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x8049c97:   31 d0                           	xor eax, edx
0x8049c99:   0f b6 c0                        	movzx eax, al
0x8049c9c:   83 c0 7e                        	add eax, 0x7e
0x8049c9f:   89 c1                           	mov ecx, eax
0x8049ca1:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049ca4:   89 c2                           	mov edx, eax
0x8049ca6:   89 c8                           	mov eax, ecx
0x8049ca8:   0f af c2                        	imul eax, edx
0x8049cab:   83 f0 f0                        	xor eax, 0xfffffff0
0x8049cae:   0f be d0                        	movsx edx, al
0x8049cb1:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x8049cb8:   0f be c0                        	movsx eax, al
0x8049cbb:   01 d0                           	add eax, edx
0x8049cbd:   33 85 4c ff ff ff               	xor eax, dword ptr [ebp - 0xb4]
0x8049cc3:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x8049cc6:   89 c2                           	mov edx, eax
0x8049cc8:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049ccb:   31 d0                           	xor eax, edx
0x8049ccd:   ba 1d 7f eb ce                  	mov edx, 0xceeb7f1d
0x8049cd2:   f7 e2                           	mul edx
0x8049cd4:   89 d1                           	mov ecx, edx
0x8049cd6:   c1 e9 1b                        	shr ecx, 0x1b
0x8049cd9:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049cdc:   0f be c0                        	movsx eax, al
0x8049cdf:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x8049ce2:   09 ca                           	or edx, ecx
0x8049ce4:   89 55 98                        	mov dword ptr [ebp - 0x68], edx
0x8049ce7:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x8049cea:   0f be fa                        	movsx edi, dl
0x8049ced:   99                              	cdq 
0x8049cee:   f7 ff                           	idiv edi
0x8049cf0:   85 c0                           	test eax, eax
0x8049cf2:   0f 84 9c 04 00 00               	je 0x804a194 <func_1+0x97e>
0x8049cf8:   66 c7 85 10 ff ff ff 02 00      	mov word ptr [ebp - 0xf0], 2
0x8049d01:   c7 45 a0 ef ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffef
0x8049d08:   e9 49 01 00 00                  	jmp 0x8049e56 <func_1+0x640>
0x8049d0d:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x8049d17:   66 c7 85 f2 fe ff ff 99 8d      	mov word ptr [ebp - 0x10e], 0x8d99
0x8049d20:   c6 85 f1 fe ff ff 09            	mov byte ptr [ebp - 0x10f], 9
0x8049d27:   83 7d f0 ff                     	cmp dword ptr [ebp - 0x10], -1
0x8049d2b:   0f 95 c0                        	setne al
0x8049d2e:   0f b6 d0                        	movzx edx, al
0x8049d31:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x8049d38:   39 c2                           	cmp edx, eax
0x8049d3a:   0f 9c c0                        	setl al
0x8049d3d:   0f b6 c0                        	movzx eax, al
0x8049d40:   f7 d8                           	neg eax
0x8049d42:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049d45:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049d49:   0f b6 c0                        	movzx eax, al
0x8049d4c:   f6 75 ea                        	div byte ptr [ebp - 0x16]
0x8049d4f:   0f b6 c4                        	movzx eax, ah
0x8049d52:   84 c0                           	test al, al
0x8049d54:   0f 84 9e 00 00 00               	je 0x8049df8 <func_1+0x5e2>
0x8049d5a:   c7 85 ec fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x114], 5
0x8049d64:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049d6a:   0f be c0                        	movsx eax, al
0x8049d6d:   0f b7 95 34 ff ff ff            	movzx edx, word ptr [ebp - 0xcc]
0x8049d74:   88 55 db                        	mov byte ptr [ebp - 0x25], dl
0x8049d77:   0f be 4d db                     	movsx ecx, byte ptr [ebp - 0x25]
0x8049d7b:   81 7d f0 86 f5 f1 01            	cmp dword ptr [ebp - 0x10], 0x1f1f586
0x8049d82:   0f 95 c2                        	setne dl
0x8049d85:   0f b6 d2                        	movzx edx, dl
0x8049d88:   31 95 74 ff ff ff               	xor dword ptr [ebp - 0x8c], edx
0x8049d8e:   8b 95 74 ff ff ff               	mov edx, dword ptr [ebp - 0x8c]
0x8049d94:   83 ca 01                        	or edx, 1
0x8049d97:   39 d1                           	cmp ecx, edx
0x8049d99:   73 0a                           	jae 0x8049da5 <func_1+0x58f>
0x8049d9b:   66 83 bd 34 ff ff ff 00         	cmp word ptr [ebp - 0xcc], 0
0x8049da3:   74 07                           	je 0x8049dac <func_1+0x596>
0x8049da5:   ba 01 00 00 00                  	mov edx, 1
0x8049daa:   eb 05                           	jmp 0x8049db1 <func_1+0x59b>
0x8049dac:   ba 00 00 00 00                  	mov edx, 0
0x8049db1:   0f be ca                        	movsx ecx, dl
0x8049db4:   99                              	cdq 
0x8049db5:   f7 f9                           	idiv ecx
0x8049db7:   89 d0                           	mov eax, edx
0x8049db9:   83 f8 01                        	cmp eax, 1
0x8049dbc:   0f 95 c0                        	setne al
0x8049dbf:   0f b6 d0                        	movzx edx, al
0x8049dc2:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049dc6:   39 c2                           	cmp edx, eax
0x8049dc8:   0f 94 c0                        	sete al
0x8049dcb:   0f b6 d0                        	movzx edx, al
0x8049dce:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x8049dd5:   39 c2                           	cmp edx, eax
0x8049dd7:   0f 9f c0                        	setg al
0x8049dda:   0f b6 c0                        	movzx eax, al
0x8049ddd:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x8049de0:   0f be f2                        	movsx esi, dl
0x8049de3:   99                              	cdq 
0x8049de4:   f7 fe                           	idiv esi
0x8049de6:   21 85 ec fe ff ff               	and dword ptr [ebp - 0x114], eax
0x8049dec:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x8049df3:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049df6:   eb 5a                           	jmp 0x8049e52 <func_1+0x63c>
0x8049df8:   c6 85 f0 fe ff ff 31            	mov byte ptr [ebp - 0x110], 0x31
0x8049dff:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049e03:   83 c0 01                        	add eax, 1
0x8049e06:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049e0a:   b8 de 5b 91 3f                  	mov eax, 0x3f915bde
0x8049e0f:   ba 00 00 00 00                  	mov edx, 0
0x8049e14:   f7 75 9c                        	div dword ptr [ebp - 0x64]
0x8049e17:   89 c2                           	mov edx, eax
0x8049e19:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e1c:   31 d0                           	xor eax, edx
0x8049e1e:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049e21:   83 65 84 01                     	and dword ptr [ebp - 0x7c], 1
0x8049e25:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x8049e28:   35 07 f6 00 00                  	xor eax, 0xf607
0x8049e2d:   3d 2f b0 c3 d0                  	cmp eax, 0xd0c3b02f
0x8049e32:   0f 97 c0                        	seta al
0x8049e35:   0f b6 c0                        	movzx eax, al
0x8049e38:   20 45 d7                        	and byte ptr [ebp - 0x29], al
0x8049e3b:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049e3f:   c0 e8 07                        	shr al, 7
0x8049e42:   0f b6 c0                        	movzx eax, al
0x8049e45:   89 85 f4 fe ff ff               	mov dword ptr [ebp - 0x10c], eax
0x8049e4b:   c7 45 e4 c1 08 8d 31            	mov dword ptr [ebp - 0x1c], 0x318d08c1
0x8049e52:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x8049e56:   83 7d a0 31                     	cmp dword ptr [ebp - 0x60], 0x31
0x8049e5a:   0f 87 ad fe ff ff               	ja 0x8049d0d <func_1+0x4f7>
0x8049e60:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049e64:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049e68:   39 c2                           	cmp edx, eax
0x8049e6a:   0f 9d c0                        	setge al
0x8049e6d:   0f b6 d0                        	movzx edx, al
0x8049e70:   c6 45 d6 ff                     	mov byte ptr [ebp - 0x2a], 0xff
0x8049e74:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049e78:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x8049e7f:   33 85 74 ff ff ff               	xor eax, dword ptr [ebp - 0x8c]
0x8049e85:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049e88:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049e8b:   0f b7 c8                        	movzx ecx, ax
0x8049e8e:   66 0f be 85 33 ff ff ff         	movsx ax, byte ptr [ebp - 0xcd]
0x8049e96:   0f b7 c0                        	movzx eax, ax
0x8049e99:   01 c8                           	add eax, ecx
0x8049e9b:   39 c2                           	cmp edx, eax
0x8049e9d:   0f 9e c0                        	setle al
0x8049ea0:   0f b6 d0                        	movzx edx, al
0x8049ea3:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x8049ea7:   39 c2                           	cmp edx, eax
0x8049ea9:   0f 84 1e 01 00 00               	je 0x8049fcd <func_1+0x7b7>
0x8049eaf:   66 c7 85 08 ff ff ff 03 00      	mov word ptr [ebp - 0xf8], 3
0x8049eb8:   c7 85 04 ff ff ff 84 f2 b5 0b   	mov dword ptr [ebp - 0xfc], 0xbb5f284
0x8049ec2:   c7 85 00 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0x100], 0xfffffffe
0x8049ecc:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049ecf:   83 f8 fb                        	cmp eax, -5
0x8049ed2:   77 38                           	ja 0x8049f0c <func_1+0x6f6>
0x8049ed4:   c7 85 f8 fe ff ff 70 33 49 13   	mov dword ptr [ebp - 0x108], 0x13493370
0x8049ede:   66 83 bd 08 ff ff ff 00         	cmp word ptr [ebp - 0xf8], 0
0x8049ee6:   0f 85 01 07 00 00               	jne 0x804a5ed <func_1+0xdd7>
0x8049eec:   83 bd f8 fe ff ff 03            	cmp dword ptr [ebp - 0x108], 3
0x8049ef3:   0f 96 c0                        	setbe al
0x8049ef6:   0f b6 c0                        	movzx eax, al
0x8049ef9:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x8049efc:   0f be ca                        	movsx ecx, dl
0x8049eff:   99                              	cdq 
0x8049f00:   f7 f9                           	idiv ecx
0x8049f02:   89 d0                           	mov eax, edx
0x8049f04:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x8049f07:   e9 b2 00 00 00                  	jmp 0x8049fbe <func_1+0x7a8>
0x8049f0c:   66 c7 85 fe fe ff ff fe ff      	mov word ptr [ebp - 0x102], 0xfffe
0x8049f15:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x8049f1c:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f1f:   0f be 95 33 ff ff ff            	movsx edx, byte ptr [ebp - 0xcd]
0x8049f26:   0f bf 85 08 ff ff ff            	movsx eax, word ptr [ebp - 0xf8]
0x8049f2d:   09 d0                           	or eax, edx
0x8049f2f:   31 45 d0                        	xor dword ptr [ebp - 0x30], eax
0x8049f32:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f35:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049f38:   c7 45 d0 fe 3c 9f 1e            	mov dword ptr [ebp - 0x30], 0x1e9f3cfe
0x8049f3f:   c7 85 04 ff ff ff e2 12 00 00   	mov dword ptr [ebp - 0xfc], 0x12e2
0x8049f49:   66 83 bd 08 ff ff ff 00         	cmp word ptr [ebp - 0xf8], 0
0x8049f51:   74 0c                           	je 0x8049f5f <func_1+0x749>
0x8049f53:   0f bf 85 fe fe ff ff            	movsx eax, word ptr [ebp - 0x102]
0x8049f5a:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049f5d:   85 c0                           	test eax, eax
0x8049f5f:   c7 45 88 04 00 00 00            	mov dword ptr [ebp - 0x78], 4
0x8049f66:   81 bd 00 ff ff ff 88 64 00 00   	cmp dword ptr [ebp - 0x100], 0x6488
0x8049f70:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x8049f74:   66 39 85 30 ff ff ff            	cmp word ptr [ebp - 0xd0], ax
0x8049f7b:   77 06                           	ja 0x8049f83 <func_1+0x76d>
0x8049f7d:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049f81:   74 07                           	je 0x8049f8a <func_1+0x774>
0x8049f83:   b8 01 00 00 00                  	mov eax, 1
0x8049f88:   eb 05                           	jmp 0x8049f8f <func_1+0x779>
0x8049f8a:   b8 00 00 00 00                  	mov eax, 0
0x8049f8f:   89 c2                           	mov edx, eax
0x8049f91:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049f95:   09 d0                           	or eax, edx
0x8049f97:   0f bf d0                        	movsx edx, ax
0x8049f9a:   0f bf 85 08 ff ff ff            	movsx eax, word ptr [ebp - 0xf8]
0x8049fa1:   0f af c2                        	imul eax, edx
0x8049fa4:   3d 8d 98 c8 41                  	cmp eax, 0x41c8988d
0x8049fa9:   0f 94 c0                        	sete al
0x8049fac:   0f b6 d0                        	movzx edx, al
0x8049faf:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x8049fb3:   39 c2                           	cmp edx, eax
0x8049fb5:   0f 95 c0                        	setne al
0x8049fb8:   0f b6 c0                        	movzx eax, al
0x8049fbb:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049fbe:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x8049fc2:   0f 84 b2 01 00 00               	je 0x804a17a <func_1+0x964>
0x8049fc8:   e9 27 06 00 00                  	jmp 0x804a5f4 <func_1+0xdde>
0x8049fcd:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x8049fd7:   c7 85 0c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf4], 0
0x8049fe1:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049fe5:   0f 95 c0                        	setne al
0x8049fe8:   0f b6 c0                        	movzx eax, al
0x8049feb:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049fee:   0f bf fa                        	movsx edi, dx
0x8049ff1:   99                              	cdq 
0x8049ff2:   f7 ff                           	idiv edi
0x8049ff4:   89 c2                           	mov edx, eax
0x8049ff6:   0f b6 45 d6                     	movzx eax, byte ptr [ebp - 0x2a]
0x8049ffa:   0f b6 c0                        	movzx eax, al
0x8049ffd:   f6 f2                           	div dl
0x8049fff:   0f b6 c4                        	movzx eax, ah
0x804a002:   84 c0                           	test al, al
0x804a004:   74 49                           	je 0x804a04f <func_1+0x839>
0x804a006:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a00a:   0f 94 c0                        	sete al
0x804a00d:   0f b6 c0                        	movzx eax, al
0x804a010:   89 45 cc                        	mov dword ptr [ebp - 0x34], eax
0x804a013:   81 7d cc 22 b5 00 00            	cmp dword ptr [ebp - 0x34], 0xb522
0x804a01a:   0f 9f c0                        	setg al
0x804a01d:   0f b6 c0                        	movzx eax, al
0x804a020:   21 45 98                        	and dword ptr [ebp - 0x68], eax
0x804a023:   81 7d 98 2a ea 00 00            	cmp dword ptr [ebp - 0x68], 0xea2a
0x804a02a:   7e 07                           	jle 0x804a033 <func_1+0x81d>
0x804a02c:   ba af 92 ed 99                  	mov edx, 0x99ed92af
0x804a031:   eb 05                           	jmp 0x804a038 <func_1+0x822>
0x804a033:   ba ae 92 ed 99                  	mov edx, 0x99ed92ae
0x804a038:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x804a03f:   39 c2                           	cmp edx, eax
0x804a041:   0f 94 c0                        	sete al
0x804a044:   0f b6 c0                        	movzx eax, al
0x804a047:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a04a:   e9 d9 00 00 00                  	jmp 0x804a128 <func_1+0x912>
0x804a04f:   66 c7 85 0a ff ff ff 69 35      	mov word ptr [ebp - 0xf6], 0x3569
0x804a058:   c6 45 cb fd                     	mov byte ptr [ebp - 0x35], 0xfd
0x804a05c:   66 0f be 45 cb                  	movsx ax, byte ptr [ebp - 0x35]
0x804a061:   0f b7 d0                        	movzx edx, ax
0x804a064:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a067:   0f b7 c0                        	movzx eax, ax
0x804a06a:   89 c1                           	mov ecx, eax
0x804a06c:   d3 fa                           	sar edx, cl
0x804a06e:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a071:   01 c2                           	add edx, eax
0x804a073:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x804a077:   39 c2                           	cmp edx, eax
0x804a079:   0f 9f c0                        	setg al
0x804a07c:   0f b6 c0                        	movzx eax, al
0x804a07f:   0f b7 95 0a ff ff ff            	movzx edx, word ptr [ebp - 0xf6]
0x804a086:   0f b6 f2                        	movzx esi, dl
0x804a089:   99                              	cdq 
0x804a08a:   f7 fe                           	idiv esi
0x804a08c:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a08f:   7f 07                           	jg 0x804a098 <func_1+0x882>
0x804a091:   b8 09 00 00 00                  	mov eax, 9
0x804a096:   eb 05                           	jmp 0x804a09d <func_1+0x887>
0x804a098:   b8 08 00 00 00                  	mov eax, 8
0x804a09d:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a0a0:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a0a4:   0f 85 46 05 00 00               	jne 0x804a5f0 <func_1+0xdda>
0x804a0aa:   0f b6 45 d6                     	movzx eax, byte ptr [ebp - 0x2a]
0x804a0ae:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804a0b4:   0f bf d2                        	movsx edx, dx
0x804a0b7:   81 c2 d7 0c 00 00               	add edx, 0xcd7
0x804a0bd:   39 d0                           	cmp eax, edx
0x804a0bf:   7c 24                           	jl 0x804a0e5 <func_1+0x8cf>
0x804a0c1:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a0c4:   98                              	cwde 
0x804a0c5:   0f b7 95 10 ff ff ff            	movzx edx, word ptr [ebp - 0xf0]
0x804a0cc:   0f bf fa                        	movsx edi, dx
0x804a0cf:   99                              	cdq 
0x804a0d0:   f7 ff                           	idiv edi
0x804a0d2:   89 c2                           	mov edx, eax
0x804a0d4:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x804a0db:   39 c2                           	cmp edx, eax
0x804a0dd:   75 06                           	jne 0x804a0e5 <func_1+0x8cf>
0x804a0df:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a0e3:   74 07                           	je 0x804a0ec <func_1+0x8d6>
0x804a0e5:   b8 01 00 00 00                  	mov eax, 1
0x804a0ea:   eb 05                           	jmp 0x804a0f1 <func_1+0x8db>
0x804a0ec:   b8 00 00 00 00                  	mov eax, 0
0x804a0f1:   09 45 e0                        	or dword ptr [ebp - 0x20], eax
0x804a0f4:   0f b7 85 0a ff ff ff            	movzx eax, word ptr [ebp - 0xf6]
0x804a0fb:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x804a101:   89 c2                           	mov edx, eax
0x804a103:   81 fa cb c1 38 a2               	cmp edx, 0xa238c1cb
0x804a109:   0f 93 c0                        	setae al
0x804a10c:   0f b6 c0                        	movzx eax, al
0x804a10f:   69 c0 cb c1 38 a2               	imul eax, eax, 0xa238c1cb
0x804a115:   29 c2                           	sub edx, eax
0x804a117:   89 d0                           	mov eax, edx
0x804a119:   25 5a 74 00 00                  	and eax, 0x745a
0x804a11e:   89 c2                           	mov edx, eax
0x804a120:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a123:   09 d0                           	or eax, edx
0x804a125:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a128:   83 85 7c ff ff ff 01            	add dword ptr [ebp - 0x84], 1
0x804a12f:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x804a136:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a139:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a13c:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a13f:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a143:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a147:   83 c8 f6                        	or eax, 0xfffffff6
0x804a14a:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a150:   c7 45 80 00 00 00 00            	mov dword ptr [ebp - 0x80], 0
0x804a157:   eb 18                           	jmp 0x804a171 <func_1+0x95b>
0x804a159:   66 83 7d d8 00                  	cmp word ptr [ebp - 0x28], 0
0x804a15e:   75 19                           	jne 0x804a179 <func_1+0x963>
0x804a160:   0f be 85 33 ff ff ff            	movsx eax, byte ptr [ebp - 0xcd]
0x804a167:   31 85 6c ff ff ff               	xor dword ptr [ebp - 0x94], eax
0x804a16d:   83 6d 80 01                     	sub dword ptr [ebp - 0x80], 1
0x804a171:   83 7d 80 ea                     	cmp dword ptr [ebp - 0x80], -0x16
0x804a175:   7d e2                           	jge 0x804a159 <func_1+0x943>
0x804a177:   eb 01                           	jmp 0x804a17a <func_1+0x964>
0x804a179:   90                              	nop 
0x804a17a:   66 83 bd 10 ff ff ff 00         	cmp word ptr [ebp - 0xf0], 0
0x804a182:   0f 85 6b 04 00 00               	jne 0x804a5f3 <func_1+0xddd>
0x804a188:   80 bd 5b ff ff ff 00            	cmp byte ptr [ebp - 0xa5], 0
0x804a18f:   e9 43 04 00 00                  	jmp 0x804a5d7 <func_1+0xdc1>
0x804a194:   c7 85 24 ff ff ff e1 24 09 36   	mov dword ptr [ebp - 0xdc], 0x360924e1
0x804a19e:   c7 85 20 ff ff ff bb c2 57 ba   	mov dword ptr [ebp - 0xe0], 0xba57c2bb
0x804a1a8:   c7 85 68 ff ff ff c1 79 f9 a8   	mov dword ptr [ebp - 0x98], 0xa8f979c1
0x804a1b2:   66 c7 85 1e ff ff ff 79 ea      	mov word ptr [ebp - 0xe2], 0xea79
0x804a1bb:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a1be:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a1c1:   66 83 bd 34 ff ff ff 00         	cmp word ptr [ebp - 0xcc], 0
0x804a1c9:   0f 9f c0                        	setg al
0x804a1cc:   0f b6 d0                        	movzx edx, al
0x804a1cf:   0f b6 85 3b ff ff ff            	movzx eax, byte ptr [ebp - 0xc5]
0x804a1d6:   09 d0                           	or eax, edx
0x804a1d8:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a1de:   83 bd 74 ff ff ff 00            	cmp dword ptr [ebp - 0x8c], 0
0x804a1e5:   0f 85 e8 03 00 00               	jne 0x804a5d3 <func_1+0xdbd>
0x804a1eb:   66 83 ad 7a ff ff ff 01         	sub word ptr [ebp - 0x86], 1
0x804a1f3:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a1fa:   89 c1                           	mov ecx, eax
0x804a1fc:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a1ff:   0f b6 c0                        	movzx eax, al
0x804a202:   f6 75 eb                        	div byte ptr [ebp - 0x15]
0x804a205:   0f b6 c4                        	movzx eax, ah
0x804a208:   0f b6 d0                        	movzx edx, al
0x804a20b:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a211:   0f b6 c0                        	movzx eax, al
0x804a214:   29 c2                           	sub edx, eax
0x804a216:   89 d0                           	mov eax, edx
0x804a218:   0b 85 24 ff ff ff               	or eax, dword ptr [ebp - 0xdc]
0x804a21e:   85 c0                           	test eax, eax
0x804a220:   75 06                           	jne 0x804a228 <func_1+0xa12>
0x804a222:   80 7d d6 00                     	cmp byte ptr [ebp - 0x2a], 0
0x804a226:   74 07                           	je 0x804a22f <func_1+0xa19>
0x804a228:   b8 01 00 00 00                  	mov eax, 1
0x804a22d:   eb 05                           	jmp 0x804a234 <func_1+0xa1e>
0x804a22f:   b8 00 00 00 00                  	mov eax, 0
0x804a234:   01 c8                           	add eax, ecx
0x804a236:   89 c2                           	mov edx, eax
0x804a238:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804a23b:   31 d0                           	xor eax, edx
0x804a23d:   0f be c0                        	movsx eax, al
0x804a240:   83 c0 04                        	add eax, 4
0x804a243:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x804a246:   74 10                           	je 0x804a258 <func_1+0xa42>
0x804a248:   83 bd 24 ff ff ff 00            	cmp dword ptr [ebp - 0xdc], 0
0x804a24f:   74 07                           	je 0x804a258 <func_1+0xa42>
0x804a251:   b8 01 00 00 00                  	mov eax, 1
0x804a256:   eb 05                           	jmp 0x804a25d <func_1+0xa47>
0x804a258:   b8 00 00 00 00                  	mov eax, 0
0x804a25d:   0f b7 d0                        	movzx edx, ax
0x804a260:   66 0f be 45 cb                  	movsx ax, byte ptr [ebp - 0x35]
0x804a265:   0f b7 c0                        	movzx eax, ax
0x804a268:   29 c2                           	sub edx, eax
0x804a26a:   89 d0                           	mov eax, edx
0x804a26c:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a26f:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x804a273:   33 85 24 ff ff ff               	xor eax, dword ptr [ebp - 0xdc]
0x804a279:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x804a27c:   0f 9c c0                        	setl al
0x804a27f:   0f b6 c0                        	movzx eax, al
0x804a282:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x804a288:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a28e:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804a291:   c7 85 24 ff ff ff f7 94 00 00   	mov dword ptr [ebp - 0xdc], 0x94f7
0x804a29b:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a29f:   0f 85 31 03 00 00               	jne 0x804a5d6 <func_1+0xdc0>
0x804a2a5:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x804a2ac:   e9 16 03 00 00                  	jmp 0x804a5c7 <func_1+0xdb1>
0x804a2b1:   c7 85 18 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xe8], 0xfffffffb
0x804a2bb:   c7 85 14 ff ff ff 0e ef 9e 34   	mov dword ptr [ebp - 0xec], 0x349eef0e
0x804a2c5:   c6 85 13 ff ff ff 01            	mov byte ptr [ebp - 0xed], 1
0x804a2cc:   83 ad 18 ff ff ff 01            	sub dword ptr [ebp - 0xe8], 1
0x804a2d3:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x804a2da:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a2dd:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a2e0:   89 85 24 ff ff ff               	mov dword ptr [ebp - 0xdc], eax
0x804a2e6:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804a2ea:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x804a2ed:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804a2f1:   39 85 18 ff ff ff               	cmp dword ptr [ebp - 0xe8], eax
0x804a2f7:   0f 93 c0                        	setae al
0x804a2fa:   0f b6 d0                        	movzx edx, al
0x804a2fd:   8b 85 18 ff ff ff               	mov eax, dword ptr [ebp - 0xe8]
0x804a303:   0f be c0                        	movsx eax, al
0x804a306:   89 c1                           	mov ecx, eax
0x804a308:   d3 e2                           	shl edx, cl
0x804a30a:   89 d0                           	mov eax, edx
0x804a30c:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a312:   0f 9c c0                        	setl al
0x804a315:   0f b6 d0                        	movzx edx, al
0x804a318:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x804a31f:   88 45 d6                        	mov byte ptr [ebp - 0x2a], al
0x804a322:   0f b6 45 d6                     	movzx eax, byte ptr [ebp - 0x2a]
0x804a326:   21 95 68 ff ff ff               	and dword ptr [ebp - 0x98], edx
0x804a32c:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a332:   0f be 85 39 ff ff ff            	movsx eax, byte ptr [ebp - 0xc7]
0x804a339:   0b 45 f0                        	or eax, dword ptr [ebp - 0x10]
0x804a33c:   3d 79 1b a9 13                  	cmp eax, 0x13a91b79
0x804a341:   0f 94 c0                        	sete al
0x804a344:   0f b6 c0                        	movzx eax, al
0x804a347:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x804a34d:   0f b7 85 7a ff ff ff            	movzx eax, word ptr [ebp - 0x86]
0x804a354:   0f bf d8                        	movsx ebx, ax
0x804a357:   8b 75 94                        	mov esi, dword ptr [ebp - 0x6c]
0x804a35a:   b8 ce ff ff ff                  	mov eax, 0xffffffce
0x804a35f:   ba 00 00 00 00                  	mov edx, 0
0x804a364:   f7 f6                           	div esi
0x804a366:   89 c1                           	mov ecx, eax
0x804a368:   66 0f be d1                     	movsx dx, cl
0x804a36c:   89 d0                           	mov eax, edx
0x804a36e:   c1 e0 03                        	shl eax, 3
0x804a371:   01 d0                           	add eax, edx
0x804a373:   c1 e0 03                        	shl eax, 3
0x804a376:   29 d0                           	sub eax, edx
0x804a378:   66 c1 e8 08                     	shr ax, 8
0x804a37c:   89 c2                           	mov edx, eax
0x804a37e:   c0 fa 04                        	sar dl, 4
0x804a381:   89 c8                           	mov eax, ecx
0x804a383:   c0 f8 07                        	sar al, 7
0x804a386:   29 c2                           	sub edx, eax
0x804a388:   89 d0                           	mov eax, edx
0x804a38a:   ba 3a 00 00 00                  	mov edx, 0x3a
0x804a38f:   0f af c2                        	imul eax, edx
0x804a392:   29 c1                           	sub ecx, eax
0x804a394:   89 c8                           	mov eax, ecx
0x804a396:   0f be c0                        	movsx eax, al
0x804a399:   21 85 14 ff ff ff               	and dword ptr [ebp - 0xec], eax
0x804a39f:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a3a6:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x804a3ac:   0f 9d c0                        	setge al
0x804a3af:   0f b6 c0                        	movzx eax, al
0x804a3b2:   8b 55 dc                        	mov edx, dword ptr [ebp - 0x24]
0x804a3b5:   0f bf ca                        	movsx ecx, dx
0x804a3b8:   99                              	cdq 
0x804a3b9:   f7 f9                           	idiv ecx
0x804a3bb:   89 d0                           	mov eax, edx
0x804a3bd:   98                              	cwde 
0x804a3be:   2d 67 70 00 00                  	sub eax, 0x7067
0x804a3c3:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a3c6:   0f 96 c0                        	setbe al
0x804a3c9:   0f b6 c0                        	movzx eax, al
0x804a3cc:   23 85 18 ff ff ff               	and eax, dword ptr [ebp - 0xe8]
0x804a3d2:   83 f8 01                        	cmp eax, 1
0x804a3d5:   75 11                           	jne 0x804a3e8 <func_1+0xbd2>
0x804a3d7:   66 83 bd 36 ff ff ff 00         	cmp word ptr [ebp - 0xca], 0
0x804a3df:   74 07                           	je 0x804a3e8 <func_1+0xbd2>
0x804a3e1:   b8 01 00 00 00                  	mov eax, 1
0x804a3e6:   eb 05                           	jmp 0x804a3ed <func_1+0xbd7>
0x804a3e8:   b8 00 00 00 00                  	mov eax, 0
0x804a3ed:   98                              	cwde 
0x804a3ee:   89 c1                           	mov ecx, eax
0x804a3f0:   d3 fb                           	sar ebx, cl
0x804a3f2:   89 d8                           	mov eax, ebx
0x804a3f4:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a3f7:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x804a3fe:   99                              	cdq 
0x804a3ff:   f7 bd 20 ff ff ff               	idiv dword ptr [ebp - 0xe0]
0x804a405:   39 85 68 ff ff ff               	cmp dword ptr [ebp - 0x98], eax
0x804a40b:   0f 9f c0                        	setg al
0x804a40e:   0f b6 d0                        	movzx edx, al
0x804a411:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a415:   98                              	cwde 
0x804a416:   01 d0                           	add eax, edx
0x804a418:   39 45 9c                        	cmp dword ptr [ebp - 0x64], eax
0x804a41b:   76 07                           	jbe 0x804a424 <func_1+0xc0e>
0x804a41d:   b8 3e 00 00 00                  	mov eax, 0x3e
0x804a422:   eb 05                           	jmp 0x804a429 <func_1+0xc13>
0x804a424:   b8 3f 00 00 00                  	mov eax, 0x3f
0x804a429:   0b 45 80                        	or eax, dword ptr [ebp - 0x80]
0x804a42c:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a42f:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a432:   0f b7 d8                        	movzx ebx, ax
0x804a435:   0f b6 85 13 ff ff ff            	movzx eax, byte ptr [ebp - 0xed]
0x804a43c:   0f be f0                        	movsx esi, al
0x804a43f:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a442:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a445:   0f be 95 5b ff ff ff            	movsx edx, byte ptr [ebp - 0xa5]
0x804a44c:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a450:   39 c2                           	cmp edx, eax
0x804a452:   0f 9d c0                        	setge al
0x804a455:   0f b6 d0                        	movzx edx, al
0x804a458:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a45b:   98                              	cwde 
0x804a45c:   89 c1                           	mov ecx, eax
0x804a45e:   d3 e2                           	shl edx, cl
0x804a460:   89 d0                           	mov eax, edx
0x804a462:   0f b6 bd 2f ff ff ff            	movzx edi, byte ptr [ebp - 0xd1]
0x804a469:   99                              	cdq 
0x804a46a:   f7 ff                           	idiv edi
0x804a46c:   83 c8 fd                        	or eax, 0xfffffffd
0x804a46f:   89 c2                           	mov edx, eax
0x804a471:   0f be 85 3a ff ff ff            	movsx eax, byte ptr [ebp - 0xc6]
0x804a478:   39 c2                           	cmp edx, eax
0x804a47a:   75 07                           	jne 0x804a483 <func_1+0xc6d>
0x804a47c:   b8 08 00 00 00                  	mov eax, 8
0x804a481:   eb 05                           	jmp 0x804a488 <func_1+0xc72>
0x804a483:   b8 07 00 00 00                  	mov eax, 7
0x804a488:   89 c1                           	mov ecx, eax
0x804a48a:   d3 fe                           	sar esi, cl
0x804a48c:   89 f0                           	mov eax, esi
0x804a48e:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x804a494:   0f 96 c0                        	setbe al
0x804a497:   0f b6 c0                        	movzx eax, al
0x804a49a:   89 c1                           	mov ecx, eax
0x804a49c:   0f b6 d1                        	movzx edx, cl
0x804a49f:   89 d0                           	mov eax, edx
0x804a4a1:   c1 e0 02                        	shl eax, 2
0x804a4a4:   01 d0                           	add eax, edx
0x804a4a6:   8d 14 85 00 00 00 00            	lea edx, [eax*4]
0x804a4ad:   01 d0                           	add eax, edx
0x804a4af:   66 c1 e8 08                     	shr ax, 8
0x804a4b3:   c0 e8 03                        	shr al, 3
0x804a4b6:   ba 52 00 00 00                  	mov edx, 0x52
0x804a4bb:   0f af c2                        	imul eax, edx
0x804a4be:   29 c1                           	sub ecx, eax
0x804a4c0:   89 c8                           	mov eax, ecx
0x804a4c2:   0f b6 d0                        	movzx edx, al
0x804a4c5:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a4cc:   0f af c2                        	imul eax, edx
0x804a4cf:   83 f8 46                        	cmp eax, 0x46
0x804a4d2:   0f 9f c0                        	setg al
0x804a4d5:   0f b6 c0                        	movzx eax, al
0x804a4d8:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a4db:   76 0c                           	jbe 0x804a4e9 <func_1+0xcd3>
0x804a4dd:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x804a4e1:   75 06                           	jne 0x804a4e9 <func_1+0xcd3>
0x804a4e3:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a4e7:   74 07                           	je 0x804a4f0 <func_1+0xcda>
0x804a4e9:   ba 01 00 00 00                  	mov edx, 1
0x804a4ee:   eb 05                           	jmp 0x804a4f5 <func_1+0xcdf>
0x804a4f0:   ba 00 00 00 00                  	mov edx, 0
0x804a4f5:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804a4f9:   39 c2                           	cmp edx, eax
0x804a4fb:   0f 9f c0                        	setg al
0x804a4fe:   0f b6 c0                        	movzx eax, al
0x804a501:   39 c3                           	cmp ebx, eax
0x804a503:   74 76                           	je 0x804a57b <func_1+0xd65>
0x804a505:   0f be 55 db                     	movsx edx, byte ptr [ebp - 0x25]
0x804a509:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a50d:   0f 95 c0                        	setne al
0x804a510:   0f b6 c0                        	movzx eax, al
0x804a513:   39 c2                           	cmp edx, eax
0x804a515:   0f 9d c0                        	setge al
0x804a518:   0f b6 c0                        	movzx eax, al
0x804a51b:   8b 95 28 ff ff ff               	mov edx, dword ptr [ebp - 0xd8]
0x804a521:   0f be ca                        	movsx ecx, dl
0x804a524:   99                              	cdq 
0x804a525:   f7 f9                           	idiv ecx
0x804a527:   89 d0                           	mov eax, edx
0x804a529:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x804a52c:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a530:   75 0a                           	jne 0x804a53c <func_1+0xd26>
0x804a532:   66 83 bd 7a ff ff ff 00         	cmp word ptr [ebp - 0x86], 0
0x804a53a:   74 07                           	je 0x804a543 <func_1+0xd2d>
0x804a53c:   b8 01 00 00 00                  	mov eax, 1
0x804a541:   eb 05                           	jmp 0x804a548 <func_1+0xd32>
0x804a543:   b8 00 00 00 00                  	mov eax, 0
0x804a548:   33 85 70 ff ff ff               	xor eax, dword ptr [ebp - 0x90]
0x804a54e:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a551:   0f 94 c0                        	sete al
0x804a554:   0f b6 d0                        	movzx edx, al
0x804a557:   0f b7 85 1e ff ff ff            	movzx eax, word ptr [ebp - 0xe2]
0x804a55e:   39 c2                           	cmp edx, eax
0x804a560:   74 07                           	je 0x804a569 <func_1+0xd53>
0x804a562:   b8 c2 67 00 00                  	mov eax, 0x67c2
0x804a567:   eb 05                           	jmp 0x804a56e <func_1+0xd58>
0x804a569:   b8 00 00 00 00                  	mov eax, 0
0x804a56e:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a574:   66 83 45 92 01                  	add word ptr [ebp - 0x6e], 1
0x804a579:   eb 48                           	jmp 0x804a5c3 <func_1+0xdad>
0x804a57b:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a57f:   0f b6 d0                        	movzx edx, al
0x804a582:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a585:   89 c3                           	mov ebx, eax
0x804a587:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a58d:   66 33 45 c0                     	xor ax, word ptr [ebp - 0x40]
0x804a591:   89 c1                           	mov ecx, eax
0x804a593:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a599:   01 c8                           	add eax, ecx
0x804a59b:   83 c8 fe                        	or eax, 0xfffffffe
0x804a59e:   89 c1                           	mov ecx, eax
0x804a5a0:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a5a3:   21 c8                           	and eax, ecx
0x804a5a5:   89 c1                           	mov ecx, eax
0x804a5a7:   89 d8                           	mov eax, ebx
0x804a5a9:   0f af c1                        	imul eax, ecx
0x804a5ac:   0f b6 c0                        	movzx eax, al
0x804a5af:   01 d0                           	add eax, edx
0x804a5b1:   8d 90 17 7b 66 82               	lea edx, [eax - 0x7d9984e9]
0x804a5b7:   0f b7 85 1e ff ff ff            	movzx eax, word ptr [ebp - 0xe2]
0x804a5be:   31 d0                           	xor eax, edx
0x804a5c0:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x804a5c3:   83 45 9c 08                     	add dword ptr [ebp - 0x64], 8
0x804a5c7:   83 7d 9c 1f                     	cmp dword ptr [ebp - 0x64], 0x1f
0x804a5cb:   0f 85 e0 fc ff ff               	jne 0x804a2b1 <func_1+0xa9b>
0x804a5d1:   eb 04                           	jmp 0x804a5d7 <func_1+0xdc1>
0x804a5d3:   90                              	nop 
0x804a5d4:   eb 01                           	jmp 0x804a5d7 <func_1+0xdc1>
0x804a5d6:   90                              	nop 
0x804a5d7:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x804a5db:   83 c0 01                        	add eax, 1
0x804a5de:   88 45 ea                        	mov byte ptr [ebp - 0x16], al
0x804a5e1:   80 7d ea 21                     	cmp byte ptr [ebp - 0x16], 0x21
0x804a5e5:   0f 84 e0 f5 ff ff               	je 0x8049bcb <func_1+0x3b5>
0x804a5eb:   eb 07                           	jmp 0x804a5f4 <func_1+0xdde>
0x804a5ed:   90                              	nop 
0x804a5ee:   eb 04                           	jmp 0x804a5f4 <func_1+0xdde>
0x804a5f0:   90                              	nop 
0x804a5f1:   eb 01                           	jmp 0x804a5f4 <func_1+0xdde>
0x804a5f3:   90                              	nop 
0x804a5f4:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a5fb:   e9 ac 06 00 00                  	jmp 0x804acac <func_1+0x1496>
0x804a600:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x804a60a:   c7 85 d4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x12c], 1
0x804a614:   66 c7 85 d2 fe ff ff b2 e2      	mov word ptr [ebp - 0x12e], 0xe2b2
0x804a61d:   c7 85 cc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x134], 1
0x804a627:   c7 85 c8 fe ff ff 68 90 0a ce   	mov dword ptr [ebp - 0x138], 0xce0a9068
0x804a631:   c6 85 c7 fe ff ff fa            	mov byte ptr [ebp - 0x139], 0xfa
0x804a638:   c6 85 c6 fe ff ff fb            	mov byte ptr [ebp - 0x13a], 0xfb
0x804a63f:   c7 85 c0 fe ff ff db 38 22 f5   	mov dword ptr [ebp - 0x140], 0xf52238db
0x804a649:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a64f:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a652:   c7 45 e0 fe ff ff ff            	mov dword ptr [ebp - 0x20], 0xfffffffe
0x804a659:   eb 37                           	jmp 0x804a692 <func_1+0xe7c>
0x804a65b:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a65f:   c0 f8 06                        	sar al, 6
0x804a662:   0f b6 c0                        	movzx eax, al
0x804a665:   c1 e0 06                        	shl eax, 6
0x804a668:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a66b:   0f b7 45 ba                     	movzx eax, word ptr [ebp - 0x46]
0x804a66f:   83 e8 01                        	sub eax, 1
0x804a672:   66 89 45 ba                     	mov word ptr [ebp - 0x46], ax
0x804a676:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x804a67d:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804a681:   74 04                           	je 0x804a687 <func_1+0xe71>
0x804a683:   80 7d ea ff                     	cmp byte ptr [ebp - 0x16], 0xff
0x804a687:   c7 45 d0 52 49 a6 32            	mov dword ptr [ebp - 0x30], 0x32a64952
0x804a68e:   83 45 e0 01                     	add dword ptr [ebp - 0x20], 1
0x804a692:   83 7d e0 03                     	cmp dword ptr [ebp - 0x20], 3
0x804a696:   75 c3                           	jne 0x804a65b <func_1+0xe45>
0x804a698:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a69e:   0f b6 c0                        	movzx eax, al
0x804a6a1:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a6a4:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a6a7:   88 45 d7                        	mov byte ptr [ebp - 0x29], al
0x804a6aa:   0f be 45 d7                     	movsx eax, byte ptr [ebp - 0x29]
0x804a6ae:   23 45 98                        	and eax, dword ptr [ebp - 0x68]
0x804a6b1:   31 45 e0                        	xor dword ptr [ebp - 0x20], eax
0x804a6b4:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804a6b8:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a6bb:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a6be:   0f b7 c0                        	movzx eax, ax
0x804a6c1:   ba 57 49 00 00                  	mov edx, 0x4957
0x804a6c6:   89 c1                           	mov ecx, eax
0x804a6c8:   d3 e2                           	shl edx, cl
0x804a6ca:   89 d0                           	mov eax, edx
0x804a6cc:   09 45 8c                        	or dword ptr [ebp - 0x74], eax
0x804a6cf:   0f bf 85 d2 fe ff ff            	movsx eax, word ptr [ebp - 0x12e]
0x804a6d6:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804a6d9:   0f 9e c0                        	setle al
0x804a6dc:   0f b6 c0                        	movzx eax, al
0x804a6df:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a6e5:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a6eb:   98                              	cwde 
0x804a6ec:   c1 e0 0a                        	shl eax, 0xa
0x804a6ef:   83 f8 06                        	cmp eax, 6
0x804a6f2:   7f 07                           	jg 0x804a6fb <func_1+0xee5>
0x804a6f4:   b8 01 00 00 00                  	mov eax, 1
0x804a6f9:   eb 05                           	jmp 0x804a700 <func_1+0xeea>
0x804a6fb:   b8 00 00 00 00                  	mov eax, 0
0x804a700:   0f be c0                        	movsx eax, al
0x804a703:   8b 95 cc fe ff ff               	mov edx, dword ptr [ebp - 0x134]
0x804a709:   0f be da                        	movsx ebx, dl
0x804a70c:   99                              	cdq 
0x804a70d:   f7 fb                           	idiv ebx
0x804a70f:   83 f0 76                        	xor eax, 0x76
0x804a712:   89 c1                           	mov ecx, eax
0x804a714:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a718:   89 c2                           	mov edx, eax
0x804a71a:   0f b6 c1                        	movzx eax, cl
0x804a71d:   f6 f2                           	div dl
0x804a71f:   0f b6 d0                        	movzx edx, al
0x804a722:   0f bf 85 d2 fe ff ff            	movsx eax, word ptr [ebp - 0x12e]
0x804a729:   31 d0                           	xor eax, edx
0x804a72b:   35 a1 67 a4 19                  	xor eax, 0x19a467a1
0x804a730:   89 c2                           	mov edx, eax
0x804a732:   0f b6 45 ea                     	movzx eax, byte ptr [ebp - 0x16]
0x804a736:   39 c2                           	cmp edx, eax
0x804a738:   7c 07                           	jl 0x804a741 <func_1+0xf2b>
0x804a73a:   b8 a5 97 ff ff                  	mov eax, 0xffff97a5
0x804a73f:   eb 05                           	jmp 0x804a746 <func_1+0xf30>
0x804a741:   b8 a4 97 ff ff                  	mov eax, 0xffff97a4
0x804a746:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x804a74a:   0f bf 45 c0                     	movsx eax, word ptr [ebp - 0x40]
0x804a74e:   23 45 9c                        	and eax, dword ptr [ebp - 0x64]
0x804a751:   83 f8 ff                        	cmp eax, -1
0x804a754:   75 36                           	jne 0x804a78c <func_1+0xf76>
0x804a756:   c6 85 7b fe ff ff 9c            	mov byte ptr [ebp - 0x185], 0x9c
0x804a75d:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a761:   0f 95 c0                        	setne al
0x804a764:   0f b6 d0                        	movzx edx, al
0x804a767:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a76a:   0f be c0                        	movsx eax, al
0x804a76d:   0f af c2                        	imul eax, edx
0x804a770:   85 c0                           	test eax, eax
0x804a772:   0f 95 c0                        	setne al
0x804a775:   0f b6 c0                        	movzx eax, al
0x804a778:   f7 d0                           	not eax
0x804a77a:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a780:   81 4d 98 48 09 b1 0d            	or dword ptr [ebp - 0x68], 0xdb10948
0x804a787:   e9 1c 05 00 00                  	jmp 0x804aca8 <func_1+0x1492>
0x804a78c:   c7 85 64 ff ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x9c], 0xfffffff9
0x804a796:   c7 85 60 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xa0], 1
0x804a7a0:   66 c7 85 be fe ff ff 02 00      	mov word ptr [ebp - 0x142], 2
0x804a7a9:   66 c7 85 bc fe ff ff 72 d4      	mov word ptr [ebp - 0x144], 0xd472
0x804a7b2:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a7b5:   0f bf d0                        	movsx edx, ax
0x804a7b8:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a7be:   98                              	cwde 
0x804a7bf:   0f af c2                        	imul eax, edx
0x804a7c2:   85 c0                           	test eax, eax
0x804a7c4:   74 07                           	je 0x804a7cd <func_1+0xfb7>
0x804a7c6:   b8 01 00 00 00                  	mov eax, 1
0x804a7cb:   eb 05                           	jmp 0x804a7d2 <func_1+0xfbc>
0x804a7cd:   b8 00 00 00 00                  	mov eax, 0
0x804a7d2:   09 85 60 ff ff ff               	or dword ptr [ebp - 0xa0], eax
0x804a7d8:   66 83 7d c0 00                  	cmp word ptr [ebp - 0x40], 0
0x804a7dd:   0f 84 f3 01 00 00               	je 0x804a9d6 <func_1+0x11c0>
0x804a7e3:   c6 85 95 fe ff ff c4            	mov byte ptr [ebp - 0x16b], 0xc4
0x804a7ea:   c7 85 90 fe ff ff 26 43 bf c8   	mov dword ptr [ebp - 0x170], 0xc8bf4326
0x804a7f4:   c7 85 8c fe ff ff fe 6a 77 a6   	mov dword ptr [ebp - 0x174], 0xa6776afe
0x804a7fe:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a801:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804a807:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x804a80e:   74 07                           	je 0x804a817 <func_1+0x1001>
0x804a810:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a817:   b8 01 00 00 00                  	mov eax, 1
0x804a81c:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x804a81f:   66 c7 45 c2 04 00               	mov word ptr [ebp - 0x3e], 4
0x804a825:   e9 9c 01 00 00                  	jmp 0x804a9c6 <func_1+0x11b0>
0x804a82a:   c7 85 88 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x178], 0xfffffffa
0x804a834:   c7 85 84 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x17c], 0xfffffffc
0x804a83e:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a841:   89 c2                           	mov edx, eax
0x804a843:   80 fa cb                        	cmp dl, 0xcb
0x804a846:   0f 93 c0                        	setae al
0x804a849:   b9 cb ff ff ff                  	mov ecx, 0xffffffcb
0x804a84e:   0f af c1                        	imul eax, ecx
0x804a851:   29 c2                           	sub edx, eax
0x804a853:   89 d0                           	mov eax, edx
0x804a855:   0f b6 c0                        	movzx eax, al
0x804a858:   8b 95 60 ff ff ff               	mov edx, dword ptr [ebp - 0xa0]
0x804a85e:   0f bf ca                        	movsx ecx, dx
0x804a861:   99                              	cdq 
0x804a862:   f7 f9                           	idiv ecx
0x804a864:   0f b6 45 d6                     	movzx eax, byte ptr [ebp - 0x2a]
0x804a868:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a86b:   7c 07                           	jl 0x804a874 <func_1+0x105e>
0x804a86d:   b8 c1 dd ff ff                  	mov eax, 0xffffddc1
0x804a872:   eb 05                           	jmp 0x804a879 <func_1+0x1063>
0x804a874:   b8 c0 dd ff ff                  	mov eax, 0xffffddc0
0x804a879:   39 d0                           	cmp eax, edx
0x804a87b:   0f 9e c0                        	setle al
0x804a87e:   0f b6 d0                        	movzx edx, al
0x804a881:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a887:   0f b7 c0                        	movzx eax, ax
0x804a88a:   29 c2                           	sub edx, eax
0x804a88c:   89 d0                           	mov eax, edx
0x804a88e:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a891:   0f 92 c0                        	setb al
0x804a894:   0f b6 c0                        	movzx eax, al
0x804a897:   21 45 8c                        	and dword ptr [ebp - 0x74], eax
0x804a89a:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a89d:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a8a0:   77 07                           	ja 0x804a8a9 <func_1+0x1093>
0x804a8a2:   ba fd 00 00 00                  	mov edx, 0xfd
0x804a8a7:   eb 05                           	jmp 0x804a8ae <func_1+0x1098>
0x804a8a9:   ba fc 00 00 00                  	mov edx, 0xfc
0x804a8ae:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a8b1:   21 d0                           	and eax, edx
0x804a8b3:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a8b6:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x804a8ba:   74 07                           	je 0x804a8c3 <func_1+0x10ad>
0x804a8bc:   b8 01 00 00 00                  	mov eax, 1
0x804a8c1:   eb 05                           	jmp 0x804a8c8 <func_1+0x10b2>
0x804a8c3:   b8 00 00 00 00                  	mov eax, 0
0x804a8c8:   3b 85 d8 fe ff ff               	cmp eax, dword ptr [ebp - 0x128]
0x804a8ce:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a8d2:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x804a8d5:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a8d8:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a8db:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x804a8e2:   e9 89 00 00 00                  	jmp 0x804a970 <func_1+0x115a>
0x804a8e7:   c7 85 80 fe ff ff ad e1 33 20   	mov dword ptr [ebp - 0x180], 0x2033e1ad
0x804a8f1:   c7 85 7c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x184], 0
0x804a8fb:   0f bf 95 5c ff ff ff            	movsx edx, word ptr [ebp - 0xa4]
0x804a902:   0f be 85 5e ff ff ff            	movsx eax, byte ptr [ebp - 0xa2]
0x804a909:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804a90c:   77 07                           	ja 0x804a915 <func_1+0x10ff>
0x804a90e:   b8 07 69 00 00                  	mov eax, 0x6907
0x804a913:   eb 05                           	jmp 0x804a91a <func_1+0x1104>
0x804a915:   b8 00 00 00 00                  	mov eax, 0
0x804a91a:   09 c2                           	or edx, eax
0x804a91c:   0f b7 85 be fe ff ff            	movzx eax, word ptr [ebp - 0x142]
0x804a923:   39 c2                           	cmp edx, eax
0x804a925:   74 07                           	je 0x804a92e <func_1+0x1118>
0x804a927:   ba 04 00 00 00                  	mov edx, 4
0x804a92c:   eb 05                           	jmp 0x804a933 <func_1+0x111d>
0x804a92e:   ba 00 00 00 00                  	mov edx, 0
0x804a933:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a936:   0f b7 c0                        	movzx eax, ax
0x804a939:   0f af d0                        	imul edx, eax
0x804a93c:   0f be 85 95 fe ff ff            	movsx eax, byte ptr [ebp - 0x16b]
0x804a943:   21 d0                           	and eax, edx
0x804a945:   85 c0                           	test eax, eax
0x804a947:   0f 94 c0                        	sete al
0x804a94a:   0f b6 c0                        	movzx eax, al
0x804a94d:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a950:   81 75 c4 11 ec a1 0f            	xor dword ptr [ebp - 0x3c], 0xfa1ec11
0x804a957:   8b 85 80 fe ff ff               	mov eax, dword ptr [ebp - 0x180]
0x804a95d:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a963:   83 bd 90 fe ff ff 00            	cmp dword ptr [ebp - 0x170], 0
0x804a96a:   75 10                           	jne 0x804a97c <func_1+0x1166>
0x804a96c:   83 6d 94 03                     	sub dword ptr [ebp - 0x6c], 3
0x804a970:   83 7d 94 e3                     	cmp dword ptr [ebp - 0x6c], -0x1d
0x804a974:   0f 8d 6d ff ff ff               	jge 0x804a8e7 <func_1+0x10d1>
0x804a97a:   eb 01                           	jmp 0x804a97d <func_1+0x1167>
0x804a97c:   90                              	nop 
0x804a97d:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a984:   74 18                           	je 0x804a99e <func_1+0x1188>
0x804a986:   66 83 6d b2 01                  	sub word ptr [ebp - 0x4e], 1
0x804a98b:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a98f:   39 85 8c fe ff ff               	cmp dword ptr [ebp - 0x174], eax
0x804a995:   74 07                           	je 0x804a99e <func_1+0x1188>
0x804a997:   ba 01 00 00 00                  	mov edx, 1
0x804a99c:   eb 05                           	jmp 0x804a9a3 <func_1+0x118d>
0x804a99e:   ba 00 00 00 00                  	mov edx, 0
0x804a9a3:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a9a7:   09 d0                           	or eax, edx
0x804a9a9:   83 f8 01                        	cmp eax, 1
0x804a9ac:   0f 9e c0                        	setle al
0x804a9af:   0f b6 c0                        	movzx eax, al
0x804a9b2:   39 85 84 fe ff ff               	cmp dword ptr [ebp - 0x17c], eax
0x804a9b8:   0f 97 c0                        	seta al
0x804a9bb:   0f b6 c0                        	movzx eax, al
0x804a9be:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a9c1:   66 83 45 c2 08                  	add word ptr [ebp - 0x3e], 8
0x804a9c6:   66 83 7d c2 19                  	cmp word ptr [ebp - 0x3e], 0x19
0x804a9cb:   0f 86 59 fe ff ff               	jbe 0x804a82a <func_1+0x1014>
0x804a9d1:   e9 2c 02 00 00                  	jmp 0x804ac02 <func_1+0x13ec>
0x804a9d6:   c6 85 bb fe ff ff fa            	mov byte ptr [ebp - 0x145], 0xfa
0x804a9dd:   c7 85 b4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x14c], 0xffffffff
0x804a9e7:   c7 85 b0 fe ff ff 51 a7 67 55   	mov dword ptr [ebp - 0x150], 0x5567a751
0x804a9f1:   c7 85 ac fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x154], 0
0x804a9fb:   c7 85 a8 fe ff ff 7d 03 c4 d6   	mov dword ptr [ebp - 0x158], 0xd6c4037d
0x804aa05:   80 bd bb fe ff ff 00            	cmp byte ptr [ebp - 0x145], 0
0x804aa0c:   74 75                           	je 0x804aa83 <func_1+0x126d>
0x804aa0e:   66 c7 85 96 fe ff ff ba 49      	mov word ptr [ebp - 0x16a], 0x49ba
0x804aa17:   0f b7 95 96 fe ff ff            	movzx edx, word ptr [ebp - 0x16a]
0x804aa1e:   0f b7 8d 96 fe ff ff            	movzx ecx, word ptr [ebp - 0x16a]
0x804aa25:   0f bf 85 5c ff ff ff            	movsx eax, word ptr [ebp - 0xa4]
0x804aa2c:   39 c1                           	cmp ecx, eax
0x804aa2e:   0f 9f c0                        	setg al
0x804aa31:   0f b6 c0                        	movzx eax, al
0x804aa34:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804aa38:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804aa3c:   89 c1                           	mov ecx, eax
0x804aa3e:   d3 fa                           	sar edx, cl
0x804aa40:   89 d0                           	mov eax, edx
0x804aa42:   f7 d8                           	neg eax
0x804aa44:   3c 1d                           	cmp al, 0x1d
0x804aa46:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804aa4c:   66 09 45 c0                     	or word ptr [ebp - 0x40], ax
0x804aa50:   66 83 bd 96 fe ff ff 00         	cmp word ptr [ebp - 0x16a], 0
0x804aa58:   74 07                           	je 0x804aa61 <func_1+0x124b>
0x804aa5a:   b8 01 00 00 00                  	mov eax, 1
0x804aa5f:   eb 05                           	jmp 0x804aa66 <func_1+0x1250>
0x804aa61:   b8 00 00 00 00                  	mov eax, 0
0x804aa66:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804aa69:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804aa6c:   0f be d0                        	movsx edx, al
0x804aa6f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804aa72:   0f be c0                        	movsx eax, al
0x804aa75:   0f af c2                        	imul eax, edx
0x804aa78:   89 85 cc fe ff ff               	mov dword ptr [ebp - 0x134], eax
0x804aa7e:   e9 6b 01 00 00                  	jmp 0x804abee <func_1+0x13d8>
0x804aa83:   c7 85 a4 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffffc
0x804aa8d:   c7 85 a0 fe ff ff cb 17 30 89   	mov dword ptr [ebp - 0x160], 0x893017cb
0x804aa97:   c6 85 9f fe ff ff ff            	mov byte ptr [ebp - 0x161], 0xff
0x804aa9e:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x804aaa8:   eb 15                           	jmp 0x804aabf <func_1+0x12a9>
0x804aaaa:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804aab1:   74 05                           	je 0x804aab8 <func_1+0x12a2>
0x804aab3:   e9 8d ee ff ff                  	jmp 0x8049945 <func_1+0x12f>
0x804aab8:   83 85 64 ff ff ff 01            	add dword ptr [ebp - 0x9c], 1
0x804aabf:   83 bd 64 ff ff ff 14            	cmp dword ptr [ebp - 0x9c], 0x14
0x804aac6:   76 e2                           	jbe 0x804aaaa <func_1+0x1294>
0x804aac8:   83 85 a4 fe ff ff 01            	add dword ptr [ebp - 0x15c], 1
0x804aacf:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804aad5:   23 85 3c ff ff ff               	and eax, dword ptr [ebp - 0xc4]
0x804aadb:   89 85 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], eax
0x804aae1:   83 7d cc 00                     	cmp dword ptr [ebp - 0x34], 0
0x804aae5:   0f 95 c0                        	setne al
0x804aae8:   0f b6 c0                        	movzx eax, al
0x804aaeb:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x804aaf1:   0f 9c c0                        	setl al
0x804aaf4:   0f b6 c0                        	movzx eax, al
0x804aaf7:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804aafa:   0f 9e c0                        	setle al
0x804aafd:   0f b6 c0                        	movzx eax, al
0x804ab00:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804ab03:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x804ab07:   75 09                           	jne 0x804ab12 <func_1+0x12fc>
0x804ab09:   83 bd a4 fe ff ff 00            	cmp dword ptr [ebp - 0x15c], 0
0x804ab10:   74 07                           	je 0x804ab19 <func_1+0x1303>
0x804ab12:   b8 01 00 00 00                  	mov eax, 1
0x804ab17:   eb 05                           	jmp 0x804ab1e <func_1+0x1308>
0x804ab19:   b8 00 00 00 00                  	mov eax, 0
0x804ab1e:   39 45 dc                        	cmp dword ptr [ebp - 0x24], eax
0x804ab21:   73 07                           	jae 0x804ab2a <func_1+0x1314>
0x804ab23:   b8 24 00 00 00                  	mov eax, 0x24
0x804ab28:   eb 05                           	jmp 0x804ab2f <func_1+0x1319>
0x804ab2a:   b8 25 00 00 00                  	mov eax, 0x25
0x804ab2f:   09 85 a0 fe ff ff               	or dword ptr [ebp - 0x160], eax
0x804ab35:   8b 85 a0 fe ff ff               	mov eax, dword ptr [ebp - 0x160]
0x804ab3b:   33 85 54 ff ff ff               	xor eax, dword ptr [ebp - 0xac]
0x804ab41:   89 c2                           	mov edx, eax
0x804ab43:   0f be 45 cb                     	movsx eax, byte ptr [ebp - 0x35]
0x804ab47:   21 d0                           	and eax, edx
0x804ab49:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804ab4f:   0f 92 c0                        	setb al
0x804ab52:   0f b6 c0                        	movzx eax, al
0x804ab55:   0f be b5 5e ff ff ff            	movsx esi, byte ptr [ebp - 0xa2]
0x804ab5c:   ba 00 00 00 00                  	mov edx, 0
0x804ab61:   f7 f6                           	div esi
0x804ab63:   89 c2                           	mov edx, eax
0x804ab65:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804ab68:   39 c2                           	cmp edx, eax
0x804ab6a:   72 7c                           	jb 0x804abe8 <func_1+0x13d2>
0x804ab6c:   c7 85 98 fe ff ff fc 34 2c 3b   	mov dword ptr [ebp - 0x168], 0x3b2c34fc
0x804ab76:   80 6d ab 01                     	sub byte ptr [ebp - 0x55], 1
0x804ab7a:   0f bf 95 5c ff ff ff            	movsx edx, word ptr [ebp - 0xa4]
0x804ab81:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804ab85:   33 85 98 fe ff ff               	xor eax, dword ptr [ebp - 0x168]
0x804ab8b:   39 c2                           	cmp edx, eax
0x804ab8d:   0f 96 c0                        	setbe al
0x804ab90:   0f b6 c0                        	movzx eax, al
0x804ab93:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804ab96:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804ab9d:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x804aba3:   83 bd b4 fe ff ff 00            	cmp dword ptr [ebp - 0x14c], 0
0x804abaa:   74 26                           	je 0x804abd2 <func_1+0x13bc>
0x804abac:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x804abb3:   0f bf 85 d2 fe ff ff            	movsx eax, word ptr [ebp - 0x12e]
0x804abba:   83 e0 01                        	and eax, 1
0x804abbd:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x804abc0:   0f 95 c0                        	setne al
0x804abc3:   0f b6 c0                        	movzx eax, al
0x804abc6:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804abc9:   74 07                           	je 0x804abd2 <func_1+0x13bc>
0x804abcb:   b8 01 00 00 00                  	mov eax, 1
0x804abd0:   eb 05                           	jmp 0x804abd7 <func_1+0x13c1>
0x804abd2:   b8 00 00 00 00                  	mov eax, 0
0x804abd7:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x804abda:   80 bd 9f fe ff ff 00            	cmp byte ptr [ebp - 0x161], 0
0x804abe1:   74 0b                           	je 0x804abee <func_1+0x13d8>
0x804abe3:   e9 c0 00 00 00                  	jmp 0x804aca8 <func_1+0x1492>
0x804abe8:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804abeb:   31 45 8c                        	xor dword ptr [ebp - 0x74], eax
0x804abee:   83 ad a8 fe ff ff 01            	sub dword ptr [ebp - 0x158], 1
0x804abf5:   80 bd bb fe ff ff 00            	cmp byte ptr [ebp - 0x145], 0
0x804abfc:   0f 85 b6 00 00 00               	jne 0x804acb8 <func_1+0x14a2>
0x804ac02:   0f be 85 c7 fe ff ff            	movsx eax, byte ptr [ebp - 0x139]
0x804ac09:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x804ac0f:   8b 85 c0 fe ff ff               	mov eax, dword ptr [ebp - 0x140]
0x804ac15:   c0 f8 05                        	sar al, 5
0x804ac18:   f7 d0                           	not eax
0x804ac1a:   c0 e8 07                        	shr al, 7
0x804ac1d:   0f b6 c8                        	movzx ecx, al
0x804ac20:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804ac23:   0f be c0                        	movsx eax, al
0x804ac26:   8d 50 f9                        	lea edx, [eax - 7]
0x804ac29:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x804ac2d:   39 c2                           	cmp edx, eax
0x804ac2f:   0f 94 c0                        	sete al
0x804ac32:   22 85 c6 fe ff ff               	and al, byte ptr [ebp - 0x13a]
0x804ac38:   66 0f be d0                     	movsx dx, al
0x804ac3c:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804ac42:   66 98                           	cbw 
0x804ac44:   0f af c2                        	imul eax, edx
0x804ac47:   66 d1 f8                        	sar ax, 1
0x804ac4a:   89 c2                           	mov edx, eax
0x804ac4c:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804ac4f:   89 c3                           	mov ebx, eax
0x804ac51:   89 d0                           	mov eax, edx
0x804ac53:   ba 00 00 00 00                  	mov edx, 0
0x804ac58:   66 f7 f3                        	div bx
0x804ac5b:   66 3d b5 33                     	cmp ax, 0x33b5
0x804ac5f:   76 07                           	jbe 0x804ac68 <func_1+0x1452>
0x804ac61:   b8 80 00 00 00                  	mov eax, 0x80
0x804ac66:   eb 05                           	jmp 0x804ac6d <func_1+0x1457>
0x804ac68:   b8 00 00 00 00                  	mov eax, 0
0x804ac6d:   39 c8                           	cmp eax, ecx
0x804ac6f:   0f 94 c0                        	sete al
0x804ac72:   0f b6 c0                        	movzx eax, al
0x804ac75:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804ac78:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804ac7b:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804ac81:   b8 01 00 00 00                  	mov eax, 1
0x804ac86:   0f be d0                        	movsx edx, al
0x804ac89:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804ac8f:   0f be c0                        	movsx eax, al
0x804ac92:   89 c1                           	mov ecx, eax
0x804ac94:   d3 e2                           	shl edx, cl
0x804ac96:   89 d0                           	mov eax, edx
0x804ac98:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804ac9b:   8b 85 60 ff ff ff               	mov eax, dword ptr [ebp - 0xa0]
0x804aca1:   66 89 85 bc fe ff ff            	mov word ptr [ebp - 0x144], ax
0x804aca8:   83 45 a0 06                     	add dword ptr [ebp - 0x60], 6
0x804acac:   83 7d a0 0e                     	cmp dword ptr [ebp - 0x60], 0xe
0x804acb0:   0f 87 4a f9 ff ff               	ja 0x804a600 <func_1+0xdea>
0x804acb6:   eb 01                           	jmp 0x804acb9 <func_1+0x14a3>
0x804acb8:   90                              	nop 
0x804acb9:   0f b6 45 ab                     	movzx eax, byte ptr [ebp - 0x55]
0x804acbd:   0f b7 55 b2                     	movzx edx, word ptr [ebp - 0x4e]
0x804acc1:   0f b7 4d ba                     	movzx ecx, word ptr [ebp - 0x46]
0x804acc5:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804acc9:   0f b7 7d c2                     	movzx edi, word ptr [ebp - 0x3e]
0x804accd:   89 bd 70 fe ff ff               	mov dword ptr [ebp - 0x190], edi
0x804acd3:   0f be 75 cb                     	movsx esi, byte ptr [ebp - 0x35]
0x804acd7:   89 b5 6c fe ff ff               	mov dword ptr [ebp - 0x194], esi
0x804acdd:   0f b6 7d d6                     	movzx edi, byte ptr [ebp - 0x2a]
0x804ace1:   89 bd 68 fe ff ff               	mov dword ptr [ebp - 0x198], edi
0x804ace7:   0f be 75 d7                     	movsx esi, byte ptr [ebp - 0x29]
0x804aceb:   89 b5 64 fe ff ff               	mov dword ptr [ebp - 0x19c], esi
0x804acf1:   0f b7 7d d8                     	movzx edi, word ptr [ebp - 0x28]
0x804acf5:   89 bd 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], edi
0x804acfb:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804acff:   89 b5 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], esi
0x804ad05:   0f be bd 5b ff ff ff            	movsx edi, byte ptr [ebp - 0xa5]
0x804ad0c:   89 bd 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], edi
0x804ad12:   0f bf b5 5c ff ff ff            	movsx esi, word ptr [ebp - 0xa4]
0x804ad19:   89 b5 54 fe ff ff               	mov dword ptr [ebp - 0x1ac], esi
0x804ad1f:   0f b6 7d ea                     	movzx edi, byte ptr [ebp - 0x16]
0x804ad23:   89 bd 50 fe ff ff               	mov dword ptr [ebp - 0x1b0], edi
0x804ad29:   0f b6 7d eb                     	movzx edi, byte ptr [ebp - 0x15]
0x804ad2d:   0f b6 b5 5f ff ff ff            	movzx esi, byte ptr [ebp - 0xa1]
0x804ad34:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804ad37:   50                              	push eax
0x804ad38:   ff b5 50 ff ff ff               	push dword ptr [ebp - 0xb0]
0x804ad3e:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804ad41:   52                              	push edx
0x804ad42:   ff 75 b4                        	push dword ptr [ebp - 0x4c]
0x804ad45:   51                              	push ecx
0x804ad46:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804ad49:   53                              	push ebx
0x804ad4a:   ff b5 54 ff ff ff               	push dword ptr [ebp - 0xac]
0x804ad50:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804ad56:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ad59:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804ad5f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804ad62:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ad65:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804ad6b:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804ad71:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ad77:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ad7d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ad80:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ad83:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ad89:   ff b5 54 fe ff ff               	push dword ptr [ebp - 0x1ac]
0x804ad8f:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804ad92:   ff b5 50 fe ff ff               	push dword ptr [ebp - 0x1b0]
0x804ad98:   57                              	push edi
0x804ad99:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ad9c:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ad9f:   56                              	push esi
0x804ada0:   e8 81 e8 ff ff                  	call 0x8049626 <set_var>
0x804ada5:   83 c4 74                        	add esp, 0x74
0x804ada8:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804adac:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804adaf:   5b                              	pop ebx
0x804adb0:   5e                              	pop esi
0x804adb1:   5f                              	pop edi
0x804adb2:   5d                              	pop ebp
0x804adb3:   c3                              	ret 
; function: main at 0x804adb4 -- 0x804b1ce
0x804adb4:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804adb8:   83 e4 f0                        	and esp, 0xfffffff0
0x804adbb:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804adbe:   55                              	push ebp
0x804adbf:   89 e5                           	mov ebp, esp
0x804adc1:   53                              	push ebx
0x804adc2:   51                              	push ecx
0x804adc3:   83 ec 10                        	sub esp, 0x10
0x804adc6:   e8 c5 d5 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804adcb:   81 c3 35 32 00 00               	add ebx, 0x3235
0x804add1:   89 c8                           	mov eax, ecx
0x804add3:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804adda:   83 38 02                        	cmp dword ptr [eax], 2
0x804addd:   75 26                           	jne 0x804ae05 <main+0x51>
0x804addf:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ade2:   83 c0 04                        	add eax, 4
0x804ade5:   8b 00                           	mov eax, dword ptr [eax]
0x804ade7:   83 ec 08                        	sub esp, 8
0x804adea:   8d 93 b9 d2 ff ff               	lea edx, [ebx - 0x2d47]
0x804adf0:   52                              	push edx
0x804adf1:   50                              	push eax
0x804adf2:   e8 09 d5 ff ff                  	call 0x8048300 <strcmp>
0x804adf7:   83 c4 10                        	add esp, 0x10
0x804adfa:   85 c0                           	test eax, eax
0x804adfc:   75 07                           	jne 0x804ae05 <main+0x51>
0x804adfe:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ae05:   e8 4c d6 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ae0a:   e8 5c e6 ff ff                  	call 0x804946b <crc32_gentab>
0x804ae0f:   e8 02 ea ff ff                  	call 0x8049816 <func_1>
0x804ae14:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804ae1b:   0f b6 c0                        	movzx eax, al
0x804ae1e:   83 ec 04                        	sub esp, 4
0x804ae21:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae24:   8d 93 bb d2 ff ff               	lea edx, [ebx - 0x2d45]
0x804ae2a:   52                              	push edx
0x804ae2b:   50                              	push eax
0x804ae2c:   e8 46 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae31:   83 c4 10                        	add esp, 0x10
0x804ae34:   b8 00 00 00 00                  	mov eax, 0
0x804ae39:   0f be c0                        	movsx eax, al
0x804ae3c:   83 ec 04                        	sub esp, 4
0x804ae3f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae42:   8d 93 c0 d2 ff ff               	lea edx, [ebx - 0x2d40]
0x804ae48:   52                              	push edx
0x804ae49:   50                              	push eax
0x804ae4a:   e8 28 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4f:   83 c4 10                        	add esp, 0x10
0x804ae52:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ae58:   89 c2                           	mov edx, eax
0x804ae5a:   83 ec 04                        	sub esp, 4
0x804ae5d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae60:   8d 83 c5 d2 ff ff               	lea eax, [ebx - 0x2d3b]
0x804ae66:   50                              	push eax
0x804ae67:   52                              	push edx
0x804ae68:   e8 0a e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6d:   83 c4 10                        	add esp, 0x10
0x804ae70:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ae76:   89 c2                           	mov edx, eax
0x804ae78:   83 ec 04                        	sub esp, 4
0x804ae7b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7e:   8d 83 ca d2 ff ff               	lea eax, [ebx - 0x2d36]
0x804ae84:   50                              	push eax
0x804ae85:   52                              	push edx
0x804ae86:   e8 ec e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae8b:   83 c4 10                        	add esp, 0x10
0x804ae8e:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804ae95:   0f b6 c0                        	movzx eax, al
0x804ae98:   83 ec 04                        	sub esp, 4
0x804ae9b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae9e:   8d 93 cf d2 ff ff               	lea edx, [ebx - 0x2d31]
0x804aea4:   52                              	push edx
0x804aea5:   50                              	push eax
0x804aea6:   e8 cc e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeab:   83 c4 10                        	add esp, 0x10
0x804aeae:   0f b6 83 31 00 00 00            	movzx eax, byte ptr [ebx + 0x31]
0x804aeb5:   0f b6 c0                        	movzx eax, al
0x804aeb8:   83 ec 04                        	sub esp, 4
0x804aebb:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aebe:   8d 93 d4 d2 ff ff               	lea edx, [ebx - 0x2d2c]
0x804aec4:   52                              	push edx
0x804aec5:   50                              	push eax
0x804aec6:   e8 ac e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aecb:   83 c4 10                        	add esp, 0x10
0x804aece:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804aed4:   89 c2                           	mov edx, eax
0x804aed6:   83 ec 04                        	sub esp, 4
0x804aed9:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aedc:   8d 83 d9 d2 ff ff               	lea eax, [ebx - 0x2d27]
0x804aee2:   50                              	push eax
0x804aee3:   52                              	push edx
0x804aee4:   e8 8e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee9:   83 c4 10                        	add esp, 0x10
0x804aeec:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804aef3:   98                              	cwde 
0x804aef4:   83 ec 04                        	sub esp, 4
0x804aef7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aefa:   8d 93 de d2 ff ff               	lea edx, [ebx - 0x2d22]
0x804af00:   52                              	push edx
0x804af01:   50                              	push eax
0x804af02:   e8 70 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af07:   83 c4 10                        	add esp, 0x10
0x804af0a:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804af11:   0f be c0                        	movsx eax, al
0x804af14:   83 ec 04                        	sub esp, 4
0x804af17:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af1a:   8d 93 e3 d2 ff ff               	lea edx, [ebx - 0x2d1d]
0x804af20:   52                              	push edx
0x804af21:   50                              	push eax
0x804af22:   e8 50 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af27:   83 c4 10                        	add esp, 0x10
0x804af2a:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804af30:   83 ec 04                        	sub esp, 4
0x804af33:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af36:   8d 93 e8 d2 ff ff               	lea edx, [ebx - 0x2d18]
0x804af3c:   52                              	push edx
0x804af3d:   50                              	push eax
0x804af3e:   e8 34 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af43:   83 c4 10                        	add esp, 0x10
0x804af46:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804af4c:   83 ec 04                        	sub esp, 4
0x804af4f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af52:   8d 93 ed d2 ff ff               	lea edx, [ebx - 0x2d13]
0x804af58:   52                              	push edx
0x804af59:   50                              	push eax
0x804af5a:   e8 18 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af5f:   83 c4 10                        	add esp, 0x10
0x804af62:   0f b6 83 ac 04 00 00            	movzx eax, byte ptr [ebx + 0x4ac]
0x804af69:   0f be c0                        	movsx eax, al
0x804af6c:   83 ec 04                        	sub esp, 4
0x804af6f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af72:   8d 93 f2 d2 ff ff               	lea edx, [ebx - 0x2d0e]
0x804af78:   52                              	push edx
0x804af79:   50                              	push eax
0x804af7a:   e8 f8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af7f:   83 c4 10                        	add esp, 0x10
0x804af82:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804af89:   0f b7 c0                        	movzx eax, ax
0x804af8c:   83 ec 04                        	sub esp, 4
0x804af8f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af92:   8d 93 f8 d2 ff ff               	lea edx, [ebx - 0x2d08]
0x804af98:   52                              	push edx
0x804af99:   50                              	push eax
0x804af9a:   e8 d8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af9f:   83 c4 10                        	add esp, 0x10
0x804afa2:   0f b6 83 42 00 00 00            	movzx eax, byte ptr [ebx + 0x42]
0x804afa9:   0f be c0                        	movsx eax, al
0x804afac:   83 ec 04                        	sub esp, 4
0x804afaf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afb2:   8d 93 fe d2 ff ff               	lea edx, [ebx - 0x2d02]
0x804afb8:   52                              	push edx
0x804afb9:   50                              	push eax
0x804afba:   e8 b8 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afbf:   83 c4 10                        	add esp, 0x10
0x804afc2:   0f b6 83 43 00 00 00            	movzx eax, byte ptr [ebx + 0x43]
0x804afc9:   0f b6 c0                        	movzx eax, al
0x804afcc:   83 ec 04                        	sub esp, 4
0x804afcf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd2:   8d 93 04 d3 ff ff               	lea edx, [ebx - 0x2cfc]
0x804afd8:   52                              	push edx
0x804afd9:   50                              	push eax
0x804afda:   e8 98 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afdf:   83 c4 10                        	add esp, 0x10
0x804afe2:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804afe8:   89 c2                           	mov edx, eax
0x804afea:   83 ec 04                        	sub esp, 4
0x804afed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aff0:   8d 83 0a d3 ff ff               	lea eax, [ebx - 0x2cf6]
0x804aff6:   50                              	push eax
0x804aff7:   52                              	push edx
0x804aff8:   e8 7a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804affd:   83 c4 10                        	add esp, 0x10
0x804b000:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b006:   89 c2                           	mov edx, eax
0x804b008:   83 ec 04                        	sub esp, 4
0x804b00b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b00e:   8d 83 10 d3 ff ff               	lea eax, [ebx - 0x2cf0]
0x804b014:   50                              	push eax
0x804b015:   52                              	push edx
0x804b016:   e8 5c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b01b:   83 c4 10                        	add esp, 0x10
0x804b01e:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804b025:   0f be c0                        	movsx eax, al
0x804b028:   83 ec 04                        	sub esp, 4
0x804b02b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b02e:   8d 93 16 d3 ff ff               	lea edx, [ebx - 0x2cea]
0x804b034:   52                              	push edx
0x804b035:   50                              	push eax
0x804b036:   e8 3c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b03b:   83 c4 10                        	add esp, 0x10
0x804b03e:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b044:   89 c2                           	mov edx, eax
0x804b046:   83 ec 04                        	sub esp, 4
0x804b049:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b04c:   8d 83 1c d3 ff ff               	lea eax, [ebx - 0x2ce4]
0x804b052:   50                              	push eax
0x804b053:   52                              	push edx
0x804b054:   e8 1e e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b059:   83 c4 10                        	add esp, 0x10
0x804b05c:   0f b7 83 ae 04 00 00            	movzx eax, word ptr [ebx + 0x4ae]
0x804b063:   0f b7 c0                        	movzx eax, ax
0x804b066:   83 ec 04                        	sub esp, 4
0x804b069:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b06c:   8d 93 22 d3 ff ff               	lea edx, [ebx - 0x2cde]
0x804b072:   52                              	push edx
0x804b073:   50                              	push eax
0x804b074:   e8 fe e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b079:   83 c4 10                        	add esp, 0x10
0x804b07c:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b082:   83 ec 04                        	sub esp, 4
0x804b085:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b088:   8d 93 28 d3 ff ff               	lea edx, [ebx - 0x2cd8]
0x804b08e:   52                              	push edx
0x804b08f:   50                              	push eax
0x804b090:   e8 e2 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b095:   83 c4 10                        	add esp, 0x10
0x804b098:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804b09f:   98                              	cwde 
0x804b0a0:   83 ec 04                        	sub esp, 4
0x804b0a3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0a6:   8d 93 2e d3 ff ff               	lea edx, [ebx - 0x2cd2]
0x804b0ac:   52                              	push edx
0x804b0ad:   50                              	push eax
0x804b0ae:   e8 c4 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0b3:   83 c4 10                        	add esp, 0x10
0x804b0b6:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804b0bc:   83 ec 04                        	sub esp, 4
0x804b0bf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0c2:   8d 93 34 d3 ff ff               	lea edx, [ebx - 0x2ccc]
0x804b0c8:   52                              	push edx
0x804b0c9:   50                              	push eax
0x804b0ca:   e8 a8 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0cf:   83 c4 10                        	add esp, 0x10
0x804b0d2:   0f b7 83 60 00 00 00            	movzx eax, word ptr [ebx + 0x60]
0x804b0d9:   0f b7 c0                        	movzx eax, ax
0x804b0dc:   83 ec 04                        	sub esp, 4
0x804b0df:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0e2:   8d 93 3a d3 ff ff               	lea edx, [ebx - 0x2cc6]
0x804b0e8:   52                              	push edx
0x804b0e9:   50                              	push eax
0x804b0ea:   e8 88 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0ef:   83 c4 10                        	add esp, 0x10
0x804b0f2:   8b 83 64 00 00 00               	mov eax, dword ptr [ebx + 0x64]
0x804b0f8:   89 c2                           	mov edx, eax
0x804b0fa:   83 ec 04                        	sub esp, 4
0x804b0fd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b100:   8d 83 40 d3 ff ff               	lea eax, [ebx - 0x2cc0]
0x804b106:   50                              	push eax
0x804b107:   52                              	push edx
0x804b108:   e8 6a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b10d:   83 c4 10                        	add esp, 0x10
0x804b110:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804b117:   0f b7 c0                        	movzx eax, ax
0x804b11a:   83 ec 04                        	sub esp, 4
0x804b11d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b120:   8d 93 46 d3 ff ff               	lea edx, [ebx - 0x2cba]
0x804b126:   52                              	push edx
0x804b127:   50                              	push eax
0x804b128:   e8 4a e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b12d:   83 c4 10                        	add esp, 0x10
0x804b130:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804b136:   83 ec 04                        	sub esp, 4
0x804b139:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b13c:   8d 93 4c d3 ff ff               	lea edx, [ebx - 0x2cb4]
0x804b142:   52                              	push edx
0x804b143:   50                              	push eax
0x804b144:   e8 2e e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b149:   83 c4 10                        	add esp, 0x10
0x804b14c:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b152:   89 c2                           	mov edx, eax
0x804b154:   83 ec 04                        	sub esp, 4
0x804b157:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b15a:   8d 83 52 d3 ff ff               	lea eax, [ebx - 0x2cae]
0x804b160:   50                              	push eax
0x804b161:   52                              	push edx
0x804b162:   e8 10 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b167:   83 c4 10                        	add esp, 0x10
0x804b16a:   0f b6 83 74 00 00 00            	movzx eax, byte ptr [ebx + 0x74]
0x804b171:   0f b6 c0                        	movzx eax, al
0x804b174:   83 ec 04                        	sub esp, 4
0x804b177:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b17a:   8d 93 58 d3 ff ff               	lea edx, [ebx - 0x2ca8]
0x804b180:   52                              	push edx
0x804b181:   50                              	push eax
0x804b182:   e8 f0 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b187:   83 c4 10                        	add esp, 0x10
0x804b18a:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b190:   89 c2                           	mov edx, eax
0x804b192:   83 ec 04                        	sub esp, 4
0x804b195:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b198:   8d 83 5e d3 ff ff               	lea eax, [ebx - 0x2ca2]
0x804b19e:   50                              	push eax
0x804b19f:   52                              	push edx
0x804b1a0:   e8 d2 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1a5:   83 c4 10                        	add esp, 0x10
0x804b1a8:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b1ae:   f7 d0                           	not eax
0x804b1b0:   83 ec 08                        	sub esp, 8
0x804b1b3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1b6:   50                              	push eax
0x804b1b7:   e8 aa d2 ff ff                  	call 0x8048466 <platform_main_end>
0x804b1bc:   83 c4 10                        	add esp, 0x10
0x804b1bf:   b8 00 00 00 00                  	mov eax, 0
0x804b1c4:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b1c7:   59                              	pop ecx
0x804b1c8:   5b                              	pop ebx
0x804b1c9:   5d                              	pop ebp
0x804b1ca:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b1cd:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b1ce -- 0x804b1d2
0x804b1ce:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b1d1:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b1d2 -- 0x804b1d6
0x804b1d2:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b1d5:   c3                              	ret 
; data inside code section at 0x804b1d6 -- 0x804b1e0
0x804b1d6:   66 90 66 90 66 90 66 90  66 90                     |f.f.f.f.f.      |
; function: __libc_csu_init at 0x804b1e0 -- 0x804b23d
0x804b1e0:   55                              	push ebp
0x804b1e1:   57                              	push edi
0x804b1e2:   56                              	push esi
0x804b1e3:   53                              	push ebx
0x804b1e4:   e8 a7 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b1e9:   81 c3 17 2e 00 00               	add ebx, 0x2e17
0x804b1ef:   83 ec 0c                        	sub esp, 0xc
0x804b1f2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b1f6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b1fc:   e8 cb d0 ff ff                  	call 0x80482cc <_init>
0x804b201:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b207:   29 c6                           	sub esi, eax
0x804b209:   c1 fe 02                        	sar esi, 2
0x804b20c:   85 f6                           	test esi, esi
0x804b20e:   74 25                           	je 0x804b235 <__libc_csu_init+0x55>
0x804b210:   31 ff                           	xor edi, edi
0x804b212:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b218:   83 ec 04                        	sub esp, 4
0x804b21b:   55                              	push ebp
0x804b21c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b220:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b224:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b22b:   83 c7 01                        	add edi, 1
0x804b22e:   83 c4 10                        	add esp, 0x10
0x804b231:   39 fe                           	cmp esi, edi
0x804b233:   75 e3                           	jne 0x804b218 <__libc_csu_init+0x38>
0x804b235:   83 c4 0c                        	add esp, 0xc
0x804b238:   5b                              	pop ebx
0x804b239:   5e                              	pop esi
0x804b23a:   5f                              	pop edi
0x804b23b:   5d                              	pop ebp
0x804b23c:   c3                              	ret 
; data inside code section at 0x804b23d -- 0x804b240
0x804b23d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b240 -- 0x804b242
0x804b240:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b244 -- 0x804b258
0x804b244:   53                              	push ebx
0x804b245:   83 ec 08                        	sub esp, 8
0x804b248:   e8 43 d1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b24d:   81 c3 b3 2d 00 00               	add ebx, 0x2db3
0x804b253:   83 c4 08                        	add esp, 8
0x804b256:   5b                              	pop ebx
0x804b257:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 5c b2 04 08  04 00 00 00 11 00 10 00   |....\...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b258:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b268:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b278:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b288:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b298:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b2a8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b2b8:   00 31 00 67 5f 32 38 00  67 5f 33 30 00 67 5f 33   |.1.g_28.g_30.g_3|
0x804b2c8:   37 00 67 5f 34 32 00 67  5f 35 31 00 67 5f 35 32   |7.g_42.g_51.g_52|
0x804b2d8:   00 67 5f 36 33 00 67 5f  36 35 00 67 5f 36 36 00   |.g_63.g_65.g_66.|
0x804b2e8:   67 5f 36 37 00 67 5f 38  31 00 67 5f 31 32 37 00   |g_67.g_81.g_127.|
0x804b2f8:   67 5f 31 33 36 00 67 5f  31 34 35 00 67 5f 31 34   |g_136.g_145.g_14|
0x804b308:   38 00 67 5f 31 35 31 00  67 5f 31 39 32 00 67 5f   |8.g_151.g_192.g_|
0x804b318:   32 30 32 00 67 5f 32 31  39 00 67 5f 32 32 30 00   |202.g_219.g_220.|
0x804b328:   67 5f 32 34 38 00 67 5f  32 35 39 00 67 5f 33 32   |g_248.g_259.g_32|
0x804b338:   31 00 67 5f 33 34 39 00  67 5f 34 33 30 00 67 5f   |1.g_349.g_430.g_|
0x804b348:   34 35 37 00 67 5f 34 38  36 00 67 5f 34 39 34 00   |457.g_486.g_494.|
0x804b358:   67 5f 35 30 37 00 67 5f  35 34 39 00 00 00 00 3f   |g_507.g_549....?|
0x804b368:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b378:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b388:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b398:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b3a8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b3b8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b3c8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b3d0:   01 1b 03 3b b8 02 00 00  56 00 00 00 20 cf ff ff   |...;....V... ...|
0x804b3e0:   e8 02 00 00 60 cf ff ff  0c 03 00 00 b0 cf ff ff   |....`...........|
0x804b3f0:   d4 02 00 00 86 d0 ff ff  20 03 00 00 96 d0 ff ff   |........ .......|
0x804b400:   40 03 00 00 c4 d0 ff ff  64 03 00 00 e2 d0 ff ff   |@.......d.......|
0x804b410:   84 03 00 00 0a d1 ff ff  a4 03 00 00 34 d1 ff ff   |............4...|
0x804b420:   c4 03 00 00 5d d1 ff ff  e4 03 00 00 a0 d1 ff ff   |....]...........|
0x804b430:   04 04 00 00 e1 d1 ff ff  24 04 00 00 39 d2 ff ff   |........$...9...|
0x804b440:   48 04 00 00 8b d2 ff ff  6c 04 00 00 c8 d2 ff ff   |H.......l.......|
0x804b450:   8c 04 00 00 ff d2 ff ff  ac 04 00 00 1e d3 ff ff   |................|
0x804b460:   cc 04 00 00 48 d3 ff ff  ec 04 00 00 74 d3 ff ff   |....H.......t...|
0x804b470:   0c 05 00 00 9f d3 ff ff  2c 05 00 00 e8 d3 ff ff   |........,.......|
0x804b480:   4c 05 00 00 2f d4 ff ff  6c 05 00 00 89 d4 ff ff   |L.../...l.......|
0x804b490:   90 05 00 00 dd d4 ff ff  b4 05 00 00 1c d5 ff ff   |................|
0x804b4a0:   d4 05 00 00 55 d5 ff ff  f4 05 00 00 77 d5 ff ff   |....U.......w...|
0x804b4b0:   14 06 00 00 c5 d5 ff ff  34 06 00 00 01 d6 ff ff   |........4.......|
0x804b4c0:   54 06 00 00 8a d6 ff ff  74 06 00 00 bc d6 ff ff   |T.......t.......|
0x804b4d0:   94 06 00 00 ec d6 ff ff  b4 06 00 00 31 d7 ff ff   |............1...|
0x804b4e0:   d4 06 00 00 70 d7 ff ff  f4 06 00 00 a2 d7 ff ff   |....p...........|
0x804b4f0:   14 07 00 00 ce d7 ff ff  34 07 00 00 ec d7 ff ff   |........4.......|
0x804b500:   54 07 00 00 14 d8 ff ff  74 07 00 00 39 d8 ff ff   |T.......t...9...|
0x804b510:   94 07 00 00 5e d8 ff ff  b4 07 00 00 95 d8 ff ff   |....^...........|
0x804b520:   d4 07 00 00 c9 d8 ff ff  f4 07 00 00 1b d9 ff ff   |................|
0x804b530:   18 08 00 00 67 d9 ff ff  3c 08 00 00 9e d9 ff ff   |....g...<.......|
0x804b540:   5c 08 00 00 cf d9 ff ff  7c 08 00 00 ee d9 ff ff   |\.......|.......|
0x804b550:   9c 08 00 00 18 da ff ff  bc 08 00 00 40 da ff ff   |............@...|
0x804b560:   dc 08 00 00 69 da ff ff  fc 08 00 00 a5 da ff ff   |....i...........|
0x804b570:   1c 09 00 00 df da ff ff  3c 09 00 00 32 db ff ff   |........<...2...|
0x804b580:   60 09 00 00 7f db ff ff  84 09 00 00 b7 db ff ff   |`...............|
0x804b590:   a4 09 00 00 e9 db ff ff  c4 09 00 00 fd db ff ff   |................|
0x804b5a0:   e4 09 00 00 14 dc ff ff  04 0a 00 00 29 dc ff ff   |............)...|
0x804b5b0:   24 0a 00 00 3f dc ff ff  44 0a 00 00 66 dc ff ff   |$...?...D...f...|
0x804b5c0:   64 0a 00 00 8b dc ff ff  84 0a 00 00 ca dc ff ff   |d...............|
0x804b5d0:   a4 0a 00 00 03 dd ff ff  c4 0a 00 00 2f dd ff ff   |............/...|
0x804b5e0:   e4 0a 00 00 55 dd ff ff  04 0b 00 00 97 dd ff ff   |....U...........|
0x804b5f0:   24 0b 00 00 d9 dd ff ff  44 0b 00 00 1b de ff ff   |$.......D.......|
0x804b600:   64 0b 00 00 90 de ff ff  84 0b 00 00 ed de ff ff   |d...............|
0x804b610:   a4 0b 00 00 4a df ff ff  c4 0b 00 00 a7 df ff ff   |....J...........|
0x804b620:   e4 0b 00 00 37 e0 ff ff  04 0c 00 00 9b e0 ff ff   |....7...........|
0x804b630:   24 0c 00 00 0b e1 ff ff  44 0c 00 00 52 e1 ff ff   |$.......D...R...|
0x804b640:   68 0c 00 00 a7 e1 ff ff  88 0c 00 00 ee e1 ff ff   |h...............|
0x804b650:   ac 0c 00 00 56 e2 ff ff  d0 0c 00 00 46 e4 ff ff   |....V.......F...|
0x804b660:   00 0d 00 00 e4 f9 ff ff  30 0d 00 00 fe fd ff ff   |........0.......|
0x804b670:   68 0d 00 00 02 fe ff ff  7c 0d 00 00 10 fe ff ff   |h.......|.......|
0x804b680:   90 0d 00 00 70 fe ff ff  dc 0d 00 00 14            |....p........   |
; section: .eh_frame
0x804b68c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b69c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b6ac:   d4 cc ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b6bc:   30 00 00 00 30 cc ff ff  40 00 00 00 00 0e 08 46   |0...0...@......F|
0x804b6cc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b6dc:   10 00 00 00 54 00 00 00  4c cc ff ff 08 00 00 00   |....T...L.......|
0x804b6ec:   00 00 00 00 1c 00 00 00  68 00 00 00 5e cd ff ff   |........h...^...|
0x804b6fc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b70c:   04 04 00 00 20 00 00 00  88 00 00 00 4e cd ff ff   |.... .......N...|
0x804b71c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b72c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b73c:   58 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |X........A....B.|
0x804b74c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b75c:   56 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |V...(....A....B.|
0x804b76c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b77c:   5e cd ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |^...*....A....B.|
0x804b78c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b79c:   68 cd ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |h...)....A....B.|
0x804b7ac:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b7bc:   71 cd ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |q...C....A....B.|
0x804b7cc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b7dc:   94 cd ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b7ec:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b7fc:   b5 cd ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b80c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b81c:   90 01 00 00 e9 cd ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b82c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b83c:   1c 00 00 00 b4 01 00 00  17 ce ff ff 3d 00 00 00   |............=...|
0x804b84c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b85c:   1c 00 00 00 d4 01 00 00  34 ce ff ff 37 00 00 00   |........4...7...|
0x804b86c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b87c:   1c 00 00 00 f4 01 00 00  4b ce ff ff 1f 00 00 00   |........K.......|
0x804b88c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b89c:   1c 00 00 00 14 02 00 00  4a ce ff ff 2a 00 00 00   |........J...*...|
0x804b8ac:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b8bc:   1c 00 00 00 34 02 00 00  54 ce ff ff 2c 00 00 00   |....4...T...,...|
0x804b8cc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b8dc:   1c 00 00 00 54 02 00 00  60 ce ff ff 2b 00 00 00   |....T...`...+...|
0x804b8ec:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b8fc:   1c 00 00 00 74 02 00 00  6b ce ff ff 49 00 00 00   |....t...k...I...|
0x804b90c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b91c:   1c 00 00 00 94 02 00 00  94 ce ff ff 47 00 00 00   |............G...|
0x804b92c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b93c:   20 00 00 00 b4 02 00 00  bb ce ff ff 5a 00 00 00   | ...........Z...|
0x804b94c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b95c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 f1 ce ff ff   |.... ...........|
0x804b96c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b97c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b98c:   21 cf ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |!...?....A....B.|
0x804b99c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b9ac:   40 cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |@...9....A....B.|
0x804b9bc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b9cc:   59 cf ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |Y..."....A....B.|
0x804b9dc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b9ec:   5b cf ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |[...N....A....B.|
0x804b9fc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ba0c:   89 cf ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804ba1c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ba2c:   a5 cf ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba3c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ba4c:   0e d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ba5c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804ba6c:   20 d0 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   | ...0....A....B.|
0x804ba7c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804ba8c:   30 d0 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |0...E....A....B.|
0x804ba9c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804baac:   55 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |U...?....A....B.|
0x804babc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bacc:   74 d0 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |t...2....A....B.|
0x804badc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804baec:   86 d0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bafc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804bb0c:   92 d0 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bb1c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804bb2c:   90 d0 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804bb3c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804bb4c:   98 d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bb5c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804bb6c:   9d d0 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bb7c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804bb8c:   a2 d0 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804bb9c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804bbac:   b9 d0 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bbbc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804bbcc:   cd d0 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bbdc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804bbec:   60 05 00 00 fb d0 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804bbfc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bc0c:   1c 00 00 00 84 05 00 00  23 d1 ff ff 37 00 00 00   |........#...7...|
0x804bc1c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bc2c:   1c 00 00 00 a4 05 00 00  3a d1 ff ff 31 00 00 00   |........:...1...|
0x804bc3c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bc4c:   1c 00 00 00 c4 05 00 00  4b d1 ff ff 1f 00 00 00   |........K.......|
0x804bc5c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bc6c:   1c 00 00 00 e4 05 00 00  4a d1 ff ff 2a 00 00 00   |........J...*...|
0x804bc7c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bc8c:   1c 00 00 00 04 06 00 00  54 d1 ff ff 28 00 00 00   |........T...(...|
0x804bc9c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bcac:   1c 00 00 00 24 06 00 00  5c d1 ff ff 29 00 00 00   |....$...\...)...|
0x804bcbc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bccc:   1c 00 00 00 44 06 00 00  65 d1 ff ff 3c 00 00 00   |....D...e...<...|
0x804bcdc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bcec:   1c 00 00 00 64 06 00 00  81 d1 ff ff 3a 00 00 00   |....d.......:...|
0x804bcfc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bd0c:   20 00 00 00 84 06 00 00  9b d1 ff ff 53 00 00 00   | ...........S...|
0x804bd1c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bd2c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ca d1 ff ff   |.... ...........|
0x804bd3c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bd4c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bd5c:   f3 d1 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bd6c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bd7c:   0b d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bd8c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bd9c:   1d d2 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdac:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bdbc:   11 d2 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdcc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bddc:   08 d2 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdec:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bdfc:   fd d1 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be0c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804be1c:   f3 d1 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804be2c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804be3c:   fa d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be4c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804be5c:   ff d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804be6c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804be7c:   1e d2 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804be8c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804be9c:   37 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |7...,....A....B.|
0x804beac:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bebc:   43 d2 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |C...&....A....B.|
0x804becc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bedc:   49 d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |I...B....A....B.|
0x804beec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804befc:   6b d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |k...B....A....B.|
0x804bf0c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bf1c:   8d d2 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bf2c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bf3c:   af d2 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bf4c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bf5c:   04 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bf6c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bf7c:   41 d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |A...]....A....B.|
0x804bf8c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bf9c:   7e d3 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |~...]....A....B.|
0x804bfac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bfbc:   bb d3 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bfcc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bfdc:   2b d4 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |+...d....A....B.|
0x804bfec:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bffc:   6f d4 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |o...p....A....B.|
0x804c00c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c01c:   bf d4 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c02c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c03c:   b0 09 00 00 e2 d4 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c04c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c05c:   d0 09 00 00 17 d5 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c06c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c07c:   20 00 00 00 f4 09 00 00  3a d5 ff ff 68 00 00 00   | .......:...h...|
0x804c08c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c09c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 7e d5 ff ff   |....,.......~...|
0x804c0ac:   f0 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804c0bc:   86 04 83 05 03 e3 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c0cc:   04 00 00 00 2c 00 00 00  48 0a 00 00 3e d7 ff ff   |....,...H...>...|
0x804c0dc:   9e 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c0ec:   86 04 83 05 03 8e 15 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c0fc:   04 00 00 00 34 00 00 00  78 0a 00 00 ac ec ff ff   |....4...x.......|
0x804c10c:   1a 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804c11c:   0f 03 75 78 06 10 03 02  75 7c 03 05 04 c1 0c 01   |..ux....u|......|
0x804c12c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c13c:   b0 0a 00 00 8e f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c14c:   10 00 00 00 c4 0a 00 00  7e f0 ff ff 04 00 00 00   |........~.......|
0x804c15c:   00 00 00 00 48 00 00 00  d8 0a 00 00 78 f0 ff ff   |....H.......x...|
0x804c16c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c17c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c18c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c19c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c1ac:   10 00 00 00 24 0b 00 00  8c f0 ff ff 02 00 00 00   |....$...........|
0x804c1bc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 44 b2 04 08  19 00 00 00 0c df 04 08   |....D...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 08 00 00 00   |................|
0x804e028:   08 00 00 00 ed fe 2b d6  ff 06 00 00 03 00 00 00   |......+.........|
0x804e038:   51 18 00 00 be 22 ab 8b  ff ff ce 8d 02 00 00 00   |Q...."..........|
0x804e048:   9a 69 98 ef ff 00 00 00  01 00 00 00 09 00 00 00   |.i..............|
0x804e058:   da fc 00 00 1f be 53 32  9b a2 00 00 d9 99 50 e1   |......S2......P.|
0x804e068:   5f f3 00 00 a6 00 06 88  d1 83 50 93 23 00 00 00   |_.........P.#...|
0x804e078:   c8 a5 c2 8b ??                                     |....?           |
