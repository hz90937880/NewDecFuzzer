;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:25:32
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 60 d0 ff ff               	lea eax, [ebx - 0x2fa0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 d0 ff ff               	lea eax, [ebx - 0x3000]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 9b ab 04 08               	mov eax, 0x804ab9b
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 7c e0 04 08                  	mov eax, 0x804e07c
0x80483a5:   3d 7c e0 04 08                  	cmp eax, 0x804e07c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 7c e0 04 08                  	push 0x804e07c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 7c e0 04 08                  	mov eax, 0x804e07c
0x80483e5:   2d 7c e0 04 08                  	sub eax, 0x804e07c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 7c e0 04 08                  	push 0x804e07c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 92 2b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 7e 2b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 d0 ff ff               	lea edx, [eax - 0x2f80]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 51 2b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 33 2b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 0b 2b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e1 2a 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 b8 2a 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 75 2a 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 33 2a 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 db 29 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 8a 29 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 4d 29 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 16 29 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 f7 28 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 cd 28 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a1 28 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 76 28 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 2d 28 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 e5 27 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 8b 27 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 38 27 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 f9 26 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 c3 26 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a1 26 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 53 26 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 17 26 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 8e 25 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 5c 25 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 2c 25 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 e7 24 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 a8 24 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 76 24 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 47 24 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 29 24 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 01 24 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 dc 23 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 b7 23 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 80 23 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 4b 23 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 f9 22 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 ae 22 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 77 22 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 46 22 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 27 22 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 fd 21 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 d5 21 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 ac 21 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 70 21 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 35 21 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e2 20 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 96 20 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 5e 20 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 2f 20 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 1b 20 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 04 20 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 ef 1f 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 d9 1f 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b2 1f 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 8d 1f 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 4e 1f 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 15 1f 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 e9 1e 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 c3 1e 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 90 d1 ff ff               	fld dword ptr [eax - 0x2e70]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 90 d1 ff ff               	fld dword ptr [eax - 0x2e70]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 94 d1 ff ff               	fld dword ptr [eax - 0x2e6c]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 81 1e 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 90 d1 ff ff               	fld dword ptr [eax - 0x2e70]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 90 d1 ff ff               	fld dword ptr [eax - 0x2e70]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 94 d1 ff ff               	fld dword ptr [eax - 0x2e6c]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 3f 1e 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 98 d1 ff ff               	fld dword ptr [eax - 0x2e68]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 9c d1 ff ff               	fld dword ptr [eax - 0x2e64]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 a0 d1 ff ff               	fld dword ptr [eax - 0x2e60]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 fd 1d 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 a4 d1 ff ff               	fld dword ptr [eax - 0x2e5c]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a8 d1 ff ff               	fld dword ptr [eax - 0x2e58]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 ac d1 ff ff               	fld dword ptr [eax - 0x2e54]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 85 1d 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b8 d1 ff ff               	fld qword ptr [eax - 0x2e48]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 28 1d 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b8 d1 ff ff               	fld qword ptr [eax - 0x2e48]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 cb 1c 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 c0 d1 ff ff               	fld qword ptr [eax - 0x2e40]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c8 d1 ff ff               	fld qword ptr [eax - 0x2e38]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 d0 d1 ff ff               	fld qword ptr [eax - 0x2e30]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 6e 1c 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d8 d1 ff ff               	fld qword ptr [eax - 0x2e28]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 e0 d1 ff ff               	fld qword ptr [eax - 0x2e20]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e8 d1 ff ff               	fld qword ptr [eax - 0x2e18]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 de 1b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 f0 d1 ff ff               	fld dword ptr [eax - 0x2e10]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 f4 d1 ff ff               	fld dword ptr [eax - 0x2e0c]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 7a 1b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 09 1b 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 c6 1a 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 d0 ff ff               	lea eax, [ebx - 0x2f70]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 d0 ff ff               	lea eax, [ebx - 0x2f4c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804986f
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 c4 80                        	add esp, -0x80
0x804962f:   e8 c0 19 00 00                  	call 0x804aff4 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804963d:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049640:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049643:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049646:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049649:   8b 7d 20                        	mov edi, dword ptr [ebp + 0x20]
0x804964c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804964f:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049652:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049655:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049658:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804965b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804965e:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049661:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x8049664:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049667:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804966a:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804966d:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049670:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x8049673:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049676:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049679:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804967c:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x804967f:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049682:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049685:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x8049688:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804968b:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049691:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049694:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804969a:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x804969d:   89 85 74 ff ff ff               	mov dword ptr [ebp - 0x8c], eax
0x80496a3:   0f b6 45 a8                     	movzx eax, byte ptr [ebp - 0x58]
0x80496a7:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496aa:   89 c8                           	mov eax, ecx
0x80496ac:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496af:   89 d8                           	mov eax, ebx
0x80496b1:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496b5:   89 f0                           	mov eax, esi
0x80496b7:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496bb:   89 f8                           	mov eax, edi
0x80496bd:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496c1:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x80496c5:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x80496c8:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496cc:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496d0:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d4:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496d7:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496db:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496df:   0f b7 45 94                     	movzx eax, word ptr [ebp - 0x6c]
0x80496e3:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496e7:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496eb:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496ef:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f3:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496f7:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x80496fb:   88 45 c0                        	mov byte ptr [ebp - 0x40], al
0x80496fe:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049702:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x8049706:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x804970a:   88 45 b8                        	mov byte ptr [ebp - 0x48], al
0x804970d:   0f b6 85 7c ff ff ff            	movzx eax, byte ptr [ebp - 0x84]
0x8049714:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x8049717:   0f b6 85 78 ff ff ff            	movzx eax, byte ptr [ebp - 0x88]
0x804971e:   88 45 b0                        	mov byte ptr [ebp - 0x50], al
0x8049721:   0f b7 85 74 ff ff ff            	movzx eax, word ptr [ebp - 0x8c]
0x8049728:   66 89 45 ac                     	mov word ptr [ebp - 0x54], ax
0x804972c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804972f:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x8049735:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049738:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x804973e:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049742:   88 82 2c 00 00 00               	mov byte ptr [edx + 0x2c], al
0x8049748:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x804974c:   88 82 2d 00 00 00               	mov byte ptr [edx + 0x2d], al
0x8049752:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x8049756:   66 89 82 2e 00 00 00            	mov word ptr [edx + 0x2e], ax
0x804975d:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049761:   66 89 82 30 00 00 00            	mov word ptr [edx + 0x30], ax
0x8049768:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x804976c:   66 89 82 32 00 00 00            	mov word ptr [edx + 0x32], ax
0x8049773:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x8049776:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804977c:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x804977f:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049785:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049789:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x804978f:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049792:   89 82 a4 04 00 00               	mov dword ptr [edx + 0x4a4], eax
0x8049798:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804979b:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x80497a1:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497a5:   66 89 82 44 00 00 00            	mov word ptr [edx + 0x44], ax
0x80497ac:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x80497b0:   88 82 46 00 00 00               	mov byte ptr [edx + 0x46], al
0x80497b6:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497b9:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x80497bf:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497c3:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x80497ca:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497ce:   66 89 82 4e 00 00 00            	mov word ptr [edx + 0x4e], ax
0x80497d5:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x80497d9:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x80497e0:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497e4:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x80497eb:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x80497ef:   88 82 54 00 00 00               	mov byte ptr [edx + 0x54], al
0x80497f5:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80497f9:   66 89 82 a8 04 00 00            	mov word ptr [edx + 0x4a8], ax
0x8049800:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x8049803:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x8049809:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804980d:   88 82 5c 00 00 00               	mov byte ptr [edx + 0x5c], al
0x8049813:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x8049817:   88 82 5d 00 00 00               	mov byte ptr [edx + 0x5d], al
0x804981d:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049820:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x8049826:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x804982a:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x8049830:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x8049833:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049839:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x804983c:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x8049842:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x8049846:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x804984d:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049850:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049856:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x804985c:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x8049862:   b8 00 00 00 00                  	mov eax, 0
0x8049867:   83 ec 80                        	sub esp, -0x80
0x804986a:   5b                              	pop ebx
0x804986b:   5e                              	pop esi
0x804986c:   5f                              	pop edi
0x804986d:   5d                              	pop ebp
0x804986e:   c3                              	ret 
; function: func_1 at 0x804986f -- 0x804ab9b
0x804986f:   55                              	push ebp
0x8049870:   89 e5                           	mov ebp, esp
0x8049872:   57                              	push edi
0x8049873:   56                              	push esi
0x8049874:   53                              	push ebx
0x8049875:   81 ec 80 01 00 00               	sub esp, 0x180
0x804987b:   e8 70 17 00 00                  	call 0x804aff0 <__x86.get_pc_thunk.ax>
0x8049880:   05 80 47 00 00                  	add eax, 0x4780
0x8049885:   c7 45 f0 01 00 00 00            	mov dword ptr [ebp - 0x10], 1
0x804988c:   c7 45 ec 85 d5 49 5b            	mov dword ptr [ebp - 0x14], 0x5b49d585
0x8049893:   c6 45 eb d5                     	mov byte ptr [ebp - 0x15], 0xd5
0x8049897:   c6 45 87 6c                     	mov byte ptr [ebp - 0x79], 0x6c
0x804989b:   66 c7 45 e8 03 00               	mov word ptr [ebp - 0x18], 3
0x80498a1:   66 c7 45 84 01 00               	mov word ptr [ebp - 0x7c], 1
0x80498a7:   66 c7 45 e6 71 d7               	mov word ptr [ebp - 0x1a], 0xd771
0x80498ad:   c7 45 e0 46 54 fc be            	mov dword ptr [ebp - 0x20], 0xbefc5446
0x80498b4:   c7 45 dc 01 00 00 00            	mov dword ptr [ebp - 0x24], 1
0x80498bb:   c6 45 db f9                     	mov byte ptr [ebp - 0x25], 0xf9
0x80498bf:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x80498c6:   c7 45 d0 01 c8 d3 8b            	mov dword ptr [ebp - 0x30], 0x8bd3c801
0x80498cd:   66 c7 45 ce fc ff               	mov word ptr [ebp - 0x32], 0xfffc
0x80498d3:   c6 45 cd f8                     	mov byte ptr [ebp - 0x33], 0xf8
0x80498d7:   c7 45 c8 62 3b b8 e5            	mov dword ptr [ebp - 0x38], 0xe5b83b62
0x80498de:   66 c7 45 82 ff ff               	mov word ptr [ebp - 0x7e], 0xffff
0x80498e4:   66 c7 45 c6 01 00               	mov word ptr [ebp - 0x3a], 1
0x80498ea:   66 c7 45 c4 15 e5               	mov word ptr [ebp - 0x3c], 0xe515
0x80498f0:   66 c7 45 c2 ff ff               	mov word ptr [ebp - 0x3e], 0xffff
0x80498f6:   c6 45 c1 d8                     	mov byte ptr [ebp - 0x3f], 0xd8
0x80498fa:   66 c7 45 be 00 00               	mov word ptr [ebp - 0x42], 0
0x8049900:   c7 45 b8 f9 ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffff9
0x8049907:   c6 45 b7 03                     	mov byte ptr [ebp - 0x49], 3
0x804990b:   c6 45 b6 7b                     	mov byte ptr [ebp - 0x4a], 0x7b
0x804990f:   c7 45 b0 f6 ff ff ff            	mov dword ptr [ebp - 0x50], 0xfffffff6
0x8049916:   c6 45 af c5                     	mov byte ptr [ebp - 0x51], 0xc5
0x804991a:   c7 45 a8 9b 14 ee 36            	mov dword ptr [ebp - 0x58], 0x36ee149b
0x8049921:   c7 45 a4 33 3d ef 49            	mov dword ptr [ebp - 0x5c], 0x49ef3d33
0x8049928:   66 c7 45 80 43 a0               	mov word ptr [ebp - 0x80], 0xa043
0x804992e:   c7 45 a0 de fa 01 2d            	mov dword ptr [ebp - 0x60], 0x2d01fade
0x8049935:   c7 85 7c ff ff ff 5b d1 dc b2   	mov dword ptr [ebp - 0x84], 0xb2dcd15b
0x804993f:   c7 85 78 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x88], 1
0x8049949:   c7 45 9c 51 5a ad fd            	mov dword ptr [ebp - 0x64], 0xfdad5a51
0x8049950:   66 c7 85 76 ff ff ff 01 00      	mov word ptr [ebp - 0x8a], 1
0x8049959:   c7 85 70 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x90], 1
0x8049963:   66 c7 45 9a 01 00               	mov word ptr [ebp - 0x66], 1
0x8049969:   66 c7 85 6e ff ff ff 02 00      	mov word ptr [ebp - 0x92], 2
0x8049972:   c7 85 68 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0x98], 0xfffffffa
0x804997c:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049986:   c7 85 60 ff ff ff 8f 88 ee c0   	mov dword ptr [ebp - 0xa0], 0xc0ee888f
0x8049990:   c7 85 5c ff ff ff d3 fe 9a 04   	mov dword ptr [ebp - 0xa4], 0x49afed3
0x804999a:   66 c7 85 5a ff ff ff 01 00      	mov word ptr [ebp - 0xa6], 1
0x80499a3:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x80499aa:   e9 5c 10 00 00                  	jmp 0x804aa0b <func_1+0x119c>
0x80499af:   c7 85 54 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xac], 0xffffffff
0x80499b9:   c7 45 94 06 00 00 00            	mov dword ptr [ebp - 0x6c], 6
0x80499c0:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x80499ca:   c7 85 4c ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0xb4], 9
0x80499d4:   c7 45 90 03 00 00 00            	mov dword ptr [ebp - 0x70], 3
0x80499db:   c6 45 8f 00                     	mov byte ptr [ebp - 0x71], 0
0x80499df:   66 c7 85 4a ff ff ff d7 24      	mov word ptr [ebp - 0xb6], 0x24d7
0x80499e8:   66 c7 85 48 ff ff ff 01 00      	mov word ptr [ebp - 0xb8], 1
0x80499f1:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499f4:   39 85 54 ff ff ff               	cmp dword ptr [ebp - 0xac], eax
0x80499fa:   0f 86 af 07 00 00               	jbe 0x804a1af <func_1+0x940>
0x8049a00:   c7 85 f8 fe ff ff 1a 06 fd 1a   	mov dword ptr [ebp - 0x108], 0x1afd061a
0x8049a0a:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x8049a11:   66 c7 85 f6 fe ff ff a1 65      	mov word ptr [ebp - 0x10a], 0x65a1
0x8049a1a:   66 c7 85 f4 fe ff ff 76 3a      	mov word ptr [ebp - 0x10c], 0x3a76
0x8049a23:   c7 85 f0 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x110], 8
0x8049a2d:   c7 85 ec fe ff ff a9 e5 12 d4   	mov dword ptr [ebp - 0x114], 0xd412e5a9
0x8049a37:   c6 85 eb fe ff ff 38            	mov byte ptr [ebp - 0x115], 0x38
0x8049a3e:   66 c7 85 e8 fe ff ff 2b 9c      	mov word ptr [ebp - 0x118], 0x9c2b
0x8049a47:   c7 45 ec 53 92 57 f2            	mov dword ptr [ebp - 0x14], 0xf2579253
0x8049a4e:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049a51:   0f be c0                        	movsx eax, al
0x8049a54:   89 c2                           	mov edx, eax
0x8049a56:   c1 e0 03                        	shl eax, 3
0x8049a59:   29 c2                           	sub edx, eax
0x8049a5b:   89 d0                           	mov eax, edx
0x8049a5d:   3d 54 92 57 f2                  	cmp eax, 0xf2579254
0x8049a62:   0f 9c c0                        	setl al
0x8049a65:   0f b6 c0                        	movzx eax, al
0x8049a68:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a6b:   0f 94 c0                        	sete al
0x8049a6e:   0f b6 d0                        	movzx edx, al
0x8049a71:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049a78:   39 c2                           	cmp edx, eax
0x8049a7a:   0f 9e c0                        	setle al
0x8049a7d:   0f b6 c0                        	movzx eax, al
0x8049a80:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049a83:   7c 10                           	jl 0x8049a95 <func_1+0x226>
0x8049a85:   83 bd f8 fe ff ff 00            	cmp dword ptr [ebp - 0x108], 0
0x8049a8c:   74 07                           	je 0x8049a95 <func_1+0x226>
0x8049a8e:   b8 01 00 00 00                  	mov eax, 1
0x8049a93:   eb 05                           	jmp 0x8049a9a <func_1+0x22b>
0x8049a95:   b8 00 00 00 00                  	mov eax, 0
0x8049a9a:   23 45 f0                        	and eax, dword ptr [ebp - 0x10]
0x8049a9d:   85 c0                           	test eax, eax
0x8049a9f:   0f 84 99 00 00 00               	je 0x8049b3e <func_1+0x2cf>
0x8049aa5:   c7 45 9c fa ff ff ff            	mov dword ptr [ebp - 0x64], 0xfffffffa
0x8049aac:   eb 2c                           	jmp 0x8049ada <func_1+0x26b>
0x8049aae:   c7 85 e4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x11c], 1
0x8049ab8:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x8049abe:   0f bf d0                        	movsx edx, ax
0x8049ac1:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ac4:   98                              	cwde 
0x8049ac5:   89 c1                           	mov ecx, eax
0x8049ac7:   d3 e2                           	shl edx, cl
0x8049ac9:   89 d0                           	mov eax, edx
0x8049acb:   89 c2                           	mov edx, eax
0x8049acd:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049ad1:   31 d0                           	xor eax, edx
0x8049ad3:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049ad6:   83 45 9c 01                     	add dword ptr [ebp - 0x64], 1
0x8049ada:   83 7d 9c 0d                     	cmp dword ptr [ebp - 0x64], 0xd
0x8049ade:   7e ce                           	jle 0x8049aae <func_1+0x23f>
0x8049ae0:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049ae3:   83 f0 01                        	xor eax, 1
0x8049ae6:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049ae9:   80 7d 87 00                     	cmp byte ptr [ebp - 0x79], 0
0x8049aed:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049af0:   0f b6 d0                        	movzx edx, al
0x8049af3:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049af6:   0f b6 c0                        	movzx eax, al
0x8049af9:   0f af c2                        	imul eax, edx
0x8049afc:   85 c0                           	test eax, eax
0x8049afe:   74 07                           	je 0x8049b07 <func_1+0x298>
0x8049b00:   b8 01 00 00 00                  	mov eax, 1
0x8049b05:   eb 05                           	jmp 0x8049b0c <func_1+0x29d>
0x8049b07:   b8 00 00 00 00                  	mov eax, 0
0x8049b0c:   0f b6 d0                        	movzx edx, al
0x8049b0f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049b12:   0f b6 c0                        	movzx eax, al
0x8049b15:   89 c1                           	mov ecx, eax
0x8049b17:   d3 e2                           	shl edx, cl
0x8049b19:   89 d0                           	mov eax, edx
0x8049b1b:   0f be c0                        	movsx eax, al
0x8049b1e:   89 c2                           	mov edx, eax
0x8049b20:   c1 e0 03                        	shl eax, 3
0x8049b23:   29 c2                           	sub edx, eax
0x8049b25:   89 d0                           	mov eax, edx
0x8049b27:   85 c0                           	test eax, eax
0x8049b29:   74 04                           	je 0x8049b2f <func_1+0x2c0>
0x8049b2b:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049b2f:   c7 45 88 c5 bf ff ff            	mov dword ptr [ebp - 0x78], 0xffffbfc5
0x8049b36:   66 c7 45 e8 00 00               	mov word ptr [ebp - 0x18], 0
0x8049b3c:   eb 13                           	jmp 0x8049b51 <func_1+0x2e2>
0x8049b3e:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049b42:   0f 95 c0                        	setne al
0x8049b45:   0f b6 c0                        	movzx eax, al
0x8049b48:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049b4b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b4e:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049b51:   80 7d 87 00                     	cmp byte ptr [ebp - 0x79], 0
0x8049b55:   0f 85 a8 0e 00 00               	jne 0x804aa03 <func_1+0x1194>
0x8049b5b:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b5e:   ba 00 00 00 00                  	mov edx, 0
0x8049b63:   66 f7 b5 f6 fe ff ff            	div word ptr [ebp - 0x10a]
0x8049b6a:   0f b7 c0                        	movzx eax, ax
0x8049b6d:   0b 45 9c                        	or eax, dword ptr [ebp - 0x64]
0x8049b70:   85 c0                           	test eax, eax
0x8049b72:   0f 84 9a 05 00 00               	je 0x804a112 <func_1+0x8a3>
0x8049b78:   66 c7 85 de fe ff ff fe ff      	mov word ptr [ebp - 0x122], 0xfffe
0x8049b81:   c7 85 d8 fe ff ff a1 94 b1 cd   	mov dword ptr [ebp - 0x128], 0xcdb194a1
0x8049b8b:   c6 85 d7 fe ff ff 00            	mov byte ptr [ebp - 0x129], 0
0x8049b92:   c7 85 d0 fe ff ff 59 3c a7 d7   	mov dword ptr [ebp - 0x130], 0xd7a73c59
0x8049b9c:   c7 85 cc fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x134], 1
0x8049ba6:   66 c7 85 ca fe ff ff 01 00      	mov word ptr [ebp - 0x136], 1
0x8049baf:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x8049bb3:   0f 84 0d 01 00 00               	je 0x8049cc6 <func_1+0x457>
0x8049bb9:   66 c7 85 b0 fe ff ff ff ff      	mov word ptr [ebp - 0x150], 0xffff
0x8049bc2:   c6 45 eb 00                     	mov byte ptr [ebp - 0x15], 0
0x8049bc6:   e9 df 00 00 00                  	jmp 0x8049caa <func_1+0x43b>
0x8049bcb:   0f b7 8d b0 fe ff ff            	movzx ecx, word ptr [ebp - 0x150]
0x8049bd2:   ba 73 af 07 48                  	mov edx, 0x4807af73
0x8049bd7:   89 c8                           	mov eax, ecx
0x8049bd9:   f7 ea                           	imul edx
0x8049bdb:   89 d0                           	mov eax, edx
0x8049bdd:   c1 f8 19                        	sar eax, 0x19
0x8049be0:   c1 f9 1f                        	sar ecx, 0x1f
0x8049be3:   89 ca                           	mov edx, ecx
0x8049be5:   29 c2                           	sub edx, eax
0x8049be7:   89 d0                           	mov eax, edx
0x8049be9:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049bec:   83 7d 94 01                     	cmp dword ptr [ebp - 0x6c], 1
0x8049bf0:   0f 95 c0                        	setne al
0x8049bf3:   0f b6 c0                        	movzx eax, al
0x8049bf6:   8b 95 70 ff ff ff               	mov edx, dword ptr [ebp - 0x90]
0x8049bfc:   09 d0                           	or eax, edx
0x8049bfe:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x8049c02:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049c07:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049c0d:   f7 d0                           	not eax
0x8049c0f:   99                              	cdq 
0x8049c10:   f7 7d ec                        	idiv dword ptr [ebp - 0x14]
0x8049c13:   c1 e8 1f                        	shr eax, 0x1f
0x8049c16:   0f b6 c0                        	movzx eax, al
0x8049c19:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x8049c1c:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x8049c20:   75 06                           	jne 0x8049c28 <func_1+0x3b9>
0x8049c22:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049c26:   74 07                           	je 0x8049c2f <func_1+0x3c0>
0x8049c28:   b8 01 00 00 00                  	mov eax, 1
0x8049c2d:   eb 05                           	jmp 0x8049c34 <func_1+0x3c5>
0x8049c2f:   b8 00 00 00 00                  	mov eax, 0
0x8049c34:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x8049c37:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049c3a:   0d 22 11 61 83                  	or eax, 0x83611122
0x8049c3f:   89 45 d0                        	mov dword ptr [ebp - 0x30], eax
0x8049c42:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049c45:   c1 e8 1f                        	shr eax, 0x1f
0x8049c48:   0f b6 c0                        	movzx eax, al
0x8049c4b:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049c4e:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049c51:   0d 3b a8 db f4                  	or eax, 0xf4dba83b
0x8049c56:   83 f8 fd                        	cmp eax, -3
0x8049c59:   0f 96 c0                        	setbe al
0x8049c5c:   0f b6 d0                        	movzx edx, al
0x8049c5f:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x8049c66:   39 c2                           	cmp edx, eax
0x8049c68:   0f 9c c0                        	setl al
0x8049c6b:   0f b6 c0                        	movzx eax, al
0x8049c6e:   89 c2                           	mov edx, eax
0x8049c70:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049c74:   21 d0                           	and eax, edx
0x8049c76:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x8049c7a:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049c7e:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x8049c84:   0f 96 c0                        	setbe al
0x8049c87:   0f b6 d0                        	movzx edx, al
0x8049c8a:   0f b7 85 de fe ff ff            	movzx eax, word ptr [ebp - 0x122]
0x8049c91:   39 c2                           	cmp edx, eax
0x8049c93:   0f 9e c0                        	setle al
0x8049c96:   0f b6 c0                        	movzx eax, al
0x8049c99:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049c9c:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x8049ca0:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x8049ca6:   80 45 eb 01                     	add byte ptr [ebp - 0x15], 1
0x8049caa:   80 7d eb 2d                     	cmp byte ptr [ebp - 0x15], 0x2d
0x8049cae:   0f 86 17 ff ff ff               	jbe 0x8049bcb <func_1+0x35c>
0x8049cb4:   80 bd d7 fe ff ff 00            	cmp byte ptr [ebp - 0x129], 0
0x8049cbb:   0f 84 d1 03 00 00               	je 0x804a092 <func_1+0x823>
0x8049cc1:   e9 55 0d 00 00                  	jmp 0x804aa1b <func_1+0x11ac>
0x8049cc6:   c7 85 c4 fe ff ff bb b8 3d 23   	mov dword ptr [ebp - 0x13c], 0x233db8bb
0x8049cd0:   c6 85 c3 fe ff ff e1            	mov byte ptr [ebp - 0x13d], 0xe1
0x8049cd7:   c7 85 bc fe ff ff b7 c7 66 86   	mov dword ptr [ebp - 0x144], 0x8666c7b7
0x8049ce1:   0f bf 55 e6                     	movsx edx, word ptr [ebp - 0x1a]
0x8049ce5:   0f b7 85 f6 fe ff ff            	movzx eax, word ptr [ebp - 0x10a]
0x8049cec:   21 d0                           	and eax, edx
0x8049cee:   85 c0                           	test eax, eax
0x8049cf0:   75 07                           	jne 0x8049cf9 <func_1+0x48a>
0x8049cf2:   66 83 7d 84 00                  	cmp word ptr [ebp - 0x7c], 0
0x8049cf7:   74 07                           	je 0x8049d00 <func_1+0x491>
0x8049cf9:   b8 01 00 00 00                  	mov eax, 1
0x8049cfe:   eb 05                           	jmp 0x8049d05 <func_1+0x496>
0x8049d00:   b8 00 00 00 00                  	mov eax, 0
0x8049d05:   0f be c0                        	movsx eax, al
0x8049d08:   8b 55 88                        	mov edx, dword ptr [ebp - 0x78]
0x8049d0b:   0f be fa                        	movsx edi, dl
0x8049d0e:   99                              	cdq 
0x8049d0f:   f7 ff                           	idiv edi
0x8049d11:   66 89 45 9a                     	mov word ptr [ebp - 0x66], ax
0x8049d15:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x8049d1a:   75 07                           	jne 0x8049d23 <func_1+0x4b4>
0x8049d1c:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x8049d21:   74 07                           	je 0x8049d2a <func_1+0x4bb>
0x8049d23:   b8 01 00 00 00                  	mov eax, 1
0x8049d28:   eb 05                           	jmp 0x8049d2f <func_1+0x4c0>
0x8049d2a:   b8 00 00 00 00                  	mov eax, 0
0x8049d2f:   3d be f2 00 00                  	cmp eax, 0xf2be
0x8049d34:   0f 9e c0                        	setle al
0x8049d37:   0f b6 c0                        	movzx eax, al
0x8049d3a:   89 c2                           	mov edx, eax
0x8049d3c:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049d42:   0f b6 c0                        	movzx eax, al
0x8049d45:   0f af c2                        	imul eax, edx
0x8049d48:   0f bf d0                        	movsx edx, ax
0x8049d4b:   0f be 45 db                     	movsx eax, byte ptr [ebp - 0x25]
0x8049d4f:   89 c1                           	mov ecx, eax
0x8049d51:   d3 e2                           	shl edx, cl
0x8049d53:   89 d0                           	mov eax, edx
0x8049d55:   85 c0                           	test eax, eax
0x8049d57:   74 0d                           	je 0x8049d66 <func_1+0x4f7>
0x8049d59:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049d5d:   74 07                           	je 0x8049d66 <func_1+0x4f7>
0x8049d5f:   b8 01 00 00 00                  	mov eax, 1
0x8049d64:   eb 05                           	jmp 0x8049d6b <func_1+0x4fc>
0x8049d66:   b8 00 00 00 00                  	mov eax, 0
0x8049d6b:   0f b6 d0                        	movzx edx, al
0x8049d6e:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x8049d74:   0f b6 c0                        	movzx eax, al
0x8049d77:   01 d0                           	add eax, edx
0x8049d79:   25 bc 81 00 00                  	and eax, 0x81bc
0x8049d7e:   85 c0                           	test eax, eax
0x8049d80:   74 38                           	je 0x8049dba <func_1+0x54b>
0x8049d82:   c6 85 b3 fe ff ff 01            	mov byte ptr [ebp - 0x14d], 1
0x8049d89:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049d8f:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049d92:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049d95:   3b 45 dc                        	cmp eax, dword ptr [ebp - 0x24]
0x8049d98:   7e 07                           	jle 0x8049da1 <func_1+0x532>
0x8049d9a:   83 bd d8 fe ff ff 00            	cmp dword ptr [ebp - 0x128], 0
0x8049da1:   c7 45 88 f7 ff ff ff            	mov dword ptr [ebp - 0x78], 0xfffffff7
0x8049da8:   83 bd d0 fe ff ff 00            	cmp dword ptr [ebp - 0x130], 0
0x8049daf:   0f 84 f3 00 00 00               	je 0x8049ea8 <func_1+0x639>
0x8049db5:   e9 61 0c 00 00                  	jmp 0x804aa1b <func_1+0x11ac>
0x8049dba:   c7 85 b8 fe ff ff a4 bd 06 70   	mov dword ptr [ebp - 0x148], 0x7006bda4
0x8049dc4:   c7 85 b4 fe ff ff c3 83 c6 c7   	mov dword ptr [ebp - 0x14c], 0xc7c683c3
0x8049dce:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x8049dd2:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x8049dd5:   89 c2                           	mov edx, eax
0x8049dd7:   b8 7c 00 00 00                  	mov eax, 0x7c
0x8049ddc:   0f b6 c0                        	movzx eax, al
0x8049ddf:   f6 f2                           	div dl
0x8049de1:   0f b6 c0                        	movzx eax, al
0x8049de4:   c1 f8 02                        	sar eax, 2
0x8049de7:   98                              	cwde 
0x8049de8:   8b 95 b4 fe ff ff               	mov edx, dword ptr [ebp - 0x14c]
0x8049dee:   0f bf ca                        	movsx ecx, dx
0x8049df1:   99                              	cdq 
0x8049df2:   f7 f9                           	idiv ecx
0x8049df4:   89 d0                           	mov eax, edx
0x8049df6:   89 c2                           	mov edx, eax
0x8049df8:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x8049dfc:   21 d0                           	and eax, edx
0x8049dfe:   88 45 eb                        	mov byte ptr [ebp - 0x15], al
0x8049e01:   0f b6 55 eb                     	movzx edx, byte ptr [ebp - 0x15]
0x8049e05:   0f bf 45 84                     	movsx eax, word ptr [ebp - 0x7c]
0x8049e09:   39 c2                           	cmp edx, eax
0x8049e0b:   0f 94 c0                        	sete al
0x8049e0e:   0f b6 c0                        	movzx eax, al
0x8049e11:   89 85 d8 fe ff ff               	mov dword ptr [ebp - 0x128], eax
0x8049e17:   83 bd d8 fe ff ff ff            	cmp dword ptr [ebp - 0x128], -1
0x8049e1e:   75 04                           	jne 0x8049e24 <func_1+0x5b5>
0x8049e20:   80 7d eb 00                     	cmp byte ptr [ebp - 0x15], 0
0x8049e24:   83 bd c4 fe ff ff 00            	cmp dword ptr [ebp - 0x13c], 0
0x8049e2b:   75 06                           	jne 0x8049e33 <func_1+0x5c4>
0x8049e2d:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x8049e31:   74 07                           	je 0x8049e3a <func_1+0x5cb>
0x8049e33:   b8 01 00 00 00                  	mov eax, 1
0x8049e38:   eb 05                           	jmp 0x8049e3f <func_1+0x5d0>
0x8049e3a:   b8 00 00 00 00                  	mov eax, 0
0x8049e3f:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x8049e45:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x8049e49:   8b 85 b8 fe ff ff               	mov eax, dword ptr [ebp - 0x148]
0x8049e4f:   ba 00 00 00 00                  	mov edx, 0
0x8049e54:   f7 f1                           	div ecx
0x8049e56:   89 d0                           	mov eax, edx
0x8049e58:   85 c0                           	test eax, eax
0x8049e5a:   0f 94 c0                        	sete al
0x8049e5d:   0f b6 d0                        	movzx edx, al
0x8049e60:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049e64:   39 c2                           	cmp edx, eax
0x8049e66:   66 83 bd 76 ff ff ff 01         	cmp word ptr [ebp - 0x8a], 1
0x8049e6e:   0f 96 c0                        	setbe al
0x8049e71:   0f b6 c0                        	movzx eax, al
0x8049e74:   89 c2                           	mov edx, eax
0x8049e76:   0f b6 85 eb fe ff ff            	movzx eax, byte ptr [ebp - 0x115]
0x8049e7d:   31 d0                           	xor eax, edx
0x8049e7f:   88 85 eb fe ff ff               	mov byte ptr [ebp - 0x115], al
0x8049e85:   0f b6 85 eb fe ff ff            	movzx eax, byte ptr [ebp - 0x115]
0x8049e8c:   0b 85 cc fe ff ff               	or eax, dword ptr [ebp - 0x134]
0x8049e92:   89 c2                           	mov edx, eax
0x8049e94:   0f b6 45 cd                     	movzx eax, byte ptr [ebp - 0x33]
0x8049e98:   31 d0                           	xor eax, edx
0x8049e9a:   88 45 cd                        	mov byte ptr [ebp - 0x33], al
0x8049e9d:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x8049ea1:   0f b6 45 cd                     	movzx eax, byte ptr [ebp - 0x33]
0x8049ea5:   21 45 88                        	and dword ptr [ebp - 0x78], eax
0x8049ea8:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049eac:   83 c0 01                        	add eax, 1
0x8049eaf:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x8049eb3:   0f b6 55 cd                     	movzx edx, byte ptr [ebp - 0x33]
0x8049eb7:   83 bd 4c ff ff ff 05            	cmp dword ptr [ebp - 0xb4], 5
0x8049ebe:   0f 97 c0                        	seta al
0x8049ec1:   0f b6 c0                        	movzx eax, al
0x8049ec4:   09 d0                           	or eax, edx
0x8049ec6:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049ec9:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049ecc:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049ed2:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049ed8:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049edb:   0f b6 85 c3 fe ff ff            	movzx eax, byte ptr [ebp - 0x13d]
0x8049ee2:   83 e8 01                        	sub eax, 1
0x8049ee5:   0f be c0                        	movsx eax, al
0x8049ee8:   83 c0 41                        	add eax, 0x41
0x8049eeb:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x8049eee:   0f 8d 23 01 00 00               	jge 0x804a017 <func_1+0x7a8>
0x8049ef4:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x8049efa:   66 89 45 82                     	mov word ptr [ebp - 0x7e], ax
0x8049efe:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x8049f02:   0f be 55 af                     	movsx edx, byte ptr [ebp - 0x51]
0x8049f06:   0f be 5d b6                     	movsx ebx, byte ptr [ebp - 0x4a]
0x8049f0a:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x8049f0e:   0f b7 75 be                     	movzx esi, word ptr [ebp - 0x42]
0x8049f12:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x8049f18:   0f b6 4d c1                     	movzx ecx, byte ptr [ebp - 0x3f]
0x8049f1c:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x8049f22:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x8049f26:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x8049f2c:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x8049f30:   89 8d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ecx
0x8049f36:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x8049f3a:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x8049f40:   0f bf 4d 82                     	movsx ecx, word ptr [ebp - 0x7e]
0x8049f44:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x8049f4a:   0f b6 75 cd                     	movzx esi, byte ptr [ebp - 0x33]
0x8049f4e:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x8049f54:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x8049f58:   89 8d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ecx
0x8049f5e:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x8049f62:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x8049f68:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x8049f6c:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x8049f72:   0f bf 75 84                     	movsx esi, word ptr [ebp - 0x7c]
0x8049f76:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x8049f7c:   0f b7 4d e8                     	movzx ecx, word ptr [ebp - 0x18]
0x8049f80:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x8049f86:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x8049f8a:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x8049f8e:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x8049f94:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049f97:   50                              	push eax
0x8049f98:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049f9b:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049f9e:   52                              	push edx
0x8049f9f:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049fa2:   53                              	push ebx
0x8049fa3:   57                              	push edi
0x8049fa4:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049fa7:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049fad:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049fb3:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049fb9:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049fbf:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x8049fc5:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x8049fcb:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049fce:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x8049fd4:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x8049fda:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049fdd:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049fe0:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x8049fe6:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049fe9:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049fec:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x8049ff2:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x8049ff8:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x8049ffe:   56                              	push esi
0x8049fff:   51                              	push ecx
0x804a000:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a003:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a006:   e8 1b f6 ff ff                  	call 0x8049626 <set_var>
0x804a00b:   83 c4 7c                        	add esp, 0x7c
0x804a00e:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x804a012:   e9 7c 0b 00 00                  	jmp 0x804ab93 <func_1+0x1324>
0x804a017:   66 83 6d c6 01                  	sub word ptr [ebp - 0x3a], 1
0x804a01c:   80 7d cd 00                     	cmp byte ptr [ebp - 0x33], 0
0x804a020:   0f 85 e0 09 00 00               	jne 0x804aa06 <func_1+0x1197>
0x804a026:   66 83 6d ce 01                  	sub word ptr [ebp - 0x32], 1
0x804a02b:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a02f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a032:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a035:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a039:   0f be c0                        	movsx eax, al
0x804a03c:   c1 e0 04                        	shl eax, 4
0x804a03f:   89 c2                           	mov edx, eax
0x804a041:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a047:   88 45 8f                        	mov byte ptr [ebp - 0x71], al
0x804a04a:   0f b6 45 8f                     	movzx eax, byte ptr [ebp - 0x71]
0x804a04e:   21 d0                           	and eax, edx
0x804a050:   85 c0                           	test eax, eax
0x804a052:   74 2e                           	je 0x804a082 <func_1+0x813>
0x804a054:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a057:   89 c2                           	mov edx, eax
0x804a059:   8b 85 cc fe ff ff               	mov eax, dword ptr [ebp - 0x134]
0x804a05f:   0f af c2                        	imul eax, edx
0x804a062:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x804a065:   31 d0                           	xor eax, edx
0x804a067:   98                              	cwde 
0x804a068:   0f b7 95 de fe ff ff            	movzx edx, word ptr [ebp - 0x122]
0x804a06f:   0f bf da                        	movsx ebx, dx
0x804a072:   99                              	cdq 
0x804a073:   f7 fb                           	idiv ebx
0x804a075:   89 d0                           	mov eax, edx
0x804a077:   85 c0                           	test eax, eax
0x804a079:   74 07                           	je 0x804a082 <func_1+0x813>
0x804a07b:   b8 01 00 00 00                  	mov eax, 1
0x804a080:   eb 05                           	jmp 0x804a087 <func_1+0x818>
0x804a082:   b8 00 00 00 00                  	mov eax, 0
0x804a087:   39 c8                           	cmp eax, ecx
0x804a089:   0f 9c c0                        	setl al
0x804a08c:   0f b6 c0                        	movzx eax, al
0x804a08f:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x804a092:   66 c7 85 ca fe ff ff 60 52      	mov word ptr [ebp - 0x136], 0x5260
0x804a09b:   8b 85 d0 fe ff ff               	mov eax, dword ptr [ebp - 0x130]
0x804a0a1:   89 c2                           	mov edx, eax
0x804a0a3:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x804a0aa:   89 d1                           	mov ecx, edx
0x804a0ac:   31 c1                           	xor ecx, eax
0x804a0ae:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a0b4:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a0b7:   0f 95 c0                        	setne al
0x804a0ba:   0f b6 c0                        	movzx eax, al
0x804a0bd:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x804a0c0:   0f 94 c0                        	sete al
0x804a0c3:   0f b6 c0                        	movzx eax, al
0x804a0c6:   8b 95 54 ff ff ff               	mov edx, dword ptr [ebp - 0xac]
0x804a0cc:   0f be fa                        	movsx edi, dl
0x804a0cf:   99                              	cdq 
0x804a0d0:   f7 ff                           	idiv edi
0x804a0d2:   89 c2                           	mov edx, eax
0x804a0d4:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a0da:   66 39 c2                        	cmp dx, ax
0x804a0dd:   74 0d                           	je 0x804a0ec <func_1+0x87d>
0x804a0df:   83 7d 90 00                     	cmp dword ptr [ebp - 0x70], 0
0x804a0e3:   74 07                           	je 0x804a0ec <func_1+0x87d>
0x804a0e5:   b8 01 00 00 00                  	mov eax, 1
0x804a0ea:   eb 05                           	jmp 0x804a0f1 <func_1+0x882>
0x804a0ec:   b8 00 00 00 00                  	mov eax, 0
0x804a0f1:   89 c3                           	mov ebx, eax
0x804a0f3:   89 c8                           	mov eax, ecx
0x804a0f5:   ba 00 00 00 00                  	mov edx, 0
0x804a0fa:   66 f7 f3                        	div bx
0x804a0fd:   89 d0                           	mov eax, edx
0x804a0ff:   66 3d 60 52                     	cmp ax, 0x5260
0x804a103:   0f 94 c0                        	sete al
0x804a106:   0f b6 c0                        	movzx eax, al
0x804a109:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x804a10d:   e9 aa 07 00 00                  	jmp 0x804a8bc <func_1+0x104d>
0x804a112:   c7 85 e0 fe ff ff 08 00 00 00   	mov dword ptr [ebp - 0x120], 8
0x804a11c:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a123:   0f 85 ee 08 00 00               	jne 0x804aa17 <func_1+0x11a8>
0x804a129:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a12c:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a132:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a136:   66 0d 90 27                     	or ax, 0x2790
0x804a13a:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a13e:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a142:   83 e0 08                        	and eax, 8
0x804a145:   89 c2                           	mov edx, eax
0x804a147:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a14d:   0f af c2                        	imul eax, edx
0x804a150:   66 89 85 e8 fe ff ff            	mov word ptr [ebp - 0x118], ax
0x804a157:   0f b7 85 e8 fe ff ff            	movzx eax, word ptr [ebp - 0x118]
0x804a15e:   0f bf d0                        	movsx edx, ax
0x804a161:   0f b6 45 cd                     	movzx eax, byte ptr [ebp - 0x33]
0x804a165:   29 c2                           	sub edx, eax
0x804a167:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a16b:   39 c2                           	cmp edx, eax
0x804a16d:   0f 95 c0                        	setne al
0x804a170:   0f b6 d0                        	movzx edx, al
0x804a173:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a177:   39 c2                           	cmp edx, eax
0x804a179:   0f 9e c0                        	setle al
0x804a17c:   0f b6 c0                        	movzx eax, al
0x804a17f:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x804a185:   0f 9e c0                        	setle al
0x804a188:   0f b6 d0                        	movzx edx, al
0x804a18b:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804a191:   01 d0                           	add eax, edx
0x804a193:   39 85 e0 fe ff ff               	cmp dword ptr [ebp - 0x120], eax
0x804a199:   0f 95 c0                        	setne al
0x804a19c:   0f b6 c0                        	movzx eax, al
0x804a19f:   89 c2                           	mov edx, eax
0x804a1a1:   0f b6 45 c1                     	movzx eax, byte ptr [ebp - 0x3f]
0x804a1a5:   09 d0                           	or eax, edx
0x804a1a7:   88 45 c1                        	mov byte ptr [ebp - 0x3f], al
0x804a1aa:   e9 0d 07 00 00                  	jmp 0x804a8bc <func_1+0x104d>
0x804a1af:   c7 85 44 ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xbc], 0xfffffff6
0x804a1b9:   c7 85 40 ff ff ff b3 91 cd bc   	mov dword ptr [ebp - 0xc0], 0xbccd91b3
0x804a1c3:   c7 85 3c ff ff ff 0d 3e 83 64   	mov dword ptr [ebp - 0xc4], 0x64833e0d
0x804a1cd:   c6 85 3b ff ff ff 01            	mov byte ptr [ebp - 0xc5], 1
0x804a1d4:   c6 85 3a ff ff ff 1d            	mov byte ptr [ebp - 0xc6], 0x1d
0x804a1db:   83 ad 44 ff ff ff 01            	sub dword ptr [ebp - 0xbc], 1
0x804a1e2:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x804a1e9:   e9 b4 00 00 00                  	jmp 0x804a2a2 <func_1+0xa33>
0x804a1ee:   c7 85 34 ff ff ff 61 08 8d d4   	mov dword ptr [ebp - 0xcc], 0xd48d0861
0x804a1f8:   c7 85 30 ff ff ff 7c 4a 8d 72   	mov dword ptr [ebp - 0xd0], 0x728d4a7c
0x804a202:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a205:   89 c3                           	mov ebx, eax
0x804a207:   8b 85 44 ff ff ff               	mov eax, dword ptr [ebp - 0xbc]
0x804a20d:   0f be c0                        	movsx eax, al
0x804a210:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x804a217:   75 09                           	jne 0x804a222 <func_1+0x9b3>
0x804a219:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a220:   74 07                           	je 0x804a229 <func_1+0x9ba>
0x804a222:   b9 01 00 00 00                  	mov ecx, 1
0x804a227:   eb 05                           	jmp 0x804a22e <func_1+0x9bf>
0x804a229:   b9 00 00 00 00                  	mov ecx, 0
0x804a22e:   0f be 55 db                     	movsx edx, byte ptr [ebp - 0x25]
0x804a232:   39 d1                           	cmp ecx, edx
0x804a234:   0f 9f c2                        	setg dl
0x804a237:   88 55 db                        	mov byte ptr [ebp - 0x25], dl
0x804a23a:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x804a23e:   83 ca 4c                        	or edx, 0x4c
0x804a241:   89 d1                           	mov ecx, edx
0x804a243:   0f b6 55 8f                     	movzx edx, byte ptr [ebp - 0x71]
0x804a247:   01 ca                           	add edx, ecx
0x804a249:   0f be ca                        	movsx ecx, dl
0x804a24c:   99                              	cdq 
0x804a24d:   f7 f9                           	idiv ecx
0x804a24f:   89 d0                           	mov eax, edx
0x804a251:   89 c2                           	mov edx, eax
0x804a253:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a256:   01 c2                           	add edx, eax
0x804a258:   0f b6 c3                        	movzx eax, bl
0x804a25b:   f6 f2                           	div dl
0x804a25d:   0f b6 c4                        	movzx eax, ah
0x804a260:   0f b6 c0                        	movzx eax, al
0x804a263:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a269:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x804a270:   75 3c                           	jne 0x804a2ae <func_1+0xa3f>
0x804a272:   0f b6 45 8f                     	movzx eax, byte ptr [ebp - 0x71]
0x804a276:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x804a279:   c7 85 30 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd0], 0
0x804a283:   b8 00 00 00 00                  	mov eax, 0
0x804a288:   23 45 94                        	and eax, dword ptr [ebp - 0x6c]
0x804a28b:   89 c2                           	mov edx, eax
0x804a28d:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a291:   21 d0                           	and eax, edx
0x804a293:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804a297:   c7 45 b8 01 00 00 00            	mov dword ptr [ebp - 0x48], 1
0x804a29e:   83 6d 90 01                     	sub dword ptr [ebp - 0x70], 1
0x804a2a2:   83 7d 90 ef                     	cmp dword ptr [ebp - 0x70], -0x11
0x804a2a6:   0f 84 42 ff ff ff               	je 0x804a1ee <func_1+0x97f>
0x804a2ac:   eb 01                           	jmp 0x804a2af <func_1+0xa40>
0x804a2ae:   90                              	nop 
0x804a2af:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a2b6:   0f b6 d0                        	movzx edx, al
0x804a2b9:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a2bd:   89 c3                           	mov ebx, eax
0x804a2bf:   0f bf 4d 84                     	movsx ecx, word ptr [ebp - 0x7c]
0x804a2c3:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a2c7:   39 c1                           	cmp ecx, eax
0x804a2c9:   0f 9e c0                        	setle al
0x804a2cc:   31 c3                           	xor ebx, eax
0x804a2ce:   89 d9                           	mov ecx, ebx
0x804a2d0:   0f b6 45 8f                     	movzx eax, byte ptr [ebp - 0x71]
0x804a2d4:   09 c8                           	or eax, ecx
0x804a2d6:   0f b6 c0                        	movzx eax, al
0x804a2d9:   01 d0                           	add eax, edx
0x804a2db:   31 45 94                        	xor dword ptr [ebp - 0x6c], eax
0x804a2de:   83 7d 94 ff                     	cmp dword ptr [ebp - 0x6c], -1
0x804a2e2:   74 07                           	je 0x804a2eb <func_1+0xa7c>
0x804a2e4:   b8 07 00 00 00                  	mov eax, 7
0x804a2e9:   eb 05                           	jmp 0x804a2f0 <func_1+0xa81>
0x804a2eb:   b8 00 00 00 00                  	mov eax, 0
0x804a2f0:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a2f3:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a2f7:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a2fd:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a304:   0f 84 21 04 00 00               	je 0x804a72b <func_1+0xebc>
0x804a30a:   c6 85 11 ff ff ff 05            	mov byte ptr [ebp - 0xef], 5
0x804a311:   c7 85 0c ff ff ff a9 30 49 3c   	mov dword ptr [ebp - 0xf4], 0x3c4930a9
0x804a31b:   66 0f be 55 b6                  	movsx dx, byte ptr [ebp - 0x4a]
0x804a320:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a324:   09 d0                           	or eax, edx
0x804a326:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804a32a:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a32d:   0f b6 d0                        	movzx edx, al
0x804a330:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a333:   f7 d0                           	not eax
0x804a335:   c1 e8 1f                        	shr eax, 0x1f
0x804a338:   0f b6 c0                        	movzx eax, al
0x804a33b:   29 c2                           	sub edx, eax
0x804a33d:   89 d0                           	mov eax, edx
0x804a33f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a342:   66 c7 45 c2 f6 ff               	mov word ptr [ebp - 0x3e], 0xfff6
0x804a348:   e9 a2 01 00 00                  	jmp 0x804a4ef <func_1+0xc80>
0x804a34d:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x804a357:   c6 45 b6 ff                     	mov byte ptr [ebp - 0x4a], 0xff
0x804a35b:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a35e:   0d 19 0b db e7                  	or eax, 0xe7db0b19
0x804a363:   89 c3                           	mov ebx, eax
0x804a365:   0f b7 45 be                     	movzx eax, word ptr [ebp - 0x42]
0x804a369:   0f b6 c0                        	movzx eax, al
0x804a36c:   ba 09 00 00 00                  	mov edx, 9
0x804a371:   89 c1                           	mov ecx, eax
0x804a373:   d3 fa                           	sar edx, cl
0x804a375:   89 d0                           	mov eax, edx
0x804a377:   99                              	cdq 
0x804a378:   f7 7d ec                        	idiv dword ptr [ebp - 0x14]
0x804a37b:   83 f8 ff                        	cmp eax, -1
0x804a37e:   0f 9d c0                        	setge al
0x804a381:   0f b6 c0                        	movzx eax, al
0x804a384:   39 c3                           	cmp ebx, eax
0x804a386:   0f 96 c0                        	setbe al
0x804a389:   0f b6 d0                        	movzx edx, al
0x804a38c:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804a390:   39 c2                           	cmp edx, eax
0x804a392:   0f 9c c0                        	setl al
0x804a395:   0f b6 c0                        	movzx eax, al
0x804a398:   0f b7 55 e6                     	movzx edx, word ptr [ebp - 0x1a]
0x804a39c:   0f b6 ca                        	movzx ecx, dl
0x804a39f:   99                              	cdq 
0x804a3a0:   f7 f9                           	idiv ecx
0x804a3a2:   89 d0                           	mov eax, edx
0x804a3a4:   39 85 00 ff ff ff               	cmp dword ptr [ebp - 0x100], eax
0x804a3aa:   0f 84 23 01 00 00               	je 0x804a4d3 <func_1+0xc64>
0x804a3b0:   c7 45 94 a9 15 af de            	mov dword ptr [ebp - 0x6c], 0xdeaf15a9
0x804a3b7:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x804a3bb:   0f be 55 af                     	movsx edx, byte ptr [ebp - 0x51]
0x804a3bf:   0f be 5d b6                     	movsx ebx, byte ptr [ebp - 0x4a]
0x804a3c3:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a3c7:   0f b7 75 be                     	movzx esi, word ptr [ebp - 0x42]
0x804a3cb:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a3d1:   0f b6 4d c1                     	movzx ecx, byte ptr [ebp - 0x3f]
0x804a3d5:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a3db:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a3df:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a3e5:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a3e9:   89 8d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ecx
0x804a3ef:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a3f3:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a3f9:   0f bf 4d 82                     	movsx ecx, word ptr [ebp - 0x7e]
0x804a3fd:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804a403:   0f b6 75 cd                     	movzx esi, byte ptr [ebp - 0x33]
0x804a407:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a40d:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a411:   89 8d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ecx
0x804a417:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a41b:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a421:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x804a425:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a42b:   0f bf 75 84                     	movsx esi, word ptr [ebp - 0x7c]
0x804a42f:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a435:   0f b7 4d e8                     	movzx ecx, word ptr [ebp - 0x18]
0x804a439:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a43f:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a443:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804a447:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a44d:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a450:   50                              	push eax
0x804a451:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a454:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a457:   52                              	push edx
0x804a458:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a45b:   53                              	push ebx
0x804a45c:   57                              	push edi
0x804a45d:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a460:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a466:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a46c:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a472:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a478:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a47e:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a484:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a487:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a48d:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a493:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a496:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a499:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a49f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a4a2:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a4a5:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a4ab:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a4b1:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a4b7:   56                              	push esi
0x804a4b8:   51                              	push ecx
0x804a4b9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a4bc:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a4bf:   e8 62 f1 ff ff                  	call 0x8049626 <set_var>
0x804a4c4:   83 c4 7c                        	add esp, 0x7c
0x804a4c7:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a4ce:   e9 c0 06 00 00                  	jmp 0x804ab93 <func_1+0x1324>
0x804a4d3:   c6 85 ff fe ff ff 03            	mov byte ptr [ebp - 0x101], 3
0x804a4da:   c7 85 00 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x100], 0
0x804a4e4:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a4e8:   83 c0 01                        	add eax, 1
0x804a4eb:   66 89 45 c2                     	mov word ptr [ebp - 0x3e], ax
0x804a4ef:   66 83 7d c2 02                  	cmp word ptr [ebp - 0x3e], 2
0x804a4f4:   0f 87 53 fe ff ff               	ja 0x804a34d <func_1+0xade>
0x804a4fa:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a501:   0f 84 d5 00 00 00               	je 0x804a5dc <func_1+0xd6d>
0x804a507:   c7 85 08 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xf8], 6
0x804a511:   66 c7 45 e8 00 00               	mov word ptr [ebp - 0x18], 0
0x804a517:   eb 62                           	jmp 0x804a57b <func_1+0xd0c>
0x804a519:   c7 85 04 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xfc], 0xffffffff
0x804a523:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a526:   83 f0 9a                        	xor eax, 0xffffff9a
0x804a529:   0f be c0                        	movsx eax, al
0x804a52c:   c1 e0 02                        	shl eax, 2
0x804a52f:   20 45 af                        	and byte ptr [ebp - 0x51], al
0x804a532:   0f be 45 af                     	movsx eax, byte ptr [ebp - 0x51]
0x804a536:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a539:   83 45 a4 01                     	add dword ptr [ebp - 0x5c], 1
0x804a53d:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a544:   75 06                           	jne 0x804a54c <func_1+0xcdd>
0x804a546:   80 7d b6 00                     	cmp byte ptr [ebp - 0x4a], 0
0x804a54a:   74 07                           	je 0x804a553 <func_1+0xce4>
0x804a54c:   b8 01 00 00 00                  	mov eax, 1
0x804a551:   eb 05                           	jmp 0x804a558 <func_1+0xce9>
0x804a553:   b8 00 00 00 00                  	mov eax, 0
0x804a558:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a55b:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a55e:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a561:   0f 97 c0                        	seta al
0x804a564:   0f b6 c0                        	movzx eax, al
0x804a567:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a56d:   80 bd 11 ff ff ff 00            	cmp byte ptr [ebp - 0xef], 0
0x804a574:   75 0e                           	jne 0x804a584 <func_1+0xd15>
0x804a576:   66 83 45 e8 01                  	add word ptr [ebp - 0x18], 1
0x804a57b:   66 83 7d e8 23                  	cmp word ptr [ebp - 0x18], 0x23
0x804a580:   77 97                           	ja 0x804a519 <func_1+0xcaa>
0x804a582:   eb 01                           	jmp 0x804a585 <func_1+0xd16>
0x804a584:   90                              	nop 
0x804a585:   c7 45 a8 3b b8 7f d7            	mov dword ptr [ebp - 0x58], 0xd77fb83b
0x804a58c:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x804a591:   0f 85 83 04 00 00               	jne 0x804aa1a <func_1+0x11ab>
0x804a597:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a59b:   74 07                           	je 0x804a5a4 <func_1+0xd35>
0x804a59d:   b8 01 00 00 00                  	mov eax, 1
0x804a5a2:   eb 05                           	jmp 0x804a5a9 <func_1+0xd3a>
0x804a5a4:   b8 00 00 00 00                  	mov eax, 0
0x804a5a9:   3b 45 b0                        	cmp eax, dword ptr [ebp - 0x50]
0x804a5ac:   0f 94 c0                        	sete al
0x804a5af:   0f b6 c0                        	movzx eax, al
0x804a5b2:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a5b8:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x804a5bc:   66 c1 f8 0d                     	sar ax, 0xd
0x804a5c0:   98                              	cwde 
0x804a5c1:   8b 95 44 ff ff ff               	mov edx, dword ptr [ebp - 0xbc]
0x804a5c7:   83 e2 01                        	and edx, 1
0x804a5ca:   89 55 9c                        	mov dword ptr [ebp - 0x64], edx
0x804a5cd:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a5d1:   0f 84 2b 01 00 00               	je 0x804a702 <func_1+0xe93>
0x804a5d7:   e9 19 01 00 00                  	jmp 0x804a6f5 <func_1+0xe86>
0x804a5dc:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x804a5e0:   0f be 55 af                     	movsx edx, byte ptr [ebp - 0x51]
0x804a5e4:   0f be 5d b6                     	movsx ebx, byte ptr [ebp - 0x4a]
0x804a5e8:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a5ec:   0f b7 75 be                     	movzx esi, word ptr [ebp - 0x42]
0x804a5f0:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a5f6:   0f b6 4d c1                     	movzx ecx, byte ptr [ebp - 0x3f]
0x804a5fa:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a600:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a604:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a60a:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a60e:   89 8d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ecx
0x804a614:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a618:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a61e:   0f bf 4d 82                     	movsx ecx, word ptr [ebp - 0x7e]
0x804a622:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804a628:   0f b6 75 cd                     	movzx esi, byte ptr [ebp - 0x33]
0x804a62c:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a632:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a636:   89 8d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ecx
0x804a63c:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a640:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a646:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x804a64a:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a650:   0f bf 75 84                     	movsx esi, word ptr [ebp - 0x7c]
0x804a654:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a65a:   0f b7 4d e8                     	movzx ecx, word ptr [ebp - 0x18]
0x804a65e:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a664:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a668:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804a66c:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a672:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a675:   50                              	push eax
0x804a676:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a679:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a67c:   52                              	push edx
0x804a67d:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a680:   53                              	push ebx
0x804a681:   57                              	push edi
0x804a682:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a685:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a68b:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a691:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a697:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a69d:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a6a3:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a6a9:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a6ac:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a6b2:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a6b8:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6bb:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6be:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a6c4:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a6c7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a6ca:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a6d0:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a6d6:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a6dc:   56                              	push esi
0x804a6dd:   51                              	push ecx
0x804a6de:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6e1:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a6e4:   e8 3d ef ff ff                  	call 0x8049626 <set_var>
0x804a6e9:   83 c4 7c                        	add esp, 0x7c
0x804a6ec:   0f b7 45 c6                     	movzx eax, word ptr [ebp - 0x3a]
0x804a6f0:   e9 9e 04 00 00                  	jmp 0x804ab93 <func_1+0x1324>
0x804a6f5:   80 7d af 00                     	cmp byte ptr [ebp - 0x51], 0
0x804a6f9:   74 07                           	je 0x804a702 <func_1+0xe93>
0x804a6fb:   ba 01 00 00 00                  	mov edx, 1
0x804a700:   eb 05                           	jmp 0x804a707 <func_1+0xe98>
0x804a702:   ba 00 00 00 00                  	mov edx, 0
0x804a707:   81 fa 87 00 00 00               	cmp edx, 0x87
0x804a70d:   7f 07                           	jg 0x804a716 <func_1+0xea7>
0x804a70f:   ba 4d 4f 00 00                  	mov edx, 0x4f4d
0x804a714:   eb 05                           	jmp 0x804a71b <func_1+0xeac>
0x804a716:   ba 00 00 00 00                  	mov edx, 0
0x804a71b:   39 c2                           	cmp edx, eax
0x804a71d:   0f 9f c0                        	setg al
0x804a720:   0f b6 c0                        	movzx eax, al
0x804a723:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a726:   e9 91 01 00 00                  	jmp 0x804a8bc <func_1+0x104d>
0x804a72b:   c6 85 2f ff ff ff 3e            	mov byte ptr [ebp - 0xd1], 0x3e
0x804a732:   c6 85 2e ff ff ff 13            	mov byte ptr [ebp - 0xd2], 0x13
0x804a739:   c7 85 28 ff ff ff ee 6b b8 34   	mov dword ptr [ebp - 0xd8], 0x34b86bee
0x804a743:   c7 85 24 ff ff ff 64 41 73 a0   	mov dword ptr [ebp - 0xdc], 0xa0734164
0x804a74d:   c7 85 20 ff ff ff c1 53 0b 56   	mov dword ptr [ebp - 0xe0], 0x560b53c1
0x804a757:   0f b6 85 2e ff ff ff            	movzx eax, byte ptr [ebp - 0xd2]
0x804a75e:   f7 d8                           	neg eax
0x804a760:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a763:   0f b7 85 48 ff ff ff            	movzx eax, word ptr [ebp - 0xb8]
0x804a76a:   83 c0 01                        	add eax, 1
0x804a76d:   66 89 85 48 ff ff ff            	mov word ptr [ebp - 0xb8], ax
0x804a774:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a77a:   89 c2                           	mov edx, eax
0x804a77c:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a780:   0f b6 c0                        	movzx eax, al
0x804a783:   f6 f2                           	div dl
0x804a785:   0f b6 c0                        	movzx eax, al
0x804a788:   0b 85 7c ff ff ff               	or eax, dword ptr [ebp - 0x84]
0x804a78e:   89 c2                           	mov edx, eax
0x804a790:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a797:   39 c2                           	cmp edx, eax
0x804a799:   0f 97 c0                        	seta al
0x804a79c:   0f b6 c0                        	movzx eax, al
0x804a79f:   39 85 44 ff ff ff               	cmp dword ptr [ebp - 0xbc], eax
0x804a7a5:   76 0e                           	jbe 0x804a7b5 <func_1+0xf46>
0x804a7a7:   66 83 7d be 00                  	cmp word ptr [ebp - 0x42], 0
0x804a7ac:   74 07                           	je 0x804a7b5 <func_1+0xf46>
0x804a7ae:   b8 01 00 00 00                  	mov eax, 1
0x804a7b3:   eb 05                           	jmp 0x804a7ba <func_1+0xf4b>
0x804a7b5:   b8 00 00 00 00                  	mov eax, 0
0x804a7ba:   09 45 a0                        	or dword ptr [ebp - 0x60], eax
0x804a7bd:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a7c1:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a7c4:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a7c8:   0f 84 e8 00 00 00               	je 0x804a8b6 <func_1+0x1047>
0x804a7ce:   66 c7 85 1e ff ff ff aa 75      	mov word ptr [ebp - 0xe2], 0x75aa
0x804a7d7:   c7 85 18 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xe8], 0xffffffff
0x804a7e1:   0f b6 45 87                     	movzx eax, byte ptr [ebp - 0x79]
0x804a7e5:   c1 f8 0a                        	sar eax, 0xa
0x804a7e8:   85 c0                           	test eax, eax
0x804a7ea:   74 6b                           	je 0x804a857 <func_1+0xfe8>
0x804a7ec:   c7 85 14 ff ff ff 86 29 e0 e6   	mov dword ptr [ebp - 0xec], 0xe6e02986
0x804a7f6:   66 c7 85 12 ff ff ff 09 00      	mov word ptr [ebp - 0xee], 9
0x804a7ff:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a805:   31 85 24 ff ff ff               	xor dword ptr [ebp - 0xdc], eax
0x804a80b:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a812:   66 89 85 12 ff ff ff            	mov word ptr [ebp - 0xee], ax
0x804a819:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804a81d:   83 c8 01                        	or eax, 1
0x804a820:   89 c2                           	mov edx, eax
0x804a822:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a828:   29 c2                           	sub edx, eax
0x804a82a:   89 d0                           	mov eax, edx
0x804a82c:   0f be c0                        	movsx eax, al
0x804a82f:   0f b7 55 9a                     	movzx edx, word ptr [ebp - 0x66]
0x804a833:   0f be ca                        	movsx ecx, dl
0x804a836:   99                              	cdq 
0x804a837:   f7 f9                           	idiv ecx
0x804a839:   89 55 94                        	mov dword ptr [ebp - 0x6c], edx
0x804a83c:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x804a840:   0f be d0                        	movsx edx, al
0x804a843:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a849:   0f be c0                        	movsx eax, al
0x804a84c:   89 c1                           	mov ecx, eax
0x804a84e:   d3 fa                           	sar edx, cl
0x804a850:   89 d0                           	mov eax, edx
0x804a852:   31 45 a8                        	xor dword ptr [ebp - 0x58], eax
0x804a855:   eb 47                           	jmp 0x804a89e <func_1+0x102f>
0x804a857:   0f be 8d 3b ff ff ff            	movsx ecx, byte ptr [ebp - 0xc5]
0x804a85e:   b8 02 12 00 00                  	mov eax, 0x1202
0x804a863:   99                              	cdq 
0x804a864:   f7 f9                           	idiv ecx
0x804a866:   89 d0                           	mov eax, edx
0x804a868:   3d 92 b4 f5 67                  	cmp eax, 0x67f5b492
0x804a86d:   0f 95 c0                        	setne al
0x804a870:   0f b6 d0                        	movzx edx, al
0x804a873:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a879:   89 c3                           	mov ebx, eax
0x804a87b:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a87e:   89 c1                           	mov ecx, eax
0x804a880:   89 d8                           	mov eax, ebx
0x804a882:   0f af c1                        	imul eax, ecx
0x804a885:   0f be c0                        	movsx eax, al
0x804a888:   89 c1                           	mov ecx, eax
0x804a88a:   d3 fa                           	sar edx, cl
0x804a88c:   89 d0                           	mov eax, edx
0x804a88e:   88 85 3a ff ff ff               	mov byte ptr [ebp - 0xc6], al
0x804a894:   c7 85 18 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xe8], 1
0x804a89e:   c7 85 24 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xdc], 0xfffffff8
0x804a8a8:   8b 85 24 ff ff ff               	mov eax, dword ptr [ebp - 0xdc]
0x804a8ae:   09 85 3c ff ff ff               	or dword ptr [ebp - 0xc4], eax
0x804a8b4:   eb 06                           	jmp 0x804a8bc <func_1+0x104d>
0x804a8b6:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804a8b9:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a8bc:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a8c2:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a8c5:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x804a8cb:   0f b7 c0                        	movzx eax, ax
0x804a8ce:   69 c0 fa c4 00 00               	imul eax, eax, 0xc4fa
0x804a8d4:   85 c0                           	test eax, eax
0x804a8d6:   75 0a                           	jne 0x804a8e2 <func_1+0x1073>
0x804a8d8:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a8dc:   75 04                           	jne 0x804a8e2 <func_1+0x1073>
0x804a8de:   80 7d 8f 00                     	cmp byte ptr [ebp - 0x71], 0
0x804a8e2:   90                              	nop 
0x804a8e3:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x804a8ea:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x804a8ee:   0f be 55 af                     	movsx edx, byte ptr [ebp - 0x51]
0x804a8f2:   0f be 5d b6                     	movsx ebx, byte ptr [ebp - 0x4a]
0x804a8f6:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804a8fa:   0f b7 75 be                     	movzx esi, word ptr [ebp - 0x42]
0x804a8fe:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804a904:   0f b6 4d c1                     	movzx ecx, byte ptr [ebp - 0x3f]
0x804a908:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804a90e:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804a912:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804a918:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804a91c:   89 8d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ecx
0x804a922:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804a926:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804a92c:   0f bf 4d 82                     	movsx ecx, word ptr [ebp - 0x7e]
0x804a930:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804a936:   0f b6 75 cd                     	movzx esi, byte ptr [ebp - 0x33]
0x804a93a:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804a940:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804a944:   89 8d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ecx
0x804a94a:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804a94e:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804a954:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x804a958:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804a95e:   0f bf 75 84                     	movsx esi, word ptr [ebp - 0x7c]
0x804a962:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804a968:   0f b7 4d e8                     	movzx ecx, word ptr [ebp - 0x18]
0x804a96c:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804a972:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804a976:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804a97a:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804a980:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a983:   50                              	push eax
0x804a984:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a987:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a98a:   52                              	push edx
0x804a98b:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a98e:   53                              	push ebx
0x804a98f:   57                              	push edi
0x804a990:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a993:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a999:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a99f:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a9a5:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a9ab:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804a9b1:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804a9b7:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a9ba:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804a9c0:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804a9c6:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a9c9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a9cc:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a9d2:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a9d5:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a9d8:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a9de:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a9e4:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a9ea:   56                              	push esi
0x804a9eb:   51                              	push ecx
0x804a9ec:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a9ef:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a9f2:   e8 2f ec ff ff                  	call 0x8049626 <set_var>
0x804a9f7:   83 c4 7c                        	add esp, 0x7c
0x804a9fa:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a9fe:   e9 90 01 00 00                  	jmp 0x804ab93 <func_1+0x1324>
0x804aa03:   90                              	nop 
0x804aa04:   eb 01                           	jmp 0x804aa07 <func_1+0x1198>
0x804aa06:   90                              	nop 
0x804aa07:   83 6d f0 03                     	sub dword ptr [ebp - 0x10], 3
0x804aa0b:   83 7d f0 f7                     	cmp dword ptr [ebp - 0x10], -9
0x804aa0f:   0f 8c 9a ef ff ff               	jl 0x80499af <func_1+0x140>
0x804aa15:   eb 04                           	jmp 0x804aa1b <func_1+0x11ac>
0x804aa17:   90                              	nop 
0x804aa18:   eb 01                           	jmp 0x804aa1b <func_1+0x11ac>
0x804aa1a:   90                              	nop 
0x804aa1b:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804aa21:   89 c2                           	mov edx, eax
0x804aa23:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x804aa27:   29 c2                           	sub edx, eax
0x804aa29:   89 d0                           	mov eax, edx
0x804aa2b:   c0 e8 03                        	shr al, 3
0x804aa2e:   0f b6 c0                        	movzx eax, al
0x804aa31:   89 85 64 ff ff ff               	mov dword ptr [ebp - 0x9c], eax
0x804aa37:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804aa3e:   0f 94 c0                        	sete al
0x804aa41:   0f b6 c0                        	movzx eax, al
0x804aa44:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804aa47:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804aa4a:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804aa50:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x804aa55:   0f 95 c0                        	setne al
0x804aa58:   0f b6 c0                        	movzx eax, al
0x804aa5b:   20 45 b6                        	and byte ptr [ebp - 0x4a], al
0x804aa5e:   0f be 45 b6                     	movsx eax, byte ptr [ebp - 0x4a]
0x804aa62:   89 85 5c ff ff ff               	mov dword ptr [ebp - 0xa4], eax
0x804aa68:   0f b6 45 eb                     	movzx eax, byte ptr [ebp - 0x15]
0x804aa6c:   39 85 5c ff ff ff               	cmp dword ptr [ebp - 0xa4], eax
0x804aa72:   0f 9c c0                        	setl al
0x804aa75:   0f b6 c0                        	movzx eax, al
0x804aa78:   66 89 85 5a ff ff ff            	mov word ptr [ebp - 0xa6], ax
0x804aa7f:   0f bf 45 80                     	movsx eax, word ptr [ebp - 0x80]
0x804aa83:   0f be 55 af                     	movsx edx, byte ptr [ebp - 0x51]
0x804aa87:   0f be 5d b6                     	movsx ebx, byte ptr [ebp - 0x4a]
0x804aa8b:   0f b6 7d b7                     	movzx edi, byte ptr [ebp - 0x49]
0x804aa8f:   0f b7 75 be                     	movzx esi, word ptr [ebp - 0x42]
0x804aa93:   89 b5 a0 fe ff ff               	mov dword ptr [ebp - 0x160], esi
0x804aa99:   0f b6 4d c1                     	movzx ecx, byte ptr [ebp - 0x3f]
0x804aa9d:   89 8d 9c fe ff ff               	mov dword ptr [ebp - 0x164], ecx
0x804aaa3:   0f b7 75 c2                     	movzx esi, word ptr [ebp - 0x3e]
0x804aaa7:   89 b5 98 fe ff ff               	mov dword ptr [ebp - 0x168], esi
0x804aaad:   0f b7 4d c4                     	movzx ecx, word ptr [ebp - 0x3c]
0x804aab1:   89 8d 94 fe ff ff               	mov dword ptr [ebp - 0x16c], ecx
0x804aab7:   0f b7 75 c6                     	movzx esi, word ptr [ebp - 0x3a]
0x804aabb:   89 b5 90 fe ff ff               	mov dword ptr [ebp - 0x170], esi
0x804aac1:   0f bf 4d 82                     	movsx ecx, word ptr [ebp - 0x7e]
0x804aac5:   89 8d 8c fe ff ff               	mov dword ptr [ebp - 0x174], ecx
0x804aacb:   0f b6 75 cd                     	movzx esi, byte ptr [ebp - 0x33]
0x804aacf:   89 b5 88 fe ff ff               	mov dword ptr [ebp - 0x178], esi
0x804aad5:   0f b7 4d ce                     	movzx ecx, word ptr [ebp - 0x32]
0x804aad9:   89 8d 84 fe ff ff               	mov dword ptr [ebp - 0x17c], ecx
0x804aadf:   0f be 75 db                     	movsx esi, byte ptr [ebp - 0x25]
0x804aae3:   89 b5 80 fe ff ff               	mov dword ptr [ebp - 0x180], esi
0x804aae9:   0f bf 4d e6                     	movsx ecx, word ptr [ebp - 0x1a]
0x804aaed:   89 8d 7c fe ff ff               	mov dword ptr [ebp - 0x184], ecx
0x804aaf3:   0f bf 75 84                     	movsx esi, word ptr [ebp - 0x7c]
0x804aaf7:   89 b5 78 fe ff ff               	mov dword ptr [ebp - 0x188], esi
0x804aafd:   0f b7 4d e8                     	movzx ecx, word ptr [ebp - 0x18]
0x804ab01:   89 8d 74 fe ff ff               	mov dword ptr [ebp - 0x18c], ecx
0x804ab07:   0f b6 75 87                     	movzx esi, byte ptr [ebp - 0x79]
0x804ab0b:   0f b6 4d eb                     	movzx ecx, byte ptr [ebp - 0x15]
0x804ab0f:   ff b5 7c ff ff ff               	push dword ptr [ebp - 0x84]
0x804ab15:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804ab18:   50                              	push eax
0x804ab19:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804ab1c:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804ab1f:   52                              	push edx
0x804ab20:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804ab23:   53                              	push ebx
0x804ab24:   57                              	push edi
0x804ab25:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ab28:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804ab2e:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804ab34:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804ab3a:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804ab40:   ff b5 90 fe ff ff               	push dword ptr [ebp - 0x170]
0x804ab46:   ff b5 8c fe ff ff               	push dword ptr [ebp - 0x174]
0x804ab4c:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ab4f:   ff b5 88 fe ff ff               	push dword ptr [ebp - 0x178]
0x804ab55:   ff b5 84 fe ff ff               	push dword ptr [ebp - 0x17c]
0x804ab5b:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ab5e:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ab61:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804ab67:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804ab6a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804ab6d:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804ab73:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804ab79:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804ab7f:   56                              	push esi
0x804ab80:   51                              	push ecx
0x804ab81:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ab84:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804ab87:   e8 9a ea ff ff                  	call 0x8049626 <set_var>
0x804ab8c:   83 c4 7c                        	add esp, 0x7c
0x804ab8f:   0f b6 45 b7                     	movzx eax, byte ptr [ebp - 0x49]
0x804ab93:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ab96:   5b                              	pop ebx
0x804ab97:   5e                              	pop esi
0x804ab98:   5f                              	pop edi
0x804ab99:   5d                              	pop ebp
0x804ab9a:   c3                              	ret 
; function: main at 0x804ab9b -- 0x804aff0
0x804ab9b:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ab9f:   83 e4 f0                        	and esp, 0xfffffff0
0x804aba2:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804aba5:   55                              	push ebp
0x804aba6:   89 e5                           	mov ebp, esp
0x804aba8:   53                              	push ebx
0x804aba9:   51                              	push ecx
0x804abaa:   83 ec 10                        	sub esp, 0x10
0x804abad:   e8 de d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abb2:   81 c3 4e 34 00 00               	add ebx, 0x344e
0x804abb8:   89 c8                           	mov eax, ecx
0x804abba:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804abc1:   83 38 02                        	cmp dword ptr [eax], 2
0x804abc4:   75 26                           	jne 0x804abec <main+0x51>
0x804abc6:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804abc9:   83 c0 04                        	add eax, 4
0x804abcc:   8b 00                           	mov eax, dword ptr [eax]
0x804abce:   83 ec 08                        	sub esp, 8
0x804abd1:   8d 93 dc d0 ff ff               	lea edx, [ebx - 0x2f24]
0x804abd7:   52                              	push edx
0x804abd8:   50                              	push eax
0x804abd9:   e8 22 d7 ff ff                  	call 0x8048300 <strcmp>
0x804abde:   83 c4 10                        	add esp, 0x10
0x804abe1:   85 c0                           	test eax, eax
0x804abe3:   75 07                           	jne 0x804abec <main+0x51>
0x804abe5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804abec:   e8 65 d8 ff ff                  	call 0x8048456 <platform_main_begin>
0x804abf1:   e8 75 e8 ff ff                  	call 0x804946b <crc32_gentab>
0x804abf6:   e8 74 ec ff ff                  	call 0x804986f <func_1>
0x804abfb:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ac01:   89 c2                           	mov edx, eax
0x804ac03:   83 ec 04                        	sub esp, 4
0x804ac06:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac09:   8d 83 de d0 ff ff               	lea eax, [ebx - 0x2f22]
0x804ac0f:   50                              	push eax
0x804ac10:   52                              	push edx
0x804ac11:   e8 61 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac16:   83 c4 10                        	add esp, 0x10
0x804ac19:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ac1f:   89 c2                           	mov edx, eax
0x804ac21:   83 ec 04                        	sub esp, 4
0x804ac24:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac27:   8d 83 e2 d0 ff ff               	lea eax, [ebx - 0x2f1e]
0x804ac2d:   50                              	push eax
0x804ac2e:   52                              	push edx
0x804ac2f:   e8 43 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac34:   83 c4 10                        	add esp, 0x10
0x804ac37:   0f b6 83 2c 00 00 00            	movzx eax, byte ptr [ebx + 0x2c]
0x804ac3e:   0f b6 c0                        	movzx eax, al
0x804ac41:   83 ec 04                        	sub esp, 4
0x804ac44:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac47:   8d 93 e6 d0 ff ff               	lea edx, [ebx - 0x2f1a]
0x804ac4d:   52                              	push edx
0x804ac4e:   50                              	push eax
0x804ac4f:   e8 23 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac54:   83 c4 10                        	add esp, 0x10
0x804ac57:   0f b6 83 2d 00 00 00            	movzx eax, byte ptr [ebx + 0x2d]
0x804ac5e:   0f b6 c0                        	movzx eax, al
0x804ac61:   83 ec 04                        	sub esp, 4
0x804ac64:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac67:   8d 93 eb d0 ff ff               	lea edx, [ebx - 0x2f15]
0x804ac6d:   52                              	push edx
0x804ac6e:   50                              	push eax
0x804ac6f:   e8 03 e9 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac74:   83 c4 10                        	add esp, 0x10
0x804ac77:   0f b7 83 2e 00 00 00            	movzx eax, word ptr [ebx + 0x2e]
0x804ac7e:   0f b7 c0                        	movzx eax, ax
0x804ac81:   83 ec 04                        	sub esp, 4
0x804ac84:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ac87:   8d 93 f0 d0 ff ff               	lea edx, [ebx - 0x2f10]
0x804ac8d:   52                              	push edx
0x804ac8e:   50                              	push eax
0x804ac8f:   e8 e3 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ac94:   83 c4 10                        	add esp, 0x10
0x804ac97:   0f b7 83 30 00 00 00            	movzx eax, word ptr [ebx + 0x30]
0x804ac9e:   98                              	cwde 
0x804ac9f:   83 ec 04                        	sub esp, 4
0x804aca2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aca5:   8d 93 f5 d0 ff ff               	lea edx, [ebx - 0x2f0b]
0x804acab:   52                              	push edx
0x804acac:   50                              	push eax
0x804acad:   e8 c5 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acb2:   83 c4 10                        	add esp, 0x10
0x804acb5:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804acbc:   98                              	cwde 
0x804acbd:   83 ec 04                        	sub esp, 4
0x804acc0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acc3:   8d 93 fa d0 ff ff               	lea edx, [ebx - 0x2f06]
0x804acc9:   52                              	push edx
0x804acca:   50                              	push eax
0x804accb:   e8 a7 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acd0:   83 c4 10                        	add esp, 0x10
0x804acd3:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804acd9:   83 ec 04                        	sub esp, 4
0x804acdc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acdf:   8d 93 ff d0 ff ff               	lea edx, [ebx - 0x2f01]
0x804ace5:   52                              	push edx
0x804ace6:   50                              	push eax
0x804ace7:   e8 8b e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acec:   83 c4 10                        	add esp, 0x10
0x804acef:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804acf5:   89 c2                           	mov edx, eax
0x804acf7:   83 ec 04                        	sub esp, 4
0x804acfa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acfd:   8d 83 04 d1 ff ff               	lea eax, [ebx - 0x2efc]
0x804ad03:   50                              	push eax
0x804ad04:   52                              	push edx
0x804ad05:   e8 6d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad0a:   83 c4 10                        	add esp, 0x10
0x804ad0d:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804ad14:   0f be c0                        	movsx eax, al
0x804ad17:   83 ec 04                        	sub esp, 4
0x804ad1a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad1d:   8d 93 09 d1 ff ff               	lea edx, [ebx - 0x2ef7]
0x804ad23:   52                              	push edx
0x804ad24:   50                              	push eax
0x804ad25:   e8 4d e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad2a:   83 c4 10                        	add esp, 0x10
0x804ad2d:   8b 83 a4 04 00 00               	mov eax, dword ptr [ebx + 0x4a4]
0x804ad33:   83 ec 04                        	sub esp, 4
0x804ad36:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad39:   8d 93 0e d1 ff ff               	lea edx, [ebx - 0x2ef2]
0x804ad3f:   52                              	push edx
0x804ad40:   50                              	push eax
0x804ad41:   e8 31 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad46:   83 c4 10                        	add esp, 0x10
0x804ad49:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804ad4f:   89 c2                           	mov edx, eax
0x804ad51:   83 ec 04                        	sub esp, 4
0x804ad54:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad57:   8d 83 13 d1 ff ff               	lea eax, [ebx - 0x2eed]
0x804ad5d:   50                              	push eax
0x804ad5e:   52                              	push edx
0x804ad5f:   e8 13 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad64:   83 c4 10                        	add esp, 0x10
0x804ad67:   0f b7 83 44 00 00 00            	movzx eax, word ptr [ebx + 0x44]
0x804ad6e:   0f b7 c0                        	movzx eax, ax
0x804ad71:   83 ec 04                        	sub esp, 4
0x804ad74:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad77:   8d 93 18 d1 ff ff               	lea edx, [ebx - 0x2ee8]
0x804ad7d:   52                              	push edx
0x804ad7e:   50                              	push eax
0x804ad7f:   e8 f3 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad84:   83 c4 10                        	add esp, 0x10
0x804ad87:   0f b6 83 46 00 00 00            	movzx eax, byte ptr [ebx + 0x46]
0x804ad8e:   0f b6 c0                        	movzx eax, al
0x804ad91:   83 ec 04                        	sub esp, 4
0x804ad94:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad97:   8d 93 1d d1 ff ff               	lea edx, [ebx - 0x2ee3]
0x804ad9d:   52                              	push edx
0x804ad9e:   50                              	push eax
0x804ad9f:   e8 d3 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ada4:   83 c4 10                        	add esp, 0x10
0x804ada7:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804adad:   83 ec 04                        	sub esp, 4
0x804adb0:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adb3:   8d 93 23 d1 ff ff               	lea edx, [ebx - 0x2edd]
0x804adb9:   52                              	push edx
0x804adba:   50                              	push eax
0x804adbb:   e8 b7 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adc0:   83 c4 10                        	add esp, 0x10
0x804adc3:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804adca:   98                              	cwde 
0x804adcb:   83 ec 04                        	sub esp, 4
0x804adce:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804add1:   8d 93 29 d1 ff ff               	lea edx, [ebx - 0x2ed7]
0x804add7:   52                              	push edx
0x804add8:   50                              	push eax
0x804add9:   e8 99 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adde:   83 c4 10                        	add esp, 0x10
0x804ade1:   0f b7 83 4e 00 00 00            	movzx eax, word ptr [ebx + 0x4e]
0x804ade8:   0f b7 c0                        	movzx eax, ax
0x804adeb:   83 ec 04                        	sub esp, 4
0x804adee:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adf1:   8d 93 2f d1 ff ff               	lea edx, [ebx - 0x2ed1]
0x804adf7:   52                              	push edx
0x804adf8:   50                              	push eax
0x804adf9:   e8 79 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adfe:   83 c4 10                        	add esp, 0x10
0x804ae01:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804ae08:   0f b7 c0                        	movzx eax, ax
0x804ae0b:   83 ec 04                        	sub esp, 4
0x804ae0e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae11:   8d 93 35 d1 ff ff               	lea edx, [ebx - 0x2ecb]
0x804ae17:   52                              	push edx
0x804ae18:   50                              	push eax
0x804ae19:   e8 59 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae1e:   83 c4 10                        	add esp, 0x10
0x804ae21:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804ae28:   0f b7 c0                        	movzx eax, ax
0x804ae2b:   83 ec 04                        	sub esp, 4
0x804ae2e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae31:   8d 93 3b d1 ff ff               	lea edx, [ebx - 0x2ec5]
0x804ae37:   52                              	push edx
0x804ae38:   50                              	push eax
0x804ae39:   e8 39 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae3e:   83 c4 10                        	add esp, 0x10
0x804ae41:   0f b6 83 54 00 00 00            	movzx eax, byte ptr [ebx + 0x54]
0x804ae48:   0f b6 c0                        	movzx eax, al
0x804ae4b:   83 ec 04                        	sub esp, 4
0x804ae4e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae51:   8d 93 41 d1 ff ff               	lea edx, [ebx - 0x2ebf]
0x804ae57:   52                              	push edx
0x804ae58:   50                              	push eax
0x804ae59:   e8 19 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae5e:   83 c4 10                        	add esp, 0x10
0x804ae61:   0f b7 83 a8 04 00 00            	movzx eax, word ptr [ebx + 0x4a8]
0x804ae68:   0f b7 c0                        	movzx eax, ax
0x804ae6b:   83 ec 04                        	sub esp, 4
0x804ae6e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae71:   8d 93 47 d1 ff ff               	lea edx, [ebx - 0x2eb9]
0x804ae77:   52                              	push edx
0x804ae78:   50                              	push eax
0x804ae79:   e8 f9 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae7e:   83 c4 10                        	add esp, 0x10
0x804ae81:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804ae87:   83 ec 04                        	sub esp, 4
0x804ae8a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae8d:   8d 93 4d d1 ff ff               	lea edx, [ebx - 0x2eb3]
0x804ae93:   52                              	push edx
0x804ae94:   50                              	push eax
0x804ae95:   e8 dd e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae9a:   83 c4 10                        	add esp, 0x10
0x804ae9d:   0f b6 83 5c 00 00 00            	movzx eax, byte ptr [ebx + 0x5c]
0x804aea4:   0f b6 c0                        	movzx eax, al
0x804aea7:   83 ec 04                        	sub esp, 4
0x804aeaa:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aead:   8d 93 53 d1 ff ff               	lea edx, [ebx - 0x2ead]
0x804aeb3:   52                              	push edx
0x804aeb4:   50                              	push eax
0x804aeb5:   e8 bd e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeba:   83 c4 10                        	add esp, 0x10
0x804aebd:   0f b6 83 5d 00 00 00            	movzx eax, byte ptr [ebx + 0x5d]
0x804aec4:   0f be c0                        	movsx eax, al
0x804aec7:   83 ec 04                        	sub esp, 4
0x804aeca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aecd:   8d 93 59 d1 ff ff               	lea edx, [ebx - 0x2ea7]
0x804aed3:   52                              	push edx
0x804aed4:   50                              	push eax
0x804aed5:   e8 9d e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeda:   83 c4 10                        	add esp, 0x10
0x804aedd:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804aee3:   89 c2                           	mov edx, eax
0x804aee5:   83 ec 04                        	sub esp, 4
0x804aee8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeeb:   8d 83 5f d1 ff ff               	lea eax, [ebx - 0x2ea1]
0x804aef1:   50                              	push eax
0x804aef2:   52                              	push edx
0x804aef3:   e8 7f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aef8:   83 c4 10                        	add esp, 0x10
0x804aefb:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804af02:   0f be c0                        	movsx eax, al
0x804af05:   83 ec 04                        	sub esp, 4
0x804af08:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0b:   8d 93 65 d1 ff ff               	lea edx, [ebx - 0x2e9b]
0x804af11:   52                              	push edx
0x804af12:   50                              	push eax
0x804af13:   e8 5f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af18:   83 c4 10                        	add esp, 0x10
0x804af1b:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804af21:   89 c2                           	mov edx, eax
0x804af23:   83 ec 04                        	sub esp, 4
0x804af26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af29:   8d 83 6b d1 ff ff               	lea eax, [ebx - 0x2e95]
0x804af2f:   50                              	push eax
0x804af30:   52                              	push edx
0x804af31:   e8 41 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af36:   83 c4 10                        	add esp, 0x10
0x804af39:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804af3f:   83 ec 04                        	sub esp, 4
0x804af42:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af45:   8d 93 71 d1 ff ff               	lea edx, [ebx - 0x2e8f]
0x804af4b:   52                              	push edx
0x804af4c:   50                              	push eax
0x804af4d:   e8 25 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af52:   83 c4 10                        	add esp, 0x10
0x804af55:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804af5c:   98                              	cwde 
0x804af5d:   83 ec 04                        	sub esp, 4
0x804af60:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af63:   8d 93 77 d1 ff ff               	lea edx, [ebx - 0x2e89]
0x804af69:   52                              	push edx
0x804af6a:   50                              	push eax
0x804af6b:   e8 07 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af70:   83 c4 10                        	add esp, 0x10
0x804af73:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804af79:   89 c2                           	mov edx, eax
0x804af7b:   83 ec 04                        	sub esp, 4
0x804af7e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af81:   8d 83 7d d1 ff ff               	lea eax, [ebx - 0x2e83]
0x804af87:   50                              	push eax
0x804af88:   52                              	push edx
0x804af89:   e8 e9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af8e:   83 c4 10                        	add esp, 0x10
0x804af91:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804af97:   83 ec 04                        	sub esp, 4
0x804af9a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af9d:   8d 93 83 d1 ff ff               	lea edx, [ebx - 0x2e7d]
0x804afa3:   52                              	push edx
0x804afa4:   50                              	push eax
0x804afa5:   e8 cd e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afaa:   83 c4 10                        	add esp, 0x10
0x804afad:   b8 01 00 00 00                  	mov eax, 1
0x804afb2:   89 c2                           	mov edx, eax
0x804afb4:   83 ec 04                        	sub esp, 4
0x804afb7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afba:   8d 83 89 d1 ff ff               	lea eax, [ebx - 0x2e77]
0x804afc0:   50                              	push eax
0x804afc1:   52                              	push edx
0x804afc2:   e8 b0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afc7:   83 c4 10                        	add esp, 0x10
0x804afca:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804afd0:   f7 d0                           	not eax
0x804afd2:   83 ec 08                        	sub esp, 8
0x804afd5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afd8:   50                              	push eax
0x804afd9:   e8 88 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804afde:   83 c4 10                        	add esp, 0x10
0x804afe1:   b8 00 00 00 00                  	mov eax, 0
0x804afe6:   8d 65 f8                        	lea esp, [ebp - 8]
0x804afe9:   59                              	pop ecx
0x804afea:   5b                              	pop ebx
0x804afeb:   5d                              	pop ebp
0x804afec:   8d 61 fc                        	lea esp, [ecx - 4]
0x804afef:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aff0 -- 0x804aff4
0x804aff0:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aff3:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aff4 -- 0x804aff8
0x804aff4:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aff7:   c3                              	ret 
; data inside code section at 0x804aff8 -- 0x804b000
0x804aff8:   66 90 66 90 66 90 66 90                            |f.f.f.f.        |
; function: __libc_csu_init at 0x804b000 -- 0x804b05d
0x804b000:   55                              	push ebp
0x804b001:   57                              	push edi
0x804b002:   56                              	push esi
0x804b003:   53                              	push ebx
0x804b004:   e8 87 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b009:   81 c3 f7 2f 00 00               	add ebx, 0x2ff7
0x804b00f:   83 ec 0c                        	sub esp, 0xc
0x804b012:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b016:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b01c:   e8 ab d2 ff ff                  	call 0x80482cc <_init>
0x804b021:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b027:   29 c6                           	sub esi, eax
0x804b029:   c1 fe 02                        	sar esi, 2
0x804b02c:   85 f6                           	test esi, esi
0x804b02e:   74 25                           	je 0x804b055 <__libc_csu_init+0x55>
0x804b030:   31 ff                           	xor edi, edi
0x804b032:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b038:   83 ec 04                        	sub esp, 4
0x804b03b:   55                              	push ebp
0x804b03c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b040:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b044:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b04b:   83 c7 01                        	add edi, 1
0x804b04e:   83 c4 10                        	add esp, 0x10
0x804b051:   39 fe                           	cmp esi, edi
0x804b053:   75 e3                           	jne 0x804b038 <__libc_csu_init+0x38>
0x804b055:   83 c4 0c                        	add esp, 0xc
0x804b058:   5b                              	pop ebx
0x804b059:   5e                              	pop esi
0x804b05a:   5f                              	pop edi
0x804b05b:   5d                              	pop ebp
0x804b05c:   c3                              	ret 
; data inside code section at 0x804b05d -- 0x804b060
0x804b05d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b060 -- 0x804b062
0x804b060:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b064 -- 0x804b078
0x804b064:   53                              	push ebx
0x804b065:   83 ec 08                        	sub esp, 8
0x804b068:   e8 23 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b06d:   81 c3 93 2f 00 00               	add ebx, 0x2f93
0x804b073:   83 c4 08                        	add esp, 8
0x804b076:   5b                              	pop ebx
0x804b077:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c b0 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b078:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b088:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b098:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b0a8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0b8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0c8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0d8:   01 00 00 00 31 00 67 5f  32 00 67 5f 39 00 67 5f   |....1.g_2.g_9.g_|
0x804b0e8:   32 32 00 67 5f 34 33 00  67 5f 34 36 00 67 5f 35   |22.g_43.g_46.g_5|
0x804b0f8:   30 00 67 5f 35 31 00 67  5f 35 32 00 67 5f 35 33   |0.g_51.g_52.g_53|
0x804b108:   00 67 5f 38 32 00 67 5f  39 33 00 67 5f 39 36 00   |.g_82.g_93.g_96.|
0x804b118:   67 5f 39 39 00 67 5f 31  34 32 00 67 5f 31 34 33   |g_99.g_142.g_143|
0x804b128:   00 67 5f 31 36 35 00 67  5f 31 36 36 00 67 5f 31   |.g_165.g_166.g_1|
0x804b138:   38 36 00 67 5f 31 39 31  00 67 5f 31 39 39 00 67   |86.g_191.g_199.g|
0x804b148:   5f 32 32 31 00 67 5f 32  32 32 00 67 5f 32 32 39   |_221.g_222.g_229|
0x804b158:   00 67 5f 32 33 38 00 67  5f 32 33 39 00 67 5f 32   |.g_238.g_239.g_2|
0x804b168:   36 37 00 67 5f 32 36 38  00 67 5f 32 36 39 00 67   |67.g_268.g_269.g|
0x804b178:   5f 33 30 30 00 67 5f 33  30 34 00 67 5f 33 31 32   |_300.g_304.g_312|
0x804b188:   00 67 5f 33 37 32 00 00  00 00 00 3f ff ff ff 7e   |.g_372.....?...~|
0x804b198:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x804b1a8:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x804b1b8:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x804b1c8:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x804b1d8:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x804b1e8:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x804b1f8:   01                                                 |.               |
; section: .eh_frame_hdr
0x804b1f8:   01 1b 03 3b b8 02 00 00  56 00 00 00 f8 d0 ff ff   |...;....V.......|
0x804b208:   e8 02 00 00 38 d1 ff ff  0c 03 00 00 88 d1 ff ff   |....8...........|
0x804b218:   d4 02 00 00 5e d2 ff ff  20 03 00 00 6e d2 ff ff   |....^... ...n...|
0x804b228:   40 03 00 00 9c d2 ff ff  64 03 00 00 ba d2 ff ff   |@.......d.......|
0x804b238:   84 03 00 00 e2 d2 ff ff  a4 03 00 00 0c d3 ff ff   |................|
0x804b248:   c4 03 00 00 35 d3 ff ff  e4 03 00 00 78 d3 ff ff   |....5.......x...|
0x804b258:   04 04 00 00 b9 d3 ff ff  24 04 00 00 11 d4 ff ff   |........$.......|
0x804b268:   48 04 00 00 63 d4 ff ff  6c 04 00 00 a0 d4 ff ff   |H...c...l.......|
0x804b278:   8c 04 00 00 d7 d4 ff ff  ac 04 00 00 f6 d4 ff ff   |................|
0x804b288:   cc 04 00 00 20 d5 ff ff  ec 04 00 00 4c d5 ff ff   |.... .......L...|
0x804b298:   0c 05 00 00 77 d5 ff ff  2c 05 00 00 c0 d5 ff ff   |....w...,.......|
0x804b2a8:   4c 05 00 00 07 d6 ff ff  6c 05 00 00 61 d6 ff ff   |L.......l...a...|
0x804b2b8:   90 05 00 00 b5 d6 ff ff  b4 05 00 00 f4 d6 ff ff   |................|
0x804b2c8:   d4 05 00 00 2d d7 ff ff  f4 05 00 00 4f d7 ff ff   |....-.......O...|
0x804b2d8:   14 06 00 00 9d d7 ff ff  34 06 00 00 d9 d7 ff ff   |........4.......|
0x804b2e8:   54 06 00 00 62 d8 ff ff  74 06 00 00 94 d8 ff ff   |T...b...t.......|
0x804b2f8:   94 06 00 00 c4 d8 ff ff  b4 06 00 00 09 d9 ff ff   |................|
0x804b308:   d4 06 00 00 48 d9 ff ff  f4 06 00 00 7a d9 ff ff   |....H.......z...|
0x804b318:   14 07 00 00 a6 d9 ff ff  34 07 00 00 c4 d9 ff ff   |........4.......|
0x804b328:   54 07 00 00 ec d9 ff ff  74 07 00 00 11 da ff ff   |T.......t.......|
0x804b338:   94 07 00 00 36 da ff ff  b4 07 00 00 6d da ff ff   |....6.......m...|
0x804b348:   d4 07 00 00 a1 da ff ff  f4 07 00 00 f3 da ff ff   |................|
0x804b358:   18 08 00 00 3f db ff ff  3c 08 00 00 76 db ff ff   |....?...<...v...|
0x804b368:   5c 08 00 00 a7 db ff ff  7c 08 00 00 c6 db ff ff   |\.......|.......|
0x804b378:   9c 08 00 00 f0 db ff ff  bc 08 00 00 18 dc ff ff   |................|
0x804b388:   dc 08 00 00 41 dc ff ff  fc 08 00 00 7d dc ff ff   |....A.......}...|
0x804b398:   1c 09 00 00 b7 dc ff ff  3c 09 00 00 0a dd ff ff   |........<.......|
0x804b3a8:   60 09 00 00 57 dd ff ff  84 09 00 00 8f dd ff ff   |`...W...........|
0x804b3b8:   a4 09 00 00 c1 dd ff ff  c4 09 00 00 d5 dd ff ff   |................|
0x804b3c8:   e4 09 00 00 ec dd ff ff  04 0a 00 00 01 de ff ff   |................|
0x804b3d8:   24 0a 00 00 17 de ff ff  44 0a 00 00 3e de ff ff   |$.......D...>...|
0x804b3e8:   64 0a 00 00 63 de ff ff  84 0a 00 00 a2 de ff ff   |d...c...........|
0x804b3f8:   a4 0a 00 00 db de ff ff  c4 0a 00 00 07 df ff ff   |................|
0x804b408:   e4 0a 00 00 2d df ff ff  04 0b 00 00 6f df ff ff   |....-.......o...|
0x804b418:   24 0b 00 00 b1 df ff ff  44 0b 00 00 f3 df ff ff   |$.......D.......|
0x804b428:   64 0b 00 00 68 e0 ff ff  84 0b 00 00 c5 e0 ff ff   |d...h...........|
0x804b438:   a4 0b 00 00 22 e1 ff ff  c4 0b 00 00 7f e1 ff ff   |...."...........|
0x804b448:   e4 0b 00 00 0f e2 ff ff  04 0c 00 00 73 e2 ff ff   |............s...|
0x804b458:   24 0c 00 00 e3 e2 ff ff  44 0c 00 00 2a e3 ff ff   |$.......D...*...|
0x804b468:   68 0c 00 00 7f e3 ff ff  88 0c 00 00 c6 e3 ff ff   |h...............|
0x804b478:   ac 0c 00 00 2e e4 ff ff  d0 0c 00 00 77 e6 ff ff   |............w...|
0x804b488:   00 0d 00 00 a3 f9 ff ff  30 0d 00 00 f8 fd ff ff   |........0.......|
0x804b498:   68 0d 00 00 fc fd ff ff  7c 0d 00 00 08 fe ff ff   |h.......|.......|
0x804b4a8:   90 0d 00 00 68 fe ff ff  dc 0d 00 00 14            |....h........   |
; section: .eh_frame
0x804b4b4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b4c4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b4d4:   ac ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b4e4:   30 00 00 00 08 ce ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b4f4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b504:   10 00 00 00 54 00 00 00  24 ce ff ff 08 00 00 00   |....T...$.......|
0x804b514:   00 00 00 00 1c 00 00 00  68 00 00 00 36 cf ff ff   |........h...6...|
0x804b524:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b534:   04 04 00 00 20 00 00 00  88 00 00 00 26 cf ff ff   |.... .......&...|
0x804b544:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b554:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b564:   30 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |0........A....B.|
0x804b574:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b584:   2e cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b594:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b5a4:   36 cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |6...*....A....B.|
0x804b5b4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b5c4:   40 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |@...)....A....B.|
0x804b5d4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b5e4:   49 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |I...C....A....B.|
0x804b5f4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b604:   6c cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |l...A....A....B.|
0x804b614:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b624:   8d cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b634:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b644:   90 01 00 00 c1 cf ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b654:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b664:   1c 00 00 00 b4 01 00 00  ef cf ff ff 3d 00 00 00   |............=...|
0x804b674:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b684:   1c 00 00 00 d4 01 00 00  0c d0 ff ff 37 00 00 00   |............7...|
0x804b694:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b6a4:   1c 00 00 00 f4 01 00 00  23 d0 ff ff 1f 00 00 00   |........#.......|
0x804b6b4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b6c4:   1c 00 00 00 14 02 00 00  22 d0 ff ff 2a 00 00 00   |........"...*...|
0x804b6d4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6e4:   1c 00 00 00 34 02 00 00  2c d0 ff ff 2c 00 00 00   |....4...,...,...|
0x804b6f4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b704:   1c 00 00 00 54 02 00 00  38 d0 ff ff 2b 00 00 00   |....T...8...+...|
0x804b714:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b724:   1c 00 00 00 74 02 00 00  43 d0 ff ff 49 00 00 00   |....t...C...I...|
0x804b734:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b744:   1c 00 00 00 94 02 00 00  6c d0 ff ff 47 00 00 00   |........l...G...|
0x804b754:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b764:   20 00 00 00 b4 02 00 00  93 d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b774:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b784:   c5 0c 04 04 20 00 00 00  d8 02 00 00 c9 d0 ff ff   |.... ...........|
0x804b794:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b7a4:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b7b4:   f9 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7c4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b7d4:   18 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7e4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b7f4:   31 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |1..."....A....B.|
0x804b804:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b814:   33 d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |3...N....A....B.|
0x804b824:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b834:   61 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |a...<....A....B.|
0x804b844:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b854:   7d d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |}........A....B.|
0x804b864:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b874:   e6 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b884:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b894:   f8 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b8a4:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b8b4:   08 d2 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b8c4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b8d4:   2d d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |-...?....A....B.|
0x804b8e4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b8f4:   4c d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |L...2....A....B.|
0x804b904:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b914:   5e d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |^...,....A....B.|
0x804b924:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b934:   6a d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |j........A....B.|
0x804b944:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b954:   68 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |h...(....A....B.|
0x804b964:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b974:   70 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |p...%....A....B.|
0x804b984:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b994:   75 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |u...%....A....B.|
0x804b9a4:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b9b4:   7a d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |z...7....A....B.|
0x804b9c4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b9d4:   91 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b9e4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b9f4:   a5 d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804ba04:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ba14:   60 05 00 00 d3 d2 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ba24:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ba34:   1c 00 00 00 84 05 00 00  fb d2 ff ff 37 00 00 00   |............7...|
0x804ba44:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba54:   1c 00 00 00 a4 05 00 00  12 d3 ff ff 31 00 00 00   |............1...|
0x804ba64:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba74:   1c 00 00 00 c4 05 00 00  23 d3 ff ff 1f 00 00 00   |........#.......|
0x804ba84:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba94:   1c 00 00 00 e4 05 00 00  22 d3 ff ff 2a 00 00 00   |........"...*...|
0x804baa4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bab4:   1c 00 00 00 04 06 00 00  2c d3 ff ff 28 00 00 00   |........,...(...|
0x804bac4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bad4:   1c 00 00 00 24 06 00 00  34 d3 ff ff 29 00 00 00   |....$...4...)...|
0x804bae4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804baf4:   1c 00 00 00 44 06 00 00  3d d3 ff ff 3c 00 00 00   |....D...=...<...|
0x804bb04:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bb14:   1c 00 00 00 64 06 00 00  59 d3 ff ff 3a 00 00 00   |....d...Y...:...|
0x804bb24:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bb34:   20 00 00 00 84 06 00 00  73 d3 ff ff 53 00 00 00   | .......s...S...|
0x804bb44:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb54:   c5 0c 04 04 20 00 00 00  a8 06 00 00 a2 d3 ff ff   |.... ...........|
0x804bb64:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb74:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb84:   cb d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bb94:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bba4:   e3 d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bbb4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bbc4:   f5 d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbd4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bbe4:   e9 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbf4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bc04:   e0 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc14:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bc24:   d5 d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bc34:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bc44:   cb d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc54:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bc64:   d2 d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc74:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc84:   d7 d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bc94:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bca4:   f6 d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bcb4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bcc4:   0f d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bcd4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bce4:   1b d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804bcf4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bd04:   21 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |!...B....A....B.|
0x804bd14:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bd24:   43 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |C...B....A....B.|
0x804bd34:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bd44:   65 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |e...B....A....B.|
0x804bd54:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bd64:   87 d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bd74:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd84:   dc d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd94:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bda4:   19 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bdb4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bdc4:   56 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |V...]....A....B.|
0x804bdd4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bde4:   93 d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdf4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804be04:   03 d6 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804be14:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804be24:   47 d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |G...p....A....B.|
0x804be34:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804be44:   97 d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804be54:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804be64:   b0 09 00 00 ba d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804be74:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be84:   d0 09 00 00 ef d6 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804be94:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bea4:   20 00 00 00 f4 09 00 00  12 d7 ff ff 68 00 00 00   | ...........h...|
0x804beb4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bec4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 56 d7 ff ff   |....,.......V...|
0x804bed4:   49 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |I....A....B..F..|
0x804bee4:   86 04 83 05 03 3c 02 c3  41 c6 41 c7 41 c5 0c 04   |.....<..A.A.A...|
0x804bef4:   04 00 00 00 2c 00 00 00  48 0a 00 00 6f d9 ff ff   |....,...H...o...|
0x804bf04:   2c 13 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |,....A....B..I..|
0x804bf14:   86 04 83 05 03 1c 13 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bf24:   04 00 00 00 34 00 00 00  78 0a 00 00 6b ec ff ff   |....4...x...k...|
0x804bf34:   55 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |U....D...G...u.D|
0x804bf44:   0f 03 75 78 06 10 03 02  75 7c 03 40 04 c1 0c 01   |..ux....u|.@....|
0x804bf54:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bf64:   b0 0a 00 00 88 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bf74:   10 00 00 00 c4 0a 00 00  78 f0 ff ff 04 00 00 00   |........x.......|
0x804bf84:   00 00 00 00 48 00 00 00  d8 0a 00 00 70 f0 ff ff   |....H.......p...|
0x804bf94:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bfa4:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bfb4:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bfc4:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bfd4:   10 00 00 00 24 0b 00 00  84 f0 ff ff 02 00 00 00   |....$...........|
0x804bfe4:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 64 b0 04 08  19 00 00 00 0c df 04 08   |....d...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804e028:   85 d5 49 5b d5 6c 03 00  01 00 71 d7 46 54 fc be   |..I[.l....q.FT..|
0x804e038:   01 00 00 00 f9 00 00 00  01 c8 d3 8b fc ff f8 00   |................|
0x804e048:   62 3b b8 e5 ff ff 01 00  15 e5 ff ff d8 00 00 00   |b;..............|
0x804e058:   f9 ff ff ff 03 7b 00 00  f6 ff ff ff c5 00 00 00   |.....{..........|
0x804e068:   9b 14 ee 36 33 3d ef 49  43 a0 00 00 de fa 01 2d   |...63=.IC......-|
0x804e078:   5b d1 dc b2 ??                                     |[...?           |
