;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:58:39
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 70 da ff ff               	lea eax, [ebx - 0x2590]
0x804835c:   50                              	push eax
0x804835d:   8d 83 10 da ff ff               	lea eax, [ebx - 0x25f0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 37 a7 04 08               	mov eax, 0x804a737
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 5c d0 04 08                  	mov eax, 0x804d05c
0x80483a5:   3d 5c d0 04 08                  	cmp eax, 0x804d05c
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 5c d0 04 08                  	push 0x804d05c
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 5c d0 04 08                  	mov eax, 0x804d05c
0x80483e5:   2d 5c d0 04 08                  	sub eax, 0x804d05c
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 5c d0 04 08                  	push 0x804d05c
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 a1 25 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 8d 25 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 da ff ff               	lea edx, [eax - 0x2570]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 60 25 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 42 25 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 1a 25 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 f0 24 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 c7 24 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 84 24 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 42 24 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ea 23 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 99 23 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 5c 23 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 25 23 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 06 23 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 dc 22 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 b0 22 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 85 22 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 3c 22 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 f4 21 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 9a 21 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 47 21 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 08 21 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 d2 20 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 b0 20 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 62 20 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 26 20 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 9d 1f 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 6b 1f 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 3b 1f 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 f6 1e 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 b7 1e 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 85 1e 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 56 1e 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 38 1e 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 10 1e 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 eb 1d 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 c6 1d 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 8f 1d 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 5a 1d 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 08 1d 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 bd 1c 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 86 1c 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 55 1c 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 36 1c 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 0c 1c 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 e4 1b 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 bb 1b 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 7f 1b 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 44 1b 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 f1 1a 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 a5 1a 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 6d 1a 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 3e 1a 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 2a 1a 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 13 1a 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 fe 19 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 e8 19 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 c1 19 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 9c 19 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 5d 19 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 24 19 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 f8 18 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 d2 18 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 58 db ff ff               	fld dword ptr [eax - 0x24a8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 58 db ff ff               	fld dword ptr [eax - 0x24a8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 5c db ff ff               	fld dword ptr [eax - 0x24a4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 90 18 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 58 db ff ff               	fld dword ptr [eax - 0x24a8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 58 db ff ff               	fld dword ptr [eax - 0x24a8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 5c db ff ff               	fld dword ptr [eax - 0x24a4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 4e 18 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 60 db ff ff               	fld dword ptr [eax - 0x24a0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 64 db ff ff               	fld dword ptr [eax - 0x249c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 68 db ff ff               	fld dword ptr [eax - 0x2498]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 0c 18 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 6c db ff ff               	fld dword ptr [eax - 0x2494]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 70 db ff ff               	fld dword ptr [eax - 0x2490]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 74 db ff ff               	fld dword ptr [eax - 0x248c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 94 17 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 78 db ff ff               	fld qword ptr [eax - 0x2488]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 78 db ff ff               	fld qword ptr [eax - 0x2488]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 80 db ff ff               	fld qword ptr [eax - 0x2480]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 37 17 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 78 db ff ff               	fld qword ptr [eax - 0x2488]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 78 db ff ff               	fld qword ptr [eax - 0x2488]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 80 db ff ff               	fld qword ptr [eax - 0x2480]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 da 16 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 88 db ff ff               	fld qword ptr [eax - 0x2478]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 90 db ff ff               	fld qword ptr [eax - 0x2470]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 98 db ff ff               	fld qword ptr [eax - 0x2468]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 7d 16 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 a0 db ff ff               	fld qword ptr [eax - 0x2460]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a8 db ff ff               	fld qword ptr [eax - 0x2458]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 b0 db ff ff               	fld qword ptr [eax - 0x2450]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 ed 15 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b8 db ff ff               	fld dword ptr [eax - 0x2448]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 bc db ff ff               	fld dword ptr [eax - 0x2444]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 89 15 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 18 15 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 d5 14 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 da ff ff               	lea eax, [ebx - 0x2560]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 da ff ff               	lea eax, [ebx - 0x253c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: packed_printf at 0x8049626 -- 0x8049654
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   53                              	push ebx
0x804962a:   83 ec 04                        	sub esp, 4
0x804962d:   e8 cd 13 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x8049632:   05 ce 39 00 00                  	add eax, 0x39ce
0x8049637:   83 ec 08                        	sub esp, 8
0x804963a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804963d:   8d 90 e8 da ff ff               	lea edx, [eax - 0x2518]
0x8049643:   52                              	push edx
0x8049644:   89 c3                           	mov ebx, eax
0x8049646:   e8 c5 ec ff ff                  	call 0x8048310 <printf>
0x804964b:   83 c4 10                        	add esp, 0x10
0x804964e:   90                              	nop 
0x804964f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049652:   c9                              	leave 
0x8049653:   c3                              	ret 
; function: set_var at 0x8049654 -- 0x804979d
0x8049654:   55                              	push ebp
0x8049655:   89 e5                           	mov ebp, esp
0x8049657:   57                              	push edi
0x8049658:   56                              	push esi
0x8049659:   53                              	push ebx
0x804965a:   83 ec 3c                        	sub esp, 0x3c
0x804965d:   e8 a1 13 00 00                  	call 0x804aa03 <__x86.get_pc_thunk.dx>
0x8049662:   81 c2 9e 39 00 00               	add edx, 0x399e
0x8049668:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804966b:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x804966e:   8b 5d 10                        	mov ebx, dword ptr [ebp + 0x10]
0x8049671:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049674:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049677:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804967a:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804967d:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x8049680:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049683:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x8049686:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049689:   8b 75 44                        	mov esi, dword ptr [ebp + 0x44]
0x804968c:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x804968f:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049692:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x8049695:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049698:   89 c8                           	mov eax, ecx
0x804969a:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x804969e:   89 d8                           	mov eax, ebx
0x80496a0:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x80496a4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80496a8:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496ab:   0f b6 45 c4                     	movzx eax, byte ptr [ebp - 0x3c]
0x80496af:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496b2:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80496b6:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496ba:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x80496be:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c2:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x80496c6:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496c9:   89 f8                           	mov eax, edi
0x80496cb:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496cf:   89 f0                           	mov eax, esi
0x80496d1:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496d5:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496d9:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496df:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496e3:   66 89 82 26 00 00 00            	mov word ptr [edx + 0x26], ax
0x80496ea:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x80496ee:   66 89 82 28 00 00 00            	mov word ptr [edx + 0x28], ax
0x80496f5:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x80496f8:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496fe:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049701:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049707:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x804970a:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x8049710:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049713:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x8049719:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804971c:   89 82 88 04 00 00               	mov dword ptr [edx + 0x488], eax
0x8049722:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x8049726:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x804972c:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049730:   88 82 39 00 00 00               	mov byte ptr [edx + 0x39], al
0x8049736:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049739:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x804973f:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049743:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804974a:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804974d:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049753:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x8049757:   66 89 82 48 00 00 00            	mov word ptr [edx + 0x48], ax
0x804975e:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049761:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x8049767:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804976b:   88 82 50 00 00 00               	mov byte ptr [edx + 0x50], al
0x8049771:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049775:   66 89 82 52 00 00 00            	mov word ptr [edx + 0x52], ax
0x804977c:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804977f:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049785:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x8049789:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x8049790:   b8 00 00 00 00                  	mov eax, 0
0x8049795:   83 c4 3c                        	add esp, 0x3c
0x8049798:   5b                              	pop ebx
0x8049799:   5e                              	pop esi
0x804979a:   5f                              	pop edi
0x804979b:   5d                              	pop ebp
0x804979c:   c3                              	ret 
; function: func_1 at 0x804979d -- 0x804a737
0x804979d:   55                              	push ebp
0x804979e:   89 e5                           	mov ebp, esp
0x80497a0:   57                              	push edi
0x80497a1:   56                              	push esi
0x80497a2:   53                              	push ebx
0x80497a3:   81 ec 20 01 00 00               	sub esp, 0x120
0x80497a9:   e8 51 12 00 00                  	call 0x804a9ff <__x86.get_pc_thunk.ax>
0x80497ae:   05 52 38 00 00                  	add eax, 0x3852
0x80497b3:   c6 45 a5 ff                     	mov byte ptr [ebp - 0x5b], 0xff
0x80497b7:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x80497bd:   66 c7 45 a2 f9 ff               	mov word ptr [ebp - 0x5e], 0xfff9
0x80497c3:   c7 45 ec ff ff ff ff            	mov dword ptr [ebp - 0x14], 0xffffffff
0x80497ca:   c7 45 e8 01 00 00 00            	mov dword ptr [ebp - 0x18], 1
0x80497d1:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x80497d8:   c7 45 e0 c4 ff 5f 50            	mov dword ptr [ebp - 0x20], 0x505fffc4
0x80497df:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x80497e6:   c6 45 db e9                     	mov byte ptr [ebp - 0x25], 0xe9
0x80497ea:   c6 45 da fc                     	mov byte ptr [ebp - 0x26], 0xfc
0x80497ee:   c7 45 9c ff ff ff ff            	mov dword ptr [ebp - 0x64], 0xffffffff
0x80497f5:   66 c7 45 9a d9 6c               	mov word ptr [ebp - 0x66], 0x6cd9
0x80497fb:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x8049802:   66 c7 45 98 4c ad               	mov word ptr [ebp - 0x68], 0xad4c
0x8049808:   c7 45 94 e2 e2 87 5c            	mov dword ptr [ebp - 0x6c], 0x5c87e2e2
0x804980f:   c6 45 d3 01                     	mov byte ptr [ebp - 0x2d], 1
0x8049813:   66 c7 45 92 ff ff               	mov word ptr [ebp - 0x6e], 0xffff
0x8049819:   c7 45 cc 01 00 00 00            	mov dword ptr [ebp - 0x34], 1
0x8049820:   66 c7 45 90 78 6a               	mov word ptr [ebp - 0x70], 0x6a78
0x8049826:   c7 45 c8 fc ff ff ff            	mov dword ptr [ebp - 0x38], 0xfffffffc
0x804982d:   66 c7 45 c6 84 01               	mov word ptr [ebp - 0x3a], 0x184
0x8049833:   c7 45 8c ff ff ff ff            	mov dword ptr [ebp - 0x74], 0xffffffff
0x804983a:   66 c7 45 c4 fc ff               	mov word ptr [ebp - 0x3c], 0xfffc
0x8049840:   c7 45 88 ff ff ff ff            	mov dword ptr [ebp - 0x78], 0xffffffff
0x8049847:   66 c7 45 86 ff ff               	mov word ptr [ebp - 0x7a], 0xffff
0x804984d:   c6 45 85 b1                     	mov byte ptr [ebp - 0x7b], 0xb1
0x8049851:   c7 45 c0 11 c8 65 e9            	mov dword ptr [ebp - 0x40], 0xe965c811
0x8049858:   c6 45 84 c5                     	mov byte ptr [ebp - 0x7c], 0xc5
0x804985c:   0f b7 4d f2                     	movzx ecx, word ptr [ebp - 0xe]
0x8049860:   83 f9 fe                        	cmp ecx, -2
0x8049863:   0f 93 c0                        	setae al
0x8049866:   0f b6 d0                        	movzx edx, al
0x8049869:   b8 00 00 00 00                  	mov eax, 0
0x804986e:   29 d0                           	sub eax, edx
0x8049870:   01 c0                           	add eax, eax
0x8049872:   29 c1                           	sub ecx, eax
0x8049874:   89 ca                           	mov edx, ecx
0x8049876:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049879:   66 89 45 a2                     	mov word ptr [ebp - 0x5e], ax
0x804987d:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049882:   79 0e                           	jns 0x8049892 <func_1+0xf5>
0x8049884:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049889:   74 07                           	je 0x8049892 <func_1+0xf5>
0x804988b:   b9 01 00 00 00                  	mov ecx, 1
0x8049890:   eb 05                           	jmp 0x8049897 <func_1+0xfa>
0x8049892:   b9 00 00 00 00                  	mov ecx, 0
0x8049897:   0f bf 45 c6                     	movsx eax, word ptr [ebp - 0x3a]
0x804989b:   39 c1                           	cmp ecx, eax
0x804989d:   0f 95 c0                        	setne al
0x80498a0:   0f b6 c0                        	movzx eax, al
0x80498a3:   39 c2                           	cmp edx, eax
0x80498a5:   66 83 7d c4 00                  	cmp word ptr [ebp - 0x3c], 0
0x80498aa:   75 07                           	jne 0x80498b3 <func_1+0x116>
0x80498ac:   66 83 7d c4 00                  	cmp word ptr [ebp - 0x3c], 0
0x80498b1:   74 07                           	je 0x80498ba <func_1+0x11d>
0x80498b3:   b8 01 00 00 00                  	mov eax, 1
0x80498b8:   eb 05                           	jmp 0x80498bf <func_1+0x122>
0x80498ba:   b8 00 00 00 00                  	mov eax, 0
0x80498bf:   85 c0                           	test eax, eax
0x80498c1:   66 83 7d c6 00                  	cmp word ptr [ebp - 0x3a], 0
0x80498c6:   0f 84 50 02 00 00               	je 0x8049b1c <func_1+0x37f>
0x80498cc:   c6 45 bf ff                     	mov byte ptr [ebp - 0x41], 0xff
0x80498d0:   c7 85 00 ff ff ff 7f 3d 09 2f   	mov dword ptr [ebp - 0x100], 0x2f093d7f
0x80498da:   66 c7 45 c4 18 00               	mov word ptr [ebp - 0x3c], 0x18
0x80498e0:   e9 27 02 00 00                  	jmp 0x8049b0c <func_1+0x36f>
0x80498e5:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x80498ef:   66 c7 85 fa fe ff ff 05 00      	mov word ptr [ebp - 0x106], 5
0x80498f8:   c6 85 f9 fe ff ff 82            	mov byte ptr [ebp - 0x107], 0x82
0x80498ff:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x8049909:   c7 85 f0 fe ff ff b5 4d 9b 92   	mov dword ptr [ebp - 0x110], 0x929b4db5
0x8049913:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x8049918:   0f 84 8a 00 00 00               	je 0x80499a8 <func_1+0x20b>
0x804991e:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x8049922:   0f b7 4d 92                     	movzx ecx, word ptr [ebp - 0x6e]
0x8049926:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804992a:   0f bf 7d 98                     	movsx edi, word ptr [ebp - 0x68]
0x804992e:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049934:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x8049938:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804993e:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x8049942:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x8049948:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804994c:   89 bd d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edi
0x8049952:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x8049956:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804995a:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x804995e:   50                              	push eax
0x804995f:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049962:   51                              	push ecx
0x8049963:   56                              	push esi
0x8049964:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049967:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804996d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049970:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049976:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049979:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804997f:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049985:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049988:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804998b:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804998e:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049991:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049994:   57                              	push edi
0x8049995:   53                              	push ebx
0x8049996:   52                              	push edx
0x8049997:   e8 b8 fc ff ff                  	call 0x8049654 <set_var>
0x804999c:   83 c4 4c                        	add esp, 0x4c
0x804999f:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x80499a3:   e9 87 0d 00 00                  	jmp 0x804a72f <func_1+0xf92>
0x80499a8:   c7 85 ec fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x114], 0xffffffff
0x80499b2:   66 c7 45 f2 0f 00               	mov word ptr [ebp - 0xe], 0xf
0x80499b8:   e9 81 00 00 00                  	jmp 0x8049a3e <func_1+0x2a1>
0x80499bd:   80 6d bf 01                     	sub byte ptr [ebp - 0x41], 1
0x80499c1:   80 7d bf 00                     	cmp byte ptr [ebp - 0x41], 0
0x80499c5:   74 0d                           	je 0x80499d4 <func_1+0x237>
0x80499c7:   80 7d a5 00                     	cmp byte ptr [ebp - 0x5b], 0
0x80499cb:   74 07                           	je 0x80499d4 <func_1+0x237>
0x80499cd:   b8 01 00 00 00                  	mov eax, 1
0x80499d2:   eb 05                           	jmp 0x80499d9 <func_1+0x23c>
0x80499d4:   b8 00 00 00 00                  	mov eax, 0
0x80499d9:   0f b6 d0                        	movzx edx, al
0x80499dc:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x80499e0:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80499e3:   0f 9f c0                        	setg al
0x80499e6:   0f b6 c0                        	movzx eax, al
0x80499e9:   89 c1                           	mov ecx, eax
0x80499eb:   d3 fa                           	sar edx, cl
0x80499ed:   89 d0                           	mov eax, edx
0x80499ef:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x80499f2:   0f 96 c0                        	setbe al
0x80499f5:   0f b6 d0                        	movzx edx, al
0x80499f8:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x80499fc:   31 c2                           	xor edx, eax
0x80499fe:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a02:   39 c2                           	cmp edx, eax
0x8049a04:   0f bf 4d a2                     	movsx ecx, word ptr [ebp - 0x5e]
0x8049a08:   ba 53 35 b2 22                  	mov edx, 0x22b23553
0x8049a0d:   89 c8                           	mov eax, ecx
0x8049a0f:   f7 ea                           	imul edx
0x8049a11:   c1 fa 1b                        	sar edx, 0x1b
0x8049a14:   89 c8                           	mov eax, ecx
0x8049a16:   c1 f8 1f                        	sar eax, 0x1f
0x8049a19:   29 c2                           	sub edx, eax
0x8049a1b:   89 d0                           	mov eax, edx
0x8049a1d:   69 c0 e9 d9 06 3b               	imul eax, eax, 0x3b06d9e9
0x8049a23:   29 c1                           	sub ecx, eax
0x8049a25:   89 c8                           	mov eax, ecx
0x8049a27:   23 85 fc fe ff ff               	and eax, dword ptr [ebp - 0x104]
0x8049a2d:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049a33:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a37:   83 c0 01                        	add eax, 1
0x8049a3a:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049a3e:   66 83 7d f2 23                  	cmp word ptr [ebp - 0xe], 0x23
0x8049a43:   0f 86 74 ff ff ff               	jbe 0x80499bd <func_1+0x220>
0x8049a49:   80 7d bf 04                     	cmp byte ptr [ebp - 0x41], 4
0x8049a4d:   75 0e                           	jne 0x8049a5d <func_1+0x2c0>
0x8049a4f:   66 83 7d 86 00                  	cmp word ptr [ebp - 0x7a], 0
0x8049a54:   74 07                           	je 0x8049a5d <func_1+0x2c0>
0x8049a56:   ba 01 00 00 00                  	mov edx, 1
0x8049a5b:   eb 05                           	jmp 0x8049a62 <func_1+0x2c5>
0x8049a5d:   ba 00 00 00 00                  	mov edx, 0
0x8049a62:   0f b7 85 fa fe ff ff            	movzx eax, word ptr [ebp - 0x106]
0x8049a69:   39 c2                           	cmp edx, eax
0x8049a6b:   0f 9e c0                        	setle al
0x8049a6e:   0f b6 d0                        	movzx edx, al
0x8049a71:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a75:   21 d0                           	and eax, edx
0x8049a77:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049a7b:   b8 00 00 00 00                  	mov eax, 0
0x8049a80:   f7 d8                           	neg eax
0x8049a82:   88 85 f9 fe ff ff               	mov byte ptr [ebp - 0x107], al
0x8049a88:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x8049a8c:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049a90:   39 c2                           	cmp edx, eax
0x8049a92:   0f 94 c0                        	sete al
0x8049a95:   0f b6 c0                        	movzx eax, al
0x8049a98:   39 85 ec fe ff ff               	cmp dword ptr [ebp - 0x114], eax
0x8049a9e:   0f 9f c0                        	setg al
0x8049aa1:   0f b6 c0                        	movzx eax, al
0x8049aa4:   39 85 ec fe ff ff               	cmp dword ptr [ebp - 0x114], eax
0x8049aaa:   0f 9e c0                        	setle al
0x8049aad:   0f b6 c0                        	movzx eax, al
0x8049ab0:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049ab3:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049ab7:   0f bf d0                        	movsx edx, ax
0x8049aba:   c7 45 c8 ff ff ff ff            	mov dword ptr [ebp - 0x38], 0xffffffff
0x8049ac1:   c7 85 f4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x10c], 0xffffffff
0x8049acb:   8b 85 f4 fe ff ff               	mov eax, dword ptr [ebp - 0x10c]
0x8049ad1:   98                              	cwde 
0x8049ad2:   29 c2                           	sub edx, eax
0x8049ad4:   89 d0                           	mov eax, edx
0x8049ad6:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x8049adc:   0f be 45 a5                     	movsx eax, byte ptr [ebp - 0x5b]
0x8049ae0:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x8049ae6:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x8049aec:   98                              	cwde 
0x8049aed:   0f b6 75 bf                     	movzx esi, byte ptr [ebp - 0x41]
0x8049af1:   99                              	cdq 
0x8049af2:   f7 fe                           	idiv esi
0x8049af4:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049af7:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049afb:   0f 85 13 0b 00 00               	jne 0x804a614 <func_1+0xe77>
0x8049b01:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049b05:   83 c0 01                        	add eax, 1
0x8049b08:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049b0c:   66 83 7d c4 1d                  	cmp word ptr [ebp - 0x3c], 0x1d
0x8049b11:   0f 84 ce fd ff ff               	je 0x80498e5 <func_1+0x148>
0x8049b17:   e9 ff 0a 00 00                  	jmp 0x804a61b <func_1+0xe7e>
0x8049b1c:   c7 45 b8 07 00 00 00            	mov dword ptr [ebp - 0x48], 7
0x8049b23:   c7 45 b4 ff ff ff ff            	mov dword ptr [ebp - 0x4c], 0xffffffff
0x8049b2a:   66 c7 45 b2 01 00               	mov word ptr [ebp - 0x4e], 1
0x8049b30:   c7 45 80 60 f9 46 93            	mov dword ptr [ebp - 0x80], 0x9346f960
0x8049b37:   c7 85 7c ff ff ff ec 02 27 79   	mov dword ptr [ebp - 0x84], 0x792702ec
0x8049b41:   66 c7 45 b0 41 7e               	mov word ptr [ebp - 0x50], 0x7e41
0x8049b47:   c7 85 78 ff ff ff 51 40 fb 60   	mov dword ptr [ebp - 0x88], 0x60fb4051
0x8049b51:   c7 85 74 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0x8c], 0xffffffff
0x8049b5b:   c7 85 70 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0x90], 9
0x8049b65:   66 c7 85 6e ff ff ff b4 ad      	mov word ptr [ebp - 0x92], 0xadb4
0x8049b6e:   66 c7 45 ae f7 ff               	mov word ptr [ebp - 0x52], 0xfff7
0x8049b74:   c7 85 68 ff ff ff 07 00 00 00   	mov dword ptr [ebp - 0x98], 7
0x8049b7e:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049b82:   89 c1                           	mov ecx, eax
0x8049b84:   0f b7 45 86                     	movzx eax, word ptr [ebp - 0x7a]
0x8049b88:   89 c2                           	mov edx, eax
0x8049b8a:   0f b6 c1                        	movzx eax, cl
0x8049b8d:   f6 f2                           	div dl
0x8049b8f:   0f b6 c0                        	movzx eax, al
0x8049b92:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049b95:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049b98:   66 98                           	cbw 
0x8049b9a:   0f b7 c0                        	movzx eax, ax
0x8049b9d:   05 82 3e 00 00                  	add eax, 0x3e82
0x8049ba2:   83 f8 5f                        	cmp eax, 0x5f
0x8049ba5:   0f 9e c0                        	setle al
0x8049ba8:   0f b6 c0                        	movzx eax, al
0x8049bab:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049bae:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049bb1:   3b 45 ec                        	cmp eax, dword ptr [ebp - 0x14]
0x8049bb4:   0f 94 c0                        	sete al
0x8049bb7:   0f b6 c0                        	movzx eax, al
0x8049bba:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049bbd:   66 c7 45 c4 ee ff               	mov word ptr [ebp - 0x3c], 0xffee
0x8049bc3:   e9 07 01 00 00                  	jmp 0x8049ccf <func_1+0x532>
0x8049bc8:   c7 45 a8 00 00 00 00            	mov dword ptr [ebp - 0x58], 0
0x8049bcf:   80 6d db 01                     	sub byte ptr [ebp - 0x25], 1
0x8049bd3:   c7 45 e8 09 00 00 00            	mov dword ptr [ebp - 0x18], 9
0x8049bda:   e9 d4 00 00 00                  	jmp 0x8049cb3 <func_1+0x516>
0x8049bdf:   66 c7 45 a6 00 00               	mov word ptr [ebp - 0x5a], 0
0x8049be5:   83 75 a8 08                     	xor dword ptr [ebp - 0x58], 8
0x8049be9:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049bec:   66 c1 f8 02                     	sar ax, 2
0x8049bf0:   0f be c0                        	movsx eax, al
0x8049bf3:   8d 1c 85 00 00 00 00            	lea ebx, [eax*4]
0x8049bfa:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049bfd:   0f bf c8                        	movsx ecx, ax
0x8049c00:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049c03:   0f b6 d0                        	movzx edx, al
0x8049c06:   89 d0                           	mov eax, edx
0x8049c08:   c1 e0 07                        	shl eax, 7
0x8049c0b:   29 d0                           	sub eax, edx
0x8049c0d:   01 c0                           	add eax, eax
0x8049c0f:   98                              	cwde 
0x8049c10:   01 c8                           	add eax, ecx
0x8049c12:   2d d4 6c 0d 42                  	sub eax, 0x420d6cd4
0x8049c17:   39 c3                           	cmp ebx, eax
0x8049c19:   0f 9f c0                        	setg al
0x8049c1c:   89 c2                           	mov edx, eax
0x8049c1e:   8b 45 dc                        	mov eax, dword ptr [ebp - 0x24]
0x8049c21:   21 d0                           	and eax, edx
0x8049c23:   88 45 da                        	mov byte ptr [ebp - 0x26], al
0x8049c26:   0f bf 45 b2                     	movsx eax, word ptr [ebp - 0x4e]
0x8049c2a:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c2d:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049c31:   0f 95 c0                        	setne al
0x8049c34:   0f b6 c0                        	movzx eax, al
0x8049c37:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x8049c3a:   66 c7 45 a6 00 00               	mov word ptr [ebp - 0x5a], 0
0x8049c40:   eb 12                           	jmp 0x8049c54 <func_1+0x4b7>
0x8049c42:   c7 45 e0 01 00 00 00            	mov dword ptr [ebp - 0x20], 1
0x8049c49:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049c4d:   83 c0 09                        	add eax, 9
0x8049c50:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x8049c54:   66 83 7d a6 16                  	cmp word ptr [ebp - 0x5a], 0x16
0x8049c59:   7f e7                           	jg 0x8049c42 <func_1+0x4a5>
0x8049c5b:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c5e:   33 45 8c                        	xor eax, dword ptr [ebp - 0x74]
0x8049c61:   39 45 80                        	cmp dword ptr [ebp - 0x80], eax
0x8049c64:   0f 94 c0                        	sete al
0x8049c67:   0f b6 d0                        	movzx edx, al
0x8049c6a:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049c6d:   83 f8 01                        	cmp eax, 1
0x8049c70:   0f 96 c0                        	setbe al
0x8049c73:   0f b6 c0                        	movzx eax, al
0x8049c76:   2b 45 a8                        	sub eax, dword ptr [ebp - 0x58]
0x8049c79:   23 45 9c                        	and eax, dword ptr [ebp - 0x64]
0x8049c7c:   85 c0                           	test eax, eax
0x8049c7e:   75 06                           	jne 0x8049c86 <func_1+0x4e9>
0x8049c80:   83 7d 88 00                     	cmp dword ptr [ebp - 0x78], 0
0x8049c84:   74 07                           	je 0x8049c8d <func_1+0x4f0>
0x8049c86:   b8 01 00 00 00                  	mov eax, 1
0x8049c8b:   eb 05                           	jmp 0x8049c92 <func_1+0x4f5>
0x8049c8d:   b8 00 00 00 00                  	mov eax, 0
0x8049c92:   39 d0                           	cmp eax, edx
0x8049c94:   0f 9c c0                        	setl al
0x8049c97:   0f b6 d0                        	movzx edx, al
0x8049c9a:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c9d:   0f b7 c0                        	movzx eax, ax
0x8049ca0:   89 c1                           	mov ecx, eax
0x8049ca2:   d3 e2                           	shl edx, cl
0x8049ca4:   89 d0                           	mov eax, edx
0x8049ca6:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049ca9:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049cac:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x8049caf:   83 45 e8 05                     	add dword ptr [ebp - 0x18], 5
0x8049cb3:   83 7d e8 0e                     	cmp dword ptr [ebp - 0x18], 0xe
0x8049cb7:   0f 86 22 ff ff ff               	jbe 0x8049bdf <func_1+0x442>
0x8049cbd:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x8049cc4:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049cc8:   83 c0 07                        	add eax, 7
0x8049ccb:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x8049ccf:   66 83 7d c4 03                  	cmp word ptr [ebp - 0x3c], 3
0x8049cd4:   0f 8f ee fe ff ff               	jg 0x8049bc8 <func_1+0x42b>
0x8049cda:   c7 45 b8 00 00 00 00            	mov dword ptr [ebp - 0x48], 0
0x8049ce1:   e9 22 09 00 00                  	jmp 0x804a608 <func_1+0xe6b>
0x8049ce6:   c6 85 67 ff ff ff 7c            	mov byte ptr [ebp - 0x99], 0x7c
0x8049ced:   c6 85 66 ff ff ff e1            	mov byte ptr [ebp - 0x9a], 0xe1
0x8049cf4:   c7 85 60 ff ff ff 48 92 5d b2   	mov dword ptr [ebp - 0xa0], 0xb25d9248
0x8049cfe:   c7 85 5c ff ff ff ae 37 c8 f7   	mov dword ptr [ebp - 0xa4], 0xf7c837ae
0x8049d08:   c6 85 5b ff ff ff 01            	mov byte ptr [ebp - 0xa5], 1
0x8049d0f:   66 c7 85 58 ff ff ff 75 38      	mov word ptr [ebp - 0xa8], 0x3875
0x8049d18:   c7 85 54 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xac], 6
0x8049d22:   0f be 85 66 ff ff ff            	movsx eax, byte ptr [ebp - 0x9a]
0x8049d29:   83 e0 01                        	and eax, 1
0x8049d2c:   31 45 b4                        	xor dword ptr [ebp - 0x4c], eax
0x8049d2f:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049d32:   3b 45 e4                        	cmp eax, dword ptr [ebp - 0x1c]
0x8049d35:   0f 9e c0                        	setle al
0x8049d38:   0f b6 d0                        	movzx edx, al
0x8049d3b:   0f be 85 66 ff ff ff            	movsx eax, byte ptr [ebp - 0x9a]
0x8049d42:   39 c2                           	cmp edx, eax
0x8049d44:   0f 94 c0                        	sete al
0x8049d47:   0f b6 c0                        	movzx eax, al
0x8049d4a:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x8049d50:   0f be 85 67 ff ff ff            	movsx eax, byte ptr [ebp - 0x99]
0x8049d57:   23 45 80                        	and eax, dword ptr [ebp - 0x80]
0x8049d5a:   89 c2                           	mov edx, eax
0x8049d5c:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049d60:   01 d0                           	add eax, edx
0x8049d62:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x8049d68:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049d6e:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049d71:   81 7d c8 5c 9b 00 00            	cmp dword ptr [ebp - 0x38], 0x9b5c
0x8049d78:   0f 9f c0                        	setg al
0x8049d7b:   0f b6 c0                        	movzx eax, al
0x8049d7e:   89 45 e4                        	mov dword ptr [ebp - 0x1c], eax
0x8049d81:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049d84:   8d 88 97 97 c1 52               	lea ecx, [eax + 0x52c19797]
0x8049d8a:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049d8d:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x8049d90:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049d93:   0f bf d0                        	movsx edx, ax
0x8049d96:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049d9a:   c0 f8 02                        	sar al, 2
0x8049d9d:   0f be c0                        	movsx eax, al
0x8049da0:   29 c2                           	sub edx, eax
0x8049da2:   89 d0                           	mov eax, edx
0x8049da4:   39 c1                           	cmp ecx, eax
0x8049da6:   0f 95 c0                        	setne al
0x8049da9:   0f b6 c0                        	movzx eax, al
0x8049dac:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049daf:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049db3:   0f 84 c7 01 00 00               	je 0x8049f80 <func_1+0x7e3>
0x8049db9:   c7 85 4c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb4], 0xffffffff
0x8049dc3:   c7 85 48 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xb8], 0xffffffff
0x8049dcd:   c7 85 44 ff ff ff 17 0b bd 0a   	mov dword ptr [ebp - 0xbc], 0xabd0b17
0x8049dd7:   c7 85 40 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0xc0], 0xfffffff7
0x8049de1:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049de4:   0f b6 d0                        	movzx edx, al
0x8049de7:   0f b6 45 da                     	movzx eax, byte ptr [ebp - 0x26]
0x8049deb:   0f b6 c0                        	movzx eax, al
0x8049dee:   89 c1                           	mov ecx, eax
0x8049df0:   d3 fa                           	sar edx, cl
0x8049df2:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049df6:   39 c2                           	cmp edx, eax
0x8049df8:   7d 07                           	jge 0x8049e01 <func_1+0x664>
0x8049dfa:   ba 07 00 00 00                  	mov edx, 7
0x8049dff:   eb 05                           	jmp 0x8049e06 <func_1+0x669>
0x8049e01:   ba 06 00 00 00                  	mov edx, 6
0x8049e06:   66 0f be 85 66 ff ff ff         	movsx ax, byte ptr [ebp - 0x9a]
0x8049e0e:   31 d0                           	xor eax, edx
0x8049e10:   0f b7 d0                        	movzx edx, ax
0x8049e13:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049e16:   0f b7 c0                        	movzx eax, ax
0x8049e19:   0f af c2                        	imul eax, edx
0x8049e1c:   0b 45 88                        	or eax, dword ptr [ebp - 0x78]
0x8049e1f:   89 c2                           	mov edx, eax
0x8049e21:   0f bf 45 a2                     	movsx eax, word ptr [ebp - 0x5e]
0x8049e25:   21 d0                           	and eax, edx
0x8049e27:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049e2d:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049e33:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049e37:   0f bf 45 86                     	movsx eax, word ptr [ebp - 0x7a]
0x8049e3b:   39 85 48 ff ff ff               	cmp dword ptr [ebp - 0xb8], eax
0x8049e41:   0f 9f c0                        	setg al
0x8049e44:   0f b6 c0                        	movzx eax, al
0x8049e47:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x8049e4d:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049e50:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x8049e56:   80 bd 66 ff ff ff 01            	cmp byte ptr [ebp - 0x9a], 1
0x8049e5d:   7e 41                           	jle 0x8049ea0 <func_1+0x703>
0x8049e5f:   c7 85 38 ff ff ff 70 63 e8 f1   	mov dword ptr [ebp - 0xc8], 0xf1e86370
0x8049e69:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e6c:   0f b6 d0                        	movzx edx, al
0x8049e6f:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049e72:   0f b6 c0                        	movzx eax, al
0x8049e75:   29 c2                           	sub edx, eax
0x8049e77:   89 d0                           	mov eax, edx
0x8049e79:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049e7c:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e7f:   0f b7 f0                        	movzx esi, ax
0x8049e82:   b8 01 00 00 00                  	mov eax, 1
0x8049e87:   99                              	cdq 
0x8049e88:   f7 fe                           	idiv esi
0x8049e8a:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x8049e90:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x8049e93:   f7 d0                           	not eax
0x8049e95:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049e9b:   e9 d7 00 00 00                  	jmp 0x8049f77 <func_1+0x7da>
0x8049ea0:   c7 85 3c ff ff ff 13 81 4f 46   	mov dword ptr [ebp - 0xc4], 0x464f8113
0x8049eaa:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049ead:   0f b6 c0                        	movzx eax, al
0x8049eb0:   01 c0                           	add eax, eax
0x8049eb2:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049eb5:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x8049ebb:   0f b6 c0                        	movzx eax, al
0x8049ebe:   01 c0                           	add eax, eax
0x8049ec0:   0f bf d0                        	movsx edx, ax
0x8049ec3:   8b 85 3c ff ff ff               	mov eax, dword ptr [ebp - 0xc4]
0x8049ec9:   98                              	cwde 
0x8049eca:   89 c1                           	mov ecx, eax
0x8049ecc:   d3 fa                           	sar edx, cl
0x8049ece:   89 d0                           	mov eax, edx
0x8049ed0:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x8049ed6:   c7 85 60 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa0], 0
0x8049ee0:   83 bd 60 ff ff ff 00            	cmp dword ptr [ebp - 0xa0], 0
0x8049ee7:   0f 88 8a 00 00 00               	js 0x8049f77 <func_1+0x7da>
0x8049eed:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x8049ef1:   0f b7 4d 92                     	movzx ecx, word ptr [ebp - 0x6e]
0x8049ef5:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x8049ef9:   0f bf 7d 98                     	movsx edi, word ptr [ebp - 0x68]
0x8049efd:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049f03:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x8049f07:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x8049f0d:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x8049f11:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x8049f17:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x8049f1b:   89 bd d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edi
0x8049f21:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x8049f25:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x8049f29:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x8049f2d:   50                              	push eax
0x8049f2e:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x8049f31:   51                              	push ecx
0x8049f32:   56                              	push esi
0x8049f33:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x8049f36:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049f3c:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049f3f:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049f45:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x8049f48:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049f4e:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049f54:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049f57:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049f5a:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049f5d:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049f60:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049f63:   57                              	push edi
0x8049f64:   53                              	push ebx
0x8049f65:   52                              	push edx
0x8049f66:   e8 e9 f6 ff ff                  	call 0x8049654 <set_var>
0x8049f6b:   83 c4 4c                        	add esp, 0x4c
0x8049f6e:   0f b6 45 a5                     	movzx eax, byte ptr [ebp - 0x5b]
0x8049f72:   e9 b8 07 00 00                  	jmp 0x804a72f <func_1+0xf92>
0x8049f77:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x8049f7b:   e9 94 00 00 00                  	jmp 0x804a014 <func_1+0x877>
0x8049f80:   c7 85 50 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xb0], 2
0x8049f8a:   8b 55 80                        	mov edx, dword ptr [ebp - 0x80]
0x8049f8d:   0f b7 45 9a                     	movzx eax, word ptr [ebp - 0x66]
0x8049f91:   89 c3                           	mov ebx, eax
0x8049f93:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049f97:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049f9b:   75 07                           	jne 0x8049fa4 <func_1+0x807>
0x8049f9d:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x8049fa2:   74 07                           	je 0x8049fab <func_1+0x80e>
0x8049fa4:   b9 01 00 00 00                  	mov ecx, 1
0x8049fa9:   eb 05                           	jmp 0x8049fb0 <func_1+0x813>
0x8049fab:   b9 00 00 00 00                  	mov ecx, 0
0x8049fb0:   83 f9 06                        	cmp ecx, 6
0x8049fb3:   0f 96 c1                        	setbe cl
0x8049fb6:   0f b6 c9                        	movzx ecx, cl
0x8049fb9:   f7 d9                           	neg ecx
0x8049fbb:   39 c8                           	cmp eax, ecx
0x8049fbd:   0f 95 c0                        	setne al
0x8049fc0:   0f b6 c0                        	movzx eax, al
0x8049fc3:   89 c1                           	mov ecx, eax
0x8049fc5:   89 d8                           	mov eax, ebx
0x8049fc7:   0f af c1                        	imul eax, ecx
0x8049fca:   0f b6 d8                        	movzx ebx, al
0x8049fcd:   0f b6 45 da                     	movzx eax, byte ptr [ebp - 0x26]
0x8049fd1:   0f b6 c0                        	movzx eax, al
0x8049fd4:   89 c1                           	mov ecx, eax
0x8049fd6:   d3 e3                           	shl ebx, cl
0x8049fd8:   89 d8                           	mov eax, ebx
0x8049fda:   33 45 d4                        	xor eax, dword ptr [ebp - 0x2c]
0x8049fdd:   89 c1                           	mov ecx, eax
0x8049fdf:   89 d0                           	mov eax, edx
0x8049fe1:   99                              	cdq 
0x8049fe2:   f7 f9                           	idiv ecx
0x8049fe4:   89 c2                           	mov edx, eax
0x8049fe6:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x8049fe9:   29 c2                           	sub edx, eax
0x8049feb:   89 d0                           	mov eax, edx
0x8049fed:   0f b7 d0                        	movzx edx, ax
0x8049ff0:   0f b7 45 a2                     	movzx eax, word ptr [ebp - 0x5e]
0x8049ff4:   0f b7 c0                        	movzx eax, ax
0x8049ff7:   0f af c2                        	imul eax, edx
0x8049ffa:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x8049ffd:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a004:   0f 85 0d 06 00 00               	jne 0x804a617 <func_1+0xe7a>
0x804a00a:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a00e:   0f 85 06 06 00 00               	jne 0x804a61a <func_1+0xe7d>
0x804a014:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a017:   0f b6 c8                        	movzx ecx, al
0x804a01a:   ba 43 08 21 84                  	mov edx, 0x84210843
0x804a01f:   89 c8                           	mov eax, ecx
0x804a021:   f7 ea                           	imul edx
0x804a023:   8d 04 0a                        	lea eax, [edx + ecx]
0x804a026:   c1 f8 07                        	sar eax, 7
0x804a029:   89 c2                           	mov edx, eax
0x804a02b:   89 c8                           	mov eax, ecx
0x804a02d:   c1 f8 1f                        	sar eax, 0x1f
0x804a030:   29 c2                           	sub edx, eax
0x804a032:   89 d0                           	mov eax, edx
0x804a034:   69 c0 f8 00 00 00               	imul eax, eax, 0xf8
0x804a03a:   29 c1                           	sub ecx, eax
0x804a03c:   89 c8                           	mov eax, ecx
0x804a03e:   89 c2                           	mov edx, eax
0x804a040:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a043:   01 d0                           	add eax, edx
0x804a045:   83 e0 01                        	and eax, 1
0x804a048:   89 c2                           	mov edx, eax
0x804a04a:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a050:   39 c2                           	cmp edx, eax
0x804a052:   0f 92 c0                        	setb al
0x804a055:   0f b6 c0                        	movzx eax, al
0x804a058:   23 85 74 ff ff ff               	and eax, dword ptr [ebp - 0x8c]
0x804a05e:   85 c0                           	test eax, eax
0x804a060:   0f 84 02 02 00 00               	je 0x804a268 <func_1+0xacb>
0x804a066:   c6 85 1f ff ff ff ad            	mov byte ptr [ebp - 0xe1], 0xad
0x804a06d:   c7 85 18 ff ff ff aa 8b 42 90   	mov dword ptr [ebp - 0xe8], 0x90428baa
0x804a077:   c7 85 14 ff ff ff d6 77 d4 f4   	mov dword ptr [ebp - 0xec], 0xf4d477d6
0x804a081:   83 7d dc 00                     	cmp dword ptr [ebp - 0x24], 0
0x804a085:   74 22                           	je 0x804a0a9 <func_1+0x90c>
0x804a087:   c7 85 04 ff ff ff 98 c8 57 ec   	mov dword ptr [ebp - 0xfc], 0xec57c898
0x804a091:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a097:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a09d:   0f bf 45 9a                     	movsx eax, word ptr [ebp - 0x66]
0x804a0a1:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a0a4:   e9 22 01 00 00                  	jmp 0x804a1cb <func_1+0xa2e>
0x804a0a9:   66 c7 85 12 ff ff ff f9 ff      	mov word ptr [ebp - 0xee], 0xfff9
0x804a0b2:   c7 85 0c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf4], 0
0x804a0bc:   0f bf 55 b0                     	movsx edx, word ptr [ebp - 0x50]
0x804a0c0:   0f b7 85 12 ff ff ff            	movzx eax, word ptr [ebp - 0xee]
0x804a0c7:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804a0ca:   29 c2                           	sub edx, eax
0x804a0cc:   89 d0                           	mov eax, edx
0x804a0ce:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a0d4:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a0da:   0f b6 c0                        	movzx eax, al
0x804a0dd:   66 0f be 55 da                  	movsx dx, byte ptr [ebp - 0x26]
0x804a0e2:   0f b7 f2                        	movzx esi, dx
0x804a0e5:   99                              	cdq 
0x804a0e6:   f7 fe                           	idiv esi
0x804a0e8:   3d 87 67 00 00                  	cmp eax, 0x6787
0x804a0ed:   7f 10                           	jg 0x804a0ff <func_1+0x962>
0x804a0ef:   80 bd 1f ff ff ff 00            	cmp byte ptr [ebp - 0xe1], 0
0x804a0f6:   74 07                           	je 0x804a0ff <func_1+0x962>
0x804a0f8:   b8 01 00 00 00                  	mov eax, 1
0x804a0fd:   eb 05                           	jmp 0x804a104 <func_1+0x967>
0x804a0ff:   b8 00 00 00 00                  	mov eax, 0
0x804a104:   09 45 dc                        	or dword ptr [ebp - 0x24], eax
0x804a107:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a10b:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a10e:   66 c7 45 b2 00 00               	mov word ptr [ebp - 0x4e], 0
0x804a114:   e9 a7 00 00 00                  	jmp 0x804a1c0 <func_1+0xa23>
0x804a119:   c7 85 08 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0xf8], 2
0x804a123:   83 85 08 ff ff ff 01            	add dword ptr [ebp - 0xf8], 1
0x804a12a:   0f be 9d 66 ff ff ff            	movsx ebx, byte ptr [ebp - 0x9a]
0x804a131:   0f be 45 da                     	movsx eax, byte ptr [ebp - 0x26]
0x804a135:   ba f6 ff ff ff                  	mov edx, 0xfffffff6
0x804a13a:   89 c1                           	mov ecx, eax
0x804a13c:   d3 e2                           	shl edx, cl
0x804a13e:   89 d0                           	mov eax, edx
0x804a140:   0f b7 75 9a                     	movzx esi, word ptr [ebp - 0x66]
0x804a144:   ba 00 00 00 00                  	mov edx, 0
0x804a149:   66 f7 f6                        	div si
0x804a14c:   0f b7 c0                        	movzx eax, ax
0x804a14f:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x804a152:   0f 95 c0                        	setne al
0x804a155:   0f b6 c0                        	movzx eax, al
0x804a158:   39 c3                           	cmp ebx, eax
0x804a15a:   0f b6 85 1f ff ff ff            	movzx eax, byte ptr [ebp - 0xe1]
0x804a161:   25 f2 2c 00 00                  	and eax, 0x2cf2
0x804a166:   89 c3                           	mov ebx, eax
0x804a168:   66 81 7d 98 83 33               	cmp word ptr [ebp - 0x68], 0x3383
0x804a16e:   0f 9f c0                        	setg al
0x804a171:   0f b6 c0                        	movzx eax, al
0x804a174:   0f b6 b5 1f ff ff ff            	movzx esi, byte ptr [ebp - 0xe1]
0x804a17b:   ba 00 00 00 00                  	mov edx, 0
0x804a180:   f7 f6                           	div esi
0x804a182:   98                              	cwde 
0x804a183:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x804a186:   0f bf f2                        	movsx esi, dx
0x804a189:   99                              	cdq 
0x804a18a:   f7 fe                           	idiv esi
0x804a18c:   0f be d0                        	movsx edx, al
0x804a18f:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a193:   0f be c0                        	movsx eax, al
0x804a196:   89 c1                           	mov ecx, eax
0x804a198:   d3 e2                           	shl edx, cl
0x804a19a:   89 d0                           	mov eax, edx
0x804a19c:   39 c3                           	cmp ebx, eax
0x804a19e:   0f 9d c0                        	setge al
0x804a1a1:   0f b6 c0                        	movzx eax, al
0x804a1a4:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a1a7:   80 45 d3 01                     	add byte ptr [ebp - 0x2d], 1
0x804a1ab:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a1ae:   31 45 e4                        	xor dword ptr [ebp - 0x1c], eax
0x804a1b1:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a1b5:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a1b9:   83 c0 01                        	add eax, 1
0x804a1bc:   66 89 45 b2                     	mov word ptr [ebp - 0x4e], ax
0x804a1c0:   66 83 7d b2 1b                  	cmp word ptr [ebp - 0x4e], 0x1b
0x804a1c5:   0f 8e 4e ff ff ff               	jle 0x804a119 <func_1+0x97c>
0x804a1cb:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x804a1d2:   83 7d e8 34                     	cmp dword ptr [ebp - 0x18], 0x34
0x804a1d6:   0f 84 28 04 00 00               	je 0x804a604 <func_1+0xe67>
0x804a1dc:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a1e0:   0f b7 4d 92                     	movzx ecx, word ptr [ebp - 0x6e]
0x804a1e4:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a1e8:   0f bf 7d 98                     	movsx edi, word ptr [ebp - 0x68]
0x804a1ec:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a1f2:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x804a1f6:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a1fc:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x804a200:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x804a206:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a20a:   89 bd d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edi
0x804a210:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x804a214:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a218:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x804a21c:   50                              	push eax
0x804a21d:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a220:   51                              	push ecx
0x804a221:   56                              	push esi
0x804a222:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a225:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a22b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a22e:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a234:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a237:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a23d:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a243:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a246:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a249:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a24c:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a24f:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a252:   57                              	push edi
0x804a253:   53                              	push ebx
0x804a254:   52                              	push edx
0x804a255:   e8 fa f3 ff ff                  	call 0x8049654 <set_var>
0x804a25a:   83 c4 4c                        	add esp, 0x4c
0x804a25d:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x804a263:   e9 c7 04 00 00                  	jmp 0x804a72f <func_1+0xf92>
0x804a268:   c7 85 34 ff ff ff 85 36 70 31   	mov dword ptr [ebp - 0xcc], 0x31703685
0x804a272:   c7 85 30 ff ff ff 92 80 eb 05   	mov dword ptr [ebp - 0xd0], 0x5eb8092
0x804a27c:   8b 45 e4                        	mov eax, dword ptr [ebp - 0x1c]
0x804a27f:   89 c2                           	mov edx, eax
0x804a281:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a285:   0f be c0                        	movsx eax, al
0x804a288:   bb 06 00 00 00                  	mov ebx, 6
0x804a28d:   89 c1                           	mov ecx, eax
0x804a28f:   d3 e3                           	shl ebx, cl
0x804a291:   89 d8                           	mov eax, ebx
0x804a293:   85 c0                           	test eax, eax
0x804a295:   74 0d                           	je 0x804a2a4 <func_1+0xb07>
0x804a297:   80 7d d3 00                     	cmp byte ptr [ebp - 0x2d], 0
0x804a29b:   74 07                           	je 0x804a2a4 <func_1+0xb07>
0x804a29d:   b8 01 00 00 00                  	mov eax, 1
0x804a2a2:   eb 05                           	jmp 0x804a2a9 <func_1+0xb0c>
0x804a2a4:   b8 00 00 00 00                  	mov eax, 0
0x804a2a9:   89 c1                           	mov ecx, eax
0x804a2ab:   66 0f be 85 66 ff ff ff         	movsx ax, byte ptr [ebp - 0x9a]
0x804a2b3:   31 c8                           	xor eax, ecx
0x804a2b5:   0f af c2                        	imul eax, edx
0x804a2b8:   8b 95 34 ff ff ff               	mov edx, dword ptr [ebp - 0xcc]
0x804a2be:   89 d1                           	mov ecx, edx
0x804a2c0:   ba 00 00 00 00                  	mov edx, 0
0x804a2c5:   66 f7 f1                        	div cx
0x804a2c8:   89 d0                           	mov eax, edx
0x804a2ca:   66 85 c0                        	test ax, ax
0x804a2cd:   74 0d                           	je 0x804a2dc <func_1+0xb3f>
0x804a2cf:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a2d3:   74 07                           	je 0x804a2dc <func_1+0xb3f>
0x804a2d5:   b8 01 00 00 00                  	mov eax, 1
0x804a2da:   eb 05                           	jmp 0x804a2e1 <func_1+0xb44>
0x804a2dc:   b8 00 00 00 00                  	mov eax, 0
0x804a2e1:   0f b6 d0                        	movzx edx, al
0x804a2e4:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a2eb:   0f b6 c0                        	movzx eax, al
0x804a2ee:   01 d0                           	add eax, edx
0x804a2f0:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x804a2f6:   7f 09                           	jg 0x804a301 <func_1+0xb64>
0x804a2f8:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804a2ff:   74 07                           	je 0x804a308 <func_1+0xb6b>
0x804a301:   b8 01 00 00 00                  	mov eax, 1
0x804a306:   eb 05                           	jmp 0x804a30d <func_1+0xb70>
0x804a308:   b8 00 00 00 00                  	mov eax, 0
0x804a30d:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a313:   0f 86 d2 01 00 00               	jbe 0x804a4eb <func_1+0xd4e>
0x804a319:   66 c7 85 2e ff ff ff 02 00      	mov word ptr [ebp - 0xd2], 2
0x804a322:   c7 85 28 ff ff ff 06 0b a5 93   	mov dword ptr [ebp - 0xd8], 0x93a50b06
0x804a32c:   66 83 7d a2 00                  	cmp word ptr [ebp - 0x5e], 0
0x804a331:   74 4e                           	je 0x804a381 <func_1+0xbe4>
0x804a333:   c6 85 27 ff ff ff 09            	mov byte ptr [ebp - 0xd9], 9
0x804a33a:   c7 85 20 ff ff ff ec 1e 3c 1b   	mov dword ptr [ebp - 0xe0], 0x1b3c1eec
0x804a344:   0f be 85 27 ff ff ff            	movsx eax, byte ptr [ebp - 0xd9]
0x804a34b:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a351:   0f bf 55 a2                     	movsx edx, word ptr [ebp - 0x5e]
0x804a355:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a359:   39 c2                           	cmp edx, eax
0x804a35b:   0f b7 85 2e ff ff ff            	movzx eax, word ptr [ebp - 0xd2]
0x804a362:   39 45 e0                        	cmp dword ptr [ebp - 0x20], eax
0x804a365:   0f 9c c0                        	setl al
0x804a368:   0f b6 c0                        	movzx eax, al
0x804a36b:   89 45 dc                        	mov dword ptr [ebp - 0x24], eax
0x804a36e:   66 83 bd 2e ff ff ff 00         	cmp word ptr [ebp - 0xd2], 0
0x804a376:   0f 84 8f 00 00 00               	je 0x804a40b <func_1+0xc6e>
0x804a37c:   e9 9a 02 00 00                  	jmp 0x804a61b <func_1+0xe7e>
0x804a381:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a385:   0f b7 4d 92                     	movzx ecx, word ptr [ebp - 0x6e]
0x804a389:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a38d:   0f bf 7d 98                     	movsx edi, word ptr [ebp - 0x68]
0x804a391:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a397:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x804a39b:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a3a1:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x804a3a5:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x804a3ab:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a3af:   89 bd d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edi
0x804a3b5:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x804a3b9:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a3bd:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x804a3c1:   50                              	push eax
0x804a3c2:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a3c5:   51                              	push ecx
0x804a3c6:   56                              	push esi
0x804a3c7:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a3ca:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a3d0:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a3d3:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a3d9:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a3dc:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a3e2:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a3e8:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a3eb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3ee:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a3f1:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3f4:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3f7:   57                              	push edi
0x804a3f8:   53                              	push ebx
0x804a3f9:   52                              	push edx
0x804a3fa:   e8 55 f2 ff ff                  	call 0x8049654 <set_var>
0x804a3ff:   83 c4 4c                        	add esp, 0x4c
0x804a402:   0f b6 45 d3                     	movzx eax, byte ptr [ebp - 0x2d]
0x804a406:   e9 24 03 00 00                  	jmp 0x804a72f <func_1+0xf92>
0x804a40b:   80 bd 67 ff ff ff 02            	cmp byte ptr [ebp - 0x99], 2
0x804a412:   0f 9f c0                        	setg al
0x804a415:   88 45 da                        	mov byte ptr [ebp - 0x26], al
0x804a418:   0f b7 85 2e ff ff ff            	movzx eax, word ptr [ebp - 0xd2]
0x804a41f:   0f b6 55 85                     	movzx edx, byte ptr [ebp - 0x7b]
0x804a423:   f7 da                           	neg edx
0x804a425:   0f b7 f2                        	movzx esi, dx
0x804a428:   99                              	cdq 
0x804a429:   f7 fe                           	idiv esi
0x804a42b:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a42e:   0f bf 45 98                     	movsx eax, word ptr [ebp - 0x68]
0x804a432:   23 45 9c                        	and eax, dword ptr [ebp - 0x64]
0x804a435:   89 c2                           	mov edx, eax
0x804a437:   0f bf 45 c4                     	movsx eax, word ptr [ebp - 0x3c]
0x804a43b:   21 d0                           	and eax, edx
0x804a43d:   39 45 d4                        	cmp dword ptr [ebp - 0x2c], eax
0x804a440:   0f 96 c0                        	setbe al
0x804a443:   0f b6 c0                        	movzx eax, al
0x804a446:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a44c:   66 83 45 ae 01                  	add word ptr [ebp - 0x52], 1
0x804a451:   0f bf 45 98                     	movsx eax, word ptr [ebp - 0x68]
0x804a455:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a45b:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a45f:   39 85 60 ff ff ff               	cmp dword ptr [ebp - 0xa0], eax
0x804a465:   0f be 85 67 ff ff ff            	movsx eax, byte ptr [ebp - 0x99]
0x804a46c:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804a472:   0f 9d c0                        	setge al
0x804a475:   0f b6 d0                        	movzx edx, al
0x804a478:   0f be 85 5b ff ff ff            	movsx eax, byte ptr [ebp - 0xa5]
0x804a47f:   39 c2                           	cmp edx, eax
0x804a481:   74 07                           	je 0x804a48a <func_1+0xced>
0x804a483:   b8 05 00 00 00                  	mov eax, 5
0x804a488:   eb 05                           	jmp 0x804a48f <func_1+0xcf2>
0x804a48a:   b8 04 00 00 00                  	mov eax, 4
0x804a48f:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a492:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a495:   3b 45 e0                        	cmp eax, dword ptr [ebp - 0x20]
0x804a498:   0f 9c c0                        	setl al
0x804a49b:   0f b6 c0                        	movzx eax, al
0x804a49e:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x804a4a1:   83 7d c0 02                     	cmp dword ptr [ebp - 0x40], 2
0x804a4a5:   0f 9e c0                        	setle al
0x804a4a8:   0f b6 c0                        	movzx eax, al
0x804a4ab:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a4ae:   66 c7 45 f2 78 0a               	mov word ptr [ebp - 0xe], 0xa78
0x804a4b4:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a4ba:   c0 f8 02                        	sar al, 2
0x804a4bd:   0f be c0                        	movsx eax, al
0x804a4c0:   25 78 0a 00 00                  	and eax, 0xa78
0x804a4c5:   89 c2                           	mov edx, eax
0x804a4c7:   0f bf 85 58 ff ff ff            	movsx eax, word ptr [ebp - 0xa8]
0x804a4ce:   39 c2                           	cmp edx, eax
0x804a4d0:   74 05                           	je 0x804a4d7 <func_1+0xd3a>
0x804a4d2:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a4d7:   8b 85 34 ff ff ff               	mov eax, dword ptr [ebp - 0xcc]
0x804a4dd:   c1 e8 1f                        	shr eax, 0x1f
0x804a4e0:   0f b6 c0                        	movzx eax, al
0x804a4e3:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a4e6:   e9 c0 00 00 00                  	jmp 0x804a5ab <func_1+0xe0e>
0x804a4eb:   66 c7 45 c6 00 00               	mov word ptr [ebp - 0x3a], 0
0x804a4f1:   66 83 7d c6 1a                  	cmp word ptr [ebp - 0x3a], 0x1a
0x804a4f6:   0f 8e af 00 00 00               	jle 0x804a5ab <func_1+0xe0e>
0x804a4fc:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a4ff:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x804a502:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a505:   c7 85 54 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xac], 1
0x804a50f:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a512:   89 85 30 ff ff ff               	mov dword ptr [ebp - 0xd0], eax
0x804a518:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804a51e:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a521:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a525:   0f b7 4d 92                     	movzx ecx, word ptr [ebp - 0x6e]
0x804a529:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a52d:   0f bf 7d 98                     	movsx edi, word ptr [ebp - 0x68]
0x804a531:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a537:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x804a53b:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a541:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x804a545:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x804a54b:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a54f:   89 bd d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edi
0x804a555:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x804a559:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a55d:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x804a561:   50                              	push eax
0x804a562:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a565:   51                              	push ecx
0x804a566:   56                              	push esi
0x804a567:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a56a:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a570:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a573:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a579:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a57c:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a582:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a588:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a58b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a58e:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a591:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a594:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a597:   57                              	push edi
0x804a598:   53                              	push ebx
0x804a599:   52                              	push edx
0x804a59a:   e8 b5 f0 ff ff                  	call 0x8049654 <set_var>
0x804a59f:   83 c4 4c                        	add esp, 0x4c
0x804a5a2:   0f b6 45 a5                     	movzx eax, byte ptr [ebp - 0x5b]
0x804a5a6:   e9 84 01 00 00                  	jmp 0x804a72f <func_1+0xf92>
0x804a5ab:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x804a5af:   75 38                           	jne 0x804a5e9 <func_1+0xe4c>
0x804a5b1:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a5b5:   39 85 30 ff ff ff               	cmp dword ptr [ebp - 0xd0], eax
0x804a5bb:   7e 09                           	jle 0x804a5c6 <func_1+0xe29>
0x804a5bd:   80 bd 5b ff ff ff 00            	cmp byte ptr [ebp - 0xa5], 0
0x804a5c4:   74 07                           	je 0x804a5cd <func_1+0xe30>
0x804a5c6:   b8 01 00 00 00                  	mov eax, 1
0x804a5cb:   eb 05                           	jmp 0x804a5d2 <func_1+0xe35>
0x804a5cd:   b8 00 00 00 00                  	mov eax, 0
0x804a5d2:   0f b6 d0                        	movzx edx, al
0x804a5d5:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a5d8:   0f b6 c0                        	movzx eax, al
0x804a5db:   0f af c2                        	imul eax, edx
0x804a5de:   85 c0                           	test eax, eax
0x804a5e0:   74 0e                           	je 0x804a5f0 <func_1+0xe53>
0x804a5e2:   66 83 7d 92 00                  	cmp word ptr [ebp - 0x6e], 0
0x804a5e7:   74 07                           	je 0x804a5f0 <func_1+0xe53>
0x804a5e9:   b8 01 00 00 00                  	mov eax, 1
0x804a5ee:   eb 05                           	jmp 0x804a5f5 <func_1+0xe58>
0x804a5f0:   b8 00 00 00 00                  	mov eax, 0
0x804a5f5:   89 85 68 ff ff ff               	mov dword ptr [ebp - 0x98], eax
0x804a5fb:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a601:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x804a604:   83 6d b8 08                     	sub dword ptr [ebp - 0x48], 8
0x804a608:   83 7d b8 f3                     	cmp dword ptr [ebp - 0x48], -0xd
0x804a60c:   0f 8c d4 f6 ff ff               	jl 0x8049ce6 <func_1+0x549>
0x804a612:   eb 07                           	jmp 0x804a61b <func_1+0xe7e>
0x804a614:   90                              	nop 
0x804a615:   eb 04                           	jmp 0x804a61b <func_1+0xe7e>
0x804a617:   90                              	nop 
0x804a618:   eb 01                           	jmp 0x804a61b <func_1+0xe7e>
0x804a61a:   90                              	nop 
0x804a61b:   0f bf 45 98                     	movsx eax, word ptr [ebp - 0x68]
0x804a61f:   21 45 9c                        	and dword ptr [ebp - 0x64], eax
0x804a622:   0f b6 55 84                     	movzx edx, byte ptr [ebp - 0x7c]
0x804a626:   b8 01 00 00 00                  	mov eax, 1
0x804a62b:   0f b7 c8                        	movzx ecx, ax
0x804a62e:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x804a632:   0f b7 c0                        	movzx eax, ax
0x804a635:   0f af c1                        	imul eax, ecx
0x804a638:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a63b:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a63e:   66 c1 f8 03                     	sar ax, 3
0x804a642:   83 c8 06                        	or eax, 6
0x804a645:   66 39 45 98                     	cmp word ptr [ebp - 0x68], ax
0x804a649:   75 0e                           	jne 0x804a659 <func_1+0xebc>
0x804a64b:   66 83 7d 9a 00                  	cmp word ptr [ebp - 0x66], 0
0x804a650:   74 07                           	je 0x804a659 <func_1+0xebc>
0x804a652:   b8 01 00 00 00                  	mov eax, 1
0x804a657:   eb 05                           	jmp 0x804a65e <func_1+0xec1>
0x804a659:   b8 00 00 00 00                  	mov eax, 0
0x804a65e:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a662:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x804a666:   83 c8 01                        	or eax, 1
0x804a669:   0f b6 c0                        	movzx eax, al
0x804a66c:   8b 4d e4                        	mov ecx, dword ptr [ebp - 0x1c]
0x804a66f:   21 c1                           	and ecx, eax
0x804a671:   0f b6 45 84                     	movzx eax, byte ptr [ebp - 0x7c]
0x804a675:   09 c8                           	or eax, ecx
0x804a677:   66 89 45 90                     	mov word ptr [ebp - 0x70], ax
0x804a67b:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x804a67f:   66 0b 45 c6                     	or ax, word ptr [ebp - 0x3a]
0x804a683:   0f bf c8                        	movsx ecx, ax
0x804a686:   69 c9 ab 2a 00 00               	imul ecx, ecx, 0x2aab
0x804a68c:   c1 e9 10                        	shr ecx, 0x10
0x804a68f:   66 c1 f8 0f                     	sar ax, 0xf
0x804a693:   29 c8                           	sub eax, ecx
0x804a695:   98                              	cwde 
0x804a696:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a699:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x804a69c:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a69f:   0f 97 c0                        	seta al
0x804a6a2:   0f b6 c0                        	movzx eax, al
0x804a6a5:   21 d0                           	and eax, edx
0x804a6a7:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a6aa:   0f bf 45 90                     	movsx eax, word ptr [ebp - 0x70]
0x804a6ae:   0f b7 4d 92                     	movzx ecx, word ptr [ebp - 0x6e]
0x804a6b2:   0f b6 75 d3                     	movzx esi, byte ptr [ebp - 0x2d]
0x804a6b6:   0f bf 7d 98                     	movsx edi, word ptr [ebp - 0x68]
0x804a6ba:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a6c0:   0f bf 5d 9a                     	movsx ebx, word ptr [ebp - 0x66]
0x804a6c4:   89 9d dc fe ff ff               	mov dword ptr [ebp - 0x124], ebx
0x804a6ca:   0f be 55 da                     	movsx edx, byte ptr [ebp - 0x26]
0x804a6ce:   89 95 d8 fe ff ff               	mov dword ptr [ebp - 0x128], edx
0x804a6d4:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a6d8:   89 bd d4 fe ff ff               	mov dword ptr [ebp - 0x12c], edi
0x804a6de:   0f bf 7d a2                     	movsx edi, word ptr [ebp - 0x5e]
0x804a6e2:   0f b7 5d f2                     	movzx ebx, word ptr [ebp - 0xe]
0x804a6e6:   0f be 55 a5                     	movsx edx, byte ptr [ebp - 0x5b]
0x804a6ea:   50                              	push eax
0x804a6eb:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a6ee:   51                              	push ecx
0x804a6ef:   56                              	push esi
0x804a6f0:   ff 75 94                        	push dword ptr [ebp - 0x6c]
0x804a6f3:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a6f9:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6fc:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a702:   ff 75 9c                        	push dword ptr [ebp - 0x64]
0x804a705:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a70b:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a711:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a714:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a717:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a71a:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a71d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a720:   57                              	push edi
0x804a721:   53                              	push ebx
0x804a722:   52                              	push edx
0x804a723:   e8 2c ef ff ff                  	call 0x8049654 <set_var>
0x804a728:   83 c4 4c                        	add esp, 0x4c
0x804a72b:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x804a72f:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a732:   5b                              	pop ebx
0x804a733:   5e                              	pop esi
0x804a734:   5f                              	pop edi
0x804a735:   5d                              	pop ebp
0x804a736:   c3                              	ret 
; function: main at 0x804a737 -- 0x804a9ff
0x804a737:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a73b:   83 e4 f0                        	and esp, 0xfffffff0
0x804a73e:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a741:   55                              	push ebp
0x804a742:   89 e5                           	mov ebp, esp
0x804a744:   53                              	push ebx
0x804a745:   51                              	push ecx
0x804a746:   83 ec 10                        	sub esp, 0x10
0x804a749:   e8 42 dc ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a74e:   81 c3 b2 28 00 00               	add ebx, 0x28b2
0x804a754:   89 c8                           	mov eax, ecx
0x804a756:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a75d:   83 38 02                        	cmp dword ptr [eax], 2
0x804a760:   75 26                           	jne 0x804a788 <main+0x51>
0x804a762:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a765:   83 c0 04                        	add eax, 4
0x804a768:   8b 00                           	mov eax, dword ptr [eax]
0x804a76a:   83 ec 08                        	sub esp, 8
0x804a76d:   8d 93 ec da ff ff               	lea edx, [ebx - 0x2514]
0x804a773:   52                              	push edx
0x804a774:   50                              	push eax
0x804a775:   e8 86 db ff ff                  	call 0x8048300 <strcmp>
0x804a77a:   83 c4 10                        	add esp, 0x10
0x804a77d:   85 c0                           	test eax, eax
0x804a77f:   75 07                           	jne 0x804a788 <main+0x51>
0x804a781:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a788:   e8 c9 dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a78d:   e8 d9 ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a792:   e8 06 f0 ff ff                  	call 0x804979d <func_1>
0x804a797:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a79e:   0f be c0                        	movsx eax, al
0x804a7a1:   83 ec 04                        	sub esp, 4
0x804a7a4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7a7:   8d 93 ee da ff ff               	lea edx, [ebx - 0x2512]
0x804a7ad:   52                              	push edx
0x804a7ae:   50                              	push eax
0x804a7af:   e8 c3 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7b4:   83 c4 10                        	add esp, 0x10
0x804a7b7:   0f b7 83 26 00 00 00            	movzx eax, word ptr [ebx + 0x26]
0x804a7be:   0f b7 c0                        	movzx eax, ax
0x804a7c1:   83 ec 04                        	sub esp, 4
0x804a7c4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7c7:   8d 93 f2 da ff ff               	lea edx, [ebx - 0x250e]
0x804a7cd:   52                              	push edx
0x804a7ce:   50                              	push eax
0x804a7cf:   e8 a3 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7d4:   83 c4 10                        	add esp, 0x10
0x804a7d7:   0f b7 83 28 00 00 00            	movzx eax, word ptr [ebx + 0x28]
0x804a7de:   98                              	cwde 
0x804a7df:   83 ec 04                        	sub esp, 4
0x804a7e2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a7e5:   8d 93 f7 da ff ff               	lea edx, [ebx - 0x2509]
0x804a7eb:   52                              	push edx
0x804a7ec:   50                              	push eax
0x804a7ed:   e8 85 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a7f2:   83 c4 10                        	add esp, 0x10
0x804a7f5:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a7fb:   89 c2                           	mov edx, eax
0x804a7fd:   83 ec 04                        	sub esp, 4
0x804a800:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a803:   8d 83 fc da ff ff               	lea eax, [ebx - 0x2504]
0x804a809:   50                              	push eax
0x804a80a:   52                              	push edx
0x804a80b:   e8 67 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a810:   83 c4 10                        	add esp, 0x10
0x804a813:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a819:   83 ec 04                        	sub esp, 4
0x804a81c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a81f:   8d 93 01 db ff ff               	lea edx, [ebx - 0x24ff]
0x804a825:   52                              	push edx
0x804a826:   50                              	push eax
0x804a827:   e8 4b ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a82c:   83 c4 10                        	add esp, 0x10
0x804a82f:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804a835:   89 c2                           	mov edx, eax
0x804a837:   83 ec 04                        	sub esp, 4
0x804a83a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a83d:   8d 83 06 db ff ff               	lea eax, [ebx - 0x24fa]
0x804a843:   50                              	push eax
0x804a844:   52                              	push edx
0x804a845:   e8 2d ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a84a:   83 c4 10                        	add esp, 0x10
0x804a84d:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804a853:   89 c2                           	mov edx, eax
0x804a855:   83 ec 04                        	sub esp, 4
0x804a858:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a85b:   8d 83 0b db ff ff               	lea eax, [ebx - 0x24f5]
0x804a861:   50                              	push eax
0x804a862:   52                              	push edx
0x804a863:   e8 0f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a868:   83 c4 10                        	add esp, 0x10
0x804a86b:   8b 83 88 04 00 00               	mov eax, dword ptr [ebx + 0x488]
0x804a871:   89 c2                           	mov edx, eax
0x804a873:   83 ec 04                        	sub esp, 4
0x804a876:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a879:   8d 83 10 db ff ff               	lea eax, [ebx - 0x24f0]
0x804a87f:   50                              	push eax
0x804a880:   52                              	push edx
0x804a881:   e8 f1 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a886:   83 c4 10                        	add esp, 0x10
0x804a889:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a890:   0f b6 c0                        	movzx eax, al
0x804a893:   83 ec 04                        	sub esp, 4
0x804a896:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a899:   8d 93 15 db ff ff               	lea edx, [ebx - 0x24eb]
0x804a89f:   52                              	push edx
0x804a8a0:   50                              	push eax
0x804a8a1:   e8 d1 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a6:   83 c4 10                        	add esp, 0x10
0x804a8a9:   0f b6 83 39 00 00 00            	movzx eax, byte ptr [ebx + 0x39]
0x804a8b0:   0f be c0                        	movsx eax, al
0x804a8b3:   83 ec 04                        	sub esp, 4
0x804a8b6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b9:   8d 93 1a db ff ff               	lea edx, [ebx - 0x24e6]
0x804a8bf:   52                              	push edx
0x804a8c0:   50                              	push eax
0x804a8c1:   e8 b1 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c6:   83 c4 10                        	add esp, 0x10
0x804a8c9:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a8cf:   89 c2                           	mov edx, eax
0x804a8d1:   83 ec 04                        	sub esp, 4
0x804a8d4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d7:   8d 83 1f db ff ff               	lea eax, [ebx - 0x24e1]
0x804a8dd:   50                              	push eax
0x804a8de:   52                              	push edx
0x804a8df:   e8 93 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8e4:   83 c4 10                        	add esp, 0x10
0x804a8e7:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804a8ee:   98                              	cwde 
0x804a8ef:   83 ec 04                        	sub esp, 4
0x804a8f2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f5:   8d 93 25 db ff ff               	lea edx, [ebx - 0x24db]
0x804a8fb:   52                              	push edx
0x804a8fc:   50                              	push eax
0x804a8fd:   e8 75 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a902:   83 c4 10                        	add esp, 0x10
0x804a905:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a90b:   83 ec 04                        	sub esp, 4
0x804a90e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a911:   8d 93 2b db ff ff               	lea edx, [ebx - 0x24d5]
0x804a917:   52                              	push edx
0x804a918:   50                              	push eax
0x804a919:   e8 59 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91e:   83 c4 10                        	add esp, 0x10
0x804a921:   0f b7 83 48 00 00 00            	movzx eax, word ptr [ebx + 0x48]
0x804a928:   98                              	cwde 
0x804a929:   83 ec 04                        	sub esp, 4
0x804a92c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92f:   8d 93 31 db ff ff               	lea edx, [ebx - 0x24cf]
0x804a935:   52                              	push edx
0x804a936:   50                              	push eax
0x804a937:   e8 3b ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a93c:   83 c4 10                        	add esp, 0x10
0x804a93f:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a945:   89 c2                           	mov edx, eax
0x804a947:   83 ec 04                        	sub esp, 4
0x804a94a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a94d:   8d 83 37 db ff ff               	lea eax, [ebx - 0x24c9]
0x804a953:   50                              	push eax
0x804a954:   52                              	push edx
0x804a955:   e8 1d ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a95a:   83 c4 10                        	add esp, 0x10
0x804a95d:   0f b6 83 50 00 00 00            	movzx eax, byte ptr [ebx + 0x50]
0x804a964:   0f b6 c0                        	movzx eax, al
0x804a967:   83 ec 04                        	sub esp, 4
0x804a96a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a96d:   8d 93 3d db ff ff               	lea edx, [ebx - 0x24c3]
0x804a973:   52                              	push edx
0x804a974:   50                              	push eax
0x804a975:   e8 fd eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a97a:   83 c4 10                        	add esp, 0x10
0x804a97d:   0f b7 83 52 00 00 00            	movzx eax, word ptr [ebx + 0x52]
0x804a984:   0f b7 c0                        	movzx eax, ax
0x804a987:   83 ec 04                        	sub esp, 4
0x804a98a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a98d:   8d 93 43 db ff ff               	lea edx, [ebx - 0x24bd]
0x804a993:   52                              	push edx
0x804a994:   50                              	push eax
0x804a995:   e8 dd eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a99a:   83 c4 10                        	add esp, 0x10
0x804a99d:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804a9a3:   89 c2                           	mov edx, eax
0x804a9a5:   83 ec 04                        	sub esp, 4
0x804a9a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9ab:   8d 83 49 db ff ff               	lea eax, [ebx - 0x24b7]
0x804a9b1:   50                              	push eax
0x804a9b2:   52                              	push edx
0x804a9b3:   e8 bf eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b8:   83 c4 10                        	add esp, 0x10
0x804a9bb:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804a9c2:   98                              	cwde 
0x804a9c3:   83 ec 04                        	sub esp, 4
0x804a9c6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c9:   8d 93 4f db ff ff               	lea edx, [ebx - 0x24b1]
0x804a9cf:   52                              	push edx
0x804a9d0:   50                              	push eax
0x804a9d1:   e8 a1 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d6:   83 c4 10                        	add esp, 0x10
0x804a9d9:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a9df:   f7 d0                           	not eax
0x804a9e1:   83 ec 08                        	sub esp, 8
0x804a9e4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e7:   50                              	push eax
0x804a9e8:   e8 79 da ff ff                  	call 0x8048466 <platform_main_end>
0x804a9ed:   83 c4 10                        	add esp, 0x10
0x804a9f0:   b8 00 00 00 00                  	mov eax, 0
0x804a9f5:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a9f8:   59                              	pop ecx
0x804a9f9:   5b                              	pop ebx
0x804a9fa:   5d                              	pop ebp
0x804a9fb:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a9fe:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a9ff -- 0x804aa03
0x804a9ff:   8b 04 24                        	mov eax, dword ptr [esp]
0x804aa02:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804aa03 -- 0x804aa07
0x804aa03:   8b 14 24                        	mov edx, dword ptr [esp]
0x804aa06:   c3                              	ret 
; data inside code section at 0x804aa07 -- 0x804aa10
0x804aa07:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: __libc_csu_init at 0x804aa10 -- 0x804aa6d
0x804aa10:   55                              	push ebp
0x804aa11:   57                              	push edi
0x804aa12:   56                              	push esi
0x804aa13:   53                              	push ebx
0x804aa14:   e8 77 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa19:   81 c3 e7 25 00 00               	add ebx, 0x25e7
0x804aa1f:   83 ec 0c                        	sub esp, 0xc
0x804aa22:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804aa26:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804aa2c:   e8 9b d8 ff ff                  	call 0x80482cc <_init>
0x804aa31:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804aa37:   29 c6                           	sub esi, eax
0x804aa39:   c1 fe 02                        	sar esi, 2
0x804aa3c:   85 f6                           	test esi, esi
0x804aa3e:   74 25                           	je 0x804aa65 <__libc_csu_init+0x55>
0x804aa40:   31 ff                           	xor edi, edi
0x804aa42:   8d b6 00 00 00 00               	lea esi, [esi]
0x804aa48:   83 ec 04                        	sub esp, 4
0x804aa4b:   55                              	push ebp
0x804aa4c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa50:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804aa54:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804aa5b:   83 c7 01                        	add edi, 1
0x804aa5e:   83 c4 10                        	add esp, 0x10
0x804aa61:   39 fe                           	cmp esi, edi
0x804aa63:   75 e3                           	jne 0x804aa48 <__libc_csu_init+0x38>
0x804aa65:   83 c4 0c                        	add esp, 0xc
0x804aa68:   5b                              	pop ebx
0x804aa69:   5e                              	pop esi
0x804aa6a:   5f                              	pop edi
0x804aa6b:   5d                              	pop ebp
0x804aa6c:   c3                              	ret 
; data inside code section at 0x804aa6d -- 0x804aa70
0x804aa6d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804aa70 -- 0x804aa72
0x804aa70:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804aa74 -- 0x804aa88
0x804aa74:   53                              	push ebx
0x804aa75:   83 ec 08                        	sub esp, 8
0x804aa78:   e8 13 d9 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804aa7d:   81 c3 83 25 00 00               	add ebx, 0x2583
0x804aa83:   83 c4 08                        	add esp, 8
0x804aa86:   5b                              	pop ebx
0x804aa87:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c aa 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804aa88:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804aa98:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804aaa8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804aab8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804aac8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804aad8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804aae8:   25 64 0a 00 31 00 67 5f  34 00 67 5f 31 31 00 67   |%d..1.g_4.g_11.g|
0x804aaf8:   5f 31 33 00 67 5f 32 38  00 67 5f 36 38 00 67 5f   |_13.g_28.g_68.g_|
0x804ab08:   37 30 00 67 5f 37 33 00  67 5f 37 34 00 67 5f 37   |70.g_73.g_74.g_7|
0x804ab18:   36 00 67 5f 39 34 00 67  5f 31 31 31 00 67 5f 31   |6.g_94.g_111.g_1|
0x804ab28:   37 30 00 67 5f 31 37 31  00 67 5f 32 32 32 00 67   |70.g_171.g_222.g|
0x804ab38:   5f 32 32 34 00 67 5f 32  32 37 00 67 5f 33 30 33   |_224.g_227.g_303|
0x804ab48:   00 67 5f 33 32 32 00 67  5f 33 33 36 00 00 00 00   |.g_322.g_336....|
0x804ab58:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804ab68:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804ab78:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804ab88:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ab98:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804aba8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804abb8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804abc0:   01 1b 03 3b c0 02 00 00  57 00 00 00 30 d7 ff ff   |...;....W...0...|
0x804abd0:   f0 02 00 00 70 d7 ff ff  14 03 00 00 c0 d7 ff ff   |....p...........|
0x804abe0:   dc 02 00 00 96 d8 ff ff  28 03 00 00 a6 d8 ff ff   |........(.......|
0x804abf0:   48 03 00 00 d4 d8 ff ff  6c 03 00 00 f2 d8 ff ff   |H.......l.......|
0x804ac00:   8c 03 00 00 1a d9 ff ff  ac 03 00 00 44 d9 ff ff   |............D...|
0x804ac10:   cc 03 00 00 6d d9 ff ff  ec 03 00 00 b0 d9 ff ff   |....m...........|
0x804ac20:   0c 04 00 00 f1 d9 ff ff  2c 04 00 00 49 da ff ff   |........,...I...|
0x804ac30:   50 04 00 00 9b da ff ff  74 04 00 00 d8 da ff ff   |P.......t.......|
0x804ac40:   94 04 00 00 0f db ff ff  b4 04 00 00 2e db ff ff   |................|
0x804ac50:   d4 04 00 00 58 db ff ff  f4 04 00 00 84 db ff ff   |....X...........|
0x804ac60:   14 05 00 00 af db ff ff  34 05 00 00 f8 db ff ff   |........4.......|
0x804ac70:   54 05 00 00 3f dc ff ff  74 05 00 00 99 dc ff ff   |T...?...t.......|
0x804ac80:   98 05 00 00 ed dc ff ff  bc 05 00 00 2c dd ff ff   |............,...|
0x804ac90:   dc 05 00 00 65 dd ff ff  fc 05 00 00 87 dd ff ff   |....e...........|
0x804aca0:   1c 06 00 00 d5 dd ff ff  3c 06 00 00 11 de ff ff   |........<.......|
0x804acb0:   5c 06 00 00 9a de ff ff  7c 06 00 00 cc de ff ff   |\.......|.......|
0x804acc0:   9c 06 00 00 fc de ff ff  bc 06 00 00 41 df ff ff   |............A...|
0x804acd0:   dc 06 00 00 80 df ff ff  fc 06 00 00 b2 df ff ff   |................|
0x804ace0:   1c 07 00 00 de df ff ff  3c 07 00 00 fc df ff ff   |........<.......|
0x804acf0:   5c 07 00 00 24 e0 ff ff  7c 07 00 00 49 e0 ff ff   |\...$...|...I...|
0x804ad00:   9c 07 00 00 6e e0 ff ff  bc 07 00 00 a5 e0 ff ff   |....n...........|
0x804ad10:   dc 07 00 00 d9 e0 ff ff  fc 07 00 00 2b e1 ff ff   |............+...|
0x804ad20:   20 08 00 00 77 e1 ff ff  44 08 00 00 ae e1 ff ff   | ...w...D.......|
0x804ad30:   64 08 00 00 df e1 ff ff  84 08 00 00 fe e1 ff ff   |d...............|
0x804ad40:   a4 08 00 00 28 e2 ff ff  c4 08 00 00 50 e2 ff ff   |....(.......P...|
0x804ad50:   e4 08 00 00 79 e2 ff ff  04 09 00 00 b5 e2 ff ff   |....y...........|
0x804ad60:   24 09 00 00 ef e2 ff ff  44 09 00 00 42 e3 ff ff   |$.......D...B...|
0x804ad70:   68 09 00 00 8f e3 ff ff  8c 09 00 00 c7 e3 ff ff   |h...............|
0x804ad80:   ac 09 00 00 f9 e3 ff ff  cc 09 00 00 0d e4 ff ff   |................|
0x804ad90:   ec 09 00 00 24 e4 ff ff  0c 0a 00 00 39 e4 ff ff   |....$.......9...|
0x804ada0:   2c 0a 00 00 4f e4 ff ff  4c 0a 00 00 76 e4 ff ff   |,...O...L...v...|
0x804adb0:   6c 0a 00 00 9b e4 ff ff  8c 0a 00 00 da e4 ff ff   |l...............|
0x804adc0:   ac 0a 00 00 13 e5 ff ff  cc 0a 00 00 3f e5 ff ff   |............?...|
0x804add0:   ec 0a 00 00 65 e5 ff ff  0c 0b 00 00 a7 e5 ff ff   |....e...........|
0x804ade0:   2c 0b 00 00 e9 e5 ff ff  4c 0b 00 00 2b e6 ff ff   |,.......L...+...|
0x804adf0:   6c 0b 00 00 a0 e6 ff ff  8c 0b 00 00 fd e6 ff ff   |l...............|
0x804ae00:   ac 0b 00 00 5a e7 ff ff  cc 0b 00 00 b7 e7 ff ff   |....Z...........|
0x804ae10:   ec 0b 00 00 47 e8 ff ff  0c 0c 00 00 ab e8 ff ff   |....G...........|
0x804ae20:   2c 0c 00 00 1b e9 ff ff  4c 0c 00 00 62 e9 ff ff   |,.......L...b...|
0x804ae30:   70 0c 00 00 b7 e9 ff ff  90 0c 00 00 fe e9 ff ff   |p...............|
0x804ae40:   b4 0c 00 00 66 ea ff ff  d8 0c 00 00 94 ea ff ff   |....f...........|
0x804ae50:   fc 0c 00 00 dd eb ff ff  2c 0d 00 00 77 fb ff ff   |........,...w...|
0x804ae60:   5c 0d 00 00 3f fe ff ff  94 0d 00 00 43 fe ff ff   |\...?.......C...|
0x804ae70:   a8 0d 00 00 50 fe ff ff  bc 0d 00 00 b0 fe ff ff   |....P...........|
0x804ae80:   08 0e 00 00 14                                     |.....           |
; section: .eh_frame
0x804ae84:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804ae94:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804aea4:   dc d4 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804aeb4:   30 00 00 00 38 d4 ff ff  40 00 00 00 00 0e 08 46   |0...8...@......F|
0x804aec4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804aed4:   10 00 00 00 54 00 00 00  54 d4 ff ff 08 00 00 00   |....T...T.......|
0x804aee4:   00 00 00 00 1c 00 00 00  68 00 00 00 66 d5 ff ff   |........h...f...|
0x804aef4:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804af04:   04 04 00 00 20 00 00 00  88 00 00 00 56 d5 ff ff   |.... .......V...|
0x804af14:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804af24:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804af34:   60 d5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |`........A....B.|
0x804af44:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804af54:   5e d5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |^...(....A....B.|
0x804af64:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804af74:   66 d5 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |f...*....A....B.|
0x804af84:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804af94:   70 d5 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |p...)....A....B.|
0x804afa4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804afb4:   79 d5 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |y...C....A....B.|
0x804afc4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804afd4:   9c d5 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804afe4:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804aff4:   bd d5 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b004:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b014:   90 01 00 00 f1 d5 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b024:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b034:   1c 00 00 00 b4 01 00 00  1f d6 ff ff 3d 00 00 00   |............=...|
0x804b044:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b054:   1c 00 00 00 d4 01 00 00  3c d6 ff ff 37 00 00 00   |........<...7...|
0x804b064:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b074:   1c 00 00 00 f4 01 00 00  53 d6 ff ff 1f 00 00 00   |........S.......|
0x804b084:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b094:   1c 00 00 00 14 02 00 00  52 d6 ff ff 2a 00 00 00   |........R...*...|
0x804b0a4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b0b4:   1c 00 00 00 34 02 00 00  5c d6 ff ff 2c 00 00 00   |....4...\...,...|
0x804b0c4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b0d4:   1c 00 00 00 54 02 00 00  68 d6 ff ff 2b 00 00 00   |....T...h...+...|
0x804b0e4:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b0f4:   1c 00 00 00 74 02 00 00  73 d6 ff ff 49 00 00 00   |....t...s...I...|
0x804b104:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b114:   1c 00 00 00 94 02 00 00  9c d6 ff ff 47 00 00 00   |............G...|
0x804b124:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b134:   20 00 00 00 b4 02 00 00  c3 d6 ff ff 5a 00 00 00   | ...........Z...|
0x804b144:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b154:   c5 0c 04 04 20 00 00 00  d8 02 00 00 f9 d6 ff ff   |.... ...........|
0x804b164:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b174:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b184:   29 d7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |)...?....A....B.|
0x804b194:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b1a4:   48 d7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |H...9....A....B.|
0x804b1b4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b1c4:   61 d7 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |a..."....A....B.|
0x804b1d4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b1e4:   63 d7 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |c...N....A....B.|
0x804b1f4:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b204:   91 d7 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b214:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b224:   ad d7 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b234:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b244:   16 d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b254:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b264:   28 d8 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |(...0....A....B.|
0x804b274:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b284:   38 d8 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |8...E....A....B.|
0x804b294:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b2a4:   5d d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |]...?....A....B.|
0x804b2b4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b2c4:   7c d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   ||...2....A....B.|
0x804b2d4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b2e4:   8e d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b2f4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b304:   9a d8 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b314:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b324:   98 d8 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b334:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b344:   a0 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b354:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b364:   a5 d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b374:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b384:   aa d8 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b394:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b3a4:   c1 d8 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b3b4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b3c4:   d5 d8 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b3d4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b3e4:   60 05 00 00 03 d9 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b3f4:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b404:   1c 00 00 00 84 05 00 00  2b d9 ff ff 37 00 00 00   |........+...7...|
0x804b414:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b424:   1c 00 00 00 a4 05 00 00  42 d9 ff ff 31 00 00 00   |........B...1...|
0x804b434:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b444:   1c 00 00 00 c4 05 00 00  53 d9 ff ff 1f 00 00 00   |........S.......|
0x804b454:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b464:   1c 00 00 00 e4 05 00 00  52 d9 ff ff 2a 00 00 00   |........R...*...|
0x804b474:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b484:   1c 00 00 00 04 06 00 00  5c d9 ff ff 28 00 00 00   |........\...(...|
0x804b494:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b4a4:   1c 00 00 00 24 06 00 00  64 d9 ff ff 29 00 00 00   |....$...d...)...|
0x804b4b4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b4c4:   1c 00 00 00 44 06 00 00  6d d9 ff ff 3c 00 00 00   |....D...m...<...|
0x804b4d4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b4e4:   1c 00 00 00 64 06 00 00  89 d9 ff ff 3a 00 00 00   |....d.......:...|
0x804b4f4:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b504:   20 00 00 00 84 06 00 00  a3 d9 ff ff 53 00 00 00   | ...........S...|
0x804b514:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b524:   c5 0c 04 04 20 00 00 00  a8 06 00 00 d2 d9 ff ff   |.... ...........|
0x804b534:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b544:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b554:   fb d9 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b564:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b574:   13 da ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b584:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b594:   25 da ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |%........A....B.|
0x804b5a4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b5b4:   19 da ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5c4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b5d4:   10 da ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b5e4:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b5f4:   05 da ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b604:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b614:   fb d9 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b624:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b634:   02 da ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b644:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b654:   07 da ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b664:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b674:   26 da ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |&...9....A....B.|
0x804b684:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b694:   3f da ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |?...,....A....B.|
0x804b6a4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b6b4:   4b da ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |K...&....A....B.|
0x804b6c4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b6d4:   51 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Q...B....A....B.|
0x804b6e4:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b6f4:   73 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |s...B....A....B.|
0x804b704:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b714:   95 da ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b724:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b734:   b7 da ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b744:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b754:   0c db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b764:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b774:   49 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |I...]....A....B.|
0x804b784:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b794:   86 db ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b7a4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b7b4:   c3 db ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b7c4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b7d4:   33 dc ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |3...d....A....B.|
0x804b7e4:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b7f4:   77 dc ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |w...p....A....B.|
0x804b804:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b814:   c7 dc ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b824:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b834:   b0 09 00 00 ea dc ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b844:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b854:   d0 09 00 00 1f dd ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b864:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b874:   20 00 00 00 f4 09 00 00  42 dd ff ff 68 00 00 00   | .......B...h...|
0x804b884:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b894:   0c 04 04 00 20 00 00 00  18 0a 00 00 86 dd ff ff   |.... ...........|
0x804b8a4:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b8b4:   66 c5 c3 0c 04 04 00 00  2c 00 00 00 3c 0a 00 00   |f.......,...<...|
0x804b8c4:   90 dd ff ff 49 01 00 00  00 41 0e 08 85 02 42 0d   |....I....A....B.|
0x804b8d4:   05 46 87 03 86 04 83 05  03 3c 01 c3 41 c6 41 c7   |.F.......<..A.A.|
0x804b8e4:   41 c5 0c 04 04 00 00 00  2c 00 00 00 6c 0a 00 00   |A.......,...l...|
0x804b8f4:   a9 de ff ff 9a 0f 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b904:   05 49 87 03 86 04 83 05  03 8a 0f c3 41 c6 41 c7   |.I..........A.A.|
0x804b914:   41 c5 0c 04 04 00 00 00  34 00 00 00 9c 0a 00 00   |A.......4.......|
0x804b924:   13 ee ff ff c8 02 00 00  00 44 0c 01 00 47 10 05   |.........D...G..|
0x804b934:   02 75 00 44 0f 03 75 78  06 10 03 02 75 7c 03 b3   |.u.D..ux....u|..|
0x804b944:   02 c1 0c 01 00 41 c3 41  c5 43 0c 04 04 00 00 00   |.....A.A.C......|
0x804b954:   10 00 00 00 d4 0a 00 00  a3 f0 ff ff 04 00 00 00   |................|
0x804b964:   00 00 00 00 10 00 00 00  e8 0a 00 00 93 f0 ff ff   |................|
0x804b974:   04 00 00 00 00 00 00 00  48 00 00 00 fc 0a 00 00   |........H.......|
0x804b984:   8c f0 ff ff 5d 00 00 00  00 41 0e 08 85 02 41 0e   |....]....A....A.|
0x804b994:   0c 87 03 41 0e 10 86 04  41 0e 14 83 05 4e 0e 20   |...A....A....N. |
0x804b9a4:   69 0e 24 41 0e 28 44 0e  2c 44 0e 30 4d 0e 20 47   |i.$A.(D.,D.0M. G|
0x804b9b4:   0e 14 41 c3 0e 10 41 c6  0e 0c 41 c7 0e 08 41 c5   |..A...A...A...A.|
0x804b9c4:   0e 04 00 00 10 00 00 00  48 0b 00 00 a0 f0 ff ff   |........H.......|
0x804b9d4:   02 00 00 00 00 00 00 00  00 00 00 00 ??            |............?   |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 74 aa 04 08  19 00 00 00 0c cf 04 08   |....t...........|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff ff 00 ff ff   |................|
0x804d028:   f9 ff 00 00 ff ff ff ff  01 00 00 00 c4 ff 5f 50   |.............._P|
0x804d038:   e9 fc 00 00 ff ff ff ff  d9 6c 00 00 ff ff ff ff   |.........l......|
0x804d048:   4c ad 00 00 e2 e2 87 5c  01 00 ff ff 01 00 00 00   |L......\........|
0x804d058:   78 6a ??                                           |xj?             |
