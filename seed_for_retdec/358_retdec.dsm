;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 16:58:01
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 60 d0 ff ff               	lea eax, [ebx - 0x2fa0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 00 d0 ff ff               	lea eax, [ebx - 0x3000]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 e0 ac 04 08               	mov eax, 0x804ace0
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 58 e0 04 08                  	mov eax, 0x804e058
0x80483a5:   3d 58 e0 04 08                  	cmp eax, 0x804e058
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 58 e0 04 08                  	push 0x804e058
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 58 e0 04 08                  	mov eax, 0x804e058
0x80483e5:   2d 58 e0 04 08                  	sub eax, 0x804e058
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 58 e0 04 08                  	push 0x804e058
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 e0 04 08 00            	cmp byte ptr [0x804e060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 e0 04 08 01            	mov byte ptr [0x804e060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 99 2b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 85 2b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 80 d0 ff ff               	lea edx, [eax - 0x2f80]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 58 2b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 3a 2b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 12 2b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 e8 2a 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 bf 2a 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 7c 2a 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 3a 2a 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 e2 29 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 91 29 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 54 29 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 1d 29 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 fe 28 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 d4 28 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 a8 28 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 7d 28 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 34 28 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 ec 27 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 92 27 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 3f 27 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 00 27 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 ca 26 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 a8 26 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 5a 26 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 1e 26 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 95 25 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 63 25 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 33 25 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ee 24 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 af 24 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 7d 24 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 4e 24 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 30 24 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 08 24 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 e3 23 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 be 23 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 87 23 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 52 23 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 00 23 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 b5 22 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 7e 22 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 4d 22 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 2e 22 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 04 22 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 dc 21 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 b3 21 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 77 21 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 3c 21 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 e9 20 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 9d 20 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 65 20 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 36 20 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 22 20 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 0b 20 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 f6 1f 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 e0 1f 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 b9 1f 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 94 1f 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 55 1f 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 1c 1f 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 f0 1e 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 ca 1e 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 58 d1 ff ff               	fld dword ptr [eax - 0x2ea8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 58 d1 ff ff               	fld dword ptr [eax - 0x2ea8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 5c d1 ff ff               	fld dword ptr [eax - 0x2ea4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 88 1e 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 58 d1 ff ff               	fld dword ptr [eax - 0x2ea8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 58 d1 ff ff               	fld dword ptr [eax - 0x2ea8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 5c d1 ff ff               	fld dword ptr [eax - 0x2ea4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 46 1e 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 60 d1 ff ff               	fld dword ptr [eax - 0x2ea0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 64 d1 ff ff               	fld dword ptr [eax - 0x2e9c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 68 d1 ff ff               	fld dword ptr [eax - 0x2e98]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 04 1e 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 6c d1 ff ff               	fld dword ptr [eax - 0x2e94]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 70 d1 ff ff               	fld dword ptr [eax - 0x2e90]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 74 d1 ff ff               	fld dword ptr [eax - 0x2e8c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 8c 1d 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 78 d1 ff ff               	fld qword ptr [eax - 0x2e88]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 78 d1 ff ff               	fld qword ptr [eax - 0x2e88]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 80 d1 ff ff               	fld qword ptr [eax - 0x2e80]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 2f 1d 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 78 d1 ff ff               	fld qword ptr [eax - 0x2e88]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 78 d1 ff ff               	fld qword ptr [eax - 0x2e88]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 80 d1 ff ff               	fld qword ptr [eax - 0x2e80]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 d2 1c 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 88 d1 ff ff               	fld qword ptr [eax - 0x2e78]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 90 d1 ff ff               	fld qword ptr [eax - 0x2e70]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 98 d1 ff ff               	fld qword ptr [eax - 0x2e68]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 75 1c 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 a0 d1 ff ff               	fld qword ptr [eax - 0x2e60]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a8 d1 ff ff               	fld qword ptr [eax - 0x2e58]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 b0 d1 ff ff               	fld qword ptr [eax - 0x2e50]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 e5 1b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b8 d1 ff ff               	fld dword ptr [eax - 0x2e48]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 bc d1 ff ff               	fld dword ptr [eax - 0x2e44]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 81 1b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 10 1b 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 cd 1a 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 90 d0 ff ff               	lea eax, [ebx - 0x2f70]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 b4 d0 ff ff               	lea eax, [ebx - 0x2f4c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804977c
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 3c                        	sub esp, 0x3c
0x804962f:   e8 c7 19 00 00                  	call 0x804affb <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x804963d:   8b 4d 18                        	mov ecx, dword ptr [ebp + 0x18]
0x8049640:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049643:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049646:   89 75 c8                        	mov dword ptr [ebp - 0x38], esi
0x8049649:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804964c:   89 7d c4                        	mov dword ptr [ebp - 0x3c], edi
0x804964f:   8b 75 34                        	mov esi, dword ptr [ebp + 0x34]
0x8049652:   89 75 c0                        	mov dword ptr [ebp - 0x40], esi
0x8049655:   8b 7d 44                        	mov edi, dword ptr [ebp + 0x44]
0x8049658:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x804965b:   8b 75 48                        	mov esi, dword ptr [ebp + 0x48]
0x804965e:   89 75 b8                        	mov dword ptr [ebp - 0x48], esi
0x8049661:   8b 7d 4c                        	mov edi, dword ptr [ebp + 0x4c]
0x8049664:   8b 75 50                        	mov esi, dword ptr [ebp + 0x50]
0x8049667:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x804966b:   89 c8                           	mov eax, ecx
0x804966d:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x8049671:   89 d8                           	mov eax, ebx
0x8049673:   66 89 45 e8                     	mov word ptr [ebp - 0x18], ax
0x8049677:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804967b:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804967f:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049683:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049687:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x804968b:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x804968e:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049692:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x8049696:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x804969a:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x804969d:   89 f8                           	mov eax, edi
0x804969f:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496a3:   89 f0                           	mov eax, esi
0x80496a5:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496a9:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80496ac:   89 82 84 04 00 00               	mov dword ptr [edx + 0x484], eax
0x80496b2:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496b5:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x80496bb:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496be:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496c4:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x80496c8:   66 89 82 2c 00 00 00            	mov word ptr [edx + 0x2c], ax
0x80496cf:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x80496d3:   66 89 82 2e 00 00 00            	mov word ptr [edx + 0x2e], ax
0x80496da:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x80496dd:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x80496e3:   0f b7 45 e8                     	movzx eax, word ptr [ebp - 0x18]
0x80496e7:   66 89 82 88 04 00 00            	mov word ptr [edx + 0x488], ax
0x80496ee:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x80496f1:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x80496f7:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80496fb:   66 89 82 38 00 00 00            	mov word ptr [edx + 0x38], ax
0x8049702:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049706:   66 89 82 3c 00 00 00            	mov word ptr [edx + 0x3c], ax
0x804970d:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049710:   89 82 8c 04 00 00               	mov dword ptr [edx + 0x48c], eax
0x8049716:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x804971a:   88 82 3e 00 00 00               	mov byte ptr [edx + 0x3e], al
0x8049720:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049723:   89 82 40 00 00 00               	mov dword ptr [edx + 0x40], eax
0x8049729:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804972c:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049732:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x8049735:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804973b:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804973f:   66 89 82 90 04 00 00            	mov word ptr [edx + 0x490], ax
0x8049746:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x804974a:   88 82 4c 00 00 00               	mov byte ptr [edx + 0x4c], al
0x8049750:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x8049754:   66 89 82 4e 00 00 00            	mov word ptr [edx + 0x4e], ax
0x804975b:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x804975f:   66 89 82 50 00 00 00            	mov word ptr [edx + 0x50], ax
0x8049766:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049769:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x804976f:   b8 00 00 00 00                  	mov eax, 0
0x8049774:   83 c4 3c                        	add esp, 0x3c
0x8049777:   5b                              	pop ebx
0x8049778:   5e                              	pop esi
0x8049779:   5f                              	pop edi
0x804977a:   5d                              	pop ebp
0x804977b:   c3                              	ret 
; function: func_1 at 0x804977c -- 0x804ace0
0x804977c:   55                              	push ebp
0x804977d:   89 e5                           	mov ebp, esp
0x804977f:   57                              	push edi
0x8049780:   56                              	push esi
0x8049781:   53                              	push ebx
0x8049782:   81 ec 60 01 00 00               	sub esp, 0x160
0x8049788:   e8 6a 18 00 00                  	call 0x804aff7 <__x86.get_pc_thunk.ax>
0x804978d:   05 73 48 00 00                  	add eax, 0x4873
0x8049792:   c7 45 f0 00 00 00 00            	mov dword ptr [ebp - 0x10], 0
0x8049799:   c7 45 ec 14 2a 62 da            	mov dword ptr [ebp - 0x14], 0xda622a14
0x80497a0:   c7 45 e8 5c 40 28 86            	mov dword ptr [ebp - 0x18], 0x8628405c
0x80497a7:   66 c7 45 e6 16 cf               	mov word ptr [ebp - 0x1a], 0xcf16
0x80497ad:   66 c7 45 e4 ff ff               	mov word ptr [ebp - 0x1c], 0xffff
0x80497b3:   c7 45 e0 c2 c5 9f da            	mov dword ptr [ebp - 0x20], 0xda9fc5c2
0x80497ba:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x80497c0:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x80497c7:   66 c7 45 d6 06 00               	mov word ptr [ebp - 0x2a], 6
0x80497cd:   c6 85 77 ff ff ff ff            	mov byte ptr [ebp - 0x89], 0xff
0x80497d4:   66 c7 45 d4 eb 52               	mov word ptr [ebp - 0x2c], 0x52eb
0x80497da:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x80497e1:   c6 45 cf 43                     	mov byte ptr [ebp - 0x31], 0x43
0x80497e5:   c7 85 70 ff ff ff 02 00 00 00   	mov dword ptr [ebp - 0x90], 2
0x80497ef:   c7 45 c8 ff ff ff ff            	mov dword ptr [ebp - 0x38], 0xffffffff
0x80497f6:   c7 85 6c ff ff ff 11 92 53 b6   	mov dword ptr [ebp - 0x94], 0xb6539211
0x8049800:   c7 45 c4 02 00 00 00            	mov dword ptr [ebp - 0x3c], 2
0x8049807:   66 c7 45 c2 00 00               	mov word ptr [ebp - 0x3e], 0
0x804980d:   c6 85 6b ff ff ff ff            	mov byte ptr [ebp - 0x95], 0xff
0x8049814:   66 c7 45 c0 ff ff               	mov word ptr [ebp - 0x40], 0xffff
0x804981a:   66 c7 45 be b6 d1               	mov word ptr [ebp - 0x42], 0xd1b6
0x8049820:   c7 45 b8 4e 5e 41 ed            	mov dword ptr [ebp - 0x48], 0xed415e4e
0x8049827:   66 c7 45 b6 08 00               	mov word ptr [ebp - 0x4a], 8
0x804982d:   c7 45 b0 ff ff ff ff            	mov dword ptr [ebp - 0x50], 0xffffffff
0x8049834:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x804983b:   c7 45 a8 eb f5 21 10            	mov dword ptr [ebp - 0x58], 0x1021f5eb
0x8049842:   66 c7 45 a6 08 be               	mov word ptr [ebp - 0x5a], 0xbe08
0x8049848:   66 c7 85 68 ff ff ff e4 ee      	mov word ptr [ebp - 0x98], 0xeee4
0x8049851:   c7 85 64 ff ff ff fe 57 c7 9f   	mov dword ptr [ebp - 0x9c], 0x9fc757fe
0x804985b:   c6 45 a5 ff                     	mov byte ptr [ebp - 0x5b], 0xff
0x804985f:   c7 85 60 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xa0], 6
0x8049869:   66 c7 85 5e ff ff ff 00 00      	mov word ptr [ebp - 0xa2], 0
0x8049872:   c6 45 a4 00                     	mov byte ptr [ebp - 0x5c], 0
0x8049876:   c7 85 58 ff ff ff 8a 30 71 5f   	mov dword ptr [ebp - 0xa8], 0x5f71308a
0x8049880:   c6 85 57 ff ff ff 01            	mov byte ptr [ebp - 0xa9], 1
0x8049887:   66 c7 45 b6 02 00               	mov word ptr [ebp - 0x4a], 2
0x804988d:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x8049894:   66 c7 45 b6 00 00               	mov word ptr [ebp - 0x4a], 0
0x804989a:   e9 94 13 00 00                  	jmp 0x804ac33 <func_1+0x14b7>
0x804989f:   c7 45 a0 fa ff ff ff            	mov dword ptr [ebp - 0x60], 0xfffffffa
0x80498a6:   c7 45 9c 43 3e b1 f9            	mov dword ptr [ebp - 0x64], 0xf9b13e43
0x80498ad:   c7 45 98 a8 45 cf 5f            	mov dword ptr [ebp - 0x68], 0x5fcf45a8
0x80498b4:   66 c7 45 96 0e 6b               	mov word ptr [ebp - 0x6a], 0x6b0e
0x80498ba:   c7 85 50 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb0], 1
0x80498c4:   66 c7 45 94 2d ad               	mov word ptr [ebp - 0x6c], 0xad2d
0x80498ca:   c7 85 4c ff ff ff 05 00 00 00   	mov dword ptr [ebp - 0xb4], 5
0x80498d4:   66 c7 85 4a ff ff ff 8a 9a      	mov word ptr [ebp - 0xb6], 0x9a8a
0x80498dd:   66 c7 85 48 ff ff ff 7d 0a      	mov word ptr [ebp - 0xb8], 0xa7d
0x80498e6:   c6 85 47 ff ff ff ff            	mov byte ptr [ebp - 0xb9], 0xff
0x80498ed:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x80498f4:   e9 17 04 00 00                  	jmp 0x8049d10 <func_1+0x594>
0x80498f9:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049900:   c7 85 d8 fe ff ff 02 00 00 00   	mov dword ptr [ebp - 0x128], 2
0x804990a:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x8049911:   e9 a1 03 00 00                  	jmp 0x8049cb7 <func_1+0x53b>
0x8049916:   66 c7 85 d6 fe ff ff 00 00      	mov word ptr [ebp - 0x12a], 0
0x804991f:   c7 45 8c d6 b4 a5 32            	mov dword ptr [ebp - 0x74], 0x32a5b4d6
0x8049926:   66 c7 85 d4 fe ff ff 0b 55      	mov word ptr [ebp - 0x12c], 0x550b
0x804992f:   c7 85 d0 fe ff ff c7 d4 86 2c   	mov dword ptr [ebp - 0x130], 0x2c86d4c7
0x8049939:   c7 85 cc fe ff ff 75 a9 65 f0   	mov dword ptr [ebp - 0x134], 0xf065a975
0x8049943:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x804994a:   83 f0 01                        	xor eax, 1
0x804994d:   66 3d 2c 01                     	cmp ax, 0x12c
0x8049951:   0f 96 c0                        	setbe al
0x8049954:   0f b6 d0                        	movzx edx, al
0x8049957:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804995a:   0f b7 c0                        	movzx eax, ax
0x804995d:   0f af c2                        	imul eax, edx
0x8049960:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049963:   0f 9e c0                        	setle al
0x8049966:   0f b6 c0                        	movzx eax, al
0x8049969:   33 45 f0                        	xor eax, dword ptr [ebp - 0x10]
0x804996c:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x804996f:   85 c0                           	test eax, eax
0x8049971:   74 4b                           	je 0x80499be <func_1+0x242>
0x8049973:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049976:   66 21 45 e6                     	and word ptr [ebp - 0x1a], ax
0x804997a:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804997e:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049981:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049985:   83 c0 01                        	add eax, 1
0x8049988:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804998c:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804998f:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049992:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049996:   0f 94 c0                        	sete al
0x8049999:   0f b6 c0                        	movzx eax, al
0x804999c:   83 7d 8c 01                     	cmp dword ptr [ebp - 0x74], 1
0x80499a0:   0f 9f c2                        	setg dl
0x80499a3:   0f b6 ca                        	movzx ecx, dl
0x80499a6:   8b 55 f0                        	mov edx, dword ptr [ebp - 0x10]
0x80499a9:   0f be d2                        	movsx edx, dl
0x80499ac:   0f af d1                        	imul edx, ecx
0x80499af:   89 d1                           	mov ecx, edx
0x80499b1:   0f bf 55 e6                     	movsx edx, word ptr [ebp - 0x1a]
0x80499b5:   01 ca                           	add edx, ecx
0x80499b7:   21 d0                           	and eax, edx
0x80499b9:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x80499bc:   eb 28                           	jmp 0x80499e6 <func_1+0x26a>
0x80499be:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x80499c2:   0f 85 fb 02 00 00               	jne 0x8049cc3 <func_1+0x547>
0x80499c8:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x80499cc:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x80499cf:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499d2:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x80499d5:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x80499d8:   83 f0 07                        	xor eax, 7
0x80499db:   0f b6 c0                        	movzx eax, al
0x80499de:   05 ec 00 00 00                  	add eax, 0xec
0x80499e3:   09 45 f0                        	or dword ptr [ebp - 0x10], eax
0x80499e6:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x80499e9:   01 45 f0                        	add dword ptr [ebp - 0x10], eax
0x80499ec:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x80499ef:   89 c1                           	mov ecx, eax
0x80499f1:   66 83 7d e6 00                  	cmp word ptr [ebp - 0x1a], 0
0x80499f6:   0f 94 c0                        	sete al
0x80499f9:   0f b6 c0                        	movzx eax, al
0x80499fc:   66 21 45 de                     	and word ptr [ebp - 0x22], ax
0x8049a00:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049a04:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x8049a07:   01 d0                           	add eax, edx
0x8049a09:   29 c1                           	sub ecx, eax
0x8049a0b:   89 c8                           	mov eax, ecx
0x8049a0d:   98                              	cwde 
0x8049a0e:   69 c0 44 37 00 00               	imul eax, eax, 0x3744
0x8049a14:   f7 d0                           	not eax
0x8049a16:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049a19:   7c 04                           	jl 0x8049a1f <func_1+0x2a3>
0x8049a1b:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049a1f:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049a22:   83 c8 01                        	or eax, 1
0x8049a25:   89 c2                           	mov edx, eax
0x8049a27:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049a2a:   39 c2                           	cmp edx, eax
0x8049a2c:   0f 85 23 01 00 00               	jne 0x8049b55 <func_1+0x3d9>
0x8049a32:   c7 85 b0 fe ff ff 69 9b 0e 64   	mov dword ptr [ebp - 0x150], 0x640e9b69
0x8049a3c:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x8049a40:   84 c0                           	test al, al
0x8049a42:   75 10                           	jne 0x8049a54 <func_1+0x2d8>
0x8049a44:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x8049a4b:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049a4e:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049a51:   21 45 90                        	and dword ptr [ebp - 0x70], eax
0x8049a54:   b8 00 00 00 00                  	mov eax, 0
0x8049a59:   89 c1                           	mov ecx, eax
0x8049a5b:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x8049a62:   89 c2                           	mov edx, eax
0x8049a64:   0f b6 c1                        	movzx eax, cl
0x8049a67:   f6 f2                           	div dl
0x8049a69:   0f b6 c4                        	movzx eax, ah
0x8049a6c:   0f b6 c0                        	movzx eax, al
0x8049a6f:   f7 d0                           	not eax
0x8049a71:   33 45 e0                        	xor eax, dword ptr [ebp - 0x20]
0x8049a74:   89 c2                           	mov edx, eax
0x8049a76:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a79:   39 c2                           	cmp edx, eax
0x8049a7b:   0f 94 c0                        	sete al
0x8049a7e:   0f b6 c0                        	movzx eax, al
0x8049a81:   31 45 f0                        	xor dword ptr [ebp - 0x10], eax
0x8049a84:   c7 45 ac 00 00 00 00            	mov dword ptr [ebp - 0x54], 0
0x8049a8b:   eb 5b                           	jmp 0x8049ae8 <func_1+0x36c>
0x8049a8d:   c7 85 a8 fe ff ff 3b 7a 67 08   	mov dword ptr [ebp - 0x158], 0x8677a3b
0x8049a97:   c7 85 a4 fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x15c], 6
0x8049aa1:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x8049aa7:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x8049aab:   66 c7 45 d4 01 00               	mov word ptr [ebp - 0x2c], 1
0x8049ab1:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x8049ab8:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049abc:   0f be c0                        	movsx eax, al
0x8049abf:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049ac2:   0f be fa                        	movsx edi, dl
0x8049ac5:   99                              	cdq 
0x8049ac6:   f7 ff                           	idiv edi
0x8049ac8:   0f be c0                        	movsx eax, al
0x8049acb:   8b 55 90                        	mov edx, dword ptr [ebp - 0x70]
0x8049ace:   0f be ca                        	movsx ecx, dl
0x8049ad1:   99                              	cdq 
0x8049ad2:   f7 f9                           	idiv ecx
0x8049ad4:   89 d0                           	mov eax, edx
0x8049ad6:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049ad9:   0f b7 45 a6                     	movzx eax, word ptr [ebp - 0x5a]
0x8049add:   83 c0 01                        	add eax, 1
0x8049ae0:   66 89 45 a6                     	mov word ptr [ebp - 0x5a], ax
0x8049ae4:   83 6d ac 01                     	sub dword ptr [ebp - 0x54], 1
0x8049ae8:   83 7d ac e6                     	cmp dword ptr [ebp - 0x54], -0x1a
0x8049aec:   7d 9f                           	jge 0x8049a8d <func_1+0x311>
0x8049aee:   0f b7 85 d6 fe ff ff            	movzx eax, word ptr [ebp - 0x12a]
0x8049af5:   0f be f8                        	movsx edi, al
0x8049af8:   b8 24 00 00 00                  	mov eax, 0x24
0x8049afd:   99                              	cdq 
0x8049afe:   f7 ff                           	idiv edi
0x8049b00:   8b 7d 90                        	mov edi, dword ptr [ebp - 0x70]
0x8049b03:   ba 00 00 00 00                  	mov edx, 0
0x8049b08:   f7 f7                           	div edi
0x8049b0a:   0f b7 c0                        	movzx eax, ax
0x8049b0d:   c1 e0 0d                        	shl eax, 0xd
0x8049b10:   39 85 d0 fe ff ff               	cmp dword ptr [ebp - 0x130], eax
0x8049b16:   0f 93 c0                        	setae al
0x8049b19:   0f b6 c0                        	movzx eax, al
0x8049b1c:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049b1f:   66 c7 45 d4 00 00               	mov word ptr [ebp - 0x2c], 0
0x8049b25:   eb 22                           	jmp 0x8049b49 <func_1+0x3cd>
0x8049b27:   c7 85 ac fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x154], 0
0x8049b31:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x8049b38:   0f 85 6d 01 00 00               	jne 0x8049cab <func_1+0x52f>
0x8049b3e:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049b42:   83 e8 01                        	sub eax, 1
0x8049b45:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x8049b49:   66 83 7d d4 f9                  	cmp word ptr [ebp - 0x2c], -7
0x8049b4e:   7d d7                           	jge 0x8049b27 <func_1+0x3ab>
0x8049b50:   e9 57 01 00 00                  	jmp 0x8049cac <func_1+0x530>
0x8049b55:   c7 85 c8 fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x138], 6
0x8049b5f:   c7 85 c4 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x13c], 4
0x8049b69:   c7 85 c0 fe ff ff 05 af 9c e4   	mov dword ptr [ebp - 0x140], 0xe49caf05
0x8049b73:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x8049b77:   74 05                           	je 0x8049b7e <func_1+0x402>
0x8049b79:   e9 0f fd ff ff                  	jmp 0x804988d <func_1+0x111>
0x8049b7e:   81 b5 c8 fe ff ff 27 d4 9b 0b   	xor dword ptr [ebp - 0x138], 0xb9bd427
0x8049b88:   66 81 75 d6 de d3               	xor word ptr [ebp - 0x2a], 0xd3de
0x8049b8e:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x8049b93:   75 13                           	jne 0x8049ba8 <func_1+0x42c>
0x8049b95:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049b98:   0f b6 c0                        	movzx eax, al
0x8049b9b:   ba 31 00 00 00                  	mov edx, 0x31
0x8049ba0:   89 c1                           	mov ecx, eax
0x8049ba2:   d3 fa                           	sar edx, cl
0x8049ba4:   89 d0                           	mov eax, edx
0x8049ba6:   85 c0                           	test eax, eax
0x8049ba8:   66 c7 85 be fe ff ff 86 68      	mov word ptr [ebp - 0x142], 0x6886
0x8049bb1:   c7 85 b8 fe ff ff 05 00 00 00   	mov dword ptr [ebp - 0x148], 5
0x8049bbb:   c7 85 b4 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x14c], 1
0x8049bc5:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049bc8:   21 85 c4 fe ff ff               	and dword ptr [ebp - 0x13c], eax
0x8049bce:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x8049bd4:   98                              	cwde 
0x8049bd5:   0f bf 8d be fe ff ff            	movsx ecx, word ptr [ebp - 0x142]
0x8049bdc:   99                              	cdq 
0x8049bdd:   f7 f9                           	idiv ecx
0x8049bdf:   89 d0                           	mov eax, edx
0x8049be1:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x8049be4:   0f 95 c0                        	setne al
0x8049be7:   0f b6 d0                        	movzx edx, al
0x8049bea:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049bee:   0f b7 c0                        	movzx eax, ax
0x8049bf1:   0f af c2                        	imul eax, edx
0x8049bf4:   39 45 f0                        	cmp dword ptr [ebp - 0x10], eax
0x8049bf7:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049bfb:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049bfe:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049c01:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049c07:   83 ad 70 ff ff ff 01            	sub dword ptr [ebp - 0x90], 1
0x8049c0e:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049c11:   0d 48 16 c2 80                  	or eax, 0x80c21648
0x8049c16:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049c19:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x8049c1d:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x8049c21:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x8049c28:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049c2c:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x8049c32:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x8049c36:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x8049c3c:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x8049c40:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x8049c46:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x8049c4a:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x8049c50:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x8049c54:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x8049c58:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049c5c:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049c5f:   52                              	push edx
0x8049c60:   53                              	push ebx
0x8049c61:   57                              	push edi
0x8049c62:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x8049c68:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049c6b:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049c6e:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049c74:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x8049c7a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049c7d:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x8049c83:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x8049c89:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049c8c:   56                              	push esi
0x8049c8d:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049c90:   51                              	push ecx
0x8049c91:   50                              	push eax
0x8049c92:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049c95:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049c98:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x8049c9b:   e8 86 f9 ff ff                  	call 0x8049626 <set_var>
0x8049ca0:   83 c4 50                        	add esp, 0x50
0x8049ca3:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049ca6:   e9 2d 10 00 00                  	jmp 0x804acd8 <func_1+0x155c>
0x8049cab:   90                              	nop 
0x8049cac:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x8049cb3:   83 6d ec 05                     	sub dword ptr [ebp - 0x14], 5
0x8049cb7:   83 7d ec fb                     	cmp dword ptr [ebp - 0x14], -5
0x8049cbb:   0f 8d 55 fc ff ff               	jge 0x8049916 <func_1+0x19a>
0x8049cc1:   eb 01                           	jmp 0x8049cc4 <func_1+0x548>
0x8049cc3:   90                              	nop 
0x8049cc4:   83 45 c8 01                     	add dword ptr [ebp - 0x38], 1
0x8049cc8:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049ccb:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049cce:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049cd2:   33 85 d8 fe ff ff               	xor eax, dword ptr [ebp - 0x128]
0x8049cd8:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049cdb:   0f 9f c0                        	setg al
0x8049cde:   0f b6 c0                        	movzx eax, al
0x8049ce1:   39 45 90                        	cmp dword ptr [ebp - 0x70], eax
0x8049ce4:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x8049ce8:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ceb:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x8049cee:   0f b7 7d d6                     	movzx edi, word ptr [ebp - 0x2a]
0x8049cf2:   ba 00 00 00 00                  	mov edx, 0
0x8049cf7:   f7 f7                           	div edi
0x8049cf9:   33 45 e8                        	xor eax, dword ptr [ebp - 0x18]
0x8049cfc:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049d02:   0f 97 c0                        	seta al
0x8049d05:   0f b6 c0                        	movzx eax, al
0x8049d08:   66 89 45 96                     	mov word ptr [ebp - 0x6a], ax
0x8049d0c:   83 6d b0 09                     	sub dword ptr [ebp - 0x50], 9
0x8049d10:   83 7d b0 ed                     	cmp dword ptr [ebp - 0x50], -0x13
0x8049d14:   0f 84 df fb ff ff               	je 0x80498f9 <func_1+0x17d>
0x8049d1a:   0f be 5d cf                     	movsx ebx, byte ptr [ebp - 0x31]
0x8049d1e:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049d22:   0f be c0                        	movsx eax, al
0x8049d25:   0f be 55 cf                     	movsx edx, byte ptr [ebp - 0x31]
0x8049d29:   be 01 00 00 00                  	mov esi, 1
0x8049d2e:   89 d1                           	mov ecx, edx
0x8049d30:   d3 e6                           	shl esi, cl
0x8049d32:   89 f2                           	mov edx, esi
0x8049d34:   0f be ca                        	movsx ecx, dl
0x8049d37:   99                              	cdq 
0x8049d38:   f7 f9                           	idiv ecx
0x8049d3a:   89 d0                           	mov eax, edx
0x8049d3c:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049d3f:   0f 94 c0                        	sete al
0x8049d42:   0f b6 d0                        	movzx edx, al
0x8049d45:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x8049d49:   39 c2                           	cmp edx, eax
0x8049d4b:   0f 9c c0                        	setl al
0x8049d4e:   0f b6 c0                        	movzx eax, al
0x8049d51:   39 c3                           	cmp ebx, eax
0x8049d53:   0f 9f c0                        	setg al
0x8049d56:   0f b6 d0                        	movzx edx, al
0x8049d59:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049d5c:   0f b7 c0                        	movzx eax, ax
0x8049d5f:   0f af c2                        	imul eax, edx
0x8049d62:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049d65:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049d68:   66 09 45 e6                     	or word ptr [ebp - 0x1a], ax
0x8049d6c:   0f bf 55 e6                     	movsx edx, word ptr [ebp - 0x1a]
0x8049d70:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049d73:   98                              	cwde 
0x8049d74:   89 c1                           	mov ecx, eax
0x8049d76:   d3 fa                           	sar edx, cl
0x8049d78:   89 d0                           	mov eax, edx
0x8049d7a:   85 c0                           	test eax, eax
0x8049d7c:   0f 84 da 00 00 00               	je 0x8049e5c <func_1+0x6e0>
0x8049d82:   c7 85 18 ff ff ff da 7b 3c 78   	mov dword ptr [ebp - 0xe8], 0x783c7bda
0x8049d8c:   c7 85 14 ff ff ff fa ff ff ff   	mov dword ptr [ebp - 0xec], 0xfffffffa
0x8049d96:   c6 85 13 ff ff ff f7            	mov byte ptr [ebp - 0xed], 0xf7
0x8049d9d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049da0:   0f be c0                        	movsx eax, al
0x8049da3:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x8049da8:   89 c1                           	mov ecx, eax
0x8049daa:   d3 e2                           	shl edx, cl
0x8049dac:   89 d0                           	mov eax, edx
0x8049dae:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049db1:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x8049db8:   83 c8 01                        	or eax, 1
0x8049dbb:   0f b6 c0                        	movzx eax, al
0x8049dbe:   2d ca c7 13 11                  	sub eax, 0x1113c7ca
0x8049dc3:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x8049dc6:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049dcc:   0f b6 c0                        	movzx eax, al
0x8049dcf:   0f b6 55 cf                     	movzx edx, byte ptr [ebp - 0x31]
0x8049dd3:   0f b6 fa                        	movzx edi, dl
0x8049dd6:   99                              	cdq 
0x8049dd7:   f7 ff                           	idiv edi
0x8049dd9:   89 c2                           	mov edx, eax
0x8049ddb:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049dde:   31 d0                           	xor eax, edx
0x8049de0:   0f bf d0                        	movsx edx, ax
0x8049de3:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049de6:   98                              	cwde 
0x8049de7:   89 c1                           	mov ecx, eax
0x8049de9:   d3 e2                           	shl edx, cl
0x8049deb:   89 d0                           	mov eax, edx
0x8049ded:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049df3:   8b 85 14 ff ff ff               	mov eax, dword ptr [ebp - 0xec]
0x8049df9:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049dfc:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049dff:   0f b6 c0                        	movzx eax, al
0x8049e02:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049e05:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049e08:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049e0b:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049e0e:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e11:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x8049e15:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049e18:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049e1b:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049e1e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e21:   83 f8 f6                        	cmp eax, -0xa
0x8049e24:   0f 97 c0                        	seta al
0x8049e27:   0f b6 c0                        	movzx eax, al
0x8049e2a:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x8049e30:   01 d0                           	add eax, edx
0x8049e32:   f7 d8                           	neg eax
0x8049e34:   66 0f af 45 96                  	imul ax, word ptr [ebp - 0x6a]
0x8049e39:   0f b7 d0                        	movzx edx, ax
0x8049e3c:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049e42:   0f b7 c0                        	movzx eax, ax
0x8049e45:   01 d0                           	add eax, edx
0x8049e47:   98                              	cwde 
0x8049e48:   8b 55 e0                        	mov edx, dword ptr [ebp - 0x20]
0x8049e4b:   0f bf da                        	movsx ebx, dx
0x8049e4e:   99                              	cdq 
0x8049e4f:   f7 fb                           	idiv ebx
0x8049e51:   89 85 18 ff ff ff               	mov dword ptr [ebp - 0xe8], eax
0x8049e57:   e9 8d 07 00 00                  	jmp 0x804a5e9 <func_1+0xe6d>
0x8049e5c:   66 c7 45 8a 02 00               	mov word ptr [ebp - 0x76], 2
0x8049e62:   c7 45 84 03 00 00 00            	mov dword ptr [ebp - 0x7c], 3
0x8049e69:   c7 85 40 ff ff ff a1 3d 78 78   	mov dword ptr [ebp - 0xc0], 0x78783da1
0x8049e73:   c7 85 3c ff ff ff 3c c5 ba 9c   	mov dword ptr [ebp - 0xc4], 0x9cbac53c
0x8049e7d:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049e80:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x8049e86:   85 c0                           	test eax, eax
0x8049e88:   74 0f                           	je 0x8049e99 <func_1+0x71d>
0x8049e8a:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x8049e8e:   0f 84 d5 02 00 00               	je 0x804a169 <func_1+0x9ed>
0x8049e94:   e9 f4 f9 ff ff                  	jmp 0x804988d <func_1+0x111>
0x8049e99:   c6 85 3b ff ff ff 07            	mov byte ptr [ebp - 0xc5], 7
0x8049ea0:   c7 45 80 36 b4 a3 95            	mov dword ptr [ebp - 0x80], 0x95a3b436
0x8049ea7:   c7 85 34 ff ff ff b5 26 b3 c0   	mov dword ptr [ebp - 0xcc], 0xc0b326b5
0x8049eb1:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x8049eb6:   0f 85 84 0d 00 00               	jne 0x804ac40 <func_1+0x14c4>
0x8049ebc:   66 c7 45 8a 0e 00               	mov word ptr [ebp - 0x76], 0xe
0x8049ec2:   e9 83 02 00 00                  	jmp 0x804a14a <func_1+0x9ce>
0x8049ec7:   c6 85 33 ff ff ff bb            	mov byte ptr [ebp - 0xcd], 0xbb
0x8049ece:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049ed5:   eb 0a                           	jmp 0x8049ee1 <func_1+0x765>
0x8049ed7:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x8049edb:   75 0c                           	jne 0x8049ee9 <func_1+0x76d>
0x8049edd:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x8049ee1:   83 7d d0 3a                     	cmp dword ptr [ebp - 0x30], 0x3a
0x8049ee5:   74 f0                           	je 0x8049ed7 <func_1+0x75b>
0x8049ee7:   eb 01                           	jmp 0x8049eea <func_1+0x76e>
0x8049ee9:   90                              	nop 
0x8049eea:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x8049eee:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049ef1:   66 83 45 c2 01                  	add word ptr [ebp - 0x3e], 1
0x8049ef6:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x8049efa:   0f b7 8d 68 ff ff ff            	movzx ecx, word ptr [ebp - 0x98]
0x8049f01:   0f be 95 3b ff ff ff            	movsx edx, byte ptr [ebp - 0xc5]
0x8049f08:   21 ca                           	and edx, ecx
0x8049f0a:   39 d0                           	cmp eax, edx
0x8049f0c:   0f 96 c0                        	setbe al
0x8049f0f:   0f b6 c0                        	movzx eax, al
0x8049f12:   0b 45 c4                        	or eax, dword ptr [ebp - 0x3c]
0x8049f15:   89 c2                           	mov edx, eax
0x8049f17:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x8049f1b:   21 d0                           	and eax, edx
0x8049f1d:   85 c0                           	test eax, eax
0x8049f1f:   75 09                           	jne 0x8049f2a <func_1+0x7ae>
0x8049f21:   80 bd 33 ff ff ff 00            	cmp byte ptr [ebp - 0xcd], 0
0x8049f28:   74 07                           	je 0x8049f31 <func_1+0x7b5>
0x8049f2a:   b8 01 00 00 00                  	mov eax, 1
0x8049f2f:   eb 05                           	jmp 0x8049f36 <func_1+0x7ba>
0x8049f31:   b8 00 00 00 00                  	mov eax, 0
0x8049f36:   0f b7 d0                        	movzx edx, ax
0x8049f39:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049f3c:   0f b7 c0                        	movzx eax, ax
0x8049f3f:   89 c1                           	mov ecx, eax
0x8049f41:   d3 e2                           	shl edx, cl
0x8049f43:   89 d0                           	mov eax, edx
0x8049f45:   09 45 80                        	or dword ptr [ebp - 0x80], eax
0x8049f48:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049f4b:   23 45 e8                        	and eax, dword ptr [ebp - 0x18]
0x8049f4e:   83 e0 1d                        	and eax, 0x1d
0x8049f51:   89 85 34 ff ff ff               	mov dword ptr [ebp - 0xcc], eax
0x8049f57:   66 0f be 85 3b ff ff ff         	movsx ax, byte ptr [ebp - 0xc5]
0x8049f5f:   66 3d ae a1                     	cmp ax, 0xa1ae
0x8049f63:   0f 97 c0                        	seta al
0x8049f66:   0f b6 d0                        	movzx edx, al
0x8049f69:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x8049f6d:   39 c2                           	cmp edx, eax
0x8049f6f:   0f 9f c0                        	setg al
0x8049f72:   0f b6 d0                        	movzx edx, al
0x8049f75:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x8049f79:   39 c2                           	cmp edx, eax
0x8049f7b:   0f 95 c0                        	setne al
0x8049f7e:   0f b6 d0                        	movzx edx, al
0x8049f81:   0f be 85 3b ff ff ff            	movsx eax, byte ptr [ebp - 0xc5]
0x8049f88:   39 c2                           	cmp edx, eax
0x8049f8a:   0f 9d c0                        	setge al
0x8049f8d:   0f b6 c0                        	movzx eax, al
0x8049f90:   8b 55 d0                        	mov edx, dword ptr [ebp - 0x30]
0x8049f93:   0f b7 ca                        	movzx ecx, dx
0x8049f96:   99                              	cdq 
0x8049f97:   f7 f9                           	idiv ecx
0x8049f99:   89 d0                           	mov eax, edx
0x8049f9b:   0f b6 d0                        	movzx edx, al
0x8049f9e:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x8049fa5:   0f b6 c0                        	movzx eax, al
0x8049fa8:   0f af c2                        	imul eax, edx
0x8049fab:   85 c0                           	test eax, eax
0x8049fad:   74 62                           	je 0x804a011 <func_1+0x895>
0x8049faf:   66 c7 85 30 ff ff ff 39 38      	mov word ptr [ebp - 0xd0], 0x3839
0x8049fb8:   66 81 bd 30 ff ff ff d3 00      	cmp word ptr [ebp - 0xd0], 0xd3
0x8049fc1:   0f 96 c0                        	setbe al
0x8049fc4:   0f b6 d0                        	movzx edx, al
0x8049fc7:   0f b7 85 30 ff ff ff            	movzx eax, word ptr [ebp - 0xd0]
0x8049fce:   39 c2                           	cmp edx, eax
0x8049fd0:   0f 95 c0                        	setne al
0x8049fd3:   0f b6 c0                        	movzx eax, al
0x8049fd6:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049fd9:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x8049fe0:   66 21 45 d4                     	and word ptr [ebp - 0x2c], ax
0x8049fe4:   80 bd 3b ff ff ff 00            	cmp byte ptr [ebp - 0xc5], 0
0x8049feb:   0f 95 c0                        	setne al
0x8049fee:   0f b6 c0                        	movzx eax, al
0x8049ff1:   66 23 45 d4                     	and ax, word ptr [ebp - 0x2c]
0x8049ff5:   66 c1 e8 07                     	shr ax, 7
0x8049ff9:   0f b7 c0                        	movzx eax, ax
0x8049ffc:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x8049fff:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804a006:   0f 84 ab 00 00 00               	je 0x804a0b7 <func_1+0x93b>
0x804a00c:   e9 96 00 00 00                  	jmp 0x804a0a7 <func_1+0x92b>
0x804a011:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804a015:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804a019:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804a020:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a024:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a02a:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x804a02e:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a034:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x804a038:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804a03e:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a042:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a048:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a04c:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804a050:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a054:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a057:   52                              	push edx
0x804a058:   53                              	push ebx
0x804a059:   57                              	push edi
0x804a05a:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a060:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a063:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a066:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a06c:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a072:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a075:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a07b:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a081:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a084:   56                              	push esi
0x804a085:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a088:   51                              	push ecx
0x804a089:   50                              	push eax
0x804a08a:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a08d:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a090:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a093:   e8 8e f5 ff ff                  	call 0x8049626 <set_var>
0x804a098:   83 c4 50                        	add esp, 0x50
0x804a09b:   0f b6 85 33 ff ff ff            	movzx eax, byte ptr [ebp - 0xcd]
0x804a0a2:   e9 31 0c 00 00                  	jmp 0x804acd8 <func_1+0x155c>
0x804a0a7:   0f b7 45 8a                     	movzx eax, word ptr [ebp - 0x76]
0x804a0ab:   83 c0 01                        	add eax, 1
0x804a0ae:   66 89 45 8a                     	mov word ptr [ebp - 0x76], ax
0x804a0b2:   e9 93 00 00 00                  	jmp 0x804a14a <func_1+0x9ce>
0x804a0b7:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804a0bb:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804a0bf:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804a0c6:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a0ca:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a0d0:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x804a0d4:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a0da:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x804a0de:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804a0e4:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a0e8:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a0ee:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a0f2:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804a0f6:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a0fa:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a0fd:   52                              	push edx
0x804a0fe:   53                              	push ebx
0x804a0ff:   57                              	push edi
0x804a100:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a106:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a109:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a10c:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a112:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a118:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a11b:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a121:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a127:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a12a:   56                              	push esi
0x804a12b:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a12e:   51                              	push ecx
0x804a12f:   50                              	push eax
0x804a130:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a133:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a136:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a139:   e8 e8 f4 ff ff                  	call 0x8049626 <set_var>
0x804a13e:   83 c4 50                        	add esp, 0x50
0x804a141:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a145:   e9 8e 0b 00 00                  	jmp 0x804acd8 <func_1+0x155c>
0x804a14a:   66 83 7d 8a 10                  	cmp word ptr [ebp - 0x76], 0x10
0x804a14f:   0f 84 72 fd ff ff               	je 0x8049ec7 <func_1+0x74b>
0x804a155:   66 83 7d d4 00                  	cmp word ptr [ebp - 0x2c], 0
0x804a15a:   0f 85 ca 0a 00 00               	jne 0x804ac2a <func_1+0x14ae>
0x804a160:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a166:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a169:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x804a16d:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a170:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a176:   83 bd 40 ff ff ff 00            	cmp dword ptr [ebp - 0xc0], 0
0x804a17d:   74 07                           	je 0x804a186 <func_1+0xa0a>
0x804a17f:   b8 01 00 00 00                  	mov eax, 1
0x804a184:   eb 05                           	jmp 0x804a18b <func_1+0xa0f>
0x804a186:   b8 00 00 00 00                  	mov eax, 0
0x804a18b:   89 85 3c ff ff ff               	mov dword ptr [ebp - 0xc4], eax
0x804a191:   80 7d a5 00                     	cmp byte ptr [ebp - 0x5b], 0
0x804a195:   0f 94 c0                        	sete al
0x804a198:   0f b6 d0                        	movzx edx, al
0x804a19b:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a19f:   39 c2                           	cmp edx, eax
0x804a1a1:   0f 9c c0                        	setl al
0x804a1a4:   0f b6 c0                        	movzx eax, al
0x804a1a7:   09 45 b0                        	or dword ptr [ebp - 0x50], eax
0x804a1aa:   b8 01 00 00 00                  	mov eax, 1
0x804a1af:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a1b2:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a1b5:   3c ff                           	cmp al, 0xff
0x804a1b7:   75 06                           	jne 0x804a1bf <func_1+0xa43>
0x804a1b9:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x804a1bd:   74 07                           	je 0x804a1c6 <func_1+0xa4a>
0x804a1bf:   ba 01 00 00 00                  	mov edx, 1
0x804a1c4:   eb 05                           	jmp 0x804a1cb <func_1+0xa4f>
0x804a1c6:   ba 00 00 00 00                  	mov edx, 0
0x804a1cb:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804a1cf:   39 c2                           	cmp edx, eax
0x804a1d1:   0f 9d c0                        	setge al
0x804a1d4:   0f b6 d0                        	movzx edx, al
0x804a1d7:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a1db:   21 d0                           	and eax, edx
0x804a1dd:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a1e0:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a1e3:   3d 9a ae 25 c4                  	cmp eax, 0xc425ae9a
0x804a1e8:   0f 97 c0                        	seta al
0x804a1eb:   0f b6 c0                        	movzx eax, al
0x804a1ee:   39 45 a8                        	cmp dword ptr [ebp - 0x58], eax
0x804a1f1:   0f 8c 64 02 00 00               	jl 0x804a45b <func_1+0xcdf>
0x804a1f7:   66 c7 85 2c ff ff ff ce a9      	mov word ptr [ebp - 0xd4], 0xa9ce
0x804a200:   c6 85 2b ff ff ff 1e            	mov byte ptr [ebp - 0xd5], 0x1e
0x804a207:   0f b7 85 2c ff ff ff            	movzx eax, word ptr [ebp - 0xd4]
0x804a20e:   66 89 45 d6                     	mov word ptr [ebp - 0x2a], ax
0x804a212:   b8 00 c8 ff ff                  	mov eax, 0xffffc800
0x804a217:   ba 00 00 00 00                  	mov edx, 0
0x804a21c:   66 f7 75 d6                     	div word ptr [ebp - 0x2a]
0x804a220:   0f b7 c0                        	movzx eax, ax
0x804a223:   09 45 ec                        	or dword ptr [ebp - 0x14], eax
0x804a226:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a229:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a22c:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a230:   0f 85 f7 09 00 00               	jne 0x804ac2d <func_1+0x14b1>
0x804a236:   c6 45 a5 00                     	mov byte ptr [ebp - 0x5b], 0
0x804a23a:   e9 fd 01 00 00                  	jmp 0x804a43c <func_1+0xcc0>
0x804a23f:   66 c7 85 28 ff ff ff 54 81      	mov word ptr [ebp - 0xd8], 0x8154
0x804a248:   c7 85 24 ff ff ff 2b 9d 91 e7   	mov dword ptr [ebp - 0xdc], 0xe7919d2b
0x804a252:   c7 85 20 ff ff ff 19 57 2c 46   	mov dword ptr [ebp - 0xe0], 0x462c5719
0x804a25c:   66 c7 85 1e ff ff ff 77 ef      	mov word ptr [ebp - 0xe2], 0xef77
0x804a265:   81 8d 24 ff ff ff ca 6e 00 00   	or dword ptr [ebp - 0xdc], 0x6eca
0x804a26f:   66 83 7d d4 00                  	cmp word ptr [ebp - 0x2c], 0
0x804a274:   0f 95 c0                        	setne al
0x804a277:   0f b6 c0                        	movzx eax, al
0x804a27a:   0b 85 6c ff ff ff               	or eax, dword ptr [ebp - 0x94]
0x804a280:   89 c2                           	mov edx, eax
0x804a282:   0f bf 45 d4                     	movsx eax, word ptr [ebp - 0x2c]
0x804a286:   39 c2                           	cmp edx, eax
0x804a288:   0f 95 c0                        	setne al
0x804a28b:   0f b6 c0                        	movzx eax, al
0x804a28e:   31 85 20 ff ff ff               	xor dword ptr [ebp - 0xe0], eax
0x804a294:   0f b6 85 2b ff ff ff            	movzx eax, byte ptr [ebp - 0xd5]
0x804a29b:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a29e:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a2a2:   75 06                           	jne 0x804a2aa <func_1+0xb2e>
0x804a2a4:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x804a2a8:   74 07                           	je 0x804a2b1 <func_1+0xb35>
0x804a2aa:   ba 01 00 00 00                  	mov edx, 1
0x804a2af:   eb 05                           	jmp 0x804a2b6 <func_1+0xb3a>
0x804a2b1:   ba 00 00 00 00                  	mov edx, 0
0x804a2b6:   0f b6 45 a5                     	movzx eax, byte ptr [ebp - 0x5b]
0x804a2ba:   39 c2                           	cmp edx, eax
0x804a2bc:   0f 95 c0                        	setne al
0x804a2bf:   0f b6 c0                        	movzx eax, al
0x804a2c2:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a2c5:   66 83 bd 28 ff ff ff 00         	cmp word ptr [ebp - 0xd8], 0
0x804a2cd:   0f 84 96 00 00 00               	je 0x804a369 <func_1+0xbed>
0x804a2d3:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x804a2d7:   74 05                           	je 0x804a2de <func_1+0xb62>
0x804a2d9:   e9 af f5 ff ff                  	jmp 0x804988d <func_1+0x111>
0x804a2de:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a2e1:   3b 45 84                        	cmp eax, dword ptr [ebp - 0x7c]
0x804a2e4:   0f 9c c0                        	setl al
0x804a2e7:   0f b6 d0                        	movzx edx, al
0x804a2ea:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a2ee:   39 c2                           	cmp edx, eax
0x804a2f0:   0f 95 c0                        	setne al
0x804a2f3:   0f b6 d0                        	movzx edx, al
0x804a2f6:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804a2fd:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x804a300:   3d b4 56 45 8e                  	cmp eax, 0x8e4556b4
0x804a305:   0f 97 c0                        	seta al
0x804a308:   0f b6 c0                        	movzx eax, al
0x804a30b:   39 c2                           	cmp edx, eax
0x804a30d:   0f 9d c0                        	setge al
0x804a310:   0f b6 d0                        	movzx edx, al
0x804a313:   0f bf 85 2c ff ff ff            	movsx eax, word ptr [ebp - 0xd4]
0x804a31a:   39 c2                           	cmp edx, eax
0x804a31c:   0f 9f c0                        	setg al
0x804a31f:   0f b6 d0                        	movzx edx, al
0x804a322:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804a326:   89 c1                           	mov ecx, eax
0x804a328:   d3 e2                           	shl edx, cl
0x804a32a:   89 d0                           	mov eax, edx
0x804a32c:   98                              	cwde 
0x804a32d:   8b 55 9c                        	mov edx, dword ptr [ebp - 0x64]
0x804a330:   0f bf fa                        	movsx edi, dx
0x804a333:   99                              	cdq 
0x804a334:   f7 ff                           	idiv edi
0x804a336:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x804a339:   0f 9f c0                        	setg al
0x804a33c:   0f b6 d0                        	movzx edx, al
0x804a33f:   8b 85 20 ff ff ff               	mov eax, dword ptr [ebp - 0xe0]
0x804a345:   98                              	cwde 
0x804a346:   29 c2                           	sub edx, eax
0x804a348:   89 d0                           	mov eax, edx
0x804a34a:   33 85 60 ff ff ff               	xor eax, dword ptr [ebp - 0xa0]
0x804a350:   89 c2                           	mov edx, eax
0x804a352:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a356:   09 c2                           	or edx, eax
0x804a358:   0f bf 85 2c ff ff ff            	movsx eax, word ptr [ebp - 0xd4]
0x804a35f:   09 d0                           	or eax, edx
0x804a361:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a364:   e9 9c 00 00 00                  	jmp 0x804a405 <func_1+0xc89>
0x804a369:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a36d:   0f 85 d5 00 00 00               	jne 0x804a448 <func_1+0xccc>
0x804a373:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804a377:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804a37b:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804a382:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a386:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a38c:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x804a390:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a396:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x804a39a:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804a3a0:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a3a4:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a3aa:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a3ae:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804a3b2:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a3b6:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a3b9:   52                              	push edx
0x804a3ba:   53                              	push ebx
0x804a3bb:   57                              	push edi
0x804a3bc:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a3c2:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a3c5:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a3c8:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a3ce:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a3d4:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a3d7:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a3dd:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a3e3:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a3e6:   56                              	push esi
0x804a3e7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a3ea:   51                              	push ecx
0x804a3eb:   50                              	push eax
0x804a3ec:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a3ef:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a3f2:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a3f5:   e8 2c f2 ff ff                  	call 0x8049626 <set_var>
0x804a3fa:   83 c4 50                        	add esp, 0x50
0x804a3fd:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a400:   e9 d3 08 00 00                  	jmp 0x804acd8 <func_1+0x155c>
0x804a405:   0f b7 85 1e ff ff ff            	movzx eax, word ptr [ebp - 0xe2]
0x804a40c:   66 09 45 94                     	or word ptr [ebp - 0x6c], ax
0x804a410:   0f b6 95 6b ff ff ff            	movzx edx, byte ptr [ebp - 0x95]
0x804a417:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a41b:   0f 95 c0                        	setne al
0x804a41e:   0f b6 c0                        	movzx eax, al
0x804a421:   01 c2                           	add edx, eax
0x804a423:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a427:   39 c2                           	cmp edx, eax
0x804a429:   0f 9c c0                        	setl al
0x804a42c:   0f b6 c0                        	movzx eax, al
0x804a42f:   21 45 d8                        	and dword ptr [ebp - 0x28], eax
0x804a432:   0f b6 45 a5                     	movzx eax, byte ptr [ebp - 0x5b]
0x804a436:   83 c0 01                        	add eax, 1
0x804a439:   88 45 a5                        	mov byte ptr [ebp - 0x5b], al
0x804a43c:   80 7d a5 13                     	cmp byte ptr [ebp - 0x5b], 0x13
0x804a440:   0f 86 f9 fd ff ff               	jbe 0x804a23f <func_1+0xac3>
0x804a446:   eb 01                           	jmp 0x804a449 <func_1+0xccd>
0x804a448:   90                              	nop 
0x804a449:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a450:   0f 84 93 01 00 00               	je 0x804a5e9 <func_1+0xe6d>
0x804a456:   e9 d3 07 00 00                  	jmp 0x804ac2e <func_1+0x14b2>
0x804a45b:   c6 85 2f ff ff ff ff            	mov byte ptr [ebp - 0xd1], 0xff
0x804a462:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x804a466:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804a46a:   89 d1                           	mov ecx, edx
0x804a46c:   09 c1                           	or ecx, eax
0x804a46e:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804a474:   81 fa 56 a6 a1 cb               	cmp edx, 0xcba1a656
0x804a47a:   0f 93 c0                        	setae al
0x804a47d:   0f b6 c0                        	movzx eax, al
0x804a480:   69 c0 56 a6 a1 cb               	imul eax, eax, 0xcba1a656
0x804a486:   29 c2                           	sub edx, eax
0x804a488:   89 d0                           	mov eax, edx
0x804a48a:   85 c0                           	test eax, eax
0x804a48c:   74 11                           	je 0x804a49f <func_1+0xd23>
0x804a48e:   66 83 bd 4a ff ff ff 00         	cmp word ptr [ebp - 0xb6], 0
0x804a496:   74 07                           	je 0x804a49f <func_1+0xd23>
0x804a498:   b8 01 00 00 00                  	mov eax, 1
0x804a49d:   eb 05                           	jmp 0x804a4a4 <func_1+0xd28>
0x804a49f:   b8 00 00 00 00                  	mov eax, 0
0x804a4a4:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804a4a7:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a4ad:   98                              	cwde 
0x804a4ae:   c1 f8 09                        	sar eax, 9
0x804a4b1:   66 89 45 e6                     	mov word ptr [ebp - 0x1a], ax
0x804a4b5:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a4b9:   66 33 85 5e ff ff ff            	xor ax, word ptr [ebp - 0xa2]
0x804a4c0:   98                              	cwde 
0x804a4c1:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804a4c7:   0f 9e c0                        	setle al
0x804a4ca:   0f b6 c0                        	movzx eax, al
0x804a4cd:   23 85 50 ff ff ff               	and eax, dword ptr [ebp - 0xb0]
0x804a4d3:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a4d6:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a4d9:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a4dc:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a4e0:   0f 94 c0                        	sete al
0x804a4e3:   0f b6 d0                        	movzx edx, al
0x804a4e6:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a4e9:   98                              	cwde 
0x804a4ea:   0f af c2                        	imul eax, edx
0x804a4ed:   85 c0                           	test eax, eax
0x804a4ef:   75 07                           	jne 0x804a4f8 <func_1+0xd7c>
0x804a4f1:   66 83 7d a6 00                  	cmp word ptr [ebp - 0x5a], 0
0x804a4f6:   74 07                           	je 0x804a4ff <func_1+0xd83>
0x804a4f8:   ba 01 00 00 00                  	mov edx, 1
0x804a4fd:   eb 05                           	jmp 0x804a504 <func_1+0xd88>
0x804a4ff:   ba 00 00 00 00                  	mov edx, 0
0x804a504:   0f b6 85 2f ff ff ff            	movzx eax, byte ptr [ebp - 0xd1]
0x804a50b:   39 c2                           	cmp edx, eax
0x804a50d:   0f 9d c0                        	setge al
0x804a510:   0f b6 c0                        	movzx eax, al
0x804a513:   39 c1                           	cmp ecx, eax
0x804a515:   0f 95 c0                        	setne al
0x804a518:   0f b6 d0                        	movzx edx, al
0x804a51b:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a51f:   0f b7 c0                        	movzx eax, ax
0x804a522:   0f af c2                        	imul eax, edx
0x804a525:   83 f8 fe                        	cmp eax, -2
0x804a528:   0f 9c c0                        	setl al
0x804a52b:   0f b6 d0                        	movzx edx, al
0x804a52e:   0f be 45 cf                     	movsx eax, byte ptr [ebp - 0x31]
0x804a532:   39 c2                           	cmp edx, eax
0x804a534:   0f 9d c0                        	setge al
0x804a537:   0f b6 c0                        	movzx eax, al
0x804a53a:   99                              	cdq 
0x804a53b:   f7 7d 9c                        	idiv dword ptr [ebp - 0x64]
0x804a53e:   89 d0                           	mov eax, edx
0x804a540:   83 e0 01                        	and eax, 1
0x804a543:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a546:   0f bf 45 8a                     	movsx eax, word ptr [ebp - 0x76]
0x804a54a:   39 45 84                        	cmp dword ptr [ebp - 0x7c], eax
0x804a54d:   0f 9c c0                        	setl al
0x804a550:   0f b6 c0                        	movzx eax, al
0x804a553:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804a556:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804a55a:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804a55e:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804a565:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a569:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804a56f:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x804a573:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804a579:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x804a57d:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804a583:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804a587:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804a58d:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804a591:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804a595:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804a599:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a59c:   52                              	push edx
0x804a59d:   53                              	push ebx
0x804a59e:   57                              	push edi
0x804a59f:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804a5a5:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a5a8:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a5ab:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a5b1:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804a5b7:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a5ba:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804a5c0:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804a5c6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a5c9:   56                              	push esi
0x804a5ca:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a5cd:   51                              	push ecx
0x804a5ce:   50                              	push eax
0x804a5cf:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a5d2:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a5d5:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804a5d8:   e8 49 f0 ff ff                  	call 0x8049626 <set_var>
0x804a5dd:   83 c4 50                        	add esp, 0x50
0x804a5e0:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804a5e4:   e9 ef 06 00 00                  	jmp 0x804acd8 <func_1+0x155c>
0x804a5e9:   0f bf 45 de                     	movsx eax, word ptr [ebp - 0x22]
0x804a5ed:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a5f0:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a5f3:   3b 45 c4                        	cmp eax, dword ptr [ebp - 0x3c]
0x804a5f6:   0f 84 ac 00 00 00               	je 0x804a6a8 <func_1+0xf2c>
0x804a5fc:   66 c7 85 de fe ff ff 01 00      	mov word ptr [ebp - 0x122], 1
0x804a605:   0f b7 85 48 ff ff ff            	movzx eax, word ptr [ebp - 0xb8]
0x804a60c:   89 85 50 ff ff ff               	mov dword ptr [ebp - 0xb0], eax
0x804a612:   66 c7 85 de fe ff ff 01 00      	mov word ptr [ebp - 0x122], 1
0x804a61b:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a61e:   f7 d0                           	not eax
0x804a620:   0f bf c8                        	movsx ecx, ax
0x804a623:   ba 39 7a 9b 60                  	mov edx, 0x609b7a39
0x804a628:   89 c8                           	mov eax, ecx
0x804a62a:   f7 ea                           	imul edx
0x804a62c:   89 d0                           	mov eax, edx
0x804a62e:   c1 f8 0c                        	sar eax, 0xc
0x804a631:   c1 f9 1f                        	sar ecx, 0x1f
0x804a634:   89 ca                           	mov edx, ecx
0x804a636:   29 c2                           	sub edx, eax
0x804a638:   89 d0                           	mov eax, edx
0x804a63a:   3d 49 7a 06 ef                  	cmp eax, 0xef067a49
0x804a63f:   0f 97 c0                        	seta al
0x804a642:   0f b6 d0                        	movzx edx, al
0x804a645:   0f b7 45 96                     	movzx eax, word ptr [ebp - 0x6a]
0x804a649:   0f b6 c0                        	movzx eax, al
0x804a64c:   0f af c2                        	imul eax, edx
0x804a64f:   83 f8 fe                        	cmp eax, -2
0x804a652:   0f 9c c0                        	setl al
0x804a655:   0f b6 c0                        	movzx eax, al
0x804a658:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804a65c:   c7 85 4c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb4], 0
0x804a666:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a66d:   75 06                           	jne 0x804a675 <func_1+0xef9>
0x804a66f:   83 7d a8 00                     	cmp dword ptr [ebp - 0x58], 0
0x804a673:   74 07                           	je 0x804a67c <func_1+0xf00>
0x804a675:   b8 01 00 00 00                  	mov eax, 1
0x804a67a:   eb 05                           	jmp 0x804a681 <func_1+0xf05>
0x804a67c:   b8 00 00 00 00                  	mov eax, 0
0x804a681:   3b 45 d8                        	cmp eax, dword ptr [ebp - 0x28]
0x804a684:   0f 9e c0                        	setle al
0x804a687:   0f b6 c0                        	movzx eax, al
0x804a68a:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a68d:   0f 95 c0                        	setne al
0x804a690:   0f b6 c0                        	movzx eax, al
0x804a693:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a696:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a699:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a69c:   c7 45 f0 ee 49 b1 8c            	mov dword ptr [ebp - 0x10], 0x8cb149ee
0x804a6a3:   e9 86 05 00 00                  	jmp 0x804ac2e <func_1+0x14b2>
0x804a6a8:   c7 85 7c ff ff ff 62 8a 11 11   	mov dword ptr [ebp - 0x84], 0x11118a62
0x804a6b2:   c6 85 12 ff ff ff ff            	mov byte ptr [ebp - 0xee], 0xff
0x804a6b9:   66 c7 85 10 ff ff ff 01 00      	mov word ptr [ebp - 0xf0], 1
0x804a6c2:   c6 85 0f ff ff ff 01            	mov byte ptr [ebp - 0xf1], 1
0x804a6c9:   c7 85 08 ff ff ff 1e 3e 93 af   	mov dword ptr [ebp - 0xf8], 0xaf933e1e
0x804a6d3:   c7 85 78 ff ff ff 09 00 00 00   	mov dword ptr [ebp - 0x88], 9
0x804a6dd:   66 c7 85 06 ff ff ff fe ff      	mov word ptr [ebp - 0xfa], 0xfffe
0x804a6e6:   83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x804a6ea:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a6ee:   75 5d                           	jne 0x804a74d <func_1+0xfd1>
0x804a6f0:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a6f3:   0f b6 d0                        	movzx edx, al
0x804a6f6:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a6fc:   0f b6 c0                        	movzx eax, al
0x804a6ff:   bb 01 00 00 00                  	mov ebx, 1
0x804a704:   89 c1                           	mov ecx, eax
0x804a706:   d3 fb                           	sar ebx, cl
0x804a708:   89 d8                           	mov eax, ebx
0x804a70a:   89 c1                           	mov ecx, eax
0x804a70c:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a710:   21 c8                           	and eax, ecx
0x804a712:   89 c3                           	mov ebx, eax
0x804a714:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804a718:   89 c1                           	mov ecx, eax
0x804a71a:   0f b6 c3                        	movzx eax, bl
0x804a71d:   f6 f1                           	div cl
0x804a71f:   0f b6 c4                        	movzx eax, ah
0x804a722:   84 c0                           	test al, al
0x804a724:   75 07                           	jne 0x804a72d <func_1+0xfb1>
0x804a726:   66 83 7d d4 00                  	cmp word ptr [ebp - 0x2c], 0
0x804a72b:   74 07                           	je 0x804a734 <func_1+0xfb8>
0x804a72d:   b8 01 00 00 00                  	mov eax, 1
0x804a732:   eb 05                           	jmp 0x804a739 <func_1+0xfbd>
0x804a734:   b8 00 00 00 00                  	mov eax, 0
0x804a739:   39 d0                           	cmp eax, edx
0x804a73b:   0f 95 c0                        	setne al
0x804a73e:   0f b6 d0                        	movzx edx, al
0x804a741:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x804a747:   01 d0                           	add eax, edx
0x804a749:   85 c0                           	test eax, eax
0x804a74b:   74 07                           	je 0x804a754 <func_1+0xfd8>
0x804a74d:   b8 01 00 00 00                  	mov eax, 1
0x804a752:   eb 05                           	jmp 0x804a759 <func_1+0xfdd>
0x804a754:   b8 00 00 00 00                  	mov eax, 0
0x804a759:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a75f:   0f 93 c0                        	setae al
0x804a762:   0f b6 c0                        	movzx eax, al
0x804a765:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804a76b:   0f b6 45 a4                     	movzx eax, byte ptr [ebp - 0x5c]
0x804a76f:   83 c0 01                        	add eax, 1
0x804a772:   88 45 a4                        	mov byte ptr [ebp - 0x5c], al
0x804a775:   83 7d f0 00                     	cmp dword ptr [ebp - 0x10], 0
0x804a779:   0f 84 24 01 00 00               	je 0x804a8a3 <func_1+0x1127>
0x804a77f:   c7 85 e8 fe ff ff 42 04 4e 10   	mov dword ptr [ebp - 0x118], 0x104e0442
0x804a789:   c7 85 e4 fe ff ff f3 1b c4 2e   	mov dword ptr [ebp - 0x11c], 0x2ec41bf3
0x804a793:   66 c7 45 a6 ea ff               	mov word ptr [ebp - 0x5a], 0xffea
0x804a799:   e9 8e 00 00 00                  	jmp 0x804a82c <func_1+0x10b0>
0x804a79e:   c7 85 e0 fe ff ff 4c 38 b7 72   	mov dword ptr [ebp - 0x120], 0x72b7384c
0x804a7a8:   0f b7 95 48 ff ff ff            	movzx edx, word ptr [ebp - 0xb8]
0x804a7af:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x804a7b3:   66 3d fe 00                     	cmp ax, 0xfe
0x804a7b7:   0f 96 c0                        	setbe al
0x804a7ba:   0f b6 c0                        	movzx eax, al
0x804a7bd:   39 c2                           	cmp edx, eax
0x804a7bf:   75 12                           	jne 0x804a7d3 <func_1+0x1057>
0x804a7c1:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x804a7c8:   74 10                           	je 0x804a7da <func_1+0x105e>
0x804a7ca:   83 bd e0 fe ff ff 00            	cmp dword ptr [ebp - 0x120], 0
0x804a7d1:   74 07                           	je 0x804a7da <func_1+0x105e>
0x804a7d3:   b8 01 00 00 00                  	mov eax, 1
0x804a7d8:   eb 05                           	jmp 0x804a7df <func_1+0x1063>
0x804a7da:   b8 00 00 00 00                  	mov eax, 0
0x804a7df:   0f be d0                        	movsx edx, al
0x804a7e2:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x804a7e6:   0f be c0                        	movsx eax, al
0x804a7e9:   89 c1                           	mov ecx, eax
0x804a7eb:   d3 e2                           	shl edx, cl
0x804a7ed:   89 d0                           	mov eax, edx
0x804a7ef:   09 45 98                        	or dword ptr [ebp - 0x68], eax
0x804a7f2:   81 bd 70 ff ff ff 34 a5 5d 42   	cmp dword ptr [ebp - 0x90], 0x425da534
0x804a7fc:   0f 97 c0                        	seta al
0x804a7ff:   0f b6 c0                        	movzx eax, al
0x804a802:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x804a806:   0f bf 45 d4                     	movsx eax, word ptr [ebp - 0x2c]
0x804a80a:   c1 e0 0a                        	shl eax, 0xa
0x804a80d:   85 c0                           	test eax, eax
0x804a80f:   75 04                           	jne 0x804a815 <func_1+0x1099>
0x804a811:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a815:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a818:   89 c2                           	mov edx, eax
0x804a81a:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a81d:   29 c2                           	sub edx, eax
0x804a81f:   89 d0                           	mov eax, edx
0x804a821:   88 85 47 ff ff ff               	mov byte ptr [ebp - 0xb9], al
0x804a827:   66 83 45 a6 04                  	add word ptr [ebp - 0x5a], 4
0x804a82c:   66 83 7d a6 09                  	cmp word ptr [ebp - 0x5a], 9
0x804a831:   0f 87 67 ff ff ff               	ja 0x804a79e <func_1+0x1022>
0x804a837:   0f be 85 12 ff ff ff            	movsx eax, byte ptr [ebp - 0xee]
0x804a83e:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x804a841:   66 c7 45 c0 41 00               	mov word ptr [ebp - 0x40], 0x41
0x804a847:   b8 01 00 00 00                  	mov eax, 1
0x804a84c:   89 c2                           	mov edx, eax
0x804a84e:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a851:   21 d0                           	and eax, edx
0x804a853:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804a857:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a85d:   88 85 0f ff ff ff               	mov byte ptr [ebp - 0xf1], al
0x804a863:   8b 45 f0                        	mov eax, dword ptr [ebp - 0x10]
0x804a866:   22 85 0f ff ff ff               	and al, byte ptr [ebp - 0xf1]
0x804a86c:   0f b6 95 12 ff ff ff            	movzx edx, byte ptr [ebp - 0xee]
0x804a873:   0f b6 c0                        	movzx eax, al
0x804a876:   f6 f2                           	div dl
0x804a878:   0f b6 c4                        	movzx eax, ah
0x804a87b:   0f b6 d0                        	movzx edx, al
0x804a87e:   66 0f be 45 cf                  	movsx ax, byte ptr [ebp - 0x31]
0x804a883:   0f b7 c0                        	movzx eax, ax
0x804a886:   89 c1                           	mov ecx, eax
0x804a888:   d3 e2                           	shl edx, cl
0x804a88a:   89 d0                           	mov eax, edx
0x804a88c:   39 85 e8 fe ff ff               	cmp dword ptr [ebp - 0x118], eax
0x804a892:   0f 93 c0                        	setae al
0x804a895:   0f b6 c0                        	movzx eax, al
0x804a898:   89 85 e4 fe ff ff               	mov dword ptr [ebp - 0x11c], eax
0x804a89e:   e9 7b 03 00 00                  	jmp 0x804ac1e <func_1+0x14a2>
0x804a8a3:   c6 85 05 ff ff ff 01            	mov byte ptr [ebp - 0xfb], 1
0x804a8aa:   66 c7 85 02 ff ff ff ff ff      	mov word ptr [ebp - 0xfe], 0xffff
0x804a8b3:   c7 85 fc fe ff ff f4 a3 c5 c9   	mov dword ptr [ebp - 0x104], 0xc9c5a3f4
0x804a8bd:   c7 45 ec 8a 72 c2 a3            	mov dword ptr [ebp - 0x14], 0xa3c2728a
0x804a8c4:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a8c7:   89 c2                           	mov edx, eax
0x804a8c9:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804a8d0:   01 d0                           	add eax, edx
0x804a8d2:   66 83 f8 f7                     	cmp ax, -9
0x804a8d6:   0f 84 8b 00 00 00               	je 0x804a967 <func_1+0x11eb>
0x804a8dc:   c6 85 ef fe ff ff 06            	mov byte ptr [ebp - 0x111], 6
0x804a8e3:   66 83 7d d6 00                  	cmp word ptr [ebp - 0x2a], 0
0x804a8e8:   75 09                           	jne 0x804a8f3 <func_1+0x1177>
0x804a8ea:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x804a8f1:   74 07                           	je 0x804a8fa <func_1+0x117e>
0x804a8f3:   b8 01 00 00 00                  	mov eax, 1
0x804a8f8:   eb 05                           	jmp 0x804a8ff <func_1+0x1183>
0x804a8fa:   b8 00 00 00 00                  	mov eax, 0
0x804a8ff:   83 f8 07                        	cmp eax, 7
0x804a902:   0f 94 c0                        	sete al
0x804a905:   88 85 ef fe ff ff               	mov byte ptr [ebp - 0x111], al
0x804a90b:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a90f:   0f 9f c0                        	setg al
0x804a912:   0f b6 c0                        	movzx eax, al
0x804a915:   31 45 b8                        	xor dword ptr [ebp - 0x48], eax
0x804a918:   80 7d cf 00                     	cmp byte ptr [ebp - 0x31], 0
0x804a91c:   75 09                           	jne 0x804a927 <func_1+0x11ab>
0x804a91e:   80 bd 0f ff ff ff 00            	cmp byte ptr [ebp - 0xf1], 0
0x804a925:   74 07                           	je 0x804a92e <func_1+0x11b2>
0x804a927:   b8 01 00 00 00                  	mov eax, 1
0x804a92c:   eb 05                           	jmp 0x804a933 <func_1+0x11b7>
0x804a92e:   b8 00 00 00 00                  	mov eax, 0
0x804a933:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a936:   66 c7 45 c2 01 00               	mov word ptr [ebp - 0x3e], 1
0x804a93c:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a940:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804a947:   0f b7 c0                        	movzx eax, ax
0x804a94a:   01 d0                           	add eax, edx
0x804a94c:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a952:   0f 92 c0                        	setb al
0x804a955:   88 45 cf                        	mov byte ptr [ebp - 0x31], al
0x804a958:   0f b6 85 05 ff ff ff            	movzx eax, byte ptr [ebp - 0xfb]
0x804a95f:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a962:   e9 a5 02 00 00                  	jmp 0x804ac0c <func_1+0x1490>
0x804a967:   c7 85 f8 fe ff ff 06 00 00 00   	mov dword ptr [ebp - 0x108], 6
0x804a971:   c7 85 f8 fe ff ff e8 cd 00 00   	mov dword ptr [ebp - 0x108], 0xcde8
0x804a97b:   0f b7 55 c2                     	movzx edx, word ptr [ebp - 0x3e]
0x804a97f:   0f be 8d 0f ff ff ff            	movsx ecx, byte ptr [ebp - 0xf1]
0x804a986:   0f b6 85 57 ff ff ff            	movzx eax, byte ptr [ebp - 0xa9]
0x804a98d:   39 c1                           	cmp ecx, eax
0x804a98f:   0f 94 c0                        	sete al
0x804a992:   0f b6 c0                        	movzx eax, al
0x804a995:   21 d0                           	and eax, edx
0x804a997:   89 c2                           	mov edx, eax
0x804a999:   81 fa 26 2d 64 c3               	cmp edx, 0xc3642d26
0x804a99f:   0f 93 c0                        	setae al
0x804a9a2:   0f b6 c0                        	movzx eax, al
0x804a9a5:   69 c0 26 2d 64 c3               	imul eax, eax, 0xc3642d26
0x804a9ab:   29 c2                           	sub edx, eax
0x804a9ad:   89 d0                           	mov eax, edx
0x804a9af:   85 c0                           	test eax, eax
0x804a9b1:   75 06                           	jne 0x804a9b9 <func_1+0x123d>
0x804a9b3:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a9b7:   74 07                           	je 0x804a9c0 <func_1+0x1244>
0x804a9b9:   b8 01 00 00 00                  	mov eax, 1
0x804a9be:   eb 05                           	jmp 0x804a9c5 <func_1+0x1249>
0x804a9c0:   b8 00 00 00 00                  	mov eax, 0
0x804a9c5:   3d e8 00 00 00                  	cmp eax, 0xe8
0x804a9ca:   0f 95 c0                        	setne al
0x804a9cd:   0f b6 c0                        	movzx eax, al
0x804a9d0:   23 85 f8 fe ff ff               	and eax, dword ptr [ebp - 0x108]
0x804a9d6:   89 c2                           	mov edx, eax
0x804a9d8:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a9db:   09 d0                           	or eax, edx
0x804a9dd:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a9e0:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a9e4:   0f 84 00 01 00 00               	je 0x804aaea <func_1+0x136e>
0x804a9ea:   c6 85 f5 fe ff ff ff            	mov byte ptr [ebp - 0x10b], 0xff
0x804a9f1:   c7 85 f0 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x110], 0
0x804a9fb:   0f be 85 f5 fe ff ff            	movsx eax, byte ptr [ebp - 0x10b]
0x804aa02:   0f be 8d 77 ff ff ff            	movsx ecx, byte ptr [ebp - 0x89]
0x804aa09:   8b 95 6c ff ff ff               	mov edx, dword ptr [ebp - 0x94]
0x804aa0f:   0f be d2                        	movsx edx, dl
0x804aa12:   01 ca                           	add edx, ecx
0x804aa14:   39 d0                           	cmp eax, edx
0x804aa16:   0f 9e c0                        	setle al
0x804aa19:   0f b6 c0                        	movzx eax, al
0x804aa1c:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804aa1f:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804aa22:   89 c2                           	mov edx, eax
0x804aa24:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804aa27:   09 d0                           	or eax, edx
0x804aa29:   0f be d0                        	movsx edx, al
0x804aa2c:   0f b7 85 10 ff ff ff            	movzx eax, word ptr [ebp - 0xf0]
0x804aa33:   0f be c0                        	movsx eax, al
0x804aa36:   89 c1                           	mov ecx, eax
0x804aa38:   d3 fa                           	sar edx, cl
0x804aa3a:   89 d0                           	mov eax, edx
0x804aa3c:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804aa42:   8b 85 f0 fe ff ff               	mov eax, dword ptr [ebp - 0x110]
0x804aa48:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804aa4b:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804aa4e:   33 85 f8 fe ff ff               	xor eax, dword ptr [ebp - 0x108]
0x804aa54:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804aa57:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804aa5b:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804aa5f:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804aa66:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804aa6a:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804aa70:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x804aa74:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804aa7a:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x804aa7e:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804aa84:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804aa88:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804aa8e:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804aa92:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804aa96:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804aa9a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aa9d:   52                              	push edx
0x804aa9e:   53                              	push ebx
0x804aa9f:   57                              	push edi
0x804aaa0:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804aaa6:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aaa9:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804aaac:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804aab2:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aab8:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aabb:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804aac1:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804aac7:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aaca:   56                              	push esi
0x804aacb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aace:   51                              	push ecx
0x804aacf:   50                              	push eax
0x804aad0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aad3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aad6:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804aad9:   e8 48 eb ff ff                  	call 0x8049626 <set_var>
0x804aade:   83 c4 50                        	add esp, 0x50
0x804aae1:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804aae5:   e9 ee 01 00 00                  	jmp 0x804acd8 <func_1+0x155c>
0x804aaea:   66 c7 85 f6 fe ff ff ff ff      	mov word ptr [ebp - 0x10a], 0xffff
0x804aaf3:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804aafa:   66 3b 85 f6 fe ff ff            	cmp ax, word ptr [ebp - 0x10a]
0x804ab01:   0f 92 c0                        	setb al
0x804ab04:   0f b6 c0                        	movzx eax, al
0x804ab07:   0f b7 9d f6 fe ff ff            	movzx ebx, word ptr [ebp - 0x10a]
0x804ab0e:   99                              	cdq 
0x804ab0f:   f7 fb                           	idiv ebx
0x804ab11:   85 c0                           	test eax, eax
0x804ab13:   74 64                           	je 0x804ab79 <func_1+0x13fd>
0x804ab15:   8b 85 f8 fe ff ff               	mov eax, dword ptr [ebp - 0x108]
0x804ab1b:   89 c2                           	mov edx, eax
0x804ab1d:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804ab20:   09 d0                           	or eax, edx
0x804ab22:   66 c1 e8 08                     	shr ax, 8
0x804ab26:   0f b6 d0                        	movzx edx, al
0x804ab29:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804ab30:   0f b6 c0                        	movzx eax, al
0x804ab33:   89 c1                           	mov ecx, eax
0x804ab35:   d3 fa                           	sar edx, cl
0x804ab37:   89 d0                           	mov eax, edx
0x804ab39:   09 85 7c ff ff ff               	or dword ptr [ebp - 0x84], eax
0x804ab3f:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804ab43:   83 c8 01                        	or eax, 1
0x804ab46:   0f be d0                        	movsx edx, al
0x804ab49:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804ab4d:   0f be c0                        	movsx eax, al
0x804ab50:   29 c2                           	sub edx, eax
0x804ab52:   89 d0                           	mov eax, edx
0x804ab54:   31 85 fc fe ff ff               	xor dword ptr [ebp - 0x104], eax
0x804ab5a:   83 bd fc fe ff ff 00            	cmp dword ptr [ebp - 0x104], 0
0x804ab61:   0f 94 c0                        	sete al
0x804ab64:   0f b6 d0                        	movzx edx, al
0x804ab67:   0f b7 85 02 ff ff ff            	movzx eax, word ptr [ebp - 0xfe]
0x804ab6e:   39 c2                           	cmp edx, eax
0x804ab70:   75 07                           	jne 0x804ab79 <func_1+0x13fd>
0x804ab72:   ba 01 00 00 00                  	mov edx, 1
0x804ab77:   eb 05                           	jmp 0x804ab7e <func_1+0x1402>
0x804ab79:   ba 00 00 00 00                  	mov edx, 0
0x804ab7e:   0f bf 45 c0                     	movsx eax, word ptr [ebp - 0x40]
0x804ab82:   39 c2                           	cmp edx, eax
0x804ab84:   0f 9f c0                        	setg al
0x804ab87:   0f b6 c0                        	movzx eax, al
0x804ab8a:   33 85 f8 fe ff ff               	xor eax, dword ptr [ebp - 0x108]
0x804ab90:   89 c2                           	mov edx, eax
0x804ab92:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804ab95:   09 d0                           	or eax, edx
0x804ab97:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x804ab9a:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804ab9d:   89 c1                           	mov ecx, eax
0x804ab9f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804aba2:   89 c2                           	mov edx, eax
0x804aba4:   89 c8                           	mov eax, ecx
0x804aba6:   0f af c2                        	imul eax, edx
0x804aba9:   0f be d0                        	movsx edx, al
0x804abac:   0f be 85 77 ff ff ff            	movsx eax, byte ptr [ebp - 0x89]
0x804abb3:   0f af c2                        	imul eax, edx
0x804abb6:   31 85 78 ff ff ff               	xor dword ptr [ebp - 0x88], eax
0x804abbc:   0f b7 85 f6 fe ff ff            	movzx eax, word ptr [ebp - 0x10a]
0x804abc3:   39 85 7c ff ff ff               	cmp dword ptr [ebp - 0x84], eax
0x804abc9:   0f 9d c0                        	setge al
0x804abcc:   89 c2                           	mov edx, eax
0x804abce:   0f b7 45 e6                     	movzx eax, word ptr [ebp - 0x1a]
0x804abd2:   29 c2                           	sub edx, eax
0x804abd4:   89 d0                           	mov eax, edx
0x804abd6:   22 85 0f ff ff ff               	and al, byte ptr [ebp - 0xf1]
0x804abdc:   0f b6 c0                        	movzx eax, al
0x804abdf:   c1 e0 04                        	shl eax, 4
0x804abe2:   85 c0                           	test eax, eax
0x804abe4:   75 09                           	jne 0x804abef <func_1+0x1473>
0x804abe6:   80 bd 05 ff ff ff 00            	cmp byte ptr [ebp - 0xfb], 0
0x804abed:   74 07                           	je 0x804abf6 <func_1+0x147a>
0x804abef:   b8 01 00 00 00                  	mov eax, 1
0x804abf4:   eb 05                           	jmp 0x804abfb <func_1+0x147f>
0x804abf6:   b8 00 00 00 00                  	mov eax, 0
0x804abfb:   35 97 25 9f cc                  	xor eax, 0xcc9f2597
0x804ac00:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804ac03:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x804ac0a:   75 37                           	jne 0x804ac43 <func_1+0x14c7>
0x804ac0c:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804ac0f:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x804ac15:   83 bd 78 ff ff ff 00            	cmp dword ptr [ebp - 0x88], 0
0x804ac1c:   75 28                           	jne 0x804ac46 <func_1+0x14ca>
0x804ac1e:   0f bf 85 06 ff ff ff            	movsx eax, word ptr [ebp - 0xfa]
0x804ac25:   89 45 f0                        	mov dword ptr [ebp - 0x10], eax
0x804ac28:   eb 04                           	jmp 0x804ac2e <func_1+0x14b2>
0x804ac2a:   90                              	nop 
0x804ac2b:   eb 01                           	jmp 0x804ac2e <func_1+0x14b2>
0x804ac2d:   90                              	nop 
0x804ac2e:   66 83 45 b6 01                  	add word ptr [ebp - 0x4a], 1
0x804ac33:   66 83 7d b6 0b                  	cmp word ptr [ebp - 0x4a], 0xb
0x804ac38:   0f 86 61 ec ff ff               	jbe 0x804989f <func_1+0x123>
0x804ac3e:   eb 07                           	jmp 0x804ac47 <func_1+0x14cb>
0x804ac40:   90                              	nop 
0x804ac41:   eb 04                           	jmp 0x804ac47 <func_1+0x14cb>
0x804ac43:   90                              	nop 
0x804ac44:   eb 01                           	jmp 0x804ac47 <func_1+0x14cb>
0x804ac46:   90                              	nop 
0x804ac47:   0f bf 55 be                     	movsx edx, word ptr [ebp - 0x42]
0x804ac4b:   0f bf 5d c0                     	movsx ebx, word ptr [ebp - 0x40]
0x804ac4f:   0f b6 bd 6b ff ff ff            	movzx edi, byte ptr [ebp - 0x95]
0x804ac56:   0f b7 45 c2                     	movzx eax, word ptr [ebp - 0x3e]
0x804ac5a:   89 85 a0 fe ff ff               	mov dword ptr [ebp - 0x160], eax
0x804ac60:   0f be 75 cf                     	movsx esi, byte ptr [ebp - 0x31]
0x804ac64:   89 b5 9c fe ff ff               	mov dword ptr [ebp - 0x164], esi
0x804ac6a:   0f bf 4d d4                     	movsx ecx, word ptr [ebp - 0x2c]
0x804ac6e:   89 8d 98 fe ff ff               	mov dword ptr [ebp - 0x168], ecx
0x804ac74:   0f b7 45 d6                     	movzx eax, word ptr [ebp - 0x2a]
0x804ac78:   89 85 94 fe ff ff               	mov dword ptr [ebp - 0x16c], eax
0x804ac7e:   0f bf 75 de                     	movsx esi, word ptr [ebp - 0x22]
0x804ac82:   0f b7 4d e4                     	movzx ecx, word ptr [ebp - 0x1c]
0x804ac86:   0f bf 45 e6                     	movsx eax, word ptr [ebp - 0x1a]
0x804ac8a:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804ac8d:   52                              	push edx
0x804ac8e:   53                              	push ebx
0x804ac8f:   57                              	push edi
0x804ac90:   ff b5 a0 fe ff ff               	push dword ptr [ebp - 0x160]
0x804ac96:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804ac99:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804ac9c:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804aca2:   ff b5 9c fe ff ff               	push dword ptr [ebp - 0x164]
0x804aca8:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804acab:   ff b5 98 fe ff ff               	push dword ptr [ebp - 0x168]
0x804acb1:   ff b5 94 fe ff ff               	push dword ptr [ebp - 0x16c]
0x804acb7:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804acba:   56                              	push esi
0x804acbb:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804acbe:   51                              	push ecx
0x804acbf:   50                              	push eax
0x804acc0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804acc3:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804acc6:   ff 75 f0                        	push dword ptr [ebp - 0x10]
0x804acc9:   e8 58 e9 ff ff                  	call 0x8049626 <set_var>
0x804acce:   83 c4 50                        	add esp, 0x50
0x804acd1:   0f b7 85 68 ff ff ff            	movzx eax, word ptr [ebp - 0x98]
0x804acd8:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804acdb:   5b                              	pop ebx
0x804acdc:   5e                              	pop esi
0x804acdd:   5f                              	pop edi
0x804acde:   5d                              	pop ebp
0x804acdf:   c3                              	ret 
; function: main at 0x804ace0 -- 0x804aff7
0x804ace0:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ace4:   83 e4 f0                        	and esp, 0xfffffff0
0x804ace7:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804acea:   55                              	push ebp
0x804aceb:   89 e5                           	mov ebp, esp
0x804aced:   53                              	push ebx
0x804acee:   51                              	push ecx
0x804acef:   83 ec 10                        	sub esp, 0x10
0x804acf2:   e8 99 d6 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804acf7:   81 c3 09 33 00 00               	add ebx, 0x3309
0x804acfd:   89 c8                           	mov eax, ecx
0x804acff:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ad06:   83 38 02                        	cmp dword ptr [eax], 2
0x804ad09:   75 26                           	jne 0x804ad31 <main+0x51>
0x804ad0b:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ad0e:   83 c0 04                        	add eax, 4
0x804ad11:   8b 00                           	mov eax, dword ptr [eax]
0x804ad13:   83 ec 08                        	sub esp, 8
0x804ad16:   8d 93 dc d0 ff ff               	lea edx, [ebx - 0x2f24]
0x804ad1c:   52                              	push edx
0x804ad1d:   50                              	push eax
0x804ad1e:   e8 dd d5 ff ff                  	call 0x8048300 <strcmp>
0x804ad23:   83 c4 10                        	add esp, 0x10
0x804ad26:   85 c0                           	test eax, eax
0x804ad28:   75 07                           	jne 0x804ad31 <main+0x51>
0x804ad2a:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ad31:   e8 20 d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ad36:   e8 30 e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804ad3b:   e8 3c ea ff ff                  	call 0x804977c <func_1>
0x804ad40:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804ad46:   89 c2                           	mov edx, eax
0x804ad48:   83 ec 04                        	sub esp, 4
0x804ad4b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad4e:   8d 83 de d0 ff ff               	lea eax, [ebx - 0x2f22]
0x804ad54:   50                              	push eax
0x804ad55:   52                              	push edx
0x804ad56:   e8 1c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad5b:   83 c4 10                        	add esp, 0x10
0x804ad5e:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804ad64:   89 c2                           	mov edx, eax
0x804ad66:   83 ec 04                        	sub esp, 4
0x804ad69:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad6c:   8d 83 e2 d0 ff ff               	lea eax, [ebx - 0x2f1e]
0x804ad72:   50                              	push eax
0x804ad73:   52                              	push edx
0x804ad74:   e8 fe e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad79:   83 c4 10                        	add esp, 0x10
0x804ad7c:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804ad82:   83 ec 04                        	sub esp, 4
0x804ad85:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad88:   8d 93 e6 d0 ff ff               	lea edx, [ebx - 0x2f1a]
0x804ad8e:   52                              	push edx
0x804ad8f:   50                              	push eax
0x804ad90:   e8 e2 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad95:   83 c4 10                        	add esp, 0x10
0x804ad98:   0f b7 83 2c 00 00 00            	movzx eax, word ptr [ebx + 0x2c]
0x804ad9f:   98                              	cwde 
0x804ada0:   83 ec 04                        	sub esp, 4
0x804ada3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada6:   8d 93 eb d0 ff ff               	lea edx, [ebx - 0x2f15]
0x804adac:   52                              	push edx
0x804adad:   50                              	push eax
0x804adae:   e8 c4 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb3:   83 c4 10                        	add esp, 0x10
0x804adb6:   0f b7 83 2e 00 00 00            	movzx eax, word ptr [ebx + 0x2e]
0x804adbd:   0f b7 c0                        	movzx eax, ax
0x804adc0:   83 ec 04                        	sub esp, 4
0x804adc3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc6:   8d 93 f0 d0 ff ff               	lea edx, [ebx - 0x2f10]
0x804adcc:   52                              	push edx
0x804adcd:   50                              	push eax
0x804adce:   e8 a4 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add3:   83 c4 10                        	add esp, 0x10
0x804add6:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804addc:   83 ec 04                        	sub esp, 4
0x804addf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade2:   8d 93 f5 d0 ff ff               	lea edx, [ebx - 0x2f0b]
0x804ade8:   52                              	push edx
0x804ade9:   50                              	push eax
0x804adea:   e8 88 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adef:   83 c4 10                        	add esp, 0x10
0x804adf2:   0f b7 83 88 04 00 00            	movzx eax, word ptr [ebx + 0x488]
0x804adf9:   98                              	cwde 
0x804adfa:   83 ec 04                        	sub esp, 4
0x804adfd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae00:   8d 93 fa d0 ff ff               	lea edx, [ebx - 0x2f06]
0x804ae06:   52                              	push edx
0x804ae07:   50                              	push eax
0x804ae08:   e8 6a e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae0d:   83 c4 10                        	add esp, 0x10
0x804ae10:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804ae16:   89 c2                           	mov edx, eax
0x804ae18:   83 ec 04                        	sub esp, 4
0x804ae1b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae1e:   8d 83 ff d0 ff ff               	lea eax, [ebx - 0x2f01]
0x804ae24:   50                              	push eax
0x804ae25:   52                              	push edx
0x804ae26:   e8 4c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2b:   83 c4 10                        	add esp, 0x10
0x804ae2e:   0f b7 83 38 00 00 00            	movzx eax, word ptr [ebx + 0x38]
0x804ae35:   0f b7 c0                        	movzx eax, ax
0x804ae38:   83 ec 04                        	sub esp, 4
0x804ae3b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae3e:   8d 93 04 d1 ff ff               	lea edx, [ebx - 0x2efc]
0x804ae44:   52                              	push edx
0x804ae45:   50                              	push eax
0x804ae46:   e8 2c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4b:   83 c4 10                        	add esp, 0x10
0x804ae4e:   0f b6 83 3a 00 00 00            	movzx eax, byte ptr [ebx + 0x3a]
0x804ae55:   0f be c0                        	movsx eax, al
0x804ae58:   83 ec 04                        	sub esp, 4
0x804ae5b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5e:   8d 93 09 d1 ff ff               	lea edx, [ebx - 0x2ef7]
0x804ae64:   52                              	push edx
0x804ae65:   50                              	push eax
0x804ae66:   e8 0c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae6b:   83 c4 10                        	add esp, 0x10
0x804ae6e:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804ae75:   98                              	cwde 
0x804ae76:   83 ec 04                        	sub esp, 4
0x804ae79:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae7c:   8d 93 0f d1 ff ff               	lea edx, [ebx - 0x2ef1]
0x804ae82:   52                              	push edx
0x804ae83:   50                              	push eax
0x804ae84:   e8 ee e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae89:   83 c4 10                        	add esp, 0x10
0x804ae8c:   8b 83 8c 04 00 00               	mov eax, dword ptr [ebx + 0x48c]
0x804ae92:   83 ec 04                        	sub esp, 4
0x804ae95:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae98:   8d 93 15 d1 ff ff               	lea edx, [ebx - 0x2eeb]
0x804ae9e:   52                              	push edx
0x804ae9f:   50                              	push eax
0x804aea0:   e8 d2 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea5:   83 c4 10                        	add esp, 0x10
0x804aea8:   0f b6 83 3e 00 00 00            	movzx eax, byte ptr [ebx + 0x3e]
0x804aeaf:   0f be c0                        	movsx eax, al
0x804aeb2:   83 ec 04                        	sub esp, 4
0x804aeb5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb8:   8d 93 1b d1 ff ff               	lea edx, [ebx - 0x2ee5]
0x804aebe:   52                              	push edx
0x804aebf:   50                              	push eax
0x804aec0:   e8 b2 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec5:   83 c4 10                        	add esp, 0x10
0x804aec8:   8b 83 40 00 00 00               	mov eax, dword ptr [ebx + 0x40]
0x804aece:   83 ec 04                        	sub esp, 4
0x804aed1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed4:   8d 93 21 d1 ff ff               	lea edx, [ebx - 0x2edf]
0x804aeda:   52                              	push edx
0x804aedb:   50                              	push eax
0x804aedc:   e8 96 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee1:   83 c4 10                        	add esp, 0x10
0x804aee4:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804aeea:   83 ec 04                        	sub esp, 4
0x804aeed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef0:   8d 93 27 d1 ff ff               	lea edx, [ebx - 0x2ed9]
0x804aef6:   52                              	push edx
0x804aef7:   50                              	push eax
0x804aef8:   e8 7a e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aefd:   83 c4 10                        	add esp, 0x10
0x804af00:   ba 11 92 53 b6                  	mov edx, 0xb6539211
0x804af05:   83 ec 04                        	sub esp, 4
0x804af08:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0b:   8d 83 2d d1 ff ff               	lea eax, [ebx - 0x2ed3]
0x804af11:   50                              	push eax
0x804af12:   52                              	push edx
0x804af13:   e8 5f e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af18:   83 c4 10                        	add esp, 0x10
0x804af1b:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804af21:   89 c2                           	mov edx, eax
0x804af23:   83 ec 04                        	sub esp, 4
0x804af26:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af29:   8d 83 33 d1 ff ff               	lea eax, [ebx - 0x2ecd]
0x804af2f:   50                              	push eax
0x804af30:   52                              	push edx
0x804af31:   e8 41 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af36:   83 c4 10                        	add esp, 0x10
0x804af39:   0f b7 83 90 04 00 00            	movzx eax, word ptr [ebx + 0x490]
0x804af40:   0f b7 c0                        	movzx eax, ax
0x804af43:   83 ec 04                        	sub esp, 4
0x804af46:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af49:   8d 93 39 d1 ff ff               	lea edx, [ebx - 0x2ec7]
0x804af4f:   52                              	push edx
0x804af50:   50                              	push eax
0x804af51:   e8 21 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af56:   83 c4 10                        	add esp, 0x10
0x804af59:   0f b6 83 4c 00 00 00            	movzx eax, byte ptr [ebx + 0x4c]
0x804af60:   0f b6 c0                        	movzx eax, al
0x804af63:   83 ec 04                        	sub esp, 4
0x804af66:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af69:   8d 93 3f d1 ff ff               	lea edx, [ebx - 0x2ec1]
0x804af6f:   52                              	push edx
0x804af70:   50                              	push eax
0x804af71:   e8 01 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af76:   83 c4 10                        	add esp, 0x10
0x804af79:   0f b7 83 4e 00 00 00            	movzx eax, word ptr [ebx + 0x4e]
0x804af80:   98                              	cwde 
0x804af81:   83 ec 04                        	sub esp, 4
0x804af84:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af87:   8d 93 45 d1 ff ff               	lea edx, [ebx - 0x2ebb]
0x804af8d:   52                              	push edx
0x804af8e:   50                              	push eax
0x804af8f:   e8 e3 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af94:   83 c4 10                        	add esp, 0x10
0x804af97:   0f b7 83 50 00 00 00            	movzx eax, word ptr [ebx + 0x50]
0x804af9e:   98                              	cwde 
0x804af9f:   83 ec 04                        	sub esp, 4
0x804afa2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa5:   8d 93 4b d1 ff ff               	lea edx, [ebx - 0x2eb5]
0x804afab:   52                              	push edx
0x804afac:   50                              	push eax
0x804afad:   e8 c5 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb2:   83 c4 10                        	add esp, 0x10
0x804afb5:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804afbb:   83 ec 04                        	sub esp, 4
0x804afbe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc1:   8d 93 51 d1 ff ff               	lea edx, [ebx - 0x2eaf]
0x804afc7:   52                              	push edx
0x804afc8:   50                              	push eax
0x804afc9:   e8 a9 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afce:   83 c4 10                        	add esp, 0x10
0x804afd1:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804afd7:   f7 d0                           	not eax
0x804afd9:   83 ec 08                        	sub esp, 8
0x804afdc:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afdf:   50                              	push eax
0x804afe0:   e8 81 d4 ff ff                  	call 0x8048466 <platform_main_end>
0x804afe5:   83 c4 10                        	add esp, 0x10
0x804afe8:   b8 00 00 00 00                  	mov eax, 0
0x804afed:   8d 65 f8                        	lea esp, [ebp - 8]
0x804aff0:   59                              	pop ecx
0x804aff1:   5b                              	pop ebx
0x804aff2:   5d                              	pop ebp
0x804aff3:   8d 61 fc                        	lea esp, [ecx - 4]
0x804aff6:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804aff7 -- 0x804affb
0x804aff7:   8b 04 24                        	mov eax, dword ptr [esp]
0x804affa:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804affb -- 0x804afff
0x804affb:   8b 14 24                        	mov edx, dword ptr [esp]
0x804affe:   c3                              	ret 
; data inside code section at 0x804afff -- 0x804b000
0x804afff:   90                                                 |.               |
; function: __libc_csu_init at 0x804b000 -- 0x804b05d
0x804b000:   55                              	push ebp
0x804b001:   57                              	push edi
0x804b002:   56                              	push esi
0x804b003:   53                              	push ebx
0x804b004:   e8 87 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b009:   81 c3 f7 2f 00 00               	add ebx, 0x2ff7
0x804b00f:   83 ec 0c                        	sub esp, 0xc
0x804b012:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b016:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b01c:   e8 ab d2 ff ff                  	call 0x80482cc <_init>
0x804b021:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b027:   29 c6                           	sub esi, eax
0x804b029:   c1 fe 02                        	sar esi, 2
0x804b02c:   85 f6                           	test esi, esi
0x804b02e:   74 25                           	je 0x804b055 <__libc_csu_init+0x55>
0x804b030:   31 ff                           	xor edi, edi
0x804b032:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b038:   83 ec 04                        	sub esp, 4
0x804b03b:   55                              	push ebp
0x804b03c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b040:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b044:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b04b:   83 c7 01                        	add edi, 1
0x804b04e:   83 c4 10                        	add esp, 0x10
0x804b051:   39 fe                           	cmp esi, edi
0x804b053:   75 e3                           	jne 0x804b038 <__libc_csu_init+0x38>
0x804b055:   83 c4 0c                        	add esp, 0xc
0x804b058:   5b                              	pop ebx
0x804b059:   5e                              	pop esi
0x804b05a:   5f                              	pop edi
0x804b05b:   5d                              	pop ebp
0x804b05c:   c3                              	ret 
; data inside code section at 0x804b05d -- 0x804b060
0x804b05d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b060 -- 0x804b062
0x804b060:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b064 -- 0x804b078
0x804b064:   53                              	push ebx
0x804b065:   83 ec 08                        	sub esp, 8
0x804b068:   e8 23 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b06d:   81 c3 93 2f 00 00               	add ebx, 0x2f93
0x804b073:   83 c4 08                        	add esp, 8
0x804b076:   5b                              	pop ebx
0x804b077:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 7c b0 04 08  04 00 00 00 11 00 10 00   |....|...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b078:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b088:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b098:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b0a8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b0b8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b0c8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b0d8:   11 92 53 b6 31 00 67 5f  38 00 67 5f 39 00 67 5f   |..S.1.g_8.g_9.g_|
0x804b0e8:   31 38 00 67 5f 33 36 00  67 5f 33 37 00 67 5f 35   |18.g_36.g_37.g_5|
0x804b0f8:   33 00 67 5f 36 37 00 67  5f 37 33 00 67 5f 38 33   |3.g_67.g_73.g_83|
0x804b108:   00 67 5f 31 30 32 00 67  5f 31 30 33 00 67 5f 31   |.g_102.g_103.g_1|
0x804b118:   30 34 00 67 5f 31 34 36  00 67 5f 31 34 37 00 67   |04.g_146.g_147.g|
0x804b128:   5f 31 35 32 00 67 5f 31  39 32 00 67 5f 32 35 30   |_152.g_192.g_250|
0x804b138:   00 67 5f 32 35 32 00 67  5f 33 33 31 00 67 5f 34   |.g_252.g_331.g_4|
0x804b148:   33 35 00 67 5f 34 33 36  00 67 5f 34 36 37 00 00   |35.g_436.g_467..|
0x804b158:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b168:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b178:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b188:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b198:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b1a8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b1b8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b1c0:   01 1b 03 3b b8 02 00 00  56 00 00 00 30 d1 ff ff   |...;....V...0...|
0x804b1d0:   e8 02 00 00 70 d1 ff ff  0c 03 00 00 c0 d1 ff ff   |....p...........|
0x804b1e0:   d4 02 00 00 96 d2 ff ff  20 03 00 00 a6 d2 ff ff   |........ .......|
0x804b1f0:   40 03 00 00 d4 d2 ff ff  64 03 00 00 f2 d2 ff ff   |@.......d.......|
0x804b200:   84 03 00 00 1a d3 ff ff  a4 03 00 00 44 d3 ff ff   |............D...|
0x804b210:   c4 03 00 00 6d d3 ff ff  e4 03 00 00 b0 d3 ff ff   |....m...........|
0x804b220:   04 04 00 00 f1 d3 ff ff  24 04 00 00 49 d4 ff ff   |........$...I...|
0x804b230:   48 04 00 00 9b d4 ff ff  6c 04 00 00 d8 d4 ff ff   |H.......l.......|
0x804b240:   8c 04 00 00 0f d5 ff ff  ac 04 00 00 2e d5 ff ff   |................|
0x804b250:   cc 04 00 00 58 d5 ff ff  ec 04 00 00 84 d5 ff ff   |....X...........|
0x804b260:   0c 05 00 00 af d5 ff ff  2c 05 00 00 f8 d5 ff ff   |........,.......|
0x804b270:   4c 05 00 00 3f d6 ff ff  6c 05 00 00 99 d6 ff ff   |L...?...l.......|
0x804b280:   90 05 00 00 ed d6 ff ff  b4 05 00 00 2c d7 ff ff   |............,...|
0x804b290:   d4 05 00 00 65 d7 ff ff  f4 05 00 00 87 d7 ff ff   |....e...........|
0x804b2a0:   14 06 00 00 d5 d7 ff ff  34 06 00 00 11 d8 ff ff   |........4.......|
0x804b2b0:   54 06 00 00 9a d8 ff ff  74 06 00 00 cc d8 ff ff   |T.......t.......|
0x804b2c0:   94 06 00 00 fc d8 ff ff  b4 06 00 00 41 d9 ff ff   |............A...|
0x804b2d0:   d4 06 00 00 80 d9 ff ff  f4 06 00 00 b2 d9 ff ff   |................|
0x804b2e0:   14 07 00 00 de d9 ff ff  34 07 00 00 fc d9 ff ff   |........4.......|
0x804b2f0:   54 07 00 00 24 da ff ff  74 07 00 00 49 da ff ff   |T...$...t...I...|
0x804b300:   94 07 00 00 6e da ff ff  b4 07 00 00 a5 da ff ff   |....n...........|
0x804b310:   d4 07 00 00 d9 da ff ff  f4 07 00 00 2b db ff ff   |............+...|
0x804b320:   18 08 00 00 77 db ff ff  3c 08 00 00 ae db ff ff   |....w...<.......|
0x804b330:   5c 08 00 00 df db ff ff  7c 08 00 00 fe db ff ff   |\.......|.......|
0x804b340:   9c 08 00 00 28 dc ff ff  bc 08 00 00 50 dc ff ff   |....(.......P...|
0x804b350:   dc 08 00 00 79 dc ff ff  fc 08 00 00 b5 dc ff ff   |....y...........|
0x804b360:   1c 09 00 00 ef dc ff ff  3c 09 00 00 42 dd ff ff   |........<...B...|
0x804b370:   60 09 00 00 8f dd ff ff  84 09 00 00 c7 dd ff ff   |`...............|
0x804b380:   a4 09 00 00 f9 dd ff ff  c4 09 00 00 0d de ff ff   |................|
0x804b390:   e4 09 00 00 24 de ff ff  04 0a 00 00 39 de ff ff   |....$.......9...|
0x804b3a0:   24 0a 00 00 4f de ff ff  44 0a 00 00 76 de ff ff   |$...O...D...v...|
0x804b3b0:   64 0a 00 00 9b de ff ff  84 0a 00 00 da de ff ff   |d...............|
0x804b3c0:   a4 0a 00 00 13 df ff ff  c4 0a 00 00 3f df ff ff   |............?...|
0x804b3d0:   e4 0a 00 00 65 df ff ff  04 0b 00 00 a7 df ff ff   |....e...........|
0x804b3e0:   24 0b 00 00 e9 df ff ff  44 0b 00 00 2b e0 ff ff   |$.......D...+...|
0x804b3f0:   64 0b 00 00 a0 e0 ff ff  84 0b 00 00 fd e0 ff ff   |d...............|
0x804b400:   a4 0b 00 00 5a e1 ff ff  c4 0b 00 00 b7 e1 ff ff   |....Z...........|
0x804b410:   e4 0b 00 00 47 e2 ff ff  04 0c 00 00 ab e2 ff ff   |....G...........|
0x804b420:   24 0c 00 00 1b e3 ff ff  44 0c 00 00 62 e3 ff ff   |$.......D...b...|
0x804b430:   68 0c 00 00 b7 e3 ff ff  88 0c 00 00 fe e3 ff ff   |h...............|
0x804b440:   ac 0c 00 00 66 e4 ff ff  d0 0c 00 00 bc e5 ff ff   |....f...........|
0x804b450:   00 0d 00 00 20 fb ff ff  30 0d 00 00 37 fe ff ff   |.... ...0...7...|
0x804b460:   68 0d 00 00 3b fe ff ff  7c 0d 00 00 40 fe ff ff   |h...;...|...@...|
0x804b470:   90 0d 00 00 a0 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804b47c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b48c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b49c:   e4 ce ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b4ac:   30 00 00 00 40 ce ff ff  40 00 00 00 00 0e 08 46   |0...@...@......F|
0x804b4bc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b4cc:   10 00 00 00 54 00 00 00  5c ce ff ff 08 00 00 00   |....T...\.......|
0x804b4dc:   00 00 00 00 1c 00 00 00  68 00 00 00 6e cf ff ff   |........h...n...|
0x804b4ec:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b4fc:   04 04 00 00 20 00 00 00  88 00 00 00 5e cf ff ff   |.... .......^...|
0x804b50c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b51c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b52c:   68 cf ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804b53c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b54c:   66 cf ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |f...(....A....B.|
0x804b55c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b56c:   6e cf ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |n...*....A....B.|
0x804b57c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b58c:   78 cf ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |x...)....A....B.|
0x804b59c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b5ac:   81 cf ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b5bc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b5cc:   a4 cf ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b5dc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b5ec:   c5 cf ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b5fc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b60c:   90 01 00 00 f9 cf ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b61c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b62c:   1c 00 00 00 b4 01 00 00  27 d0 ff ff 3d 00 00 00   |........'...=...|
0x804b63c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b64c:   1c 00 00 00 d4 01 00 00  44 d0 ff ff 37 00 00 00   |........D...7...|
0x804b65c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b66c:   1c 00 00 00 f4 01 00 00  5b d0 ff ff 1f 00 00 00   |........[.......|
0x804b67c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b68c:   1c 00 00 00 14 02 00 00  5a d0 ff ff 2a 00 00 00   |........Z...*...|
0x804b69c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b6ac:   1c 00 00 00 34 02 00 00  64 d0 ff ff 2c 00 00 00   |....4...d...,...|
0x804b6bc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b6cc:   1c 00 00 00 54 02 00 00  70 d0 ff ff 2b 00 00 00   |....T...p...+...|
0x804b6dc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b6ec:   1c 00 00 00 74 02 00 00  7b d0 ff ff 49 00 00 00   |....t...{...I...|
0x804b6fc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b70c:   1c 00 00 00 94 02 00 00  a4 d0 ff ff 47 00 00 00   |............G...|
0x804b71c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b72c:   20 00 00 00 b4 02 00 00  cb d0 ff ff 5a 00 00 00   | ...........Z...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b74c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 01 d1 ff ff   |.... ...........|
0x804b75c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b76c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b77c:   31 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |1...?....A....B.|
0x804b78c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b79c:   50 d1 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |P...9....A....B.|
0x804b7ac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b7bc:   69 d1 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |i..."....A....B.|
0x804b7cc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b7dc:   6b d1 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |k...N....A....B.|
0x804b7ec:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b7fc:   99 d1 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b80c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b81c:   b5 d1 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b82c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b83c:   1e d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b84c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b85c:   30 d2 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |0...0....A....B.|
0x804b86c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b87c:   40 d2 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |@...E....A....B.|
0x804b88c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b89c:   65 d2 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |e...?....A....B.|
0x804b8ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b8bc:   84 d2 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b8cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b8dc:   96 d2 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b8ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b8fc:   a2 d2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b90c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b91c:   a0 d2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b92c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b93c:   a8 d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b94c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b95c:   ad d2 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b96c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b97c:   b2 d2 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804b98c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b99c:   c9 d2 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804b9ac:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b9bc:   dd d2 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804b9cc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b9dc:   60 05 00 00 0b d3 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b9ec:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b9fc:   1c 00 00 00 84 05 00 00  33 d3 ff ff 37 00 00 00   |........3...7...|
0x804ba0c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ba1c:   1c 00 00 00 a4 05 00 00  4a d3 ff ff 31 00 00 00   |........J...1...|
0x804ba2c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ba3c:   1c 00 00 00 c4 05 00 00  5b d3 ff ff 1f 00 00 00   |........[.......|
0x804ba4c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ba5c:   1c 00 00 00 e4 05 00 00  5a d3 ff ff 2a 00 00 00   |........Z...*...|
0x804ba6c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804ba7c:   1c 00 00 00 04 06 00 00  64 d3 ff ff 28 00 00 00   |........d...(...|
0x804ba8c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804ba9c:   1c 00 00 00 24 06 00 00  6c d3 ff ff 29 00 00 00   |....$...l...)...|
0x804baac:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804babc:   1c 00 00 00 44 06 00 00  75 d3 ff ff 3c 00 00 00   |....D...u...<...|
0x804bacc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804badc:   1c 00 00 00 64 06 00 00  91 d3 ff ff 3a 00 00 00   |....d.......:...|
0x804baec:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bafc:   20 00 00 00 84 06 00 00  ab d3 ff ff 53 00 00 00   | ...........S...|
0x804bb0c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bb1c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 da d3 ff ff   |.... ...........|
0x804bb2c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bb3c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bb4c:   03 d4 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bb5c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bb6c:   1b d4 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bb7c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bb8c:   2d d4 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804bb9c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bbac:   21 d4 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |!........A....B.|
0x804bbbc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bbcc:   18 d4 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbdc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bbec:   0d d4 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bbfc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bc0c:   03 d4 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bc1c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bc2c:   0a d4 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bc3c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bc4c:   0f d4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bc5c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bc6c:   2e d4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bc7c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bc8c:   47 d4 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |G...,....A....B.|
0x804bc9c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bcac:   53 d4 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |S...&....A....B.|
0x804bcbc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bccc:   59 d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Y...B....A....B.|
0x804bcdc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bcec:   7b d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |{...B....A....B.|
0x804bcfc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804bd0c:   9d d4 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804bd1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804bd2c:   bf d4 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804bd3c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804bd4c:   14 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804bd6c:   51 d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Q...]....A....B.|
0x804bd7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804bd8c:   8e d5 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804bd9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804bdac:   cb d5 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bdbc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804bdcc:   3b d6 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |;...d....A....B.|
0x804bddc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804bdec:   7f d6 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804bdfc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804be0c:   cf d6 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804be1c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804be2c:   b0 09 00 00 f2 d6 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804be3c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804be4c:   d0 09 00 00 27 d7 ff ff  47 00 00 00 00 41 0e 08   |....'...G....A..|
0x804be5c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804be6c:   20 00 00 00 f4 09 00 00  4a d7 ff ff 68 00 00 00   | .......J...h...|
0x804be7c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804be8c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 8e d7 ff ff   |....,...........|
0x804be9c:   56 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |V....A....B..F..|
0x804beac:   86 04 83 05 03 49 01 c3  41 c6 41 c7 41 c5 0c 04   |.....I..A.A.A...|
0x804bebc:   04 00 00 00 2c 00 00 00  48 0a 00 00 b4 d8 ff ff   |....,...H.......|
0x804becc:   64 15 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |d....A....B..I..|
0x804bedc:   86 04 83 05 03 54 15 c3  41 c6 41 c7 41 c5 0c 04   |.....T..A.A.A...|
0x804beec:   04 00 00 00 34 00 00 00  78 0a 00 00 e8 ed ff ff   |....4...x.......|
0x804befc:   17 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804bf0c:   0f 03 75 78 06 10 03 02  75 7c 03 02 03 c1 0c 01   |..ux....u|......|
0x804bf1c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804bf2c:   b0 0a 00 00 c7 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804bf3c:   10 00 00 00 c4 0a 00 00  b7 f0 ff ff 04 00 00 00   |................|
0x804bf4c:   00 00 00 00 48 00 00 00  d8 0a 00 00 a8 f0 ff ff   |....H...........|
0x804bf5c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804bf6c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804bf7c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bf8c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bf9c:   10 00 00 00 24 0b 00 00  bc f0 ff ff 02 00 00 00   |....$...........|
0x804bfac:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 64 b0 04 08  19 00 00 00 0c df 04 08   |....d...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff 14 2a 62 da   |.............*b.|
0x804e028:   5c 40 28 86 16 cf ff ff  c2 c5 9f da 01 00 00 00   |\@(.............|
0x804e038:   06 00 ff 00 eb 52 43 00  02 00 00 00 ff ff ff ff   |.....RC.........|
0x804e048:   02 00 00 00 ff 00 ff ff  b6 d1 00 00 4e 5e 41 ed   |............N^A.|
0x804e058:   ??                                                 |?               |
