;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:23:54
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 db ff ff               	lea eax, [ebx - 0x2450]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 db ff ff               	lea eax, [ebx - 0x24b0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 ab a7 04 08               	mov eax, 0x804a7ab
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483a5:   3d 74 d0 04 08                  	cmp eax, 0x804d074
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 74 d0 04 08                  	push 0x804d074
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 74 d0 04 08                  	mov eax, 0x804d074
0x80483e5:   2d 74 d0 04 08                  	sub eax, 0x804d074
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 74 d0 04 08                  	push 0x804d074
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 d0 04 08 00            	cmp byte ptr [0x804d080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 d0 04 08 01            	mov byte ptr [0x804d080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 dd 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 c9 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 db ff ff               	lea edx, [eax - 0x2430]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 9c 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 7e 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 56 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 2c 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 03 26 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 c0 25 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 7e 25 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 26 25 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 d5 24 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 98 24 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 61 24 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 42 24 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 18 24 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 ec 23 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 c1 23 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 78 23 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 30 23 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 d6 22 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 83 22 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 44 22 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 0e 22 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 ec 21 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 9e 21 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 62 21 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 d9 20 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 a7 20 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 77 20 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 32 20 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 f3 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 c1 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 92 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 74 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 4c 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 27 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 02 1f 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 cb 1e 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 96 1e 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 44 1e 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 f9 1d 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 c2 1d 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 91 1d 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 72 1d 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 48 1d 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 20 1d 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 f7 1c 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 bb 1c 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 80 1c 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 2d 1c 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 e1 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 a9 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 7a 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 66 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 4f 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 3a 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 24 1b 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 fd 1a 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 d8 1a 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 99 1a 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 60 1a 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 34 1a 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 0e 1a 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 c8 dc ff ff               	fld dword ptr [eax - 0x2338]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 cc 19 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 c4 dc ff ff               	fld dword ptr [eax - 0x233c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 c8 dc ff ff               	fld dword ptr [eax - 0x2338]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 8a 19 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 cc dc ff ff               	fld dword ptr [eax - 0x2334]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 d0 dc ff ff               	fld dword ptr [eax - 0x2330]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 d4 dc ff ff               	fld dword ptr [eax - 0x232c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 48 19 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 d8 dc ff ff               	fld dword ptr [eax - 0x2328]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 dc dc ff ff               	fld dword ptr [eax - 0x2324]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 e0 dc ff ff               	fld dword ptr [eax - 0x2320]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 d0 18 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 f0 dc ff ff               	fld qword ptr [eax - 0x2310]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 73 18 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 e8 dc ff ff               	fld qword ptr [eax - 0x2318]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 f0 dc ff ff               	fld qword ptr [eax - 0x2310]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 16 18 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 f8 dc ff ff               	fld qword ptr [eax - 0x2308]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 00 dd ff ff               	fld qword ptr [eax - 0x2300]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 08 dd ff ff               	fld qword ptr [eax - 0x22f8]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 b9 17 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 10 dd ff ff               	fld qword ptr [eax - 0x22f0]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 18 dd ff ff               	fld qword ptr [eax - 0x22e8]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 20 dd ff ff               	fld qword ptr [eax - 0x22e0]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 29 17 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 28 dd ff ff               	fld dword ptr [eax - 0x22d8]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 2c dd ff ff               	fld dword ptr [eax - 0x22d4]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 c5 16 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 54 16 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 11 16 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 db ff ff               	lea eax, [ebx - 0x2420]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 dc ff ff               	lea eax, [ebx - 0x23fc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x80497b4
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 4c                        	sub esp, 0x4c
0x804962f:   e8 0b 15 00 00                  	call 0x804ab3f <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 39 00 00               	add edx, 0x39cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   8b 4d 14                        	mov ecx, dword ptr [ebp + 0x14]
0x8049640:   8b 5d 18                        	mov ebx, dword ptr [ebp + 0x18]
0x8049643:   8b 75 1c                        	mov esi, dword ptr [ebp + 0x1c]
0x8049646:   8b 7d 20                        	mov edi, dword ptr [ebp + 0x20]
0x8049649:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804964c:   8b 7d 24                        	mov edi, dword ptr [ebp + 0x24]
0x804964f:   89 7d bc                        	mov dword ptr [ebp - 0x44], edi
0x8049652:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x8049655:   89 7d b8                        	mov dword ptr [ebp - 0x48], edi
0x8049658:   8b 7d 3c                        	mov edi, dword ptr [ebp + 0x3c]
0x804965b:   89 7d b4                        	mov dword ptr [ebp - 0x4c], edi
0x804965e:   8b 7d 48                        	mov edi, dword ptr [ebp + 0x48]
0x8049661:   89 7d b0                        	mov dword ptr [ebp - 0x50], edi
0x8049664:   8b 7d 50                        	mov edi, dword ptr [ebp + 0x50]
0x8049667:   89 7d ac                        	mov dword ptr [ebp - 0x54], edi
0x804966a:   8b 7d 54                        	mov edi, dword ptr [ebp + 0x54]
0x804966d:   89 7d a8                        	mov dword ptr [ebp - 0x58], edi
0x8049670:   8b 7d 58                        	mov edi, dword ptr [ebp + 0x58]
0x8049673:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x8049676:   89 c8                           	mov eax, ecx
0x8049678:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x804967b:   89 d8                           	mov eax, ebx
0x804967d:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x8049680:   89 f0                           	mov eax, esi
0x8049682:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049686:   0f b6 45 c0                     	movzx eax, byte ptr [ebp - 0x40]
0x804968a:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x804968d:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049691:   88 45 dc                        	mov byte ptr [ebp - 0x24], al
0x8049694:   0f b6 45 b8                     	movzx eax, byte ptr [ebp - 0x48]
0x8049698:   88 45 d8                        	mov byte ptr [ebp - 0x28], al
0x804969b:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804969f:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496a3:   0f b6 45 b0                     	movzx eax, byte ptr [ebp - 0x50]
0x80496a7:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496aa:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x80496ae:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496b1:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496b5:   66 89 45 c8                     	mov word ptr [ebp - 0x38], ax
0x80496b9:   89 f8                           	mov eax, edi
0x80496bb:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496bf:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x80496c3:   88 82 24 00 00 00               	mov byte ptr [edx + 0x24], al
0x80496c9:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80496cc:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x80496d2:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x80496d5:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x80496db:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x80496df:   88 82 30 00 00 00               	mov byte ptr [edx + 0x30], al
0x80496e5:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x80496e9:   88 82 a4 04 00 00               	mov byte ptr [edx + 0x4a4], al
0x80496ef:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x80496f3:   66 89 82 32 00 00 00            	mov word ptr [edx + 0x32], ax
0x80496fa:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x80496fe:   88 82 34 00 00 00               	mov byte ptr [edx + 0x34], al
0x8049704:   0f b6 45 dc                     	movzx eax, byte ptr [ebp - 0x24]
0x8049708:   88 82 35 00 00 00               	mov byte ptr [edx + 0x35], al
0x804970e:   8b 45 28                        	mov eax, dword ptr [ebp + 0x28]
0x8049711:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x8049717:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804971a:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049720:   0f b6 45 d8                     	movzx eax, byte ptr [ebp - 0x28]
0x8049724:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x804972a:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804972d:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049733:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049736:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x804973c:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x8049740:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049747:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x804974a:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x8049750:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x8049753:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x8049759:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x804975d:   88 82 58 00 00 00               	mov byte ptr [edx + 0x58], al
0x8049763:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049766:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x804976c:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x8049770:   88 82 60 00 00 00               	mov byte ptr [edx + 0x60], al
0x8049776:   0f b7 45 c8                     	movzx eax, word ptr [ebp - 0x38]
0x804977a:   66 89 82 62 00 00 00            	mov word ptr [edx + 0x62], ax
0x8049781:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049785:   66 89 82 64 00 00 00            	mov word ptr [edx + 0x64], ax
0x804978c:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804978f:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x8049795:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049798:   89 82 6c 00 00 00               	mov dword ptr [edx + 0x6c], eax
0x804979e:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x80497a1:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x80497a7:   b8 00 00 00 00                  	mov eax, 0
0x80497ac:   83 c4 4c                        	add esp, 0x4c
0x80497af:   5b                              	pop ebx
0x80497b0:   5e                              	pop esi
0x80497b1:   5f                              	pop edi
0x80497b2:   5d                              	pop ebp
0x80497b3:   c3                              	ret 
; function: func_1 at 0x80497b4 -- 0x804a7ab
0x80497b4:   55                              	push ebp
0x80497b5:   89 e5                           	mov ebp, esp
0x80497b7:   57                              	push edi
0x80497b8:   56                              	push esi
0x80497b9:   53                              	push ebx
0x80497ba:   81 ec 28 01 00 00               	sub esp, 0x128
0x80497c0:   e8 76 13 00 00                  	call 0x804ab3b <__x86.get_pc_thunk.ax>
0x80497c5:   05 3b 38 00 00                  	add eax, 0x383b
0x80497ca:   c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x80497ce:   c7 45 ec 06 00 00 00            	mov dword ptr [ebp - 0x14], 6
0x80497d5:   c7 45 e8 7a 93 32 d8            	mov dword ptr [ebp - 0x18], 0xd832937a
0x80497dc:   c6 45 e7 15                     	mov byte ptr [ebp - 0x19], 0x15
0x80497e0:   c6 45 e6 00                     	mov byte ptr [ebp - 0x1a], 0
0x80497e4:   66 c7 45 e4 81 cb               	mov word ptr [ebp - 0x1c], 0xcb81
0x80497ea:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x80497f1:   c6 45 e3 66                     	mov byte ptr [ebp - 0x1d], 0x66
0x80497f5:   c6 45 e2 ff                     	mov byte ptr [ebp - 0x1e], 0xff
0x80497f9:   c7 45 dc c7 4b 70 46            	mov dword ptr [ebp - 0x24], 0x46704bc7
0x8049800:   c7 45 d8 01 00 00 00            	mov dword ptr [ebp - 0x28], 1
0x8049807:   c6 45 d7 56                     	mov byte ptr [ebp - 0x29], 0x56
0x804980b:   c7 45 d0 20 f7 b2 9e            	mov dword ptr [ebp - 0x30], 0x9eb2f720
0x8049812:   c7 45 98 05 00 00 00            	mov dword ptr [ebp - 0x68], 5
0x8049819:   66 c7 45 ce a2 ad               	mov word ptr [ebp - 0x32], 0xada2
0x804981f:   c7 45 c8 65 03 df ff            	mov dword ptr [ebp - 0x38], 0xffdf0365
0x8049826:   c7 45 94 f8 ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffff8
0x804982d:   c7 45 c4 58 f2 5a 83            	mov dword ptr [ebp - 0x3c], 0x835af258
0x8049834:   c6 45 93 01                     	mov byte ptr [ebp - 0x6d], 1
0x8049838:   c7 45 8c ef ba bb b5            	mov dword ptr [ebp - 0x74], 0xb5bbbaef
0x804983f:   c6 45 8b ff                     	mov byte ptr [ebp - 0x75], 0xff
0x8049843:   66 c7 45 88 30 38               	mov word ptr [ebp - 0x78], 0x3830
0x8049849:   66 c7 45 c2 3d fd               	mov word ptr [ebp - 0x3e], 0xfd3d
0x804984f:   c7 45 bc 03 00 00 00            	mov dword ptr [ebp - 0x44], 3
0x8049856:   c7 45 84 f9 ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffff9
0x804985d:   c7 45 80 5b 9d 84 76            	mov dword ptr [ebp - 0x80], 0x76849d5b
0x8049864:   66 c7 85 7e ff ff ff ff ff      	mov word ptr [ebp - 0x82], 0xffff
0x804986d:   c7 45 b8 5e e8 8e f1            	mov dword ptr [ebp - 0x48], 0xf18ee85e
0x8049874:   c7 85 78 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x88], 0
0x804987e:   c7 45 b4 14 81 fd 46            	mov dword ptr [ebp - 0x4c], 0x46fd8114
0x8049885:   c7 85 74 ff ff ff f7 ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffff7
0x804988f:   c7 85 70 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x90], 0
0x8049899:   c7 85 6c ff ff ff 7d c8 63 83   	mov dword ptr [ebp - 0x94], 0x8363c87d
0x80498a3:   c7 85 68 ff ff ff 31 3e 02 48   	mov dword ptr [ebp - 0x98], 0x48023e31
0x80498ad:   c7 85 64 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x9c], 0
0x80498b7:   c6 85 63 ff ff ff 56            	mov byte ptr [ebp - 0x9d], 0x56
0x80498be:   66 c7 85 60 ff ff ff 00 00      	mov word ptr [ebp - 0xa0], 0
0x80498c7:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x80498cb:   c6 45 f3 00                     	mov byte ptr [ebp - 0xd], 0
0x80498cf:   e9 a1 0d 00 00                  	jmp 0x804a675 <func_1+0xec1>
0x80498d4:   c7 85 5c ff ff ff ad 44 81 47   	mov dword ptr [ebp - 0xa4], 0x478144ad
0x80498de:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x80498e8:   c7 85 54 ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffffe
0x80498f2:   66 c7 85 52 ff ff ff 03 00      	mov word ptr [ebp - 0xae], 3
0x80498fb:   c7 85 4c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb4], 0
0x8049905:   c7 45 b0 c1 f8 bf e2            	mov dword ptr [ebp - 0x50], 0xe2bff8c1
0x804990c:   c6 85 4b ff ff ff 01            	mov byte ptr [ebp - 0xb5], 1
0x8049913:   c6 85 4a ff ff ff 09            	mov byte ptr [ebp - 0xb6], 9
0x804991a:   66 c7 85 48 ff ff ff d3 0c      	mov word ptr [ebp - 0xb8], 0xcd3
0x8049923:   66 c7 85 46 ff ff ff f7 ff      	mov word ptr [ebp - 0xba], 0xfff7
0x804992c:   80 45 e6 01                     	add byte ptr [ebp - 0x1a], 1
0x8049930:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049934:   75 04                           	jne 0x804993a <func_1+0x186>
0x8049936:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x804993a:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x804993e:   0f be d0                        	movsx edx, al
0x8049941:   b8 00 00 00 00                  	mov eax, 0
0x8049946:   29 d0                           	sub eax, edx
0x8049948:   c1 e0 02                        	shl eax, 2
0x804994b:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804994e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049951:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049954:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x804995b:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804995e:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049961:   0f be c8                        	movsx ecx, al
0x8049964:   b8 07 00 00 00                  	mov eax, 7
0x8049969:   99                              	cdq 
0x804996a:   f7 f9                           	idiv ecx
0x804996c:   89 d0                           	mov eax, edx
0x804996e:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049971:   0f 9e c0                        	setle al
0x8049974:   0f b6 c0                        	movzx eax, al
0x8049977:   8b 55 ec                        	mov edx, dword ptr [ebp - 0x14]
0x804997a:   0f be d2                        	movsx edx, dl
0x804997d:   89 c1                           	mov ecx, eax
0x804997f:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049983:   21 c8                           	and eax, ecx
0x8049985:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049989:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804998d:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049993:   0f b7 c0                        	movzx eax, ax
0x8049996:   89 c1                           	mov ecx, eax
0x8049998:   d3 e3                           	shl ebx, cl
0x804999a:   89 d9                           	mov ecx, ebx
0x804999c:   0f bf 85 52 ff ff ff            	movsx eax, word ptr [ebp - 0xae]
0x80499a3:   39 c1                           	cmp ecx, eax
0x80499a5:   0f 95 c0                        	setne al
0x80499a8:   0f b6 c0                        	movzx eax, al
0x80499ab:   89 c1                           	mov ecx, eax
0x80499ad:   d3 fa                           	sar edx, cl
0x80499af:   89 d0                           	mov eax, edx
0x80499b1:   0f b7 d0                        	movzx edx, ax
0x80499b4:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x80499bb:   0f b7 c0                        	movzx eax, ax
0x80499be:   89 c1                           	mov ecx, eax
0x80499c0:   d3 e2                           	shl edx, cl
0x80499c2:   89 d0                           	mov eax, edx
0x80499c4:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80499c7:   0f bf 85 7e ff ff ff            	movsx eax, word ptr [ebp - 0x82]
0x80499ce:   33 45 e8                        	xor eax, dword ptr [ebp - 0x18]
0x80499d1:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80499d4:   0f 96 c0                        	setbe al
0x80499d7:   0f b6 c0                        	movzx eax, al
0x80499da:   23 45 ec                        	and eax, dword ptr [ebp - 0x14]
0x80499dd:   85 c0                           	test eax, eax
0x80499df:   0f 84 e9 00 00 00               	je 0x8049ace <func_1+0x31a>
0x80499e5:   c7 85 f4 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x10c], 0
0x80499ef:   66 c7 85 f2 fe ff ff 00 00      	mov word ptr [ebp - 0x10e], 0
0x80499f8:   0f bf 9d 7e ff ff ff            	movsx ebx, word ptr [ebp - 0x82]
0x80499ff:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049a03:   0f b7 95 f2 fe ff ff            	movzx edx, word ptr [ebp - 0x10e]
0x8049a0a:   39 95 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], edx
0x8049a10:   0f 9e c2                        	setle dl
0x8049a13:   0f b6 f2                        	movzx esi, dl
0x8049a16:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x8049a19:   0f b6 d2                        	movzx edx, dl
0x8049a1c:   89 d1                           	mov ecx, edx
0x8049a1e:   d3 fe                           	sar esi, cl
0x8049a20:   89 f2                           	mov edx, esi
0x8049a22:   0f b7 d2                        	movzx edx, dx
0x8049a25:   b9 01 00 00 00                  	mov ecx, 1
0x8049a2a:   29 d1                           	sub ecx, edx
0x8049a2c:   89 ca                           	mov edx, ecx
0x8049a2e:   89 95 58 ff ff ff               	mov dword ptr [ebp - 0xa8], edx
0x8049a34:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x8049a3a:   75 06                           	jne 0x8049a42 <func_1+0x28e>
0x8049a3c:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x8049a40:   74 07                           	je 0x8049a49 <func_1+0x295>
0x8049a42:   b8 01 00 00 00                  	mov eax, 1
0x8049a47:   eb 05                           	jmp 0x8049a4e <func_1+0x29a>
0x8049a49:   b8 00 00 00 00                  	mov eax, 0
0x8049a4e:   39 d8                           	cmp eax, ebx
0x8049a50:   0f 9d c0                        	setge al
0x8049a53:   0f b6 c0                        	movzx eax, al
0x8049a56:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049a5c:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049a60:   0f b6 c8                        	movzx ecx, al
0x8049a63:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x8049a67:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x8049a6a:   0f 95 c0                        	setne al
0x8049a6d:   0f b6 c0                        	movzx eax, al
0x8049a70:   39 85 f4 fe ff ff               	cmp dword ptr [ebp - 0x10c], eax
0x8049a76:   0f 9c c0                        	setl al
0x8049a79:   0f b6 c0                        	movzx eax, al
0x8049a7c:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a7f:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049a82:   83 c8 01                        	or eax, 1
0x8049a85:   0f be d8                        	movsx ebx, al
0x8049a88:   b8 ca ff ff ff                  	mov eax, 0xffffffca
0x8049a8d:   99                              	cdq 
0x8049a8e:   f7 fb                           	idiv ebx
0x8049a90:   85 c0                           	test eax, eax
0x8049a92:   0f 95 c0                        	setne al
0x8049a95:   0f b6 c0                        	movzx eax, al
0x8049a98:   f7 d8                           	neg eax
0x8049a9a:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x8049aa0:   0f 94 c0                        	sete al
0x8049aa3:   0f b6 c0                        	movzx eax, al
0x8049aa6:   89 85 58 ff ff ff               	mov dword ptr [ebp - 0xa8], eax
0x8049aac:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049ab2:   83 c0 4f                        	add eax, 0x4f
0x8049ab5:   0f b6 c0                        	movzx eax, al
0x8049ab8:   0f af c1                        	imul eax, ecx
0x8049abb:   66 c1 e8 0c                     	shr ax, 0xc
0x8049abf:   0f b7 c0                        	movzx eax, ax
0x8049ac2:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049ac5:   83 75 e8 01                     	xor dword ptr [ebp - 0x18], 1
0x8049ac9:   e9 9d 0b 00 00                  	jmp 0x804a66b <func_1+0xeb7>
0x8049ace:   c6 85 45 ff ff ff f8            	mov byte ptr [ebp - 0xbb], 0xf8
0x8049ad5:   c7 45 ac ff ff ff ff            	mov dword ptr [ebp - 0x54], 0xffffffff
0x8049adc:   c7 45 a8 f8 ff ff ff            	mov dword ptr [ebp - 0x58], 0xfffffff8
0x8049ae3:   c7 85 40 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xc0], 0xffffffff
0x8049aed:   c7 45 a4 a9 45 b3 34            	mov dword ptr [ebp - 0x5c], 0x34b345a9
0x8049af4:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x8049afb:   0f 84 7d 05 00 00               	je 0x804a07e <func_1+0x8ca>
0x8049b01:   c6 85 1b ff ff ff 62            	mov byte ptr [ebp - 0xe5], 0x62
0x8049b08:   c7 85 14 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xec], 0xffffffff
0x8049b12:   c7 85 10 ff ff ff 89 12 cb c2   	mov dword ptr [ebp - 0xf0], 0xc2cb1289
0x8049b1c:   66 0f be 55 e7                  	movsx dx, byte ptr [ebp - 0x19]
0x8049b21:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049b28:   66 98                           	cbw 
0x8049b2a:   0f af c2                        	imul eax, edx
0x8049b2d:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049b31:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049b34:   f7 d0                           	not eax
0x8049b36:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049b39:   0f 94 c0                        	sete al
0x8049b3c:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049b3f:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x8049b49:   c7 85 08 ff ff ff 83 89 c4 80   	mov dword ptr [ebp - 0xf8], 0x80c48983
0x8049b53:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x8049b57:   75 1c                           	jne 0x8049b75 <func_1+0x3c1>
0x8049b59:   0f bf 85 52 ff ff ff            	movsx eax, word ptr [ebp - 0xae]
0x8049b60:   89 85 08 ff ff ff               	mov dword ptr [ebp - 0xf8], eax
0x8049b66:   8b 85 08 ff ff ff               	mov eax, dword ptr [ebp - 0xf8]
0x8049b6c:   88 45 e3                        	mov byte ptr [ebp - 0x1d], al
0x8049b6f:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x8049b73:   74 07                           	je 0x8049b7c <func_1+0x3c8>
0x8049b75:   bb 01 00 00 00                  	mov ebx, 1
0x8049b7a:   eb 05                           	jmp 0x8049b81 <func_1+0x3cd>
0x8049b7c:   bb 00 00 00 00                  	mov ebx, 0
0x8049b81:   0f b6 85 1b ff ff ff            	movzx eax, byte ptr [ebp - 0xe5]
0x8049b88:   0f be c0                        	movsx eax, al
0x8049b8b:   ba 75 00 00 00                  	mov edx, 0x75
0x8049b90:   89 c1                           	mov ecx, eax
0x8049b92:   d3 fa                           	sar edx, cl
0x8049b94:   89 d0                           	mov eax, edx
0x8049b96:   0f be d0                        	movsx edx, al
0x8049b99:   89 d0                           	mov eax, edx
0x8049b9b:   01 c0                           	add eax, eax
0x8049b9d:   01 d0                           	add eax, edx
0x8049b9f:   39 c3                           	cmp ebx, eax
0x8049ba1:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x8049ba8:   0f 94 c0                        	sete al
0x8049bab:   0f b6 d0                        	movzx edx, al
0x8049bae:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x8049bb2:   39 c2                           	cmp edx, eax
0x8049bb4:   0f 9c c0                        	setl al
0x8049bb7:   0f b6 c0                        	movzx eax, al
0x8049bba:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049bbd:   80 bd 45 ff ff ff 00            	cmp byte ptr [ebp - 0xbb], 0
0x8049bc4:   74 73                           	je 0x8049c39 <func_1+0x485>
0x8049bc6:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049bca:   89 c2                           	mov edx, eax
0x8049bcc:   c0 ea 07                        	shr dl, 7
0x8049bcf:   01 d0                           	add eax, edx
0x8049bd1:   d0 f8                           	sar al, 1
0x8049bd3:   f7 d8                           	neg eax
0x8049bd5:   0f be c0                        	movsx eax, al
0x8049bd8:   05 b8 41 05 34                  	add eax, 0x340541b8
0x8049bdd:   3d 70 83 0a 68                  	cmp eax, 0x680a8370
0x8049be2:   77 09                           	ja 0x8049bed <func_1+0x439>
0x8049be4:   83 bd 5c ff ff ff 00            	cmp dword ptr [ebp - 0xa4], 0
0x8049beb:   74 07                           	je 0x8049bf4 <func_1+0x440>
0x8049bed:   ba 01 00 00 00                  	mov edx, 1
0x8049bf2:   eb 05                           	jmp 0x8049bf9 <func_1+0x445>
0x8049bf4:   ba 00 00 00 00                  	mov edx, 0
0x8049bf9:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x8049bfd:   39 c2                           	cmp edx, eax
0x8049bff:   75 04                           	jne 0x8049c05 <func_1+0x451>
0x8049c01:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049c05:   c7 45 e8 f8 ff ff ff            	mov dword ptr [ebp - 0x18], 0xfffffff8
0x8049c0c:   80 bd 45 ff ff ff 09            	cmp byte ptr [ebp - 0xbb], 9
0x8049c13:   75 08                           	jne 0x8049c1d <func_1+0x469>
0x8049c15:   66 83 bd 52 ff ff ff 00         	cmp word ptr [ebp - 0xae], 0
0x8049c1d:   b8 01 00 00 00                  	mov eax, 1
0x8049c22:   89 c2                           	mov edx, eax
0x8049c24:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x8049c28:   09 d0                           	or eax, edx
0x8049c2a:   88 45 e2                        	mov byte ptr [ebp - 0x1e], al
0x8049c2d:   c7 45 dc 00 00 00 00            	mov dword ptr [ebp - 0x24], 0
0x8049c34:   e9 85 00 00 00                  	jmp 0x8049cbe <func_1+0x50a>
0x8049c39:   c7 85 04 ff ff ff 28 5c 35 2a   	mov dword ptr [ebp - 0xfc], 0x2a355c28
0x8049c43:   c7 85 08 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xf8], 0
0x8049c4d:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x8049c54:   0f be c0                        	movsx eax, al
0x8049c57:   21 45 b0                        	and dword ptr [ebp - 0x50], eax
0x8049c5a:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049c5d:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049c63:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049c66:   23 85 0c ff ff ff               	and eax, dword ptr [ebp - 0xf4]
0x8049c6c:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049c6f:   66 83 45 e4 01                  	add word ptr [ebp - 0x1c], 1
0x8049c74:   0f bf 95 7e ff ff ff            	movsx edx, word ptr [ebp - 0x82]
0x8049c7b:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049c81:   66 c1 f8 0f                     	sar ax, 0xf
0x8049c85:   98                              	cwde 
0x8049c86:   39 85 14 ff ff ff               	cmp dword ptr [ebp - 0xec], eax
0x8049c8c:   0f 9e c0                        	setle al
0x8049c8f:   0f b6 c0                        	movzx eax, al
0x8049c92:   39 c2                           	cmp edx, eax
0x8049c94:   0f 9f c0                        	setg al
0x8049c97:   0f b6 d0                        	movzx edx, al
0x8049c9a:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049c9e:   39 c2                           	cmp edx, eax
0x8049ca0:   0f 9e c0                        	setle al
0x8049ca3:   0f b6 c0                        	movzx eax, al
0x8049ca6:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049ca9:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x8049caf:   0d 9f 24 9b e3                  	or eax, 0xe39b249f
0x8049cb4:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x8049cba:   80 6d d7 01                     	sub byte ptr [ebp - 0x29], 1
0x8049cbe:   83 45 d0 01                     	add dword ptr [ebp - 0x30], 1
0x8049cc2:   66 83 45 ce 01                  	add word ptr [ebp - 0x32], 1
0x8049cc7:   c7 85 58 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xa8], 0
0x8049cd1:   83 bd 58 ff ff ff 03            	cmp dword ptr [ebp - 0xa8], 3
0x8049cd8:   0f 85 b2 00 00 00               	jne 0x8049d90 <func_1+0x5dc>
0x8049cde:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x8049ce2:   0f bf 55 88                     	movsx edx, word ptr [ebp - 0x78]
0x8049ce6:   0f be 4d 8b                     	movsx ecx, byte ptr [ebp - 0x75]
0x8049cea:   0f be 5d 93                     	movsx ebx, byte ptr [ebp - 0x6d]
0x8049cee:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x8049cf2:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049cf8:   0f b6 75 d7                     	movzx esi, byte ptr [ebp - 0x29]
0x8049cfc:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x8049d02:   0f b6 7d e2                     	movzx edi, byte ptr [ebp - 0x1e]
0x8049d06:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049d0c:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x8049d10:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x8049d16:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x8049d1a:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x8049d20:   0f b6 75 e6                     	movzx esi, byte ptr [ebp - 0x1a]
0x8049d24:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x8049d2a:   0f be 7d e7                     	movsx edi, byte ptr [ebp - 0x19]
0x8049d2e:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x8049d32:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x8049d35:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x8049d38:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x8049d3b:   50                              	push eax
0x8049d3c:   52                              	push edx
0x8049d3d:   51                              	push ecx
0x8049d3e:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x8049d41:   53                              	push ebx
0x8049d42:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049d45:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049d48:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x8049d4e:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x8049d51:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049d54:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x8049d5a:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x8049d5d:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x8049d60:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x8049d66:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x8049d6c:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x8049d72:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x8049d78:   57                              	push edi
0x8049d79:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d7c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049d7f:   56                              	push esi
0x8049d80:   e8 a1 f8 ff ff                  	call 0x8049626 <set_var>
0x8049d85:   83 c4 60                        	add esp, 0x60
0x8049d88:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x8049d8b:   e9 13 0a 00 00                  	jmp 0x804a7a3 <func_1+0xfef>
0x8049d90:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049d93:   3b 45 ac                        	cmp eax, dword ptr [ebp - 0x54]
0x8049d96:   0f 9c c0                        	setl al
0x8049d99:   0f b6 d0                        	movzx edx, al
0x8049d9c:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049da0:   31 d0                           	xor eax, edx
0x8049da2:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049da5:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x8049da8:   98                              	cwde 
0x8049da9:   c1 e0 0f                        	shl eax, 0xf
0x8049dac:   83 f8 01                        	cmp eax, 1
0x8049daf:   0f bf 85 52 ff ff ff            	movsx eax, word ptr [ebp - 0xae]
0x8049db6:   8d 98 34 72 00 00               	lea ebx, [eax + 0x7234]
0x8049dbc:   8b 85 58 ff ff ff               	mov eax, dword ptr [ebp - 0xa8]
0x8049dc2:   89 c2                           	mov edx, eax
0x8049dc4:   0f b6 85 45 ff ff ff            	movzx eax, byte ptr [ebp - 0xbb]
0x8049dcb:   29 c2                           	sub edx, eax
0x8049dcd:   89 d0                           	mov eax, edx
0x8049dcf:   0f be d0                        	movsx edx, al
0x8049dd2:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x8049dd5:   0f be c0                        	movsx eax, al
0x8049dd8:   89 c1                           	mov ecx, eax
0x8049dda:   d3 fa                           	sar edx, cl
0x8049ddc:   89 d0                           	mov eax, edx
0x8049dde:   09 d8                           	or eax, ebx
0x8049de0:   3d fa 00 00 00                  	cmp eax, 0xfa
0x8049de5:   0f 86 e1 01 00 00               	jbe 0x8049fcc <func_1+0x818>
0x8049deb:   c6 85 03 ff ff ff 06            	mov byte ptr [ebp - 0xfd], 6
0x8049df2:   c7 85 fc fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x104], 0xfffffff9
0x8049dfc:   80 bd 45 ff ff ff 00            	cmp byte ptr [ebp - 0xbb], 0
0x8049e03:   0f 84 05 01 00 00               	je 0x8049f0e <func_1+0x75a>
0x8049e09:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049e0c:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049e12:   c6 45 e3 a9                     	mov byte ptr [ebp - 0x1d], 0xa9
0x8049e16:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049e1a:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049e1d:   89 c1                           	mov ecx, eax
0x8049e1f:   80 7d e2 00                     	cmp byte ptr [ebp - 0x1e], 0
0x8049e23:   74 46                           	je 0x8049e6b <func_1+0x6b7>
0x8049e25:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x8049e29:   8b 95 10 ff ff ff               	mov edx, dword ptr [ebp - 0xf0]
0x8049e2f:   09 d0                           	or eax, edx
0x8049e31:   0f b7 d0                        	movzx edx, ax
0x8049e34:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049e3a:   0f b7 c0                        	movzx eax, ax
0x8049e3d:   0f af c2                        	imul eax, edx
0x8049e40:   85 c0                           	test eax, eax
0x8049e42:   74 0d                           	je 0x8049e51 <func_1+0x69d>
0x8049e44:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049e48:   74 07                           	je 0x8049e51 <func_1+0x69d>
0x8049e4a:   b8 01 00 00 00                  	mov eax, 1
0x8049e4f:   eb 05                           	jmp 0x8049e56 <func_1+0x6a2>
0x8049e51:   b8 00 00 00 00                  	mov eax, 0
0x8049e56:   0f bf d0                        	movsx edx, ax
0x8049e59:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x8049e5c:   98                              	cwde 
0x8049e5d:   0f af c2                        	imul eax, edx
0x8049e60:   85 c0                           	test eax, eax
0x8049e62:   74 07                           	je 0x8049e6b <func_1+0x6b7>
0x8049e64:   b8 01 00 00 00                  	mov eax, 1
0x8049e69:   eb 05                           	jmp 0x8049e70 <func_1+0x6bc>
0x8049e6b:   b8 00 00 00 00                  	mov eax, 0
0x8049e70:   ba a9 ff ff ff                  	mov edx, 0xffffffa9
0x8049e75:   29 c2                           	sub edx, eax
0x8049e77:   89 d0                           	mov eax, edx
0x8049e79:   09 c8                           	or eax, ecx
0x8049e7b:   0f b6 c0                        	movzx eax, al
0x8049e7e:   8b 95 78 ff ff ff               	mov edx, dword ptr [ebp - 0x88]
0x8049e84:   0f b6 da                        	movzx ebx, dl
0x8049e87:   99                              	cdq 
0x8049e88:   f7 fb                           	idiv ebx
0x8049e8a:   0f bf d0                        	movsx edx, ax
0x8049e8d:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x8049e90:   98                              	cwde 
0x8049e91:   89 c1                           	mov ecx, eax
0x8049e93:   d3 e2                           	shl edx, cl
0x8049e95:   89 d0                           	mov eax, edx
0x8049e97:   85 c0                           	test eax, eax
0x8049e99:   75 06                           	jne 0x8049ea1 <func_1+0x6ed>
0x8049e9b:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x8049e9f:   74 09                           	je 0x8049eaa <func_1+0x6f6>
0x8049ea1:   80 bd 03 ff ff ff 00            	cmp byte ptr [ebp - 0xfd], 0
0x8049ea8:   75 06                           	jne 0x8049eb0 <func_1+0x6fc>
0x8049eaa:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049eae:   74 07                           	je 0x8049eb7 <func_1+0x703>
0x8049eb0:   b8 01 00 00 00                  	mov eax, 1
0x8049eb5:   eb 05                           	jmp 0x8049ebc <func_1+0x708>
0x8049eb7:   b8 00 00 00 00                  	mov eax, 0
0x8049ebc:   89 c2                           	mov edx, eax
0x8049ebe:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x8049ec2:   01 d0                           	add eax, edx
0x8049ec4:   0f be d0                        	movsx edx, al
0x8049ec7:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x8049ecb:   0f be c0                        	movsx eax, al
0x8049ece:   89 c1                           	mov ecx, eax
0x8049ed0:   d3 fa                           	sar edx, cl
0x8049ed2:   89 d0                           	mov eax, edx
0x8049ed4:   39 45 b0                        	cmp dword ptr [ebp - 0x50], eax
0x8049ed7:   75 06                           	jne 0x8049edf <func_1+0x72b>
0x8049ed9:   83 7d b4 00                     	cmp dword ptr [ebp - 0x4c], 0
0x8049edd:   74 07                           	je 0x8049ee6 <func_1+0x732>
0x8049edf:   b8 01 00 00 00                  	mov eax, 1
0x8049ee4:   eb 05                           	jmp 0x8049eeb <func_1+0x737>
0x8049ee6:   b8 00 00 00 00                  	mov eax, 0
0x8049eeb:   3d 5c 0b 00 00                  	cmp eax, 0xb5c
0x8049ef0:   80 7d e7 05                     	cmp byte ptr [ebp - 0x19], 5
0x8049ef4:   0f 95 c0                        	setne al
0x8049ef7:   0f b6 c0                        	movzx eax, al
0x8049efa:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x8049efd:   0f b6 da                        	movzx ebx, dl
0x8049f00:   99                              	cdq 
0x8049f01:   f7 fb                           	idiv ebx
0x8049f03:   23 45 e8                        	and eax, dword ptr [ebp - 0x18]
0x8049f06:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049f09:   e9 b5 00 00 00                  	jmp 0x8049fc3 <func_1+0x80f>
0x8049f0e:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x8049f18:   66 83 7d ce 70                  	cmp word ptr [ebp - 0x32], 0x70
0x8049f1d:   76 07                           	jbe 0x8049f26 <func_1+0x772>
0x8049f1f:   b8 8a ff ff ff                  	mov eax, 0xffffff8a
0x8049f24:   eb 05                           	jmp 0x8049f2b <func_1+0x777>
0x8049f26:   b8 89 ff ff ff                  	mov eax, 0xffffff89
0x8049f2b:   89 85 14 ff ff ff               	mov dword ptr [ebp - 0xec], eax
0x8049f31:   80 7d e2 00                     	cmp byte ptr [ebp - 0x1e], 0
0x8049f35:   0f 85 46 07 00 00               	jne 0x804a681 <func_1+0xecd>
0x8049f3b:   80 bd 03 ff ff ff 04            	cmp byte ptr [ebp - 0xfd], 4
0x8049f42:   7f 07                           	jg 0x8049f4b <func_1+0x797>
0x8049f44:   b8 42 00 00 00                  	mov eax, 0x42
0x8049f49:   eb 05                           	jmp 0x8049f50 <func_1+0x79c>
0x8049f4b:   b8 41 00 00 00                  	mov eax, 0x41
0x8049f50:   09 85 14 ff ff ff               	or dword ptr [ebp - 0xec], eax
0x8049f56:   83 4d c8 01                     	or dword ptr [ebp - 0x38], 1
0x8049f5a:   8b 95 54 ff ff ff               	mov edx, dword ptr [ebp - 0xac]
0x8049f60:   80 7d f3 01                     	cmp byte ptr [ebp - 0xd], 1
0x8049f64:   0f 9e c0                        	setle al
0x8049f67:   0f b6 c0                        	movzx eax, al
0x8049f6a:   89 d3                           	mov ebx, edx
0x8049f6c:   29 c3                           	sub ebx, eax
0x8049f6e:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049f71:   ba 00 00 00 00                  	mov edx, 0
0x8049f76:   f7 f3                           	div ebx
0x8049f78:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049f7b:   b8 01 00 00 00                  	mov eax, 1
0x8049f80:   2b 45 ec                        	sub eax, dword ptr [ebp - 0x14]
0x8049f83:   89 85 fc fe ff ff               	mov dword ptr [ebp - 0x104], eax
0x8049f89:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049f8d:   0f be c0                        	movsx eax, al
0x8049f90:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x8049f94:   ba 00 00 00 00                  	mov edx, 0
0x8049f99:   f7 f3                           	div ebx
0x8049f9b:   89 c1                           	mov ecx, eax
0x8049f9d:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049fa0:   ba 00 00 00 00                  	mov edx, 0
0x8049fa5:   f7 f1                           	div ecx
0x8049fa7:   89 d0                           	mov eax, edx
0x8049fa9:   89 c2                           	mov edx, eax
0x8049fab:   66 81 fa d6 92                  	cmp dx, 0x92d6
0x8049fb0:   0f 93 c0                        	setae al
0x8049fb3:   0f b6 c0                        	movzx eax, al
0x8049fb6:   66 69 c0 d6 92                  	imul ax, ax, 0x92d6
0x8049fbb:   29 c2                           	sub edx, eax
0x8049fbd:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049fc0:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x8049fc3:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x8049fc7:   e9 9f 06 00 00                  	jmp 0x804a66b <func_1+0xeb7>
0x8049fcc:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x8049fd0:   0f bf 55 88                     	movsx edx, word ptr [ebp - 0x78]
0x8049fd4:   0f be 4d 8b                     	movsx ecx, byte ptr [ebp - 0x75]
0x8049fd8:   0f be 5d 93                     	movsx ebx, byte ptr [ebp - 0x6d]
0x8049fdc:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x8049fe0:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x8049fe6:   0f b6 75 d7                     	movzx esi, byte ptr [ebp - 0x29]
0x8049fea:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x8049ff0:   0f b6 7d e2                     	movzx edi, byte ptr [ebp - 0x1e]
0x8049ff4:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x8049ffa:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x8049ffe:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a004:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a008:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a00e:   0f b6 75 e6                     	movzx esi, byte ptr [ebp - 0x1a]
0x804a012:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a018:   0f be 7d e7                     	movsx edi, byte ptr [ebp - 0x19]
0x804a01c:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a020:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a023:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a026:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a029:   50                              	push eax
0x804a02a:   52                              	push edx
0x804a02b:   51                              	push ecx
0x804a02c:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a02f:   53                              	push ebx
0x804a030:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a033:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a036:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a03c:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a03f:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a042:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a048:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a04b:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a04e:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a054:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a05a:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a060:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a066:   57                              	push edi
0x804a067:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a06a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a06d:   56                              	push esi
0x804a06e:   e8 b3 f5 ff ff                  	call 0x8049626 <set_var>
0x804a073:   83 c4 60                        	add esp, 0x60
0x804a076:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a079:   e9 25 07 00 00                  	jmp 0x804a7a3 <func_1+0xfef>
0x804a07e:   66 c7 85 3e ff ff ff 30 b7      	mov word ptr [ebp - 0xc2], 0xb730
0x804a087:   c7 45 a0 bb d9 0a a4            	mov dword ptr [ebp - 0x60], 0xa40ad9bb
0x804a08e:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a095:   39 85 58 ff ff ff               	cmp dword ptr [ebp - 0xa8], eax
0x804a09b:   0f 8f 70 01 00 00               	jg 0x804a211 <func_1+0xa5d>
0x804a0a1:   c7 85 2c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xd4], 0
0x804a0ab:   c7 85 28 ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xd8], 0xfffffffb
0x804a0b5:   80 7d e6 00                     	cmp byte ptr [ebp - 0x1a], 0
0x804a0b9:   75 06                           	jne 0x804a0c1 <func_1+0x90d>
0x804a0bb:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a0bf:   74 07                           	je 0x804a0c8 <func_1+0x914>
0x804a0c1:   b8 01 00 00 00                  	mov eax, 1
0x804a0c6:   eb 05                           	jmp 0x804a0cd <func_1+0x919>
0x804a0c8:   b8 00 00 00 00                  	mov eax, 0
0x804a0cd:   89 c3                           	mov ebx, eax
0x804a0cf:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a0d5:   0d 71 ba 65 14                  	or eax, 0x1465ba71
0x804a0da:   f7 d8                           	neg eax
0x804a0dc:   89 85 70 ff ff ff               	mov dword ptr [ebp - 0x90], eax
0x804a0e2:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a0e8:   0f be 8d 45 ff ff ff            	movsx ecx, byte ptr [ebp - 0xbb]
0x804a0ef:   99                              	cdq 
0x804a0f0:   f7 f9                           	idiv ecx
0x804a0f2:   89 d0                           	mov eax, edx
0x804a0f4:   01 d8                           	add eax, ebx
0x804a0f6:   85 c0                           	test eax, eax
0x804a0f8:   74 10                           	je 0x804a10a <func_1+0x956>
0x804a0fa:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a101:   74 07                           	je 0x804a10a <func_1+0x956>
0x804a103:   b8 01 00 00 00                  	mov eax, 1
0x804a108:   eb 05                           	jmp 0x804a10f <func_1+0x95b>
0x804a10a:   b8 00 00 00 00                  	mov eax, 0
0x804a10f:   83 f8 08                        	cmp eax, 8
0x804a112:   0f 94 c0                        	sete al
0x804a115:   0f b6 c0                        	movzx eax, al
0x804a118:   8b 55 b8                        	mov edx, dword ptr [ebp - 0x48]
0x804a11b:   0f b7 fa                        	movzx edi, dx
0x804a11e:   99                              	cdq 
0x804a11f:   f7 ff                           	idiv edi
0x804a121:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x804a124:   8b 45 a8                        	mov eax, dword ptr [ebp - 0x58]
0x804a127:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a12a:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x804a12e:   3d 7f f3 2d da                  	cmp eax, 0xda2df37f
0x804a133:   0f 97 c0                        	seta al
0x804a136:   0f b6 c0                        	movzx eax, al
0x804a139:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a13c:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a13f:   89 45 b0                        	mov dword ptr [ebp - 0x50], eax
0x804a142:   66 83 6d ce 01                  	sub word ptr [ebp - 0x32], 1
0x804a147:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x804a14b:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804a14f:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a153:   89 85 28 ff ff ff               	mov dword ptr [ebp - 0xd8], eax
0x804a159:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804a15f:   0f b7 d0                        	movzx edx, ax
0x804a162:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a168:   0f b7 c0                        	movzx eax, ax
0x804a16b:   89 c1                           	mov ecx, eax
0x804a16d:   d3 fa                           	sar edx, cl
0x804a16f:   89 d0                           	mov eax, edx
0x804a171:   0f be c0                        	movsx eax, al
0x804a174:   83 c0 01                        	add eax, 1
0x804a177:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a17a:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a17d:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x804a180:   0f 97 c0                        	seta al
0x804a183:   0f b6 d0                        	movzx edx, al
0x804a186:   8b 45 b4                        	mov eax, dword ptr [ebp - 0x4c]
0x804a189:   98                              	cwde 
0x804a18a:   01 d0                           	add eax, edx
0x804a18c:   25 50 1b 1a d7                  	and eax, 0xd71a1b50
0x804a191:   83 c8 05                        	or eax, 5
0x804a194:   89 c2                           	mov edx, eax
0x804a196:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a19a:   39 c2                           	cmp edx, eax
0x804a19c:   0f 92 c0                        	setb al
0x804a19f:   0f b6 d0                        	movzx edx, al
0x804a1a2:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a1a9:   09 d0                           	or eax, edx
0x804a1ab:   39 45 ac                        	cmp dword ptr [ebp - 0x54], eax
0x804a1ae:   74 0d                           	je 0x804a1bd <func_1+0xa09>
0x804a1b0:   83 7d a4 00                     	cmp dword ptr [ebp - 0x5c], 0
0x804a1b4:   74 07                           	je 0x804a1bd <func_1+0xa09>
0x804a1b6:   b8 01 00 00 00                  	mov eax, 1
0x804a1bb:   eb 05                           	jmp 0x804a1c2 <func_1+0xa0e>
0x804a1bd:   b8 00 00 00 00                  	mov eax, 0
0x804a1c2:   3d b1 88 52 e9                  	cmp eax, 0xe95288b1
0x804a1c7:   66 83 bd 3e ff ff ff 00         	cmp word ptr [ebp - 0xc2], 0
0x804a1cf:   75 0d                           	jne 0x804a1de <func_1+0xa2a>
0x804a1d1:   80 7d e2 00                     	cmp byte ptr [ebp - 0x1e], 0
0x804a1d5:   74 07                           	je 0x804a1de <func_1+0xa2a>
0x804a1d7:   b8 01 00 00 00                  	mov eax, 1
0x804a1dc:   eb 05                           	jmp 0x804a1e3 <func_1+0xa2f>
0x804a1de:   b8 00 00 00 00                  	mov eax, 0
0x804a1e3:   23 85 78 ff ff ff               	and eax, dword ptr [ebp - 0x88]
0x804a1e9:   0d eb 34 00 00                  	or eax, 0x34eb
0x804a1ee:   83 f8 ff                        	cmp eax, -1
0x804a1f1:   0f 95 c0                        	setne al
0x804a1f4:   0f b6 d0                        	movzx edx, al
0x804a1f7:   0f b6 45 d7                     	movzx eax, byte ptr [ebp - 0x29]
0x804a1fb:   39 c2                           	cmp edx, eax
0x804a1fd:   0f 9c c0                        	setl al
0x804a200:   0f b6 c0                        	movzx eax, al
0x804a203:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a206:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a209:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x804a20c:   e9 af 02 00 00                  	jmp 0x804a4c0 <func_1+0xd0c>
0x804a211:   c6 85 3d ff ff ff 8b            	mov byte ptr [ebp - 0xc3], 0x8b
0x804a218:   c7 85 38 ff ff ff 26 52 f5 6d   	mov dword ptr [ebp - 0xc8], 0x6df55226
0x804a222:   80 bd 4a ff ff ff 01            	cmp byte ptr [ebp - 0xb6], 1
0x804a229:   0f 94 c0                        	sete al
0x804a22c:   30 45 e7                        	xor byte ptr [ebp - 0x19], al
0x804a22f:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x804a233:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a236:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x804a23d:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a240:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a243:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x804a247:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a24a:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a251:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x804a254:   0f 8c fb 00 00 00               	jl 0x804a355 <func_1+0xba1>
0x804a25a:   66 c7 85 34 ff ff ff 01 00      	mov word ptr [ebp - 0xcc], 1
0x804a263:   66 83 45 e4 01                  	add word ptr [ebp - 0x1c], 1
0x804a268:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a26d:   74 51                           	je 0x804a2c0 <func_1+0xb0c>
0x804a26f:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x804a276:   75 0a                           	jne 0x804a282 <func_1+0xace>
0x804a278:   c6 45 e3 00                     	mov byte ptr [ebp - 0x1d], 0
0x804a27c:   80 7d e3 00                     	cmp byte ptr [ebp - 0x1d], 0
0x804a280:   74 07                           	je 0x804a289 <func_1+0xad5>
0x804a282:   b8 01 00 00 00                  	mov eax, 1
0x804a287:   eb 05                           	jmp 0x804a28e <func_1+0xada>
0x804a289:   b8 00 00 00 00                  	mov eax, 0
0x804a28e:   3d f9 ff 00 00                  	cmp eax, 0xfff9
0x804a293:   75 07                           	jne 0x804a29c <func_1+0xae8>
0x804a295:   b8 49 00 00 00                  	mov eax, 0x49
0x804a29a:   eb 05                           	jmp 0x804a2a1 <func_1+0xaed>
0x804a29c:   b8 00 00 00 00                  	mov eax, 0
0x804a2a1:   88 45 e2                        	mov byte ptr [ebp - 0x1e], al
0x804a2a4:   0f b7 85 3e ff ff ff            	movzx eax, word ptr [ebp - 0xc2]
0x804a2ab:   0f b6 c0                        	movzx eax, al
0x804a2ae:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x804a2b1:   0f b6 ca                        	movzx ecx, dl
0x804a2b4:   99                              	cdq 
0x804a2b5:   f7 f9                           	idiv ecx
0x804a2b7:   0f bf 85 34 ff ff ff            	movsx eax, word ptr [ebp - 0xcc]
0x804a2be:   39 c2                           	cmp edx, eax
0x804a2c0:   83 7d c4 01                     	cmp dword ptr [ebp - 0x3c], 1
0x804a2c4:   0f 94 c0                        	sete al
0x804a2c7:   0f b6 c0                        	movzx eax, al
0x804a2ca:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a2d0:   83 7d ac 00                     	cmp dword ptr [ebp - 0x54], 0
0x804a2d4:   c7 45 b0 00 00 00 00            	mov dword ptr [ebp - 0x50], 0
0x804a2db:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a2df:   75 0a                           	jne 0x804a2eb <func_1+0xb37>
0x804a2e1:   66 83 bd 34 ff ff ff 00         	cmp word ptr [ebp - 0xcc], 0
0x804a2e9:   74 07                           	je 0x804a2f2 <func_1+0xb3e>
0x804a2eb:   b8 01 00 00 00                  	mov eax, 1
0x804a2f0:   eb 05                           	jmp 0x804a2f7 <func_1+0xb43>
0x804a2f2:   b8 00 00 00 00                  	mov eax, 0
0x804a2f7:   0f be d0                        	movsx edx, al
0x804a2fa:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a2fd:   0f be c0                        	movsx eax, al
0x804a300:   0f af c2                        	imul eax, edx
0x804a303:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a306:   66 83 7d ce 00                  	cmp word ptr [ebp - 0x32], 0
0x804a30b:   0f 95 c0                        	setne al
0x804a30e:   0f b6 c0                        	movzx eax, al
0x804a311:   89 c1                           	mov ecx, eax
0x804a313:   0f b7 85 34 ff ff ff            	movzx eax, word ptr [ebp - 0xcc]
0x804a31a:   89 c2                           	mov edx, eax
0x804a31c:   0f b6 c1                        	movzx eax, cl
0x804a31f:   f6 f2                           	div dl
0x804a321:   0f b6 c4                        	movzx eax, ah
0x804a324:   0f b6 c0                        	movzx eax, al
0x804a327:   35 cc 72 00 00                  	xor eax, 0x72cc
0x804a32c:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x804a32f:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x804a332:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a335:   01 d0                           	add eax, edx
0x804a337:   05 8f 0c b9 02                  	add eax, 0x2b90c8f
0x804a33c:   66 21 85 48 ff ff ff            	and word ptr [ebp - 0xb8], ax
0x804a343:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a347:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x804a34a:   0f 86 56 01 00 00               	jbe 0x804a4a6 <func_1+0xcf2>
0x804a350:   e9 f0 00 00 00                  	jmp 0x804a445 <func_1+0xc91>
0x804a355:   c6 85 37 ff ff ff f8            	mov byte ptr [ebp - 0xc9], 0xf8
0x804a35c:   c6 85 36 ff ff ff 09            	mov byte ptr [ebp - 0xca], 9
0x804a363:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a366:   23 45 c8                        	and eax, dword ptr [ebp - 0x38]
0x804a369:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a36c:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a36f:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a375:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a37a:   0f 94 c0                        	sete al
0x804a37d:   0f b6 c0                        	movzx eax, al
0x804a380:   31 85 38 ff ff ff               	xor dword ptr [ebp - 0xc8], eax
0x804a386:   0f be 45 93                     	movsx eax, byte ptr [ebp - 0x6d]
0x804a38a:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a390:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a394:   0f bf 55 88                     	movsx edx, word ptr [ebp - 0x78]
0x804a398:   0f be 4d 8b                     	movsx ecx, byte ptr [ebp - 0x75]
0x804a39c:   0f be 5d 93                     	movsx ebx, byte ptr [ebp - 0x6d]
0x804a3a0:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a3a4:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a3aa:   0f b6 75 d7                     	movzx esi, byte ptr [ebp - 0x29]
0x804a3ae:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x804a3b4:   0f b6 7d e2                     	movzx edi, byte ptr [ebp - 0x1e]
0x804a3b8:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a3be:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x804a3c2:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a3c8:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a3cc:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a3d2:   0f b6 75 e6                     	movzx esi, byte ptr [ebp - 0x1a]
0x804a3d6:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a3dc:   0f be 7d e7                     	movsx edi, byte ptr [ebp - 0x19]
0x804a3e0:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a3e4:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a3e7:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a3ea:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a3ed:   50                              	push eax
0x804a3ee:   52                              	push edx
0x804a3ef:   51                              	push ecx
0x804a3f0:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a3f3:   53                              	push ebx
0x804a3f4:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a3f7:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a3fa:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a400:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a403:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a406:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a40c:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a40f:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a412:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a418:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a41e:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a424:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a42a:   57                              	push edi
0x804a42b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a42e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a431:   56                              	push esi
0x804a432:   e8 ef f1 ff ff                  	call 0x8049626 <set_var>
0x804a437:   83 c4 60                        	add esp, 0x60
0x804a43a:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a440:   e9 5e 03 00 00                  	jmp 0x804a7a3 <func_1+0xfef>
0x804a445:   66 c7 85 32 ff ff ff bb f8      	mov word ptr [ebp - 0xce], 0xf8bb
0x804a44e:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a452:   74 05                           	je 0x804a459 <func_1+0xca5>
0x804a454:   e9 6e f4 ff ff                  	jmp 0x80498c7 <func_1+0x113>
0x804a459:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a45c:   0f b6 d0                        	movzx edx, al
0x804a45f:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a462:   0f b6 c0                        	movzx eax, al
0x804a465:   89 c1                           	mov ecx, eax
0x804a467:   d3 e2                           	shl edx, cl
0x804a469:   89 d0                           	mov eax, edx
0x804a46b:   35 06 8f 00 00                  	xor eax, 0x8f06
0x804a470:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a476:   66 83 ad 46 ff ff ff 01         	sub word ptr [ebp - 0xba], 1
0x804a47e:   8b 55 b0                        	mov edx, dword ptr [ebp - 0x50]
0x804a481:   66 c7 45 c2 fa ff               	mov word ptr [ebp - 0x3e], 0xfffa
0x804a487:   0f b7 85 32 ff ff ff            	movzx eax, word ptr [ebp - 0xce]
0x804a48e:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a491:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a494:   29 c2                           	sub edx, eax
0x804a496:   89 d0                           	mov eax, edx
0x804a498:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x804a49b:   0f 93 c0                        	setae al
0x804a49e:   0f b6 c0                        	movzx eax, al
0x804a4a1:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a4a4:   eb 14                           	jmp 0x804a4ba <func_1+0xd06>
0x804a4a6:   83 7d d8 00                     	cmp dword ptr [ebp - 0x28], 0
0x804a4aa:   0f 85 d4 01 00 00               	jne 0x804a684 <func_1+0xed0>
0x804a4b0:   0f be 45 93                     	movsx eax, byte ptr [ebp - 0x6d]
0x804a4b4:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a4ba:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x804a4bd:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a4c0:   0f bf 85 3e ff ff ff            	movsx eax, word ptr [ebp - 0xc2]
0x804a4c7:   3d 01 bd 2a b7                  	cmp eax, 0xb72abd01
0x804a4cc:   0f 93 c0                        	setae al
0x804a4cf:   0f b6 c0                        	movzx eax, al
0x804a4d2:   89 85 40 ff ff ff               	mov dword ptr [ebp - 0xc0], eax
0x804a4d8:   80 7d e2 00                     	cmp byte ptr [ebp - 0x1e], 0
0x804a4dc:   0f 94 c0                        	sete al
0x804a4df:   0f b6 d0                        	movzx edx, al
0x804a4e2:   0f be 45 e7                     	movsx eax, byte ptr [ebp - 0x19]
0x804a4e6:   39 c2                           	cmp edx, eax
0x804a4e8:   0f b6 55 e6                     	movzx edx, byte ptr [ebp - 0x1a]
0x804a4ec:   0f be 45 93                     	movsx eax, byte ptr [ebp - 0x6d]
0x804a4f0:   83 f8 fc                        	cmp eax, -4
0x804a4f3:   0f 96 c0                        	setbe al
0x804a4f6:   0f b6 c0                        	movzx eax, al
0x804a4f9:   09 d0                           	or eax, edx
0x804a4fb:   89 45 d8                        	mov dword ptr [ebp - 0x28], eax
0x804a4fe:   66 83 7d 88 00                  	cmp word ptr [ebp - 0x78], 0
0x804a503:   0f 95 c0                        	setne al
0x804a506:   0f b6 c0                        	movzx eax, al
0x804a509:   31 45 b4                        	xor dword ptr [ebp - 0x4c], eax
0x804a50c:   66 c7 45 e4 f1 ff               	mov word ptr [ebp - 0x1c], 0xfff1
0x804a512:   e9 46 01 00 00                  	jmp 0x804a65d <func_1+0xea9>
0x804a517:   c7 85 24 ff ff ff 4e 34 f9 71   	mov dword ptr [ebp - 0xdc], 0x71f9344e
0x804a521:   c7 85 20 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xe0], 0
0x804a52b:   c7 45 c4 e9 ff ff ff            	mov dword ptr [ebp - 0x3c], 0xffffffe9
0x804a532:   eb 13                           	jmp 0x804a547 <func_1+0xd93>
0x804a534:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a538:   75 15                           	jne 0x804a54f <func_1+0xd9b>
0x804a53a:   8b 85 40 ff ff ff               	mov eax, dword ptr [ebp - 0xc0]
0x804a540:   89 45 b4                        	mov dword ptr [ebp - 0x4c], eax
0x804a543:   83 45 c4 09                     	add dword ptr [ebp - 0x3c], 9
0x804a547:   83 7d c4 3b                     	cmp dword ptr [ebp - 0x3c], 0x3b
0x804a54b:   77 e7                           	ja 0x804a534 <func_1+0xd80>
0x804a54d:   eb 01                           	jmp 0x804a550 <func_1+0xd9c>
0x804a54f:   90                              	nop 
0x804a550:   81 7d a8 9b 00 00 00            	cmp dword ptr [ebp - 0x58], 0x9b
0x804a557:   0f 9e c0                        	setle al
0x804a55a:   0f b6 c0                        	movzx eax, al
0x804a55d:   21 45 c4                        	and dword ptr [ebp - 0x3c], eax
0x804a560:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a563:   89 c2                           	mov edx, eax
0x804a565:   83 bd 78 ff ff ff fa            	cmp dword ptr [ebp - 0x88], -6
0x804a56c:   0f 95 c0                        	setne al
0x804a56f:   31 d0                           	xor eax, edx
0x804a571:   d0 f8                           	sar al, 1
0x804a573:   89 c2                           	mov edx, eax
0x804a575:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a578:   09 d0                           	or eax, edx
0x804a57a:   c0 f8 02                        	sar al, 2
0x804a57d:   84 c0                           	test al, al
0x804a57f:   0f 94 c0                        	sete al
0x804a582:   0f b6 c0                        	movzx eax, al
0x804a585:   31 45 d8                        	xor dword ptr [ebp - 0x28], eax
0x804a588:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x804a58c:   83 c8 01                        	or eax, 1
0x804a58f:   0f be d0                        	movsx edx, al
0x804a592:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a596:   39 c2                           	cmp edx, eax
0x804a598:   0f 84 80 00 00 00               	je 0x804a61e <func_1+0xe6a>
0x804a59e:   c7 85 1c ff ff ff 64 51 b8 58   	mov dword ptr [ebp - 0xe4], 0x58b85164
0x804a5a8:   c7 45 a0 fd ff 00 00            	mov dword ptr [ebp - 0x60], 0xfffd
0x804a5af:   80 6d e3 01                     	sub byte ptr [ebp - 0x1d], 1
0x804a5b3:   0f be 45 93                     	movsx eax, byte ptr [ebp - 0x6d]
0x804a5b7:   01 c0                           	add eax, eax
0x804a5b9:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a5bc:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x804a5c3:   83 85 1c ff ff ff 01            	add dword ptr [ebp - 0xe4], 1
0x804a5ca:   8b 8d 5c ff ff ff               	mov ecx, dword ptr [ebp - 0xa4]
0x804a5d0:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x804a5d3:   8b 5d 84                        	mov ebx, dword ptr [ebp - 0x7c]
0x804a5d6:   99                              	cdq 
0x804a5d7:   f7 fb                           	idiv ebx
0x804a5d9:   89 d0                           	mov eax, edx
0x804a5db:   0f bf d0                        	movsx edx, ax
0x804a5de:   0f b6 45 e2                     	movzx eax, byte ptr [ebp - 0x1e]
0x804a5e2:   0f af c2                        	imul eax, edx
0x804a5e5:   83 f8 06                        	cmp eax, 6
0x804a5e8:   c7 45 e8 ff ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffff
0x804a5ef:   8b 5d e8                        	mov ebx, dword ptr [ebp - 0x18]
0x804a5f2:   89 c8                           	mov eax, ecx
0x804a5f4:   ba 00 00 00 00                  	mov edx, 0
0x804a5f9:   f7 f3                           	div ebx
0x804a5fb:   83 c8 f9                        	or eax, 0xfffffff9
0x804a5fe:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a601:   0f b6 45 e3                     	movzx eax, byte ptr [ebp - 0x1d]
0x804a605:   39 45 b8                        	cmp dword ptr [ebp - 0x48], eax
0x804a608:   7d 07                           	jge 0x804a611 <func_1+0xe5d>
0x804a60a:   b8 01 00 00 00                  	mov eax, 1
0x804a60f:   eb 05                           	jmp 0x804a616 <func_1+0xe62>
0x804a611:   b8 00 00 00 00                  	mov eax, 0
0x804a616:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a61c:   eb 34                           	jmp 0x804a652 <func_1+0xe9e>
0x804a61e:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a622:   8d 50 01                        	lea edx, [eax + 1]
0x804a625:   66 89 55 ce                     	mov word ptr [ebp - 0x32], dx
0x804a629:   0f b7 d0                        	movzx edx, ax
0x804a62c:   0f be 45 93                     	movsx eax, byte ptr [ebp - 0x6d]
0x804a630:   31 c2                           	xor edx, eax
0x804a632:   0f be 85 45 ff ff ff            	movsx eax, byte ptr [ebp - 0xbb]
0x804a639:   09 d0                           	or eax, edx
0x804a63b:   3d 09 1c 86 03                  	cmp eax, 0x3861c09
0x804a640:   0f 9e c0                        	setle al
0x804a643:   0f b6 c0                        	movzx eax, al
0x804a646:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a64c:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x804a650:   75 18                           	jne 0x804a66a <func_1+0xeb6>
0x804a652:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a656:   83 c0 01                        	add eax, 1
0x804a659:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x804a65d:   66 83 7d e4 21                  	cmp word ptr [ebp - 0x1c], 0x21
0x804a662:   0f 85 af fe ff ff               	jne 0x804a517 <func_1+0xd63>
0x804a668:   eb 01                           	jmp 0x804a66b <func_1+0xeb7>
0x804a66a:   90                              	nop 
0x804a66b:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x804a66f:   83 c0 01                        	add eax, 1
0x804a672:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a675:   80 7d f3 05                     	cmp byte ptr [ebp - 0xd], 5
0x804a679:   0f 8e 55 f2 ff ff               	jle 0x80498d4 <func_1+0x120>
0x804a67f:   eb 04                           	jmp 0x804a685 <func_1+0xed1>
0x804a681:   90                              	nop 
0x804a682:   eb 01                           	jmp 0x804a685 <func_1+0xed1>
0x804a684:   90                              	nop 
0x804a685:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a688:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a68b:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a68e:   c1 e8 1f                        	shr eax, 0x1f
0x804a691:   89 c2                           	mov edx, eax
0x804a693:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804a699:   31 d0                           	xor eax, edx
0x804a69b:   89 c2                           	mov edx, eax
0x804a69d:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a6a3:   31 d0                           	xor eax, edx
0x804a6a5:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x804a6a9:   0f b6 c0                        	movzx eax, al
0x804a6ac:   f6 f2                           	div dl
0x804a6ae:   0f b6 c4                        	movzx eax, ah
0x804a6b1:   0f b6 c0                        	movzx eax, al
0x804a6b4:   23 85 74 ff ff ff               	and eax, dword ptr [ebp - 0x8c]
0x804a6ba:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804a6bd:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a6c1:   74 04                           	je 0x804a6c7 <func_1+0xf13>
0x804a6c3:   83 7d 9c 00                     	cmp dword ptr [ebp - 0x64], 0
0x804a6c7:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a6cd:   0f b6 d0                        	movzx edx, al
0x804a6d0:   8b 85 64 ff ff ff               	mov eax, dword ptr [ebp - 0x9c]
0x804a6d6:   0f b6 c0                        	movzx eax, al
0x804a6d9:   89 c1                           	mov ecx, eax
0x804a6db:   d3 e2                           	shl edx, cl
0x804a6dd:   0f b6 85 63 ff ff ff            	movzx eax, byte ptr [ebp - 0x9d]
0x804a6e4:   29 c2                           	sub edx, eax
0x804a6e6:   89 d0                           	mov eax, edx
0x804a6e8:   66 31 85 60 ff ff ff            	xor word ptr [ebp - 0xa0], ax
0x804a6ef:   c7 45 e8 05 78 f4 d9            	mov dword ptr [ebp - 0x18], 0xd9f47805
0x804a6f6:   0f bf 45 c2                     	movsx eax, word ptr [ebp - 0x3e]
0x804a6fa:   0f bf 55 88                     	movsx edx, word ptr [ebp - 0x78]
0x804a6fe:   0f be 4d 8b                     	movsx ecx, byte ptr [ebp - 0x75]
0x804a702:   0f be 5d 93                     	movsx ebx, byte ptr [ebp - 0x6d]
0x804a706:   0f b7 7d ce                     	movzx edi, word ptr [ebp - 0x32]
0x804a70a:   89 bd e0 fe ff ff               	mov dword ptr [ebp - 0x120], edi
0x804a710:   0f b6 75 d7                     	movzx esi, byte ptr [ebp - 0x29]
0x804a714:   89 b5 dc fe ff ff               	mov dword ptr [ebp - 0x124], esi
0x804a71a:   0f b6 7d e2                     	movzx edi, byte ptr [ebp - 0x1e]
0x804a71e:   89 bd d8 fe ff ff               	mov dword ptr [ebp - 0x128], edi
0x804a724:   0f b6 75 e3                     	movzx esi, byte ptr [ebp - 0x1d]
0x804a728:   89 b5 d4 fe ff ff               	mov dword ptr [ebp - 0x12c], esi
0x804a72e:   0f b7 7d e4                     	movzx edi, word ptr [ebp - 0x1c]
0x804a732:   89 bd d0 fe ff ff               	mov dword ptr [ebp - 0x130], edi
0x804a738:   0f b6 75 e6                     	movzx esi, byte ptr [ebp - 0x1a]
0x804a73c:   89 b5 cc fe ff ff               	mov dword ptr [ebp - 0x134], esi
0x804a742:   0f be 7d e7                     	movsx edi, byte ptr [ebp - 0x19]
0x804a746:   0f be 75 f3                     	movsx esi, byte ptr [ebp - 0xd]
0x804a74a:   ff 75 80                        	push dword ptr [ebp - 0x80]
0x804a74d:   ff 75 84                        	push dword ptr [ebp - 0x7c]
0x804a750:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a753:   50                              	push eax
0x804a754:   52                              	push edx
0x804a755:   51                              	push ecx
0x804a756:   ff 75 8c                        	push dword ptr [ebp - 0x74]
0x804a759:   53                              	push ebx
0x804a75a:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a75d:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a760:   ff b5 e0 fe ff ff               	push dword ptr [ebp - 0x120]
0x804a766:   ff 75 98                        	push dword ptr [ebp - 0x68]
0x804a769:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a76c:   ff b5 dc fe ff ff               	push dword ptr [ebp - 0x124]
0x804a772:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a775:   ff 75 dc                        	push dword ptr [ebp - 0x24]
0x804a778:   ff b5 d8 fe ff ff               	push dword ptr [ebp - 0x128]
0x804a77e:   ff b5 d4 fe ff ff               	push dword ptr [ebp - 0x12c]
0x804a784:   ff b5 d0 fe ff ff               	push dword ptr [ebp - 0x130]
0x804a78a:   ff b5 cc fe ff ff               	push dword ptr [ebp - 0x134]
0x804a790:   57                              	push edi
0x804a791:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a794:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a797:   56                              	push esi
0x804a798:   e8 89 ee ff ff                  	call 0x8049626 <set_var>
0x804a79d:   83 c4 60                        	add esp, 0x60
0x804a7a0:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a7a3:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a7a6:   5b                              	pop ebx
0x804a7a7:   5e                              	pop esi
0x804a7a8:   5f                              	pop edi
0x804a7a9:   5d                              	pop ebp
0x804a7aa:   c3                              	ret 
; function: main at 0x804a7ab -- 0x804ab3b
0x804a7ab:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a7af:   83 e4 f0                        	and esp, 0xfffffff0
0x804a7b2:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a7b5:   55                              	push ebp
0x804a7b6:   89 e5                           	mov ebp, esp
0x804a7b8:   53                              	push ebx
0x804a7b9:   51                              	push ecx
0x804a7ba:   83 ec 10                        	sub esp, 0x10
0x804a7bd:   e8 ce db ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a7c2:   81 c3 3e 28 00 00               	add ebx, 0x283e
0x804a7c8:   89 c8                           	mov eax, ecx
0x804a7ca:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a7d1:   83 38 02                        	cmp dword ptr [eax], 2
0x804a7d4:   75 26                           	jne 0x804a7fc <main+0x51>
0x804a7d6:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a7d9:   83 c0 04                        	add eax, 4
0x804a7dc:   8b 00                           	mov eax, dword ptr [eax]
0x804a7de:   83 ec 08                        	sub esp, 8
0x804a7e1:   8d 93 30 dc ff ff               	lea edx, [ebx - 0x23d0]
0x804a7e7:   52                              	push edx
0x804a7e8:   50                              	push eax
0x804a7e9:   e8 12 db ff ff                  	call 0x8048300 <strcmp>
0x804a7ee:   83 c4 10                        	add esp, 0x10
0x804a7f1:   85 c0                           	test eax, eax
0x804a7f3:   75 07                           	jne 0x804a7fc <main+0x51>
0x804a7f5:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a7fc:   e8 55 dc ff ff                  	call 0x8048456 <platform_main_begin>
0x804a801:   e8 65 ec ff ff                  	call 0x804946b <crc32_gentab>
0x804a806:   e8 a9 ef ff ff                  	call 0x80497b4 <func_1>
0x804a80b:   0f b6 83 24 00 00 00            	movzx eax, byte ptr [ebx + 0x24]
0x804a812:   0f be c0                        	movsx eax, al
0x804a815:   83 ec 04                        	sub esp, 4
0x804a818:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a81b:   8d 93 32 dc ff ff               	lea edx, [ebx - 0x23ce]
0x804a821:   52                              	push edx
0x804a822:   50                              	push eax
0x804a823:   e8 4f ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a828:   83 c4 10                        	add esp, 0x10
0x804a82b:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804a831:   83 ec 04                        	sub esp, 4
0x804a834:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a837:   8d 93 36 dc ff ff               	lea edx, [ebx - 0x23ca]
0x804a83d:   52                              	push edx
0x804a83e:   50                              	push eax
0x804a83f:   e8 33 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a844:   83 c4 10                        	add esp, 0x10
0x804a847:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a84d:   89 c2                           	mov edx, eax
0x804a84f:   83 ec 04                        	sub esp, 4
0x804a852:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a855:   8d 83 3a dc ff ff               	lea eax, [ebx - 0x23c6]
0x804a85b:   50                              	push eax
0x804a85c:   52                              	push edx
0x804a85d:   e8 15 ed ff ff                  	call 0x8049577 <transparent_crc>
0x804a862:   83 c4 10                        	add esp, 0x10
0x804a865:   0f b6 83 30 00 00 00            	movzx eax, byte ptr [ebx + 0x30]
0x804a86c:   0f be c0                        	movsx eax, al
0x804a86f:   83 ec 04                        	sub esp, 4
0x804a872:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a875:   8d 93 3e dc ff ff               	lea edx, [ebx - 0x23c2]
0x804a87b:   52                              	push edx
0x804a87c:   50                              	push eax
0x804a87d:   e8 f5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a882:   83 c4 10                        	add esp, 0x10
0x804a885:   0f b6 83 a4 04 00 00            	movzx eax, byte ptr [ebx + 0x4a4]
0x804a88c:   0f b6 c0                        	movzx eax, al
0x804a88f:   83 ec 04                        	sub esp, 4
0x804a892:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a895:   8d 93 43 dc ff ff               	lea edx, [ebx - 0x23bd]
0x804a89b:   52                              	push edx
0x804a89c:   50                              	push eax
0x804a89d:   e8 d5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8a2:   83 c4 10                        	add esp, 0x10
0x804a8a5:   0f b7 83 32 00 00 00            	movzx eax, word ptr [ebx + 0x32]
0x804a8ac:   0f b7 c0                        	movzx eax, ax
0x804a8af:   83 ec 04                        	sub esp, 4
0x804a8b2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8b5:   8d 93 48 dc ff ff               	lea edx, [ebx - 0x23b8]
0x804a8bb:   52                              	push edx
0x804a8bc:   50                              	push eax
0x804a8bd:   e8 b5 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8c2:   83 c4 10                        	add esp, 0x10
0x804a8c5:   ba 00 00 00 00                  	mov edx, 0
0x804a8ca:   83 ec 04                        	sub esp, 4
0x804a8cd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8d0:   8d 83 4d dc ff ff               	lea eax, [ebx - 0x23b3]
0x804a8d6:   50                              	push eax
0x804a8d7:   52                              	push edx
0x804a8d8:   e8 9a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8dd:   83 c4 10                        	add esp, 0x10
0x804a8e0:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804a8e7:   0f b6 c0                        	movzx eax, al
0x804a8ea:   83 ec 04                        	sub esp, 4
0x804a8ed:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a8f0:   8d 93 52 dc ff ff               	lea edx, [ebx - 0x23ae]
0x804a8f6:   52                              	push edx
0x804a8f7:   50                              	push eax
0x804a8f8:   e8 7a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a8fd:   83 c4 10                        	add esp, 0x10
0x804a900:   0f b6 83 35 00 00 00            	movzx eax, byte ptr [ebx + 0x35]
0x804a907:   0f b6 c0                        	movzx eax, al
0x804a90a:   83 ec 04                        	sub esp, 4
0x804a90d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a910:   8d 93 57 dc ff ff               	lea edx, [ebx - 0x23a9]
0x804a916:   52                              	push edx
0x804a917:   50                              	push eax
0x804a918:   e8 5a ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a91d:   83 c4 10                        	add esp, 0x10
0x804a920:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804a926:   83 ec 04                        	sub esp, 4
0x804a929:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a92c:   8d 93 5c dc ff ff               	lea edx, [ebx - 0x23a4]
0x804a932:   52                              	push edx
0x804a933:   50                              	push eax
0x804a934:   e8 3e ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a939:   83 c4 10                        	add esp, 0x10
0x804a93c:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804a942:   89 c2                           	mov edx, eax
0x804a944:   83 ec 04                        	sub esp, 4
0x804a947:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a94a:   8d 83 61 dc ff ff               	lea eax, [ebx - 0x239f]
0x804a950:   50                              	push eax
0x804a951:   52                              	push edx
0x804a952:   e8 20 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a957:   83 c4 10                        	add esp, 0x10
0x804a95a:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804a961:   0f b6 c0                        	movzx eax, al
0x804a964:   83 ec 04                        	sub esp, 4
0x804a967:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a96a:   8d 93 67 dc ff ff               	lea edx, [ebx - 0x2399]
0x804a970:   52                              	push edx
0x804a971:   50                              	push eax
0x804a972:   e8 00 ec ff ff                  	call 0x8049577 <transparent_crc>
0x804a977:   83 c4 10                        	add esp, 0x10
0x804a97a:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a980:   83 ec 04                        	sub esp, 4
0x804a983:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a986:   8d 93 6d dc ff ff               	lea edx, [ebx - 0x2393]
0x804a98c:   52                              	push edx
0x804a98d:   50                              	push eax
0x804a98e:   e8 e4 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a993:   83 c4 10                        	add esp, 0x10
0x804a996:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a99c:   89 c2                           	mov edx, eax
0x804a99e:   83 ec 04                        	sub esp, 4
0x804a9a1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9a4:   8d 83 73 dc ff ff               	lea eax, [ebx - 0x238d]
0x804a9aa:   50                              	push eax
0x804a9ab:   52                              	push edx
0x804a9ac:   e8 c6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9b1:   83 c4 10                        	add esp, 0x10
0x804a9b4:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804a9bb:   0f b7 c0                        	movzx eax, ax
0x804a9be:   83 ec 04                        	sub esp, 4
0x804a9c1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9c4:   8d 93 79 dc ff ff               	lea edx, [ebx - 0x2387]
0x804a9ca:   52                              	push edx
0x804a9cb:   50                              	push eax
0x804a9cc:   e8 a6 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9d1:   83 c4 10                        	add esp, 0x10
0x804a9d4:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a9da:   83 ec 04                        	sub esp, 4
0x804a9dd:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9e0:   8d 93 7f dc ff ff               	lea edx, [ebx - 0x2381]
0x804a9e6:   52                              	push edx
0x804a9e7:   50                              	push eax
0x804a9e8:   e8 8a eb ff ff                  	call 0x8049577 <transparent_crc>
0x804a9ed:   83 c4 10                        	add esp, 0x10
0x804a9f0:   ba f8 ff ff ff                  	mov edx, 0xfffffff8
0x804a9f5:   83 ec 04                        	sub esp, 4
0x804a9f8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a9fb:   8d 83 85 dc ff ff               	lea eax, [ebx - 0x237b]
0x804aa01:   50                              	push eax
0x804aa02:   52                              	push edx
0x804aa03:   e8 6f eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa08:   83 c4 10                        	add esp, 0x10
0x804aa0b:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804aa11:   83 ec 04                        	sub esp, 4
0x804aa14:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa17:   8d 93 8b dc ff ff               	lea edx, [ebx - 0x2375]
0x804aa1d:   52                              	push edx
0x804aa1e:   50                              	push eax
0x804aa1f:   e8 53 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa24:   83 c4 10                        	add esp, 0x10
0x804aa27:   0f b6 83 58 00 00 00            	movzx eax, byte ptr [ebx + 0x58]
0x804aa2e:   0f be c0                        	movsx eax, al
0x804aa31:   83 ec 04                        	sub esp, 4
0x804aa34:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa37:   8d 93 91 dc ff ff               	lea edx, [ebx - 0x236f]
0x804aa3d:   52                              	push edx
0x804aa3e:   50                              	push eax
0x804aa3f:   e8 33 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa44:   83 c4 10                        	add esp, 0x10
0x804aa47:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804aa4d:   83 ec 04                        	sub esp, 4
0x804aa50:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa53:   8d 93 97 dc ff ff               	lea edx, [ebx - 0x2369]
0x804aa59:   52                              	push edx
0x804aa5a:   50                              	push eax
0x804aa5b:   e8 17 eb ff ff                  	call 0x8049577 <transparent_crc>
0x804aa60:   83 c4 10                        	add esp, 0x10
0x804aa63:   0f b6 83 60 00 00 00            	movzx eax, byte ptr [ebx + 0x60]
0x804aa6a:   0f be c0                        	movsx eax, al
0x804aa6d:   83 ec 04                        	sub esp, 4
0x804aa70:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa73:   8d 93 9d dc ff ff               	lea edx, [ebx - 0x2363]
0x804aa79:   52                              	push edx
0x804aa7a:   50                              	push eax
0x804aa7b:   e8 f7 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa80:   83 c4 10                        	add esp, 0x10
0x804aa83:   0f b7 83 62 00 00 00            	movzx eax, word ptr [ebx + 0x62]
0x804aa8a:   98                              	cwde 
0x804aa8b:   83 ec 04                        	sub esp, 4
0x804aa8e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aa91:   8d 93 a3 dc ff ff               	lea edx, [ebx - 0x235d]
0x804aa97:   52                              	push edx
0x804aa98:   50                              	push eax
0x804aa99:   e8 d9 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aa9e:   83 c4 10                        	add esp, 0x10
0x804aaa1:   0f b7 83 64 00 00 00            	movzx eax, word ptr [ebx + 0x64]
0x804aaa8:   98                              	cwde 
0x804aaa9:   83 ec 04                        	sub esp, 4
0x804aaac:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aaaf:   8d 93 a9 dc ff ff               	lea edx, [ebx - 0x2357]
0x804aab5:   52                              	push edx
0x804aab6:   50                              	push eax
0x804aab7:   e8 bb ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aabc:   83 c4 10                        	add esp, 0x10
0x804aabf:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804aac5:   89 c2                           	mov edx, eax
0x804aac7:   83 ec 04                        	sub esp, 4
0x804aaca:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aacd:   8d 83 af dc ff ff               	lea eax, [ebx - 0x2351]
0x804aad3:   50                              	push eax
0x804aad4:   52                              	push edx
0x804aad5:   e8 9d ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aada:   83 c4 10                        	add esp, 0x10
0x804aadd:   8b 83 6c 00 00 00               	mov eax, dword ptr [ebx + 0x6c]
0x804aae3:   83 ec 04                        	sub esp, 4
0x804aae6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aae9:   8d 93 b5 dc ff ff               	lea edx, [ebx - 0x234b]
0x804aaef:   52                              	push edx
0x804aaf0:   50                              	push eax
0x804aaf1:   e8 81 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804aaf6:   83 c4 10                        	add esp, 0x10
0x804aaf9:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804aaff:   83 ec 04                        	sub esp, 4
0x804ab02:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab05:   8d 93 bb dc ff ff               	lea edx, [ebx - 0x2345]
0x804ab0b:   52                              	push edx
0x804ab0c:   50                              	push eax
0x804ab0d:   e8 65 ea ff ff                  	call 0x8049577 <transparent_crc>
0x804ab12:   83 c4 10                        	add esp, 0x10
0x804ab15:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804ab1b:   f7 d0                           	not eax
0x804ab1d:   83 ec 08                        	sub esp, 8
0x804ab20:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ab23:   50                              	push eax
0x804ab24:   e8 3d d9 ff ff                  	call 0x8048466 <platform_main_end>
0x804ab29:   83 c4 10                        	add esp, 0x10
0x804ab2c:   b8 00 00 00 00                  	mov eax, 0
0x804ab31:   8d 65 f8                        	lea esp, [ebp - 8]
0x804ab34:   59                              	pop ecx
0x804ab35:   5b                              	pop ebx
0x804ab36:   5d                              	pop ebp
0x804ab37:   8d 61 fc                        	lea esp, [ecx - 4]
0x804ab3a:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804ab3b -- 0x804ab3f
0x804ab3b:   8b 04 24                        	mov eax, dword ptr [esp]
0x804ab3e:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804ab3f -- 0x804ab43
0x804ab3f:   8b 14 24                        	mov edx, dword ptr [esp]
0x804ab42:   c3                              	ret 
; data inside code section at 0x804ab43 -- 0x804ab50
0x804ab43:   66 90 66 90 66 90 66 90  66 90 66 90 90            |f.f.f.f.f.f..   |
; function: __libc_csu_init at 0x804ab50 -- 0x804abad
0x804ab50:   55                              	push ebp
0x804ab51:   57                              	push edi
0x804ab52:   56                              	push esi
0x804ab53:   53                              	push ebx
0x804ab54:   e8 37 d8 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ab59:   81 c3 a7 24 00 00               	add ebx, 0x24a7
0x804ab5f:   83 ec 0c                        	sub esp, 0xc
0x804ab62:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804ab66:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804ab6c:   e8 5b d7 ff ff                  	call 0x80482cc <_init>
0x804ab71:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804ab77:   29 c6                           	sub esi, eax
0x804ab79:   c1 fe 02                        	sar esi, 2
0x804ab7c:   85 f6                           	test esi, esi
0x804ab7e:   74 25                           	je 0x804aba5 <__libc_csu_init+0x55>
0x804ab80:   31 ff                           	xor edi, edi
0x804ab82:   8d b6 00 00 00 00               	lea esi, [esi]
0x804ab88:   83 ec 04                        	sub esp, 4
0x804ab8b:   55                              	push ebp
0x804ab8c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab90:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804ab94:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804ab9b:   83 c7 01                        	add edi, 1
0x804ab9e:   83 c4 10                        	add esp, 0x10
0x804aba1:   39 fe                           	cmp esi, edi
0x804aba3:   75 e3                           	jne 0x804ab88 <__libc_csu_init+0x38>
0x804aba5:   83 c4 0c                        	add esp, 0xc
0x804aba8:   5b                              	pop ebx
0x804aba9:   5e                              	pop esi
0x804abaa:   5f                              	pop edi
0x804abab:   5d                              	pop ebp
0x804abac:   c3                              	ret 
; data inside code section at 0x804abad -- 0x804abb0
0x804abad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804abb0 -- 0x804abb2
0x804abb0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804abb4 -- 0x804abc8
0x804abb4:   53                              	push ebx
0x804abb5:   83 ec 08                        	sub esp, 8
0x804abb8:   e8 d3 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804abbd:   81 c3 43 24 00 00               	add ebx, 0x2443
0x804abc3:   83 c4 08                        	add esp, 8
0x804abc6:   5b                              	pop ebx
0x804abc7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc ab 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804abc8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804abd8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804abe8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804abf8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804ac08:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804ac18:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804ac28:   00 00 00 00 f8 ff ff ff  31 00 67 5f 32 00 67 5f   |........1.g_2.g_|
0x804ac38:   33 00 67 5f 38 00 67 5f  31 30 00 67 5f 31 31 00   |3.g_8.g_10.g_11.|
0x804ac48:   67 5f 34 35 00 67 5f 36  39 00 67 5f 37 30 00 67   |g_45.g_69.g_70.g|
0x804ac58:   5f 39 36 00 67 5f 39 37  00 67 5f 31 32 32 00 67   |_96.g_97.g_122.g|
0x804ac68:   5f 31 32 33 00 67 5f 31  32 36 00 67 5f 31 32 39   |_123.g_126.g_129|
0x804ac78:   00 67 5f 31 33 31 00 67  5f 32 30 37 00 67 5f 32   |.g_131.g_207.g_2|
0x804ac88:   34 33 00 67 5f 32 34 34  00 67 5f 33 32 39 00 67   |43.g_244.g_329.g|
0x804ac98:   5f 33 33 33 00 67 5f 33  33 34 00 67 5f 33 33 35   |_333.g_334.g_335|
0x804aca8:   00 67 5f 33 35 31 00 67  5f 33 39 39 00 67 5f 34   |.g_351.g_399.g_4|
0x804acb8:   32 31 00 67 5f 34 33 33  00 00 00 00 00 00 00 3f   |21.g_433.......?|
0x804acc8:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804acd8:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804ace8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804acf8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804ad08:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804ad18:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804ad28:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804ad30:   01 1b 03 3b b8 02 00 00  56 00 00 00 c0 d5 ff ff   |...;....V.......|
0x804ad40:   e8 02 00 00 00 d6 ff ff  0c 03 00 00 50 d6 ff ff   |............P...|
0x804ad50:   d4 02 00 00 26 d7 ff ff  20 03 00 00 36 d7 ff ff   |....&... ...6...|
0x804ad60:   40 03 00 00 64 d7 ff ff  64 03 00 00 82 d7 ff ff   |@...d...d.......|
0x804ad70:   84 03 00 00 aa d7 ff ff  a4 03 00 00 d4 d7 ff ff   |................|
0x804ad80:   c4 03 00 00 fd d7 ff ff  e4 03 00 00 40 d8 ff ff   |............@...|
0x804ad90:   04 04 00 00 81 d8 ff ff  24 04 00 00 d9 d8 ff ff   |........$.......|
0x804ada0:   48 04 00 00 2b d9 ff ff  6c 04 00 00 68 d9 ff ff   |H...+...l...h...|
0x804adb0:   8c 04 00 00 9f d9 ff ff  ac 04 00 00 be d9 ff ff   |................|
0x804adc0:   cc 04 00 00 e8 d9 ff ff  ec 04 00 00 14 da ff ff   |................|
0x804add0:   0c 05 00 00 3f da ff ff  2c 05 00 00 88 da ff ff   |....?...,.......|
0x804ade0:   4c 05 00 00 cf da ff ff  6c 05 00 00 29 db ff ff   |L.......l...)...|
0x804adf0:   90 05 00 00 7d db ff ff  b4 05 00 00 bc db ff ff   |....}...........|
0x804ae00:   d4 05 00 00 f5 db ff ff  f4 05 00 00 17 dc ff ff   |................|
0x804ae10:   14 06 00 00 65 dc ff ff  34 06 00 00 a1 dc ff ff   |....e...4.......|
0x804ae20:   54 06 00 00 2a dd ff ff  74 06 00 00 5c dd ff ff   |T...*...t...\...|
0x804ae30:   94 06 00 00 8c dd ff ff  b4 06 00 00 d1 dd ff ff   |................|
0x804ae40:   d4 06 00 00 10 de ff ff  f4 06 00 00 42 de ff ff   |............B...|
0x804ae50:   14 07 00 00 6e de ff ff  34 07 00 00 8c de ff ff   |....n...4.......|
0x804ae60:   54 07 00 00 b4 de ff ff  74 07 00 00 d9 de ff ff   |T.......t.......|
0x804ae70:   94 07 00 00 fe de ff ff  b4 07 00 00 35 df ff ff   |............5...|
0x804ae80:   d4 07 00 00 69 df ff ff  f4 07 00 00 bb df ff ff   |....i...........|
0x804ae90:   18 08 00 00 07 e0 ff ff  3c 08 00 00 3e e0 ff ff   |........<...>...|
0x804aea0:   5c 08 00 00 6f e0 ff ff  7c 08 00 00 8e e0 ff ff   |\...o...|.......|
0x804aeb0:   9c 08 00 00 b8 e0 ff ff  bc 08 00 00 e0 e0 ff ff   |................|
0x804aec0:   dc 08 00 00 09 e1 ff ff  fc 08 00 00 45 e1 ff ff   |............E...|
0x804aed0:   1c 09 00 00 7f e1 ff ff  3c 09 00 00 d2 e1 ff ff   |........<.......|
0x804aee0:   60 09 00 00 1f e2 ff ff  84 09 00 00 57 e2 ff ff   |`...........W...|
0x804aef0:   a4 09 00 00 89 e2 ff ff  c4 09 00 00 9d e2 ff ff   |................|
0x804af00:   e4 09 00 00 b4 e2 ff ff  04 0a 00 00 c9 e2 ff ff   |................|
0x804af10:   24 0a 00 00 df e2 ff ff  44 0a 00 00 06 e3 ff ff   |$.......D.......|
0x804af20:   64 0a 00 00 2b e3 ff ff  84 0a 00 00 6a e3 ff ff   |d...+.......j...|
0x804af30:   a4 0a 00 00 a3 e3 ff ff  c4 0a 00 00 cf e3 ff ff   |................|
0x804af40:   e4 0a 00 00 f5 e3 ff ff  04 0b 00 00 37 e4 ff ff   |............7...|
0x804af50:   24 0b 00 00 79 e4 ff ff  44 0b 00 00 bb e4 ff ff   |$...y...D.......|
0x804af60:   64 0b 00 00 30 e5 ff ff  84 0b 00 00 8d e5 ff ff   |d...0...........|
0x804af70:   a4 0b 00 00 ea e5 ff ff  c4 0b 00 00 47 e6 ff ff   |............G...|
0x804af80:   e4 0b 00 00 d7 e6 ff ff  04 0c 00 00 3b e7 ff ff   |............;...|
0x804af90:   24 0c 00 00 ab e7 ff ff  44 0c 00 00 f2 e7 ff ff   |$.......D.......|
0x804afa0:   68 0c 00 00 47 e8 ff ff  88 0c 00 00 8e e8 ff ff   |h...G...........|
0x804afb0:   ac 0c 00 00 f6 e8 ff ff  d0 0c 00 00 84 ea ff ff   |................|
0x804afc0:   00 0d 00 00 7b fa ff ff  30 0d 00 00 0b fe ff ff   |....{...0.......|
0x804afd0:   68 0d 00 00 0f fe ff ff  7c 0d 00 00 20 fe ff ff   |h.......|... ...|
0x804afe0:   90 0d 00 00 80 fe ff ff  dc 0d 00 00 14            |.............   |
; section: .eh_frame
0x804afec:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804affc:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b00c:   74 d3 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |t........... ...|
0x804b01c:   30 00 00 00 d0 d2 ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804b02c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b03c:   10 00 00 00 54 00 00 00  ec d2 ff ff 08 00 00 00   |....T...........|
0x804b04c:   00 00 00 00 1c 00 00 00  68 00 00 00 fe d3 ff ff   |........h.......|
0x804b05c:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b06c:   04 04 00 00 20 00 00 00  88 00 00 00 ee d3 ff ff   |.... ...........|
0x804b07c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b08c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b09c:   f8 d3 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b0ac:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b0bc:   f6 d3 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804b0cc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b0dc:   fe d3 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804b0ec:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b0fc:   08 d4 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804b10c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b11c:   11 d4 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b12c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b13c:   34 d4 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |4...A....A....B.|
0x804b14c:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b15c:   55 d4 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |U...X....A....B.|
0x804b16c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b17c:   90 01 00 00 89 d4 ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b18c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b19c:   1c 00 00 00 b4 01 00 00  b7 d4 ff ff 3d 00 00 00   |............=...|
0x804b1ac:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b1bc:   1c 00 00 00 d4 01 00 00  d4 d4 ff ff 37 00 00 00   |............7...|
0x804b1cc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b1dc:   1c 00 00 00 f4 01 00 00  eb d4 ff ff 1f 00 00 00   |................|
0x804b1ec:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b1fc:   1c 00 00 00 14 02 00 00  ea d4 ff ff 2a 00 00 00   |............*...|
0x804b20c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b21c:   1c 00 00 00 34 02 00 00  f4 d4 ff ff 2c 00 00 00   |....4.......,...|
0x804b22c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b23c:   1c 00 00 00 54 02 00 00  00 d5 ff ff 2b 00 00 00   |....T.......+...|
0x804b24c:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b25c:   1c 00 00 00 74 02 00 00  0b d5 ff ff 49 00 00 00   |....t.......I...|
0x804b26c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b27c:   1c 00 00 00 94 02 00 00  34 d5 ff ff 47 00 00 00   |........4...G...|
0x804b28c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b29c:   20 00 00 00 b4 02 00 00  5b d5 ff ff 5a 00 00 00   | .......[...Z...|
0x804b2ac:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b2bc:   c5 0c 04 04 20 00 00 00  d8 02 00 00 91 d5 ff ff   |.... ...........|
0x804b2cc:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b2dc:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b2ec:   c1 d5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b2fc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b30c:   e0 d5 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b31c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b32c:   f9 d5 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804b33c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b34c:   fb d5 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804b35c:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b36c:   29 d6 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |)...<....A....B.|
0x804b37c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b38c:   45 d6 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |E........A....B.|
0x804b39c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b3ac:   ae d6 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b3bc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b3cc:   c0 d6 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804b3dc:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b3ec:   d0 d6 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804b3fc:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b40c:   f5 d6 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b41c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b42c:   14 d7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b43c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b44c:   26 d7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |&...,....A....B.|
0x804b45c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b46c:   32 d7 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |2........A....B.|
0x804b47c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804b48c:   30 d7 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |0...(....A....B.|
0x804b49c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804b4ac:   38 d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |8...%....A....B.|
0x804b4bc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804b4cc:   3d d7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |=...%....A....B.|
0x804b4dc:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804b4ec:   42 d7 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |B...7....A....B.|
0x804b4fc:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804b50c:   59 d7 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |Y...4....A....B.|
0x804b51c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804b52c:   6d d7 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |m...R....A....B.|
0x804b53c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804b54c:   60 05 00 00 9b d7 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804b55c:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804b56c:   1c 00 00 00 84 05 00 00  c3 d7 ff ff 37 00 00 00   |............7...|
0x804b57c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b58c:   1c 00 00 00 a4 05 00 00  da d7 ff ff 31 00 00 00   |............1...|
0x804b59c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804b5ac:   1c 00 00 00 c4 05 00 00  eb d7 ff ff 1f 00 00 00   |................|
0x804b5bc:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b5cc:   1c 00 00 00 e4 05 00 00  ea d7 ff ff 2a 00 00 00   |............*...|
0x804b5dc:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b5ec:   1c 00 00 00 04 06 00 00  f4 d7 ff ff 28 00 00 00   |............(...|
0x804b5fc:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804b60c:   1c 00 00 00 24 06 00 00  fc d7 ff ff 29 00 00 00   |....$.......)...|
0x804b61c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804b62c:   1c 00 00 00 44 06 00 00  05 d8 ff ff 3c 00 00 00   |....D.......<...|
0x804b63c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804b64c:   1c 00 00 00 64 06 00 00  21 d8 ff ff 3a 00 00 00   |....d...!...:...|
0x804b65c:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804b66c:   20 00 00 00 84 06 00 00  3b d8 ff ff 53 00 00 00   | .......;...S...|
0x804b67c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804b68c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 6a d8 ff ff   |.... .......j...|
0x804b69c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804b6ac:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804b6bc:   93 d8 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804b6cc:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804b6dc:   ab d8 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b6ec:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804b6fc:   bd d8 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b70c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804b71c:   b1 d8 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b72c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804b73c:   a8 d8 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b74c:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b75c:   9d d8 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b76c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b77c:   93 d8 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b78c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b79c:   9a d8 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b7ac:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b7bc:   9f d8 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b7cc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b7dc:   be d8 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b7ec:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b7fc:   d7 d8 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b80c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b81c:   e3 d8 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804b82c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b83c:   e9 d8 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b84c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b85c:   0b d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804b86c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b87c:   2d d9 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |-...B....A....B.|
0x804b88c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b89c:   4f d9 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |O...u....A....B.|
0x804b8ac:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b8bc:   a4 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8cc:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b8dc:   e1 d9 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b8ec:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b8fc:   1e da ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b90c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b91c:   5b da ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |[........A....B.|
0x804b92c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b93c:   cb da ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b94c:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b95c:   0f db ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804b96c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b97c:   5f db ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |_...G....A....B.|
0x804b98c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b99c:   b0 09 00 00 82 db ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b9ac:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b9bc:   d0 09 00 00 b7 db ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b9cc:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b9dc:   20 00 00 00 f4 09 00 00  da db ff ff 68 00 00 00   | ...........h...|
0x804b9ec:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b9fc:   0c 04 04 00 2c 00 00 00  18 0a 00 00 1e dc ff ff   |....,...........|
0x804ba0c:   8e 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804ba1c:   86 04 83 05 03 81 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba2c:   04 00 00 00 2c 00 00 00  48 0a 00 00 7c dd ff ff   |....,...H...|...|
0x804ba3c:   f7 0f 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804ba4c:   86 04 83 05 03 e7 0f c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804ba5c:   04 00 00 00 34 00 00 00  78 0a 00 00 43 ed ff ff   |....4...x...C...|
0x804ba6c:   90 03 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804ba7c:   0f 03 75 78 06 10 03 02  75 7c 03 7b 03 c1 0c 01   |..ux....u|.{....|
0x804ba8c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804ba9c:   b0 0a 00 00 9b f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804baac:   10 00 00 00 c4 0a 00 00  8b f0 ff ff 04 00 00 00   |................|
0x804babc:   00 00 00 00 48 00 00 00  d8 0a 00 00 88 f0 ff ff   |....H...........|
0x804bacc:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804badc:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804baec:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804bafc:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804bb0c:   10 00 00 00 24 0b 00 00  9c f0 ff ff 02 00 00 00   |....$...........|
0x804bb1c:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 ab 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 01 00 00 00   |................|
0x804d028:   06 00 00 00 7a 93 32 d8  15 00 81 cb 66 ff 00 00   |....z.2.....f...|
0x804d038:   c7 4b 70 46 01 00 00 00  56 00 00 00 20 f7 b2 9e   |.KpF....V... ...|
0x804d048:   05 00 00 00 a2 ad 00 00  65 03 df ff 58 f2 5a 83   |........e...X.Z.|
0x804d058:   01 00 00 00 ef ba bb b5  ff 00 30 38 3d fd 00 00   |..........08=...|
0x804d068:   03 00 00 00 f9 ff ff ff  5b 9d 84 76 ??            |........[..v?   |
