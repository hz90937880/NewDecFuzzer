;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:37:29
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 20 d1 ff ff               	lea eax, [ebx - 0x2ee0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 c0 d0 ff ff               	lea eax, [ebx - 0x2f40]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 46 ac 04 08               	mov eax, 0x804ac46
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483a5:   3d 80 e0 04 08                  	cmp eax, 0x804e080
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 80 e0 04 08                  	push 0x804e080
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 80 e0 04 08                  	mov eax, 0x804e080
0x80483e5:   2d 80 e0 04 08                  	sub eax, 0x804e080
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 80 e0 04 08                  	push 0x804e080
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 80 e0 04 08 00            	cmp byte ptr [0x804e080], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 80 e0 04 08 01            	mov byte ptr [0x804e080], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 56 2c 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 42 2c 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 40 d1 ff ff               	lea edx, [eax - 0x2ec0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 15 2c 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 f7 2b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 cf 2b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 a5 2b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 7c 2b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 39 2b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 f7 2a 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 9f 2a 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 4e 2a 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 11 2a 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 da 29 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 bb 29 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 91 29 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 65 29 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 3a 29 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 f1 28 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 a9 28 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 4f 28 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 fc 27 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 bd 27 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 87 27 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 65 27 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 17 27 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 db 26 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 52 26 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 20 26 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 f0 25 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ab 25 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 6c 25 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 3a 25 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 0b 25 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 ed 24 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 c5 24 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 a0 24 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 7b 24 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 44 24 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 0f 24 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 bd 23 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 72 23 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 3b 23 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 0a 23 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 eb 22 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 c1 22 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 99 22 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 70 22 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 34 22 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 f9 21 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 a6 21 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 5a 21 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 22 21 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 f3 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 df 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 c8 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 b3 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 9d 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 76 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 51 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 12 20 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 d9 1f 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 ad 1f 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 87 1f 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 58 d2 ff ff               	fld dword ptr [eax - 0x2da8]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 58 d2 ff ff               	fld dword ptr [eax - 0x2da8]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 5c d2 ff ff               	fld dword ptr [eax - 0x2da4]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 45 1f 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 58 d2 ff ff               	fld dword ptr [eax - 0x2da8]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 58 d2 ff ff               	fld dword ptr [eax - 0x2da8]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 5c d2 ff ff               	fld dword ptr [eax - 0x2da4]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 03 1f 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 60 d2 ff ff               	fld dword ptr [eax - 0x2da0]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 64 d2 ff ff               	fld dword ptr [eax - 0x2d9c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 68 d2 ff ff               	fld dword ptr [eax - 0x2d98]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 c1 1e 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 6c d2 ff ff               	fld dword ptr [eax - 0x2d94]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 70 d2 ff ff               	fld dword ptr [eax - 0x2d90]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 74 d2 ff ff               	fld dword ptr [eax - 0x2d8c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 49 1e 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 80 d2 ff ff               	fld qword ptr [eax - 0x2d80]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 ec 1d 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 78 d2 ff ff               	fld qword ptr [eax - 0x2d88]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 80 d2 ff ff               	fld qword ptr [eax - 0x2d80]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 8f 1d 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 88 d2 ff ff               	fld qword ptr [eax - 0x2d78]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 90 d2 ff ff               	fld qword ptr [eax - 0x2d70]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 98 d2 ff ff               	fld qword ptr [eax - 0x2d68]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 32 1d 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 a0 d2 ff ff               	fld qword ptr [eax - 0x2d60]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 a8 d2 ff ff               	fld qword ptr [eax - 0x2d58]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 b0 d2 ff ff               	fld qword ptr [eax - 0x2d50]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 a2 1c 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 b8 d2 ff ff               	fld dword ptr [eax - 0x2d48]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 bc d2 ff ff               	fld dword ptr [eax - 0x2d44]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 3e 1c 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 a0 00 00 00            	mov dword ptr [eax + edx*4 + 0xa0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 cd 1b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 a0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xa0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 8a 1b 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 50 d1 ff ff               	lea eax, [ebx - 0x2eb0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 74 d1 ff ff               	lea eax, [ebx - 0x2e8c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x8049857
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 78                        	sub esp, 0x78
0x804962f:   e8 84 1a 00 00                  	call 0x804b0b8 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804963d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049640:   8b 4d 0c                        	mov ecx, dword ptr [ebp + 0xc]
0x8049643:   8b 5d 1c                        	mov ebx, dword ptr [ebp + 0x1c]
0x8049646:   8b 75 24                        	mov esi, dword ptr [ebp + 0x24]
0x8049649:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964c:   8b 45 2c                        	mov eax, dword ptr [ebp + 0x2c]
0x804964f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049652:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x8049655:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049658:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x804965b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804965e:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049661:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049664:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x8049667:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804966a:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x804966d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049670:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049673:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049676:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x8049679:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804967c:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x804967f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049682:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049685:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049688:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804968b:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804968e:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049694:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804969a:   0f b7 45 ac                     	movzx eax, word ptr [ebp - 0x54]
0x804969e:   66 89 45 f0                     	mov word ptr [ebp - 0x10], ax
0x80496a2:   89 c8                           	mov eax, ecx
0x80496a4:   88 45 ec                        	mov byte ptr [ebp - 0x14], al
0x80496a7:   89 d8                           	mov eax, ebx
0x80496a9:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496ac:   89 f0                           	mov eax, esi
0x80496ae:   88 45 e4                        	mov byte ptr [ebp - 0x1c], al
0x80496b1:   89 f8                           	mov eax, edi
0x80496b3:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x80496b7:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496bb:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496bf:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c3:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c7:   0f b6 45 a0                     	movzx eax, byte ptr [ebp - 0x60]
0x80496cb:   88 45 d4                        	mov byte ptr [ebp - 0x2c], al
0x80496ce:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x80496d2:   66 89 45 d0                     	mov word ptr [ebp - 0x30], ax
0x80496d6:   0f b7 45 98                     	movzx eax, word ptr [ebp - 0x68]
0x80496da:   66 89 45 cc                     	mov word ptr [ebp - 0x34], ax
0x80496de:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e2:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e5:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e9:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496ed:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f1:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496f5:   0f b7 45 88                     	movzx eax, word ptr [ebp - 0x78]
0x80496f9:   66 89 45 bc                     	mov word ptr [ebp - 0x44], ax
0x80496fd:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x8049701:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049705:   0f b6 45 80                     	movzx eax, byte ptr [ebp - 0x80]
0x8049709:   88 45 b4                        	mov byte ptr [ebp - 0x4c], al
0x804970c:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049713:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049717:   0f b7 45 f0                     	movzx eax, word ptr [ebp - 0x10]
0x804971b:   66 89 82 24 00 00 00            	mov word ptr [edx + 0x24], ax
0x8049722:   0f b6 45 ec                     	movzx eax, byte ptr [ebp - 0x14]
0x8049726:   88 82 26 00 00 00               	mov byte ptr [edx + 0x26], al
0x804972c:   8b 45 10                        	mov eax, dword ptr [ebp + 0x10]
0x804972f:   89 82 28 00 00 00               	mov dword ptr [edx + 0x28], eax
0x8049735:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049738:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804973e:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049741:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049747:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x804974b:   88 82 34 00 00 00               	mov byte ptr [edx + 0x34], al
0x8049751:   8b 45 20                        	mov eax, dword ptr [ebp + 0x20]
0x8049754:   89 82 38 00 00 00               	mov dword ptr [edx + 0x38], eax
0x804975a:   0f b6 45 e4                     	movzx eax, byte ptr [ebp - 0x1c]
0x804975e:   88 82 3c 00 00 00               	mov byte ptr [edx + 0x3c], al
0x8049764:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049768:   66 89 82 3e 00 00 00            	mov word ptr [edx + 0x3e], ax
0x804976f:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049773:   66 89 82 40 00 00 00            	mov word ptr [edx + 0x40], ax
0x804977a:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x804977e:   66 89 82 42 00 00 00            	mov word ptr [edx + 0x42], ax
0x8049785:   0f b6 45 d4                     	movzx eax, byte ptr [ebp - 0x2c]
0x8049789:   88 82 44 00 00 00               	mov byte ptr [edx + 0x44], al
0x804978f:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x8049792:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049798:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x804979b:   89 82 4c 00 00 00               	mov dword ptr [edx + 0x4c], eax
0x80497a1:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497a4:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x80497aa:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497ad:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497b3:   0f b7 45 d0                     	movzx eax, word ptr [ebp - 0x30]
0x80497b7:   66 89 82 58 00 00 00            	mov word ptr [edx + 0x58], ax
0x80497be:   0f b7 45 cc                     	movzx eax, word ptr [ebp - 0x34]
0x80497c2:   66 89 82 a4 04 00 00            	mov word ptr [edx + 0x4a4], ax
0x80497c9:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497cc:   89 82 5c 00 00 00               	mov dword ptr [edx + 0x5c], eax
0x80497d2:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x80497d5:   89 82 a8 04 00 00               	mov dword ptr [edx + 0x4a8], eax
0x80497db:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497de:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497e4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497e8:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497ee:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x80497f2:   66 89 82 66 00 00 00            	mov word ptr [edx + 0x66], ax
0x80497f9:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x80497fd:   66 89 82 68 00 00 00            	mov word ptr [edx + 0x68], ax
0x8049804:   0f b7 45 bc                     	movzx eax, word ptr [ebp - 0x44]
0x8049808:   66 89 82 6a 00 00 00            	mov word ptr [edx + 0x6a], ax
0x804980f:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x8049813:   66 89 82 6c 00 00 00            	mov word ptr [edx + 0x6c], ax
0x804981a:   0f b6 45 b4                     	movzx eax, byte ptr [ebp - 0x4c]
0x804981e:   88 82 6e 00 00 00               	mov byte ptr [edx + 0x6e], al
0x8049824:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049827:   89 82 70 00 00 00               	mov dword ptr [edx + 0x70], eax
0x804982d:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049830:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049836:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x8049839:   89 82 78 00 00 00               	mov dword ptr [edx + 0x78], eax
0x804983f:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049843:   66 89 82 7c 00 00 00            	mov word ptr [edx + 0x7c], ax
0x804984a:   b8 00 00 00 00                  	mov eax, 0
0x804984f:   83 c4 78                        	add esp, 0x78
0x8049852:   5b                              	pop ebx
0x8049853:   5e                              	pop esi
0x8049854:   5f                              	pop edi
0x8049855:   5d                              	pop ebp
0x8049856:   c3                              	ret 
; function: func_1 at 0x8049857 -- 0x804ac46
0x8049857:   55                              	push ebp
0x8049858:   89 e5                           	mov ebp, esp
0x804985a:   57                              	push edi
0x804985b:   56                              	push esi
0x804985c:   53                              	push ebx
0x804985d:   81 ec 9c 01 00 00               	sub esp, 0x19c
0x8049863:   e8 4c 18 00 00                  	call 0x804b0b4 <__x86.get_pc_thunk.ax>
0x8049868:   05 98 47 00 00                  	add eax, 0x4798
0x804986d:   66 c7 45 f2 ff ff               	mov word ptr [ebp - 0xe], 0xffff
0x8049873:   c6 45 f1 f7                     	mov byte ptr [ebp - 0xf], 0xf7
0x8049877:   c7 45 ec f7 ff ff ff            	mov dword ptr [ebp - 0x14], 0xfffffff7
0x804987e:   c6 85 77 ff ff ff fd            	mov byte ptr [ebp - 0x89], 0xfd
0x8049885:   c7 45 e8 6b d8 bd 79            	mov dword ptr [ebp - 0x18], 0x79bdd86b
0x804988c:   c7 85 70 ff ff ff ee 0a 6e 04   	mov dword ptr [ebp - 0x90], 0x46e0aee
0x8049896:   c6 45 e7 c5                     	mov byte ptr [ebp - 0x19], 0xc5
0x804989a:   c7 85 6c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x94], 1
0x80498a4:   c6 45 e6 22                     	mov byte ptr [ebp - 0x1a], 0x22
0x80498a8:   66 c7 45 e4 f6 ff               	mov word ptr [ebp - 0x1c], 0xfff6
0x80498ae:   66 c7 45 e2 4f 3c               	mov word ptr [ebp - 0x1e], 0x3c4f
0x80498b4:   66 c7 45 e0 82 78               	mov word ptr [ebp - 0x20], 0x7882
0x80498ba:   c6 45 df 8a                     	mov byte ptr [ebp - 0x21], 0x8a
0x80498be:   c7 45 d8 91 bf 2f a6            	mov dword ptr [ebp - 0x28], 0xa62fbf91
0x80498c5:   c7 45 d4 04 00 00 00            	mov dword ptr [ebp - 0x2c], 4
0x80498cc:   c7 45 d0 03 00 00 00            	mov dword ptr [ebp - 0x30], 3
0x80498d3:   c7 45 cc fd ff ff ff            	mov dword ptr [ebp - 0x34], 0xfffffffd
0x80498da:   66 c7 85 6a ff ff ff c1 46      	mov word ptr [ebp - 0x96], 0x46c1
0x80498e3:   66 c7 45 ca 20 44               	mov word ptr [ebp - 0x36], 0x4420
0x80498e9:   66 c7 85 68 ff ff ff 00 00      	mov word ptr [ebp - 0x98], 0
0x80498f2:   c7 45 c4 5b 56 06 7b            	mov dword ptr [ebp - 0x3c], 0x7b06565b
0x80498f9:   c7 45 c0 00 00 00 00            	mov dword ptr [ebp - 0x40], 0
0x8049900:   c7 45 bc 7f d9 db 03            	mov dword ptr [ebp - 0x44], 0x3dbd97f
0x8049907:   c6 45 bb b3                     	mov byte ptr [ebp - 0x45], 0xb3
0x804990b:   66 c7 45 b8 fd ff               	mov word ptr [ebp - 0x48], 0xfffd
0x8049911:   66 c7 45 b6 c7 59               	mov word ptr [ebp - 0x4a], 0x59c7
0x8049917:   66 c7 85 66 ff ff ff ff ff      	mov word ptr [ebp - 0x9a], 0xffff
0x8049920:   66 c7 45 b4 9f cb               	mov word ptr [ebp - 0x4c], 0xcb9f
0x8049926:   c6 85 65 ff ff ff 1c            	mov byte ptr [ebp - 0x9b], 0x1c
0x804992d:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x8049934:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x804993b:   c7 85 60 ff ff ff 70 b8 22 14   	mov dword ptr [ebp - 0xa0], 0x1422b870
0x8049945:   66 c7 45 aa db fa               	mov word ptr [ebp - 0x56], 0xfadb
0x804994b:   66 c7 45 a8 58 c5               	mov word ptr [ebp - 0x58], 0xc558
0x8049951:   c7 45 a4 f6 ff ff ff            	mov dword ptr [ebp - 0x5c], 0xfffffff6
0x8049958:   c7 45 a0 ff ff ff ff            	mov dword ptr [ebp - 0x60], 0xffffffff
0x804995f:   c6 85 5f ff ff ff 01            	mov byte ptr [ebp - 0xa1], 1
0x8049966:   c7 45 9c 00 00 00 00            	mov dword ptr [ebp - 0x64], 0
0x804996d:   c7 85 58 ff ff ff fa 9d 4d 95   	mov dword ptr [ebp - 0xa8], 0x954d9dfa
0x8049977:   c6 85 57 ff ff ff cb            	mov byte ptr [ebp - 0xa9], 0xcb
0x804997e:   c6 85 56 ff ff ff dc            	mov byte ptr [ebp - 0xaa], 0xdc
0x8049985:   66 c7 85 54 ff ff ff 03 00      	mov word ptr [ebp - 0xac], 3
0x804998e:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049995:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049999:   0f b6 f8                        	movzx edi, al
0x804999c:   b8 07 00 00 00                  	mov eax, 7
0x80499a1:   99                              	cdq 
0x80499a2:   f7 ff                           	idiv edi
0x80499a4:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x80499a8:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x80499ad:   0f 84 3f 06 00 00               	je 0x8049ff2 <func_1+0x79b>
0x80499b3:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x80499ba:   c7 85 e0 fe ff ff 79 7e 76 fe   	mov dword ptr [ebp - 0x120], 0xfe767e79
0x80499c4:   66 c7 85 de fe ff ff fd ff      	mov word ptr [ebp - 0x122], 0xfffd
0x80499cd:   c7 85 d8 fe ff ff d9 c2 d1 b9   	mov dword ptr [ebp - 0x128], 0xb9d1c2d9
0x80499d7:   c7 85 d4 fe ff ff 90 d2 98 70   	mov dword ptr [ebp - 0x12c], 0x7098d290
0x80499e1:   c6 85 d3 fe ff ff ea            	mov byte ptr [ebp - 0x12d], 0xea
0x80499e8:   c6 85 d2 fe ff ff 08            	mov byte ptr [ebp - 0x12e], 8
0x80499ef:   80 6d f1 01                     	sub byte ptr [ebp - 0xf], 1
0x80499f3:   66 83 7d a8 00                  	cmp word ptr [ebp - 0x58], 0
0x80499f8:   75 07                           	jne 0x8049a01 <func_1+0x1aa>
0x80499fa:   ba 80 ff ff ff                  	mov edx, 0xffffff80
0x80499ff:   eb 05                           	jmp 0x8049a06 <func_1+0x1af>
0x8049a01:   ba 00 00 00 00                  	mov edx, 0
0x8049a06:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a0a:   89 c1                           	mov ecx, eax
0x8049a0c:   89 d0                           	mov eax, edx
0x8049a0e:   0f af c1                        	imul eax, ecx
0x8049a11:   89 c2                           	mov edx, eax
0x8049a13:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049a17:   38 c2                           	cmp dl, al
0x8049a19:   0f 84 7d 05 00 00               	je 0x8049f9c <func_1+0x745>
0x8049a1f:   66 c7 85 ca fe ff ff 2e 7b      	mov word ptr [ebp - 0x136], 0x7b2e
0x8049a28:   c7 85 c4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x13c], 0xffffffff
0x8049a32:   c7 85 c0 fe ff ff 34 d0 22 b1   	mov dword ptr [ebp - 0x140], 0xb122d034
0x8049a3c:   c7 85 bc fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x144], 0xfffffff6
0x8049a46:   66 c7 45 a8 17 00               	mov word ptr [ebp - 0x58], 0x17
0x8049a4c:   e9 97 01 00 00                  	jmp 0x8049be8 <func_1+0x391>
0x8049a51:   c6 85 9f fe ff ff 87            	mov byte ptr [ebp - 0x161], 0x87
0x8049a58:   c7 85 98 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x168], 0xffffffff
0x8049a62:   c7 45 98 0b 00 00 00            	mov dword ptr [ebp - 0x68], 0xb
0x8049a69:   e9 65 01 00 00                  	jmp 0x8049bd3 <func_1+0x37c>
0x8049a6e:   c7 85 94 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x16c], 7
0x8049a78:   c7 85 90 fe ff ff 86 2b 4a 04   	mov dword ptr [ebp - 0x170], 0x44a2b86
0x8049a82:   66 c7 45 f2 09 00               	mov word ptr [ebp - 0xe], 9
0x8049a88:   eb 43                           	jmp 0x8049acd <func_1+0x276>
0x8049a8a:   c7 85 8c fe ff ff a3 3c 2e 93   	mov dword ptr [ebp - 0x174], 0x932e3ca3
0x8049a94:   8b 85 8c fe ff ff               	mov eax, dword ptr [ebp - 0x174]
0x8049a9a:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049a9d:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x8049aa1:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049aa4:   0f b7 85 ca fe ff ff            	movzx eax, word ptr [ebp - 0x136]
0x8049aab:   83 c8 01                        	or eax, 1
0x8049aae:   98                              	cwde 
0x8049aaf:   09 45 a4                        	or dword ptr [ebp - 0x5c], eax
0x8049ab2:   b8 01 00 00 00                  	mov eax, 1
0x8049ab7:   89 c2                           	mov edx, eax
0x8049ab9:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049abd:   21 d0                           	and eax, edx
0x8049abf:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049ac2:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049ac6:   83 e8 09                        	sub eax, 9
0x8049ac9:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x8049acd:   66 83 7d f2 02                  	cmp word ptr [ebp - 0xe], 2
0x8049ad2:   7e b6                           	jle 0x8049a8a <func_1+0x233>
0x8049ad4:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x8049ad8:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049ade:   0f b6 d8                        	movzx ebx, al
0x8049ae1:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049ae5:   0f b6 c0                        	movzx eax, al
0x8049ae8:   89 c1                           	mov ecx, eax
0x8049aea:   d3 e3                           	shl ebx, cl
0x8049aec:   89 d8                           	mov eax, ebx
0x8049aee:   0f b6 c0                        	movzx eax, al
0x8049af1:   83 e8 07                        	sub eax, 7
0x8049af4:   66 23 45 f2                     	and ax, word ptr [ebp - 0xe]
0x8049af8:   89 c1                           	mov ecx, eax
0x8049afa:   66 0f be 85 9f fe ff ff         	movsx ax, byte ptr [ebp - 0x161]
0x8049b02:   21 c8                           	and eax, ecx
0x8049b04:   0f bf d8                        	movsx ebx, ax
0x8049b07:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049b0a:   98                              	cwde 
0x8049b0b:   89 c1                           	mov ecx, eax
0x8049b0d:   d3 e3                           	shl ebx, cl
0x8049b0f:   89 d8                           	mov eax, ebx
0x8049b11:   89 c1                           	mov ecx, eax
0x8049b13:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049b16:   29 c1                           	sub ecx, eax
0x8049b18:   89 c8                           	mov eax, ecx
0x8049b1a:   0f b6 c0                        	movzx eax, al
0x8049b1d:   f6 75 e7                        	div byte ptr [ebp - 0x19]
0x8049b20:   22 85 77 ff ff ff               	and al, byte ptr [ebp - 0x89]
0x8049b26:   0f b6 c8                        	movzx ecx, al
0x8049b29:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049b2d:   0f af c1                        	imul eax, ecx
0x8049b30:   39 c2                           	cmp edx, eax
0x8049b32:   0f 94 c0                        	sete al
0x8049b35:   0f b6 c0                        	movzx eax, al
0x8049b38:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x8049b3e:   0f 97 c0                        	seta al
0x8049b41:   0f b6 c0                        	movzx eax, al
0x8049b44:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049b47:   0f 92 c0                        	setb al
0x8049b4a:   0f b6 c0                        	movzx eax, al
0x8049b4d:   21 45 a0                        	and dword ptr [ebp - 0x60], eax
0x8049b50:   66 83 bd ca fe ff ff 00         	cmp word ptr [ebp - 0x136], 0
0x8049b58:   75 74                           	jne 0x8049bce <func_1+0x377>
0x8049b5a:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049b60:   08 45 e6                        	or byte ptr [ebp - 0x1a], al
0x8049b63:   66 0f be 45 e6                  	movsx ax, byte ptr [ebp - 0x1a]
0x8049b68:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x8049b6c:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049b70:   8b 95 94 fe ff ff               	mov edx, dword ptr [ebp - 0x16c]
0x8049b76:   89 d1                           	mov ecx, edx
0x8049b78:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x8049b7c:   09 d1                           	or ecx, edx
0x8049b7e:   0f b7 55 f2                     	movzx edx, word ptr [ebp - 0xe]
0x8049b82:   01 ca                           	add edx, ecx
0x8049b84:   0f bf d2                        	movsx edx, dx
0x8049b87:   69 ca ba 6d 00 00               	imul ecx, edx, 0x6dba
0x8049b8d:   0f b6 55 f1                     	movzx edx, byte ptr [ebp - 0xf]
0x8049b91:   21 ca                           	and edx, ecx
0x8049b93:   f7 d2                           	not edx
0x8049b95:   39 d0                           	cmp eax, edx
0x8049b97:   7c 09                           	jl 0x8049ba2 <func_1+0x34b>
0x8049b99:   83 bd 94 fe ff ff 00            	cmp dword ptr [ebp - 0x16c], 0
0x8049ba0:   74 07                           	je 0x8049ba9 <func_1+0x352>
0x8049ba2:   bf 01 00 00 00                  	mov edi, 1
0x8049ba7:   eb 05                           	jmp 0x8049bae <func_1+0x357>
0x8049ba9:   bf 00 00 00 00                  	mov edi, 0
0x8049bae:   b8 01 00 00 00                  	mov eax, 1
0x8049bb3:   99                              	cdq 
0x8049bb4:   f7 ff                           	idiv edi
0x8049bb6:   c0 e8 04                        	shr al, 4
0x8049bb9:   0f b6 c0                        	movzx eax, al
0x8049bbc:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x8049bc2:   8b 85 90 fe ff ff               	mov eax, dword ptr [ebp - 0x170]
0x8049bc8:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049bcc:   eb 01                           	jmp 0x8049bcf <func_1+0x378>
0x8049bce:   90                              	nop 
0x8049bcf:   83 45 98 01                     	add dword ptr [ebp - 0x68], 1
0x8049bd3:   83 7d 98 37                     	cmp dword ptr [ebp - 0x68], 0x37
0x8049bd7:   0f 87 91 fe ff ff               	ja 0x8049a6e <func_1+0x217>
0x8049bdd:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049be1:   83 e8 01                        	sub eax, 1
0x8049be4:   66 89 45 a8                     	mov word ptr [ebp - 0x58], ax
0x8049be8:   66 83 7d a8 10                  	cmp word ptr [ebp - 0x58], 0x10
0x8049bed:   0f 84 5e fe ff ff               	je 0x8049a51 <func_1+0x1fa>
0x8049bf3:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049bf7:   35 5d 27 2b 58                  	xor eax, 0x582b275d
0x8049bfc:   89 c2                           	mov edx, eax
0x8049bfe:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049c02:   39 c2                           	cmp edx, eax
0x8049c04:   0f 9d c0                        	setge al
0x8049c07:   0f b6 c0                        	movzx eax, al
0x8049c0a:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x8049c0e:   0f be ca                        	movsx ecx, dl
0x8049c11:   99                              	cdq 
0x8049c12:   f7 f9                           	idiv ecx
0x8049c14:   89 d0                           	mov eax, edx
0x8049c16:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049c1a:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049c1e:   f7 d8                           	neg eax
0x8049c20:   83 f0 c8                        	xor eax, 0xffffffc8
0x8049c23:   0f b6 d0                        	movzx edx, al
0x8049c26:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x8049c29:   0f b6 c0                        	movzx eax, al
0x8049c2c:   01 d0                           	add eax, edx
0x8049c2e:   89 c2                           	mov edx, eax
0x8049c30:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049c34:   21 d0                           	and eax, edx
0x8049c36:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049c3a:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049c3e:   88 45 df                        	mov byte ptr [ebp - 0x21], al
0x8049c41:   c6 85 bb fe ff ff 3c            	mov byte ptr [ebp - 0x145], 0x3c
0x8049c48:   c7 85 b4 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x14c], 0xffffffff
0x8049c52:   c6 85 b3 fe ff ff 95            	mov byte ptr [ebp - 0x14d], 0x95
0x8049c59:   c7 85 ac fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x154], 0
0x8049c63:   c7 45 d8 f7 ff ff ff            	mov dword ptr [ebp - 0x28], 0xfffffff7
0x8049c6a:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x8049c70:   0f be c0                        	movsx eax, al
0x8049c73:   0f b7 55 e0                     	movzx edx, word ptr [ebp - 0x20]
0x8049c77:   83 ea 09                        	sub edx, 9
0x8049c7a:   0f be ca                        	movsx ecx, dl
0x8049c7d:   99                              	cdq 
0x8049c7e:   f7 f9                           	idiv ecx
0x8049c80:   89 d0                           	mov eax, edx
0x8049c82:   08 45 e6                        	or byte ptr [ebp - 0x1a], al
0x8049c85:   0f be 45 e6                     	movsx eax, byte ptr [ebp - 0x1a]
0x8049c89:   66 83 7d e2 00                  	cmp word ptr [ebp - 0x1e], 0
0x8049c8e:   0f 95 c2                        	setne dl
0x8049c91:   0f b6 d2                        	movzx edx, dl
0x8049c94:   89 95 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], edx
0x8049c9a:   39 85 c4 fe ff ff               	cmp dword ptr [ebp - 0x13c], eax
0x8049ca0:   0f 95 c0                        	setne al
0x8049ca3:   0f b6 c0                        	movzx eax, al
0x8049ca6:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x8049caa:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049cae:   66 c1 e8 0f                     	shr ax, 0xf
0x8049cb2:   0f b7 d0                        	movzx edx, ax
0x8049cb5:   0f bf 85 ca fe ff ff            	movsx eax, word ptr [ebp - 0x136]
0x8049cbc:   39 c2                           	cmp edx, eax
0x8049cbe:   66 83 bd ca fe ff ff 00         	cmp word ptr [ebp - 0x136], 0
0x8049cc6:   0f 84 88 00 00 00               	je 0x8049d54 <func_1+0x4fd>
0x8049ccc:   66 c7 85 a0 fe ff ff fe ff      	mov word ptr [ebp - 0x160], 0xfffe
0x8049cd5:   80 7d df 00                     	cmp byte ptr [ebp - 0x21], 0
0x8049cd9:   83 6d ec 01                     	sub dword ptr [ebp - 0x14], 1
0x8049cdd:   0f b6 85 bb fe ff ff            	movzx eax, byte ptr [ebp - 0x145]
0x8049ce4:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ce7:   0f b7 45 e0                     	movzx eax, word ptr [ebp - 0x20]
0x8049ceb:   66 89 85 a0 fe ff ff            	mov word ptr [ebp - 0x160], ax
0x8049cf2:   0f b6 8d bb fe ff ff            	movzx ecx, byte ptr [ebp - 0x145]
0x8049cf9:   81 7d ec 94 f1 cd 10            	cmp dword ptr [ebp - 0x14], 0x10cdf194
0x8049d00:   0f 96 c0                        	setbe al
0x8049d03:   0f b6 c0                        	movzx eax, al
0x8049d06:   8b 95 e0 fe ff ff               	mov edx, dword ptr [ebp - 0x120]
0x8049d0c:   21 d0                           	and eax, edx
0x8049d0e:   98                              	cwde 
0x8049d0f:   0f be 7d e6                     	movsx edi, byte ptr [ebp - 0x1a]
0x8049d13:   99                              	cdq 
0x8049d14:   f7 ff                           	idiv edi
0x8049d16:   83 f8 01                        	cmp eax, 1
0x8049d19:   77 07                           	ja 0x8049d22 <func_1+0x4cb>
0x8049d1b:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x8049d20:   eb 05                           	jmp 0x8049d27 <func_1+0x4d0>
0x8049d22:   b8 fc ff ff ff                  	mov eax, 0xfffffffc
0x8049d27:   39 c8                           	cmp eax, ecx
0x8049d29:   0f 9d c0                        	setge al
0x8049d2c:   0f b6 c0                        	movzx eax, al
0x8049d2f:   8b 55 d4                        	mov edx, dword ptr [ebp - 0x2c]
0x8049d32:   0f b7 fa                        	movzx edi, dx
0x8049d35:   99                              	cdq 
0x8049d36:   f7 ff                           	idiv edi
0x8049d38:   89 c2                           	mov edx, eax
0x8049d3a:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049d3e:   39 c2                           	cmp edx, eax
0x8049d40:   0f 9c c0                        	setl al
0x8049d43:   0f b6 c0                        	movzx eax, al
0x8049d46:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049d49:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x8049d4c:   31 45 d0                        	xor dword ptr [ebp - 0x30], eax
0x8049d4f:   e9 1d 02 00 00                  	jmp 0x8049f71 <func_1+0x71a>
0x8049d54:   c7 85 a8 fe ff ff 5d 45 08 dc   	mov dword ptr [ebp - 0x158], 0xdc08455d
0x8049d5e:   c7 85 a4 fe ff ff f9 ff ff ff   	mov dword ptr [ebp - 0x15c], 0xfffffff9
0x8049d68:   80 bd 5f ff ff ff 00            	cmp byte ptr [ebp - 0xa1], 0
0x8049d6f:   75 32                           	jne 0x8049da3 <func_1+0x54c>
0x8049d71:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x8049d75:   0f be d8                        	movsx ebx, al
0x8049d78:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x8049d7c:   21 85 b4 fe ff ff               	and dword ptr [ebp - 0x14c], eax
0x8049d82:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049d88:   0f be c0                        	movsx eax, al
0x8049d8b:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x8049d8f:   0f be f2                        	movsx esi, dl
0x8049d92:   99                              	cdq 
0x8049d93:   f7 fe                           	idiv esi
0x8049d95:   0f be c0                        	movsx eax, al
0x8049d98:   89 c1                           	mov ecx, eax
0x8049d9a:   d3 e3                           	shl ebx, cl
0x8049d9c:   89 d8                           	mov eax, ebx
0x8049d9e:   3d ba 00 00 00                  	cmp eax, 0xba
0x8049da3:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x8049da7:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049daa:   c7 85 b4 fe ff ff 6f 00 00 00   	mov dword ptr [ebp - 0x14c], 0x6f
0x8049db4:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049dba:   89 c2                           	mov edx, eax
0x8049dbc:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049dc2:   01 d0                           	add eax, edx
0x8049dc4:   0f be c0                        	movsx eax, al
0x8049dc7:   83 c0 1d                        	add eax, 0x1d
0x8049dca:   83 f8 6f                        	cmp eax, 0x6f
0x8049dcd:   0f 9f c0                        	setg al
0x8049dd0:   0f b6 c0                        	movzx eax, al
0x8049dd3:   80 bd bb fe ff ff 00            	cmp byte ptr [ebp - 0x145], 0
0x8049dda:   74 0d                           	je 0x8049de9 <func_1+0x592>
0x8049ddc:   80 7d f1 00                     	cmp byte ptr [ebp - 0xf], 0
0x8049de0:   74 07                           	je 0x8049de9 <func_1+0x592>
0x8049de2:   b9 01 00 00 00                  	mov ecx, 1
0x8049de7:   eb 05                           	jmp 0x8049dee <func_1+0x597>
0x8049de9:   b9 00 00 00 00                  	mov ecx, 0
0x8049dee:   09 45 cc                        	or dword ptr [ebp - 0x34], eax
0x8049df1:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x8049df5:   39 45 cc                        	cmp dword ptr [ebp - 0x34], eax
0x8049df8:   0f 9c c0                        	setl al
0x8049dfb:   0f b6 d0                        	movzx edx, al
0x8049dfe:   0f bf 45 f2                     	movsx eax, word ptr [ebp - 0xe]
0x8049e02:   09 d0                           	or eax, edx
0x8049e04:   39 c1                           	cmp ecx, eax
0x8049e06:   0f 94 c0                        	sete al
0x8049e09:   0f b6 d0                        	movzx edx, al
0x8049e0c:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049e12:   98                              	cwde 
0x8049e13:   29 c2                           	sub edx, eax
0x8049e15:   89 d0                           	mov eax, edx
0x8049e17:   21 85 ac fe ff ff               	and dword ptr [ebp - 0x154], eax
0x8049e1d:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x8049e24:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x8049e2a:   0f be c0                        	movsx eax, al
0x8049e2d:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x8049e30:   0f be fa                        	movsx edi, dl
0x8049e33:   99                              	cdq 
0x8049e34:   f7 ff                           	idiv edi
0x8049e36:   89 c1                           	mov ecx, eax
0x8049e38:   b8 80 de a0 77                  	mov eax, 0x77a0de80
0x8049e3d:   99                              	cdq 
0x8049e3e:   f7 f9                           	idiv ecx
0x8049e40:   89 d0                           	mov eax, edx
0x8049e42:   39 45 e8                        	cmp dword ptr [ebp - 0x18], eax
0x8049e45:   0f 9f c0                        	setg al
0x8049e48:   0f b6 c0                        	movzx eax, al
0x8049e4b:   f7 d0                           	not eax
0x8049e4d:   0f bf d0                        	movsx edx, ax
0x8049e50:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049e53:   98                              	cwde 
0x8049e54:   0f af c2                        	imul eax, edx
0x8049e57:   85 c0                           	test eax, eax
0x8049e59:   74 55                           	je 0x8049eb0 <func_1+0x659>
0x8049e5b:   8b 85 a8 fe ff ff               	mov eax, dword ptr [ebp - 0x158]
0x8049e61:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049e64:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049e6b:   0f be d0                        	movsx edx, al
0x8049e6e:   0f b7 85 ca fe ff ff            	movzx eax, word ptr [ebp - 0x136]
0x8049e75:   0f be c0                        	movsx eax, al
0x8049e78:   89 c1                           	mov ecx, eax
0x8049e7a:   d3 e2                           	shl edx, cl
0x8049e7c:   89 d0                           	mov eax, edx
0x8049e7e:   0f b6 c0                        	movzx eax, al
0x8049e81:   f7 d8                           	neg eax
0x8049e83:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x8049e89:   0f 94 c0                        	sete al
0x8049e8c:   0f b6 d0                        	movzx edx, al
0x8049e8f:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x8049e93:   0f be c0                        	movsx eax, al
0x8049e96:   0f af c2                        	imul eax, edx
0x8049e99:   21 85 e0 fe ff ff               	and dword ptr [ebp - 0x120], eax
0x8049e9f:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x8049ea5:   09 85 a8 fe ff ff               	or dword ptr [ebp - 0x158], eax
0x8049eab:   e9 c1 00 00 00                  	jmp 0x8049f71 <func_1+0x71a>
0x8049eb0:   66 c7 85 a2 fe ff ff ff ff      	mov word ptr [ebp - 0x15e], 0xffff
0x8049eb9:   66 83 6d ca 01                  	sub word ptr [ebp - 0x36], 1
0x8049ebe:   0f b7 95 a2 fe ff ff            	movzx edx, word ptr [ebp - 0x15e]
0x8049ec5:   66 83 7d e4 04                  	cmp word ptr [ebp - 0x1c], 4
0x8049eca:   0f 94 c0                        	sete al
0x8049ecd:   0f b6 d8                        	movzx ebx, al
0x8049ed0:   0f b6 85 5f ff ff ff            	movzx eax, byte ptr [ebp - 0xa1]
0x8049ed7:   0f b6 c0                        	movzx eax, al
0x8049eda:   89 c1                           	mov ecx, eax
0x8049edc:   d3 e3                           	shl ebx, cl
0x8049ede:   89 d8                           	mov eax, ebx
0x8049ee0:   39 c2                           	cmp edx, eax
0x8049ee2:   0f 9e c0                        	setle al
0x8049ee5:   0f b6 c0                        	movzx eax, al
0x8049ee8:   89 85 a8 fe ff ff               	mov dword ptr [ebp - 0x158], eax
0x8049eee:   0f b6 5d df                     	movzx ebx, byte ptr [ebp - 0x21]
0x8049ef2:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x8049ef6:   23 45 a0                        	and eax, dword ptr [ebp - 0x60]
0x8049ef9:   89 c1                           	mov ecx, eax
0x8049efb:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x8049eff:   3a 85 d3 fe ff ff               	cmp al, byte ptr [ebp - 0x12d]
0x8049f05:   0f 94 c0                        	sete al
0x8049f08:   0f b6 d0                        	movzx edx, al
0x8049f0b:   8b 85 a4 fe ff ff               	mov eax, dword ptr [ebp - 0x15c]
0x8049f11:   98                              	cwde 
0x8049f12:   29 c2                           	sub edx, eax
0x8049f14:   89 d0                           	mov eax, edx
0x8049f16:   89 85 b4 fe ff ff               	mov dword ptr [ebp - 0x14c], eax
0x8049f1c:   8b 85 b4 fe ff ff               	mov eax, dword ptr [ebp - 0x14c]
0x8049f22:   88 85 80 fe ff ff               	mov byte ptr [ebp - 0x180], al
0x8049f28:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049f2b:   89 c2                           	mov edx, eax
0x8049f2d:   0f b6 85 80 fe ff ff            	movzx eax, byte ptr [ebp - 0x180]
0x8049f34:   f6 f2                           	div dl
0x8049f36:   38 85 bb fe ff ff               	cmp byte ptr [ebp - 0x145], al
0x8049f3c:   0f 94 c0                        	sete al
0x8049f3f:   0f b6 c0                        	movzx eax, al
0x8049f42:   8b 55 d8                        	mov edx, dword ptr [ebp - 0x28]
0x8049f45:   0f bf f2                        	movsx esi, dx
0x8049f48:   99                              	cdq 
0x8049f49:   f7 fe                           	idiv esi
0x8049f4b:   89 c6                           	mov esi, eax
0x8049f4d:   89 c8                           	mov eax, ecx
0x8049f4f:   99                              	cdq 
0x8049f50:   f7 fe                           	idiv esi
0x8049f52:   0f b7 85 a2 fe ff ff            	movzx eax, word ptr [ebp - 0x15e]
0x8049f59:   39 c2                           	cmp edx, eax
0x8049f5b:   0f 95 c0                        	setne al
0x8049f5e:   0f b6 d0                        	movzx edx, al
0x8049f61:   0f b7 85 a2 fe ff ff            	movzx eax, word ptr [ebp - 0x15e]
0x8049f68:   09 d0                           	or eax, edx
0x8049f6a:   29 c3                           	sub ebx, eax
0x8049f6c:   89 d8                           	mov eax, ebx
0x8049f6e:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x8049f71:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049f78:   89 85 c4 fe ff ff               	mov dword ptr [ebp - 0x13c], eax
0x8049f7e:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049f82:   0f 9e c0                        	setle al
0x8049f85:   0f b6 d0                        	movzx edx, al
0x8049f88:   0f bf 45 e2                     	movsx eax, word ptr [ebp - 0x1e]
0x8049f8c:   39 c2                           	cmp edx, eax
0x8049f8e:   0f 94 c0                        	sete al
0x8049f91:   0f b6 c0                        	movzx eax, al
0x8049f94:   89 85 c0 fe ff ff               	mov dword ptr [ebp - 0x140], eax
0x8049f9a:   eb 46                           	jmp 0x8049fe2 <func_1+0x78b>
0x8049f9c:   c6 85 d1 fe ff ff 00            	mov byte ptr [ebp - 0x12f], 0
0x8049fa3:   c7 85 cc fe ff ff 1b 43 25 15   	mov dword ptr [ebp - 0x134], 0x1525431b
0x8049fad:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049fb4:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x8049fb8:   90                              	nop 
0x8049fb9:   80 bd d1 fe ff ff 00            	cmp byte ptr [ebp - 0x12f], 0
0x8049fc0:   74 0e                           	je 0x8049fd0 <func_1+0x779>
0x8049fc2:   66 83 7d ca 00                  	cmp word ptr [ebp - 0x36], 0
0x8049fc7:   74 07                           	je 0x8049fd0 <func_1+0x779>
0x8049fc9:   b8 01 00 00 00                  	mov eax, 1
0x8049fce:   eb 05                           	jmp 0x8049fd5 <func_1+0x77e>
0x8049fd0:   b8 00 00 00 00                  	mov eax, 0
0x8049fd5:   c0 e8 07                        	shr al, 7
0x8049fd8:   0f b6 c0                        	movzx eax, al
0x8049fdb:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x8049fde:   83 6d c4 01                     	sub dword ptr [ebp - 0x3c], 1
0x8049fe2:   83 65 d4 01                     	and dword ptr [ebp - 0x2c], 1
0x8049fe6:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x8049fed:   e9 f2 0a 00 00                  	jmp 0x804aae4 <func_1+0x128d>
0x8049ff2:   66 c7 85 52 ff ff ff f7 ff      	mov word ptr [ebp - 0xae], 0xfff7
0x8049ffb:   c6 85 51 ff ff ff 05            	mov byte ptr [ebp - 0xaf], 5
0x804a002:   c7 45 94 43 9c 7e 58            	mov dword ptr [ebp - 0x6c], 0x587e9c43
0x804a009:   c7 85 4c ff ff ff 9c 4b 82 8c   	mov dword ptr [ebp - 0xb4], 0x8c824b9c
0x804a013:   66 c7 45 92 50 2e               	mov word ptr [ebp - 0x6e], 0x2e50
0x804a019:   c7 85 48 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xb8], 1
0x804a023:   c7 45 8c 38 b4 6e 60            	mov dword ptr [ebp - 0x74], 0x606eb438
0x804a02a:   c7 85 44 ff ff ff e3 a0 64 08   	mov dword ptr [ebp - 0xbc], 0x864a0e3
0x804a034:   c7 85 40 ff ff ff 04 00 00 00   	mov dword ptr [ebp - 0xc0], 4
0x804a03e:   c7 45 88 00 00 00 00            	mov dword ptr [ebp - 0x78], 0
0x804a045:   c7 85 3c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xc4], 0
0x804a04f:   66 c7 45 f2 f0 ff               	mov word ptr [ebp - 0xe], 0xfff0
0x804a055:   e9 8f 00 00 00                  	jmp 0x804a0e9 <func_1+0x892>
0x804a05a:   c7 85 e8 fe ff ff e8 b9 50 c6   	mov dword ptr [ebp - 0x118], 0xc650b9e8
0x804a064:   c7 85 e4 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x11c], 3
0x804a06e:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a074:   3b 85 e8 fe ff ff               	cmp eax, dword ptr [ebp - 0x118]
0x804a07a:   0f 97 c0                        	seta al
0x804a07d:   0f b6 c0                        	movzx eax, al
0x804a080:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804a083:   8b 85 e8 fe ff ff               	mov eax, dword ptr [ebp - 0x118]
0x804a089:   83 e0 fc                        	and eax, 0xfffffffc
0x804a08c:   89 c2                           	mov edx, eax
0x804a08e:   0f be 85 51 ff ff ff            	movsx eax, byte ptr [ebp - 0xaf]
0x804a095:   39 c2                           	cmp edx, eax
0x804a097:   0f 96 c0                        	setbe al
0x804a09a:   0f b6 d0                        	movzx edx, al
0x804a09d:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a0a0:   0f be c0                        	movsx eax, al
0x804a0a3:   0f af c2                        	imul eax, edx
0x804a0a6:   85 c0                           	test eax, eax
0x804a0a8:   75 07                           	jne 0x804a0b1 <func_1+0x85a>
0x804a0aa:   83 bd e8 fe ff ff 00            	cmp dword ptr [ebp - 0x118], 0
0x804a0b1:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a0b4:   3c 01                           	cmp al, 1
0x804a0b6:   74 10                           	je 0x804a0c8 <func_1+0x871>
0x804a0b8:   80 bd 51 ff ff ff 00            	cmp byte ptr [ebp - 0xaf], 0
0x804a0bf:   74 07                           	je 0x804a0c8 <func_1+0x871>
0x804a0c1:   b8 01 00 00 00                  	mov eax, 1
0x804a0c6:   eb 05                           	jmp 0x804a0cd <func_1+0x876>
0x804a0c8:   b8 00 00 00 00                  	mov eax, 0
0x804a0cd:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x804a0d0:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x804a0d7:   c7 45 c0 08 00 00 00            	mov dword ptr [ebp - 0x40], 8
0x804a0de:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a0e2:   83 e8 01                        	sub eax, 1
0x804a0e5:   66 89 45 f2                     	mov word ptr [ebp - 0xe], ax
0x804a0e9:   66 83 7d f2 ed                  	cmp word ptr [ebp - 0xe], -0x13
0x804a0ee:   0f 85 66 ff ff ff               	jne 0x804a05a <func_1+0x803>
0x804a0f4:   0f b6 95 77 ff ff ff            	movzx edx, byte ptr [ebp - 0x89]
0x804a0fb:   0f be 85 5f ff ff ff            	movsx eax, byte ptr [ebp - 0xa1]
0x804a102:   39 c2                           	cmp edx, eax
0x804a104:   0f 9d c0                        	setge al
0x804a107:   0f b6 d0                        	movzx edx, al
0x804a10a:   0f be 85 51 ff ff ff            	movsx eax, byte ptr [ebp - 0xaf]
0x804a111:   39 c2                           	cmp edx, eax
0x804a113:   0f 9e c0                        	setle al
0x804a116:   0f b6 d0                        	movzx edx, al
0x804a119:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a120:   0f be c0                        	movsx eax, al
0x804a123:   0f af c2                        	imul eax, edx
0x804a126:   85 c0                           	test eax, eax
0x804a128:   0f 84 34 08 00 00               	je 0x804a962 <func_1+0x110b>
0x804a12e:   c7 45 84 f8 ff ff ff            	mov dword ptr [ebp - 0x7c], 0xfffffff8
0x804a135:   c7 85 38 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffffd
0x804a13f:   c7 45 80 c4 b5 ba 7c            	mov dword ptr [ebp - 0x80], 0x7cbab5c4
0x804a146:   c7 85 34 ff ff ff b7 0d fc 64   	mov dword ptr [ebp - 0xcc], 0x64fc0db7
0x804a150:   66 c7 85 32 ff ff ff ac 06      	mov word ptr [ebp - 0xce], 0x6ac
0x804a159:   c6 85 31 ff ff ff f7            	mov byte ptr [ebp - 0xcf], 0xf7
0x804a160:   c6 85 30 ff ff ff ff            	mov byte ptr [ebp - 0xd0], 0xff
0x804a167:   0f b6 85 5f ff ff ff            	movzx eax, byte ptr [ebp - 0xa1]
0x804a16e:   0f b6 d0                        	movzx edx, al
0x804a171:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a175:   74 0d                           	je 0x804a184 <func_1+0x92d>
0x804a177:   83 7d 84 00                     	cmp dword ptr [ebp - 0x7c], 0
0x804a17b:   74 07                           	je 0x804a184 <func_1+0x92d>
0x804a17d:   b8 01 00 00 00                  	mov eax, 1
0x804a182:   eb 05                           	jmp 0x804a189 <func_1+0x932>
0x804a184:   b8 00 00 00 00                  	mov eax, 0
0x804a189:   0f bf d8                        	movsx ebx, ax
0x804a18c:   8b 45 9c                        	mov eax, dword ptr [ebp - 0x64]
0x804a18f:   98                              	cwde 
0x804a190:   89 c1                           	mov ecx, eax
0x804a192:   d3 fb                           	sar ebx, cl
0x804a194:   89 d8                           	mov eax, ebx
0x804a196:   89 c3                           	mov ebx, eax
0x804a198:   66 0f be 85 51 ff ff ff         	movsx ax, byte ptr [ebp - 0xaf]
0x804a1a0:   89 c1                           	mov ecx, eax
0x804a1a2:   89 d8                           	mov eax, ebx
0x804a1a4:   0f af c1                        	imul eax, ecx
0x804a1a7:   f7 d0                           	not eax
0x804a1a9:   0f b6 c0                        	movzx eax, al
0x804a1ac:   89 c1                           	mov ecx, eax
0x804a1ae:   d3 e2                           	shl edx, cl
0x804a1b0:   89 d0                           	mov eax, edx
0x804a1b2:   83 f8 ff                        	cmp eax, -1
0x804a1b5:   0f 95 c0                        	setne al
0x804a1b8:   0f b6 c0                        	movzx eax, al
0x804a1bb:   89 c2                           	mov edx, eax
0x804a1bd:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a1c4:   21 d0                           	and eax, edx
0x804a1c6:   0f b7 c0                        	movzx eax, ax
0x804a1c9:   ba fc ff 00 00                  	mov edx, 0xfffc
0x804a1ce:   89 c1                           	mov ecx, eax
0x804a1d0:   d3 e2                           	shl edx, cl
0x804a1d2:   89 d0                           	mov eax, edx
0x804a1d4:   0f bf d0                        	movsx edx, ax
0x804a1d7:   69 d2 d9 44 00 00               	imul edx, edx, 0x44d9
0x804a1dd:   c1 ea 10                        	shr edx, 0x10
0x804a1e0:   66 c1 fa 0d                     	sar dx, 0xd
0x804a1e4:   66 c1 f8 0f                     	sar ax, 0xf
0x804a1e8:   29 c2                           	sub edx, eax
0x804a1ea:   89 d0                           	mov eax, edx
0x804a1ec:   66 3d fa 00                     	cmp ax, 0xfa
0x804a1f0:   76 07                           	jbe 0x804a1f9 <func_1+0x9a2>
0x804a1f2:   b8 01 00 00 00                  	mov eax, 1
0x804a1f7:   eb 05                           	jmp 0x804a1fe <func_1+0x9a7>
0x804a1f9:   b8 00 00 00 00                  	mov eax, 0
0x804a1fe:   31 85 38 ff ff ff               	xor dword ptr [ebp - 0xc8], eax
0x804a204:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x804a20b:   0f 84 01 01 00 00               	je 0x804a312 <func_1+0xabb>
0x804a211:   c7 85 04 ff ff ff 09 68 d3 b7   	mov dword ptr [ebp - 0xfc], 0xb7d36809
0x804a21b:   c7 85 00 ff ff ff 31 d6 26 3b   	mov dword ptr [ebp - 0x100], 0x3b26d631
0x804a225:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x804a229:   39 85 04 ff ff ff               	cmp dword ptr [ebp - 0xfc], eax
0x804a22f:   0f 9d c0                        	setge al
0x804a232:   88 45 e6                        	mov byte ptr [ebp - 0x1a], al
0x804a235:   0f be 55 e6                     	movsx edx, byte ptr [ebp - 0x1a]
0x804a239:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a23f:   0f be c0                        	movsx eax, al
0x804a242:   0f af d0                        	imul edx, eax
0x804a245:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x804a24c:   39 c2                           	cmp edx, eax
0x804a24e:   0f 9d c0                        	setge al
0x804a251:   0f b6 c0                        	movzx eax, al
0x804a254:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a25a:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a260:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x804a263:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x804a266:   3b 85 04 ff ff ff               	cmp eax, dword ptr [ebp - 0xfc]
0x804a26c:   81 bd 38 ff ff ff 1a 63 a2 53   	cmp dword ptr [ebp - 0xc8], 0x53a2631a
0x804a276:   0f b6 85 77 ff ff ff            	movzx eax, byte ptr [ebp - 0x89]
0x804a27d:   c1 e0 03                        	shl eax, 3
0x804a280:   c1 e0 03                        	shl eax, 3
0x804a283:   66 89 45 e0                     	mov word ptr [ebp - 0x20], ax
0x804a287:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a28a:   c1 e8 1f                        	shr eax, 0x1f
0x804a28d:   0f b6 c0                        	movzx eax, al
0x804a290:   31 85 00 ff ff ff               	xor dword ptr [ebp - 0x100], eax
0x804a296:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x804a29c:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x804a29f:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a2a2:   0f bf d0                        	movsx edx, ax
0x804a2a5:   8b 85 04 ff ff ff               	mov eax, dword ptr [ebp - 0xfc]
0x804a2ab:   98                              	cwde 
0x804a2ac:   89 c1                           	mov ecx, eax
0x804a2ae:   d3 e2                           	shl edx, cl
0x804a2b0:   89 d0                           	mov eax, edx
0x804a2b2:   85 c0                           	test eax, eax
0x804a2b4:   75 07                           	jne 0x804a2bd <func_1+0xa66>
0x804a2b6:   66 83 7d e4 00                  	cmp word ptr [ebp - 0x1c], 0
0x804a2bb:   74 07                           	je 0x804a2c4 <func_1+0xa6d>
0x804a2bd:   b8 01 00 00 00                  	mov eax, 1
0x804a2c2:   eb 05                           	jmp 0x804a2c9 <func_1+0xa72>
0x804a2c4:   b8 00 00 00 00                  	mov eax, 0
0x804a2c9:   83 e0 03                        	and eax, 3
0x804a2cc:   83 c0 01                        	add eax, 1
0x804a2cf:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804a2d2:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a2d6:   74 07                           	je 0x804a2df <func_1+0xa88>
0x804a2d8:   b8 01 00 00 00                  	mov eax, 1
0x804a2dd:   eb 05                           	jmp 0x804a2e4 <func_1+0xa8d>
0x804a2df:   b8 00 00 00 00                  	mov eax, 0
0x804a2e4:   83 f8 67                        	cmp eax, 0x67
0x804a2e7:   0f 9f c0                        	setg al
0x804a2ea:   0f b6 d0                        	movzx edx, al
0x804a2ed:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a2f1:   39 c2                           	cmp edx, eax
0x804a2f3:   0f 9c c0                        	setl al
0x804a2f6:   89 c2                           	mov edx, eax
0x804a2f8:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x804a2fc:   31 d0                           	xor eax, edx
0x804a2fe:   0f be d0                        	movsx edx, al
0x804a301:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a304:   0f be c0                        	movsx eax, al
0x804a307:   0f af c2                        	imul eax, edx
0x804a30a:   09 45 c0                        	or dword ptr [ebp - 0x40], eax
0x804a30d:   e9 f0 04 00 00                  	jmp 0x804a802 <func_1+0xfab>
0x804a312:   c7 85 2c ff ff ff e9 3b fe 9a   	mov dword ptr [ebp - 0xd4], 0x9afe3be9
0x804a31c:   66 c7 85 2a ff ff ff 06 00      	mov word ptr [ebp - 0xd6], 6
0x804a325:   c6 85 7f ff ff ff ff            	mov byte ptr [ebp - 0x81], 0xff
0x804a32c:   83 7d a0 00                     	cmp dword ptr [ebp - 0x60], 0
0x804a330:   0f 84 6f 01 00 00               	je 0x804a4a5 <func_1+0xc4e>
0x804a336:   c6 85 27 ff ff ff 03            	mov byte ptr [ebp - 0xd9], 3
0x804a33d:   c7 85 78 ff ff ff 83 38 a1 e2   	mov dword ptr [ebp - 0x88], 0xe2a13883
0x804a347:   80 45 bb 01                     	add byte ptr [ebp - 0x45], 1
0x804a34b:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a351:   98                              	cwde 
0x804a352:   8b 55 84                        	mov edx, dword ptr [ebp - 0x7c]
0x804a355:   0f bf fa                        	movsx edi, dx
0x804a358:   99                              	cdq 
0x804a359:   f7 ff                           	idiv edi
0x804a35b:   89 c2                           	mov edx, eax
0x804a35d:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a361:   09 d0                           	or eax, edx
0x804a363:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x804a367:   c7 45 80 17 00 00 00            	mov dword ptr [ebp - 0x80], 0x17
0x804a36e:   e9 26 01 00 00                  	jmp 0x804a499 <func_1+0xc42>
0x804a373:   c7 85 20 ff ff ff b7 a4 ec 49   	mov dword ptr [ebp - 0xe0], 0x49eca4b7
0x804a37d:   0f b7 45 f2                     	movzx eax, word ptr [ebp - 0xe]
0x804a381:   0f be d0                        	movsx edx, al
0x804a384:   0f b7 85 2a ff ff ff            	movzx eax, word ptr [ebp - 0xd6]
0x804a38b:   0f be c0                        	movsx eax, al
0x804a38e:   01 d0                           	add eax, edx
0x804a390:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a393:   66 83 7d f2 00                  	cmp word ptr [ebp - 0xe], 0
0x804a398:   66 83 bd 2a ff ff ff 00         	cmp word ptr [ebp - 0xd6], 0
0x804a3a0:   74 08                           	je 0x804a3aa <func_1+0xb53>
0x804a3a2:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x804a3aa:   8b 45 a4                        	mov eax, dword ptr [ebp - 0x5c]
0x804a3ad:   0f b6 d0                        	movzx edx, al
0x804a3b0:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a3b4:   89 c1                           	mov ecx, eax
0x804a3b6:   d3 fa                           	sar edx, cl
0x804a3b8:   89 d0                           	mov eax, edx
0x804a3ba:   89 c1                           	mov ecx, eax
0x804a3bc:   8b 45 d8                        	mov eax, dword ptr [ebp - 0x28]
0x804a3bf:   89 c2                           	mov edx, eax
0x804a3c1:   0f b6 c1                        	movzx eax, cl
0x804a3c4:   f6 f2                           	div dl
0x804a3c6:   0f b6 c4                        	movzx eax, ah
0x804a3c9:   0f be d0                        	movsx edx, al
0x804a3cc:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a3d0:   0f be c0                        	movsx eax, al
0x804a3d3:   01 d0                           	add eax, edx
0x804a3d5:   3d fe 00 00 00                  	cmp eax, 0xfe
0x804a3da:   0f 97 c0                        	seta al
0x804a3dd:   0f b6 c0                        	movzx eax, al
0x804a3e0:   89 c2                           	mov edx, eax
0x804a3e2:   0f b6 85 7f ff ff ff            	movzx eax, byte ptr [ebp - 0x81]
0x804a3e9:   21 d0                           	and eax, edx
0x804a3eb:   88 85 7f ff ff ff               	mov byte ptr [ebp - 0x81], al
0x804a3f1:   83 b5 78 ff ff ff fd            	xor dword ptr [ebp - 0x88], 0xfffffffd
0x804a3f8:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x804a3ff:   0f 95 c0                        	setne al
0x804a402:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804a405:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x804a409:   83 c0 01                        	add eax, 1
0x804a40c:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x804a412:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x804a418:   0f b6 c0                        	movzx eax, al
0x804a41b:   2d f7 00 00 00                  	sub eax, 0xf7
0x804a420:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x804a426:   0f 9d c0                        	setge al
0x804a429:   0f b6 c0                        	movzx eax, al
0x804a42c:   f7 d0                           	not eax
0x804a42e:   89 85 78 ff ff ff               	mov dword ptr [ebp - 0x88], eax
0x804a434:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804a43a:   66 23 85 68 ff ff ff            	and ax, word ptr [ebp - 0x98]
0x804a441:   0f bf d0                        	movsx edx, ax
0x804a444:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a447:   98                              	cwde 
0x804a448:   0f af c2                        	imul eax, edx
0x804a44b:   f7 d8                           	neg eax
0x804a44d:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a450:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a453:   0f b6 c0                        	movzx eax, al
0x804a456:   83 e0 01                        	and eax, 1
0x804a459:   8b 55 a4                        	mov edx, dword ptr [ebp - 0x5c]
0x804a45c:   0f b6 f2                        	movzx esi, dl
0x804a45f:   99                              	cdq 
0x804a460:   f7 fe                           	idiv esi
0x804a462:   33 85 4c ff ff ff               	xor eax, dword ptr [ebp - 0xb4]
0x804a468:   3d 8b 00 00 00                  	cmp eax, 0x8b
0x804a46d:   74 04                           	je 0x804a473 <func_1+0xc1c>
0x804a46f:   83 7d d4 00                     	cmp dword ptr [ebp - 0x2c], 0
0x804a473:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a476:   83 f8 06                        	cmp eax, 6
0x804a479:   77 11                           	ja 0x804a48c <func_1+0xc35>
0x804a47b:   66 83 bd 32 ff ff ff 00         	cmp word ptr [ebp - 0xce], 0
0x804a483:   74 07                           	je 0x804a48c <func_1+0xc35>
0x804a485:   b8 01 00 00 00                  	mov eax, 1
0x804a48a:   eb 05                           	jmp 0x804a491 <func_1+0xc3a>
0x804a48c:   b8 00 00 00 00                  	mov eax, 0
0x804a491:   66 09 45 b6                     	or word ptr [ebp - 0x4a], ax
0x804a495:   83 6d 80 02                     	sub dword ptr [ebp - 0x80], 2
0x804a499:   83 7d 80 15                     	cmp dword ptr [ebp - 0x80], 0x15
0x804a49d:   0f 85 d0 fe ff ff               	jne 0x804a373 <func_1+0xb1c>
0x804a4a3:   eb 7c                           	jmp 0x804a521 <func_1+0xcca>
0x804a4a5:   66 c7 85 28 ff ff ff bd ef      	mov word ptr [ebp - 0xd8], 0xefbd
0x804a4ae:   66 c7 45 e4 00 00               	mov word ptr [ebp - 0x1c], 0
0x804a4b4:   eb 5a                           	jmp 0x804a510 <func_1+0xcb9>
0x804a4b6:   0f be 85 5f ff ff ff            	movsx eax, byte ptr [ebp - 0xa1]
0x804a4bd:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a4c0:   83 4d c0 08                     	or dword ptr [ebp - 0x40], 8
0x804a4c4:   0f b7 45 b6                     	movzx eax, word ptr [ebp - 0x4a]
0x804a4c8:   f7 d8                           	neg eax
0x804a4ca:   89 c2                           	mov edx, eax
0x804a4cc:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x804a4d0:   31 d0                           	xor eax, edx
0x804a4d2:   88 45 e6                        	mov byte ptr [ebp - 0x1a], al
0x804a4d5:   0f b6 45 e6                     	movzx eax, byte ptr [ebp - 0x1a]
0x804a4d9:   c0 f8 04                        	sar al, 4
0x804a4dc:   3c fa                           	cmp al, 0xfa
0x804a4de:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a4e4:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x804a4e7:   b8 0b 00 00 00                  	mov eax, 0xb
0x804a4ec:   89 c2                           	mov edx, eax
0x804a4ee:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a4f2:   09 d0                           	or eax, edx
0x804a4f4:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804a4f8:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a4fc:   66 89 85 28 ff ff ff            	mov word ptr [ebp - 0xd8], ax
0x804a503:   66 83 bd 28 ff ff ff 00         	cmp word ptr [ebp - 0xd8], 0
0x804a50b:   66 83 45 e4 01                  	add word ptr [ebp - 0x1c], 1
0x804a510:   66 83 7d e4 03                  	cmp word ptr [ebp - 0x1c], 3
0x804a515:   77 9f                           	ja 0x804a4b6 <func_1+0xc5f>
0x804a517:   8b 85 2c ff ff ff               	mov eax, dword ptr [ebp - 0xd4]
0x804a51d:   66 89 45 92                     	mov word ptr [ebp - 0x6e], ax
0x804a521:   66 83 7d 92 00                  	cmp word ptr [ebp - 0x6e], 0
0x804a526:   0f 84 0f 02 00 00               	je 0x804a73b <func_1+0xee4>
0x804a52c:   c7 85 18 ff ff ff c6 3d a3 89   	mov dword ptr [ebp - 0xe8], 0x89a33dc6
0x804a536:   0f bf 55 f2                     	movsx edx, word ptr [ebp - 0xe]
0x804a53a:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a53e:   66 83 bd 2a ff ff ff 00         	cmp word ptr [ebp - 0xd6], 0
0x804a546:   0f 95 c0                        	setne al
0x804a549:   0f b6 c0                        	movzx eax, al
0x804a54c:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x804a54f:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x804a552:   0f be c0                        	movsx eax, al
0x804a555:   c1 e0 05                        	shl eax, 5
0x804a558:   39 c1                           	cmp ecx, eax
0x804a55a:   0f 94 c0                        	sete al
0x804a55d:   89 c1                           	mov ecx, eax
0x804a55f:   0f b6 85 51 ff ff ff            	movzx eax, byte ptr [ebp - 0xaf]
0x804a566:   38 c1                           	cmp cl, al
0x804a568:   0f 94 c0                        	sete al
0x804a56b:   0f b6 c0                        	movzx eax, al
0x804a56e:   21 d0                           	and eax, edx
0x804a570:   85 c0                           	test eax, eax
0x804a572:   0f 84 6a 01 00 00               	je 0x804a6e2 <func_1+0xe8b>
0x804a578:   c7 85 10 ff ff ff 06 00 00 00   	mov dword ptr [ebp - 0xf0], 6
0x804a582:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a589:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804a58c:   c7 45 d4 ff ff ff ff            	mov dword ptr [ebp - 0x2c], 0xffffffff
0x804a593:   0f b7 45 92                     	movzx eax, word ptr [ebp - 0x6e]
0x804a597:   66 98                           	cbw 
0x804a599:   66 89 85 68 ff ff ff            	mov word ptr [ebp - 0x98], ax
0x804a5a0:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a5a7:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a5aa:   0f 97 c0                        	seta al
0x804a5ad:   0f b6 c0                        	movzx eax, al
0x804a5b0:   39 45 d8                        	cmp dword ptr [ebp - 0x28], eax
0x804a5b3:   0f 92 c0                        	setb al
0x804a5b6:   0f b6 d0                        	movzx edx, al
0x804a5b9:   0f b7 45 ca                     	movzx eax, word ptr [ebp - 0x36]
0x804a5bd:   39 c2                           	cmp edx, eax
0x804a5bf:   0f 9e c0                        	setle al
0x804a5c2:   88 85 65 ff ff ff               	mov byte ptr [ebp - 0x9b], al
0x804a5c8:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a5cc:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804a5d2:   0f b6 85 65 ff ff ff            	movzx eax, byte ptr [ebp - 0x9b]
0x804a5d9:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a5df:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a5e3:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a5e9:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a5f0:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a5f6:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a5fa:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a600:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a604:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a60a:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a60e:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804a614:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x804a61b:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a61f:   89 95 64 fe ff ff               	mov dword ptr [ebp - 0x19c], edx
0x804a625:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804a629:   0f b7 4d e0                     	movzx ecx, word ptr [ebp - 0x20]
0x804a62d:   89 8d 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], ecx
0x804a633:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a637:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a63b:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a641:   0f be 5d e6                     	movsx ebx, byte ptr [ebp - 0x1a]
0x804a645:   0f b6 75 e7                     	movzx esi, byte ptr [ebp - 0x19]
0x804a649:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a64f:   0f b6 75 f1                     	movzx esi, byte ptr [ebp - 0xf]
0x804a653:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a657:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a65d:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a663:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a666:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a669:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804a66f:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804a675:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804a67b:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804a681:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804a687:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804a68d:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804a690:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a693:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a696:   50                              	push eax
0x804a697:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804a69d:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804a6a0:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a6a3:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a6a6:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804a6a9:   52                              	push edx
0x804a6aa:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804a6b0:   51                              	push ecx
0x804a6b1:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804a6b7:   53                              	push ebx
0x804a6b8:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804a6be:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804a6c4:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a6ca:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a6cd:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a6d0:   56                              	push esi
0x804a6d1:   57                              	push edi
0x804a6d2:   e8 4f ef ff ff                  	call 0x8049626 <set_var>
0x804a6d7:   83 c4 7c                        	add esp, 0x7c
0x804a6da:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a6dd:   e9 5c 05 00 00                  	jmp 0x804ac3e <func_1+0x13e7>
0x804a6e2:   66 c7 85 16 ff ff ff e5 88      	mov word ptr [ebp - 0xea], 0x88e5
0x804a6eb:   80 bd 77 ff ff ff 00            	cmp byte ptr [ebp - 0x89], 0
0x804a6f2:   66 83 bd 16 ff ff ff 00         	cmp word ptr [ebp - 0xea], 0
0x804a6fa:   0f 95 c0                        	setne al
0x804a6fd:   89 c2                           	mov edx, eax
0x804a6ff:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a703:   21 d0                           	and eax, edx
0x804a705:   3c fe                           	cmp al, 0xfe
0x804a707:   0f 94 c0                        	sete al
0x804a70a:   0f b6 c0                        	movzx eax, al
0x804a70d:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a710:   c7 45 94 11 00 00 00            	mov dword ptr [ebp - 0x6c], 0x11
0x804a717:   eb 0d                           	jmp 0x804a726 <func_1+0xecf>
0x804a719:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804a71c:   88 85 31 ff ff ff               	mov byte ptr [ebp - 0xcf], al
0x804a722:   83 45 94 01                     	add dword ptr [ebp - 0x6c], 1
0x804a726:   83 7d 94 19                     	cmp dword ptr [ebp - 0x6c], 0x19
0x804a72a:   7e ed                           	jle 0x804a719 <func_1+0xec2>
0x804a72c:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a730:   0f 95 c0                        	setne al
0x804a733:   0f b6 c0                        	movzx eax, al
0x804a736:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804a739:   eb 64                           	jmp 0x804a79f <func_1+0xf48>
0x804a73b:   c7 85 1c ff ff ff bf 9d 20 8c   	mov dword ptr [ebp - 0xe4], 0x8c209dbf
0x804a745:   80 bd 5f ff ff ff 00            	cmp byte ptr [ebp - 0xa1], 0
0x804a74c:   74 11                           	je 0x804a75f <func_1+0xf08>
0x804a74e:   66 83 bd 2a ff ff ff 00         	cmp word ptr [ebp - 0xd6], 0
0x804a756:   74 07                           	je 0x804a75f <func_1+0xf08>
0x804a758:   b8 01 00 00 00                  	mov eax, 1
0x804a75d:   eb 05                           	jmp 0x804a764 <func_1+0xf0d>
0x804a75f:   b8 00 00 00 00                  	mov eax, 0
0x804a764:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a767:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a76b:   0f be 85 5f ff ff ff            	movsx eax, byte ptr [ebp - 0xa1]
0x804a772:   c1 f8 08                        	sar eax, 8
0x804a775:   83 c8 05                        	or eax, 5
0x804a778:   98                              	cwde 
0x804a779:   bb 03 00 00 00                  	mov ebx, 3
0x804a77e:   89 c1                           	mov ecx, eax
0x804a780:   d3 e3                           	shl ebx, cl
0x804a782:   89 d8                           	mov eax, ebx
0x804a784:   39 c2                           	cmp edx, eax
0x804a786:   0f 95 c0                        	setne al
0x804a789:   0f b6 d0                        	movzx edx, al
0x804a78c:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804a790:   31 d0                           	xor eax, edx
0x804a792:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a795:   0f b6 85 30 ff ff ff            	movzx eax, byte ptr [ebp - 0xd0]
0x804a79c:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a79f:   c7 45 94 00 00 00 00            	mov dword ptr [ebp - 0x6c], 0
0x804a7a6:   eb 51                           	jmp 0x804a7f9 <func_1+0xfa2>
0x804a7a8:   c7 85 0c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xf4], 0xffffffff
0x804a7b2:   c7 85 08 ff ff ff 5a 68 41 43   	mov dword ptr [ebp - 0xf8], 0x4341685a
0x804a7bc:   c7 45 ec 00 00 00 00            	mov dword ptr [ebp - 0x14], 0
0x804a7c3:   eb 20                           	jmp 0x804a7e5 <func_1+0xf8e>
0x804a7c5:   83 bd 0c ff ff ff 00            	cmp dword ptr [ebp - 0xf4], 0
0x804a7cc:   0f 95 c0                        	setne al
0x804a7cf:   0f b6 c0                        	movzx eax, al
0x804a7d2:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a7d8:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a7de:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a7e1:   83 45 ec 08                     	add dword ptr [ebp - 0x14], 8
0x804a7e5:   83 7d ec 30                     	cmp dword ptr [ebp - 0x14], 0x30
0x804a7e9:   75 da                           	jne 0x804a7c5 <func_1+0xf6e>
0x804a7eb:   83 6d b0 01                     	sub dword ptr [ebp - 0x50], 1
0x804a7ef:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a7f3:   75 0c                           	jne 0x804a801 <func_1+0xfaa>
0x804a7f5:   83 6d 94 02                     	sub dword ptr [ebp - 0x6c], 2
0x804a7f9:   83 7d 94 ef                     	cmp dword ptr [ebp - 0x6c], -0x11
0x804a7fd:   7d a9                           	jge 0x804a7a8 <func_1+0xf51>
0x804a7ff:   eb 01                           	jmp 0x804a802 <func_1+0xfab>
0x804a801:   90                              	nop 
0x804a802:   8b 85 48 ff ff ff               	mov eax, dword ptr [ebp - 0xb8]
0x804a808:   83 c8 f8                        	or eax, 0xfffffff8
0x804a80b:   89 c2                           	mov edx, eax
0x804a80d:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a814:   39 c2                           	cmp edx, eax
0x804a816:   74 6b                           	je 0x804a883 <func_1+0x102c>
0x804a818:   c6 85 ef fe ff ff 99            	mov byte ptr [ebp - 0x111], 0x99
0x804a81f:   83 45 ac 01                     	add dword ptr [ebp - 0x54], 1
0x804a823:   0f bf 55 f2                     	movsx edx, word ptr [ebp - 0xe]
0x804a827:   8b 45 84                        	mov eax, dword ptr [ebp - 0x7c]
0x804a82a:   98                              	cwde 
0x804a82b:   0f af c2                        	imul eax, edx
0x804a82e:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804a831:   66 0f be 85 ef fe ff ff         	movsx ax, byte ptr [ebp - 0x111]
0x804a839:   66 39 85 32 ff ff ff            	cmp word ptr [ebp - 0xce], ax
0x804a840:   0f 95 c0                        	setne al
0x804a843:   0f b6 c0                        	movzx eax, al
0x804a846:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a849:   0f 95 c0                        	setne al
0x804a84c:   0f b6 d0                        	movzx edx, al
0x804a84f:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804a853:   39 c2                           	cmp edx, eax
0x804a855:   0f 9f c0                        	setg al
0x804a858:   0f b6 c0                        	movzx eax, al
0x804a85b:   39 45 a4                        	cmp dword ptr [ebp - 0x5c], eax
0x804a85e:   0f 94 c0                        	sete al
0x804a861:   0f b6 d0                        	movzx edx, al
0x804a864:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a868:   39 c2                           	cmp edx, eax
0x804a86a:   0f 9f c0                        	setg al
0x804a86d:   0f b6 c0                        	movzx eax, al
0x804a870:   99                              	cdq 
0x804a871:   f7 7d a0                        	idiv dword ptr [ebp - 0x60]
0x804a874:   89 c2                           	mov edx, eax
0x804a876:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a879:   29 d0                           	sub eax, edx
0x804a87b:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804a87e:   e9 c7 00 00 00                  	jmp 0x804a94a <func_1+0x10f3>
0x804a883:   c6 85 ff fe ff ff 07            	mov byte ptr [ebp - 0x101], 7
0x804a88a:   c7 85 f8 fe ff ff 32 fb dd 95   	mov dword ptr [ebp - 0x108], 0x95ddfb32
0x804a894:   c7 85 f4 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x10c], 7
0x804a89e:   c7 85 f0 fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x110], 0xfffffffd
0x804a8a8:   0f b6 85 30 ff ff ff            	movzx eax, byte ptr [ebp - 0xd0]
0x804a8af:   ba fe ff ff ff                  	mov edx, 0xfffffffe
0x804a8b4:   89 c1                           	mov ecx, eax
0x804a8b6:   d3 e2                           	shl edx, cl
0x804a8b8:   89 d0                           	mov eax, edx
0x804a8ba:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a8c0:   66 83 7d e0 00                  	cmp word ptr [ebp - 0x20], 0
0x804a8c5:   74 6d                           	je 0x804a934 <func_1+0x10dd>
0x804a8c7:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a8ca:   0f be d8                        	movsx ebx, al
0x804a8cd:   0f b7 85 52 ff ff ff            	movzx eax, word ptr [ebp - 0xae]
0x804a8d4:   ba 01 00 00 00                  	mov edx, 1
0x804a8d9:   29 c2                           	sub edx, eax
0x804a8db:   89 d0                           	mov eax, edx
0x804a8dd:   0f be c0                        	movsx eax, al
0x804a8e0:   8b 95 40 ff ff ff               	mov edx, dword ptr [ebp - 0xc0]
0x804a8e6:   0f be fa                        	movsx edi, dl
0x804a8e9:   99                              	cdq 
0x804a8ea:   f7 ff                           	idiv edi
0x804a8ec:   85 c0                           	test eax, eax
0x804a8ee:   74 0e                           	je 0x804a8fe <func_1+0x10a7>
0x804a8f0:   66 83 7d b8 00                  	cmp word ptr [ebp - 0x48], 0
0x804a8f5:   74 07                           	je 0x804a8fe <func_1+0x10a7>
0x804a8f7:   b8 01 00 00 00                  	mov eax, 1
0x804a8fc:   eb 05                           	jmp 0x804a903 <func_1+0x10ac>
0x804a8fe:   b8 00 00 00 00                  	mov eax, 0
0x804a903:   0f be c0                        	movsx eax, al
0x804a906:   89 c1                           	mov ecx, eax
0x804a908:   d3 fb                           	sar ebx, cl
0x804a90a:   89 d8                           	mov eax, ebx
0x804a90c:   33 85 58 ff ff ff               	xor eax, dword ptr [ebp - 0xa8]
0x804a912:   89 c2                           	mov edx, eax
0x804a914:   0f b6 45 df                     	movzx eax, byte ptr [ebp - 0x21]
0x804a918:   39 c2                           	cmp edx, eax
0x804a91a:   0f 93 c0                        	setae al
0x804a91d:   0f b6 d0                        	movzx edx, al
0x804a920:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x804a924:   0f b6 c0                        	movzx eax, al
0x804a927:   01 d0                           	add eax, edx
0x804a929:   85 c0                           	test eax, eax
0x804a92b:   74 07                           	je 0x804a934 <func_1+0x10dd>
0x804a92d:   b8 01 00 00 00                  	mov eax, 1
0x804a932:   eb 05                           	jmp 0x804a939 <func_1+0x10e2>
0x804a934:   b8 00 00 00 00                  	mov eax, 0
0x804a939:   09 45 9c                        	or dword ptr [ebp - 0x64], eax
0x804a93c:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a940:   83 e8 01                        	sub eax, 1
0x804a943:   66 89 45 aa                     	mov word ptr [ebp - 0x56], ax
0x804a947:   f7 55 88                        	not dword ptr [ebp - 0x78]
0x804a94a:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a94d:   31 45 d4                        	xor dword ptr [ebp - 0x2c], eax
0x804a950:   83 bd 3c ff ff ff 00            	cmp dword ptr [ebp - 0xc4], 0
0x804a957:   0f 85 26 01 00 00               	jne 0x804aa83 <func_1+0x122c>
0x804a95d:   e9 1b 01 00 00                  	jmp 0x804aa7d <func_1+0x1226>
0x804a962:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804a966:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804a96c:   0f b6 85 65 ff ff ff            	movzx eax, byte ptr [ebp - 0x9b]
0x804a973:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a979:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804a97d:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804a983:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804a98a:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804a990:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804a994:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804a99a:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804a99e:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804a9a4:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804a9a8:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804a9ae:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x804a9b5:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804a9b9:   89 95 64 fe ff ff               	mov dword ptr [ebp - 0x19c], edx
0x804a9bf:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804a9c3:   0f b7 4d e0                     	movzx ecx, word ptr [ebp - 0x20]
0x804a9c7:   89 8d 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], ecx
0x804a9cd:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804a9d1:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804a9d5:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804a9db:   0f be 5d e6                     	movsx ebx, byte ptr [ebp - 0x1a]
0x804a9df:   0f b6 75 e7                     	movzx esi, byte ptr [ebp - 0x19]
0x804a9e3:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804a9e9:   0f b6 75 f1                     	movzx esi, byte ptr [ebp - 0xf]
0x804a9ed:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804a9f1:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804a9f7:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804a9fd:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804aa00:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804aa03:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804aa09:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804aa0f:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804aa15:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804aa1b:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804aa21:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804aa27:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804aa2a:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aa2d:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aa30:   50                              	push eax
0x804aa31:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804aa37:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804aa3a:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aa3d:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aa40:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804aa43:   52                              	push edx
0x804aa44:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804aa4a:   51                              	push ecx
0x804aa4b:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804aa51:   53                              	push ebx
0x804aa52:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804aa58:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804aa5e:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804aa64:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aa67:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aa6a:   56                              	push esi
0x804aa6b:   57                              	push edi
0x804aa6c:   e8 b5 eb ff ff                  	call 0x8049626 <set_var>
0x804aa71:   83 c4 7c                        	add esp, 0x7c
0x804aa74:   0f b6 45 f1                     	movzx eax, byte ptr [ebp - 0xf]
0x804aa78:   e9 c1 01 00 00                  	jmp 0x804ac3e <func_1+0x13e7>
0x804aa7d:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804aa81:   74 07                           	je 0x804aa8a <func_1+0x1233>
0x804aa83:   b8 01 00 00 00                  	mov eax, 1
0x804aa88:   eb 05                           	jmp 0x804aa8f <func_1+0x1238>
0x804aa8a:   b8 00 00 00 00                  	mov eax, 0
0x804aa8f:   39 85 4c ff ff ff               	cmp dword ptr [ebp - 0xb4], eax
0x804aa95:   0f 93 c0                        	setae al
0x804aa98:   0f b6 c0                        	movzx eax, al
0x804aa9b:   f7 d0                           	not eax
0x804aa9d:   0b 45 ac                        	or eax, dword ptr [ebp - 0x54]
0x804aaa0:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x804aaa3:   81 bd 60 ff ff ff 9b 68 21 9e   	cmp dword ptr [ebp - 0xa0], 0x9e21689b
0x804aaad:   0f 9d c0                        	setge al
0x804aab0:   0f b6 c0                        	movzx eax, al
0x804aab3:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x804aab6:   0f be 8d 56 ff ff ff            	movsx ecx, byte ptr [ebp - 0xaa]
0x804aabd:   b8 d7 a9 0d 94                  	mov eax, 0x940da9d7
0x804aac2:   ba 00 00 00 00                  	mov edx, 0
0x804aac7:   f7 f1                           	div ecx
0x804aac9:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x804aacc:   31 d0                           	xor eax, edx
0x804aace:   3d fe ff 00 00                  	cmp eax, 0xfffe
0x804aad3:   77 07                           	ja 0x804aadc <func_1+0x1285>
0x804aad5:   b8 ff ff 00 00                  	mov eax, 0xffff
0x804aada:   eb 05                           	jmp 0x804aae1 <func_1+0x128a>
0x804aadc:   b8 00 00 00 00                  	mov eax, 0
0x804aae1:   89 45 d4                        	mov dword ptr [ebp - 0x2c], eax
0x804aae4:   8b 45 cc                        	mov eax, dword ptr [ebp - 0x34]
0x804aae7:   0f bf d0                        	movsx edx, ax
0x804aaea:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804aaed:   98                              	cwde 
0x804aaee:   89 c1                           	mov ecx, eax
0x804aaf0:   d3 fa                           	sar edx, cl
0x804aaf2:   89 d0                           	mov eax, edx
0x804aaf4:   89 c2                           	mov edx, eax
0x804aaf6:   0f b7 85 54 ff ff ff            	movzx eax, word ptr [ebp - 0xac]
0x804aafd:   31 d0                           	xor eax, edx
0x804aaff:   66 89 85 54 ff ff ff            	mov word ptr [ebp - 0xac], ax
0x804ab06:   66 0f be 85 5f ff ff ff         	movsx ax, byte ptr [ebp - 0xa1]
0x804ab0e:   0f b7 d0                        	movzx edx, ax
0x804ab11:   66 0f be 85 5f ff ff ff         	movsx ax, byte ptr [ebp - 0xa1]
0x804ab19:   0f b7 c0                        	movzx eax, ax
0x804ab1c:   0f af c2                        	imul eax, edx
0x804ab1f:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804ab25:   0f b7 45 aa                     	movzx eax, word ptr [ebp - 0x56]
0x804ab29:   89 85 80 fe ff ff               	mov dword ptr [ebp - 0x180], eax
0x804ab2f:   0f b6 85 65 ff ff ff            	movzx eax, byte ptr [ebp - 0x9b]
0x804ab36:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804ab3c:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x804ab40:   89 85 78 fe ff ff               	mov dword ptr [ebp - 0x188], eax
0x804ab46:   0f b7 85 66 ff ff ff            	movzx eax, word ptr [ebp - 0x9a]
0x804ab4d:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x804ab53:   0f bf 45 b6                     	movsx eax, word ptr [ebp - 0x4a]
0x804ab57:   89 85 70 fe ff ff               	mov dword ptr [ebp - 0x190], eax
0x804ab5d:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804ab61:   89 85 6c fe ff ff               	mov dword ptr [ebp - 0x194], eax
0x804ab67:   0f b6 45 bb                     	movzx eax, byte ptr [ebp - 0x45]
0x804ab6b:   89 85 68 fe ff ff               	mov dword ptr [ebp - 0x198], eax
0x804ab71:   0f bf 85 68 ff ff ff            	movsx eax, word ptr [ebp - 0x98]
0x804ab78:   0f b7 55 ca                     	movzx edx, word ptr [ebp - 0x36]
0x804ab7c:   89 95 64 fe ff ff               	mov dword ptr [ebp - 0x19c], edx
0x804ab82:   0f b6 55 df                     	movzx edx, byte ptr [ebp - 0x21]
0x804ab86:   0f b7 4d e0                     	movzx ecx, word ptr [ebp - 0x20]
0x804ab8a:   89 8d 60 fe ff ff               	mov dword ptr [ebp - 0x1a0], ecx
0x804ab90:   0f bf 4d e2                     	movsx ecx, word ptr [ebp - 0x1e]
0x804ab94:   0f b7 5d e4                     	movzx ebx, word ptr [ebp - 0x1c]
0x804ab98:   89 9d 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], ebx
0x804ab9e:   0f be 5d e6                     	movsx ebx, byte ptr [ebp - 0x1a]
0x804aba2:   0f b6 75 e7                     	movzx esi, byte ptr [ebp - 0x19]
0x804aba6:   89 b5 58 fe ff ff               	mov dword ptr [ebp - 0x1a8], esi
0x804abac:   0f b6 75 f1                     	movzx esi, byte ptr [ebp - 0xf]
0x804abb0:   0f bf 7d f2                     	movsx edi, word ptr [ebp - 0xe]
0x804abb4:   ff b5 80 fe ff ff               	push dword ptr [ebp - 0x180]
0x804abba:   ff b5 60 ff ff ff               	push dword ptr [ebp - 0xa0]
0x804abc0:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804abc3:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804abc6:   ff b5 7c fe ff ff               	push dword ptr [ebp - 0x184]
0x804abcc:   ff b5 78 fe ff ff               	push dword ptr [ebp - 0x188]
0x804abd2:   ff b5 74 fe ff ff               	push dword ptr [ebp - 0x18c]
0x804abd8:   ff b5 70 fe ff ff               	push dword ptr [ebp - 0x190]
0x804abde:   ff b5 6c fe ff ff               	push dword ptr [ebp - 0x194]
0x804abe4:   ff b5 68 fe ff ff               	push dword ptr [ebp - 0x198]
0x804abea:   ff 75 bc                        	push dword ptr [ebp - 0x44]
0x804abed:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804abf0:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804abf3:   50                              	push eax
0x804abf4:   ff b5 64 fe ff ff               	push dword ptr [ebp - 0x19c]
0x804abfa:   ff 75 cc                        	push dword ptr [ebp - 0x34]
0x804abfd:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804ac00:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804ac03:   ff 75 d8                        	push dword ptr [ebp - 0x28]
0x804ac06:   52                              	push edx
0x804ac07:   ff b5 60 fe ff ff               	push dword ptr [ebp - 0x1a0]
0x804ac0d:   51                              	push ecx
0x804ac0e:   ff b5 5c fe ff ff               	push dword ptr [ebp - 0x1a4]
0x804ac14:   53                              	push ebx
0x804ac15:   ff b5 6c ff ff ff               	push dword ptr [ebp - 0x94]
0x804ac1b:   ff b5 58 fe ff ff               	push dword ptr [ebp - 0x1a8]
0x804ac21:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804ac27:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804ac2a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804ac2d:   56                              	push esi
0x804ac2e:   57                              	push edi
0x804ac2f:   e8 f2 e9 ff ff                  	call 0x8049626 <set_var>
0x804ac34:   83 c4 7c                        	add esp, 0x7c
0x804ac37:   0f be 85 56 ff ff ff            	movsx eax, byte ptr [ebp - 0xaa]
0x804ac3e:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804ac41:   5b                              	pop ebx
0x804ac42:   5e                              	pop esi
0x804ac43:   5f                              	pop edi
0x804ac44:   5d                              	pop ebp
0x804ac45:   c3                              	ret 
; function: main at 0x804ac46 -- 0x804b0b4
0x804ac46:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804ac4a:   83 e4 f0                        	and esp, 0xfffffff0
0x804ac4d:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804ac50:   55                              	push ebp
0x804ac51:   89 e5                           	mov ebp, esp
0x804ac53:   53                              	push ebx
0x804ac54:   51                              	push ecx
0x804ac55:   83 ec 10                        	sub esp, 0x10
0x804ac58:   e8 33 d7 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804ac5d:   81 c3 a3 33 00 00               	add ebx, 0x33a3
0x804ac63:   89 c8                           	mov eax, ecx
0x804ac65:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804ac6c:   83 38 02                        	cmp dword ptr [eax], 2
0x804ac6f:   75 26                           	jne 0x804ac97 <main+0x51>
0x804ac71:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804ac74:   83 c0 04                        	add eax, 4
0x804ac77:   8b 00                           	mov eax, dword ptr [eax]
0x804ac79:   83 ec 08                        	sub esp, 8
0x804ac7c:   8d 93 9c d1 ff ff               	lea edx, [ebx - 0x2e64]
0x804ac82:   52                              	push edx
0x804ac83:   50                              	push eax
0x804ac84:   e8 77 d6 ff ff                  	call 0x8048300 <strcmp>
0x804ac89:   83 c4 10                        	add esp, 0x10
0x804ac8c:   85 c0                           	test eax, eax
0x804ac8e:   75 07                           	jne 0x804ac97 <main+0x51>
0x804ac90:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804ac97:   e8 ba d7 ff ff                  	call 0x8048456 <platform_main_begin>
0x804ac9c:   e8 ca e7 ff ff                  	call 0x804946b <crc32_gentab>
0x804aca1:   e8 b1 eb ff ff                  	call 0x8049857 <func_1>
0x804aca6:   0f b7 83 24 00 00 00            	movzx eax, word ptr [ebx + 0x24]
0x804acad:   98                              	cwde 
0x804acae:   83 ec 04                        	sub esp, 4
0x804acb1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acb4:   8d 93 9e d1 ff ff               	lea edx, [ebx - 0x2e62]
0x804acba:   52                              	push edx
0x804acbb:   50                              	push eax
0x804acbc:   e8 b6 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acc1:   83 c4 10                        	add esp, 0x10
0x804acc4:   0f b6 83 26 00 00 00            	movzx eax, byte ptr [ebx + 0x26]
0x804accb:   0f b6 c0                        	movzx eax, al
0x804acce:   83 ec 04                        	sub esp, 4
0x804acd1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acd4:   8d 93 a3 d1 ff ff               	lea edx, [ebx - 0x2e5d]
0x804acda:   52                              	push edx
0x804acdb:   50                              	push eax
0x804acdc:   e8 96 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ace1:   83 c4 10                        	add esp, 0x10
0x804ace4:   8b 83 28 00 00 00               	mov eax, dword ptr [ebx + 0x28]
0x804acea:   83 ec 04                        	sub esp, 4
0x804aced:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804acf0:   8d 93 a8 d1 ff ff               	lea edx, [ebx - 0x2e58]
0x804acf6:   52                              	push edx
0x804acf7:   50                              	push eax
0x804acf8:   e8 7a e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804acfd:   83 c4 10                        	add esp, 0x10
0x804ad00:   b8 fd ff ff ff                  	mov eax, 0xfffffffd
0x804ad05:   0f b6 c0                        	movzx eax, al
0x804ad08:   83 ec 04                        	sub esp, 4
0x804ad0b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad0e:   8d 93 ad d1 ff ff               	lea edx, [ebx - 0x2e53]
0x804ad14:   52                              	push edx
0x804ad15:   50                              	push eax
0x804ad16:   e8 5c e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad1b:   83 c4 10                        	add esp, 0x10
0x804ad1e:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804ad24:   89 c2                           	mov edx, eax
0x804ad26:   83 ec 04                        	sub esp, 4
0x804ad29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad2c:   8d 83 b2 d1 ff ff               	lea eax, [ebx - 0x2e4e]
0x804ad32:   50                              	push eax
0x804ad33:   52                              	push edx
0x804ad34:   e8 3e e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad39:   83 c4 10                        	add esp, 0x10
0x804ad3c:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804ad42:   83 ec 04                        	sub esp, 4
0x804ad45:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad48:   8d 93 b7 d1 ff ff               	lea edx, [ebx - 0x2e49]
0x804ad4e:   52                              	push edx
0x804ad4f:   50                              	push eax
0x804ad50:   e8 22 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad55:   83 c4 10                        	add esp, 0x10
0x804ad58:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804ad5f:   0f b6 c0                        	movzx eax, al
0x804ad62:   83 ec 04                        	sub esp, 4
0x804ad65:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad68:   8d 93 bc d1 ff ff               	lea edx, [ebx - 0x2e44]
0x804ad6e:   52                              	push edx
0x804ad6f:   50                              	push eax
0x804ad70:   e8 02 e8 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad75:   83 c4 10                        	add esp, 0x10
0x804ad78:   8b 83 38 00 00 00               	mov eax, dword ptr [ebx + 0x38]
0x804ad7e:   83 ec 04                        	sub esp, 4
0x804ad81:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ad84:   8d 93 c1 d1 ff ff               	lea edx, [ebx - 0x2e3f]
0x804ad8a:   52                              	push edx
0x804ad8b:   50                              	push eax
0x804ad8c:   e8 e6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ad91:   83 c4 10                        	add esp, 0x10
0x804ad94:   0f b6 83 3c 00 00 00            	movzx eax, byte ptr [ebx + 0x3c]
0x804ad9b:   0f be c0                        	movsx eax, al
0x804ad9e:   83 ec 04                        	sub esp, 4
0x804ada1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ada4:   8d 93 c6 d1 ff ff               	lea edx, [ebx - 0x2e3a]
0x804adaa:   52                              	push edx
0x804adab:   50                              	push eax
0x804adac:   e8 c6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adb1:   83 c4 10                        	add esp, 0x10
0x804adb4:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804adbb:   0f b7 c0                        	movzx eax, ax
0x804adbe:   83 ec 04                        	sub esp, 4
0x804adc1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804adc4:   8d 93 cb d1 ff ff               	lea edx, [ebx - 0x2e35]
0x804adca:   52                              	push edx
0x804adcb:   50                              	push eax
0x804adcc:   e8 a6 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804add1:   83 c4 10                        	add esp, 0x10
0x804add4:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804addb:   98                              	cwde 
0x804addc:   83 ec 04                        	sub esp, 4
0x804addf:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ade2:   8d 93 d0 d1 ff ff               	lea edx, [ebx - 0x2e30]
0x804ade8:   52                              	push edx
0x804ade9:   50                              	push eax
0x804adea:   e8 88 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804adef:   83 c4 10                        	add esp, 0x10
0x804adf2:   0f b7 83 42 00 00 00            	movzx eax, word ptr [ebx + 0x42]
0x804adf9:   0f b7 c0                        	movzx eax, ax
0x804adfc:   83 ec 04                        	sub esp, 4
0x804adff:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae02:   8d 93 d5 d1 ff ff               	lea edx, [ebx - 0x2e2b]
0x804ae08:   52                              	push edx
0x804ae09:   50                              	push eax
0x804ae0a:   e8 68 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae0f:   83 c4 10                        	add esp, 0x10
0x804ae12:   0f b6 83 44 00 00 00            	movzx eax, byte ptr [ebx + 0x44]
0x804ae19:   0f b6 c0                        	movzx eax, al
0x804ae1c:   83 ec 04                        	sub esp, 4
0x804ae1f:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae22:   8d 93 da d1 ff ff               	lea edx, [ebx - 0x2e26]
0x804ae28:   52                              	push edx
0x804ae29:   50                              	push eax
0x804ae2a:   e8 48 e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae2f:   83 c4 10                        	add esp, 0x10
0x804ae32:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804ae38:   83 ec 04                        	sub esp, 4
0x804ae3b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae3e:   8d 93 df d1 ff ff               	lea edx, [ebx - 0x2e21]
0x804ae44:   52                              	push edx
0x804ae45:   50                              	push eax
0x804ae46:   e8 2c e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae4b:   83 c4 10                        	add esp, 0x10
0x804ae4e:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804ae54:   89 c2                           	mov edx, eax
0x804ae56:   83 ec 04                        	sub esp, 4
0x804ae59:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae5c:   8d 83 e5 d1 ff ff               	lea eax, [ebx - 0x2e1b]
0x804ae62:   50                              	push eax
0x804ae63:   52                              	push edx
0x804ae64:   e8 0e e7 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae69:   83 c4 10                        	add esp, 0x10
0x804ae6c:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804ae72:   83 ec 04                        	sub esp, 4
0x804ae75:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae78:   8d 93 eb d1 ff ff               	lea edx, [ebx - 0x2e15]
0x804ae7e:   52                              	push edx
0x804ae7f:   50                              	push eax
0x804ae80:   e8 f2 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804ae85:   83 c4 10                        	add esp, 0x10
0x804ae88:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804ae8e:   89 c2                           	mov edx, eax
0x804ae90:   83 ec 04                        	sub esp, 4
0x804ae93:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804ae96:   8d 83 f1 d1 ff ff               	lea eax, [ebx - 0x2e0f]
0x804ae9c:   50                              	push eax
0x804ae9d:   52                              	push edx
0x804ae9e:   e8 d4 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aea3:   83 c4 10                        	add esp, 0x10
0x804aea6:   b8 c1 46 00 00                  	mov eax, 0x46c1
0x804aeab:   0f b7 c0                        	movzx eax, ax
0x804aeae:   83 ec 04                        	sub esp, 4
0x804aeb1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aeb4:   8d 93 f7 d1 ff ff               	lea edx, [ebx - 0x2e09]
0x804aeba:   52                              	push edx
0x804aebb:   50                              	push eax
0x804aebc:   e8 b6 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aec1:   83 c4 10                        	add esp, 0x10
0x804aec4:   0f b7 83 58 00 00 00            	movzx eax, word ptr [ebx + 0x58]
0x804aecb:   0f b7 c0                        	movzx eax, ax
0x804aece:   83 ec 04                        	sub esp, 4
0x804aed1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aed4:   8d 93 fd d1 ff ff               	lea edx, [ebx - 0x2e03]
0x804aeda:   52                              	push edx
0x804aedb:   50                              	push eax
0x804aedc:   e8 96 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aee1:   83 c4 10                        	add esp, 0x10
0x804aee4:   0f b7 83 a4 04 00 00            	movzx eax, word ptr [ebx + 0x4a4]
0x804aeeb:   98                              	cwde 
0x804aeec:   83 ec 04                        	sub esp, 4
0x804aeef:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804aef2:   8d 93 03 d2 ff ff               	lea edx, [ebx - 0x2dfd]
0x804aef8:   52                              	push edx
0x804aef9:   50                              	push eax
0x804aefa:   e8 78 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804aeff:   83 c4 10                        	add esp, 0x10
0x804af02:   8b 83 5c 00 00 00               	mov eax, dword ptr [ebx + 0x5c]
0x804af08:   83 ec 04                        	sub esp, 4
0x804af0b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af0e:   8d 93 09 d2 ff ff               	lea edx, [ebx - 0x2df7]
0x804af14:   52                              	push edx
0x804af15:   50                              	push eax
0x804af16:   e8 5c e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af1b:   83 c4 10                        	add esp, 0x10
0x804af1e:   8b 83 a8 04 00 00               	mov eax, dword ptr [ebx + 0x4a8]
0x804af24:   89 c2                           	mov edx, eax
0x804af26:   83 ec 04                        	sub esp, 4
0x804af29:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af2c:   8d 83 0f d2 ff ff               	lea eax, [ebx - 0x2df1]
0x804af32:   50                              	push eax
0x804af33:   52                              	push edx
0x804af34:   e8 3e e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af39:   83 c4 10                        	add esp, 0x10
0x804af3c:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804af42:   89 c2                           	mov edx, eax
0x804af44:   83 ec 04                        	sub esp, 4
0x804af47:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af4a:   8d 83 15 d2 ff ff               	lea eax, [ebx - 0x2deb]
0x804af50:   50                              	push eax
0x804af51:   52                              	push edx
0x804af52:   e8 20 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af57:   83 c4 10                        	add esp, 0x10
0x804af5a:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804af61:   0f b6 c0                        	movzx eax, al
0x804af64:   83 ec 04                        	sub esp, 4
0x804af67:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af6a:   8d 93 1b d2 ff ff               	lea edx, [ebx - 0x2de5]
0x804af70:   52                              	push edx
0x804af71:   50                              	push eax
0x804af72:   e8 00 e6 ff ff                  	call 0x8049577 <transparent_crc>
0x804af77:   83 c4 10                        	add esp, 0x10
0x804af7a:   0f b7 83 66 00 00 00            	movzx eax, word ptr [ebx + 0x66]
0x804af81:   0f b7 c0                        	movzx eax, ax
0x804af84:   83 ec 04                        	sub esp, 4
0x804af87:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804af8a:   8d 93 21 d2 ff ff               	lea edx, [ebx - 0x2ddf]
0x804af90:   52                              	push edx
0x804af91:   50                              	push eax
0x804af92:   e8 e0 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804af97:   83 c4 10                        	add esp, 0x10
0x804af9a:   0f b7 83 68 00 00 00            	movzx eax, word ptr [ebx + 0x68]
0x804afa1:   98                              	cwde 
0x804afa2:   83 ec 04                        	sub esp, 4
0x804afa5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afa8:   8d 93 27 d2 ff ff               	lea edx, [ebx - 0x2dd9]
0x804afae:   52                              	push edx
0x804afaf:   50                              	push eax
0x804afb0:   e8 c2 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afb5:   83 c4 10                        	add esp, 0x10
0x804afb8:   0f b7 83 6a 00 00 00            	movzx eax, word ptr [ebx + 0x6a]
0x804afbf:   0f b7 c0                        	movzx eax, ax
0x804afc2:   83 ec 04                        	sub esp, 4
0x804afc5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afc8:   8d 93 2d d2 ff ff               	lea edx, [ebx - 0x2dd3]
0x804afce:   52                              	push edx
0x804afcf:   50                              	push eax
0x804afd0:   e8 a2 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804afd5:   83 c4 10                        	add esp, 0x10
0x804afd8:   0f b7 83 6c 00 00 00            	movzx eax, word ptr [ebx + 0x6c]
0x804afdf:   0f b7 c0                        	movzx eax, ax
0x804afe2:   83 ec 04                        	sub esp, 4
0x804afe5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804afe8:   8d 93 33 d2 ff ff               	lea edx, [ebx - 0x2dcd]
0x804afee:   52                              	push edx
0x804afef:   50                              	push eax
0x804aff0:   e8 82 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804aff5:   83 c4 10                        	add esp, 0x10
0x804aff8:   0f b6 83 6e 00 00 00            	movzx eax, byte ptr [ebx + 0x6e]
0x804afff:   0f b6 c0                        	movzx eax, al
0x804b002:   83 ec 04                        	sub esp, 4
0x804b005:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b008:   8d 93 39 d2 ff ff               	lea edx, [ebx - 0x2dc7]
0x804b00e:   52                              	push edx
0x804b00f:   50                              	push eax
0x804b010:   e8 62 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b015:   83 c4 10                        	add esp, 0x10
0x804b018:   8b 83 70 00 00 00               	mov eax, dword ptr [ebx + 0x70]
0x804b01e:   83 ec 04                        	sub esp, 4
0x804b021:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b024:   8d 93 3f d2 ff ff               	lea edx, [ebx - 0x2dc1]
0x804b02a:   52                              	push edx
0x804b02b:   50                              	push eax
0x804b02c:   e8 46 e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b031:   83 c4 10                        	add esp, 0x10
0x804b034:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b03a:   83 ec 04                        	sub esp, 4
0x804b03d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b040:   8d 93 45 d2 ff ff               	lea edx, [ebx - 0x2dbb]
0x804b046:   52                              	push edx
0x804b047:   50                              	push eax
0x804b048:   e8 2a e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b04d:   83 c4 10                        	add esp, 0x10
0x804b050:   8b 83 78 00 00 00               	mov eax, dword ptr [ebx + 0x78]
0x804b056:   89 c2                           	mov edx, eax
0x804b058:   83 ec 04                        	sub esp, 4
0x804b05b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b05e:   8d 83 4b d2 ff ff               	lea eax, [ebx - 0x2db5]
0x804b064:   50                              	push eax
0x804b065:   52                              	push edx
0x804b066:   e8 0c e5 ff ff                  	call 0x8049577 <transparent_crc>
0x804b06b:   83 c4 10                        	add esp, 0x10
0x804b06e:   0f b7 83 7c 00 00 00            	movzx eax, word ptr [ebx + 0x7c]
0x804b075:   0f b7 c0                        	movzx eax, ax
0x804b078:   83 ec 04                        	sub esp, 4
0x804b07b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b07e:   8d 93 51 d2 ff ff               	lea edx, [ebx - 0x2daf]
0x804b084:   52                              	push edx
0x804b085:   50                              	push eax
0x804b086:   e8 ec e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b08b:   83 c4 10                        	add esp, 0x10
0x804b08e:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b094:   f7 d0                           	not eax
0x804b096:   83 ec 08                        	sub esp, 8
0x804b099:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b09c:   50                              	push eax
0x804b09d:   e8 c4 d3 ff ff                  	call 0x8048466 <platform_main_end>
0x804b0a2:   83 c4 10                        	add esp, 0x10
0x804b0a5:   b8 00 00 00 00                  	mov eax, 0
0x804b0aa:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b0ad:   59                              	pop ecx
0x804b0ae:   5b                              	pop ebx
0x804b0af:   5d                              	pop ebp
0x804b0b0:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b0b3:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b0b4 -- 0x804b0b8
0x804b0b4:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b0b7:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b0b8 -- 0x804b0bc
0x804b0b8:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b0bb:   c3                              	ret 
; data inside code section at 0x804b0bc -- 0x804b0c0
0x804b0bc:   66 90 66 90                                        |f.f.            |
; function: __libc_csu_init at 0x804b0c0 -- 0x804b11d
0x804b0c0:   55                              	push ebp
0x804b0c1:   57                              	push edi
0x804b0c2:   56                              	push esi
0x804b0c3:   53                              	push ebx
0x804b0c4:   e8 c7 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b0c9:   81 c3 37 2f 00 00               	add ebx, 0x2f37
0x804b0cf:   83 ec 0c                        	sub esp, 0xc
0x804b0d2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b0d6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b0dc:   e8 eb d1 ff ff                  	call 0x80482cc <_init>
0x804b0e1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b0e7:   29 c6                           	sub esi, eax
0x804b0e9:   c1 fe 02                        	sar esi, 2
0x804b0ec:   85 f6                           	test esi, esi
0x804b0ee:   74 25                           	je 0x804b115 <__libc_csu_init+0x55>
0x804b0f0:   31 ff                           	xor edi, edi
0x804b0f2:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b0f8:   83 ec 04                        	sub esp, 4
0x804b0fb:   55                              	push ebp
0x804b0fc:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b100:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b104:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b10b:   83 c7 01                        	add edi, 1
0x804b10e:   83 c4 10                        	add esp, 0x10
0x804b111:   39 fe                           	cmp esi, edi
0x804b113:   75 e3                           	jne 0x804b0f8 <__libc_csu_init+0x38>
0x804b115:   83 c4 0c                        	add esp, 0xc
0x804b118:   5b                              	pop ebx
0x804b119:   5e                              	pop esi
0x804b11a:   5f                              	pop edi
0x804b11b:   5d                              	pop ebp
0x804b11c:   c3                              	ret 
; data inside code section at 0x804b11d -- 0x804b120
0x804b11d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b120 -- 0x804b122
0x804b120:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b124 -- 0x804b138
0x804b124:   53                              	push ebx
0x804b125:   83 ec 08                        	sub esp, 8
0x804b128:   e8 63 d2 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b12d:   81 c3 d3 2e 00 00               	add ebx, 0x2ed3
0x804b133:   83 c4 08                        	add esp, 8
0x804b136:   5b                              	pop ebx
0x804b137:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 3c b1 04 08  04 00 00 00 11 00 10 00   |....<...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b138:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b148:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b158:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b168:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b178:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b188:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b198:   fd 00 c1 46 31 00 67 5f  31 30 00 67 5f 31 31 00   |...F1.g_10.g_11.|
0x804b1a8:   67 5f 33 30 00 67 5f 33  37 00 67 5f 33 38 00 67   |g_30.g_37.g_38.g|
0x804b1b8:   5f 35 33 00 67 5f 35 36  00 67 5f 37 34 00 67 5f   |_53.g_56.g_74.g_|
0x804b1c8:   38 30 00 67 5f 38 31 00  67 5f 38 39 00 67 5f 39   |80.g_81.g_89.g_9|
0x804b1d8:   36 00 67 5f 39 37 00 67  5f 31 30 38 00 67 5f 31   |6.g_97.g_108.g_1|
0x804b1e8:   32 31 00 67 5f 31 33 30  00 67 5f 31 34 33 00 67   |21.g_130.g_143.g|
0x804b1f8:   5f 31 35 38 00 67 5f 31  35 39 00 67 5f 32 34 37   |_158.g_159.g_247|
0x804b208:   00 67 5f 32 34 39 00 67  5f 32 38 34 00 67 5f 33   |.g_249.g_284.g_3|
0x804b218:   34 32 00 67 5f 33 35 34  00 67 5f 33 36 38 00 67   |42.g_354.g_368.g|
0x804b228:   5f 33 39 38 00 67 5f 34  31 30 00 67 5f 34 31 31   |_398.g_410.g_411|
0x804b238:   00 67 5f 34 33 31 00 67  5f 34 36 36 00 67 5f 34   |.g_431.g_466.g_4|
0x804b248:   38 35 00 67 5f 35 31 39  00 67 5f 35 32 31 00 00   |85.g_519.g_521..|
0x804b258:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804b268:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804b278:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b288:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b298:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b2a8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b2b8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b2c0:   01 1b 03 3b b8 02 00 00  56 00 00 00 30 d0 ff ff   |...;....V...0...|
0x804b2d0:   e8 02 00 00 70 d0 ff ff  0c 03 00 00 c0 d0 ff ff   |....p...........|
0x804b2e0:   d4 02 00 00 96 d1 ff ff  20 03 00 00 a6 d1 ff ff   |........ .......|
0x804b2f0:   40 03 00 00 d4 d1 ff ff  64 03 00 00 f2 d1 ff ff   |@.......d.......|
0x804b300:   84 03 00 00 1a d2 ff ff  a4 03 00 00 44 d2 ff ff   |............D...|
0x804b310:   c4 03 00 00 6d d2 ff ff  e4 03 00 00 b0 d2 ff ff   |....m...........|
0x804b320:   04 04 00 00 f1 d2 ff ff  24 04 00 00 49 d3 ff ff   |........$...I...|
0x804b330:   48 04 00 00 9b d3 ff ff  6c 04 00 00 d8 d3 ff ff   |H.......l.......|
0x804b340:   8c 04 00 00 0f d4 ff ff  ac 04 00 00 2e d4 ff ff   |................|
0x804b350:   cc 04 00 00 58 d4 ff ff  ec 04 00 00 84 d4 ff ff   |....X...........|
0x804b360:   0c 05 00 00 af d4 ff ff  2c 05 00 00 f8 d4 ff ff   |........,.......|
0x804b370:   4c 05 00 00 3f d5 ff ff  6c 05 00 00 99 d5 ff ff   |L...?...l.......|
0x804b380:   90 05 00 00 ed d5 ff ff  b4 05 00 00 2c d6 ff ff   |............,...|
0x804b390:   d4 05 00 00 65 d6 ff ff  f4 05 00 00 87 d6 ff ff   |....e...........|
0x804b3a0:   14 06 00 00 d5 d6 ff ff  34 06 00 00 11 d7 ff ff   |........4.......|
0x804b3b0:   54 06 00 00 9a d7 ff ff  74 06 00 00 cc d7 ff ff   |T.......t.......|
0x804b3c0:   94 06 00 00 fc d7 ff ff  b4 06 00 00 41 d8 ff ff   |............A...|
0x804b3d0:   d4 06 00 00 80 d8 ff ff  f4 06 00 00 b2 d8 ff ff   |................|
0x804b3e0:   14 07 00 00 de d8 ff ff  34 07 00 00 fc d8 ff ff   |........4.......|
0x804b3f0:   54 07 00 00 24 d9 ff ff  74 07 00 00 49 d9 ff ff   |T...$...t...I...|
0x804b400:   94 07 00 00 6e d9 ff ff  b4 07 00 00 a5 d9 ff ff   |....n...........|
0x804b410:   d4 07 00 00 d9 d9 ff ff  f4 07 00 00 2b da ff ff   |............+...|
0x804b420:   18 08 00 00 77 da ff ff  3c 08 00 00 ae da ff ff   |....w...<.......|
0x804b430:   5c 08 00 00 df da ff ff  7c 08 00 00 fe da ff ff   |\.......|.......|
0x804b440:   9c 08 00 00 28 db ff ff  bc 08 00 00 50 db ff ff   |....(.......P...|
0x804b450:   dc 08 00 00 79 db ff ff  fc 08 00 00 b5 db ff ff   |....y...........|
0x804b460:   1c 09 00 00 ef db ff ff  3c 09 00 00 42 dc ff ff   |........<...B...|
0x804b470:   60 09 00 00 8f dc ff ff  84 09 00 00 c7 dc ff ff   |`...............|
0x804b480:   a4 09 00 00 f9 dc ff ff  c4 09 00 00 0d dd ff ff   |................|
0x804b490:   e4 09 00 00 24 dd ff ff  04 0a 00 00 39 dd ff ff   |....$.......9...|
0x804b4a0:   24 0a 00 00 4f dd ff ff  44 0a 00 00 76 dd ff ff   |$...O...D...v...|
0x804b4b0:   64 0a 00 00 9b dd ff ff  84 0a 00 00 da dd ff ff   |d...............|
0x804b4c0:   a4 0a 00 00 13 de ff ff  c4 0a 00 00 3f de ff ff   |............?...|
0x804b4d0:   e4 0a 00 00 65 de ff ff  04 0b 00 00 a7 de ff ff   |....e...........|
0x804b4e0:   24 0b 00 00 e9 de ff ff  44 0b 00 00 2b df ff ff   |$.......D...+...|
0x804b4f0:   64 0b 00 00 a0 df ff ff  84 0b 00 00 fd df ff ff   |d...............|
0x804b500:   a4 0b 00 00 5a e0 ff ff  c4 0b 00 00 b7 e0 ff ff   |....Z...........|
0x804b510:   e4 0b 00 00 47 e1 ff ff  04 0c 00 00 ab e1 ff ff   |....G...........|
0x804b520:   24 0c 00 00 1b e2 ff ff  44 0c 00 00 62 e2 ff ff   |$.......D...b...|
0x804b530:   68 0c 00 00 b7 e2 ff ff  88 0c 00 00 fe e2 ff ff   |h...............|
0x804b540:   ac 0c 00 00 66 e3 ff ff  d0 0c 00 00 97 e5 ff ff   |....f...........|
0x804b550:   00 0d 00 00 86 f9 ff ff  30 0d 00 00 f4 fd ff ff   |........0.......|
0x804b560:   68 0d 00 00 f8 fd ff ff  7c 0d 00 00 00 fe ff ff   |h.......|.......|
0x804b570:   90 0d 00 00 60 fe ff ff  dc 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804b57c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b58c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b59c:   e4 cd ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b5ac:   30 00 00 00 40 cd ff ff  40 00 00 00 00 0e 08 46   |0...@...@......F|
0x804b5bc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b5cc:   10 00 00 00 54 00 00 00  5c cd ff ff 08 00 00 00   |....T...\.......|
0x804b5dc:   00 00 00 00 1c 00 00 00  68 00 00 00 6e ce ff ff   |........h...n...|
0x804b5ec:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804b5fc:   04 04 00 00 20 00 00 00  88 00 00 00 5e ce ff ff   |.... .......^...|
0x804b60c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804b61c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804b62c:   68 ce ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |h........A....B.|
0x804b63c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804b64c:   66 ce ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |f...(....A....B.|
0x804b65c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804b66c:   6e ce ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |n...*....A....B.|
0x804b67c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804b68c:   78 ce ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |x...)....A....B.|
0x804b69c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804b6ac:   81 ce ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804b6bc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804b6cc:   a4 ce ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804b6dc:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804b6ec:   c5 ce ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804b6fc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804b70c:   90 01 00 00 f9 ce ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804b71c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804b72c:   1c 00 00 00 b4 01 00 00  27 cf ff ff 3d 00 00 00   |........'...=...|
0x804b73c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804b74c:   1c 00 00 00 d4 01 00 00  44 cf ff ff 37 00 00 00   |........D...7...|
0x804b75c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804b76c:   1c 00 00 00 f4 01 00 00  5b cf ff ff 1f 00 00 00   |........[.......|
0x804b77c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804b78c:   1c 00 00 00 14 02 00 00  5a cf ff ff 2a 00 00 00   |........Z...*...|
0x804b79c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804b7ac:   1c 00 00 00 34 02 00 00  64 cf ff ff 2c 00 00 00   |....4...d...,...|
0x804b7bc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804b7cc:   1c 00 00 00 54 02 00 00  70 cf ff ff 2b 00 00 00   |....T...p...+...|
0x804b7dc:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804b7ec:   1c 00 00 00 74 02 00 00  7b cf ff ff 49 00 00 00   |....t...{...I...|
0x804b7fc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804b80c:   1c 00 00 00 94 02 00 00  a4 cf ff ff 47 00 00 00   |............G...|
0x804b81c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804b82c:   20 00 00 00 b4 02 00 00  cb cf ff ff 5a 00 00 00   | ...........Z...|
0x804b83c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804b84c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 01 d0 ff ff   |.... ...........|
0x804b85c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804b86c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804b87c:   31 d0 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |1...?....A....B.|
0x804b88c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804b89c:   50 d0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |P...9....A....B.|
0x804b8ac:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804b8bc:   69 d0 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |i..."....A....B.|
0x804b8cc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804b8dc:   6b d0 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |k...N....A....B.|
0x804b8ec:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804b8fc:   99 d0 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804b90c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804b91c:   b5 d0 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b92c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804b93c:   1e d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b94c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804b95c:   30 d1 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |0...0....A....B.|
0x804b96c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804b97c:   40 d1 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |@...E....A....B.|
0x804b98c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804b99c:   65 d1 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |e...?....A....B.|
0x804b9ac:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804b9bc:   84 d1 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804b9cc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804b9dc:   96 d1 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b9ec:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804b9fc:   a2 d1 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ba0c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ba1c:   a0 d1 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804ba2c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ba3c:   a8 d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba4c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ba5c:   ad d1 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ba6c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ba7c:   b2 d1 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804ba8c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804ba9c:   c9 d1 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804baac:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804babc:   dd d1 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bacc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804badc:   60 05 00 00 0b d2 ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804baec:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bafc:   1c 00 00 00 84 05 00 00  33 d2 ff ff 37 00 00 00   |........3...7...|
0x804bb0c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bb1c:   1c 00 00 00 a4 05 00 00  4a d2 ff ff 31 00 00 00   |........J...1...|
0x804bb2c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bb3c:   1c 00 00 00 c4 05 00 00  5b d2 ff ff 1f 00 00 00   |........[.......|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb5c:   1c 00 00 00 e4 05 00 00  5a d2 ff ff 2a 00 00 00   |........Z...*...|
0x804bb6c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bb7c:   1c 00 00 00 04 06 00 00  64 d2 ff ff 28 00 00 00   |........d...(...|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bb9c:   1c 00 00 00 24 06 00 00  6c d2 ff ff 29 00 00 00   |....$...l...)...|
0x804bbac:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bbbc:   1c 00 00 00 44 06 00 00  75 d2 ff ff 3c 00 00 00   |....D...u...<...|
0x804bbcc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bbdc:   1c 00 00 00 64 06 00 00  91 d2 ff ff 3a 00 00 00   |....d.......:...|
0x804bbec:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804bbfc:   20 00 00 00 84 06 00 00  ab d2 ff ff 53 00 00 00   | ...........S...|
0x804bc0c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804bc1c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 da d2 ff ff   |.... ...........|
0x804bc2c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804bc3c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804bc4c:   03 d3 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804bc5c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804bc6c:   1b d3 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bc7c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804bc8c:   2d d3 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |-........A....B.|
0x804bc9c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804bcac:   21 d3 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |!........A....B.|
0x804bcbc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804bccc:   18 d3 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcdc:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804bcec:   0d d3 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bcfc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804bd0c:   03 d3 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804bd1c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804bd2c:   0a d3 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804bd3c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804bd4c:   0f d3 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804bd5c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804bd6c:   2e d3 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804bd7c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804bd8c:   47 d3 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |G...,....A....B.|
0x804bd9c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804bdac:   53 d3 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |S...&....A....B.|
0x804bdbc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804bdcc:   59 d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |Y...B....A....B.|
0x804bddc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804bdec:   7b d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |{...B....A....B.|
0x804bdfc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804be0c:   9d d3 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804be1c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804be2c:   bf d3 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804be3c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804be4c:   14 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be5c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804be6c:   51 d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |Q...]....A....B.|
0x804be7c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804be8c:   8e d4 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804be9c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804beac:   cb d4 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bebc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804becc:   3b d5 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |;...d....A....B.|
0x804bedc:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804beec:   7f d5 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804befc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804bf0c:   cf d5 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804bf1c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804bf2c:   b0 09 00 00 f2 d5 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804bf3c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804bf4c:   d0 09 00 00 27 d6 ff ff  47 00 00 00 00 41 0e 08   |....'...G....A..|
0x804bf5c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804bf6c:   20 00 00 00 f4 09 00 00  4a d6 ff ff 68 00 00 00   | .......J...h...|
0x804bf7c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804bf8c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 8e d6 ff ff   |....,...........|
0x804bf9c:   31 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |1....A....B..F..|
0x804bfac:   86 04 83 05 03 24 02 c3  41 c6 41 c7 41 c5 0c 04   |.....$..A.A.A...|
0x804bfbc:   04 00 00 00 2c 00 00 00  48 0a 00 00 8f d8 ff ff   |....,...H.......|
0x804bfcc:   ef 13 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804bfdc:   86 04 83 05 03 df 13 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804bfec:   04 00 00 00 34 00 00 00  78 0a 00 00 4e ec ff ff   |....4...x...N...|
0x804bffc:   6e 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |n....D...G...u.D|
0x804c00c:   0f 03 75 78 06 10 03 02  75 7c 03 59 04 c1 0c 01   |..ux....u|.Y....|
0x804c01c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c02c:   b0 0a 00 00 84 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c03c:   10 00 00 00 c4 0a 00 00  74 f0 ff ff 04 00 00 00   |........t.......|
0x804c04c:   00 00 00 00 48 00 00 00  d8 0a 00 00 68 f0 ff ff   |....H.......h...|
0x804c05c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c06c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c07c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c08c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c09c:   10 00 00 00 24 0b 00 00  7c f0 ff ff 02 00 00 00   |....$...|.......|
0x804c0ac:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 24 b1 04 08  19 00 00 00 0c df 04 08   |....$...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff ff ff f7 00   |................|
0x804e028:   f7 ff ff ff 6b d8 bd 79  ee 0a 6e 04 c5 00 00 00   |....k..y..n.....|
0x804e038:   01 00 00 00 22 00 f6 ff  4f 3c 82 78 8a 00 00 00   |...."...O<.x....|
0x804e048:   91 bf 2f a6 04 00 00 00  03 00 00 00 fd ff ff ff   |../.............|
0x804e058:   20 44 00 00 5b 56 06 7b  7f d9 db 03 b3 00 fd ff   | D..[V.{........|
0x804e068:   c7 59 ff ff 9f cb 1c 00  01 00 00 00 01 00 00 00   |.Y..............|
0x804e078:   70 b8 22 14 db fa ??                               |p."...?         |
