;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 08:18:11
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 4d 00 00               	add ebx, 0x4d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 d0 04 08 ff 25  08 d0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c d0 04 08               	jmp dword ptr [0x804d00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 d0 04 08               	jmp dword ptr [0x804d010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 d0 04 08               	jmp dword ptr [0x804d014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc cf 04 08               	jmp dword ptr [0x804cffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 4c 00 00               	add ebx, 0x4cb0
0x8048356:   8d 83 b0 d4 ff ff               	lea eax, [ebx - 0x2b50]
0x804835c:   50                              	push eax
0x804835d:   8d 83 50 d4 ff ff               	lea eax, [ebx - 0x2bb0]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 b6 a1 04 08               	mov eax, 0x804a1b6
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 54 d0 04 08                  	mov eax, 0x804d054
0x80483a5:   3d 54 d0 04 08                  	cmp eax, 0x804d054
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 54 d0 04 08                  	push 0x804d054
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 54 d0 04 08                  	mov eax, 0x804d054
0x80483e5:   2d 54 d0 04 08                  	sub eax, 0x804d054
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 54 d0 04 08                  	push 0x804d054
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 d0 04 08 00            	cmp byte ptr [0x804d060], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 d0 04 08 01            	mov byte ptr [0x804d060], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 e8 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 4b 00 00                  	add eax, 0x4ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 d4 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 4b 00 00                  	add eax, 0x4b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 d0 d4 ff ff               	lea edx, [eax - 0x2b30]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 a7 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 4b 00 00                  	add eax, 0x4b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 89 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 4b 00 00                  	add eax, 0x4b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 61 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 4b 00 00                  	add eax, 0x4b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 37 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 4a 00 00                  	add eax, 0x4af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 0e 1f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 4a 00 00                  	add eax, 0x4ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 cb 1e 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 4a 00 00                  	add eax, 0x4a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 89 1e 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 4a 00 00                  	add eax, 0x4a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 31 1e 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 49 00 00                  	add eax, 0x49eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 e0 1d 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 49 00 00                  	add eax, 0x499a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 a3 1d 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 49 00 00                  	add eax, 0x495d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 6c 1d 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 49 00 00                  	add eax, 0x4926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 4d 1d 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 49 00 00                  	add eax, 0x4907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 23 1d 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 48 00 00                  	add eax, 0x48dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 f7 1c 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 48 00 00                  	add eax, 0x48b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 cc 1c 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 48 00 00                  	add eax, 0x4886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 83 1c 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 48 00 00                  	add eax, 0x483d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 3b 1c 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 47 00 00                  	add eax, 0x47f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 e1 1b 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 47 00 00                  	add eax, 0x479b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 8e 1b 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 47 00 00                  	add eax, 0x4748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 4f 1b 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 47 00 00                  	add eax, 0x4709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 19 1b 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 46 00 00                  	add eax, 0x46d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 f7 1a 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 46 00 00                  	add eax, 0x46b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 a9 1a 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 46 00 00                  	add eax, 0x4663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 6d 1a 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 46 00 00                  	add eax, 0x4627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 e4 19 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 45 00 00                  	add eax, 0x459e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 b2 19 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 45 00 00                  	add eax, 0x456c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 82 19 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 45 00 00                  	add eax, 0x453c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 3d 19 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 44 00 00                  	add eax, 0x44f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 fe 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 44 00 00                  	add eax, 0x44b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 cc 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 44 00 00                  	add eax, 0x4486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 9d 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 44 00 00                  	add eax, 0x4457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 7f 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 44 00 00                  	add eax, 0x4439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 57 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 44 00 00                  	add eax, 0x4411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 32 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 43 00 00                  	add eax, 0x43ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 0d 18 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 43 00 00                  	add eax, 0x43c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 d6 17 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 43 00 00                  	add eax, 0x4390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 a1 17 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 43 00 00                  	add eax, 0x435b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 4f 17 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 43 00 00                  	add eax, 0x4309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 04 17 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 42 00 00                  	add eax, 0x42be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 cd 16 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 42 00 00                  	add eax, 0x4287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 9c 16 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 42 00 00                  	add eax, 0x4256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 7d 16 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 42 00 00                  	add eax, 0x4237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 53 16 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 42 00 00                  	add eax, 0x420d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 2b 16 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 41 00 00                  	add eax, 0x41e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 02 16 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 41 00 00                  	add eax, 0x41bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 c6 15 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 41 00 00                  	add eax, 0x4180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 8b 15 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 41 00 00                  	add eax, 0x4145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 38 15 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 40 00 00                  	add eax, 0x40f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 ec 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 40 00 00                  	add eax, 0x40a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 b4 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 40 00 00                  	add eax, 0x406e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 85 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 40 00 00                  	add eax, 0x403f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 71 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 40 00 00                  	add eax, 0x402b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 5a 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 40 00 00                  	add eax, 0x4014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 45 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 3f 00 00                  	add eax, 0x3fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 2f 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 3f 00 00                  	add eax, 0x3fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 08 14 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 3f 00 00                  	add eax, 0x3fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 e3 13 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 3f 00 00                  	add eax, 0x3f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 a4 13 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 3f 00 00                  	add eax, 0x3f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 6b 13 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 3f 00 00                  	add eax, 0x3f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 3f 13 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 3e 00 00                  	add eax, 0x3ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 19 13 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 3e 00 00                  	add eax, 0x3ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 88 d5 ff ff               	fld dword ptr [eax - 0x2a78]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 88 d5 ff ff               	fld dword ptr [eax - 0x2a78]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 8c d5 ff ff               	fld dword ptr [eax - 0x2a74]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 d7 12 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 3e 00 00                  	add eax, 0x3e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 88 d5 ff ff               	fld dword ptr [eax - 0x2a78]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 88 d5 ff ff               	fld dword ptr [eax - 0x2a78]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 8c d5 ff ff               	fld dword ptr [eax - 0x2a74]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 95 12 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 3e 00 00                  	add eax, 0x3e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 90 d5 ff ff               	fld dword ptr [eax - 0x2a70]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 94 d5 ff ff               	fld dword ptr [eax - 0x2a6c]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 98 d5 ff ff               	fld dword ptr [eax - 0x2a68]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 53 12 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 3e 00 00                  	add eax, 0x3e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 9c d5 ff ff               	fld dword ptr [eax - 0x2a64]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 a0 d5 ff ff               	fld dword ptr [eax - 0x2a60]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 a4 d5 ff ff               	fld dword ptr [eax - 0x2a5c]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 db 11 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 3d 00 00                  	add eax, 0x3d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 a8 d5 ff ff               	fld qword ptr [eax - 0x2a58]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 a8 d5 ff ff               	fld qword ptr [eax - 0x2a58]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 b0 d5 ff ff               	fld qword ptr [eax - 0x2a50]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 7e 11 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 3d 00 00                  	add eax, 0x3d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 a8 d5 ff ff               	fld qword ptr [eax - 0x2a58]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 a8 d5 ff ff               	fld qword ptr [eax - 0x2a58]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 b0 d5 ff ff               	fld qword ptr [eax - 0x2a50]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 21 11 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 3c 00 00                  	add eax, 0x3cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 b8 d5 ff ff               	fld qword ptr [eax - 0x2a48]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 c0 d5 ff ff               	fld qword ptr [eax - 0x2a40]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 c8 d5 ff ff               	fld qword ptr [eax - 0x2a38]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 c4 10 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 3c 00 00                  	add eax, 0x3c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 d0 d5 ff ff               	fld qword ptr [eax - 0x2a30]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 d8 d5 ff ff               	fld qword ptr [eax - 0x2a28]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 e0 d5 ff ff               	fld qword ptr [eax - 0x2a20]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 34 10 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 3b 00 00                  	add eax, 0x3bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 e8 d5 ff ff               	fld dword ptr [eax - 0x2a18]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 ec d5 ff ff               	fld dword ptr [eax - 0x2a14]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 d0 0f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 3b 00 00                  	add eax, 0x3b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00            	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 5f 0f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 3b 00 00                  	add eax, 0x3b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 1c 0f 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 3a 00 00                  	add eax, 0x3ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 3a 00 00               	add ebx, 0x3a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 e0 d4 ff ff               	lea eax, [ebx - 0x2b20]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 3a 00 00               	add ebx, 0x3a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 04 d5 ff ff               	lea eax, [ebx - 0x2afc]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804974c
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 34                        	sub esp, 0x34
0x804962f:   e8 12 0e 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 39 00 00                  	add eax, 0x39cc
0x8049639:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x804963c:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x804963f:   8b 75 20                        	mov esi, dword ptr [ebp + 0x20]
0x8049642:   8b 5d 24                        	mov ebx, dword ptr [ebp + 0x24]
0x8049645:   89 5d cc                        	mov dword ptr [ebp - 0x34], ebx
0x8049648:   8b 7d 28                        	mov edi, dword ptr [ebp + 0x28]
0x804964b:   89 7d c8                        	mov dword ptr [ebp - 0x38], edi
0x804964e:   8b 5d 2c                        	mov ebx, dword ptr [ebp + 0x2c]
0x8049651:   89 5d c4                        	mov dword ptr [ebp - 0x3c], ebx
0x8049654:   8b 7d 30                        	mov edi, dword ptr [ebp + 0x30]
0x8049657:   89 7d c0                        	mov dword ptr [ebp - 0x40], edi
0x804965a:   8b 7d 34                        	mov edi, dword ptr [ebp + 0x34]
0x804965d:   8b 5d 38                        	mov ebx, dword ptr [ebp + 0x38]
0x8049660:   88 55 f0                        	mov byte ptr [ebp - 0x10], dl
0x8049663:   89 ca                           	mov edx, ecx
0x8049665:   88 55 ec                        	mov byte ptr [ebp - 0x14], dl
0x8049668:   89 f2                           	mov edx, esi
0x804966a:   88 55 e8                        	mov byte ptr [ebp - 0x18], dl
0x804966d:   0f b7 55 cc                     	movzx edx, word ptr [ebp - 0x34]
0x8049671:   66 89 55 e4                     	mov word ptr [ebp - 0x1c], dx
0x8049675:   0f b6 55 c8                     	movzx edx, byte ptr [ebp - 0x38]
0x8049679:   88 55 e0                        	mov byte ptr [ebp - 0x20], dl
0x804967c:   0f b7 55 c4                     	movzx edx, word ptr [ebp - 0x3c]
0x8049680:   66 89 55 dc                     	mov word ptr [ebp - 0x24], dx
0x8049684:   0f b7 55 c0                     	movzx edx, word ptr [ebp - 0x40]
0x8049688:   66 89 55 d8                     	mov word ptr [ebp - 0x28], dx
0x804968c:   89 fa                           	mov edx, edi
0x804968e:   66 89 55 d4                     	mov word ptr [ebp - 0x2c], dx
0x8049692:   89 da                           	mov edx, ebx
0x8049694:   66 89 55 d0                     	mov word ptr [ebp - 0x30], dx
0x8049698:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804969b:   89 90 24 00 00 00               	mov dword ptr [eax + 0x24], edx
0x80496a1:   0f b6 55 f0                     	movzx edx, byte ptr [ebp - 0x10]
0x80496a5:   88 90 28 00 00 00               	mov byte ptr [eax + 0x28], dl
0x80496ab:   0f b6 55 ec                     	movzx edx, byte ptr [ebp - 0x14]
0x80496af:   88 90 29 00 00 00               	mov byte ptr [eax + 0x29], dl
0x80496b5:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80496b8:   89 90 2c 00 00 00               	mov dword ptr [eax + 0x2c], edx
0x80496be:   8b 55 18                        	mov edx, dword ptr [ebp + 0x18]
0x80496c1:   89 90 30 00 00 00               	mov dword ptr [eax + 0x30], edx
0x80496c7:   8b 55 1c                        	mov edx, dword ptr [ebp + 0x1c]
0x80496ca:   89 90 84 04 00 00               	mov dword ptr [eax + 0x484], edx
0x80496d0:   0f b6 55 e8                     	movzx edx, byte ptr [ebp - 0x18]
0x80496d4:   88 90 34 00 00 00               	mov byte ptr [eax + 0x34], dl
0x80496da:   0f b7 55 e4                     	movzx edx, word ptr [ebp - 0x1c]
0x80496de:   66 89 90 36 00 00 00            	mov word ptr [eax + 0x36], dx
0x80496e5:   0f b6 55 e0                     	movzx edx, byte ptr [ebp - 0x20]
0x80496e9:   88 90 38 00 00 00               	mov byte ptr [eax + 0x38], dl
0x80496ef:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x80496f3:   66 89 90 3a 00 00 00            	mov word ptr [eax + 0x3a], dx
0x80496fa:   0f b7 55 d8                     	movzx edx, word ptr [ebp - 0x28]
0x80496fe:   66 89 90 3c 00 00 00            	mov word ptr [eax + 0x3c], dx
0x8049705:   0f b7 55 d4                     	movzx edx, word ptr [ebp - 0x2c]
0x8049709:   66 89 90 3e 00 00 00            	mov word ptr [eax + 0x3e], dx
0x8049710:   0f b7 55 d0                     	movzx edx, word ptr [ebp - 0x30]
0x8049714:   66 89 90 40 00 00 00            	mov word ptr [eax + 0x40], dx
0x804971b:   8b 55 3c                        	mov edx, dword ptr [ebp + 0x3c]
0x804971e:   89 90 44 00 00 00               	mov dword ptr [eax + 0x44], edx
0x8049724:   8b 55 40                        	mov edx, dword ptr [ebp + 0x40]
0x8049727:   89 90 48 00 00 00               	mov dword ptr [eax + 0x48], edx
0x804972d:   8b 55 44                        	mov edx, dword ptr [ebp + 0x44]
0x8049730:   89 90 4c 00 00 00               	mov dword ptr [eax + 0x4c], edx
0x8049736:   8b 55 48                        	mov edx, dword ptr [ebp + 0x48]
0x8049739:   89 90 50 00 00 00               	mov dword ptr [eax + 0x50], edx
0x804973f:   b8 00 00 00 00                  	mov eax, 0
0x8049744:   83 c4 34                        	add esp, 0x34
0x8049747:   5b                              	pop ebx
0x8049748:   5e                              	pop esi
0x8049749:   5f                              	pop edi
0x804974a:   5d                              	pop ebp
0x804974b:   c3                              	ret 
; function: func_1 at 0x804974c -- 0x804a1b6
0x804974c:   55                              	push ebp
0x804974d:   89 e5                           	mov ebp, esp
0x804974f:   57                              	push edi
0x8049750:   56                              	push esi
0x8049751:   53                              	push ebx
0x8049752:   81 ec 0c 01 00 00               	sub esp, 0x10c
0x8049758:   e8 e9 0c 00 00                  	call 0x804a446 <__x86.get_pc_thunk.ax>
0x804975d:   05 a3 38 00 00                  	add eax, 0x38a3
0x8049762:   c7 45 c8 09 00 00 00            	mov dword ptr [ebp - 0x38], 9
0x8049769:   c6 45 f3 f6                     	mov byte ptr [ebp - 0xd], 0xf6
0x804976d:   c6 45 f2 a4                     	mov byte ptr [ebp - 0xe], 0xa4
0x8049771:   c7 45 ec cf 9e 03 4c            	mov dword ptr [ebp - 0x14], 0x4c039ecf
0x8049778:   c7 45 e8 9c c5 55 ed            	mov dword ptr [ebp - 0x18], 0xed55c59c
0x804977f:   c7 45 e4 00 00 00 00            	mov dword ptr [ebp - 0x1c], 0
0x8049786:   c6 45 b7 be                     	mov byte ptr [ebp - 0x49], 0xbe
0x804978a:   66 c7 45 e2 01 00               	mov word ptr [ebp - 0x1e], 1
0x8049790:   c6 45 e1 fa                     	mov byte ptr [ebp - 0x1f], 0xfa
0x8049794:   66 c7 45 b4 01 00               	mov word ptr [ebp - 0x4c], 1
0x804979a:   66 c7 45 b2 a1 81               	mov word ptr [ebp - 0x4e], 0x81a1
0x80497a0:   66 c7 45 de 2a e0               	mov word ptr [ebp - 0x22], 0xe02a
0x80497a6:   66 c7 45 ce 3c 35               	mov word ptr [ebp - 0x32], 0x353c
0x80497ac:   c7 45 ac 01 00 00 00            	mov dword ptr [ebp - 0x54], 1
0x80497b3:   c7 45 a8 ff ff ff ff            	mov dword ptr [ebp - 0x58], 0xffffffff
0x80497ba:   c7 45 a4 ff ff ff ff            	mov dword ptr [ebp - 0x5c], 0xffffffff
0x80497c1:   c7 45 a0 dc 54 51 e9            	mov dword ptr [ebp - 0x60], 0xe95154dc
0x80497c8:   c6 45 9f 47                     	mov byte ptr [ebp - 0x61], 0x47
0x80497cc:   c7 45 d4 00 00 00 00            	mov dword ptr [ebp - 0x2c], 0
0x80497d3:   c7 45 98 39 a3 db 51            	mov dword ptr [ebp - 0x68], 0x51dba339
0x80497da:   c7 45 d0 01 00 00 00            	mov dword ptr [ebp - 0x30], 1
0x80497e1:   c7 45 d8 bf 74 b2 4a            	mov dword ptr [ebp - 0x28], 0x4ab274bf
0x80497e8:   c7 45 94 03 00 00 00            	mov dword ptr [ebp - 0x6c], 3
0x80497ef:   c7 45 c4 fe ff ff ff            	mov dword ptr [ebp - 0x3c], 0xfffffffe
0x80497f6:   c7 45 90 95 9b 3d 70            	mov dword ptr [ebp - 0x70], 0x703d9b95
0x80497fd:   c7 45 8c 2b b7 aa 2d            	mov dword ptr [ebp - 0x74], 0x2daab72b
0x8049804:   c7 45 88 34 ef c8 ba            	mov dword ptr [ebp - 0x78], 0xbac8ef34
0x804980b:   66 c7 45 86 78 81               	mov word ptr [ebp - 0x7a], 0x8178
0x8049811:   c7 45 80 ac 96 19 41            	mov dword ptr [ebp - 0x80], 0x411996ac
0x8049818:   c7 45 c0 03 82 38 69            	mov dword ptr [ebp - 0x40], 0x69388203
0x804981f:   c7 85 7c ff ff ff 82 ec f7 8f   	mov dword ptr [ebp - 0x84], 0x8ff7ec82
0x8049829:   c7 85 78 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0x88], 0xfffffff8
0x8049833:   66 c7 85 76 ff ff ff fb ff      	mov word ptr [ebp - 0x8a], 0xfffb
0x804983c:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x8049840:   31 45 c8                        	xor dword ptr [ebp - 0x38], eax
0x8049843:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049847:   83 e8 01                        	sub eax, 1
0x804984a:   88 45 f2                        	mov byte ptr [ebp - 0xe], al
0x804984d:   83 45 ec 01                     	add dword ptr [ebp - 0x14], 1
0x8049851:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049855:   0f 84 cb 08 00 00               	je 0x804a126 <func_1+0x9da>
0x804985b:   c7 85 6c ff ff ff 25 a0 ef ab   	mov dword ptr [ebp - 0x94], 0xabefa025
0x8049865:   66 c7 85 6a ff ff ff f6 ff      	mov word ptr [ebp - 0x96], 0xfff6
0x804986e:   c7 85 64 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0x9c], 1
0x8049878:   c7 85 60 ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0xa0], 3
0x8049882:   c6 85 5f ff ff ff 28            	mov byte ptr [ebp - 0xa1], 0x28
0x8049889:   c7 85 58 ff ff ff d1 85 8b 96   	mov dword ptr [ebp - 0xa8], 0x968b85d1
0x8049893:   c7 45 d0 08 00 00 00            	mov dword ptr [ebp - 0x30], 8
0x804989a:   e9 90 06 00 00                  	jmp 0x8049f2f <func_1+0x7e3>
0x804989f:   c7 85 54 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xac], 0xfffffff8
0x80498a9:   c7 45 bc ff ff ff ff            	mov dword ptr [ebp - 0x44], 0xffffffff
0x80498b0:   c7 85 50 ff ff ff 9f 6c c7 a8   	mov dword ptr [ebp - 0xb0], 0xa8c76c9f
0x80498ba:   66 c7 85 4e ff ff ff fb ff      	mov word ptr [ebp - 0xb2], 0xfffb
0x80498c3:   c7 85 48 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xb8], 0
0x80498cd:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x80498d1:   74 05                           	je 0x80498d8 <func_1+0x18c>
0x80498d3:   e9 64 ff ff ff                  	jmp 0x804983c <func_1+0xf0>
0x80498d8:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x80498dc:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x80498df:   72 79                           	jb 0x804995a <func_1+0x20e>
0x80498e1:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x80498e5:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x80498e9:   39 c2                           	cmp edx, eax
0x80498eb:   0f 95 c0                        	setne al
0x80498ee:   0f b6 c0                        	movzx eax, al
0x80498f1:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x80498f4:   0f 9f c0                        	setg al
0x80498f7:   0f b6 c0                        	movzx eax, al
0x80498fa:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x80498fd:   0f 9c c0                        	setl al
0x8049900:   0f b6 c0                        	movzx eax, al
0x8049903:   89 c1                           	mov ecx, eax
0x8049905:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049908:   89 c2                           	mov edx, eax
0x804990a:   89 c8                           	mov eax, ecx
0x804990c:   0f af c2                        	imul eax, edx
0x804990f:   89 c2                           	mov edx, eax
0x8049911:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049917:   21 d0                           	and eax, edx
0x8049919:   83 f0 04                        	xor eax, 4
0x804991c:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804991f:   66 c7 85 46 ff ff ff 9e 27      	mov word ptr [ebp - 0xba], 0x279e
0x8049928:   c7 45 b8 47 58 2f 4f            	mov dword ptr [ebp - 0x48], 0x4f2f5847
0x804992f:   66 c7 85 44 ff ff ff 15 ff      	mov word ptr [ebp - 0xbc], 0xff15
0x8049938:   c7 85 40 ff ff ff eb 8f 16 f8   	mov dword ptr [ebp - 0xc0], 0xf8168feb
0x8049942:   66 c7 85 3e ff ff ff 00 00      	mov word ptr [ebp - 0xc2], 0
0x804994b:   80 7d f2 00                     	cmp byte ptr [ebp - 0xe], 0
0x804994f:   0f 84 d5 01 00 00               	je 0x8049b2a <func_1+0x3de>
0x8049955:   e9 05 01 00 00                  	jmp 0x8049a5f <func_1+0x313>
0x804995a:   66 c7 85 12 ff ff ff 08 00      	mov word ptr [ebp - 0xee], 8
0x8049963:   83 45 e4 01                     	add dword ptr [ebp - 0x1c], 1
0x8049967:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804996a:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x804996d:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049971:   74 2e                           	je 0x80499a1 <func_1+0x255>
0x8049973:   c6 85 0b ff ff ff 05            	mov byte ptr [ebp - 0xf5], 5
0x804997a:   c7 45 d4 0d 00 00 00            	mov dword ptr [ebp - 0x2c], 0xd
0x8049981:   eb 16                           	jmp 0x8049999 <func_1+0x24d>
0x8049983:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x8049987:   74 05                           	je 0x804998e <func_1+0x242>
0x8049989:   e9 b5 fe ff ff                  	jmp 0x8049843 <func_1+0xf7>
0x804998e:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049995:   83 6d d4 01                     	sub dword ptr [ebp - 0x2c], 1
0x8049999:   83 7d d4 04                     	cmp dword ptr [ebp - 0x2c], 4
0x804999d:   7e e4                           	jle 0x8049983 <func_1+0x237>
0x804999f:   eb 6e                           	jmp 0x8049a0f <func_1+0x2c3>
0x80499a1:   c6 85 11 ff ff ff 01            	mov byte ptr [ebp - 0xef], 1
0x80499a8:   c7 85 0c ff ff ff f6 ff ff ff   	mov dword ptr [ebp - 0xf4], 0xfffffff6
0x80499b2:   83 7d c8 00                     	cmp dword ptr [ebp - 0x38], 0
0x80499b6:   74 0d                           	je 0x80499c5 <func_1+0x279>
0x80499b8:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x80499bc:   74 07                           	je 0x80499c5 <func_1+0x279>
0x80499be:   b8 01 00 00 00                  	mov eax, 1
0x80499c3:   eb 05                           	jmp 0x80499ca <func_1+0x27e>
0x80499c5:   b8 00 00 00 00                  	mov eax, 0
0x80499ca:   f7 d8                           	neg eax
0x80499cc:   89 c2                           	mov edx, eax
0x80499ce:   0f b6 85 11 ff ff ff            	movzx eax, byte ptr [ebp - 0xef]
0x80499d5:   21 d0                           	and eax, edx
0x80499d7:   88 85 11 ff ff ff               	mov byte ptr [ebp - 0xef], al
0x80499dd:   66 0f be 45 b7                  	movsx ax, byte ptr [ebp - 0x49]
0x80499e2:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x80499e6:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x80499ea:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x80499ee:   39 c2                           	cmp edx, eax
0x80499f0:   0f 9f c0                        	setg al
0x80499f3:   0f b6 c0                        	movzx eax, al
0x80499f6:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x80499f9:   83 7d e4 01                     	cmp dword ptr [ebp - 0x1c], 1
0x80499fd:   0f 96 c0                        	setbe al
0x8049a00:   0f b6 d0                        	movzx edx, al
0x8049a03:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049a07:   09 d0                           	or eax, edx
0x8049a09:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x8049a0f:   c7 45 d8 00 00 00 00            	mov dword ptr [ebp - 0x28], 0
0x8049a16:   eb 3c                           	jmp 0x8049a54 <func_1+0x308>
0x8049a18:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049a1c:   89 c2                           	mov edx, eax
0x8049a1e:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049a24:   09 d0                           	or eax, edx
0x8049a26:   0f be d0                        	movsx edx, al
0x8049a29:   89 d0                           	mov eax, edx
0x8049a2b:   c1 e0 03                        	shl eax, 3
0x8049a2e:   01 d0                           	add eax, edx
0x8049a30:   c1 e0 03                        	shl eax, 3
0x8049a33:   39 45 c8                        	cmp dword ptr [ebp - 0x38], eax
0x8049a36:   7d 07                           	jge 0x8049a3f <func_1+0x2f3>
0x8049a38:   b8 9f ce 00 00                  	mov eax, 0xce9f
0x8049a3d:   eb 05                           	jmp 0x8049a44 <func_1+0x2f8>
0x8049a3f:   b8 9e ce 00 00                  	mov eax, 0xce9e
0x8049a44:   3b 45 d4                        	cmp eax, dword ptr [ebp - 0x2c]
0x8049a47:   0f 9d c0                        	setge al
0x8049a4a:   0f b6 c0                        	movzx eax, al
0x8049a4d:   31 45 e8                        	xor dword ptr [ebp - 0x18], eax
0x8049a50:   83 45 d8 05                     	add dword ptr [ebp - 0x28], 5
0x8049a54:   83 7d d8 13                     	cmp dword ptr [ebp - 0x28], 0x13
0x8049a58:   7e be                           	jle 0x8049a18 <func_1+0x2cc>
0x8049a5a:   e9 b5 04 00 00                  	jmp 0x8049f14 <func_1+0x7c8>
0x8049a5f:   c7 85 30 ff ff ff 6d e4 cf 98   	mov dword ptr [ebp - 0xd0], 0x98cfe46d
0x8049a69:   c7 85 2c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xd4], 0xffffffff
0x8049a73:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a76:   23 45 e4                        	and eax, dword ptr [ebp - 0x1c]
0x8049a79:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049a7c:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x8049a80:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x8049a83:   0f be 4d b7                     	movsx ecx, byte ptr [ebp - 0x49]
0x8049a87:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049a8d:   98                              	cwde 
0x8049a8e:   8b 55 e8                        	mov edx, dword ptr [ebp - 0x18]
0x8049a91:   0f bf da                        	movsx ebx, dx
0x8049a94:   99                              	cdq 
0x8049a95:   f7 fb                           	idiv ebx
0x8049a97:   0f b6 d0                        	movzx edx, al
0x8049a9a:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049a9d:   0f b6 c0                        	movzx eax, al
0x8049aa0:   29 c2                           	sub edx, eax
0x8049aa2:   89 d0                           	mov eax, edx
0x8049aa4:   39 c1                           	cmp ecx, eax
0x8049aa6:   0f 9d c0                        	setge al
0x8049aa9:   0f b6 c0                        	movzx eax, al
0x8049aac:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049ab0:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049ab4:   88 45 e1                        	mov byte ptr [ebp - 0x1f], al
0x8049ab7:   0f b6 55 e1                     	movzx edx, byte ptr [ebp - 0x1f]
0x8049abb:   8b 85 6c ff ff ff               	mov eax, dword ptr [ebp - 0x94]
0x8049ac1:   0f b7 c0                        	movzx eax, ax
0x8049ac4:   89 c1                           	mov ecx, eax
0x8049ac6:   d3 fa                           	sar edx, cl
0x8049ac8:   89 d0                           	mov eax, edx
0x8049aca:   c0 f8 02                        	sar al, 2
0x8049acd:   0f be c0                        	movsx eax, al
0x8049ad0:   34 ff                           	xor al, 0xff
0x8049ad2:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049ad5:   0f 92 c0                        	setb al
0x8049ad8:   0f b6 c0                        	movzx eax, al
0x8049adb:   89 45 bc                        	mov dword ptr [ebp - 0x44], eax
0x8049ade:   83 7d bc 00                     	cmp dword ptr [ebp - 0x44], 0
0x8049ae2:   74 23                           	je 0x8049b07 <func_1+0x3bb>
0x8049ae4:   c6 85 2b ff ff ff 07            	mov byte ptr [ebp - 0xd5], 7
0x8049aeb:   83 7d 98 00                     	cmp dword ptr [ebp - 0x68], 0
0x8049aef:   0f 95 c0                        	setne al
0x8049af2:   0f b6 c0                        	movzx eax, al
0x8049af5:   99                              	cdq 
0x8049af6:   f7 bd 2c ff ff ff               	idiv dword ptr [ebp - 0xd4]
0x8049afc:   89 55 e8                        	mov dword ptr [ebp - 0x18], edx
0x8049aff:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049b02:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049b05:   eb 14                           	jmp 0x8049b1b <func_1+0x3cf>
0x8049b07:   8b 85 54 ff ff ff               	mov eax, dword ptr [ebp - 0xac]
0x8049b0d:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049b10:   83 7d c4 00                     	cmp dword ptr [ebp - 0x3c], 0
0x8049b14:   74 05                           	je 0x8049b1b <func_1+0x3cf>
0x8049b16:   e9 32 fd ff ff                  	jmp 0x804984d <func_1+0x101>
0x8049b1b:   0f bf 85 46 ff ff ff            	movsx eax, word ptr [ebp - 0xba]
0x8049b22:   09 45 e8                        	or dword ptr [ebp - 0x18], eax
0x8049b25:   e9 39 01 00 00                  	jmp 0x8049c63 <func_1+0x517>
0x8049b2a:   c7 85 38 ff ff ff 28 52 6e c2   	mov dword ptr [ebp - 0xc8], 0xc26e5228
0x8049b34:   c7 85 34 ff ff ff c4 3e 9e 7b   	mov dword ptr [ebp - 0xcc], 0x7b9e3ec4
0x8049b3e:   0f b7 45 e2                     	movzx eax, word ptr [ebp - 0x1e]
0x8049b42:   83 c0 01                        	add eax, 1
0x8049b45:   66 89 45 e2                     	mov word ptr [ebp - 0x1e], ax
0x8049b49:   b8 00 00 00 00                  	mov eax, 0
0x8049b4e:   09 45 c4                        	or dword ptr [ebp - 0x3c], eax
0x8049b51:   81 bd 54 ff ff ff fe ff 01 00   	cmp dword ptr [ebp - 0xac], 0x1fffe
0x8049b5b:   0f 94 c0                        	sete al
0x8049b5e:   0f b6 c0                        	movzx eax, al
0x8049b61:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x8049b64:   80 7d b7 02                     	cmp byte ptr [ebp - 0x49], 2
0x8049b68:   7f 10                           	jg 0x8049b7a <func_1+0x42e>
0x8049b6a:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049b6e:   75 0a                           	jne 0x8049b7a <func_1+0x42e>
0x8049b70:   66 83 bd 46 ff ff ff 00         	cmp word ptr [ebp - 0xba], 0
0x8049b78:   74 07                           	je 0x8049b81 <func_1+0x435>
0x8049b7a:   b8 01 00 00 00                  	mov eax, 1
0x8049b7f:   eb 05                           	jmp 0x8049b86 <func_1+0x43a>
0x8049b81:   b8 00 00 00 00                  	mov eax, 0
0x8049b86:   0f b7 c8                        	movzx ecx, ax
0x8049b89:   ba 7f 50 2a ba                  	mov edx, 0xba2a507f
0x8049b8e:   89 c8                           	mov eax, ecx
0x8049b90:   f7 ea                           	imul edx
0x8049b92:   8d 04 0a                        	lea eax, [edx + ecx]
0x8049b95:   c1 f8 0e                        	sar eax, 0xe
0x8049b98:   89 c2                           	mov edx, eax
0x8049b9a:   89 c8                           	mov eax, ecx
0x8049b9c:   c1 f8 1f                        	sar eax, 0x1f
0x8049b9f:   29 c2                           	sub edx, eax
0x8049ba1:   89 d0                           	mov eax, edx
0x8049ba3:   69 c0 02 58 00 00               	imul eax, eax, 0x5802
0x8049ba9:   29 c1                           	sub ecx, eax
0x8049bab:   89 c8                           	mov eax, ecx
0x8049bad:   89 c2                           	mov edx, eax
0x8049baf:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x8049bb5:   89 c1                           	mov ecx, eax
0x8049bb7:   89 d0                           	mov eax, edx
0x8049bb9:   ba 00 00 00 00                  	mov edx, 0
0x8049bbe:   66 f7 f1                        	div cx
0x8049bc1:   66 85 c0                        	test ax, ax
0x8049bc4:   75 06                           	jne 0x8049bcc <func_1+0x480>
0x8049bc6:   80 7d b7 00                     	cmp byte ptr [ebp - 0x49], 0
0x8049bca:   74 07                           	je 0x8049bd3 <func_1+0x487>
0x8049bcc:   b8 01 00 00 00                  	mov eax, 1
0x8049bd1:   eb 05                           	jmp 0x8049bd8 <func_1+0x48c>
0x8049bd3:   b8 00 00 00 00                  	mov eax, 0
0x8049bd8:   d0 e8                           	shr al, 1
0x8049bda:   0f b6 c0                        	movzx eax, al
0x8049bdd:   39 85 6c ff ff ff               	cmp dword ptr [ebp - 0x94], eax
0x8049be3:   0f 9d c0                        	setge al
0x8049be6:   0f b6 c0                        	movzx eax, al
0x8049be9:   39 85 38 ff ff ff               	cmp dword ptr [ebp - 0xc8], eax
0x8049bef:   c7 85 34 ff ff ff 71 8c 52 99   	mov dword ptr [ebp - 0xcc], 0x99528c71
0x8049bf9:   0f b7 55 e2                     	movzx edx, word ptr [ebp - 0x1e]
0x8049bfd:   83 bd 6c ff ff ff 00            	cmp dword ptr [ebp - 0x94], 0
0x8049c04:   74 10                           	je 0x8049c16 <func_1+0x4ca>
0x8049c06:   83 bd 34 ff ff ff 00            	cmp dword ptr [ebp - 0xcc], 0
0x8049c0d:   74 07                           	je 0x8049c16 <func_1+0x4ca>
0x8049c0f:   b8 01 00 00 00                  	mov eax, 1
0x8049c14:   eb 05                           	jmp 0x8049c1b <func_1+0x4cf>
0x8049c16:   b8 00 00 00 00                  	mov eax, 0
0x8049c1b:   66 c1 e8 03                     	shr ax, 3
0x8049c1f:   b9 06 00 00 00                  	mov ecx, 6
0x8049c24:   29 c1                           	sub ecx, eax
0x8049c26:   89 c8                           	mov eax, ecx
0x8049c28:   0f bf c8                        	movsx ecx, ax
0x8049c2b:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049c32:   98                              	cwde 
0x8049c33:   0f af c1                        	imul eax, ecx
0x8049c36:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049c39:   0f 94 c0                        	sete al
0x8049c3c:   0f b6 c8                        	movzx ecx, al
0x8049c3f:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049c42:   0f b7 c0                        	movzx eax, ax
0x8049c45:   0f af c1                        	imul eax, ecx
0x8049c48:   39 45 94                        	cmp dword ptr [ebp - 0x6c], eax
0x8049c4b:   0f 9e c0                        	setle al
0x8049c4e:   0f b6 c0                        	movzx eax, al
0x8049c51:   0f af c2                        	imul eax, edx
0x8049c54:   39 85 34 ff ff ff               	cmp dword ptr [ebp - 0xcc], eax
0x8049c5a:   0f 9f c0                        	setg al
0x8049c5d:   0f b6 c0                        	movzx eax, al
0x8049c60:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049c63:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049c6a:   c1 e0 02                        	shl eax, 2
0x8049c6d:   0f be c0                        	movsx eax, al
0x8049c70:   8b 55 bc                        	mov edx, dword ptr [ebp - 0x44]
0x8049c73:   0f be ca                        	movsx ecx, dl
0x8049c76:   99                              	cdq 
0x8049c77:   f7 f9                           	idiv ecx
0x8049c79:   89 d0                           	mov eax, edx
0x8049c7b:   89 c2                           	mov edx, eax
0x8049c7d:   b8 ed ff ff ff                  	mov eax, 0xffffffed
0x8049c82:   0f b6 c0                        	movzx eax, al
0x8049c85:   f6 f2                           	div dl
0x8049c87:   0f be d0                        	movsx edx, al
0x8049c8a:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049c8e:   c1 e0 0a                        	shl eax, 0xa
0x8049c91:   85 c0                           	test eax, eax
0x8049c93:   74 10                           	je 0x8049ca5 <func_1+0x559>
0x8049c95:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x8049c9c:   74 07                           	je 0x8049ca5 <func_1+0x559>
0x8049c9e:   b8 01 00 00 00                  	mov eax, 1
0x8049ca3:   eb 05                           	jmp 0x8049caa <func_1+0x55e>
0x8049ca5:   b8 00 00 00 00                  	mov eax, 0
0x8049caa:   0f be c0                        	movsx eax, al
0x8049cad:   89 c1                           	mov ecx, eax
0x8049caf:   d3 fa                           	sar edx, cl
0x8049cb1:   89 d0                           	mov eax, edx
0x8049cb3:   85 c0                           	test eax, eax
0x8049cb5:   74 0d                           	je 0x8049cc4 <func_1+0x578>
0x8049cb7:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049cbb:   74 07                           	je 0x8049cc4 <func_1+0x578>
0x8049cbd:   b8 01 00 00 00                  	mov eax, 1
0x8049cc2:   eb 05                           	jmp 0x8049cc9 <func_1+0x57d>
0x8049cc4:   b8 00 00 00 00                  	mov eax, 0
0x8049cc9:   0f bf d0                        	movsx edx, ax
0x8049ccc:   0f b6 45 e1                     	movzx eax, byte ptr [ebp - 0x1f]
0x8049cd0:   39 c2                           	cmp edx, eax
0x8049cd2:   0f 84 ce 00 00 00               	je 0x8049da6 <func_1+0x65a>
0x8049cd8:   66 c7 85 1a ff ff ff fc ff      	mov word ptr [ebp - 0xe6], 0xfffc
0x8049ce1:   c7 85 14 ff ff ff da fd 9b 5f   	mov dword ptr [ebp - 0xec], 0x5f9bfdda
0x8049ceb:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x8049cee:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x8049cf2:   99                              	cdq 
0x8049cf3:   f7 f9                           	idiv ecx
0x8049cf5:   89 d0                           	mov eax, edx
0x8049cf7:   85 c0                           	test eax, eax
0x8049cf9:   74 11                           	je 0x8049d0c <func_1+0x5c0>
0x8049cfb:   66 83 bd 6a ff ff ff 00         	cmp word ptr [ebp - 0x96], 0
0x8049d03:   74 07                           	je 0x8049d0c <func_1+0x5c0>
0x8049d05:   bb 01 00 00 00                  	mov ebx, 1
0x8049d0a:   eb 05                           	jmp 0x8049d11 <func_1+0x5c5>
0x8049d0c:   bb 00 00 00 00                  	mov ebx, 0
0x8049d11:   b8 03 00 00 00                  	mov eax, 3
0x8049d16:   99                              	cdq 
0x8049d17:   f7 fb                           	idiv ebx
0x8049d19:   85 c0                           	test eax, eax
0x8049d1b:   75 04                           	jne 0x8049d21 <func_1+0x5d5>
0x8049d1d:   83 7d b8 00                     	cmp dword ptr [ebp - 0x48], 0
0x8049d21:   8b 45 bc                        	mov eax, dword ptr [ebp - 0x44]
0x8049d24:   83 e8 04                        	sub eax, 4
0x8049d27:   f7 d0                           	not eax
0x8049d29:   66 89 85 4e ff ff ff            	mov word ptr [ebp - 0xb2], ax
0x8049d30:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x8049d34:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x8049d38:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049d3c:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x8049d42:   0f b7 75 b4                     	movzx esi, word ptr [ebp - 0x4c]
0x8049d46:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x8049d4c:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x8049d50:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x8049d56:   0f b7 7d e2                     	movzx edi, word ptr [ebp - 0x1e]
0x8049d5a:   0f be 75 b7                     	movsx esi, byte ptr [ebp - 0x49]
0x8049d5e:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x8049d62:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049d66:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x8049d69:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049d6c:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049d6f:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x8049d72:   52                              	push edx
0x8049d73:   53                              	push ebx
0x8049d74:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x8049d7a:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x8049d80:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x8049d86:   57                              	push edi
0x8049d87:   56                              	push esi
0x8049d88:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x8049d8b:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049d8e:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049d91:   51                              	push ecx
0x8049d92:   50                              	push eax
0x8049d93:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049d96:   e8 8b f8 ff ff                  	call 0x8049626 <set_var>
0x8049d9b:   83 c4 44                        	add esp, 0x44
0x8049d9e:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x8049da1:   e9 08 04 00 00                  	jmp 0x804a1ae <func_1+0xa62>
0x8049da6:   c6 85 2a ff ff ff f2            	mov byte ptr [ebp - 0xd6], 0xf2
0x8049dad:   c7 85 24 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0xdc], 0
0x8049db7:   f7 55 c4                        	not dword ptr [ebp - 0x3c]
0x8049dba:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049dbd:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049dc0:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049dc3:   09 45 c8                        	or dword ptr [ebp - 0x38], eax
0x8049dc6:   8b 85 7c ff ff ff               	mov eax, dword ptr [ebp - 0x84]
0x8049dcc:   39 45 e4                        	cmp dword ptr [ebp - 0x1c], eax
0x8049dcf:   75 07                           	jne 0x8049dd8 <func_1+0x68c>
0x8049dd1:   bb 04 00 00 00                  	mov ebx, 4
0x8049dd6:   eb 05                           	jmp 0x8049ddd <func_1+0x691>
0x8049dd8:   bb 00 00 00 00                  	mov ebx, 0
0x8049ddd:   0f bf 95 44 ff ff ff            	movsx edx, word ptr [ebp - 0xbc]
0x8049de4:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x8049de8:   39 45 98                        	cmp dword ptr [ebp - 0x68], eax
0x8049deb:   0f 94 c0                        	sete al
0x8049dee:   0f b6 c8                        	movzx ecx, al
0x8049df1:   0f b6 85 2a ff ff ff            	movzx eax, byte ptr [ebp - 0xd6]
0x8049df8:   01 c8                           	add eax, ecx
0x8049dfa:   85 c0                           	test eax, eax
0x8049dfc:   75 0a                           	jne 0x8049e08 <func_1+0x6bc>
0x8049dfe:   66 83 bd 46 ff ff ff 00         	cmp word ptr [ebp - 0xba], 0
0x8049e06:   74 07                           	je 0x8049e0f <func_1+0x6c3>
0x8049e08:   b8 01 00 00 00                  	mov eax, 1
0x8049e0d:   eb 05                           	jmp 0x8049e14 <func_1+0x6c8>
0x8049e0f:   b8 00 00 00 00                  	mov eax, 0
0x8049e14:   89 c1                           	mov ecx, eax
0x8049e16:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e1a:   31 c8                           	xor eax, ecx
0x8049e1c:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049e20:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e24:   21 d0                           	and eax, edx
0x8049e26:   39 c3                           	cmp ebx, eax
0x8049e28:   81 bd 6c ff ff ff f6 ff 00 00   	cmp dword ptr [ebp - 0x94], 0xfff6
0x8049e32:   0f 95 c0                        	setne al
0x8049e35:   0f b6 c0                        	movzx eax, al
0x8049e38:   8b 55 e4                        	mov edx, dword ptr [ebp - 0x1c]
0x8049e3b:   0f b6 da                        	movzx ebx, dl
0x8049e3e:   99                              	cdq 
0x8049e3f:   f7 fb                           	idiv ebx
0x8049e41:   83 f8 01                        	cmp eax, 1
0x8049e44:   0f 9e c0                        	setle al
0x8049e47:   0f b6 d0                        	movzx edx, al
0x8049e4a:   0f bf 85 44 ff ff ff            	movsx eax, word ptr [ebp - 0xbc]
0x8049e51:   39 c2                           	cmp edx, eax
0x8049e53:   0f 9f c0                        	setg al
0x8049e56:   0f b6 d0                        	movzx edx, al
0x8049e59:   0f b6 45 f2                     	movzx eax, byte ptr [ebp - 0xe]
0x8049e5d:   39 c2                           	cmp edx, eax
0x8049e5f:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049e63:   0f be c0                        	movsx eax, al
0x8049e66:   83 e0 01                        	and eax, 1
0x8049e69:   85 c0                           	test eax, eax
0x8049e6b:   74 2f                           	je 0x8049e9c <func_1+0x750>
0x8049e6d:   c7 85 20 ff ff ff b9 73 6e 10   	mov dword ptr [ebp - 0xe0], 0x106e73b9
0x8049e77:   c7 85 1c ff ff ff 98 93 52 11   	mov dword ptr [ebp - 0xe4], 0x11529398
0x8049e81:   0f b6 85 2a ff ff ff            	movzx eax, byte ptr [ebp - 0xd6]
0x8049e88:   89 85 20 ff ff ff               	mov dword ptr [ebp - 0xe0], eax
0x8049e8e:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x8049e92:   25 ed 00 00 00                  	and eax, 0xed
0x8049e97:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049e9a:   eb 15                           	jmp 0x8049eb1 <func_1+0x765>
0x8049e9c:   66 83 6d ce 01                  	sub word ptr [ebp - 0x32], 1
0x8049ea1:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x8049ea5:   39 45 88                        	cmp dword ptr [ebp - 0x78], eax
0x8049ea8:   0f 9d c0                        	setge al
0x8049eab:   0f b6 c0                        	movzx eax, al
0x8049eae:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x8049eb1:   83 bd 54 ff ff ff 00            	cmp dword ptr [ebp - 0xac], 0
0x8049eb8:   74 0d                           	je 0x8049ec7 <func_1+0x77b>
0x8049eba:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049ebe:   74 07                           	je 0x8049ec7 <func_1+0x77b>
0x8049ec0:   b8 01 00 00 00                  	mov eax, 1
0x8049ec5:   eb 05                           	jmp 0x8049ecc <func_1+0x780>
0x8049ec7:   b8 00 00 00 00                  	mov eax, 0
0x8049ecc:   83 f8 f7                        	cmp eax, -9
0x8049ecf:   0f 9c c0                        	setl al
0x8049ed2:   0f b6 c0                        	movzx eax, al
0x8049ed5:   f7 d0                           	not eax
0x8049ed7:   89 c2                           	mov edx, eax
0x8049ed9:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x8049edd:   39 c2                           	cmp edx, eax
0x8049edf:   7d 07                           	jge 0x8049ee8 <func_1+0x79c>
0x8049ee1:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049ee8:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049eec:   75 4d                           	jne 0x8049f3b <func_1+0x7ef>
0x8049eee:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049ef2:   75 4a                           	jne 0x8049f3e <func_1+0x7f2>
0x8049ef4:   83 bd 64 ff ff ff 00            	cmp dword ptr [ebp - 0x9c], 0
0x8049efb:   75 2d                           	jne 0x8049f2a <func_1+0x7de>
0x8049efd:   0f b6 45 9f                     	movzx eax, byte ptr [ebp - 0x61]
0x8049f01:   89 85 48 ff ff ff               	mov dword ptr [ebp - 0xb8], eax
0x8049f07:   c7 45 c8 4d cc 0a 65            	mov dword ptr [ebp - 0x38], 0x650acc4d
0x8049f0e:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x8049f11:   89 45 e8                        	mov dword ptr [ebp - 0x18], eax
0x8049f14:   83 7d e4 00                     	cmp dword ptr [ebp - 0x1c], 0
0x8049f18:   75 07                           	jne 0x8049f21 <func_1+0x7d5>
0x8049f1a:   80 bd 5f ff ff ff 00            	cmp byte ptr [ebp - 0xa1], 0
0x8049f21:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049f28:   eb 01                           	jmp 0x8049f2b <func_1+0x7df>
0x8049f2a:   90                              	nop 
0x8049f2b:   83 45 d0 05                     	add dword ptr [ebp - 0x30], 5
0x8049f2f:   83 7d d0 0d                     	cmp dword ptr [ebp - 0x30], 0xd
0x8049f33:   0f 85 66 f9 ff ff               	jne 0x804989f <func_1+0x153>
0x8049f39:   eb 04                           	jmp 0x8049f3f <func_1+0x7f3>
0x8049f3b:   90                              	nop 
0x8049f3c:   eb 01                           	jmp 0x8049f3f <func_1+0x7f3>
0x8049f3e:   90                              	nop 
0x8049f3f:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f42:   09 45 d8                        	or dword ptr [ebp - 0x28], eax
0x8049f45:   c7 45 c0 12 00 00 00            	mov dword ptr [ebp - 0x40], 0x12
0x8049f4c:   eb 25                           	jmp 0x8049f73 <func_1+0x827>
0x8049f4e:   8b 45 ac                        	mov eax, dword ptr [ebp - 0x54]
0x8049f51:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x8049f54:   66 c7 45 ce 00 00               	mov word ptr [ebp - 0x32], 0
0x8049f5a:   eb 0c                           	jmp 0x8049f68 <func_1+0x81c>
0x8049f5c:   c7 45 c8 8c b0 8f f4            	mov dword ptr [ebp - 0x38], 0xf48fb08c
0x8049f63:   66 83 45 ce 01                  	add word ptr [ebp - 0x32], 1
0x8049f68:   66 83 7d ce 2f                  	cmp word ptr [ebp - 0x32], 0x2f
0x8049f6d:   75 ed                           	jne 0x8049f5c <func_1+0x810>
0x8049f6f:   83 45 c0 01                     	add dword ptr [ebp - 0x40], 1
0x8049f73:   83 7d c0 1f                     	cmp dword ptr [ebp - 0x40], 0x1f
0x8049f77:   76 d5                           	jbe 0x8049f4e <func_1+0x802>
0x8049f79:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x8049f7f:   66 83 7d de 18                  	cmp word ptr [ebp - 0x22], 0x18
0x8049f84:   0f 85 b3 01 00 00               	jne 0x804a13d <func_1+0x9f1>
0x8049f8a:   c6 85 0a ff ff ff 00            	mov byte ptr [ebp - 0xf6], 0
0x8049f91:   c7 85 6c ff ff ff eb ff ff ff   	mov dword ptr [ebp - 0x94], 0xffffffeb
0x8049f9b:   83 bd 6c ff ff ff e4            	cmp dword ptr [ebp - 0x94], -0x1c
0x8049fa2:   0f 8c 04 01 00 00               	jl 0x804a0ac <func_1+0x960>
0x8049fa8:   c7 85 04 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xfc], 0xfffffff8
0x8049fb2:   c6 85 03 ff ff ff 07            	mov byte ptr [ebp - 0xfd], 7
0x8049fb9:   0f b7 85 6a ff ff ff            	movzx eax, word ptr [ebp - 0x96]
0x8049fc0:   c1 e0 0a                        	shl eax, 0xa
0x8049fc3:   89 c1                           	mov ecx, eax
0x8049fc5:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x8049fc8:   ba 61 00 00 00                  	mov edx, 0x61
0x8049fcd:   0f af c2                        	imul eax, edx
0x8049fd0:   89 c2                           	mov edx, eax
0x8049fd2:   b8 08 00 00 00                  	mov eax, 8
0x8049fd7:   0f b6 c0                        	movzx eax, al
0x8049fda:   f6 f2                           	div dl
0x8049fdc:   0f b6 c4                        	movzx eax, ah
0x8049fdf:   84 c0                           	test al, al
0x8049fe1:   0f 95 c0                        	setne al
0x8049fe4:   0f b6 c0                        	movzx eax, al
0x8049fe7:   39 c1                           	cmp ecx, eax
0x8049fe9:   74 04                           	je 0x8049fef <func_1+0x8a3>
0x8049feb:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049fef:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049ff3:   0f b6 d0                        	movzx edx, al
0x8049ff6:   89 d0                           	mov eax, edx
0x8049ff8:   c1 e0 08                        	shl eax, 8
0x8049ffb:   29 d0                           	sub eax, edx
0x8049ffd:   21 45 e4                        	and dword ptr [ebp - 0x1c], eax
0x804a000:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804a003:   89 85 04 ff ff ff               	mov dword ptr [ebp - 0xfc], eax
0x804a009:   83 bd 04 ff ff ff 00            	cmp dword ptr [ebp - 0xfc], 0
0x804a010:   75 09                           	jne 0x804a01b <func_1+0x8cf>
0x804a012:   80 bd 03 ff ff ff 00            	cmp byte ptr [ebp - 0xfd], 0
0x804a019:   74 07                           	je 0x804a022 <func_1+0x8d6>
0x804a01b:   b8 01 00 00 00                  	mov eax, 1
0x804a020:   eb 05                           	jmp 0x804a027 <func_1+0x8db>
0x804a022:   b8 00 00 00 00                  	mov eax, 0
0x804a027:   89 85 60 ff ff ff               	mov dword ptr [ebp - 0xa0], eax
0x804a02d:   83 ad 58 ff ff ff 01            	sub dword ptr [ebp - 0xa8], 1
0x804a034:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x804a038:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a03c:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a040:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a046:   0f b7 75 b4                     	movzx esi, word ptr [ebp - 0x4c]
0x804a04a:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a050:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x804a054:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a05a:   0f b7 7d e2                     	movzx edi, word ptr [ebp - 0x1e]
0x804a05e:   0f be 75 b7                     	movsx esi, byte ptr [ebp - 0x49]
0x804a062:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x804a066:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a06a:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a06d:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a070:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a073:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a076:   52                              	push edx
0x804a077:   53                              	push ebx
0x804a078:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a07e:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a084:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a08a:   57                              	push edi
0x804a08b:   56                              	push esi
0x804a08c:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a08f:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a092:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a095:   51                              	push ecx
0x804a096:   50                              	push eax
0x804a097:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a09a:   e8 87 f5 ff ff                  	call 0x8049626 <set_var>
0x804a09f:   83 c4 44                        	add esp, 0x44
0x804a0a2:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x804a0a7:   e9 02 01 00 00                  	jmp 0x804a1ae <func_1+0xa62>
0x804a0ac:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x804a0b0:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a0b4:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a0b8:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a0be:   0f b7 75 b4                     	movzx esi, word ptr [ebp - 0x4c]
0x804a0c2:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a0c8:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x804a0cc:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a0d2:   0f b7 7d e2                     	movzx edi, word ptr [ebp - 0x1e]
0x804a0d6:   0f be 75 b7                     	movsx esi, byte ptr [ebp - 0x49]
0x804a0da:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x804a0de:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a0e2:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a0e5:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a0e8:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a0eb:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a0ee:   52                              	push edx
0x804a0ef:   53                              	push ebx
0x804a0f0:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a0f6:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a0fc:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a102:   57                              	push edi
0x804a103:   56                              	push esi
0x804a104:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a107:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a10a:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a10d:   51                              	push ecx
0x804a10e:   50                              	push eax
0x804a10f:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a112:   e8 0f f5 ff ff                  	call 0x8049626 <set_var>
0x804a117:   83 c4 44                        	add esp, 0x44
0x804a11a:   0f b6 85 5f ff ff ff            	movzx eax, byte ptr [ebp - 0xa1]
0x804a121:   e9 88 00 00 00                  	jmp 0x804a1ae <func_1+0xa62>
0x804a126:   c7 85 70 ff ff ff 09 a2 52 4f   	mov dword ptr [ebp - 0x90], 0x4f52a209
0x804a130:   0f b7 85 76 ff ff ff            	movzx eax, word ptr [ebp - 0x8a]
0x804a137:   23 45 d8                        	and eax, dword ptr [ebp - 0x28]
0x804a13a:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x804a13d:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x804a141:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a145:   0f b7 45 b2                     	movzx eax, word ptr [ebp - 0x4e]
0x804a149:   89 85 f0 fe ff ff               	mov dword ptr [ebp - 0x110], eax
0x804a14f:   0f b7 75 b4                     	movzx esi, word ptr [ebp - 0x4c]
0x804a153:   89 b5 ec fe ff ff               	mov dword ptr [ebp - 0x114], esi
0x804a159:   0f b6 7d e1                     	movzx edi, byte ptr [ebp - 0x1f]
0x804a15d:   89 bd e8 fe ff ff               	mov dword ptr [ebp - 0x118], edi
0x804a163:   0f b7 7d e2                     	movzx edi, word ptr [ebp - 0x1e]
0x804a167:   0f be 75 b7                     	movsx esi, byte ptr [ebp - 0x49]
0x804a16b:   0f b6 4d f2                     	movzx ecx, byte ptr [ebp - 0xe]
0x804a16f:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804a173:   ff 75 a0                        	push dword ptr [ebp - 0x60]
0x804a176:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a179:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a17c:   ff 75 ac                        	push dword ptr [ebp - 0x54]
0x804a17f:   52                              	push edx
0x804a180:   53                              	push ebx
0x804a181:   ff b5 f0 fe ff ff               	push dword ptr [ebp - 0x110]
0x804a187:   ff b5 ec fe ff ff               	push dword ptr [ebp - 0x114]
0x804a18d:   ff b5 e8 fe ff ff               	push dword ptr [ebp - 0x118]
0x804a193:   57                              	push edi
0x804a194:   56                              	push esi
0x804a195:   ff 75 e4                        	push dword ptr [ebp - 0x1c]
0x804a198:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a19b:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a19e:   51                              	push ecx
0x804a19f:   50                              	push eax
0x804a1a0:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a1a3:   e8 7e f4 ff ff                  	call 0x8049626 <set_var>
0x804a1a8:   83 c4 44                        	add esp, 0x44
0x804a1ab:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a1ae:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804a1b1:   5b                              	pop ebx
0x804a1b2:   5e                              	pop esi
0x804a1b3:   5f                              	pop edi
0x804a1b4:   5d                              	pop ebp
0x804a1b5:   c3                              	ret 
; function: main at 0x804a1b6 -- 0x804a446
0x804a1b6:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804a1ba:   83 e4 f0                        	and esp, 0xfffffff0
0x804a1bd:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804a1c0:   55                              	push ebp
0x804a1c1:   89 e5                           	mov ebp, esp
0x804a1c3:   53                              	push ebx
0x804a1c4:   51                              	push ecx
0x804a1c5:   83 ec 10                        	sub esp, 0x10
0x804a1c8:   e8 c3 e1 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a1cd:   81 c3 33 2e 00 00               	add ebx, 0x2e33
0x804a1d3:   89 c8                           	mov eax, ecx
0x804a1d5:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804a1dc:   83 38 02                        	cmp dword ptr [eax], 2
0x804a1df:   75 26                           	jne 0x804a207 <main+0x51>
0x804a1e1:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804a1e4:   83 c0 04                        	add eax, 4
0x804a1e7:   8b 00                           	mov eax, dword ptr [eax]
0x804a1e9:   83 ec 08                        	sub esp, 8
0x804a1ec:   8d 93 28 d5 ff ff               	lea edx, [ebx - 0x2ad8]
0x804a1f2:   52                              	push edx
0x804a1f3:   50                              	push eax
0x804a1f4:   e8 07 e1 ff ff                  	call 0x8048300 <strcmp>
0x804a1f9:   83 c4 10                        	add esp, 0x10
0x804a1fc:   85 c0                           	test eax, eax
0x804a1fe:   75 07                           	jne 0x804a207 <main+0x51>
0x804a200:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804a207:   e8 4a e2 ff ff                  	call 0x8048456 <platform_main_begin>
0x804a20c:   e8 5a f2 ff ff                  	call 0x804946b <crc32_gentab>
0x804a211:   e8 36 f5 ff ff                  	call 0x804974c <func_1>
0x804a216:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804a21c:   89 c2                           	mov edx, eax
0x804a21e:   83 ec 04                        	sub esp, 4
0x804a221:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a224:   8d 83 2a d5 ff ff               	lea eax, [ebx - 0x2ad6]
0x804a22a:   50                              	push eax
0x804a22b:   52                              	push edx
0x804a22c:   e8 46 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a231:   83 c4 10                        	add esp, 0x10
0x804a234:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804a23b:   0f be c0                        	movsx eax, al
0x804a23e:   83 ec 04                        	sub esp, 4
0x804a241:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a244:   8d 93 2e d5 ff ff               	lea edx, [ebx - 0x2ad2]
0x804a24a:   52                              	push edx
0x804a24b:   50                              	push eax
0x804a24c:   e8 26 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a251:   83 c4 10                        	add esp, 0x10
0x804a254:   0f b6 83 29 00 00 00            	movzx eax, byte ptr [ebx + 0x29]
0x804a25b:   0f b6 c0                        	movzx eax, al
0x804a25e:   83 ec 04                        	sub esp, 4
0x804a261:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a264:   8d 93 32 d5 ff ff               	lea edx, [ebx - 0x2ace]
0x804a26a:   52                              	push edx
0x804a26b:   50                              	push eax
0x804a26c:   e8 06 f3 ff ff                  	call 0x8049577 <transparent_crc>
0x804a271:   83 c4 10                        	add esp, 0x10
0x804a274:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804a27a:   83 ec 04                        	sub esp, 4
0x804a27d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a280:   8d 93 37 d5 ff ff               	lea edx, [ebx - 0x2ac9]
0x804a286:   52                              	push edx
0x804a287:   50                              	push eax
0x804a288:   e8 ea f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a28d:   83 c4 10                        	add esp, 0x10
0x804a290:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804a296:   89 c2                           	mov edx, eax
0x804a298:   83 ec 04                        	sub esp, 4
0x804a29b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a29e:   8d 83 3c d5 ff ff               	lea eax, [ebx - 0x2ac4]
0x804a2a4:   50                              	push eax
0x804a2a5:   52                              	push edx
0x804a2a6:   e8 cc f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2ab:   83 c4 10                        	add esp, 0x10
0x804a2ae:   8b 83 84 04 00 00               	mov eax, dword ptr [ebx + 0x484]
0x804a2b4:   83 ec 04                        	sub esp, 4
0x804a2b7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2ba:   8d 93 41 d5 ff ff               	lea edx, [ebx - 0x2abf]
0x804a2c0:   52                              	push edx
0x804a2c1:   50                              	push eax
0x804a2c2:   e8 b0 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2c7:   83 c4 10                        	add esp, 0x10
0x804a2ca:   0f b6 83 34 00 00 00            	movzx eax, byte ptr [ebx + 0x34]
0x804a2d1:   0f be c0                        	movsx eax, al
0x804a2d4:   83 ec 04                        	sub esp, 4
0x804a2d7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2da:   8d 93 46 d5 ff ff               	lea edx, [ebx - 0x2aba]
0x804a2e0:   52                              	push edx
0x804a2e1:   50                              	push eax
0x804a2e2:   e8 90 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a2e7:   83 c4 10                        	add esp, 0x10
0x804a2ea:   0f b7 83 36 00 00 00            	movzx eax, word ptr [ebx + 0x36]
0x804a2f1:   0f b7 c0                        	movzx eax, ax
0x804a2f4:   83 ec 04                        	sub esp, 4
0x804a2f7:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a2fa:   8d 93 4b d5 ff ff               	lea edx, [ebx - 0x2ab5]
0x804a300:   52                              	push edx
0x804a301:   50                              	push eax
0x804a302:   e8 70 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a307:   83 c4 10                        	add esp, 0x10
0x804a30a:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804a311:   0f b6 c0                        	movzx eax, al
0x804a314:   83 ec 04                        	sub esp, 4
0x804a317:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a31a:   8d 93 50 d5 ff ff               	lea edx, [ebx - 0x2ab0]
0x804a320:   52                              	push edx
0x804a321:   50                              	push eax
0x804a322:   e8 50 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a327:   83 c4 10                        	add esp, 0x10
0x804a32a:   0f b7 83 3a 00 00 00            	movzx eax, word ptr [ebx + 0x3a]
0x804a331:   0f b7 c0                        	movzx eax, ax
0x804a334:   83 ec 04                        	sub esp, 4
0x804a337:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a33a:   8d 93 55 d5 ff ff               	lea edx, [ebx - 0x2aab]
0x804a340:   52                              	push edx
0x804a341:   50                              	push eax
0x804a342:   e8 30 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a347:   83 c4 10                        	add esp, 0x10
0x804a34a:   0f b7 83 3c 00 00 00            	movzx eax, word ptr [ebx + 0x3c]
0x804a351:   0f b7 c0                        	movzx eax, ax
0x804a354:   83 ec 04                        	sub esp, 4
0x804a357:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a35a:   8d 93 5b d5 ff ff               	lea edx, [ebx - 0x2aa5]
0x804a360:   52                              	push edx
0x804a361:   50                              	push eax
0x804a362:   e8 10 f2 ff ff                  	call 0x8049577 <transparent_crc>
0x804a367:   83 c4 10                        	add esp, 0x10
0x804a36a:   0f b7 83 3e 00 00 00            	movzx eax, word ptr [ebx + 0x3e]
0x804a371:   0f b7 c0                        	movzx eax, ax
0x804a374:   83 ec 04                        	sub esp, 4
0x804a377:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a37a:   8d 93 61 d5 ff ff               	lea edx, [ebx - 0x2a9f]
0x804a380:   52                              	push edx
0x804a381:   50                              	push eax
0x804a382:   e8 f0 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a387:   83 c4 10                        	add esp, 0x10
0x804a38a:   0f b7 83 40 00 00 00            	movzx eax, word ptr [ebx + 0x40]
0x804a391:   0f b7 c0                        	movzx eax, ax
0x804a394:   83 ec 04                        	sub esp, 4
0x804a397:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a39a:   8d 93 67 d5 ff ff               	lea edx, [ebx - 0x2a99]
0x804a3a0:   52                              	push edx
0x804a3a1:   50                              	push eax
0x804a3a2:   e8 d0 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a3a7:   83 c4 10                        	add esp, 0x10
0x804a3aa:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804a3b0:   89 c2                           	mov edx, eax
0x804a3b2:   83 ec 04                        	sub esp, 4
0x804a3b5:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3b8:   8d 83 6d d5 ff ff               	lea eax, [ebx - 0x2a93]
0x804a3be:   50                              	push eax
0x804a3bf:   52                              	push edx
0x804a3c0:   e8 b2 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a3c5:   83 c4 10                        	add esp, 0x10
0x804a3c8:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804a3ce:   89 c2                           	mov edx, eax
0x804a3d0:   83 ec 04                        	sub esp, 4
0x804a3d3:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3d6:   8d 83 73 d5 ff ff               	lea eax, [ebx - 0x2a8d]
0x804a3dc:   50                              	push eax
0x804a3dd:   52                              	push edx
0x804a3de:   e8 94 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a3e3:   83 c4 10                        	add esp, 0x10
0x804a3e6:   8b 83 4c 00 00 00               	mov eax, dword ptr [ebx + 0x4c]
0x804a3ec:   89 c2                           	mov edx, eax
0x804a3ee:   83 ec 04                        	sub esp, 4
0x804a3f1:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a3f4:   8d 83 79 d5 ff ff               	lea eax, [ebx - 0x2a87]
0x804a3fa:   50                              	push eax
0x804a3fb:   52                              	push edx
0x804a3fc:   e8 76 f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a401:   83 c4 10                        	add esp, 0x10
0x804a404:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804a40a:   83 ec 04                        	sub esp, 4
0x804a40d:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a410:   8d 93 7f d5 ff ff               	lea edx, [ebx - 0x2a81]
0x804a416:   52                              	push edx
0x804a417:   50                              	push eax
0x804a418:   e8 5a f1 ff ff                  	call 0x8049577 <transparent_crc>
0x804a41d:   83 c4 10                        	add esp, 0x10
0x804a420:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804a426:   f7 d0                           	not eax
0x804a428:   83 ec 08                        	sub esp, 8
0x804a42b:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804a42e:   50                              	push eax
0x804a42f:   e8 32 e0 ff ff                  	call 0x8048466 <platform_main_end>
0x804a434:   83 c4 10                        	add esp, 0x10
0x804a437:   b8 00 00 00 00                  	mov eax, 0
0x804a43c:   8d 65 f8                        	lea esp, [ebp - 8]
0x804a43f:   59                              	pop ecx
0x804a440:   5b                              	pop ebx
0x804a441:   5d                              	pop ebp
0x804a442:   8d 61 fc                        	lea esp, [ecx - 4]
0x804a445:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804a446 -- 0x804a44a
0x804a446:   8b 04 24                        	mov eax, dword ptr [esp]
0x804a449:   c3                              	ret 
; data inside code section at 0x804a44a -- 0x804a450
0x804a44a:   66 90 66 90 66 90                                  |f.f.f.          |
; function: __libc_csu_init at 0x804a450 -- 0x804a4ad
0x804a450:   55                              	push ebp
0x804a451:   57                              	push edi
0x804a452:   56                              	push esi
0x804a453:   53                              	push ebx
0x804a454:   e8 37 df ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a459:   81 c3 a7 2b 00 00               	add ebx, 0x2ba7
0x804a45f:   83 ec 0c                        	sub esp, 0xc
0x804a462:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804a466:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804a46c:   e8 5b de ff ff                  	call 0x80482cc <_init>
0x804a471:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804a477:   29 c6                           	sub esi, eax
0x804a479:   c1 fe 02                        	sar esi, 2
0x804a47c:   85 f6                           	test esi, esi
0x804a47e:   74 25                           	je 0x804a4a5 <__libc_csu_init+0x55>
0x804a480:   31 ff                           	xor edi, edi
0x804a482:   8d b6 00 00 00 00               	lea esi, [esi]
0x804a488:   83 ec 04                        	sub esp, 4
0x804a48b:   55                              	push ebp
0x804a48c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a490:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804a494:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804a49b:   83 c7 01                        	add edi, 1
0x804a49e:   83 c4 10                        	add esp, 0x10
0x804a4a1:   39 fe                           	cmp esi, edi
0x804a4a3:   75 e3                           	jne 0x804a488 <__libc_csu_init+0x38>
0x804a4a5:   83 c4 0c                        	add esp, 0xc
0x804a4a8:   5b                              	pop ebx
0x804a4a9:   5e                              	pop esi
0x804a4aa:   5f                              	pop edi
0x804a4ab:   5d                              	pop ebp
0x804a4ac:   c3                              	ret 
; data inside code section at 0x804a4ad -- 0x804a4b0
0x804a4ad:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804a4b0 -- 0x804a4b2
0x804a4b0:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804a4b4 -- 0x804a4c8
0x804a4b4:   53                              	push ebx
0x804a4b5:   83 ec 08                        	sub esp, 8
0x804a4b8:   e8 d3 de ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804a4bd:   81 c3 43 2b 00 00               	add ebx, 0x2b43
0x804a4c3:   83 c4 08                        	add esp, 8
0x804a4c6:   5b                              	pop ebx
0x804a4c7:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 cc a4 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc cf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c d0 04 08 07 01 00 00  10 d0 04 08 07 02 00 00   |................|
0x80482c4:   14 d0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804a4c8:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804a4d8:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804a4e8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804a4f8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804a508:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804a518:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804a528:   31 00 67 5f 33 00 67 5f  38 00 67 5f 31 33 00 67   |1.g_3.g_8.g_13.g|
0x804a538:   5f 31 36 00 67 5f 33 33  00 67 5f 33 34 00 67 5f   |_16.g_33.g_34.g_|
0x804a548:   34 39 00 67 5f 35 34 00  67 5f 37 37 00 67 5f 31   |49.g_54.g_77.g_1|
0x804a558:   37 39 00 67 5f 31 39 34  00 67 5f 32 32 36 00 67   |79.g_194.g_226.g|
0x804a568:   5f 32 35 31 00 67 5f 32  38 34 00 67 5f 32 38 35   |_251.g_284.g_285|
0x804a578:   00 67 5f 32 38 36 00 67  5f 32 38 37 00 00 00 00   |.g_286.g_287....|
0x804a588:   00 00 00 3f ff ff ff 7e  00 00 80 0d 00 00 80 31   |...?...~.......1|
0x804a598:   ff ff 7f 3f 00 00 00 27  00 00 80 71 ff ff ff 34   |...?...'...q...4|
0x804a5a8:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804a5b8:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804a5c8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804a5d8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804a5e8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804a5f0:   01 1b 03 3b b0 02 00 00  55 00 00 00 00 dd ff ff   |...;....U.......|
0x804a600:   e0 02 00 00 40 dd ff ff  04 03 00 00 90 dd ff ff   |....@...........|
0x804a610:   cc 02 00 00 66 de ff ff  18 03 00 00 76 de ff ff   |....f.......v...|
0x804a620:   38 03 00 00 a4 de ff ff  5c 03 00 00 c2 de ff ff   |8.......\.......|
0x804a630:   7c 03 00 00 ea de ff ff  9c 03 00 00 14 df ff ff   ||...............|
0x804a640:   bc 03 00 00 3d df ff ff  dc 03 00 00 80 df ff ff   |....=...........|
0x804a650:   fc 03 00 00 c1 df ff ff  1c 04 00 00 19 e0 ff ff   |................|
0x804a660:   40 04 00 00 6b e0 ff ff  64 04 00 00 a8 e0 ff ff   |@...k...d.......|
0x804a670:   84 04 00 00 df e0 ff ff  a4 04 00 00 fe e0 ff ff   |................|
0x804a680:   c4 04 00 00 28 e1 ff ff  e4 04 00 00 54 e1 ff ff   |....(.......T...|
0x804a690:   04 05 00 00 7f e1 ff ff  24 05 00 00 c8 e1 ff ff   |........$.......|
0x804a6a0:   44 05 00 00 0f e2 ff ff  64 05 00 00 69 e2 ff ff   |D.......d...i...|
0x804a6b0:   88 05 00 00 bd e2 ff ff  ac 05 00 00 fc e2 ff ff   |................|
0x804a6c0:   cc 05 00 00 35 e3 ff ff  ec 05 00 00 57 e3 ff ff   |....5.......W...|
0x804a6d0:   0c 06 00 00 a5 e3 ff ff  2c 06 00 00 e1 e3 ff ff   |........,.......|
0x804a6e0:   4c 06 00 00 6a e4 ff ff  6c 06 00 00 9c e4 ff ff   |L...j...l.......|
0x804a6f0:   8c 06 00 00 cc e4 ff ff  ac 06 00 00 11 e5 ff ff   |................|
0x804a700:   cc 06 00 00 50 e5 ff ff  ec 06 00 00 82 e5 ff ff   |....P...........|
0x804a710:   0c 07 00 00 ae e5 ff ff  2c 07 00 00 cc e5 ff ff   |........,.......|
0x804a720:   4c 07 00 00 f4 e5 ff ff  6c 07 00 00 19 e6 ff ff   |L.......l.......|
0x804a730:   8c 07 00 00 3e e6 ff ff  ac 07 00 00 75 e6 ff ff   |....>.......u...|
0x804a740:   cc 07 00 00 a9 e6 ff ff  ec 07 00 00 fb e6 ff ff   |................|
0x804a750:   10 08 00 00 47 e7 ff ff  34 08 00 00 7e e7 ff ff   |....G...4...~...|
0x804a760:   54 08 00 00 af e7 ff ff  74 08 00 00 ce e7 ff ff   |T.......t.......|
0x804a770:   94 08 00 00 f8 e7 ff ff  b4 08 00 00 20 e8 ff ff   |............ ...|
0x804a780:   d4 08 00 00 49 e8 ff ff  f4 08 00 00 85 e8 ff ff   |....I...........|
0x804a790:   14 09 00 00 bf e8 ff ff  34 09 00 00 12 e9 ff ff   |........4.......|
0x804a7a0:   58 09 00 00 5f e9 ff ff  7c 09 00 00 97 e9 ff ff   |X..._...|.......|
0x804a7b0:   9c 09 00 00 c9 e9 ff ff  bc 09 00 00 dd e9 ff ff   |................|
0x804a7c0:   dc 09 00 00 f4 e9 ff ff  fc 09 00 00 09 ea ff ff   |................|
0x804a7d0:   1c 0a 00 00 1f ea ff ff  3c 0a 00 00 46 ea ff ff   |........<...F...|
0x804a7e0:   5c 0a 00 00 6b ea ff ff  7c 0a 00 00 aa ea ff ff   |\...k...|.......|
0x804a7f0:   9c 0a 00 00 e3 ea ff ff  bc 0a 00 00 0f eb ff ff   |................|
0x804a800:   dc 0a 00 00 35 eb ff ff  fc 0a 00 00 77 eb ff ff   |....5.......w...|
0x804a810:   1c 0b 00 00 b9 eb ff ff  3c 0b 00 00 fb eb ff ff   |........<.......|
0x804a820:   5c 0b 00 00 70 ec ff ff  7c 0b 00 00 cd ec ff ff   |\...p...|.......|
0x804a830:   9c 0b 00 00 2a ed ff ff  bc 0b 00 00 87 ed ff ff   |....*...........|
0x804a840:   dc 0b 00 00 17 ee ff ff  fc 0b 00 00 7b ee ff ff   |............{...|
0x804a850:   1c 0c 00 00 eb ee ff ff  3c 0c 00 00 32 ef ff ff   |........<...2...|
0x804a860:   60 0c 00 00 87 ef ff ff  80 0c 00 00 ce ef ff ff   |`...............|
0x804a870:   a4 0c 00 00 36 f0 ff ff  c8 0c 00 00 5c f1 ff ff   |....6.......\...|
0x804a880:   f8 0c 00 00 c6 fb ff ff  28 0d 00 00 56 fe ff ff   |........(...V...|
0x804a890:   60 0d 00 00 60 fe ff ff  74 0d 00 00 c0 fe ff ff   |`...`...t.......|
0x804a8a0:   c0 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804a8a4:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a8b4:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a8c4:   bc da ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804a8d4:   30 00 00 00 18 da ff ff  40 00 00 00 00 0e 08 46   |0.......@......F|
0x804a8e4:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804a8f4:   10 00 00 00 54 00 00 00  34 da ff ff 08 00 00 00   |....T...4.......|
0x804a904:   00 00 00 00 1c 00 00 00  68 00 00 00 46 db ff ff   |........h...F...|
0x804a914:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804a924:   04 04 00 00 20 00 00 00  88 00 00 00 36 db ff ff   |.... .......6...|
0x804a934:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804a944:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804a954:   40 db ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |@........A....B.|
0x804a964:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804a974:   3e db ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |>...(....A....B.|
0x804a984:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804a994:   46 db ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |F...*....A....B.|
0x804a9a4:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804a9b4:   50 db ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |P...)....A....B.|
0x804a9c4:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804a9d4:   59 db ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |Y...C....A....B.|
0x804a9e4:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804a9f4:   7c db ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   ||...A....A....B.|
0x804aa04:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804aa14:   9d db ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804aa24:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804aa34:   90 01 00 00 d1 db ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804aa44:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804aa54:   1c 00 00 00 b4 01 00 00  ff db ff ff 3d 00 00 00   |............=...|
0x804aa64:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804aa74:   1c 00 00 00 d4 01 00 00  1c dc ff ff 37 00 00 00   |............7...|
0x804aa84:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804aa94:   1c 00 00 00 f4 01 00 00  33 dc ff ff 1f 00 00 00   |........3.......|
0x804aaa4:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804aab4:   1c 00 00 00 14 02 00 00  32 dc ff ff 2a 00 00 00   |........2...*...|
0x804aac4:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804aad4:   1c 00 00 00 34 02 00 00  3c dc ff ff 2c 00 00 00   |....4...<...,...|
0x804aae4:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804aaf4:   1c 00 00 00 54 02 00 00  48 dc ff ff 2b 00 00 00   |....T...H...+...|
0x804ab04:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804ab14:   1c 00 00 00 74 02 00 00  53 dc ff ff 49 00 00 00   |....t...S...I...|
0x804ab24:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804ab34:   1c 00 00 00 94 02 00 00  7c dc ff ff 47 00 00 00   |........|...G...|
0x804ab44:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804ab54:   20 00 00 00 b4 02 00 00  a3 dc ff ff 5a 00 00 00   | ...........Z...|
0x804ab64:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804ab74:   c5 0c 04 04 20 00 00 00  d8 02 00 00 d9 dc ff ff   |.... ...........|
0x804ab84:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804ab94:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804aba4:   09 dd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804abb4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804abc4:   28 dd ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |(...9....A....B.|
0x804abd4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804abe4:   41 dd ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |A..."....A....B.|
0x804abf4:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804ac04:   43 dd ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |C...N....A....B.|
0x804ac14:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804ac24:   71 dd ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |q...<....A....B.|
0x804ac34:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804ac44:   8d dd ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804ac54:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804ac64:   f6 dd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804ac74:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804ac84:   08 de ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |....0....A....B.|
0x804ac94:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804aca4:   18 de ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |....E....A....B.|
0x804acb4:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804acc4:   3d de ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |=...?....A....B.|
0x804acd4:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804ace4:   5c de ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |\...2....A....B.|
0x804acf4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804ad04:   6e de ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |n...,....A....B.|
0x804ad14:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804ad24:   7a de ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |z........A....B.|
0x804ad34:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804ad44:   78 de ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |x...(....A....B.|
0x804ad54:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804ad64:   80 de ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ad74:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804ad84:   85 de ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804ad94:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804ada4:   8a de ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804adb4:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804adc4:   a1 de ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804add4:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804ade4:   b5 de ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804adf4:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804ae04:   60 05 00 00 e3 de ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804ae14:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804ae24:   1c 00 00 00 84 05 00 00  0b df ff ff 37 00 00 00   |............7...|
0x804ae34:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804ae44:   1c 00 00 00 a4 05 00 00  22 df ff ff 31 00 00 00   |........"...1...|
0x804ae54:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804ae64:   1c 00 00 00 c4 05 00 00  33 df ff ff 1f 00 00 00   |........3.......|
0x804ae74:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804ae84:   1c 00 00 00 e4 05 00 00  32 df ff ff 2a 00 00 00   |........2...*...|
0x804ae94:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804aea4:   1c 00 00 00 04 06 00 00  3c df ff ff 28 00 00 00   |........<...(...|
0x804aeb4:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804aec4:   1c 00 00 00 24 06 00 00  44 df ff ff 29 00 00 00   |....$...D...)...|
0x804aed4:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804aee4:   1c 00 00 00 44 06 00 00  4d df ff ff 3c 00 00 00   |....D...M...<...|
0x804aef4:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804af04:   1c 00 00 00 64 06 00 00  69 df ff ff 3a 00 00 00   |....d...i...:...|
0x804af14:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804af24:   20 00 00 00 84 06 00 00  83 df ff ff 53 00 00 00   | ...........S...|
0x804af34:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804af44:   c5 0c 04 04 20 00 00 00  a8 06 00 00 b2 df ff ff   |.... ...........|
0x804af54:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804af64:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804af74:   db df ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804af84:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804af94:   f3 df ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804afa4:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804afb4:   05 e0 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804afc4:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804afd4:   f9 df ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804afe4:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804aff4:   f0 df ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b004:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804b014:   e5 df ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b024:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804b034:   db df ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804b044:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804b054:   e2 df ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804b064:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804b074:   e7 df ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804b084:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804b094:   06 e0 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804b0a4:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804b0b4:   1f e0 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804b0c4:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804b0d4:   2b e0 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |+...&....A....B.|
0x804b0e4:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804b0f4:   31 e0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |1...B....A....B.|
0x804b104:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804b114:   53 e0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |S...B....A....B.|
0x804b124:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804b134:   75 e0 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |u...B....A....B.|
0x804b144:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804b154:   97 e0 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804b164:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804b174:   ec e0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804b184:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804b194:   29 e1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |)...]....A....B.|
0x804b1a4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804b1b4:   66 e1 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |f...]....A....B.|
0x804b1c4:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804b1d4:   a3 e1 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804b1e4:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804b1f4:   13 e2 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |....d....A....B.|
0x804b204:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804b214:   57 e2 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |W...p....A....B.|
0x804b224:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804b234:   a7 e2 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804b244:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804b254:   b0 09 00 00 ca e2 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804b264:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804b274:   d0 09 00 00 ff e2 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804b284:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804b294:   20 00 00 00 f4 09 00 00  22 e3 ff ff 68 00 00 00   | ......."...h...|
0x804b2a4:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804b2b4:   0c 04 04 00 2c 00 00 00  18 0a 00 00 66 e3 ff ff   |....,.......f...|
0x804b2c4:   26 01 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |&....A....B..F..|
0x804b2d4:   86 04 83 05 03 19 01 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804b2e4:   04 00 00 00 2c 00 00 00  48 0a 00 00 5c e4 ff ff   |....,...H...\...|
0x804b2f4:   6a 0a 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |j....A....B..I..|
0x804b304:   86 04 83 05 03 5a 0a c3  41 c6 41 c7 41 c5 0c 04   |.....Z..A.A.A...|
0x804b314:   04 00 00 00 34 00 00 00  78 0a 00 00 96 ee ff ff   |....4...x.......|
0x804b324:   90 02 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |.....D...G...u.D|
0x804b334:   0f 03 75 78 06 10 03 02  75 7c 03 7b 02 c1 0c 01   |..ux....u|.{....|
0x804b344:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804b354:   b0 0a 00 00 ee f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804b364:   48 00 00 00 c4 0a 00 00  e4 f0 ff ff 5d 00 00 00   |H...........]...|
0x804b374:   00 41 0e 08 85 02 41 0e  0c 87 03 41 0e 10 86 04   |.A....A....A....|
0x804b384:   41 0e 14 83 05 4e 0e 20  69 0e 24 41 0e 28 44 0e   |A....N. i.$A.(D.|
0x804b394:   2c 44 0e 30 4d 0e 20 47  0e 14 41 c3 0e 10 41 c6   |,D.0M. G..A...A.|
0x804b3a4:   0e 0c 41 c7 0e 08 41 c5  0e 04 00 00 10 00 00 00   |..A...A.........|
0x804b3b4:   10 0b 00 00 f8 f0 ff ff  02 00 00 00 00 00 00 00   |................|
0x804b3c4:   00 00 00 00 ??                                     |....?           |
; section: .init_array
0x804cf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804cf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804cf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804cf24:   0d 00 00 00 b4 a4 04 08  19 00 00 00 0c cf 04 08   |................|
0x804cf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 cf 04 08   |................|
0x804cf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804cf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804cf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804cf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 d0 04 08   |................|
0x804cf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804cf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804cfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804cfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804cfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804cfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804cff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804cffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804d000:   14 cf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804d010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804d018:   00 00 00 00 00 00 00 00  ff ff ff ff 09 00 00 00   |................|
0x804d028:   f6 a4 00 00 cf 9e 03 4c  9c c5 55 ed be 00 01 00   |.......L..U.....|
0x804d038:   fa 00 01 00 a1 81 2a e0  3c 35 00 00 01 00 00 00   |......*.<5......|
0x804d048:   ff ff ff ff ff ff ff ff  dc 54 51 e9 ??            |.........TQ.?   |
