;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 17:01:27
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                              	push ebx
0x80482cd:   83 ec 08                        	sub esp, 8
0x80482d0:   e8 bb 00 00 00                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 5d 00 00               	add ebx, 0x5d2b
0x80482db:   8b 83 fc ff ff ff               	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                           	test eax, eax
0x80482e3:   74 05                           	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00                  	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08                        	add esp, 8
0x80482ed:   5b                              	pop ebx
0x80482ee:   c3                              	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 e0 04 08 ff 25  08 e0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c e0 04 08               	jmp dword ptr [0x804e00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 e0 04 08               	jmp dword ptr [0x804e010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 e0 04 08               	jmp dword ptr [0x804e014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc df 04 08               	jmp dword ptr [0x804dffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                           	xor ebp, ebp
0x8048342:   5e                              	pop esi
0x8048343:   89 e1                           	mov ecx, esp
0x8048345:   83 e4 f0                        	and esp, 0xfffffff0
0x8048348:   50                              	push eax
0x8048349:   54                              	push esp
0x804834a:   52                              	push edx
0x804834b:   e8 23 00 00 00                  	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 5c 00 00               	add ebx, 0x5cb0
0x8048356:   8d 83 30 d5 ff ff               	lea eax, [ebx - 0x2ad0]
0x804835c:   50                              	push eax
0x804835d:   8d 83 d0 d4 ff ff               	lea eax, [ebx - 0x2b30]
0x8048363:   50                              	push eax
0x8048364:   51                              	push ecx
0x8048365:   56                              	push esi
0x8048366:   c7 c0 55 b0 04 08               	mov eax, 0x804b055
0x804836c:   50                              	push eax
0x804836d:   e8 ae ff ff ff                  	call 0x8048320 <__libc_start_main>
0x8048372:   f4                              	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048376:   c3                              	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                           	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24                        	mov ebx, dword ptr [esp]
0x8048393:   c3                              	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 84 e0 04 08                  	mov eax, 0x804e084
0x80483a5:   3d 84 e0 04 08                  	cmp eax, 0x804e084
0x80483aa:   74 24                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00                  	mov eax, 0
0x80483b1:   85 c0                           	test eax, eax
0x80483b3:   74 1b                           	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                              	push ebp
0x80483b6:   89 e5                           	mov ebp, esp
0x80483b8:   83 ec 14                        	sub esp, 0x14
0x80483bb:   68 84 e0 04 08                  	push 0x804e084
0x80483c0:   ff d0                           	call eax
0x80483c2:   83 c4 10                        	add esp, 0x10
0x80483c5:   c9                              	leave 
0x80483c6:   c3                              	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                           	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 84 e0 04 08                  	mov eax, 0x804e084
0x80483e5:   2d 84 e0 04 08                  	sub eax, 0x804e084
0x80483ea:   c1 f8 02                        	sar eax, 2
0x80483ed:   89 c2                           	mov edx, eax
0x80483ef:   c1 ea 1f                        	shr edx, 0x1f
0x80483f2:   01 d0                           	add eax, edx
0x80483f4:   d1 f8                           	sar eax, 1
0x80483f6:   74 20                           	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00                  	mov edx, 0
0x80483fd:   85 d2                           	test edx, edx
0x80483ff:   74 17                           	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                              	push ebp
0x8048402:   89 e5                           	mov ebp, esp
0x8048404:   83 ec 10                        	sub esp, 0x10
0x8048407:   50                              	push eax
0x8048408:   68 84 e0 04 08                  	push 0x804e084
0x804840d:   ff d2                           	call edx
0x804840f:   83 c4 10                        	add esp, 0x10
0x8048412:   c9                              	leave 
0x8048413:   c3                              	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                           	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d a0 e0 04 08 00            	cmp byte ptr [0x804e0a0], 0
0x8048427:   75 17                           	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                              	push ebp
0x804842a:   89 e5                           	mov ebp, esp
0x804842c:   83 ec 08                        	sub esp, 8
0x804842f:   e8 6c ff ff ff                  	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 a0 e0 04 08 01            	mov byte ptr [0x804e0a0], 1
0x804843b:   c9                              	leave 
0x804843c:   c3                              	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                           	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                              	push ebp
0x8048451:   89 e5                           	mov ebp, esp
0x8048453:   5d                              	pop ebp
0x8048454:   eb 8a                           	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                              	push ebp
0x8048457:   89 e5                           	mov ebp, esp
0x8048459:   e8 65 30 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 5b 00 00                  	add eax, 0x5ba2
0x8048463:   90                              	nop 
0x8048464:   5d                              	pop ebp
0x8048465:   c3                              	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                              	push ebp
0x8048467:   89 e5                           	mov ebp, esp
0x8048469:   53                              	push ebx
0x804846a:   83 ec 04                        	sub esp, 4
0x804846d:   e8 51 30 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 5b 00 00                  	add eax, 0x5b8e
0x8048477:   83 ec 08                        	sub esp, 8
0x804847a:   ff 75 08                        	push dword ptr [ebp + 8]
0x804847d:   8d 90 50 d5 ff ff               	lea edx, [eax - 0x2ab0]
0x8048483:   52                              	push edx
0x8048484:   89 c3                           	mov ebx, eax
0x8048486:   e8 85 fe ff ff                  	call 0x8048310 <printf>
0x804848b:   83 c4 10                        	add esp, 0x10
0x804848e:   90                              	nop 
0x804848f:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                              	leave 
0x8048493:   c3                              	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                              	push ebp
0x8048495:   89 e5                           	mov ebp, esp
0x8048497:   83 ec 04                        	sub esp, 4
0x804849a:   e8 24 30 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804849f:   05 61 5b 00 00                  	add eax, 0x5b61
0x80484a4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                           	neg eax
0x80484b0:   c9                              	leave 
0x80484b1:   c3                              	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                              	push ebp
0x80484b3:   89 e5                           	mov ebp, esp
0x80484b5:   83 ec 08                        	sub esp, 8
0x80484b8:   e8 06 30 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 5b 00 00                  	add eax, 0x5b43
0x80484c2:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                           	add eax, edx
0x80484d8:   c9                              	leave 
0x80484d9:   c3                              	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                              	push ebp
0x80484db:   89 e5                           	mov ebp, esp
0x80484dd:   83 ec 08                        	sub esp, 8
0x80484e0:   e8 de 2f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 5b 00 00                  	add eax, 0x5b1b
0x80484ea:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                           	sub edx, eax
0x8048500:   89 d0                           	mov eax, edx
0x8048502:   c9                              	leave 
0x8048503:   c3                              	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                              	push ebp
0x8048505:   89 e5                           	mov ebp, esp
0x8048507:   83 ec 08                        	sub esp, 8
0x804850a:   e8 b4 2f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 5a 00 00                  	add eax, 0x5af1
0x8048514:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2                        	imul eax, edx
0x804852b:   c9                              	leave 
0x804852c:   c3                              	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                              	push ebp
0x804852e:   89 e5                           	mov ebp, esp
0x8048530:   83 ec 08                        	sub esp, 8
0x8048533:   e8 8b 2f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 5a 00 00                  	add eax, 0x5ac8
0x804853d:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                           	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                           	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                              	cdq 
0x8048564:   f7 f9                           	idiv ecx
0x8048566:   89 d0                           	mov eax, edx
0x8048568:   eb 04                           	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                              	leave 
0x804856f:   c3                              	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                              	push ebp
0x8048571:   89 e5                           	mov ebp, esp
0x8048573:   83 ec 08                        	sub esp, 8
0x8048576:   e8 48 2f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804857b:   05 85 5a 00 00                  	add eax, 0x5a85
0x8048580:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80                     	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                           	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff                     	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                           	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc                     	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8                     	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                              	cdq 
0x80485a7:   f7 f9                           	idiv ecx
0x80485a9:   eb 04                           	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                              	leave 
0x80485b0:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                              	push ebp
0x80485b2:   89 e5                           	mov ebp, esp
0x80485b4:   53                              	push ebx
0x80485b5:   83 ec 04                        	sub esp, 4
0x80485b8:   e8 06 2f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 5a 00 00                  	add eax, 0x5a43
0x80485c2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                           	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x80485e6:   89 c1                           	mov ecx, eax
0x80485e8:   d3 fb                           	sar ebx, cl
0x80485ea:   89 d8                           	mov eax, ebx
0x80485ec:   39 c2                           	cmp edx, eax
0x80485ee:   7f 0f                           	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                           	mov ecx, eax
0x80485f9:   d3 e2                           	shl edx, cl
0x80485fb:   89 d0                           	mov eax, edx
0x80485fd:   eb 04                           	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04                        	add esp, 4
0x8048606:   5b                              	pop ebx
0x8048607:   5d                              	pop ebp
0x8048608:   c3                              	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                              	push ebp
0x804860a:   89 e5                           	mov ebp, esp
0x804860c:   53                              	push ebx
0x804860d:   83 ec 04                        	sub esp, 4
0x8048610:   e8 ae 2e 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 59 00 00                  	add eax, 0x59eb
0x804861a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                           	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                           	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00                  	mov ebx, 0x7f
0x8048638:   89 c1                           	mov ecx, eax
0x804863a:   d3 fb                           	sar ebx, cl
0x804863c:   89 d8                           	mov eax, ebx
0x804863e:   39 c2                           	cmp edx, eax
0x8048640:   7f 0f                           	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8                     	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                           	mov ecx, eax
0x804864b:   d3 e2                           	shl edx, cl
0x804864d:   89 d0                           	mov eax, edx
0x804864f:   eb 04                           	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04                        	add esp, 4
0x8048658:   5b                              	pop ebx
0x8048659:   5d                              	pop ebp
0x804865a:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                              	push ebp
0x804865c:   89 e5                           	mov ebp, esp
0x804865e:   83 ec 04                        	sub esp, 4
0x8048661:   e8 5d 2e 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 59 00 00                  	add eax, 0x599a
0x804866b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                           	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                           	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                           	mov ecx, eax
0x804868c:   d3 fa                           	sar edx, cl
0x804868e:   89 d0                           	mov eax, edx
0x8048690:   eb 04                           	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                              	leave 
0x8048697:   c3                              	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                              	push ebp
0x8048699:   89 e5                           	mov ebp, esp
0x804869b:   83 ec 04                        	sub esp, 4
0x804869e:   e8 20 2e 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 59 00 00                  	add eax, 0x595d
0x80486a8:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00                     	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                           	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                           	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc                     	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                           	mov ecx, eax
0x80486c3:   d3 fa                           	sar edx, cl
0x80486c5:   89 d0                           	mov eax, edx
0x80486c7:   eb 04                           	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                              	leave 
0x80486ce:   c3                              	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                              	push ebp
0x80486d0:   89 e5                           	mov ebp, esp
0x80486d2:   83 ec 04                        	sub esp, 4
0x80486d5:   e8 e9 2d 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80486da:   05 26 59 00 00                  	add eax, 0x5926
0x80486df:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                           	neg eax
0x80486ec:   c9                              	leave 
0x80486ed:   c3                              	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                              	push ebp
0x80486ef:   89 e5                           	mov ebp, esp
0x80486f1:   83 ec 08                        	sub esp, 8
0x80486f4:   e8 ca 2d 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 59 00 00                  	add eax, 0x5907
0x80486fe:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                           	add eax, edx
0x8048716:   c9                              	leave 
0x8048717:   c3                              	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                              	push ebp
0x8048719:   89 e5                           	mov ebp, esp
0x804871b:   83 ec 08                        	sub esp, 8
0x804871e:   e8 a0 2d 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 58 00 00                  	add eax, 0x58dd
0x8048728:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                           	sub edx, eax
0x8048740:   89 d0                           	mov eax, edx
0x8048742:   c9                              	leave 
0x8048743:   c3                              	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                              	push ebp
0x8048745:   89 e5                           	mov ebp, esp
0x8048747:   83 ec 08                        	sub esp, 8
0x804874a:   e8 74 2d 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 58 00 00                  	add eax, 0x58b1
0x8048754:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2                        	imul eax, edx
0x804876d:   c9                              	leave 
0x804876e:   c3                              	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                              	push ebp
0x8048770:   89 e5                           	mov ebp, esp
0x8048772:   83 ec 08                        	sub esp, 8
0x8048775:   e8 49 2d 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804877a:   05 86 58 00 00                  	add eax, 0x5886
0x804877f:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                           	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                           	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                              	cdq 
0x80487ac:   f7 f9                           	idiv ecx
0x80487ae:   89 d0                           	mov eax, edx
0x80487b0:   eb 04                           	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                              	leave 
0x80487b7:   c3                              	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                              	push ebp
0x80487b9:   89 e5                           	mov ebp, esp
0x80487bb:   83 ec 08                        	sub esp, 8
0x80487be:   e8 00 2d 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 58 00 00                  	add eax, 0x583d
0x80487c8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80               	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                           	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff                  	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                           	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc                     	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8                     	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                              	cdq 
0x80487f5:   f7 f9                           	idiv ecx
0x80487f7:   eb 04                           	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                              	leave 
0x80487fe:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                              	push ebp
0x8048800:   89 e5                           	mov ebp, esp
0x8048802:   53                              	push ebx
0x8048803:   83 ec 04                        	sub esp, 4
0x8048806:   e8 b8 2c 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 57 00 00                  	add eax, 0x57f5
0x8048810:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                           	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x8048836:   89 c1                           	mov ecx, eax
0x8048838:   d3 fb                           	sar ebx, cl
0x804883a:   89 d8                           	mov eax, ebx
0x804883c:   39 c2                           	cmp edx, eax
0x804883e:   7f 0f                           	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                           	mov ecx, eax
0x8048849:   d3 e2                           	shl edx, cl
0x804884b:   89 d0                           	mov eax, edx
0x804884d:   eb 04                           	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04                        	add esp, 4
0x8048856:   5b                              	pop ebx
0x8048857:   5d                              	pop ebp
0x8048858:   c3                              	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                              	push ebp
0x804885a:   89 e5                           	mov ebp, esp
0x804885c:   53                              	push ebx
0x804885d:   83 ec 04                        	sub esp, 4
0x8048860:   e8 5e 2c 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 57 00 00                  	add eax, 0x579b
0x804886a:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                           	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                           	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00                  	mov ebx, 0x7fff
0x804888a:   89 c1                           	mov ecx, eax
0x804888c:   d3 fb                           	sar ebx, cl
0x804888e:   89 d8                           	mov eax, ebx
0x8048890:   39 c2                           	cmp edx, eax
0x8048892:   7f 0f                           	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8                     	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                           	mov ecx, eax
0x804889d:   d3 e2                           	shl edx, cl
0x804889f:   89 d0                           	mov eax, edx
0x80488a1:   eb 04                           	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04                        	add esp, 4
0x80488aa:   5b                              	pop ebx
0x80488ab:   5d                              	pop ebp
0x80488ac:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                              	push ebp
0x80488ae:   89 e5                           	mov ebp, esp
0x80488b0:   83 ec 04                        	sub esp, 4
0x80488b3:   e8 0b 2c 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 57 00 00                  	add eax, 0x5748
0x80488bd:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                           	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                           	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                           	mov ecx, eax
0x80488e0:   d3 fa                           	sar edx, cl
0x80488e2:   89 d0                           	mov eax, edx
0x80488e4:   eb 04                           	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                              	leave 
0x80488eb:   c3                              	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                              	push ebp
0x80488ed:   89 e5                           	mov ebp, esp
0x80488ef:   83 ec 04                        	sub esp, 4
0x80488f2:   e8 cc 2b 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 57 00 00                  	add eax, 0x5709
0x80488fc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00                  	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                           	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                           	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc                     	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                           	mov ecx, eax
0x8048919:   d3 fa                           	sar edx, cl
0x804891b:   89 d0                           	mov eax, edx
0x804891d:   eb 04                           	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                              	leave 
0x8048924:   c3                              	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                              	push ebp
0x8048926:   89 e5                           	mov ebp, esp
0x8048928:   e8 96 2b 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 56 00 00                  	add eax, 0x56d3
0x8048932:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                           	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                           	neg eax
0x8048940:   eb 03                           	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                              	pop ebp
0x8048946:   c3                              	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                              	push ebp
0x8048948:   89 e5                           	mov ebp, esp
0x804894a:   e8 74 2b 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 56 00 00                  	add eax, 0x56b1
0x8048954:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                           	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048965:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                           	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                           	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80                  	mov eax, 0x80000000
0x804897e:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                           	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                           	add eax, edx
0x804898e:   eb 03                           	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                              	pop ebp
0x8048994:   c3                              	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                              	push ebp
0x8048996:   89 e5                           	mov ebp, esp
0x8048998:   e8 26 2b 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804899d:   05 63 56 00 00                  	add eax, 0x5663
0x80489a2:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                           	mov edx, eax
0x80489aa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80                  	and eax, 0x80000000
0x80489b5:   33 45 08                        	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c                        	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                           	and eax, edx
0x80489c0:   85 c0                           	test eax, eax
0x80489c2:   78 08                           	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                           	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                              	pop ebp
0x80489d0:   c3                              	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                              	push ebp
0x80489d2:   89 e5                           	mov ebp, esp
0x80489d4:   e8 ea 2a 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 56 00 00                  	add eax, 0x5627
0x80489de:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                           	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x80489ef:   99                              	cdq 
0x80489f0:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                           	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                           	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                           	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a09:   99                              	cdq 
0x8048a0a:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                           	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                           	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80                  	mov eax, 0x80000000
0x8048a23:   99                              	cdq 
0x8048a24:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                           	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                           	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8048a43:   99                              	cdq 
0x8048a44:   f7 7d 08                        	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c                        	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                           	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                           	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                              	pop ebp
0x8048a59:   c3                              	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                              	push ebp
0x8048a5b:   89 e5                           	mov ebp, esp
0x8048a5d:   e8 61 2a 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 55 00 00                  	add eax, 0x559e
0x8048a67:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                           	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                           	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                              	cdq 
0x8048a80:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                           	mov eax, edx
0x8048a85:   eb 03                           	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                              	pop ebp
0x8048a8b:   c3                              	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                              	push ebp
0x8048a8d:   89 e5                           	mov ebp, esp
0x8048a8f:   e8 2f 2a 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 55 00 00                  	add eax, 0x556c
0x8048a99:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80            	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                           	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff                     	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                           	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                              	cdq 
0x8048ab2:   f7 7d 0c                        	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                           	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                              	pop ebp
0x8048abb:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                              	push ebp
0x8048abd:   89 e5                           	mov ebp, esp
0x8048abf:   e8 ff 29 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 55 00 00                  	add eax, 0x553c
0x8048ac9:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                           	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048ae3:   89 c1                           	mov ecx, eax
0x8048ae5:   d3 fa                           	sar edx, cl
0x8048ae7:   89 d0                           	mov eax, edx
0x8048ae9:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                           	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                           	mov ecx, eax
0x8048af6:   d3 e2                           	shl edx, cl
0x8048af8:   89 d0                           	mov eax, edx
0x8048afa:   eb 03                           	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                              	pop ebp
0x8048b00:   c3                              	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                              	push ebp
0x8048b02:   89 e5                           	mov ebp, esp
0x8048b04:   e8 ba 29 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 54 00 00                  	add eax, 0x54f7
0x8048b0e:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                           	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                           	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f                  	mov edx, 0x7fffffff
0x8048b22:   89 c1                           	mov ecx, eax
0x8048b24:   d3 fa                           	sar edx, cl
0x8048b26:   89 d0                           	mov eax, edx
0x8048b28:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                           	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                           	mov ecx, eax
0x8048b35:   d3 e2                           	shl edx, cl
0x8048b37:   89 d0                           	mov eax, edx
0x8048b39:   eb 03                           	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                              	pop ebp
0x8048b3f:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                              	push ebp
0x8048b41:   89 e5                           	mov ebp, esp
0x8048b43:   e8 7b 29 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 54 00 00                  	add eax, 0x54b8
0x8048b4d:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                           	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                           	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                           	mov ecx, eax
0x8048b67:   d3 fa                           	sar edx, cl
0x8048b69:   89 d0                           	mov eax, edx
0x8048b6b:   eb 03                           	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                              	pop ebp
0x8048b71:   c3                              	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                              	push ebp
0x8048b73:   89 e5                           	mov ebp, esp
0x8048b75:   e8 49 29 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 54 00 00                  	add eax, 0x5486
0x8048b7f:   83 7d 08 00                     	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                           	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                           	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                           	mov ecx, eax
0x8048b93:   d3 fa                           	sar edx, cl
0x8048b95:   89 d0                           	mov eax, edx
0x8048b97:   eb 03                           	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                              	pop ebp
0x8048b9d:   c3                              	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                              	push ebp
0x8048b9f:   89 e5                           	mov ebp, esp
0x8048ba1:   83 ec 04                        	sub esp, 4
0x8048ba4:   e8 1a 29 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 54 00 00                  	add eax, 0x5457
0x8048bae:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                           	neg eax
0x8048bba:   c9                              	leave 
0x8048bbb:   c3                              	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                              	push ebp
0x8048bbd:   89 e5                           	mov ebp, esp
0x8048bbf:   83 ec 08                        	sub esp, 8
0x8048bc2:   e8 fc 28 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 54 00 00                  	add eax, 0x5439
0x8048bcc:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                           	add eax, edx
0x8048be2:   c9                              	leave 
0x8048be3:   c3                              	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                              	push ebp
0x8048be5:   89 e5                           	mov ebp, esp
0x8048be7:   83 ec 08                        	sub esp, 8
0x8048bea:   e8 d4 28 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 54 00 00                  	add eax, 0x5411
0x8048bf4:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8                        	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                              	leave 
0x8048c08:   c3                              	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                              	push ebp
0x8048c0a:   89 e5                           	mov ebp, esp
0x8048c0c:   83 ec 08                        	sub esp, 8
0x8048c0f:   e8 af 28 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 53 00 00                  	add eax, 0x53ec
0x8048c19:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8                        	mul byte ptr [ebp - 8]
0x8048c2c:   c9                              	leave 
0x8048c2d:   c3                              	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                              	push ebp
0x8048c2f:   89 e5                           	mov ebp, esp
0x8048c31:   83 ec 08                        	sub esp, 8
0x8048c34:   e8 8a 28 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 53 00 00                  	add eax, 0x53c7
0x8048c3e:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                           	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0                        	movzx eax, al
0x8048c57:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4                        	movzx eax, ah
0x8048c5d:   eb 04                           	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                              	leave 
0x8048c64:   c3                              	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                              	push ebp
0x8048c66:   89 e5                           	mov ebp, esp
0x8048c68:   83 ec 08                        	sub esp, 8
0x8048c6b:   e8 53 28 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 53 00 00                  	add eax, 0x5390
0x8048c75:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc                        	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00                     	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                           	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0                        	movzx eax, al
0x8048c8e:   f6 75 f8                        	div byte ptr [ebp - 8]
0x8048c91:   eb 04                           	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                              	leave 
0x8048c98:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                              	push ebp
0x8048c9a:   89 e5                           	mov ebp, esp
0x8048c9c:   53                              	push ebx
0x8048c9d:   83 ec 04                        	sub esp, 4
0x8048ca0:   e8 1e 28 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 53 00 00                  	add eax, 0x535b
0x8048caa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                           	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048cc8:   89 c1                           	mov ecx, eax
0x8048cca:   d3 fb                           	sar ebx, cl
0x8048ccc:   89 d8                           	mov eax, ebx
0x8048cce:   39 c2                           	cmp edx, eax
0x8048cd0:   7f 0f                           	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                           	mov ecx, eax
0x8048cdb:   d3 e2                           	shl edx, cl
0x8048cdd:   89 d0                           	mov eax, edx
0x8048cdf:   eb 04                           	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04                        	add esp, 4
0x8048ce8:   5b                              	pop ebx
0x8048ce9:   5d                              	pop ebp
0x8048cea:   c3                              	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                              	push ebp
0x8048cec:   89 e5                           	mov ebp, esp
0x8048cee:   53                              	push ebx
0x8048cef:   83 ec 04                        	sub esp, 4
0x8048cf2:   e8 cc 27 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 53 00 00                  	add eax, 0x5309
0x8048cfc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8                        	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                           	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00                  	mov ebx, 0xff
0x8048d14:   89 c1                           	mov ecx, eax
0x8048d16:   d3 fb                           	sar ebx, cl
0x8048d18:   89 d8                           	mov eax, ebx
0x8048d1a:   39 c2                           	cmp edx, eax
0x8048d1c:   7f 0f                           	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8                     	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                           	mov ecx, eax
0x8048d27:   d3 e2                           	shl edx, cl
0x8048d29:   89 d0                           	mov eax, edx
0x8048d2b:   eb 04                           	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8                     	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04                        	add esp, 4
0x8048d34:   5b                              	pop ebx
0x8048d35:   5d                              	pop ebp
0x8048d36:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                              	push ebp
0x8048d38:   89 e5                           	mov ebp, esp
0x8048d3a:   83 ec 04                        	sub esp, 4
0x8048d3d:   e8 81 27 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 52 00 00                  	add eax, 0x52be
0x8048d47:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                           	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                           	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                           	mov ecx, eax
0x8048d62:   d3 fa                           	sar edx, cl
0x8048d64:   89 d0                           	mov eax, edx
0x8048d66:   eb 04                           	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                              	leave 
0x8048d6d:   c3                              	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                              	push ebp
0x8048d6f:   89 e5                           	mov ebp, esp
0x8048d71:   83 ec 04                        	sub esp, 4
0x8048d74:   e8 4a 27 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 52 00 00                  	add eax, 0x5287
0x8048d7e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc                        	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                           	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc                     	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                           	mov ecx, eax
0x8048d93:   d3 fa                           	sar edx, cl
0x8048d95:   89 d0                           	mov eax, edx
0x8048d97:   eb 04                           	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc                     	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                              	leave 
0x8048d9e:   c3                              	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                              	push ebp
0x8048da0:   89 e5                           	mov ebp, esp
0x8048da2:   83 ec 04                        	sub esp, 4
0x8048da5:   e8 19 27 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 52 00 00                  	add eax, 0x5256
0x8048daf:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                           	neg eax
0x8048dbc:   c9                              	leave 
0x8048dbd:   c3                              	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                              	push ebp
0x8048dbf:   89 e5                           	mov ebp, esp
0x8048dc1:   83 ec 08                        	sub esp, 8
0x8048dc4:   e8 fa 26 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 52 00 00                  	add eax, 0x5237
0x8048dce:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                           	add eax, edx
0x8048de6:   c9                              	leave 
0x8048de7:   c3                              	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                              	push ebp
0x8048de9:   89 e5                           	mov ebp, esp
0x8048deb:   83 ec 08                        	sub esp, 8
0x8048dee:   e8 d0 26 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 52 00 00                  	add eax, 0x520d
0x8048df8:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8                     	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                              	leave 
0x8048e0f:   c3                              	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                              	push ebp
0x8048e11:   89 e5                           	mov ebp, esp
0x8048e13:   83 ec 08                        	sub esp, 8
0x8048e16:   e8 a8 26 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 51 00 00                  	add eax, 0x51e5
0x8048e20:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8                  	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                              	leave 
0x8048e38:   c3                              	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                              	push ebp
0x8048e3a:   89 e5                           	mov ebp, esp
0x8048e3c:   83 ec 08                        	sub esp, 8
0x8048e3f:   e8 7f 26 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 51 00 00                  	add eax, 0x51bc
0x8048e49:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                           	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00                  	mov edx, 0
0x8048e67:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048e6b:   89 d0                           	mov eax, edx
0x8048e6d:   eb 04                           	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                              	leave 
0x8048e74:   c3                              	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                              	push ebp
0x8048e76:   89 e5                           	mov ebp, esp
0x8048e78:   83 ec 08                        	sub esp, 8
0x8048e7b:   e8 43 26 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 51 00 00                  	add eax, 0x5180
0x8048e85:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc                     	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00                  	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                           	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00                  	mov edx, 0
0x8048ea3:   66 f7 75 f8                     	div word ptr [ebp - 8]
0x8048ea7:   eb 04                           	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                              	leave 
0x8048eae:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                              	push ebp
0x8048eb0:   89 e5                           	mov ebp, esp
0x8048eb2:   53                              	push ebx
0x8048eb3:   83 ec 04                        	sub esp, 4
0x8048eb6:   e8 08 26 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 51 00 00                  	add eax, 0x5145
0x8048ec0:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                           	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048edf:   89 c1                           	mov ecx, eax
0x8048ee1:   d3 fb                           	sar ebx, cl
0x8048ee3:   89 d8                           	mov eax, ebx
0x8048ee5:   39 c2                           	cmp edx, eax
0x8048ee7:   7f 0f                           	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                           	mov ecx, eax
0x8048ef2:   d3 e2                           	shl edx, cl
0x8048ef4:   89 d0                           	mov eax, edx
0x8048ef6:   eb 04                           	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04                        	add esp, 4
0x8048eff:   5b                              	pop ebx
0x8048f00:   5d                              	pop ebp
0x8048f01:   c3                              	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                              	push ebp
0x8048f03:   89 e5                           	mov ebp, esp
0x8048f05:   53                              	push ebx
0x8048f06:   83 ec 04                        	sub esp, 4
0x8048f09:   e8 b5 25 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 50 00 00                  	add eax, 0x50f2
0x8048f13:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8                     	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                           	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00                  	mov ebx, 0xffff
0x8048f2c:   89 c1                           	mov ecx, eax
0x8048f2e:   d3 fb                           	sar ebx, cl
0x8048f30:   89 d8                           	mov eax, ebx
0x8048f32:   39 c2                           	cmp edx, eax
0x8048f34:   7f 0f                           	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8                     	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                           	mov ecx, eax
0x8048f3f:   d3 e2                           	shl edx, cl
0x8048f41:   89 d0                           	mov eax, edx
0x8048f43:   eb 04                           	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8                     	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04                        	add esp, 4
0x8048f4c:   5b                              	pop ebx
0x8048f4d:   5d                              	pop ebp
0x8048f4e:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                              	push ebp
0x8048f50:   89 e5                           	mov ebp, esp
0x8048f52:   83 ec 04                        	sub esp, 4
0x8048f55:   e8 69 25 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 50 00 00                  	add eax, 0x50a6
0x8048f5f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                           	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                           	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                           	mov ecx, eax
0x8048f7b:   d3 fa                           	sar edx, cl
0x8048f7d:   89 d0                           	mov eax, edx
0x8048f7f:   eb 04                           	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                              	leave 
0x8048f86:   c3                              	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                              	push ebp
0x8048f88:   89 e5                           	mov ebp, esp
0x8048f8a:   83 ec 04                        	sub esp, 4
0x8048f8d:   e8 31 25 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 50 00 00                  	add eax, 0x506e
0x8048f97:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                           	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc                     	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                           	mov ecx, eax
0x8048fad:   d3 fa                           	sar edx, cl
0x8048faf:   89 d0                           	mov eax, edx
0x8048fb1:   eb 04                           	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc                     	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                              	leave 
0x8048fb8:   c3                              	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                              	push ebp
0x8048fba:   89 e5                           	mov ebp, esp
0x8048fbc:   e8 02 25 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 50 00 00                  	add eax, 0x503f
0x8048fc6:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                           	neg eax
0x8048fcb:   5d                              	pop ebp
0x8048fcc:   c3                              	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                              	push ebp
0x8048fce:   89 e5                           	mov ebp, esp
0x8048fd0:   e8 ee 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 50 00 00                  	add eax, 0x502b
0x8048fda:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                           	add eax, edx
0x8048fe2:   5d                              	pop ebp
0x8048fe3:   c3                              	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                              	push ebp
0x8048fe5:   89 e5                           	mov ebp, esp
0x8048fe7:   e8 d7 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 50 00 00                  	add eax, 0x5014
0x8048ff1:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c                        	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                              	pop ebp
0x8048ff8:   c3                              	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                              	push ebp
0x8048ffa:   89 e5                           	mov ebp, esp
0x8048ffc:   e8 c2 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 4f 00 00                  	add eax, 0x4fff
0x8049006:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c                     	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                              	pop ebp
0x804900e:   c3                              	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                              	push ebp
0x8049010:   89 e5                           	mov ebp, esp
0x8049012:   e8 ac 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 4f 00 00                  	add eax, 0x4fe9
0x804901c:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                           	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00                  	mov edx, 0
0x804902a:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                           	mov eax, edx
0x804902f:   eb 03                           	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                              	pop ebp
0x8049035:   c3                              	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                              	push ebp
0x8049037:   89 e5                           	mov ebp, esp
0x8049039:   e8 85 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 4f 00 00                  	add eax, 0x4fc2
0x8049043:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                           	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00                  	mov edx, 0
0x8049051:   f7 75 0c                        	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                           	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                              	pop ebp
0x804905a:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                              	push ebp
0x804905c:   89 e5                           	mov ebp, esp
0x804905e:   e8 60 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 4f 00 00                  	add eax, 0x4f9d
0x8049068:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                           	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                           	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x804907c:   89 c1                           	mov ecx, eax
0x804907e:   d3 ea                           	shr edx, cl
0x8049080:   89 d0                           	mov eax, edx
0x8049082:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                           	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                           	mov ecx, eax
0x804908f:   d3 e2                           	shl edx, cl
0x8049091:   89 d0                           	mov eax, edx
0x8049093:   eb 03                           	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                              	pop ebp
0x8049099:   c3                              	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                              	push ebp
0x804909b:   89 e5                           	mov ebp, esp
0x804909d:   e8 21 24 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 4f 00 00                  	add eax, 0x4f5e
0x80490a7:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff                  	mov edx, 0xffffffff
0x80490b5:   89 c1                           	mov ecx, eax
0x80490b7:   d3 ea                           	shr edx, cl
0x80490b9:   89 d0                           	mov eax, edx
0x80490bb:   39 45 08                        	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                           	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                           	mov ecx, eax
0x80490c8:   d3 e2                           	shl edx, cl
0x80490ca:   89 d0                           	mov eax, edx
0x80490cc:   eb 03                           	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                              	pop ebp
0x80490d2:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                              	push ebp
0x80490d4:   89 e5                           	mov ebp, esp
0x80490d6:   e8 e8 23 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80490db:   05 25 4f 00 00                  	add eax, 0x4f25
0x80490e0:   83 7d 0c 00                     	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                           	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                           	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                           	mov ecx, eax
0x80490f4:   d3 ea                           	shr edx, cl
0x80490f6:   89 d0                           	mov eax, edx
0x80490f8:   eb 03                           	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                              	pop ebp
0x80490fe:   c3                              	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                              	push ebp
0x8049100:   89 e5                           	mov ebp, esp
0x8049102:   e8 bc 23 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 4e 00 00                  	add eax, 0x4ef9
0x804910c:   83 7d 0c 1f                     	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                           	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                           	mov ecx, eax
0x804911a:   d3 ea                           	shr edx, cl
0x804911c:   89 d0                           	mov eax, edx
0x804911e:   eb 03                           	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                              	pop ebp
0x8049124:   c3                              	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                              	push ebp
0x8049126:   89 e5                           	mov ebp, esp
0x8049128:   e8 96 23 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 4e 00 00                  	add eax, 0x4ed3
0x8049132:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049135:   d9 80 64 d6 ff ff               	fld dword ptr [eax - 0x299c]
0x804913b:   de c9                           	fmulp st(1)
0x804913d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 64 d6 ff ff               	fld dword ptr [eax - 0x299c]
0x8049146:   de c9                           	fmulp st(1)
0x8049148:   de c1                           	faddp st(1)
0x804914a:   d9 e1                           	fabs 
0x804914c:   d9 80 68 d6 ff ff               	fld dword ptr [eax - 0x2998]
0x8049152:   d9 c9                           	fxch st(1)
0x8049154:   df e9                           	fucomip st(1)
0x8049156:   dd d8                           	fstp st(0)
0x8049158:   76 05                           	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804915d:   eb 06                           	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c                        	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                              	pop ebp
0x8049166:   c3                              	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                              	push ebp
0x8049168:   89 e5                           	mov ebp, esp
0x804916a:   e8 54 23 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804916f:   05 91 4e 00 00                  	add eax, 0x4e91
0x8049174:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049177:   d9 80 64 d6 ff ff               	fld dword ptr [eax - 0x299c]
0x804917d:   de c9                           	fmulp st(1)
0x804917f:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 64 d6 ff ff               	fld dword ptr [eax - 0x299c]
0x8049188:   de c9                           	fmulp st(1)
0x804918a:   de e9                           	fsubp st(1)
0x804918c:   d9 e1                           	fabs 
0x804918e:   d9 80 68 d6 ff ff               	fld dword ptr [eax - 0x2998]
0x8049194:   d9 c9                           	fxch st(1)
0x8049196:   df e9                           	fucomip st(1)
0x8049198:   dd d8                           	fstp st(0)
0x804919a:   76 05                           	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804919f:   eb 06                           	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c                        	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                              	pop ebp
0x80491a8:   c3                              	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                              	push ebp
0x80491aa:   89 e5                           	mov ebp, esp
0x80491ac:   e8 12 23 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 4e 00 00                  	add eax, 0x4e4f
0x80491b6:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 6c d6 ff ff               	fld dword ptr [eax - 0x2994]
0x80491bf:   de c9                           	fmulp st(1)
0x80491c1:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 70 d6 ff ff               	fld dword ptr [eax - 0x2990]
0x80491ca:   de c9                           	fmulp st(1)
0x80491cc:   de c9                           	fmulp st(1)
0x80491ce:   d9 e1                           	fabs 
0x80491d0:   d9 80 74 d6 ff ff               	fld dword ptr [eax - 0x298c]
0x80491d6:   d9 c9                           	fxch st(1)
0x80491d8:   df e9                           	fucomip st(1)
0x80491da:   dd d8                           	fstp st(0)
0x80491dc:   76 05                           	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                           	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08                        	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c                        	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                              	pop ebp
0x80491ea:   c3                              	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                              	push ebp
0x80491ec:   89 e5                           	mov ebp, esp
0x80491ee:   e8 d0 22 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 4e 00 00                  	add eax, 0x4e0d
0x80491f8:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                           	fabs 
0x80491fd:   d9 e8                           	fld1 
0x80491ff:   df e9                           	fucomip st(1)
0x8049201:   dd d8                           	fstp st(0)
0x8049203:   0f 97 c2                        	seta dl
0x8049206:   83 f2 01                        	xor edx, 1
0x8049209:   84 d2                           	test dl, dl
0x804920b:   75 46                           	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                           	fldz 
0x8049212:   df e9                           	fucomip st(1)
0x8049214:   dd d8                           	fstp st(0)
0x8049216:   7a 0b                           	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                           	fldz 
0x804921d:   df e9                           	fucomip st(1)
0x804921f:   dd d8                           	fstp st(0)
0x8049221:   74 38                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049226:   d9 80 78 d6 ff ff               	fld dword ptr [eax - 0x2988]
0x804922c:   de c9                           	fmulp st(1)
0x804922e:   d9 45 0c                        	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 7c d6 ff ff               	fld dword ptr [eax - 0x2984]
0x8049237:   de c9                           	fmulp st(1)
0x8049239:   de f9                           	fdivp st(1)
0x804923b:   d9 e1                           	fabs 
0x804923d:   d9 80 80 d6 ff ff               	fld dword ptr [eax - 0x2980]
0x8049243:   d9 c9                           	fxch st(1)
0x8049245:   df e9                           	fucomip st(1)
0x8049247:   dd d8                           	fstp st(0)
0x8049249:   0f 97 c0                        	seta al
0x804924c:   83 f0 01                        	xor eax, 1
0x804924f:   84 c0                           	test al, al
0x8049251:   74 08                           	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c                        	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                           	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804925e:   5d                              	pop ebp
0x804925f:   c3                              	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                              	push ebp
0x8049261:   89 e5                           	mov ebp, esp
0x8049263:   83 ec 10                        	sub esp, 0x10
0x8049266:   e8 58 22 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804926b:   05 95 4d 00 00                  	add eax, 0x4d95
0x8049270:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804928b:   dd 80 88 d6 ff ff               	fld qword ptr [eax - 0x2978]
0x8049291:   de c9                           	fmulp st(1)
0x8049293:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 88 d6 ff ff               	fld qword ptr [eax - 0x2978]
0x804929c:   de c9                           	fmulp st(1)
0x804929e:   de c1                           	faddp st(1)
0x80492a0:   d9 e1                           	fabs 
0x80492a2:   dd 80 90 d6 ff ff               	fld qword ptr [eax - 0x2970]
0x80492a8:   d9 c9                           	fxch st(1)
0x80492aa:   df e9                           	fucomip st(1)
0x80492ac:   dd d8                           	fstp st(0)
0x80492ae:   76 05                           	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                           	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0                        	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                              	leave 
0x80492bc:   c3                              	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                              	push ebp
0x80492be:   89 e5                           	mov ebp, esp
0x80492c0:   83 ec 10                        	sub esp, 0x10
0x80492c3:   e8 fb 21 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 4d 00 00                  	add eax, 0x4d38
0x80492cd:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 88 d6 ff ff               	fld qword ptr [eax - 0x2978]
0x80492ee:   de c9                           	fmulp st(1)
0x80492f0:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 88 d6 ff ff               	fld qword ptr [eax - 0x2978]
0x80492f9:   de c9                           	fmulp st(1)
0x80492fb:   de e9                           	fsubp st(1)
0x80492fd:   d9 e1                           	fabs 
0x80492ff:   dd 80 90 d6 ff ff               	fld qword ptr [eax - 0x2970]
0x8049305:   d9 c9                           	fxch st(1)
0x8049307:   df e9                           	fucomip st(1)
0x8049309:   dd d8                           	fstp st(0)
0x804930b:   76 05                           	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049310:   eb 06                           	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0                        	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                              	leave 
0x8049319:   c3                              	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                              	push ebp
0x804931b:   89 e5                           	mov ebp, esp
0x804931d:   83 ec 10                        	sub esp, 0x10
0x8049320:   e8 9e 21 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049325:   05 db 4c 00 00                  	add eax, 0x4cdb
0x804932a:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049345:   dd 80 98 d6 ff ff               	fld qword ptr [eax - 0x2968]
0x804934b:   de c9                           	fmulp st(1)
0x804934d:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 a0 d6 ff ff               	fld qword ptr [eax - 0x2960]
0x8049356:   de c9                           	fmulp st(1)
0x8049358:   de c9                           	fmulp st(1)
0x804935a:   d9 e1                           	fabs 
0x804935c:   dd 80 a8 d6 ff ff               	fld qword ptr [eax - 0x2958]
0x8049362:   d9 c9                           	fxch st(1)
0x8049364:   df e9                           	fucomip st(1)
0x8049366:   dd d8                           	fstp st(0)
0x8049368:   76 05                           	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x804936d:   eb 06                           	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0                        	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                              	leave 
0x8049376:   c3                              	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                              	push ebp
0x8049378:   89 e5                           	mov ebp, esp
0x804937a:   83 ec 10                        	sub esp, 0x10
0x804937d:   e8 41 21 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 4c 00 00                  	add eax, 0x4c7e
0x8049387:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8                        	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c                        	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10                        	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0                        	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14                        	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4                        	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                           	fabs 
0x80493a4:   d9 e8                           	fld1 
0x80493a6:   df e9                           	fucomip st(1)
0x80493a8:   dd d8                           	fstp st(0)
0x80493aa:   0f 97 c2                        	seta dl
0x80493ad:   83 f2 01                        	xor edx, 1
0x80493b0:   84 d2                           	test dl, dl
0x80493b2:   75 46                           	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                           	fldz 
0x80493b9:   df e9                           	fucomip st(1)
0x80493bb:   dd d8                           	fstp st(0)
0x80493bd:   7a 0b                           	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                           	fldz 
0x80493c4:   df e9                           	fucomip st(1)
0x80493c6:   dd d8                           	fstp st(0)
0x80493c8:   74 38                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 b0 d6 ff ff               	fld qword ptr [eax - 0x2950]
0x80493d3:   de c9                           	fmulp st(1)
0x80493d5:   dd 45 f0                        	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 b8 d6 ff ff               	fld qword ptr [eax - 0x2948]
0x80493de:   de c9                           	fmulp st(1)
0x80493e0:   de f9                           	fdivp st(1)
0x80493e2:   d9 e1                           	fabs 
0x80493e4:   dd 80 c0 d6 ff ff               	fld qword ptr [eax - 0x2940]
0x80493ea:   d9 c9                           	fxch st(1)
0x80493ec:   df e9                           	fucomip st(1)
0x80493ee:   dd d8                           	fstp st(0)
0x80493f0:   0f 97 c0                        	seta al
0x80493f3:   83 f0 01                        	xor eax, 1
0x80493f6:   84 c0                           	test al, al
0x80493f8:   74 08                           	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0                        	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                           	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8                        	fld qword ptr [ebp - 8]
0x8049405:   c9                              	leave 
0x8049406:   c3                              	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                              	push ebp
0x8049408:   89 e5                           	mov ebp, esp
0x804940a:   83 ec 08                        	sub esp, 8
0x804940d:   e8 b1 20 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 4b 00 00                  	add eax, 0x4bee
0x8049417:   d9 45 08                        	fld dword ptr [ebp + 8]
0x804941a:   d9 80 c8 d6 ff ff               	fld dword ptr [eax - 0x2938]
0x8049420:   df e9                           	fucomip st(1)
0x8049422:   dd d8                           	fstp st(0)
0x8049424:   0f 93 c2                        	setae dl
0x8049427:   83 f2 01                        	xor edx, 1
0x804942a:   84 d2                           	test dl, dl
0x804942c:   74 36                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 cc d6 ff ff               	fld dword ptr [eax - 0x2934]
0x8049434:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049437:   df e9                           	fucomip st(1)
0x8049439:   dd d8                           	fstp st(0)
0x804943b:   0f 93 c0                        	setae al
0x804943e:   83 f0 01                        	xor eax, 1
0x8049441:   84 c0                           	test al, al
0x8049443:   74 1f                           	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08                        	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe                        	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe                     	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c                        	or ah, 0xc
0x8049452:   66 89 45 fc                     	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc                        	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8                        	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe                        	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8                        	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                           	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f                  	mov eax, 0x7fffffff
0x8049469:   c9                              	leave 
0x804946a:   c3                              	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                              	push ebp
0x804946c:   89 e5                           	mov ebp, esp
0x804946e:   83 ec 10                        	sub esp, 0x10
0x8049471:   e8 4d 20 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 4b 00 00                  	add eax, 0x4b8a
0x804947b:   c7 45 f0 20 83 b8 ed            	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00            	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                           	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00            	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                           	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01                        	and edx, 1
0x80494a0:   85 d2                           	test edx, edx
0x80494a2:   74 0d                           	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc                        	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                           	shr edx, 1
0x80494a9:   33 55 f0                        	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc                        	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                           	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc                        	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01                     	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00                     	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                           	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8                        	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc                        	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 c0 00 00 00            	mov dword ptr [eax + edx*4 + 0xc0], ecx
0x80494cb:   83 45 f8 01                     	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00            	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                           	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                              	nop 
0x80494d9:   c9                              	leave 
0x80494da:   c3                              	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                              	push ebp
0x80494dc:   89 e5                           	mov ebp, esp
0x80494de:   53                              	push ebx
0x80494df:   83 ec 04                        	sub esp, 4
0x80494e2:   e8 dc 1f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 4b 00 00                  	add eax, 0x4b19
0x80494ec:   8b 55 08                        	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8                        	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                           	mov ebx, edx
0x80494fa:   c1 eb 08                        	shr ebx, 8
0x80494fd:   0f b6 4d f8                     	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00               	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                           	xor edx, ecx
0x8049509:   0f b6 d2                        	movzx edx, dl
0x804950c:   8b 94 90 c0 00 00 00            	mov edx, dword ptr [eax + edx*4 + 0xc0]
0x8049513:   31 da                           	xor edx, ebx
0x8049515:   89 90 20 00 00 00               	mov dword ptr [eax + 0x20], edx
0x804951b:   90                              	nop 
0x804951c:   83 c4 04                        	add esp, 4
0x804951f:   5b                              	pop ebx
0x8049520:   5d                              	pop ebp
0x8049521:   c3                              	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                              	push ebp
0x8049523:   89 e5                           	mov ebp, esp
0x8049525:   e8 99 1f 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 4a 00 00                  	add eax, 0x4ad6
0x804952f:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0                        	movzx eax, al
0x8049535:   50                              	push eax
0x8049536:   e8 a0 ff ff ff                  	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04                        	add esp, 4
0x804953e:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08                        	shr eax, 8
0x8049544:   0f b6 c0                        	movzx eax, al
0x8049547:   50                              	push eax
0x8049548:   e8 8e ff ff ff                  	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04                        	add esp, 4
0x8049550:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10                        	shr eax, 0x10
0x8049556:   0f b6 c0                        	movzx eax, al
0x8049559:   50                              	push eax
0x804955a:   e8 7c ff ff ff                  	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04                        	add esp, 4
0x8049562:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18                        	shr eax, 0x18
0x8049568:   0f b6 c0                        	movzx eax, al
0x804956b:   50                              	push eax
0x804956c:   e8 6a ff ff ff                  	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04                        	add esp, 4
0x8049574:   90                              	nop 
0x8049575:   c9                              	leave 
0x8049576:   c3                              	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                              	push ebp
0x8049578:   89 e5                           	mov ebp, esp
0x804957a:   53                              	push ebx
0x804957b:   83 ec 04                        	sub esp, 4
0x804957e:   e8 0d ee ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 4a 00 00               	add ebx, 0x4a7d
0x8049589:   ff 75 08                        	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff                  	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04                        	add esp, 4
0x8049594:   83 7d 10 00                     	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                           	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                           	not eax
0x80495a2:   83 ec 04                        	sub esp, 4
0x80495a5:   50                              	push eax
0x80495a6:   ff 75 0c                        	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 60 d5 ff ff               	lea eax, [ebx - 0x2aa0]
0x80495af:   50                              	push eax
0x80495b0:   e8 5b ed ff ff                  	call 0x8048310 <printf>
0x80495b5:   83 c4 10                        	add esp, 0x10
0x80495b8:   90                              	nop 
0x80495b9:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                              	leave 
0x80495bd:   c3                              	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                              	push ebp
0x80495bf:   89 e5                           	mov ebp, esp
0x80495c1:   53                              	push ebx
0x80495c2:   83 ec 14                        	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 4a 00 00               	add ebx, 0x4a36
0x80495d0:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                           	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4                        	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                           	add eax, edx
0x80495e1:   0f b6 00                        	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0                        	movzx eax, al
0x80495e7:   50                              	push eax
0x80495e8:   e8 ee fe ff ff                  	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04                        	add esp, 4
0x80495f0:   83 45 f4 01                     	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4                        	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c                        	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                           	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00                     	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                           	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                           	not eax
0x804960a:   83 ec 04                        	sub esp, 4
0x804960d:   50                              	push eax
0x804960e:   ff 75 10                        	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 84 d5 ff ff               	lea eax, [ebx - 0x2a7c]
0x8049617:   50                              	push eax
0x8049618:   e8 f3 ec ff ff                  	call 0x8048310 <printf>
0x804961d:   83 c4 10                        	add esp, 0x10
0x8049620:   90                              	nop 
0x8049621:   8b 5d fc                        	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                              	leave 
0x8049625:   c3                              	ret 
; function: set_var at 0x8049626 -- 0x804986d
0x8049626:   55                              	push ebp
0x8049627:   89 e5                           	mov ebp, esp
0x8049629:   57                              	push edi
0x804962a:   56                              	push esi
0x804962b:   53                              	push ebx
0x804962c:   83 ec 78                        	sub esp, 0x78
0x804962f:   e8 93 1e 00 00                  	call 0x804b4c7 <__x86.get_pc_thunk.dx>
0x8049634:   81 c2 cc 49 00 00               	add edx, 0x49cc
0x804963a:   8b 45 0c                        	mov eax, dword ptr [ebp + 0xc]
0x804963d:   89 45 ac                        	mov dword ptr [ebp - 0x54], eax
0x8049640:   8b 4d 10                        	mov ecx, dword ptr [ebp + 0x10]
0x8049643:   8b 5d 20                        	mov ebx, dword ptr [ebp + 0x20]
0x8049646:   8b 75 28                        	mov esi, dword ptr [ebp + 0x28]
0x8049649:   8b 7d 2c                        	mov edi, dword ptr [ebp + 0x2c]
0x804964c:   8b 45 38                        	mov eax, dword ptr [ebp + 0x38]
0x804964f:   89 45 a8                        	mov dword ptr [ebp - 0x58], eax
0x8049652:   8b 45 48                        	mov eax, dword ptr [ebp + 0x48]
0x8049655:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x8049658:   8b 45 4c                        	mov eax, dword ptr [ebp + 0x4c]
0x804965b:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x804965e:   8b 45 54                        	mov eax, dword ptr [ebp + 0x54]
0x8049661:   89 45 9c                        	mov dword ptr [ebp - 0x64], eax
0x8049664:   8b 45 60                        	mov eax, dword ptr [ebp + 0x60]
0x8049667:   89 45 98                        	mov dword ptr [ebp - 0x68], eax
0x804966a:   8b 45 64                        	mov eax, dword ptr [ebp + 0x64]
0x804966d:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049670:   8b 45 68                        	mov eax, dword ptr [ebp + 0x68]
0x8049673:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x8049676:   8b 45 6c                        	mov eax, dword ptr [ebp + 0x6c]
0x8049679:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x804967c:   8b 45 70                        	mov eax, dword ptr [ebp + 0x70]
0x804967f:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049682:   8b 45 78                        	mov eax, dword ptr [ebp + 0x78]
0x8049685:   89 45 84                        	mov dword ptr [ebp - 0x7c], eax
0x8049688:   8b 45 7c                        	mov eax, dword ptr [ebp + 0x7c]
0x804968b:   89 45 80                        	mov dword ptr [ebp - 0x80], eax
0x804968e:   8b 85 88 00 00 00               	mov eax, dword ptr [ebp + 0x88]
0x8049694:   89 85 7c ff ff ff               	mov dword ptr [ebp - 0x84], eax
0x804969a:   0f b6 45 ac                     	movzx eax, byte ptr [ebp - 0x54]
0x804969e:   88 45 f0                        	mov byte ptr [ebp - 0x10], al
0x80496a1:   89 c8                           	mov eax, ecx
0x80496a3:   66 89 45 ec                     	mov word ptr [ebp - 0x14], ax
0x80496a7:   89 d8                           	mov eax, ebx
0x80496a9:   88 45 e8                        	mov byte ptr [ebp - 0x18], al
0x80496ac:   89 f0                           	mov eax, esi
0x80496ae:   66 89 45 e4                     	mov word ptr [ebp - 0x1c], ax
0x80496b2:   89 f8                           	mov eax, edi
0x80496b4:   88 45 e0                        	mov byte ptr [ebp - 0x20], al
0x80496b7:   0f b7 45 a8                     	movzx eax, word ptr [ebp - 0x58]
0x80496bb:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x80496bf:   0f b7 45 a4                     	movzx eax, word ptr [ebp - 0x5c]
0x80496c3:   66 89 45 d8                     	mov word ptr [ebp - 0x28], ax
0x80496c7:   0f b7 45 a0                     	movzx eax, word ptr [ebp - 0x60]
0x80496cb:   66 89 45 d4                     	mov word ptr [ebp - 0x2c], ax
0x80496cf:   0f b6 45 9c                     	movzx eax, byte ptr [ebp - 0x64]
0x80496d3:   88 45 d0                        	mov byte ptr [ebp - 0x30], al
0x80496d6:   0f b6 45 98                     	movzx eax, byte ptr [ebp - 0x68]
0x80496da:   88 45 cc                        	mov byte ptr [ebp - 0x34], al
0x80496dd:   0f b6 45 94                     	movzx eax, byte ptr [ebp - 0x6c]
0x80496e1:   88 45 c8                        	mov byte ptr [ebp - 0x38], al
0x80496e4:   0f b7 45 90                     	movzx eax, word ptr [ebp - 0x70]
0x80496e8:   66 89 45 c4                     	mov word ptr [ebp - 0x3c], ax
0x80496ec:   0f b7 45 8c                     	movzx eax, word ptr [ebp - 0x74]
0x80496f0:   66 89 45 c0                     	mov word ptr [ebp - 0x40], ax
0x80496f4:   0f b6 45 88                     	movzx eax, byte ptr [ebp - 0x78]
0x80496f8:   88 45 bc                        	mov byte ptr [ebp - 0x44], al
0x80496fb:   0f b7 45 84                     	movzx eax, word ptr [ebp - 0x7c]
0x80496ff:   66 89 45 b8                     	mov word ptr [ebp - 0x48], ax
0x8049703:   0f b7 45 80                     	movzx eax, word ptr [ebp - 0x80]
0x8049707:   66 89 45 b4                     	mov word ptr [ebp - 0x4c], ax
0x804970b:   0f b7 85 7c ff ff ff            	movzx eax, word ptr [ebp - 0x84]
0x8049712:   66 89 45 b0                     	mov word ptr [ebp - 0x50], ax
0x8049716:   8b 45 08                        	mov eax, dword ptr [ebp + 8]
0x8049719:   89 82 24 00 00 00               	mov dword ptr [edx + 0x24], eax
0x804971f:   0f b6 45 f0                     	movzx eax, byte ptr [ebp - 0x10]
0x8049723:   88 82 28 00 00 00               	mov byte ptr [edx + 0x28], al
0x8049729:   0f b7 45 ec                     	movzx eax, word ptr [ebp - 0x14]
0x804972d:   66 89 82 2a 00 00 00            	mov word ptr [edx + 0x2a], ax
0x8049734:   8b 45 14                        	mov eax, dword ptr [ebp + 0x14]
0x8049737:   89 82 2c 00 00 00               	mov dword ptr [edx + 0x2c], eax
0x804973d:   8b 45 18                        	mov eax, dword ptr [ebp + 0x18]
0x8049740:   89 82 30 00 00 00               	mov dword ptr [edx + 0x30], eax
0x8049746:   8b 45 1c                        	mov eax, dword ptr [ebp + 0x1c]
0x8049749:   89 82 34 00 00 00               	mov dword ptr [edx + 0x34], eax
0x804974f:   0f b6 45 e8                     	movzx eax, byte ptr [ebp - 0x18]
0x8049753:   88 82 38 00 00 00               	mov byte ptr [edx + 0x38], al
0x8049759:   8b 45 24                        	mov eax, dword ptr [ebp + 0x24]
0x804975c:   89 82 3c 00 00 00               	mov dword ptr [edx + 0x3c], eax
0x8049762:   0f b7 45 e4                     	movzx eax, word ptr [ebp - 0x1c]
0x8049766:   66 89 82 c4 04 00 00            	mov word ptr [edx + 0x4c4], ax
0x804976d:   0f b6 45 e0                     	movzx eax, byte ptr [ebp - 0x20]
0x8049771:   88 82 40 00 00 00               	mov byte ptr [edx + 0x40], al
0x8049777:   8b 45 30                        	mov eax, dword ptr [ebp + 0x30]
0x804977a:   89 82 44 00 00 00               	mov dword ptr [edx + 0x44], eax
0x8049780:   8b 45 34                        	mov eax, dword ptr [ebp + 0x34]
0x8049783:   89 82 48 00 00 00               	mov dword ptr [edx + 0x48], eax
0x8049789:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804978d:   66 89 82 4c 00 00 00            	mov word ptr [edx + 0x4c], ax
0x8049794:   8b 45 3c                        	mov eax, dword ptr [ebp + 0x3c]
0x8049797:   89 82 50 00 00 00               	mov dword ptr [edx + 0x50], eax
0x804979d:   8b 45 40                        	mov eax, dword ptr [ebp + 0x40]
0x80497a0:   89 82 54 00 00 00               	mov dword ptr [edx + 0x54], eax
0x80497a6:   8b 45 44                        	mov eax, dword ptr [ebp + 0x44]
0x80497a9:   89 82 58 00 00 00               	mov dword ptr [edx + 0x58], eax
0x80497af:   0f b7 45 d8                     	movzx eax, word ptr [ebp - 0x28]
0x80497b3:   66 89 82 5c 00 00 00            	mov word ptr [edx + 0x5c], ax
0x80497ba:   0f b7 45 d4                     	movzx eax, word ptr [ebp - 0x2c]
0x80497be:   66 89 82 c6 04 00 00            	mov word ptr [edx + 0x4c6], ax
0x80497c5:   8b 45 50                        	mov eax, dword ptr [ebp + 0x50]
0x80497c8:   89 82 60 00 00 00               	mov dword ptr [edx + 0x60], eax
0x80497ce:   0f b6 45 d0                     	movzx eax, byte ptr [ebp - 0x30]
0x80497d2:   88 82 64 00 00 00               	mov byte ptr [edx + 0x64], al
0x80497d8:   8b 45 58                        	mov eax, dword ptr [ebp + 0x58]
0x80497db:   89 82 68 00 00 00               	mov dword ptr [edx + 0x68], eax
0x80497e1:   8b 45 5c                        	mov eax, dword ptr [ebp + 0x5c]
0x80497e4:   89 82 c8 04 00 00               	mov dword ptr [edx + 0x4c8], eax
0x80497ea:   0f b6 45 cc                     	movzx eax, byte ptr [ebp - 0x34]
0x80497ee:   88 82 6c 00 00 00               	mov byte ptr [edx + 0x6c], al
0x80497f4:   0f b6 45 c8                     	movzx eax, byte ptr [ebp - 0x38]
0x80497f8:   88 82 6d 00 00 00               	mov byte ptr [edx + 0x6d], al
0x80497fe:   0f b7 45 c4                     	movzx eax, word ptr [ebp - 0x3c]
0x8049802:   66 89 82 6e 00 00 00            	mov word ptr [edx + 0x6e], ax
0x8049809:   0f b7 45 c0                     	movzx eax, word ptr [ebp - 0x40]
0x804980d:   66 89 82 70 00 00 00            	mov word ptr [edx + 0x70], ax
0x8049814:   0f b6 45 bc                     	movzx eax, byte ptr [ebp - 0x44]
0x8049818:   88 82 cc 04 00 00               	mov byte ptr [edx + 0x4cc], al
0x804981e:   8b 45 74                        	mov eax, dword ptr [ebp + 0x74]
0x8049821:   89 82 74 00 00 00               	mov dword ptr [edx + 0x74], eax
0x8049827:   0f b7 45 b8                     	movzx eax, word ptr [ebp - 0x48]
0x804982b:   66 89 82 78 00 00 00            	mov word ptr [edx + 0x78], ax
0x8049832:   0f b7 45 b4                     	movzx eax, word ptr [ebp - 0x4c]
0x8049836:   66 89 82 7a 00 00 00            	mov word ptr [edx + 0x7a], ax
0x804983d:   8b 85 80 00 00 00               	mov eax, dword ptr [ebp + 0x80]
0x8049843:   89 82 7c 00 00 00               	mov dword ptr [edx + 0x7c], eax
0x8049849:   8b 85 84 00 00 00               	mov eax, dword ptr [ebp + 0x84]
0x804984f:   89 82 d0 04 00 00               	mov dword ptr [edx + 0x4d0], eax
0x8049855:   0f b7 45 b0                     	movzx eax, word ptr [ebp - 0x50]
0x8049859:   66 89 82 80 00 00 00            	mov word ptr [edx + 0x80], ax
0x8049860:   b8 00 00 00 00                  	mov eax, 0
0x8049865:   83 c4 78                        	add esp, 0x78
0x8049868:   5b                              	pop ebx
0x8049869:   5e                              	pop esi
0x804986a:   5f                              	pop edi
0x804986b:   5d                              	pop ebp
0x804986c:   c3                              	ret 
; function: func_1 at 0x804986d -- 0x804b055
0x804986d:   55                              	push ebp
0x804986e:   89 e5                           	mov ebp, esp
0x8049870:   57                              	push edi
0x8049871:   56                              	push esi
0x8049872:   53                              	push ebx
0x8049873:   81 ec 1c 02 00 00               	sub esp, 0x21c
0x8049879:   e8 45 1c 00 00                  	call 0x804b4c3 <__x86.get_pc_thunk.ax>
0x804987e:   05 82 47 00 00                  	add eax, 0x4782
0x8049883:   c7 85 74 ff ff ff fd ff ff ff   	mov dword ptr [ebp - 0x8c], 0xfffffffd
0x804988d:   c6 45 f3 ff                     	mov byte ptr [ebp - 0xd], 0xff
0x8049891:   66 c7 45 dc 06 00               	mov word ptr [ebp - 0x24], 6
0x8049897:   c7 45 ec 01 00 00 00            	mov dword ptr [ebp - 0x14], 1
0x804989e:   c7 85 70 ff ff ff 71 d2 43 6b   	mov dword ptr [ebp - 0x90], 0x6b43d271
0x80498a8:   c7 45 e8 be 42 6b ba            	mov dword ptr [ebp - 0x18], 0xba6b42be
0x80498af:   c6 45 e7 14                     	mov byte ptr [ebp - 0x19], 0x14
0x80498b3:   c7 45 e0 00 15 39 ab            	mov dword ptr [ebp - 0x20], 0xab391500
0x80498ba:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x80498c0:   c6 45 db 02                     	mov byte ptr [ebp - 0x25], 2
0x80498c4:   c7 45 d4 02 00 00 00            	mov dword ptr [ebp - 0x2c], 2
0x80498cb:   c7 45 d0 ff ff ff ff            	mov dword ptr [ebp - 0x30], 0xffffffff
0x80498d2:   66 c7 45 ce fe 70               	mov word ptr [ebp - 0x32], 0x70fe
0x80498d8:   c7 45 c8 ee 8d 86 f5            	mov dword ptr [ebp - 0x38], 0xf5868dee
0x80498df:   c7 45 c4 09 00 00 00            	mov dword ptr [ebp - 0x3c], 9
0x80498e6:   c7 45 c0 03 00 00 00            	mov dword ptr [ebp - 0x40], 3
0x80498ed:   66 c7 85 6e ff ff ff ff ff      	mov word ptr [ebp - 0x92], 0xffff
0x80498f6:   66 c7 45 be 00 00               	mov word ptr [ebp - 0x42], 0
0x80498fc:   c7 45 b8 f9 ff ff ff            	mov dword ptr [ebp - 0x48], 0xfffffff9
0x8049903:   c6 45 b7 01                     	mov byte ptr [ebp - 0x49], 1
0x8049907:   c7 45 b0 01 00 00 00            	mov dword ptr [ebp - 0x50], 1
0x804990e:   c7 85 68 ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x98], 0
0x8049918:   c6 45 af 9a                     	mov byte ptr [ebp - 0x51], 0x9a
0x804991c:   c6 85 67 ff ff ff b9            	mov byte ptr [ebp - 0x99], 0xb9
0x8049923:   66 c7 85 64 ff ff ff ff ff      	mov word ptr [ebp - 0x9c], 0xffff
0x804992c:   66 c7 85 62 ff ff ff d2 79      	mov word ptr [ebp - 0x9e], 0x79d2
0x8049935:   c6 45 ae 00                     	mov byte ptr [ebp - 0x52], 0
0x8049939:   c7 85 5c ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xa4], 0xffffffff
0x8049943:   66 c7 85 5a ff ff ff 03 00      	mov word ptr [ebp - 0xa6], 3
0x804994c:   66 c7 85 58 ff ff ff c0 56      	mov word ptr [ebp - 0xa8], 0x56c0
0x8049955:   c7 45 a8 01 00 00 00            	mov dword ptr [ebp - 0x58], 1
0x804995c:   c7 45 a4 00 00 00 00            	mov dword ptr [ebp - 0x5c], 0
0x8049963:   66 c7 85 56 ff ff ff 09 00      	mov word ptr [ebp - 0xaa], 9
0x804996c:   c7 85 50 ff ff ff f7 e6 a6 0a   	mov dword ptr [ebp - 0xb0], 0xaa6e6f7
0x8049976:   c7 85 4c ff ff ff fb ff ff ff   	mov dword ptr [ebp - 0xb4], 0xfffffffb
0x8049980:   66 c7 85 4a ff ff ff ee e6      	mov word ptr [ebp - 0xb6], 0xe6ee
0x8049989:   c7 45 a0 60 01 5d 05            	mov dword ptr [ebp - 0x60], 0x55d0160
0x8049990:   66 c7 45 9e 00 00               	mov word ptr [ebp - 0x62], 0
0x8049996:   c6 85 49 ff ff ff 01            	mov byte ptr [ebp - 0xb7], 1
0x804999d:   c7 85 44 ff ff ff d5 b9 cc a6   	mov dword ptr [ebp - 0xbc], 0xa6ccb9d5
0x80499a7:   66 c7 45 9c 15 84               	mov word ptr [ebp - 0x64], 0x8415
0x80499ad:   66 c7 85 42 ff ff ff 7d ec      	mov word ptr [ebp - 0xbe], 0xec7d
0x80499b6:   c7 45 98 00 00 00 00            	mov dword ptr [ebp - 0x68], 0
0x80499bd:   c7 85 3c ff ff ff fe ff ff ff   	mov dword ptr [ebp - 0xc4], 0xfffffffe
0x80499c7:   c7 85 38 ff ff ff f8 ff ff ff   	mov dword ptr [ebp - 0xc8], 0xfffffff8
0x80499d1:   c7 85 34 ff ff ff ff ff ff ff   	mov dword ptr [ebp - 0xcc], 0xffffffff
0x80499db:   c7 85 30 ff ff ff 24 67 3e 77   	mov dword ptr [ebp - 0xd0], 0x773e6724
0x80499e5:   c7 85 2c ff ff ff e7 26 d0 92   	mov dword ptr [ebp - 0xd4], 0x92d026e7
0x80499ef:   c7 85 28 ff ff ff 76 c1 3b 74   	mov dword ptr [ebp - 0xd8], 0x743bc176
0x80499f9:   66 c7 85 26 ff ff ff f6 ff      	mov word ptr [ebp - 0xda], 0xfff6
0x8049a02:   66 c7 85 24 ff ff ff be 10      	mov word ptr [ebp - 0xdc], 0x10be
0x8049a0b:   66 c7 85 22 ff ff ff fb 18      	mov word ptr [ebp - 0xde], 0x18fb
0x8049a14:   c7 85 1c ff ff ff fc ff ff ff   	mov dword ptr [ebp - 0xe4], 0xfffffffc
0x8049a1e:   c7 85 18 ff ff ff 05 18 b8 00   	mov dword ptr [ebp - 0xe8], 0xb81805
0x8049a28:   c6 45 f3 01                     	mov byte ptr [ebp - 0xd], 1
0x8049a2c:   66 c7 45 dc 01 00               	mov word ptr [ebp - 0x24], 1
0x8049a32:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049a38:   84 c0                           	test al, al
0x8049a3a:   75 09                           	jne 0x8049a45 <func_1+0x1d8>
0x8049a3c:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049a43:   74 07                           	je 0x8049a4c <func_1+0x1df>
0x8049a45:   b8 01 00 00 00                  	mov eax, 1
0x8049a4a:   eb 05                           	jmp 0x8049a51 <func_1+0x1e4>
0x8049a4c:   b8 00 00 00 00                  	mov eax, 0
0x8049a51:   0f b6 c0                        	movzx eax, al
0x8049a54:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x8049a5a:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049a61:   0f 84 15 07 00 00               	je 0x804a17c <func_1+0x90f>
0x8049a67:   c7 85 84 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x17c], 1
0x8049a71:   c7 45 94 f6 ff ff ff            	mov dword ptr [ebp - 0x6c], 0xfffffff6
0x8049a78:   c7 45 90 00 00 00 00            	mov dword ptr [ebp - 0x70], 0
0x8049a7f:   66 c7 85 82 fe ff ff 05 00      	mov word ptr [ebp - 0x17e], 5
0x8049a88:   66 c7 45 dc 00 00               	mov word ptr [ebp - 0x24], 0
0x8049a8e:   e9 c3 05 00 00                  	jmp 0x804a056 <func_1+0x7e9>
0x8049a93:   c7 45 8c fa 27 9b 0a            	mov dword ptr [ebp - 0x74], 0xa9b27fa
0x8049a9a:   c7 45 88 63 e9 52 fa            	mov dword ptr [ebp - 0x78], 0xfa52e963
0x8049aa1:   c7 85 74 fe ff ff 51 27 1d 81   	mov dword ptr [ebp - 0x18c], 0x811d2751
0x8049aab:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049ab1:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049ab4:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x8049aba:   0f b7 d0                        	movzx edx, ax
0x8049abd:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049ac1:   01 d0                           	add eax, edx
0x8049ac3:   39 45 ec                        	cmp dword ptr [ebp - 0x14], eax
0x8049ac6:   0f 9e c0                        	setle al
0x8049ac9:   0f b6 c0                        	movzx eax, al
0x8049acc:   21 45 8c                        	and dword ptr [ebp - 0x74], eax
0x8049acf:   8b 85 84 fe ff ff               	mov eax, dword ptr [ebp - 0x17c]
0x8049ad5:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049ad8:   8b 85 4c ff ff ff               	mov eax, dword ptr [ebp - 0xb4]
0x8049ade:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049ae1:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x8049ae5:   74 7a                           	je 0x8049b61 <func_1+0x2f4>
0x8049ae7:   66 c7 85 48 fe ff ff fa 74      	mov word ptr [ebp - 0x1b8], 0x74fa
0x8049af0:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049af4:   83 e8 01                        	sub eax, 1
0x8049af7:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x8049afa:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049afe:   89 45 94                        	mov dword ptr [ebp - 0x6c], eax
0x8049b01:   8b 45 94                        	mov eax, dword ptr [ebp - 0x6c]
0x8049b04:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x8049b07:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049b0b:   25 6e 01 00 00                  	and eax, 0x16e
0x8049b10:   39 85 84 fe ff ff               	cmp dword ptr [ebp - 0x17c], eax
0x8049b16:   0f 94 c0                        	sete al
0x8049b19:   0f b6 c0                        	movzx eax, al
0x8049b1c:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049b1f:   81 65 ec 39 06 3b ef            	and dword ptr [ebp - 0x14], 0xef3b0639
0x8049b26:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049b2a:   0b 45 e8                        	or eax, dword ptr [ebp - 0x18]
0x8049b2d:   21 45 e0                        	and dword ptr [ebp - 0x20], eax
0x8049b30:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x8049b36:   0f b7 c0                        	movzx eax, ax
0x8049b39:   f7 d8                           	neg eax
0x8049b3b:   39 45 8c                        	cmp dword ptr [ebp - 0x74], eax
0x8049b3e:   0f 9e c0                        	setle al
0x8049b41:   0f b6 d0                        	movzx edx, al
0x8049b44:   0f b7 85 48 fe ff ff            	movzx eax, word ptr [ebp - 0x1b8]
0x8049b4b:   39 c2                           	cmp edx, eax
0x8049b4d:   0f 94 c0                        	sete al
0x8049b50:   0f b6 d0                        	movzx edx, al
0x8049b53:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x8049b57:   09 d0                           	or eax, edx
0x8049b59:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049b5c:   e9 ec 04 00 00                  	jmp 0x804a04d <func_1+0x7e0>
0x8049b61:   c6 85 73 fe ff ff fa            	mov byte ptr [ebp - 0x18d], 0xfa
0x8049b68:   c7 85 6c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x194], 0
0x8049b72:   c7 85 68 fe ff ff fb ff ff ff   	mov dword ptr [ebp - 0x198], 0xfffffffb
0x8049b7c:   c7 85 64 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x19c], 0xffffffff
0x8049b86:   c7 45 8c 16 00 00 00            	mov dword ptr [ebp - 0x74], 0x16
0x8049b8d:   eb 7a                           	jmp 0x8049c09 <func_1+0x39c>
0x8049b8f:   c7 45 e8 00 00 00 00            	mov dword ptr [ebp - 0x18], 0
0x8049b96:   eb 04                           	jmp 0x8049b9c <func_1+0x32f>
0x8049b98:   83 6d e8 01                     	sub dword ptr [ebp - 0x18], 1
0x8049b9c:   83 7d e8 fd                     	cmp dword ptr [ebp - 0x18], -3
0x8049ba0:   7c f6                           	jl 0x8049b98 <func_1+0x32b>
0x8049ba2:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049ba9:   74 24                           	je 0x8049bcf <func_1+0x362>
0x8049bab:   c6 85 4b fe ff ff 1a            	mov byte ptr [ebp - 0x1b5], 0x1a
0x8049bb2:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049bb6:   83 e8 01                        	sub eax, 1
0x8049bb9:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x8049bbd:   0f b6 85 4b fe ff ff            	movzx eax, byte ptr [ebp - 0x1b5]
0x8049bc4:   83 c0 01                        	add eax, 1
0x8049bc7:   88 85 4b fe ff ff               	mov byte ptr [ebp - 0x1b5], al
0x8049bcd:   eb 32                           	jmp 0x8049c01 <func_1+0x394>
0x8049bcf:   0f be 85 73 fe ff ff            	movsx eax, byte ptr [ebp - 0x18d]
0x8049bd6:   39 85 84 fe ff ff               	cmp dword ptr [ebp - 0x17c], eax
0x8049bdc:   0f 9e c0                        	setle al
0x8049bdf:   0f b6 d0                        	movzx edx, al
0x8049be2:   0f b6 45 e7                     	movzx eax, byte ptr [ebp - 0x19]
0x8049be6:   0f be c0                        	movsx eax, al
0x8049be9:   0f af c2                        	imul eax, edx
0x8049bec:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x8049bf2:   0f 92 c0                        	setb al
0x8049bf5:   0f b6 c0                        	movzx eax, al
0x8049bf8:   89 45 88                        	mov dword ptr [ebp - 0x78], eax
0x8049bfb:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049bfe:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049c01:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x8049c05:   83 6d 8c 01                     	sub dword ptr [ebp - 0x74], 1
0x8049c09:   83 7d 8c 10                     	cmp dword ptr [ebp - 0x74], 0x10
0x8049c0d:   7e 80                           	jle 0x8049b8f <func_1+0x322>
0x8049c0f:   66 c7 45 de 00 00               	mov word ptr [ebp - 0x22], 0
0x8049c15:   eb 73                           	jmp 0x8049c8a <func_1+0x41d>
0x8049c17:   c7 85 4c fe ff ff fa e5 0c 78   	mov dword ptr [ebp - 0x1b4], 0x780ce5fa
0x8049c21:   83 bd 84 fe ff ff 00            	cmp dword ptr [ebp - 0x17c], 0
0x8049c28:   0f 95 c0                        	setne al
0x8049c2b:   0f b6 d0                        	movzx edx, al
0x8049c2e:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049c32:   39 c2                           	cmp edx, eax
0x8049c34:   75 07                           	jne 0x8049c3d <func_1+0x3d0>
0x8049c36:   ba ec ff ff ff                  	mov edx, 0xffffffec
0x8049c3b:   eb 05                           	jmp 0x8049c42 <func_1+0x3d5>
0x8049c3d:   ba ed ff ff ff                  	mov edx, 0xffffffed
0x8049c42:   8b 85 4c fe ff ff               	mov eax, dword ptr [ebp - 0x1b4]
0x8049c48:   0f be c0                        	movsx eax, al
0x8049c4b:   89 c1                           	mov ecx, eax
0x8049c4d:   d3 e2                           	shl edx, cl
0x8049c4f:   89 d0                           	mov eax, edx
0x8049c51:   89 c2                           	mov edx, eax
0x8049c53:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x8049c57:   01 c2                           	add edx, eax
0x8049c59:   8b 45 e0                        	mov eax, dword ptr [ebp - 0x20]
0x8049c5c:   89 c1                           	mov ecx, eax
0x8049c5e:   0f b6 c2                        	movzx eax, dl
0x8049c61:   f6 f1                           	div cl
0x8049c63:   0f b6 c4                        	movzx eax, ah
0x8049c66:   0f b6 c0                        	movzx eax, al
0x8049c69:   c1 e0 05                        	shl eax, 5
0x8049c6c:   89 c2                           	mov edx, eax
0x8049c6e:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x8049c71:   01 c2                           	add edx, eax
0x8049c73:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x8049c7a:   39 c2                           	cmp edx, eax
0x8049c7c:   0f 94 c0                        	sete al
0x8049c7f:   0f b6 c0                        	movzx eax, al
0x8049c82:   89 45 8c                        	mov dword ptr [ebp - 0x74], eax
0x8049c85:   66 83 45 de 04                  	add word ptr [ebp - 0x22], 4
0x8049c8a:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x8049c8f:   74 86                           	je 0x8049c17 <func_1+0x3aa>
0x8049c91:   80 45 db 01                     	add byte ptr [ebp - 0x25], 1
0x8049c95:   80 7d db 00                     	cmp byte ptr [ebp - 0x25], 0
0x8049c99:   75 3c                           	jne 0x8049cd7 <func_1+0x46a>
0x8049c9b:   80 7d f3 00                     	cmp byte ptr [ebp - 0xd], 0
0x8049c9f:   75 17                           	jne 0x8049cb8 <func_1+0x44b>
0x8049ca1:   0f b6 85 73 fe ff ff            	movzx eax, byte ptr [ebp - 0x18d]
0x8049ca8:   3c 05                           	cmp al, 5
0x8049caa:   0f 96 c0                        	setbe al
0x8049cad:   0f b6 c0                        	movzx eax, al
0x8049cb0:   39 85 84 fe ff ff               	cmp dword ptr [ebp - 0x17c], eax
0x8049cb6:   74 07                           	je 0x8049cbf <func_1+0x452>
0x8049cb8:   b8 01 00 00 00                  	mov eax, 1
0x8049cbd:   eb 05                           	jmp 0x8049cc4 <func_1+0x457>
0x8049cbf:   b8 00 00 00 00                  	mov eax, 0
0x8049cc4:   98                              	cwde 
0x8049cc5:   8b 95 84 fe ff ff               	mov edx, dword ptr [ebp - 0x17c]
0x8049ccb:   0f bf ca                        	movsx ecx, dx
0x8049cce:   99                              	cdq 
0x8049ccf:   f7 f9                           	idiv ecx
0x8049cd1:   89 d0                           	mov eax, edx
0x8049cd3:   85 c0                           	test eax, eax
0x8049cd5:   74 07                           	je 0x8049cde <func_1+0x471>
0x8049cd7:   b8 01 00 00 00                  	mov eax, 1
0x8049cdc:   eb 05                           	jmp 0x8049ce3 <func_1+0x476>
0x8049cde:   b8 00 00 00 00                  	mov eax, 0
0x8049ce3:   3b 85 70 ff ff ff               	cmp eax, dword ptr [ebp - 0x90]
0x8049ce9:   83 7d 94 01                     	cmp dword ptr [ebp - 0x6c], 1
0x8049ced:   7e 07                           	jle 0x8049cf6 <func_1+0x489>
0x8049cef:   b8 bd ff ff ff                  	mov eax, 0xffffffbd
0x8049cf4:   eb 05                           	jmp 0x8049cfb <func_1+0x48e>
0x8049cf6:   b8 00 00 00 00                  	mov eax, 0
0x8049cfb:   33 85 50 ff ff ff               	xor eax, dword ptr [ebp - 0xb0]
0x8049d01:   89 c2                           	mov edx, eax
0x8049d03:   8b 45 8c                        	mov eax, dword ptr [ebp - 0x74]
0x8049d06:   31 c2                           	xor edx, eax
0x8049d08:   0f be 85 73 fe ff ff            	movsx eax, byte ptr [ebp - 0x18d]
0x8049d0f:   39 c2                           	cmp edx, eax
0x8049d11:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x8049d18:   0f 84 be 00 00 00               	je 0x8049ddc <func_1+0x56f>
0x8049d1e:   66 c7 85 62 fe ff ff 3c 54      	mov word ptr [ebp - 0x19e], 0x543c
0x8049d27:   c7 85 5c fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1a4], 1
0x8049d31:   83 bd 50 ff ff ff 00            	cmp dword ptr [ebp - 0xb0], 0
0x8049d38:   0f 84 86 00 00 00               	je 0x8049dc4 <func_1+0x557>
0x8049d3e:   c7 85 58 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x1a8], 0xffffffff
0x8049d48:   83 45 d4 01                     	add dword ptr [ebp - 0x2c], 1
0x8049d4c:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049d50:   0f be d0                        	movsx edx, al
0x8049d53:   0f bf 85 62 fe ff ff            	movsx eax, word ptr [ebp - 0x19e]
0x8049d5a:   bb 01 00 00 00                  	mov ebx, 1
0x8049d5f:   89 c1                           	mov ecx, eax
0x8049d61:   d3 fb                           	sar ebx, cl
0x8049d63:   89 d8                           	mov eax, ebx
0x8049d65:   89 c1                           	mov ecx, eax
0x8049d67:   89 c8                           	mov eax, ecx
0x8049d69:   01 c0                           	add eax, eax
0x8049d6b:   01 c8                           	add eax, ecx
0x8049d6d:   89 c1                           	mov ecx, eax
0x8049d6f:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049d73:   31 c8                           	xor eax, ecx
0x8049d75:   83 f0 fc                        	xor eax, 0xfffffffc
0x8049d78:   0f be c8                        	movsx ecx, al
0x8049d7b:   89 d0                           	mov eax, edx
0x8049d7d:   99                              	cdq 
0x8049d7e:   f7 f9                           	idiv ecx
0x8049d80:   0f b7 45 de                     	movzx eax, word ptr [ebp - 0x22]
0x8049d84:   39 c2                           	cmp edx, eax
0x8049d86:   0f 9e c0                        	setle al
0x8049d89:   0f b6 c0                        	movzx eax, al
0x8049d8c:   33 85 50 ff ff ff               	xor eax, dword ptr [ebp - 0xb0]
0x8049d92:   89 c2                           	mov edx, eax
0x8049d94:   0f be 85 73 fe ff ff            	movsx eax, byte ptr [ebp - 0x18d]
0x8049d9b:   01 d0                           	add eax, edx
0x8049d9d:   39 85 58 fe ff ff               	cmp dword ptr [ebp - 0x1a8], eax
0x8049da3:   0f 95 c0                        	setne al
0x8049da6:   0f b6 c0                        	movzx eax, al
0x8049da9:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x8049dac:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x8049db0:   0f bf 85 62 fe ff ff            	movsx eax, word ptr [ebp - 0x19e]
0x8049db7:   21 d0                           	and eax, edx
0x8049db9:   89 85 5c fe ff ff               	mov dword ptr [ebp - 0x1a4], eax
0x8049dbf:   e9 51 01 00 00                  	jmp 0x8049f15 <func_1+0x6a8>
0x8049dc4:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x8049dca:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049dcd:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x8049dd4:   89 45 a0                        	mov dword ptr [ebp - 0x60], eax
0x8049dd7:   e9 39 01 00 00                  	jmp 0x8049f15 <func_1+0x6a8>
0x8049ddc:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x8049de3:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x8049dea:   0f b7 95 58 ff ff ff            	movzx edx, word ptr [ebp - 0xa8]
0x8049df1:   0f bf 8d 5a ff ff ff            	movsx ecx, word ptr [ebp - 0xa6]
0x8049df8:   0f b6 75 ae                     	movzx esi, byte ptr [ebp - 0x52]
0x8049dfc:   0f bf bd 62 ff ff ff            	movsx edi, word ptr [ebp - 0x9e]
0x8049e03:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x8049e09:   0f bf 9d 64 ff ff ff            	movsx ebx, word ptr [ebp - 0x9c]
0x8049e10:   89 9d fc fd ff ff               	mov dword ptr [ebp - 0x204], ebx
0x8049e16:   0f be bd 67 ff ff ff            	movsx edi, byte ptr [ebp - 0x99]
0x8049e1d:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x8049e23:   0f be 5d af                     	movsx ebx, byte ptr [ebp - 0x51]
0x8049e27:   89 9d f4 fd ff ff               	mov dword ptr [ebp - 0x20c], ebx
0x8049e2d:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x8049e31:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x8049e37:   0f bf 5d be                     	movsx ebx, word ptr [ebp - 0x42]
0x8049e3b:   89 9d ec fd ff ff               	mov dword ptr [ebp - 0x214], ebx
0x8049e41:   0f b7 bd 6e ff ff ff            	movzx edi, word ptr [ebp - 0x92]
0x8049e48:   89 bd e8 fd ff ff               	mov dword ptr [ebp - 0x218], edi
0x8049e4e:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x8049e52:   89 9d e4 fd ff ff               	mov dword ptr [ebp - 0x21c], ebx
0x8049e58:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x8049e5c:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x8049e62:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x8049e66:   89 9d dc fd ff ff               	mov dword ptr [ebp - 0x224], ebx
0x8049e6c:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x8049e70:   89 bd d8 fd ff ff               	mov dword ptr [ebp - 0x228], edi
0x8049e76:   0f b7 7d dc                     	movzx edi, word ptr [ebp - 0x24]
0x8049e7a:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x8049e7e:   50                              	push eax
0x8049e7f:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x8049e82:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x8049e85:   52                              	push edx
0x8049e86:   51                              	push ecx
0x8049e87:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x8049e8d:   56                              	push esi
0x8049e8e:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x8049e94:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x8049e9a:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x8049ea0:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x8049ea6:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x8049eac:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x8049eaf:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x8049eb5:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x8049eb8:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x8049ebe:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x8049ec4:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x8049ec7:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x8049eca:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x8049ecd:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x8049ed3:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x8049ed6:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x8049ed9:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x8049edf:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x8049ee5:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x8049ee8:   ff b5 d8 fd ff ff               	push dword ptr [ebp - 0x228]
0x8049eee:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x8049ef1:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x8049ef7:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x8049efa:   57                              	push edi
0x8049efb:   53                              	push ebx
0x8049efc:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x8049f02:   e8 1f f7 ff ff                  	call 0x8049626 <set_var>
0x8049f07:   81 c4 84 00 00 00               	add esp, 0x84
0x8049f0d:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x8049f10:   e9 38 11 00 00                  	jmp 0x804b04d <func_1+0x17e0>
0x8049f15:   c7 45 c4 00 00 00 00            	mov dword ptr [ebp - 0x3c], 0
0x8049f1c:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x8049f1f:   89 45 c0                        	mov dword ptr [ebp - 0x40], eax
0x8049f22:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x8049f25:   3b 85 4c ff ff ff               	cmp eax, dword ptr [ebp - 0xb4]
0x8049f2b:   0f 94 c0                        	sete al
0x8049f2e:   0f b6 d0                        	movzx edx, al
0x8049f31:   0f b6 85 73 fe ff ff            	movzx eax, byte ptr [ebp - 0x18d]
0x8049f38:   0f b6 c0                        	movzx eax, al
0x8049f3b:   01 d0                           	add eax, edx
0x8049f3d:   85 c0                           	test eax, eax
0x8049f3f:   74 0e                           	je 0x8049f4f <func_1+0x6e2>
0x8049f41:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x8049f44:   89 85 74 fe ff ff               	mov dword ptr [ebp - 0x18c], eax
0x8049f4a:   e9 fe 00 00 00                  	jmp 0x804a04d <func_1+0x7e0>
0x8049f4f:   66 c7 85 56 fe ff ff 41 77      	mov word ptr [ebp - 0x1aa], 0x7741
0x8049f58:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x8049f5e:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x8049f61:   c7 45 d0 00 00 00 00            	mov dword ptr [ebp - 0x30], 0
0x8049f68:   eb 4d                           	jmp 0x8049fb7 <func_1+0x74a>
0x8049f6a:   c7 85 50 fe ff ff 03 00 00 00   	mov dword ptr [ebp - 0x1b0], 3
0x8049f74:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x8049f78:   75 18                           	jne 0x8049f92 <func_1+0x725>
0x8049f7a:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x8049f81:   0f 95 c0                        	setne al
0x8049f84:   0f b6 c0                        	movzx eax, al
0x8049f87:   0f b6 c0                        	movzx eax, al
0x8049f8a:   f6 75 e7                        	div byte ptr [ebp - 0x19]
0x8049f8d:   0f b6 c4                        	movzx eax, ah
0x8049f90:   84 c0                           	test al, al
0x8049f92:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x8049f96:   8d 50 01                        	lea edx, [eax + 1]
0x8049f99:   88 55 db                        	mov byte ptr [ebp - 0x25], dl
0x8049f9c:   0f b6 d0                        	movzx edx, al
0x8049f9f:   0f b6 45 f3                     	movzx eax, byte ptr [ebp - 0xd]
0x8049fa3:   83 f0 f8                        	xor eax, 0xfffffff8
0x8049fa6:   0f b6 c0                        	movzx eax, al
0x8049fa9:   0f af c2                        	imul eax, edx
0x8049fac:   98                              	cwde 
0x8049fad:   83 c0 07                        	add eax, 7
0x8049fb0:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x8049fb3:   83 6d d0 01                     	sub dword ptr [ebp - 0x30], 1
0x8049fb7:   83 7d d0 fb                     	cmp dword ptr [ebp - 0x30], -5
0x8049fbb:   7c ad                           	jl 0x8049f6a <func_1+0x6fd>
0x8049fbd:   0f b7 85 56 fe ff ff            	movzx eax, word ptr [ebp - 0x1aa]
0x8049fc4:   21 85 6c fe ff ff               	and dword ptr [ebp - 0x194], eax
0x8049fca:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x8049fce:   74 04                           	je 0x8049fd4 <func_1+0x767>
0x8049fd0:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x8049fd4:   0f b7 85 4a ff ff ff            	movzx eax, word ptr [ebp - 0xb6]
0x8049fdb:   0f be c8                        	movsx ecx, al
0x8049fde:   b8 5d 00 00 00                  	mov eax, 0x5d
0x8049fe3:   99                              	cdq 
0x8049fe4:   f7 f9                           	idiv ecx
0x8049fe6:   89 d0                           	mov eax, edx
0x8049fe8:   33 85 68 fe ff ff               	xor eax, dword ptr [ebp - 0x198]
0x8049fee:   89 c2                           	mov edx, eax
0x8049ff0:   8b 45 88                        	mov eax, dword ptr [ebp - 0x78]
0x8049ff3:   39 c2                           	cmp edx, eax
0x8049ff5:   0f 93 c0                        	setae al
0x8049ff8:   0f b6 d0                        	movzx edx, al
0x8049ffb:   66 0f be 85 73 fe ff ff         	movsx ax, byte ptr [ebp - 0x18d]
0x804a003:   09 d0                           	or eax, edx
0x804a005:   0f b7 d0                        	movzx edx, ax
0x804a008:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804a00e:   0f b7 c0                        	movzx eax, ax
0x804a011:   29 c2                           	sub edx, eax
0x804a013:   89 d0                           	mov eax, edx
0x804a015:   39 85 74 fe ff ff               	cmp dword ptr [ebp - 0x18c], eax
0x804a01b:   0f 95 c0                        	setne al
0x804a01e:   0f b6 c0                        	movzx eax, al
0x804a021:   89 85 64 fe ff ff               	mov dword ptr [ebp - 0x19c], eax
0x804a027:   8b 85 70 ff ff ff               	mov eax, dword ptr [ebp - 0x90]
0x804a02d:   0f b7 d0                        	movzx edx, ax
0x804a030:   8b 45 90                        	mov eax, dword ptr [ebp - 0x70]
0x804a033:   23 45 c4                        	and eax, dword ptr [ebp - 0x3c]
0x804a036:   89 45 90                        	mov dword ptr [ebp - 0x70], eax
0x804a039:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a03c:   89 45 c8                        	mov dword ptr [ebp - 0x38], eax
0x804a03f:   b8 01 00 00 00                  	mov eax, 1
0x804a044:   0f b7 c0                        	movzx eax, ax
0x804a047:   0f af c2                        	imul eax, edx
0x804a04a:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a04d:   83 7d 8c 00                     	cmp dword ptr [ebp - 0x74], 0
0x804a051:   66 83 45 dc 01                  	add word ptr [ebp - 0x24], 1
0x804a056:   66 83 7d dc 04                  	cmp word ptr [ebp - 0x24], 4
0x804a05b:   0f 84 32 fa ff ff               	je 0x8049a93 <func_1+0x226>
0x804a061:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a065:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a068:   0f b6 55 db                     	movzx edx, byte ptr [ebp - 0x25]
0x804a06c:   0f bf 85 4a ff ff ff            	movsx eax, word ptr [ebp - 0xb6]
0x804a073:   39 c2                           	cmp edx, eax
0x804a075:   0f 85 be 00 00 00               	jne 0x804a139 <func_1+0x8cc>
0x804a07b:   c6 85 7b fe ff ff 62            	mov byte ptr [ebp - 0x185], 0x62
0x804a082:   c7 45 84 00 00 00 00            	mov dword ptr [ebp - 0x7c], 0
0x804a089:   c7 45 e8 e9 ff ff ff            	mov dword ptr [ebp - 0x18], 0xffffffe9
0x804a090:   e9 89 00 00 00                  	jmp 0x804a11e <func_1+0x8b1>
0x804a095:   0f be 85 7b fe ff ff            	movsx eax, byte ptr [ebp - 0x185]
0x804a09c:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a09f:   83 7d d0 00                     	cmp dword ptr [ebp - 0x30], 0
0x804a0a3:   75 26                           	jne 0x804a0cb <func_1+0x85e>
0x804a0a5:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a0a8:   31 45 c0                        	xor dword ptr [ebp - 0x40], eax
0x804a0ab:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a0af:   0f 94 c0                        	sete al
0x804a0b2:   0f b6 c0                        	movzx eax, al
0x804a0b5:   89 85 4c ff ff ff               	mov dword ptr [ebp - 0xb4], eax
0x804a0bb:   83 bd 4c ff ff ff 00            	cmp dword ptr [ebp - 0xb4], 0
0x804a0c2:   75 07                           	jne 0x804a0cb <func_1+0x85e>
0x804a0c4:   66 83 7d 9e 00                  	cmp word ptr [ebp - 0x62], 0
0x804a0c9:   74 07                           	je 0x804a0d2 <func_1+0x865>
0x804a0cb:   b8 01 00 00 00                  	mov eax, 1
0x804a0d0:   eb 05                           	jmp 0x804a0d7 <func_1+0x86a>
0x804a0d2:   b8 00 00 00 00                  	mov eax, 0
0x804a0d7:   0f b6 d0                        	movzx edx, al
0x804a0da:   0f be 85 7b fe ff ff            	movsx eax, byte ptr [ebp - 0x185]
0x804a0e1:   39 c2                           	cmp edx, eax
0x804a0e3:   0f 9c c0                        	setl al
0x804a0e6:   0f b6 c0                        	movzx eax, al
0x804a0e9:   66 2b 45 de                     	sub ax, word ptr [ebp - 0x22]
0x804a0ed:   66 89 45 de                     	mov word ptr [ebp - 0x22], ax
0x804a0f1:   0f b7 55 de                     	movzx edx, word ptr [ebp - 0x22]
0x804a0f5:   0f b6 85 49 ff ff ff            	movzx eax, byte ptr [ebp - 0xb7]
0x804a0fc:   29 c2                           	sub edx, eax
0x804a0fe:   89 d0                           	mov eax, edx
0x804a100:   39 45 c4                        	cmp dword ptr [ebp - 0x3c], eax
0x804a103:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a107:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804a10a:   0f be 55 f3                     	movsx edx, byte ptr [ebp - 0xd]
0x804a10e:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a112:   0f be c0                        	movsx eax, al
0x804a115:   01 d0                           	add eax, edx
0x804a117:   09 45 84                        	or dword ptr [ebp - 0x7c], eax
0x804a11a:   83 45 e8 01                     	add dword ptr [ebp - 0x18], 1
0x804a11e:   83 7d e8 f4                     	cmp dword ptr [ebp - 0x18], -0xc
0x804a122:   0f 84 6d ff ff ff               	je 0x804a095 <func_1+0x828>
0x804a128:   8b 45 a0                        	mov eax, dword ptr [ebp - 0x60]
0x804a12b:   f7 d0                           	not eax
0x804a12d:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a130:   c7 45 ec 03 00 00 00            	mov dword ptr [ebp - 0x14], 3
0x804a137:   eb 1d                           	jmp 0x804a156 <func_1+0x8e9>
0x804a139:   c7 85 7c fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x184], 0
0x804a143:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a147:   89 85 7c fe ff ff               	mov dword ptr [ebp - 0x184], eax
0x804a14d:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a153:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a156:   83 7d e8 00                     	cmp dword ptr [ebp - 0x18], 0
0x804a15a:   75 06                           	jne 0x804a162 <func_1+0x8f5>
0x804a15c:   83 7d 94 00                     	cmp dword ptr [ebp - 0x6c], 0
0x804a160:   74 07                           	je 0x804a169 <func_1+0x8fc>
0x804a162:   b8 01 00 00 00                  	mov eax, 1
0x804a167:   eb 05                           	jmp 0x804a16e <func_1+0x901>
0x804a169:   b8 00 00 00 00                  	mov eax, 0
0x804a16e:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a171:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a174:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a177:   e9 16 09 00 00                  	jmp 0x804aa92 <func_1+0x1225>
0x804a17c:   c6 85 17 ff ff ff c7            	mov byte ptr [ebp - 0xe9], 0xc7
0x804a183:   c7 85 10 ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf0], 1
0x804a18d:   c7 85 0c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xf4], 1
0x804a197:   c6 85 0b ff ff ff f8            	mov byte ptr [ebp - 0xf5], 0xf8
0x804a19e:   c7 45 80 6f 9b bb 3f            	mov dword ptr [ebp - 0x80], 0x3fbb9b6f
0x804a1a5:   c7 85 04 ff ff ff e0 4e 49 01   	mov dword ptr [ebp - 0xfc], 0x1494ee0
0x804a1af:   c7 85 00 ff ff ff 44 07 ac 12   	mov dword ptr [ebp - 0x100], 0x12ac0744
0x804a1b9:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a1c3:   c7 85 f8 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x108], 0
0x804a1cd:   c7 85 f4 fe ff ff f6 ff ff ff   	mov dword ptr [ebp - 0x10c], 0xfffffff6
0x804a1d7:   c7 85 f0 fe ff ff 3e b0 4c 96   	mov dword ptr [ebp - 0x110], 0x964cb03e
0x804a1e1:   c7 85 ec fe ff ff fd ff ff ff   	mov dword ptr [ebp - 0x114], 0xfffffffd
0x804a1eb:   66 c7 85 ea fe ff ff 99 33      	mov word ptr [ebp - 0x116], 0x3399
0x804a1f4:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a1f7:   89 85 44 ff ff ff               	mov dword ptr [ebp - 0xbc], eax
0x804a1fd:   66 0f be 45 f3                  	movsx ax, byte ptr [ebp - 0xd]
0x804a202:   66 c1 e8 03                     	shr ax, 3
0x804a206:   0f b7 c0                        	movzx eax, ax
0x804a209:   39 85 70 ff ff ff               	cmp dword ptr [ebp - 0x90], eax
0x804a20f:   0f 9e c0                        	setle al
0x804a212:   0f b6 c0                        	movzx eax, al
0x804a215:   8b 55 a0                        	mov edx, dword ptr [ebp - 0x60]
0x804a218:   0f bf d2                        	movsx edx, dx
0x804a21b:   f7 da                           	neg edx
0x804a21d:   39 d0                           	cmp eax, edx
0x804a21f:   0f 85 1f 03 00 00               	jne 0x804a544 <func_1+0xcd7>
0x804a225:   66 c7 85 b4 fe ff ff 01 00      	mov word ptr [ebp - 0x14c], 1
0x804a22e:   c7 85 b0 fe ff ff c3 98 48 4f   	mov dword ptr [ebp - 0x150], 0x4f4898c3
0x804a238:   c7 85 7c ff ff ff 03 00 00 00   	mov dword ptr [ebp - 0x84], 3
0x804a242:   c7 85 ac fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x154], 0xfffffffa
0x804a24c:   c7 85 a8 fe ff ff 04 00 00 00   	mov dword ptr [ebp - 0x158], 4
0x804a256:   c7 85 a4 fe ff ff fd ff 9c 99   	mov dword ptr [ebp - 0x15c], 0x999cfffd
0x804a260:   c7 85 a0 fe ff ff 4c e5 d5 33   	mov dword ptr [ebp - 0x160], 0x33d5e54c
0x804a26a:   66 c7 45 9e 0d 00               	mov word ptr [ebp - 0x62], 0xd
0x804a270:   e9 b8 02 00 00                  	jmp 0x804a52d <func_1+0xcc0>
0x804a275:   66 c7 85 9e fe ff ff 11 db      	mov word ptr [ebp - 0x162], 0xdb11
0x804a27e:   c7 85 98 fe ff ff f6 96 cd a2   	mov dword ptr [ebp - 0x168], 0xa2cd96f6
0x804a288:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x804a28d:   75 0f                           	jne 0x804a29e <func_1+0xa31>
0x804a28f:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x804a293:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a296:   98                              	cwde 
0x804a297:   0f af c2                        	imul eax, edx
0x804a29a:   85 c0                           	test eax, eax
0x804a29c:   74 07                           	je 0x804a2a5 <func_1+0xa38>
0x804a29e:   b8 01 00 00 00                  	mov eax, 1
0x804a2a3:   eb 05                           	jmp 0x804a2aa <func_1+0xa3d>
0x804a2a5:   b8 00 00 00 00                  	mov eax, 0
0x804a2aa:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a2ad:   66 83 bd b4 fe ff ff 00         	cmp word ptr [ebp - 0x14c], 0
0x804a2b5:   0f 84 b7 00 00 00               	je 0x804a372 <func_1+0xb05>
0x804a2bb:   0f b6 55 e7                     	movzx edx, byte ptr [ebp - 0x19]
0x804a2bf:   0f b6 8d 49 ff ff ff            	movzx ecx, byte ptr [ebp - 0xb7]
0x804a2c6:   0f be 85 17 ff ff ff            	movsx eax, byte ptr [ebp - 0xe9]
0x804a2cd:   39 c1                           	cmp ecx, eax
0x804a2cf:   0f 95 c0                        	setne al
0x804a2d2:   0f b6 c8                        	movzx ecx, al
0x804a2d5:   0f b7 85 b4 fe ff ff            	movzx eax, word ptr [ebp - 0x14c]
0x804a2dc:   31 c8                           	xor eax, ecx
0x804a2de:   89 c1                           	mov ecx, eax
0x804a2e0:   8b 85 b0 fe ff ff               	mov eax, dword ptr [ebp - 0x150]
0x804a2e6:   01 c8                           	add eax, ecx
0x804a2e8:   66 c1 f8 06                     	sar ax, 6
0x804a2ec:   98                              	cwde 
0x804a2ed:   39 c2                           	cmp edx, eax
0x804a2ef:   7d 11                           	jge 0x804a302 <func_1+0xa95>
0x804a2f1:   66 83 bd 9e fe ff ff 00         	cmp word ptr [ebp - 0x162], 0
0x804a2f9:   74 07                           	je 0x804a302 <func_1+0xa95>
0x804a2fb:   b8 01 00 00 00                  	mov eax, 1
0x804a300:   eb 05                           	jmp 0x804a307 <func_1+0xa9a>
0x804a302:   b8 00 00 00 00                  	mov eax, 0
0x804a307:   33 85 10 ff ff ff               	xor eax, dword ptr [ebp - 0xf0]
0x804a30d:   3d f7 eb d6 8b                  	cmp eax, 0x8bd6ebf7
0x804a312:   0f 97 c0                        	seta al
0x804a315:   89 c2                           	mov edx, eax
0x804a317:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a31b:   31 d0                           	xor eax, edx
0x804a31d:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a320:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a324:   05 a7 00 00 00                  	add eax, 0xa7
0x804a329:   3d 65 09 1f 6c                  	cmp eax, 0x6c1f0965
0x804a32e:   0f 9e c0                        	setle al
0x804a331:   0f b6 c0                        	movzx eax, al
0x804a334:   21 85 98 fe ff ff               	and dword ptr [ebp - 0x168], eax
0x804a33a:   81 bd 98 fe ff ff 5e af 92 17   	cmp dword ptr [ebp - 0x168], 0x1792af5e
0x804a344:   0f 9f c0                        	setg al
0x804a347:   0f b6 c0                        	movzx eax, al
0x804a34a:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a34d:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a353:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a359:   89 c2                           	mov edx, eax
0x804a35b:   66 81 fa 41 e3                  	cmp dx, 0xe341
0x804a360:   0f 93 c0                        	setae al
0x804a363:   0f b6 c0                        	movzx eax, al
0x804a366:   66 69 c0 41 e3                  	imul ax, ax, 0xe341
0x804a36b:   29 c2                           	sub edx, eax
0x804a36d:   89 d0                           	mov eax, edx
0x804a36f:   66 85 c0                        	test ax, ax
0x804a372:   c7 85 10 fe ff ff fc ff ff ff   	mov dword ptr [ebp - 0x1f0], 0xfffffffc
0x804a37c:   c7 85 7c ff ff ff 00 00 00 00   	mov dword ptr [ebp - 0x84], 0
0x804a386:   eb 2f                           	jmp 0x804a3b7 <func_1+0xb4a>
0x804a388:   8b 85 74 ff ff ff               	mov eax, dword ptr [ebp - 0x8c]
0x804a38e:   89 85 10 fe ff ff               	mov dword ptr [ebp - 0x1f0], eax
0x804a394:   83 bd 70 ff ff ff 00            	cmp dword ptr [ebp - 0x90], 0
0x804a39b:   75 12                           	jne 0x804a3af <func_1+0xb42>
0x804a39d:   83 45 b0 01                     	add dword ptr [ebp - 0x50], 1
0x804a3a1:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a3a5:   d0 f8                           	sar al, 1
0x804a3a7:   0f be c0                        	movsx eax, al
0x804a3aa:   21 45 b8                        	and dword ptr [ebp - 0x48], eax
0x804a3ad:   eb 01                           	jmp 0x804a3b0 <func_1+0xb43>
0x804a3af:   90                              	nop 
0x804a3b0:   83 ad 7c ff ff ff 01            	sub dword ptr [ebp - 0x84], 1
0x804a3b7:   83 bd 7c ff ff ff f7            	cmp dword ptr [ebp - 0x84], -9
0x804a3be:   7c c8                           	jl 0x804a388 <func_1+0xb1b>
0x804a3c0:   81 65 b8 01 5d 6b cc            	and dword ptr [ebp - 0x48], 0xcc6b5d01
0x804a3c7:   c7 45 a0 00 00 00 00            	mov dword ptr [ebp - 0x60], 0
0x804a3ce:   e9 45 01 00 00                  	jmp 0x804a518 <func_1+0xcab>
0x804a3d3:   66 c7 85 96 fe ff ff cc 58      	mov word ptr [ebp - 0x16a], 0x58cc
0x804a3dc:   c7 85 90 fe ff ff 3a 26 48 a0   	mov dword ptr [ebp - 0x170], 0xa048263a
0x804a3e6:   0f be 85 0b ff ff ff            	movsx eax, byte ptr [ebp - 0xf5]
0x804a3ed:   89 85 98 fe ff ff               	mov dword ptr [ebp - 0x168], eax
0x804a3f3:   8b 85 98 fe ff ff               	mov eax, dword ptr [ebp - 0x168]
0x804a3f9:   0f b6 d0                        	movzx edx, al
0x804a3fc:   66 83 bd 9e fe ff ff 00         	cmp word ptr [ebp - 0x162], 0
0x804a404:   74 3b                           	je 0x804a441 <func_1+0xbd4>
0x804a406:   0f b6 4d db                     	movzx ecx, byte ptr [ebp - 0x25]
0x804a40a:   81 7d ec d7 00 00 00            	cmp dword ptr [ebp - 0x14], 0xd7
0x804a411:   0f 94 c0                        	sete al
0x804a414:   0f b6 c0                        	movzx eax, al
0x804a417:   21 45 80                        	and dword ptr [ebp - 0x80], eax
0x804a41a:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a41d:   c0 e8 03                        	shr al, 3
0x804a420:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804a423:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804a427:   39 c1                           	cmp ecx, eax
0x804a429:   0f 9c c0                        	setl al
0x804a42c:   0f b6 c8                        	movzx ecx, al
0x804a42f:   0f b7 85 9e fe ff ff            	movzx eax, word ptr [ebp - 0x162]
0x804a436:   39 c1                           	cmp ecx, eax
0x804a438:   0f 94 c0                        	sete al
0x804a43b:   0f b6 c0                        	movzx eax, al
0x804a43e:   31 45 98                        	xor dword ptr [ebp - 0x68], eax
0x804a441:   b8 00 00 00 00                  	mov eax, 0
0x804a446:   0f b6 c0                        	movzx eax, al
0x804a449:   89 c1                           	mov ecx, eax
0x804a44b:   d3 fa                           	sar edx, cl
0x804a44d:   89 d0                           	mov eax, edx
0x804a44f:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a452:   0f b7 85 96 fe ff ff            	movzx eax, word ptr [ebp - 0x16a]
0x804a459:   83 c0 01                        	add eax, 1
0x804a45c:   66 89 85 96 fe ff ff            	mov word ptr [ebp - 0x16a], ax
0x804a463:   83 bd ac fe ff ff 00            	cmp dword ptr [ebp - 0x154], 0
0x804a46a:   74 24                           	je 0x804a490 <func_1+0xc23>
0x804a46c:   c7 85 88 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x178], 0xfffffffe
0x804a476:   8b 85 10 ff ff ff               	mov eax, dword ptr [ebp - 0xf0]
0x804a47c:   89 85 90 fe ff ff               	mov dword ptr [ebp - 0x170], eax
0x804a482:   83 bd 88 fe ff ff 00            	cmp dword ptr [ebp - 0x178], 0
0x804a489:   74 5d                           	je 0x804a4e8 <func_1+0xc7b>
0x804a48b:   e9 84 00 00 00                  	jmp 0x804a514 <func_1+0xca7>
0x804a490:   c6 85 8f fe ff ff b0            	mov byte ptr [ebp - 0x171], 0xb0
0x804a497:   8b 45 b0                        	mov eax, dword ptr [ebp - 0x50]
0x804a49a:   83 c8 01                        	or eax, 1
0x804a49d:   0f b7 d0                        	movzx edx, ax
0x804a4a0:   0f b7 85 9e fe ff ff            	movzx eax, word ptr [ebp - 0x162]
0x804a4a7:   30 85 8f fe ff ff               	xor byte ptr [ebp - 0x171], al
0x804a4ad:   0f b6 85 8f fe ff ff            	movzx eax, byte ptr [ebp - 0x171]
0x804a4b4:   0f af c2                        	imul eax, edx
0x804a4b7:   85 c0                           	test eax, eax
0x804a4b9:   74 0e                           	je 0x804a4c9 <func_1+0xc5c>
0x804a4bb:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x804a4c0:   74 07                           	je 0x804a4c9 <func_1+0xc5c>
0x804a4c2:   b8 01 00 00 00                  	mov eax, 1
0x804a4c7:   eb 05                           	jmp 0x804a4ce <func_1+0xc61>
0x804a4c9:   b8 00 00 00 00                  	mov eax, 0
0x804a4ce:   33 85 98 fe ff ff               	xor eax, dword ptr [ebp - 0x168]
0x804a4d4:   25 f7 91 00 00                  	and eax, 0x91f7
0x804a4d9:   0b 45 d0                        	or eax, dword ptr [ebp - 0x30]
0x804a4dc:   21 85 90 fe ff ff               	and dword ptr [ebp - 0x170], eax
0x804a4e2:   83 7d b0 00                     	cmp dword ptr [ebp - 0x50], 0
0x804a4e6:   75 2b                           	jne 0x804a513 <func_1+0xca6>
0x804a4e8:   66 c7 45 dc f2 ff               	mov word ptr [ebp - 0x24], 0xfff2
0x804a4ee:   eb 1a                           	jmp 0x804a50a <func_1+0xc9d>
0x804a4f0:   0f b6 85 17 ff ff ff            	movzx eax, byte ptr [ebp - 0xe9]
0x804a4f7:   3c b0                           	cmp al, 0xb0
0x804a4f9:   0f 93 c0                        	setae al
0x804a4fc:   0f b6 c0                        	movzx eax, al
0x804a4ff:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a505:   66 83 45 dc 06                  	add word ptr [ebp - 0x24], 6
0x804a50a:   66 83 7d dc 1c                  	cmp word ptr [ebp - 0x24], 0x1c
0x804a50f:   75 df                           	jne 0x804a4f0 <func_1+0xc83>
0x804a511:   eb 01                           	jmp 0x804a514 <func_1+0xca7>
0x804a513:   90                              	nop 
0x804a514:   83 45 a0 01                     	add dword ptr [ebp - 0x60], 1
0x804a518:   83 7d a0 38                     	cmp dword ptr [ebp - 0x60], 0x38
0x804a51c:   0f 87 b1 fe ff ff               	ja 0x804a3d3 <func_1+0xb66>
0x804a522:   0f b7 45 9e                     	movzx eax, word ptr [ebp - 0x62]
0x804a526:   83 e8 09                        	sub eax, 9
0x804a529:   66 89 45 9e                     	mov word ptr [ebp - 0x62], ax
0x804a52d:   66 83 7d 9e 02                  	cmp word ptr [ebp - 0x62], 2
0x804a532:   0f 8f 3d fd ff ff               	jg 0x804a275 <func_1+0xa08>
0x804a538:   83 85 f4 fe ff ff 01            	add dword ptr [ebp - 0x10c], 1
0x804a53f:   e9 4e 05 00 00                  	jmp 0x804aa92 <func_1+0x1225>
0x804a544:   c7 85 e4 fe ff ff b4 1e d6 f2   	mov dword ptr [ebp - 0x11c], 0xf2d61eb4
0x804a54e:   c7 85 e0 fe ff ff fa ff ff ff   	mov dword ptr [ebp - 0x120], 0xfffffffa
0x804a558:   c7 85 78 ff ff ff 60 14 22 13   	mov dword ptr [ebp - 0x88], 0x13221460
0x804a562:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a568:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a56b:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804a56f:   0f 84 be 03 00 00               	je 0x804a933 <func_1+0x10c6>
0x804a575:   c7 85 d4 fe ff ff 83 a6 f8 6e   	mov dword ptr [ebp - 0x12c], 0x6ef8a683
0x804a57f:   c7 85 d0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x130], 0xffffffff
0x804a589:   c7 85 cc fe ff ff 8b d1 dd 06   	mov dword ptr [ebp - 0x134], 0x6ddd18b
0x804a593:   66 c7 85 ca fe ff ff 09 00      	mov word ptr [ebp - 0x136], 9
0x804a59c:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x804a5a4:   0f 95 c0                        	setne al
0x804a5a7:   0f b6 c0                        	movzx eax, al
0x804a5aa:   98                              	cwde 
0x804a5ab:   0f b7 55 ce                     	movzx edx, word ptr [ebp - 0x32]
0x804a5af:   0f bf ca                        	movsx ecx, dx
0x804a5b2:   99                              	cdq 
0x804a5b3:   f7 f9                           	idiv ecx
0x804a5b5:   89 d0                           	mov eax, edx
0x804a5b7:   66 c1 f8 03                     	sar ax, 3
0x804a5bb:   66 c1 e8 0f                     	shr ax, 0xf
0x804a5bf:   0f b6 c0                        	movzx eax, al
0x804a5c2:   39 45 d0                        	cmp dword ptr [ebp - 0x30], eax
0x804a5c5:   0f 95 c0                        	setne al
0x804a5c8:   0f b6 c0                        	movzx eax, al
0x804a5cb:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804a5ce:   0f 92 c0                        	setb al
0x804a5d1:   0f b6 c0                        	movzx eax, al
0x804a5d4:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804a5d8:   66 83 7d be fa                  	cmp word ptr [ebp - 0x42], -6
0x804a5dd:   0f 8c 82 02 00 00               	jl 0x804a865 <func_1+0xff8>
0x804a5e3:   c7 85 c4 fe ff ff 3d 04 7d fd   	mov dword ptr [ebp - 0x13c], 0xfd7d043d
0x804a5ed:   c7 85 c0 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x140], 0xffffffff
0x804a5f7:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a5fd:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a600:   c7 85 fc fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x104], 0
0x804a60a:   83 bd fc fe ff ff f0            	cmp dword ptr [ebp - 0x104], -0x10
0x804a611:   0f 84 36 02 00 00               	je 0x804a84d <func_1+0xfe0>
0x804a617:   c7 85 bc fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x144], 0xffffffff
0x804a621:   c7 85 b8 fe ff ff fe ff ff ff   	mov dword ptr [ebp - 0x148], 0xfffffffe
0x804a62b:   c6 85 b7 fe ff ff 01            	mov byte ptr [ebp - 0x149], 1
0x804a632:   66 c7 45 de 07 00               	mov word ptr [ebp - 0x22], 7
0x804a638:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a63e:   83 c0 05                        	add eax, 5
0x804a641:   66 89 45 be                     	mov word ptr [ebp - 0x42], ax
0x804a645:   0f bf 45 be                     	movsx eax, word ptr [ebp - 0x42]
0x804a649:   89 85 bc fe ff ff               	mov dword ptr [ebp - 0x144], eax
0x804a64f:   8b 85 bc fe ff ff               	mov eax, dword ptr [ebp - 0x144]
0x804a655:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a65b:   8b 85 0c ff ff ff               	mov eax, dword ptr [ebp - 0xf4]
0x804a661:   0f bf d0                        	movsx edx, ax
0x804a664:   0f b6 85 49 ff ff ff            	movzx eax, byte ptr [ebp - 0xb7]
0x804a66b:   0f af c2                        	imul eax, edx
0x804a66e:   39 85 d4 fe ff ff               	cmp dword ptr [ebp - 0x12c], eax
0x804a674:   0f 93 c0                        	setae al
0x804a677:   0f b6 c0                        	movzx eax, al
0x804a67a:   89 c2                           	mov edx, eax
0x804a67c:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a680:   09 d0                           	or eax, edx
0x804a682:   88 45 db                        	mov byte ptr [ebp - 0x25], al
0x804a685:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804a689:   c1 e0 04                        	shl eax, 4
0x804a68c:   3d d9 5f 00 00                  	cmp eax, 0x5fd9
0x804a691:   0f 94 c0                        	sete al
0x804a694:   0f b6 d0                        	movzx edx, al
0x804a697:   8b 45 80                        	mov eax, dword ptr [ebp - 0x80]
0x804a69a:   0f b7 c0                        	movzx eax, ax
0x804a69d:   89 c1                           	mov ecx, eax
0x804a69f:   d3 e2                           	shl edx, cl
0x804a6a1:   89 d0                           	mov eax, edx
0x804a6a3:   0f b7 d0                        	movzx edx, ax
0x804a6a6:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804a6aa:   89 c1                           	mov ecx, eax
0x804a6ac:   d3 e2                           	shl edx, cl
0x804a6ae:   89 d0                           	mov eax, edx
0x804a6b0:   f7 d8                           	neg eax
0x804a6b2:   89 85 38 ff ff ff               	mov dword ptr [ebp - 0xc8], eax
0x804a6b8:   8b 85 38 ff ff ff               	mov eax, dword ptr [ebp - 0xc8]
0x804a6be:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a6c1:   8b 45 d0                        	mov eax, dword ptr [ebp - 0x30]
0x804a6c4:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804a6c7:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a6cd:   8b 55 c4                        	mov edx, dword ptr [ebp - 0x3c]
0x804a6d0:   29 c2                           	sub edx, eax
0x804a6d2:   89 d0                           	mov eax, edx
0x804a6d4:   89 85 b8 fe ff ff               	mov dword ptr [ebp - 0x148], eax
0x804a6da:   66 83 7d be ff                  	cmp word ptr [ebp - 0x42], -1
0x804a6df:   75 09                           	jne 0x804a6ea <func_1+0xe7d>
0x804a6e1:   80 bd b7 fe ff ff 00            	cmp byte ptr [ebp - 0x149], 0
0x804a6e8:   74 07                           	je 0x804a6f1 <func_1+0xe84>
0x804a6ea:   b8 01 00 00 00                  	mov eax, 1
0x804a6ef:   eb 05                           	jmp 0x804a6f6 <func_1+0xe89>
0x804a6f1:   b8 00 00 00 00                  	mov eax, 0
0x804a6f6:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a6f9:   83 7d ec 00                     	cmp dword ptr [ebp - 0x14], 0
0x804a6fd:   0f 95 c0                        	setne al
0x804a700:   0f b6 d0                        	movzx edx, al
0x804a703:   0f b6 85 b7 fe ff ff            	movzx eax, byte ptr [ebp - 0x149]
0x804a70a:   39 c2                           	cmp edx, eax
0x804a70c:   0f 9c c0                        	setl al
0x804a70f:   0f b6 c0                        	movzx eax, al
0x804a712:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a718:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804a71f:   0f b7 95 58 ff ff ff            	movzx edx, word ptr [ebp - 0xa8]
0x804a726:   0f bf 8d 5a ff ff ff            	movsx ecx, word ptr [ebp - 0xa6]
0x804a72d:   0f b6 75 ae                     	movzx esi, byte ptr [ebp - 0x52]
0x804a731:   0f bf bd 62 ff ff ff            	movsx edi, word ptr [ebp - 0x9e]
0x804a738:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804a73e:   0f bf 9d 64 ff ff ff            	movsx ebx, word ptr [ebp - 0x9c]
0x804a745:   89 9d fc fd ff ff               	mov dword ptr [ebp - 0x204], ebx
0x804a74b:   0f be bd 67 ff ff ff            	movsx edi, byte ptr [ebp - 0x99]
0x804a752:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804a758:   0f be 5d af                     	movsx ebx, byte ptr [ebp - 0x51]
0x804a75c:   89 9d f4 fd ff ff               	mov dword ptr [ebp - 0x20c], ebx
0x804a762:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x804a766:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804a76c:   0f bf 5d be                     	movsx ebx, word ptr [ebp - 0x42]
0x804a770:   89 9d ec fd ff ff               	mov dword ptr [ebp - 0x214], ebx
0x804a776:   0f b7 bd 6e ff ff ff            	movzx edi, word ptr [ebp - 0x92]
0x804a77d:   89 bd e8 fd ff ff               	mov dword ptr [ebp - 0x218], edi
0x804a783:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804a787:   89 9d e4 fd ff ff               	mov dword ptr [ebp - 0x21c], ebx
0x804a78d:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804a791:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804a797:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804a79b:   89 9d dc fd ff ff               	mov dword ptr [ebp - 0x224], ebx
0x804a7a1:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x804a7a5:   89 bd d8 fd ff ff               	mov dword ptr [ebp - 0x228], edi
0x804a7ab:   0f b7 7d dc                     	movzx edi, word ptr [ebp - 0x24]
0x804a7af:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804a7b3:   50                              	push eax
0x804a7b4:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804a7b7:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804a7ba:   52                              	push edx
0x804a7bb:   51                              	push ecx
0x804a7bc:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804a7c2:   56                              	push esi
0x804a7c3:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804a7c9:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804a7cf:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804a7d5:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804a7db:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804a7e1:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804a7e4:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804a7ea:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804a7ed:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804a7f3:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804a7f9:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804a7fc:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804a7ff:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804a802:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804a808:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804a80b:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804a80e:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804a814:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804a81a:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804a81d:   ff b5 d8 fd ff ff               	push dword ptr [ebp - 0x228]
0x804a823:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804a826:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804a82c:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804a82f:   57                              	push edi
0x804a830:   53                              	push ebx
0x804a831:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804a837:   e8 ea ed ff ff                  	call 0x8049626 <set_var>
0x804a83c:   81 c4 84 00 00 00               	add esp, 0x84
0x804a842:   8b 85 c4 fe ff ff               	mov eax, dword ptr [ebp - 0x13c]
0x804a848:   e9 00 08 00 00                  	jmp 0x804b04d <func_1+0x17e0>
0x804a84d:   8b 45 ec                        	mov eax, dword ptr [ebp - 0x14]
0x804a850:   0b 85 74 ff ff ff               	or eax, dword ptr [ebp - 0x8c]
0x804a856:   89 45 ec                        	mov dword ptr [ebp - 0x14], eax
0x804a859:   0f b6 45 ae                     	movzx eax, byte ptr [ebp - 0x52]
0x804a85d:   83 e8 01                        	sub eax, 1
0x804a860:   88 45 ae                        	mov byte ptr [ebp - 0x52], al
0x804a863:   eb 77                           	jmp 0x804a8dc <func_1+0x106f>
0x804a865:   0f be 45 b7                     	movsx eax, byte ptr [ebp - 0x49]
0x804a869:   8b 95 d0 fe ff ff               	mov edx, dword ptr [ebp - 0x130]
0x804a86f:   0f be f2                        	movsx esi, dl
0x804a872:   99                              	cdq 
0x804a873:   f7 fe                           	idiv esi
0x804a875:   33 85 0c ff ff ff               	xor eax, dword ptr [ebp - 0xf4]
0x804a87b:   89 c2                           	mov edx, eax
0x804a87d:   0f bf 85 ca fe ff ff            	movsx eax, word ptr [ebp - 0x136]
0x804a884:   09 85 cc fe ff ff               	or dword ptr [ebp - 0x134], eax
0x804a88a:   83 bd cc fe ff ff 00            	cmp dword ptr [ebp - 0x134], 0
0x804a891:   74 07                           	je 0x804a89a <func_1+0x102d>
0x804a893:   b8 01 00 00 00                  	mov eax, 1
0x804a898:   eb 05                           	jmp 0x804a89f <func_1+0x1032>
0x804a89a:   b8 00 00 00 00                  	mov eax, 0
0x804a89f:   89 c3                           	mov ebx, eax
0x804a8a1:   8b 45 98                        	mov eax, dword ptr [ebp - 0x68]
0x804a8a4:   89 c1                           	mov ecx, eax
0x804a8a6:   0f b6 c3                        	movzx eax, bl
0x804a8a9:   f6 f1                           	div cl
0x804a8ab:   0f b6 c0                        	movzx eax, al
0x804a8ae:   09 d0                           	or eax, edx
0x804a8b0:   2b 45 d0                        	sub eax, dword ptr [ebp - 0x30]
0x804a8b3:   89 85 e0 fe ff ff               	mov dword ptr [ebp - 0x120], eax
0x804a8b9:   8b 85 e0 fe ff ff               	mov eax, dword ptr [ebp - 0x120]
0x804a8bf:   66 2d 99 1f                     	sub ax, 0x1f99
0x804a8c3:   0f b7 c0                        	movzx eax, ax
0x804a8c6:   0f b6 75 db                     	movzx esi, byte ptr [ebp - 0x25]
0x804a8ca:   99                              	cdq 
0x804a8cb:   f7 fe                           	idiv esi
0x804a8cd:   0d 1a 26 00 00                  	or eax, 0x261a
0x804a8d2:   31 45 b8                        	xor dword ptr [ebp - 0x48], eax
0x804a8d5:   83 b5 78 ff ff ff 09            	xor dword ptr [ebp - 0x88], 9
0x804a8dc:   c7 45 e0 00 00 00 00            	mov dword ptr [ebp - 0x20], 0
0x804a8e3:   8b 85 d4 fe ff ff               	mov eax, dword ptr [ebp - 0x12c]
0x804a8e9:   89 85 d0 fe ff ff               	mov dword ptr [ebp - 0x130], eax
0x804a8ef:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a8f3:   f7 d0                           	not eax
0x804a8f5:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a8f8:   c7 85 cc fe ff ff 55 00 00 00   	mov dword ptr [ebp - 0x134], 0x55
0x804a902:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804a906:   0f b6 c8                        	movzx ecx, al
0x804a909:   ba 61 60 60 60                  	mov edx, 0x60606061
0x804a90e:   89 c8                           	mov eax, ecx
0x804a910:   f7 ea                           	imul edx
0x804a912:   c1 fa 05                        	sar edx, 5
0x804a915:   89 c8                           	mov eax, ecx
0x804a917:   c1 f8 1f                        	sar eax, 0x1f
0x804a91a:   29 c2                           	sub edx, eax
0x804a91c:   89 d0                           	mov eax, edx
0x804a91e:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a921:   8b 45 b8                        	mov eax, dword ptr [ebp - 0x48]
0x804a924:   6b c0 55                        	imul eax, eax, 0x55
0x804a927:   29 c1                           	sub ecx, eax
0x804a929:   89 c8                           	mov eax, ecx
0x804a92b:   89 45 b8                        	mov dword ptr [ebp - 0x48], eax
0x804a92e:   e9 e5 00 00 00                  	jmp 0x804aa18 <func_1+0x11ab>
0x804a933:   c6 85 df fe ff ff 00            	mov byte ptr [ebp - 0x121], 0
0x804a93a:   c7 85 d8 fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x128], 1
0x804a944:   8b 45 c0                        	mov eax, dword ptr [ebp - 0x40]
0x804a947:   33 45 ec                        	xor eax, dword ptr [ebp - 0x14]
0x804a94a:   39 85 74 ff ff ff               	cmp dword ptr [ebp - 0x8c], eax
0x804a950:   75 0d                           	jne 0x804a95f <func_1+0x10f2>
0x804a952:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804a956:   74 07                           	je 0x804a95f <func_1+0x10f2>
0x804a958:   ba 01 00 00 00                  	mov edx, 1
0x804a95d:   eb 05                           	jmp 0x804a964 <func_1+0x10f7>
0x804a95f:   ba 00 00 00 00                  	mov edx, 0
0x804a964:   0f be 85 df fe ff ff            	movsx eax, byte ptr [ebp - 0x121]
0x804a96b:   39 c2                           	cmp edx, eax
0x804a96d:   0f 9c c0                        	setl al
0x804a970:   0f b6 d0                        	movzx edx, al
0x804a973:   8b 45 c8                        	mov eax, dword ptr [ebp - 0x38]
0x804a976:   0f b7 c0                        	movzx eax, ax
0x804a979:   01 d0                           	add eax, edx
0x804a97b:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804a981:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x804a985:   90                              	nop 
0x804a986:   8b 85 e4 fe ff ff               	mov eax, dword ptr [ebp - 0x11c]
0x804a98c:   0f be c0                        	movsx eax, al
0x804a98f:   f7 d8                           	neg eax
0x804a991:   09 85 d8 fe ff ff               	or dword ptr [ebp - 0x128], eax
0x804a997:   8b 85 d8 fe ff ff               	mov eax, dword ptr [ebp - 0x128]
0x804a99d:   3c ff                           	cmp al, 0xff
0x804a99f:   0f 93 c0                        	setae al
0x804a9a2:   c0 e8 04                        	shr al, 4
0x804a9a5:   0f b6 c0                        	movzx eax, al
0x804a9a8:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804a9ab:   0f b7 85 6e ff ff ff            	movzx eax, word ptr [ebp - 0x92]
0x804a9b2:   0f b6 d0                        	movzx edx, al
0x804a9b5:   8b 85 fc fe ff ff               	mov eax, dword ptr [ebp - 0x104]
0x804a9bb:   0f b6 c0                        	movzx eax, al
0x804a9be:   89 c1                           	mov ecx, eax
0x804a9c0:   d3 e2                           	shl edx, cl
0x804a9c2:   89 d0                           	mov eax, edx
0x804a9c4:   0f be d0                        	movsx edx, al
0x804a9c7:   0f be 85 df fe ff ff            	movsx eax, byte ptr [ebp - 0x121]
0x804a9ce:   29 c2                           	sub edx, eax
0x804a9d0:   89 d0                           	mov eax, edx
0x804a9d2:   89 85 00 ff ff ff               	mov dword ptr [ebp - 0x100], eax
0x804a9d8:   b8 01 00 00 00                  	mov eax, 1
0x804a9dd:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x804a9e1:   31 85 f8 fe ff ff               	xor dword ptr [ebp - 0x108], eax
0x804a9e7:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804a9ee:   39 85 f8 fe ff ff               	cmp dword ptr [ebp - 0x108], eax
0x804a9f4:   0f 94 c0                        	sete al
0x804a9f7:   0f b6 c0                        	movzx eax, al
0x804a9fa:   23 45 c0                        	and eax, dword ptr [ebp - 0x40]
0x804a9fd:   3d 98 ae 00 00                  	cmp eax, 0xae98
0x804aa02:   0f 9e c0                        	setle al
0x804aa05:   0f b6 c0                        	movzx eax, al
0x804aa08:   31 d0                           	xor eax, edx
0x804aa0a:   3d 8e 22 00 00                  	cmp eax, 0x228e
0x804aa0f:   0f 9f c0                        	setg al
0x804aa12:   0f b6 c0                        	movzx eax, al
0x804aa15:   89 45 e0                        	mov dword ptr [ebp - 0x20], eax
0x804aa18:   83 7d e0 00                     	cmp dword ptr [ebp - 0x20], 0
0x804aa1c:   74 10                           	je 0x804aa2e <func_1+0x11c1>
0x804aa1e:   83 bd e4 fe ff ff 00            	cmp dword ptr [ebp - 0x11c], 0
0x804aa25:   74 07                           	je 0x804aa2e <func_1+0x11c1>
0x804aa27:   b8 01 00 00 00                  	mov eax, 1
0x804aa2c:   eb 05                           	jmp 0x804aa33 <func_1+0x11c6>
0x804aa2e:   b8 00 00 00 00                  	mov eax, 0
0x804aa33:   39 45 a0                        	cmp dword ptr [ebp - 0x60], eax
0x804aa36:   0f 95 c0                        	setne al
0x804aa39:   f7 d8                           	neg eax
0x804aa3b:   0f be d0                        	movsx edx, al
0x804aa3e:   8b 85 30 ff ff ff               	mov eax, dword ptr [ebp - 0xd0]
0x804aa44:   0f be c0                        	movsx eax, al
0x804aa47:   0f af c2                        	imul eax, edx
0x804aa4a:   23 45 e0                        	and eax, dword ptr [ebp - 0x20]
0x804aa4d:   21 45 ec                        	and dword ptr [ebp - 0x14], eax
0x804aa50:   8b 45 e8                        	mov eax, dword ptr [ebp - 0x18]
0x804aa53:   0f be c0                        	movsx eax, al
0x804aa56:   c1 e0 07                        	shl eax, 7
0x804aa59:   89 45 c4                        	mov dword ptr [ebp - 0x3c], eax
0x804aa5c:   83 7d c4 fd                     	cmp dword ptr [ebp - 0x3c], -3
0x804aa60:   0f 96 c0                        	setbe al
0x804aa63:   0f b6 c0                        	movzx eax, al
0x804aa66:   89 85 0c ff ff ff               	mov dword ptr [ebp - 0xf4], eax
0x804aa6c:   8b 85 78 ff ff ff               	mov eax, dword ptr [ebp - 0x88]
0x804aa72:   0f b7 c0                        	movzx eax, ax
0x804aa75:   ba 08 00 00 00                  	mov edx, 8
0x804aa7a:   89 c1                           	mov ecx, eax
0x804aa7c:   d3 e2                           	shl edx, cl
0x804aa7e:   89 d0                           	mov eax, edx
0x804aa80:   89 c2                           	mov edx, eax
0x804aa82:   0f b7 85 ea fe ff ff            	movzx eax, word ptr [ebp - 0x116]
0x804aa89:   31 d0                           	xor eax, edx
0x804aa8b:   66 89 85 ea fe ff ff            	mov word ptr [ebp - 0x116], ax
0x804aa92:   66 83 ad 58 ff ff ff 01         	sub word ptr [ebp - 0xa8], 1
0x804aa9a:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804aaa0:   88 45 ae                        	mov byte ptr [ebp - 0x52], al
0x804aaa3:   0f b6 45 ae                     	movzx eax, byte ptr [ebp - 0x52]
0x804aaa7:   88 45 e7                        	mov byte ptr [ebp - 0x19], al
0x804aaaa:   66 83 7d de 00                  	cmp word ptr [ebp - 0x22], 0
0x804aaaf:   74 11                           	je 0x804aac2 <func_1+0x1255>
0x804aab1:   66 83 bd 26 ff ff ff 00         	cmp word ptr [ebp - 0xda], 0
0x804aab9:   74 07                           	je 0x804aac2 <func_1+0x1255>
0x804aabb:   ba 01 00 00 00                  	mov edx, 1
0x804aac0:   eb 05                           	jmp 0x804aac7 <func_1+0x125a>
0x804aac2:   ba 00 00 00 00                  	mov edx, 0
0x804aac7:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804aacb:   39 c2                           	cmp edx, eax
0x804aacd:   80 7d b7 00                     	cmp byte ptr [ebp - 0x49], 0
0x804aad1:   74 3f                           	je 0x804ab12 <func_1+0x12a5>
0x804aad3:   c7 85 18 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x1e8], 0xffffffff
0x804aadd:   c7 85 14 fe ff ff 1b d4 86 41   	mov dword ptr [ebp - 0x1ec], 0x4186d41b
0x804aae7:   83 65 a8 04                     	and dword ptr [ebp - 0x58], 4
0x804aaeb:   66 83 bd 64 ff ff ff 00         	cmp word ptr [ebp - 0x9c], 0
0x804aaf3:   ba 00 00 00 00                  	mov edx, 0
0x804aaf8:   0f b7 85 58 ff ff ff            	movzx eax, word ptr [ebp - 0xa8]
0x804aaff:   39 c2                           	cmp edx, eax
0x804ab01:   0f 9d c0                        	setge al
0x804ab04:   0f b6 c0                        	movzx eax, al
0x804ab07:   89 85 14 fe ff ff               	mov dword ptr [ebp - 0x1ec], eax
0x804ab0d:   e9 0b 04 00 00                  	jmp 0x804af1d <func_1+0x16b0>
0x804ab12:   66 c7 85 46 fe ff ff fc ff      	mov word ptr [ebp - 0x1ba], 0xfffc
0x804ab1b:   c7 85 40 fe ff ff 1e 6d 32 8d   	mov dword ptr [ebp - 0x1c0], 0x8d326d1e
0x804ab25:   c7 85 3c fe ff ff 01 00 00 00   	mov dword ptr [ebp - 0x1c4], 1
0x804ab2f:   c7 85 38 fe ff ff 1d 4e a7 1e   	mov dword ptr [ebp - 0x1c8], 0x1ea74e1d
0x804ab39:   c7 85 34 fe ff ff 3a 00 f8 78   	mov dword ptr [ebp - 0x1cc], 0x78f8003a
0x804ab43:   c7 85 30 fe ff ff f7 32 b1 0d   	mov dword ptr [ebp - 0x1d0], 0xdb132f7
0x804ab4d:   c6 85 2f fe ff ff 00            	mov byte ptr [ebp - 0x1d1], 0
0x804ab54:   c7 85 28 fe ff ff 07 00 00 00   	mov dword ptr [ebp - 0x1d8], 7
0x804ab5e:   c6 45 ae 77                     	mov byte ptr [ebp - 0x52], 0x77
0x804ab62:   c7 85 28 ff ff ff 77 00 00 00   	mov dword ptr [ebp - 0xd8], 0x77
0x804ab6c:   8b 85 28 ff ff ff               	mov eax, dword ptr [ebp - 0xd8]
0x804ab72:   0f b6 c0                        	movzx eax, al
0x804ab75:   c1 e0 05                        	shl eax, 5
0x804ab78:   89 c3                           	mov ebx, eax
0x804ab7a:   0f b6 45 db                     	movzx eax, byte ptr [ebp - 0x25]
0x804ab7e:   8d 50 01                        	lea edx, [eax + 1]
0x804ab81:   88 55 db                        	mov byte ptr [ebp - 0x25], dl
0x804ab84:   0f b6 d0                        	movzx edx, al
0x804ab87:   0f b7 85 22 ff ff ff            	movzx eax, word ptr [ebp - 0xde]
0x804ab8e:   88 85 00 fe ff ff               	mov byte ptr [ebp - 0x200], al
0x804ab94:   8b 85 68 ff ff ff               	mov eax, dword ptr [ebp - 0x98]
0x804ab9a:   66 0b 85 5a ff ff ff            	or ax, word ptr [ebp - 0xa6]
0x804aba1:   8b 8d 34 ff ff ff               	mov ecx, dword ptr [ebp - 0xcc]
0x804aba7:   31 c8                           	xor eax, ecx
0x804aba9:   66 c1 e8 07                     	shr ax, 7
0x804abad:   66 89 45 dc                     	mov word ptr [ebp - 0x24], ax
0x804abb1:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804abb5:   c1 e0 06                        	shl eax, 6
0x804abb8:   89 c1                           	mov ecx, eax
0x804abba:   0f b6 85 00 fe ff ff            	movzx eax, byte ptr [ebp - 0x200]
0x804abc1:   0f af c1                        	imul eax, ecx
0x804abc4:   88 45 af                        	mov byte ptr [ebp - 0x51], al
0x804abc7:   66 83 7d be 00                  	cmp word ptr [ebp - 0x42], 0
0x804abcc:   80 7d e7 00                     	cmp byte ptr [ebp - 0x19], 0
0x804abd0:   74 07                           	je 0x804abd9 <func_1+0x136c>
0x804abd2:   b8 01 00 00 00                  	mov eax, 1
0x804abd7:   eb 05                           	jmp 0x804abde <func_1+0x1371>
0x804abd9:   b8 00 00 00 00                  	mov eax, 0
0x804abde:   66 89 45 ce                     	mov word ptr [ebp - 0x32], ax
0x804abe2:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804abe6:   88 85 00 fe ff ff               	mov byte ptr [ebp - 0x200], al
0x804abec:   0f b7 85 24 ff ff ff            	movzx eax, word ptr [ebp - 0xdc]
0x804abf3:   89 c1                           	mov ecx, eax
0x804abf5:   0f b6 85 00 fe ff ff            	movzx eax, byte ptr [ebp - 0x200]
0x804abfc:   0f af c1                        	imul eax, ecx
0x804abff:   0f b6 c0                        	movzx eax, al
0x804ac02:   0f af d0                        	imul edx, eax
0x804ac05:   0f bf 85 46 fe ff ff            	movsx eax, word ptr [ebp - 0x1ba]
0x804ac0c:   39 c2                           	cmp edx, eax
0x804ac0e:   ba 01 00 00 00                  	mov edx, 1
0x804ac13:   0f bf 85 46 fe ff ff            	movsx eax, word ptr [ebp - 0x1ba]
0x804ac1a:   39 c2                           	cmp edx, eax
0x804ac1c:   0f 9d c0                        	setge al
0x804ac1f:   88 45 f3                        	mov byte ptr [ebp - 0xd], al
0x804ac22:   0f be 45 f3                     	movsx eax, byte ptr [ebp - 0xd]
0x804ac26:   39 45 c0                        	cmp dword ptr [ebp - 0x40], eax
0x804ac29:   0f 9d c0                        	setge al
0x804ac2c:   0f b6 d0                        	movzx edx, al
0x804ac2f:   0f bf 85 46 fe ff ff            	movsx eax, word ptr [ebp - 0x1ba]
0x804ac36:   39 c2                           	cmp edx, eax
0x804ac38:   0f 9d c0                        	setge al
0x804ac3b:   0f b6 c0                        	movzx eax, al
0x804ac3e:   39 85 40 fe ff ff               	cmp dword ptr [ebp - 0x1c0], eax
0x804ac44:   0f 94 c0                        	sete al
0x804ac47:   0f b6 c0                        	movzx eax, al
0x804ac4a:   39 c3                           	cmp ebx, eax
0x804ac4c:   0f 9e c0                        	setle al
0x804ac4f:   0f b6 c0                        	movzx eax, al
0x804ac52:   31 45 ec                        	xor dword ptr [ebp - 0x14], eax
0x804ac55:   8b 85 40 fe ff ff               	mov eax, dword ptr [ebp - 0x1c0]
0x804ac5b:   0f be d8                        	movsx ebx, al
0x804ac5e:   c7 45 98 01 00 00 00            	mov dword ptr [ebp - 0x68], 1
0x804ac65:   8b 55 98                        	mov edx, dword ptr [ebp - 0x68]
0x804ac68:   8b 45 c4                        	mov eax, dword ptr [ebp - 0x3c]
0x804ac6b:   8d 48 01                        	lea ecx, [eax + 1]
0x804ac6e:   89 4d c4                        	mov dword ptr [ebp - 0x3c], ecx
0x804ac71:   31 95 3c fe ff ff               	xor dword ptr [ebp - 0x1c4], edx
0x804ac77:   8b 95 3c fe ff ff               	mov edx, dword ptr [ebp - 0x1c4]
0x804ac7d:   0f b6 d2                        	movzx edx, dl
0x804ac80:   be f3 00 00 00                  	mov esi, 0xf3
0x804ac85:   89 d1                           	mov ecx, edx
0x804ac87:   d3 fe                           	sar esi, cl
0x804ac89:   89 f2                           	mov edx, esi
0x804ac8b:   39 d0                           	cmp eax, edx
0x804ac8d:   0f 93 c0                        	setae al
0x804ac90:   0f b6 c0                        	movzx eax, al
0x804ac93:   39 85 3c ff ff ff               	cmp dword ptr [ebp - 0xc4], eax
0x804ac99:   77 07                           	ja 0x804aca2 <func_1+0x1435>
0x804ac9b:   66 83 7d dc 00                  	cmp word ptr [ebp - 0x24], 0
0x804aca0:   74 07                           	je 0x804aca9 <func_1+0x143c>
0x804aca2:   b8 01 00 00 00                  	mov eax, 1
0x804aca7:   eb 05                           	jmp 0x804acae <func_1+0x1441>
0x804aca9:   b8 00 00 00 00                  	mov eax, 0
0x804acae:   89 c2                           	mov edx, eax
0x804acb0:   8b 85 38 fe ff ff               	mov eax, dword ptr [ebp - 0x1c8]
0x804acb6:   21 d0                           	and eax, edx
0x804acb8:   0f b7 d0                        	movzx edx, ax
0x804acbb:   8b 85 5c ff ff ff               	mov eax, dword ptr [ebp - 0xa4]
0x804acc1:   0f b7 c0                        	movzx eax, ax
0x804acc4:   0f af c2                        	imul eax, edx
0x804acc7:   85 c0                           	test eax, eax
0x804acc9:   75 09                           	jne 0x804acd4 <func_1+0x1467>
0x804accb:   83 bd 30 fe ff ff 00            	cmp dword ptr [ebp - 0x1d0], 0
0x804acd2:   74 07                           	je 0x804acdb <func_1+0x146e>
0x804acd4:   b8 01 00 00 00                  	mov eax, 1
0x804acd9:   eb 05                           	jmp 0x804ace0 <func_1+0x1473>
0x804acdb:   b8 00 00 00 00                  	mov eax, 0
0x804ace0:   0f b7 c0                        	movzx eax, ax
0x804ace3:   c1 f8 0b                        	sar eax, 0xb
0x804ace6:   0f be c0                        	movsx eax, al
0x804ace9:   83 e0 0a                        	and eax, 0xa
0x804acec:   8d 14 03                        	lea edx, [ebx + eax]
0x804acef:   0f b7 45 ce                     	movzx eax, word ptr [ebp - 0x32]
0x804acf3:   39 c2                           	cmp edx, eax
0x804acf5:   0f 9c c0                        	setl al
0x804acf8:   0f b6 d0                        	movzx edx, al
0x804acfb:   0f bf 85 62 ff ff ff            	movsx eax, word ptr [ebp - 0x9e]
0x804ad02:   39 c2                           	cmp edx, eax
0x804ad04:   0f 9d c0                        	setge al
0x804ad07:   0f b6 c0                        	movzx eax, al
0x804ad0a:   89 45 a4                        	mov dword ptr [ebp - 0x5c], eax
0x804ad0d:   c7 85 2c ff ff ff 01 00 00 00   	mov dword ptr [ebp - 0xd4], 1
0x804ad17:   66 c7 45 9c 00 00               	mov word ptr [ebp - 0x64], 0
0x804ad1d:   e9 f0 01 00 00                  	jmp 0x804af12 <func_1+0x16a5>
0x804ad22:   c6 85 27 fe ff ff fb            	mov byte ptr [ebp - 0x1d9], 0xfb
0x804ad29:   c7 85 20 fe ff ff ff ff ff ff   	mov dword ptr [ebp - 0x1e0], 0xffffffff
0x804ad33:   66 c7 85 1e fe ff ff 51 d6      	mov word ptr [ebp - 0x1e2], 0xd651
0x804ad3c:   83 7d c0 00                     	cmp dword ptr [ebp - 0x40], 0
0x804ad40:   0f 84 8f 00 00 00               	je 0x804add5 <func_1+0x1568>
0x804ad46:   c6 85 1d fe ff ff 02            	mov byte ptr [ebp - 0x1e3], 2
0x804ad4d:   c6 85 1c fe ff ff c5            	mov byte ptr [ebp - 0x1e4], 0xc5
0x804ad54:   0f b7 45 dc                     	movzx eax, word ptr [ebp - 0x24]
0x804ad58:   88 45 b7                        	mov byte ptr [ebp - 0x49], al
0x804ad5b:   66 0f be 85 1d fe ff ff         	movsx ax, byte ptr [ebp - 0x1e3]
0x804ad63:   0f b7 c8                        	movzx ecx, ax
0x804ad66:   b8 1c c6 00 00                  	mov eax, 0xc61c
0x804ad6b:   99                              	cdq 
0x804ad6c:   f7 f9                           	idiv ecx
0x804ad6e:   89 d0                           	mov eax, edx
0x804ad70:   85 c0                           	test eax, eax
0x804ad72:   74 07                           	je 0x804ad7b <func_1+0x150e>
0x804ad74:   80 bd 2f fe ff ff 00            	cmp byte ptr [ebp - 0x1d1], 0
0x804ad7b:   66 83 bd 56 ff ff ff 00         	cmp word ptr [ebp - 0xaa], 0
0x804ad83:   0f 95 c0                        	setne al
0x804ad86:   0f b6 c0                        	movzx eax, al
0x804ad89:   89 85 3c fe ff ff               	mov dword ptr [ebp - 0x1c4], eax
0x804ad8f:   c7 85 20 fe ff ff 00 00 00 00   	mov dword ptr [ebp - 0x1e0], 0
0x804ad99:   0f b7 55 dc                     	movzx edx, word ptr [ebp - 0x24]
0x804ad9d:   0f be 85 1c fe ff ff            	movsx eax, byte ptr [ebp - 0x1e4]
0x804ada4:   39 c2                           	cmp edx, eax
0x804ada6:   0f 9e c0                        	setle al
0x804ada9:   0f b6 c0                        	movzx eax, al
0x804adac:   39 85 50 ff ff ff               	cmp dword ptr [ebp - 0xb0], eax
0x804adb2:   73 0a                           	jae 0x804adbe <func_1+0x1551>
0x804adb4:   66 83 bd 6e ff ff ff 00         	cmp word ptr [ebp - 0x92], 0
0x804adbc:   74 07                           	je 0x804adc5 <func_1+0x1558>
0x804adbe:   b8 01 00 00 00                  	mov eax, 1
0x804adc3:   eb 05                           	jmp 0x804adca <func_1+0x155d>
0x804adc5:   b8 00 00 00 00                  	mov eax, 0
0x804adca:   89 85 38 fe ff ff               	mov dword ptr [ebp - 0x1c8], eax
0x804add0:   e9 32 01 00 00                  	jmp 0x804af07 <func_1+0x169a>
0x804add5:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804addc:   0f b7 95 58 ff ff ff            	movzx edx, word ptr [ebp - 0xa8]
0x804ade3:   0f bf 8d 5a ff ff ff            	movsx ecx, word ptr [ebp - 0xa6]
0x804adea:   0f b6 75 ae                     	movzx esi, byte ptr [ebp - 0x52]
0x804adee:   0f bf bd 62 ff ff ff            	movsx edi, word ptr [ebp - 0x9e]
0x804adf5:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804adfb:   0f bf 9d 64 ff ff ff            	movsx ebx, word ptr [ebp - 0x9c]
0x804ae02:   89 9d fc fd ff ff               	mov dword ptr [ebp - 0x204], ebx
0x804ae08:   0f be bd 67 ff ff ff            	movsx edi, byte ptr [ebp - 0x99]
0x804ae0f:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804ae15:   0f be 5d af                     	movsx ebx, byte ptr [ebp - 0x51]
0x804ae19:   89 9d f4 fd ff ff               	mov dword ptr [ebp - 0x20c], ebx
0x804ae1f:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x804ae23:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804ae29:   0f bf 5d be                     	movsx ebx, word ptr [ebp - 0x42]
0x804ae2d:   89 9d ec fd ff ff               	mov dword ptr [ebp - 0x214], ebx
0x804ae33:   0f b7 bd 6e ff ff ff            	movzx edi, word ptr [ebp - 0x92]
0x804ae3a:   89 bd e8 fd ff ff               	mov dword ptr [ebp - 0x218], edi
0x804ae40:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804ae44:   89 9d e4 fd ff ff               	mov dword ptr [ebp - 0x21c], ebx
0x804ae4a:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804ae4e:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804ae54:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804ae58:   89 9d dc fd ff ff               	mov dword ptr [ebp - 0x224], ebx
0x804ae5e:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x804ae62:   89 bd d8 fd ff ff               	mov dword ptr [ebp - 0x228], edi
0x804ae68:   0f b7 7d dc                     	movzx edi, word ptr [ebp - 0x24]
0x804ae6c:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804ae70:   50                              	push eax
0x804ae71:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804ae74:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804ae77:   52                              	push edx
0x804ae78:   51                              	push ecx
0x804ae79:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804ae7f:   56                              	push esi
0x804ae80:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804ae86:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804ae8c:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804ae92:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804ae98:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804ae9e:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804aea1:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804aea7:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aeaa:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804aeb0:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804aeb6:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804aeb9:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804aebc:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804aebf:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804aec5:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804aec8:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804aecb:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804aed1:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804aed7:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804aeda:   ff b5 d8 fd ff ff               	push dword ptr [ebp - 0x228]
0x804aee0:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804aee3:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804aee9:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804aeec:   57                              	push edi
0x804aeed:   53                              	push ebx
0x804aeee:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804aef4:   e8 2d e7 ff ff                  	call 0x8049626 <set_var>
0x804aef9:   81 c4 84 00 00 00               	add esp, 0x84
0x804aeff:   8b 45 d4                        	mov eax, dword ptr [ebp - 0x2c]
0x804af02:   e9 46 01 00 00                  	jmp 0x804b04d <func_1+0x17e0>
0x804af07:   0f b7 45 9c                     	movzx eax, word ptr [ebp - 0x64]
0x804af0b:   83 c0 01                        	add eax, 1
0x804af0e:   66 89 45 9c                     	mov word ptr [ebp - 0x64], ax
0x804af12:   66 83 7d 9c 20                  	cmp word ptr [ebp - 0x64], 0x20
0x804af17:   0f 86 05 fe ff ff               	jbe 0x804ad22 <func_1+0x14b5>
0x804af1d:   0f b7 85 56 ff ff ff            	movzx eax, word ptr [ebp - 0xaa]
0x804af24:   0f b7 95 58 ff ff ff            	movzx edx, word ptr [ebp - 0xa8]
0x804af2b:   0f bf 8d 5a ff ff ff            	movsx ecx, word ptr [ebp - 0xa6]
0x804af32:   0f b6 75 ae                     	movzx esi, byte ptr [ebp - 0x52]
0x804af36:   0f bf bd 62 ff ff ff            	movsx edi, word ptr [ebp - 0x9e]
0x804af3d:   89 bd 00 fe ff ff               	mov dword ptr [ebp - 0x200], edi
0x804af43:   0f bf 9d 64 ff ff ff            	movsx ebx, word ptr [ebp - 0x9c]
0x804af4a:   89 9d fc fd ff ff               	mov dword ptr [ebp - 0x204], ebx
0x804af50:   0f be bd 67 ff ff ff            	movsx edi, byte ptr [ebp - 0x99]
0x804af57:   89 bd f8 fd ff ff               	mov dword ptr [ebp - 0x208], edi
0x804af5d:   0f be 5d af                     	movsx ebx, byte ptr [ebp - 0x51]
0x804af61:   89 9d f4 fd ff ff               	mov dword ptr [ebp - 0x20c], ebx
0x804af67:   0f be 7d b7                     	movsx edi, byte ptr [ebp - 0x49]
0x804af6b:   89 bd f0 fd ff ff               	mov dword ptr [ebp - 0x210], edi
0x804af71:   0f bf 5d be                     	movsx ebx, word ptr [ebp - 0x42]
0x804af75:   89 9d ec fd ff ff               	mov dword ptr [ebp - 0x214], ebx
0x804af7b:   0f b7 bd 6e ff ff ff            	movzx edi, word ptr [ebp - 0x92]
0x804af82:   89 bd e8 fd ff ff               	mov dword ptr [ebp - 0x218], edi
0x804af88:   0f b7 5d ce                     	movzx ebx, word ptr [ebp - 0x32]
0x804af8c:   89 9d e4 fd ff ff               	mov dword ptr [ebp - 0x21c], ebx
0x804af92:   0f b6 7d db                     	movzx edi, byte ptr [ebp - 0x25]
0x804af96:   89 bd e0 fd ff ff               	mov dword ptr [ebp - 0x220], edi
0x804af9c:   0f b7 5d de                     	movzx ebx, word ptr [ebp - 0x22]
0x804afa0:   89 9d dc fd ff ff               	mov dword ptr [ebp - 0x224], ebx
0x804afa6:   0f b6 7d e7                     	movzx edi, byte ptr [ebp - 0x19]
0x804afaa:   89 bd d8 fd ff ff               	mov dword ptr [ebp - 0x228], edi
0x804afb0:   0f b7 7d dc                     	movzx edi, word ptr [ebp - 0x24]
0x804afb4:   0f be 5d f3                     	movsx ebx, byte ptr [ebp - 0xd]
0x804afb8:   50                              	push eax
0x804afb9:   ff 75 a4                        	push dword ptr [ebp - 0x5c]
0x804afbc:   ff 75 a8                        	push dword ptr [ebp - 0x58]
0x804afbf:   52                              	push edx
0x804afc0:   51                              	push ecx
0x804afc1:   ff b5 5c ff ff ff               	push dword ptr [ebp - 0xa4]
0x804afc7:   56                              	push esi
0x804afc8:   ff b5 00 fe ff ff               	push dword ptr [ebp - 0x200]
0x804afce:   ff b5 fc fd ff ff               	push dword ptr [ebp - 0x204]
0x804afd4:   ff b5 f8 fd ff ff               	push dword ptr [ebp - 0x208]
0x804afda:   ff b5 f4 fd ff ff               	push dword ptr [ebp - 0x20c]
0x804afe0:   ff b5 68 ff ff ff               	push dword ptr [ebp - 0x98]
0x804afe6:   ff 75 b0                        	push dword ptr [ebp - 0x50]
0x804afe9:   ff b5 f0 fd ff ff               	push dword ptr [ebp - 0x210]
0x804afef:   ff 75 b8                        	push dword ptr [ebp - 0x48]
0x804aff2:   ff b5 ec fd ff ff               	push dword ptr [ebp - 0x214]
0x804aff8:   ff b5 e8 fd ff ff               	push dword ptr [ebp - 0x218]
0x804affe:   ff 75 c0                        	push dword ptr [ebp - 0x40]
0x804b001:   ff 75 c4                        	push dword ptr [ebp - 0x3c]
0x804b004:   ff 75 c8                        	push dword ptr [ebp - 0x38]
0x804b007:   ff b5 e4 fd ff ff               	push dword ptr [ebp - 0x21c]
0x804b00d:   ff 75 d0                        	push dword ptr [ebp - 0x30]
0x804b010:   ff 75 d4                        	push dword ptr [ebp - 0x2c]
0x804b013:   ff b5 e0 fd ff ff               	push dword ptr [ebp - 0x220]
0x804b019:   ff b5 dc fd ff ff               	push dword ptr [ebp - 0x224]
0x804b01f:   ff 75 e0                        	push dword ptr [ebp - 0x20]
0x804b022:   ff b5 d8 fd ff ff               	push dword ptr [ebp - 0x228]
0x804b028:   ff 75 e8                        	push dword ptr [ebp - 0x18]
0x804b02b:   ff b5 70 ff ff ff               	push dword ptr [ebp - 0x90]
0x804b031:   ff 75 ec                        	push dword ptr [ebp - 0x14]
0x804b034:   57                              	push edi
0x804b035:   53                              	push ebx
0x804b036:   ff b5 74 ff ff ff               	push dword ptr [ebp - 0x8c]
0x804b03c:   e8 e5 e5 ff ff                  	call 0x8049626 <set_var>
0x804b041:   81 c4 84 00 00 00               	add esp, 0x84
0x804b047:   8b 85 50 ff ff ff               	mov eax, dword ptr [ebp - 0xb0]
0x804b04d:   8d 65 f4                        	lea esp, [ebp - 0xc]
0x804b050:   5b                              	pop ebx
0x804b051:   5e                              	pop esi
0x804b052:   5f                              	pop edi
0x804b053:   5d                              	pop ebp
0x804b054:   c3                              	ret 
; function: main at 0x804b055 -- 0x804b4c3
0x804b055:   8d 4c 24 04                     	lea ecx, [esp + 4]
0x804b059:   83 e4 f0                        	and esp, 0xfffffff0
0x804b05c:   ff 71 fc                        	push dword ptr [ecx - 4]
0x804b05f:   55                              	push ebp
0x804b060:   89 e5                           	mov ebp, esp
0x804b062:   53                              	push ebx
0x804b063:   51                              	push ecx
0x804b064:   83 ec 10                        	sub esp, 0x10
0x804b067:   e8 24 d3 ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b06c:   81 c3 94 2f 00 00               	add ebx, 0x2f94
0x804b072:   89 c8                           	mov eax, ecx
0x804b074:   c7 45 f4 00 00 00 00            	mov dword ptr [ebp - 0xc], 0
0x804b07b:   83 38 02                        	cmp dword ptr [eax], 2
0x804b07e:   75 26                           	jne 0x804b0a6 <main+0x51>
0x804b080:   8b 40 04                        	mov eax, dword ptr [eax + 4]
0x804b083:   83 c0 04                        	add eax, 4
0x804b086:   8b 00                           	mov eax, dword ptr [eax]
0x804b088:   83 ec 08                        	sub esp, 8
0x804b08b:   8d 93 a8 d5 ff ff               	lea edx, [ebx - 0x2a58]
0x804b091:   52                              	push edx
0x804b092:   50                              	push eax
0x804b093:   e8 68 d2 ff ff                  	call 0x8048300 <strcmp>
0x804b098:   83 c4 10                        	add esp, 0x10
0x804b09b:   85 c0                           	test eax, eax
0x804b09d:   75 07                           	jne 0x804b0a6 <main+0x51>
0x804b09f:   c7 45 f4 01 00 00 00            	mov dword ptr [ebp - 0xc], 1
0x804b0a6:   e8 ab d3 ff ff                  	call 0x8048456 <platform_main_begin>
0x804b0ab:   e8 bb e3 ff ff                  	call 0x804946b <crc32_gentab>
0x804b0b0:   e8 b8 e7 ff ff                  	call 0x804986d <func_1>
0x804b0b5:   8b 83 24 00 00 00               	mov eax, dword ptr [ebx + 0x24]
0x804b0bb:   83 ec 04                        	sub esp, 4
0x804b0be:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0c1:   8d 93 aa d5 ff ff               	lea edx, [ebx - 0x2a56]
0x804b0c7:   52                              	push edx
0x804b0c8:   50                              	push eax
0x804b0c9:   e8 a9 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0ce:   83 c4 10                        	add esp, 0x10
0x804b0d1:   0f b6 83 28 00 00 00            	movzx eax, byte ptr [ebx + 0x28]
0x804b0d8:   0f be c0                        	movsx eax, al
0x804b0db:   83 ec 04                        	sub esp, 4
0x804b0de:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b0e1:   8d 93 ae d5 ff ff               	lea edx, [ebx - 0x2a52]
0x804b0e7:   52                              	push edx
0x804b0e8:   50                              	push eax
0x804b0e9:   e8 89 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b0ee:   83 c4 10                        	add esp, 0x10
0x804b0f1:   0f b7 83 2a 00 00 00            	movzx eax, word ptr [ebx + 0x2a]
0x804b0f8:   0f b7 c0                        	movzx eax, ax
0x804b0fb:   83 ec 04                        	sub esp, 4
0x804b0fe:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b101:   8d 93 b3 d5 ff ff               	lea edx, [ebx - 0x2a4d]
0x804b107:   52                              	push edx
0x804b108:   50                              	push eax
0x804b109:   e8 69 e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b10e:   83 c4 10                        	add esp, 0x10
0x804b111:   8b 83 2c 00 00 00               	mov eax, dword ptr [ebx + 0x2c]
0x804b117:   89 c2                           	mov edx, eax
0x804b119:   83 ec 04                        	sub esp, 4
0x804b11c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b11f:   8d 83 b8 d5 ff ff               	lea eax, [ebx - 0x2a48]
0x804b125:   50                              	push eax
0x804b126:   52                              	push edx
0x804b127:   e8 4b e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b12c:   83 c4 10                        	add esp, 0x10
0x804b12f:   8b 83 30 00 00 00               	mov eax, dword ptr [ebx + 0x30]
0x804b135:   89 c2                           	mov edx, eax
0x804b137:   83 ec 04                        	sub esp, 4
0x804b13a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b13d:   8d 83 bd d5 ff ff               	lea eax, [ebx - 0x2a43]
0x804b143:   50                              	push eax
0x804b144:   52                              	push edx
0x804b145:   e8 2d e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b14a:   83 c4 10                        	add esp, 0x10
0x804b14d:   8b 83 34 00 00 00               	mov eax, dword ptr [ebx + 0x34]
0x804b153:   89 c2                           	mov edx, eax
0x804b155:   83 ec 04                        	sub esp, 4
0x804b158:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b15b:   8d 83 c2 d5 ff ff               	lea eax, [ebx - 0x2a3e]
0x804b161:   50                              	push eax
0x804b162:   52                              	push edx
0x804b163:   e8 0f e4 ff ff                  	call 0x8049577 <transparent_crc>
0x804b168:   83 c4 10                        	add esp, 0x10
0x804b16b:   0f b6 83 38 00 00 00            	movzx eax, byte ptr [ebx + 0x38]
0x804b172:   0f b6 c0                        	movzx eax, al
0x804b175:   83 ec 04                        	sub esp, 4
0x804b178:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b17b:   8d 93 c7 d5 ff ff               	lea edx, [ebx - 0x2a39]
0x804b181:   52                              	push edx
0x804b182:   50                              	push eax
0x804b183:   e8 ef e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b188:   83 c4 10                        	add esp, 0x10
0x804b18b:   8b 83 3c 00 00 00               	mov eax, dword ptr [ebx + 0x3c]
0x804b191:   89 c2                           	mov edx, eax
0x804b193:   83 ec 04                        	sub esp, 4
0x804b196:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b199:   8d 83 cc d5 ff ff               	lea eax, [ebx - 0x2a34]
0x804b19f:   50                              	push eax
0x804b1a0:   52                              	push edx
0x804b1a1:   e8 d1 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1a6:   83 c4 10                        	add esp, 0x10
0x804b1a9:   0f b7 83 c4 04 00 00            	movzx eax, word ptr [ebx + 0x4c4]
0x804b1b0:   0f b7 c0                        	movzx eax, ax
0x804b1b3:   83 ec 04                        	sub esp, 4
0x804b1b6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1b9:   8d 93 d1 d5 ff ff               	lea edx, [ebx - 0x2a2f]
0x804b1bf:   52                              	push edx
0x804b1c0:   50                              	push eax
0x804b1c1:   e8 b1 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1c6:   83 c4 10                        	add esp, 0x10
0x804b1c9:   0f b6 83 40 00 00 00            	movzx eax, byte ptr [ebx + 0x40]
0x804b1d0:   0f b6 c0                        	movzx eax, al
0x804b1d3:   83 ec 04                        	sub esp, 4
0x804b1d6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1d9:   8d 93 d6 d5 ff ff               	lea edx, [ebx - 0x2a2a]
0x804b1df:   52                              	push edx
0x804b1e0:   50                              	push eax
0x804b1e1:   e8 91 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b1e6:   83 c4 10                        	add esp, 0x10
0x804b1e9:   8b 83 44 00 00 00               	mov eax, dword ptr [ebx + 0x44]
0x804b1ef:   83 ec 04                        	sub esp, 4
0x804b1f2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b1f5:   8d 93 db d5 ff ff               	lea edx, [ebx - 0x2a25]
0x804b1fb:   52                              	push edx
0x804b1fc:   50                              	push eax
0x804b1fd:   e8 75 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b202:   83 c4 10                        	add esp, 0x10
0x804b205:   8b 83 48 00 00 00               	mov eax, dword ptr [ebx + 0x48]
0x804b20b:   89 c2                           	mov edx, eax
0x804b20d:   83 ec 04                        	sub esp, 4
0x804b210:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b213:   8d 83 e0 d5 ff ff               	lea eax, [ebx - 0x2a20]
0x804b219:   50                              	push eax
0x804b21a:   52                              	push edx
0x804b21b:   e8 57 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b220:   83 c4 10                        	add esp, 0x10
0x804b223:   0f b7 83 4c 00 00 00            	movzx eax, word ptr [ebx + 0x4c]
0x804b22a:   0f b7 c0                        	movzx eax, ax
0x804b22d:   83 ec 04                        	sub esp, 4
0x804b230:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b233:   8d 93 e6 d5 ff ff               	lea edx, [ebx - 0x2a1a]
0x804b239:   52                              	push edx
0x804b23a:   50                              	push eax
0x804b23b:   e8 37 e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b240:   83 c4 10                        	add esp, 0x10
0x804b243:   8b 83 50 00 00 00               	mov eax, dword ptr [ebx + 0x50]
0x804b249:   83 ec 04                        	sub esp, 4
0x804b24c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b24f:   8d 93 ec d5 ff ff               	lea edx, [ebx - 0x2a14]
0x804b255:   52                              	push edx
0x804b256:   50                              	push eax
0x804b257:   e8 1b e3 ff ff                  	call 0x8049577 <transparent_crc>
0x804b25c:   83 c4 10                        	add esp, 0x10
0x804b25f:   8b 83 54 00 00 00               	mov eax, dword ptr [ebx + 0x54]
0x804b265:   83 ec 04                        	sub esp, 4
0x804b268:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b26b:   8d 93 f2 d5 ff ff               	lea edx, [ebx - 0x2a0e]
0x804b271:   52                              	push edx
0x804b272:   50                              	push eax
0x804b273:   e8 ff e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b278:   83 c4 10                        	add esp, 0x10
0x804b27b:   8b 83 58 00 00 00               	mov eax, dword ptr [ebx + 0x58]
0x804b281:   89 c2                           	mov edx, eax
0x804b283:   83 ec 04                        	sub esp, 4
0x804b286:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b289:   8d 83 f8 d5 ff ff               	lea eax, [ebx - 0x2a08]
0x804b28f:   50                              	push eax
0x804b290:   52                              	push edx
0x804b291:   e8 e1 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b296:   83 c4 10                        	add esp, 0x10
0x804b299:   0f b7 83 5c 00 00 00            	movzx eax, word ptr [ebx + 0x5c]
0x804b2a0:   0f b7 c0                        	movzx eax, ax
0x804b2a3:   83 ec 04                        	sub esp, 4
0x804b2a6:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2a9:   8d 93 fe d5 ff ff               	lea edx, [ebx - 0x2a02]
0x804b2af:   52                              	push edx
0x804b2b0:   50                              	push eax
0x804b2b1:   e8 c1 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2b6:   83 c4 10                        	add esp, 0x10
0x804b2b9:   0f b7 83 c6 04 00 00            	movzx eax, word ptr [ebx + 0x4c6]
0x804b2c0:   98                              	cwde 
0x804b2c1:   83 ec 04                        	sub esp, 4
0x804b2c4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2c7:   8d 93 04 d6 ff ff               	lea edx, [ebx - 0x29fc]
0x804b2cd:   52                              	push edx
0x804b2ce:   50                              	push eax
0x804b2cf:   e8 a3 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2d4:   83 c4 10                        	add esp, 0x10
0x804b2d7:   8b 83 60 00 00 00               	mov eax, dword ptr [ebx + 0x60]
0x804b2dd:   89 c2                           	mov edx, eax
0x804b2df:   83 ec 04                        	sub esp, 4
0x804b2e2:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b2e5:   8d 83 0a d6 ff ff               	lea eax, [ebx - 0x29f6]
0x804b2eb:   50                              	push eax
0x804b2ec:   52                              	push edx
0x804b2ed:   e8 85 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b2f2:   83 c4 10                        	add esp, 0x10
0x804b2f5:   0f b6 83 64 00 00 00            	movzx eax, byte ptr [ebx + 0x64]
0x804b2fc:   0f be c0                        	movsx eax, al
0x804b2ff:   83 ec 04                        	sub esp, 4
0x804b302:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b305:   8d 93 10 d6 ff ff               	lea edx, [ebx - 0x29f0]
0x804b30b:   52                              	push edx
0x804b30c:   50                              	push eax
0x804b30d:   e8 65 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b312:   83 c4 10                        	add esp, 0x10
0x804b315:   8b 83 68 00 00 00               	mov eax, dword ptr [ebx + 0x68]
0x804b31b:   83 ec 04                        	sub esp, 4
0x804b31e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b321:   8d 93 16 d6 ff ff               	lea edx, [ebx - 0x29ea]
0x804b327:   52                              	push edx
0x804b328:   50                              	push eax
0x804b329:   e8 49 e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b32e:   83 c4 10                        	add esp, 0x10
0x804b331:   8b 83 c8 04 00 00               	mov eax, dword ptr [ebx + 0x4c8]
0x804b337:   89 c2                           	mov edx, eax
0x804b339:   83 ec 04                        	sub esp, 4
0x804b33c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b33f:   8d 83 1c d6 ff ff               	lea eax, [ebx - 0x29e4]
0x804b345:   50                              	push eax
0x804b346:   52                              	push edx
0x804b347:   e8 2b e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b34c:   83 c4 10                        	add esp, 0x10
0x804b34f:   0f b6 83 6c 00 00 00            	movzx eax, byte ptr [ebx + 0x6c]
0x804b356:   0f be c0                        	movsx eax, al
0x804b359:   83 ec 04                        	sub esp, 4
0x804b35c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b35f:   8d 93 22 d6 ff ff               	lea edx, [ebx - 0x29de]
0x804b365:   52                              	push edx
0x804b366:   50                              	push eax
0x804b367:   e8 0b e2 ff ff                  	call 0x8049577 <transparent_crc>
0x804b36c:   83 c4 10                        	add esp, 0x10
0x804b36f:   0f b6 83 6d 00 00 00            	movzx eax, byte ptr [ebx + 0x6d]
0x804b376:   0f be c0                        	movsx eax, al
0x804b379:   83 ec 04                        	sub esp, 4
0x804b37c:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b37f:   8d 93 28 d6 ff ff               	lea edx, [ebx - 0x29d8]
0x804b385:   52                              	push edx
0x804b386:   50                              	push eax
0x804b387:   e8 eb e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b38c:   83 c4 10                        	add esp, 0x10
0x804b38f:   0f b7 83 6e 00 00 00            	movzx eax, word ptr [ebx + 0x6e]
0x804b396:   98                              	cwde 
0x804b397:   83 ec 04                        	sub esp, 4
0x804b39a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b39d:   8d 93 2e d6 ff ff               	lea edx, [ebx - 0x29d2]
0x804b3a3:   52                              	push edx
0x804b3a4:   50                              	push eax
0x804b3a5:   e8 cd e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3aa:   83 c4 10                        	add esp, 0x10
0x804b3ad:   0f b7 83 70 00 00 00            	movzx eax, word ptr [ebx + 0x70]
0x804b3b4:   98                              	cwde 
0x804b3b5:   83 ec 04                        	sub esp, 4
0x804b3b8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3bb:   8d 93 34 d6 ff ff               	lea edx, [ebx - 0x29cc]
0x804b3c1:   52                              	push edx
0x804b3c2:   50                              	push eax
0x804b3c3:   e8 af e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3c8:   83 c4 10                        	add esp, 0x10
0x804b3cb:   0f b6 83 cc 04 00 00            	movzx eax, byte ptr [ebx + 0x4cc]
0x804b3d2:   0f b6 c0                        	movzx eax, al
0x804b3d5:   83 ec 04                        	sub esp, 4
0x804b3d8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3db:   8d 93 3a d6 ff ff               	lea edx, [ebx - 0x29c6]
0x804b3e1:   52                              	push edx
0x804b3e2:   50                              	push eax
0x804b3e3:   e8 8f e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b3e8:   83 c4 10                        	add esp, 0x10
0x804b3eb:   8b 83 74 00 00 00               	mov eax, dword ptr [ebx + 0x74]
0x804b3f1:   83 ec 04                        	sub esp, 4
0x804b3f4:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b3f7:   8d 93 40 d6 ff ff               	lea edx, [ebx - 0x29c0]
0x804b3fd:   52                              	push edx
0x804b3fe:   50                              	push eax
0x804b3ff:   e8 73 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b404:   83 c4 10                        	add esp, 0x10
0x804b407:   0f b7 83 78 00 00 00            	movzx eax, word ptr [ebx + 0x78]
0x804b40e:   98                              	cwde 
0x804b40f:   83 ec 04                        	sub esp, 4
0x804b412:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b415:   8d 93 46 d6 ff ff               	lea edx, [ebx - 0x29ba]
0x804b41b:   52                              	push edx
0x804b41c:   50                              	push eax
0x804b41d:   e8 55 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b422:   83 c4 10                        	add esp, 0x10
0x804b425:   0f b7 83 7a 00 00 00            	movzx eax, word ptr [ebx + 0x7a]
0x804b42c:   0f b7 c0                        	movzx eax, ax
0x804b42f:   83 ec 04                        	sub esp, 4
0x804b432:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b435:   8d 93 4c d6 ff ff               	lea edx, [ebx - 0x29b4]
0x804b43b:   52                              	push edx
0x804b43c:   50                              	push eax
0x804b43d:   e8 35 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b442:   83 c4 10                        	add esp, 0x10
0x804b445:   8b 83 7c 00 00 00               	mov eax, dword ptr [ebx + 0x7c]
0x804b44b:   83 ec 04                        	sub esp, 4
0x804b44e:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b451:   8d 93 52 d6 ff ff               	lea edx, [ebx - 0x29ae]
0x804b457:   52                              	push edx
0x804b458:   50                              	push eax
0x804b459:   e8 19 e1 ff ff                  	call 0x8049577 <transparent_crc>
0x804b45e:   83 c4 10                        	add esp, 0x10
0x804b461:   8b 83 d0 04 00 00               	mov eax, dword ptr [ebx + 0x4d0]
0x804b467:   83 ec 04                        	sub esp, 4
0x804b46a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b46d:   8d 93 58 d6 ff ff               	lea edx, [ebx - 0x29a8]
0x804b473:   52                              	push edx
0x804b474:   50                              	push eax
0x804b475:   e8 fd e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b47a:   83 c4 10                        	add esp, 0x10
0x804b47d:   0f b7 83 80 00 00 00            	movzx eax, word ptr [ebx + 0x80]
0x804b484:   0f b7 c0                        	movzx eax, ax
0x804b487:   83 ec 04                        	sub esp, 4
0x804b48a:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b48d:   8d 93 5e d6 ff ff               	lea edx, [ebx - 0x29a2]
0x804b493:   52                              	push edx
0x804b494:   50                              	push eax
0x804b495:   e8 dd e0 ff ff                  	call 0x8049577 <transparent_crc>
0x804b49a:   83 c4 10                        	add esp, 0x10
0x804b49d:   8b 83 20 00 00 00               	mov eax, dword ptr [ebx + 0x20]
0x804b4a3:   f7 d0                           	not eax
0x804b4a5:   83 ec 08                        	sub esp, 8
0x804b4a8:   ff 75 f4                        	push dword ptr [ebp - 0xc]
0x804b4ab:   50                              	push eax
0x804b4ac:   e8 b5 cf ff ff                  	call 0x8048466 <platform_main_end>
0x804b4b1:   83 c4 10                        	add esp, 0x10
0x804b4b4:   b8 00 00 00 00                  	mov eax, 0
0x804b4b9:   8d 65 f8                        	lea esp, [ebp - 8]
0x804b4bc:   59                              	pop ecx
0x804b4bd:   5b                              	pop ebx
0x804b4be:   5d                              	pop ebp
0x804b4bf:   8d 61 fc                        	lea esp, [ecx - 4]
0x804b4c2:   c3                              	ret 
; function: __x86.get_pc_thunk.ax at 0x804b4c3 -- 0x804b4c7
0x804b4c3:   8b 04 24                        	mov eax, dword ptr [esp]
0x804b4c6:   c3                              	ret 
; function: __x86.get_pc_thunk.dx at 0x804b4c7 -- 0x804b4cb
0x804b4c7:   8b 14 24                        	mov edx, dword ptr [esp]
0x804b4ca:   c3                              	ret 
; data inside code section at 0x804b4cb -- 0x804b4d0
0x804b4cb:   66 90 66 90 90                                     |f.f..           |
; function: __libc_csu_init at 0x804b4d0 -- 0x804b52d
0x804b4d0:   55                              	push ebp
0x804b4d1:   57                              	push edi
0x804b4d2:   56                              	push esi
0x804b4d3:   53                              	push ebx
0x804b4d4:   e8 b7 ce ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b4d9:   81 c3 27 2b 00 00               	add ebx, 0x2b27
0x804b4df:   83 ec 0c                        	sub esp, 0xc
0x804b4e2:   8b 6c 24 28                     	mov ebp, dword ptr [esp + 0x28]
0x804b4e6:   8d b3 10 ff ff ff               	lea esi, [ebx - 0xf0]
0x804b4ec:   e8 db cd ff ff                  	call 0x80482cc <_init>
0x804b4f1:   8d 83 0c ff ff ff               	lea eax, [ebx - 0xf4]
0x804b4f7:   29 c6                           	sub esi, eax
0x804b4f9:   c1 fe 02                        	sar esi, 2
0x804b4fc:   85 f6                           	test esi, esi
0x804b4fe:   74 25                           	je 0x804b525 <__libc_csu_init+0x55>
0x804b500:   31 ff                           	xor edi, edi
0x804b502:   8d b6 00 00 00 00               	lea esi, [esi]
0x804b508:   83 ec 04                        	sub esp, 4
0x804b50b:   55                              	push ebp
0x804b50c:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b510:   ff 74 24 2c                     	push dword ptr [esp + 0x2c]
0x804b514:   ff 94 bb 0c ff ff ff            	call dword ptr [ebx + edi*4 - 0xf4]
0x804b51b:   83 c7 01                        	add edi, 1
0x804b51e:   83 c4 10                        	add esp, 0x10
0x804b521:   39 fe                           	cmp esi, edi
0x804b523:   75 e3                           	jne 0x804b508 <__libc_csu_init+0x38>
0x804b525:   83 c4 0c                        	add esp, 0xc
0x804b528:   5b                              	pop ebx
0x804b529:   5e                              	pop esi
0x804b52a:   5f                              	pop edi
0x804b52b:   5d                              	pop ebp
0x804b52c:   c3                              	ret 
; data inside code section at 0x804b52d -- 0x804b530
0x804b52d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x804b530 -- 0x804b532
0x804b530:   f3 c3                           	ret 
; section: .fini
; function: _fini at 0x804b534 -- 0x804b548
0x804b534:   53                              	push ebx
0x804b535:   83 ec 08                        	sub esp, 8
0x804b538:   e8 53 ce ff ff                  	call 0x8048390 <__x86.get_pc_thunk.bx>
0x804b53d:   81 c3 c3 2a 00 00               	add ebx, 0x2ac3
0x804b543:   83 c4 08                        	add esp, 8
0x804b546:   5b                              	pop ebx
0x804b547:   c3                              	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 4c b5 04 08  04 00 00 00 11 00 10 00   |....L...........|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc df 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c e0 04 08 07 01 00 00  10 e0 04 08 07 02 00 00   |................|
0x80482c4:   14 e0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x804b548:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x804b558:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x804b568:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x804b578:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x804b588:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x804b598:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x804b5a8:   31 00 67 5f 36 00 67 5f  31 30 00 67 5f 31 31 00   |1.g_6.g_10.g_11.|
0x804b5b8:   67 5f 31 35 00 67 5f 32  31 00 67 5f 32 32 00 67   |g_15.g_21.g_22.g|
0x804b5c8:   5f 32 33 00 67 5f 33 32  00 67 5f 34 35 00 67 5f   |_23.g_32.g_45.g_|
0x804b5d8:   38 31 00 67 5f 39 31 00  67 5f 31 30 37 00 67 5f   |81.g_91.g_107.g_|
0x804b5e8:   31 33 30 00 67 5f 31 33  31 00 67 5f 31 33 32 00   |130.g_131.g_132.|
0x804b5f8:   67 5f 31 33 33 00 67 5f  32 34 36 00 67 5f 32 35   |g_133.g_246.g_25|
0x804b608:   30 00 67 5f 32 37 30 00  67 5f 32 37 32 00 67 5f   |0.g_270.g_272.g_|
0x804b618:   32 37 33 00 67 5f 33 35  38 00 67 5f 33 35 39 00   |273.g_358.g_359.|
0x804b628:   67 5f 33 36 30 00 67 5f  33 36 33 00 67 5f 33 36   |g_360.g_363.g_36|
0x804b638:   34 00 67 5f 33 36 35 00  67 5f 34 33 30 00 67 5f   |4.g_365.g_430.g_|
0x804b648:   34 35 31 00 67 5f 34 35  34 00 67 5f 34 37 34 00   |451.g_454.g_474.|
0x804b658:   67 5f 35 32 36 00 67 5f  35 32 39 00 00 00 00 3f   |g_526.g_529....?|
0x804b668:   ff ff ff 7e 00 00 80 0d  00 00 80 31 ff ff 7f 3f   |...~.......1...?|
0x804b678:   00 00 00 27 00 00 80 71  ff ff ff 34 00 00 00 00   |...'...q...4....|
0x804b688:   00 00 00 00 00 00 e0 3f  ff ff ff ff ff ff df 7f   |.......?........|
0x804b698:   00 00 00 00 00 00 b0 39  00 00 00 00 00 00 30 06   |.......9......0.|
0x804b6a8:   ff ff ff ff ff ff ef 3f  00 00 00 00 00 00 10 03   |.......?........|
0x804b6b8:   00 00 00 00 00 00 30 46  ff ff ff ff ff ff cf 3c   |......0F.......<|
0x804b6c8:   00 00 00 cf 00 00 00 4f  01                        |.......O.       |
; section: .eh_frame_hdr
0x804b6d0:   01 1b 03 3b b8 02 00 00  56 00 00 00 20 cc ff ff   |...;....V... ...|
0x804b6e0:   e8 02 00 00 60 cc ff ff  0c 03 00 00 b0 cc ff ff   |....`...........|
0x804b6f0:   d4 02 00 00 86 cd ff ff  20 03 00 00 96 cd ff ff   |........ .......|
0x804b700:   40 03 00 00 c4 cd ff ff  64 03 00 00 e2 cd ff ff   |@.......d.......|
0x804b710:   84 03 00 00 0a ce ff ff  a4 03 00 00 34 ce ff ff   |............4...|
0x804b720:   c4 03 00 00 5d ce ff ff  e4 03 00 00 a0 ce ff ff   |....]...........|
0x804b730:   04 04 00 00 e1 ce ff ff  24 04 00 00 39 cf ff ff   |........$...9...|
0x804b740:   48 04 00 00 8b cf ff ff  6c 04 00 00 c8 cf ff ff   |H.......l.......|
0x804b750:   8c 04 00 00 ff cf ff ff  ac 04 00 00 1e d0 ff ff   |................|
0x804b760:   cc 04 00 00 48 d0 ff ff  ec 04 00 00 74 d0 ff ff   |....H.......t...|
0x804b770:   0c 05 00 00 9f d0 ff ff  2c 05 00 00 e8 d0 ff ff   |........,.......|
0x804b780:   4c 05 00 00 2f d1 ff ff  6c 05 00 00 89 d1 ff ff   |L.../...l.......|
0x804b790:   90 05 00 00 dd d1 ff ff  b4 05 00 00 1c d2 ff ff   |................|
0x804b7a0:   d4 05 00 00 55 d2 ff ff  f4 05 00 00 77 d2 ff ff   |....U.......w...|
0x804b7b0:   14 06 00 00 c5 d2 ff ff  34 06 00 00 01 d3 ff ff   |........4.......|
0x804b7c0:   54 06 00 00 8a d3 ff ff  74 06 00 00 bc d3 ff ff   |T.......t.......|
0x804b7d0:   94 06 00 00 ec d3 ff ff  b4 06 00 00 31 d4 ff ff   |............1...|
0x804b7e0:   d4 06 00 00 70 d4 ff ff  f4 06 00 00 a2 d4 ff ff   |....p...........|
0x804b7f0:   14 07 00 00 ce d4 ff ff  34 07 00 00 ec d4 ff ff   |........4.......|
0x804b800:   54 07 00 00 14 d5 ff ff  74 07 00 00 39 d5 ff ff   |T.......t...9...|
0x804b810:   94 07 00 00 5e d5 ff ff  b4 07 00 00 95 d5 ff ff   |....^...........|
0x804b820:   d4 07 00 00 c9 d5 ff ff  f4 07 00 00 1b d6 ff ff   |................|
0x804b830:   18 08 00 00 67 d6 ff ff  3c 08 00 00 9e d6 ff ff   |....g...<.......|
0x804b840:   5c 08 00 00 cf d6 ff ff  7c 08 00 00 ee d6 ff ff   |\.......|.......|
0x804b850:   9c 08 00 00 18 d7 ff ff  bc 08 00 00 40 d7 ff ff   |............@...|
0x804b860:   dc 08 00 00 69 d7 ff ff  fc 08 00 00 a5 d7 ff ff   |....i...........|
0x804b870:   1c 09 00 00 df d7 ff ff  3c 09 00 00 32 d8 ff ff   |........<...2...|
0x804b880:   60 09 00 00 7f d8 ff ff  84 09 00 00 b7 d8 ff ff   |`...............|
0x804b890:   a4 09 00 00 e9 d8 ff ff  c4 09 00 00 fd d8 ff ff   |................|
0x804b8a0:   e4 09 00 00 14 d9 ff ff  04 0a 00 00 29 d9 ff ff   |............)...|
0x804b8b0:   24 0a 00 00 3f d9 ff ff  44 0a 00 00 66 d9 ff ff   |$...?...D...f...|
0x804b8c0:   64 0a 00 00 8b d9 ff ff  84 0a 00 00 ca d9 ff ff   |d...............|
0x804b8d0:   a4 0a 00 00 03 da ff ff  c4 0a 00 00 2f da ff ff   |............/...|
0x804b8e0:   e4 0a 00 00 55 da ff ff  04 0b 00 00 97 da ff ff   |....U...........|
0x804b8f0:   24 0b 00 00 d9 da ff ff  44 0b 00 00 1b db ff ff   |$.......D.......|
0x804b900:   64 0b 00 00 90 db ff ff  84 0b 00 00 ed db ff ff   |d...............|
0x804b910:   a4 0b 00 00 4a dc ff ff  c4 0b 00 00 a7 dc ff ff   |....J...........|
0x804b920:   e4 0b 00 00 37 dd ff ff  04 0c 00 00 9b dd ff ff   |....7...........|
0x804b930:   24 0c 00 00 0b de ff ff  44 0c 00 00 52 de ff ff   |$.......D...R...|
0x804b940:   68 0c 00 00 a7 de ff ff  88 0c 00 00 ee de ff ff   |h...............|
0x804b950:   ac 0c 00 00 56 df ff ff  d0 0c 00 00 9d e1 ff ff   |....V...........|
0x804b960:   00 0d 00 00 85 f9 ff ff  30 0d 00 00 f3 fd ff ff   |........0.......|
0x804b970:   68 0d 00 00 f7 fd ff ff  7c 0d 00 00 00 fe ff ff   |h.......|.......|
0x804b980:   90 0d 00 00 60 fe ff ff  dc 0d 00 00 14            |....`........   |
; section: .eh_frame
0x804b98c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804b99c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804b9ac:   d4 c9 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804b9bc:   30 00 00 00 30 c9 ff ff  40 00 00 00 00 0e 08 46   |0...0...@......F|
0x804b9cc:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804b9dc:   10 00 00 00 54 00 00 00  4c c9 ff ff 08 00 00 00   |....T...L.......|
0x804b9ec:   00 00 00 00 1c 00 00 00  68 00 00 00 5e ca ff ff   |........h...^...|
0x804b9fc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804ba0c:   04 04 00 00 20 00 00 00  88 00 00 00 4e ca ff ff   |.... .......N...|
0x804ba1c:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804ba2c:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804ba3c:   58 ca ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |X........A....B.|
0x804ba4c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804ba5c:   56 ca ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |V...(....A....B.|
0x804ba6c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804ba7c:   5e ca ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |^...*....A....B.|
0x804ba8c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804ba9c:   68 ca ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |h...)....A....B.|
0x804baac:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804babc:   71 ca ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |q...C....A....B.|
0x804bacc:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804badc:   94 ca ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804baec:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804bafc:   b5 ca ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804bb0c:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804bb1c:   90 01 00 00 e9 ca ff ff  52 00 00 00 00 41 0e 08   |........R....A..|
0x804bb2c:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804bb3c:   1c 00 00 00 b4 01 00 00  17 cb ff ff 3d 00 00 00   |............=...|
0x804bb4c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804bb5c:   1c 00 00 00 d4 01 00 00  34 cb ff ff 37 00 00 00   |........4...7...|
0x804bb6c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bb7c:   1c 00 00 00 f4 01 00 00  4b cb ff ff 1f 00 00 00   |........K.......|
0x804bb8c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bb9c:   1c 00 00 00 14 02 00 00  4a cb ff ff 2a 00 00 00   |........J...*...|
0x804bbac:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bbbc:   1c 00 00 00 34 02 00 00  54 cb ff ff 2c 00 00 00   |....4...T...,...|
0x804bbcc:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804bbdc:   1c 00 00 00 54 02 00 00  60 cb ff ff 2b 00 00 00   |....T...`...+...|
0x804bbec:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804bbfc:   1c 00 00 00 74 02 00 00  6b cb ff ff 49 00 00 00   |....t...k...I...|
0x804bc0c:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804bc1c:   1c 00 00 00 94 02 00 00  94 cb ff ff 47 00 00 00   |............G...|
0x804bc2c:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804bc3c:   20 00 00 00 b4 02 00 00  bb cb ff ff 5a 00 00 00   | ...........Z...|
0x804bc4c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804bc5c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 f1 cb ff ff   |.... ...........|
0x804bc6c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804bc7c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804bc8c:   21 cc ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |!...?....A....B.|
0x804bc9c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804bcac:   40 cc ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |@...9....A....B.|
0x804bcbc:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804bccc:   59 cc ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |Y..."....A....B.|
0x804bcdc:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804bcec:   5b cc ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |[...N....A....B.|
0x804bcfc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804bd0c:   89 cc ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804bd1c:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804bd2c:   a5 cc ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804bd3c:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804bd4c:   0e cd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804bd5c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804bd6c:   20 cd ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   | ...0....A....B.|
0x804bd7c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804bd8c:   30 cd ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |0...E....A....B.|
0x804bd9c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804bdac:   55 cd ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |U...?....A....B.|
0x804bdbc:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804bdcc:   74 cd ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |t...2....A....B.|
0x804bddc:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804bdec:   86 cd ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804bdfc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804be0c:   92 cd ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804be1c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804be2c:   90 cd ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804be3c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804be4c:   98 cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be5c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804be6c:   9d cd ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804be7c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804be8c:   a2 cd ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804be9c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804beac:   b9 cd ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804bebc:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804becc:   cd cd ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804bedc:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804beec:   60 05 00 00 fb cd ff ff  4c 00 00 00 00 41 0e 08   |`.......L....A..|
0x804befc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804bf0c:   1c 00 00 00 84 05 00 00  23 ce ff ff 37 00 00 00   |........#...7...|
0x804bf1c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804bf2c:   1c 00 00 00 a4 05 00 00  3a ce ff ff 31 00 00 00   |........:...1...|
0x804bf3c:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804bf4c:   1c 00 00 00 c4 05 00 00  4b ce ff ff 1f 00 00 00   |........K.......|
0x804bf5c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804bf6c:   1c 00 00 00 e4 05 00 00  4a ce ff ff 2a 00 00 00   |........J...*...|
0x804bf7c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804bf8c:   1c 00 00 00 04 06 00 00  54 ce ff ff 28 00 00 00   |........T...(...|
0x804bf9c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804bfac:   1c 00 00 00 24 06 00 00  5c ce ff ff 29 00 00 00   |....$...\...)...|
0x804bfbc:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804bfcc:   1c 00 00 00 44 06 00 00  65 ce ff ff 3c 00 00 00   |....D...e...<...|
0x804bfdc:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804bfec:   1c 00 00 00 64 06 00 00  81 ce ff ff 3a 00 00 00   |....d.......:...|
0x804bffc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804c00c:   20 00 00 00 84 06 00 00  9b ce ff ff 53 00 00 00   | ...........S...|
0x804c01c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804c02c:   c5 0c 04 04 20 00 00 00  a8 06 00 00 ca ce ff ff   |.... ...........|
0x804c03c:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804c04c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804c05c:   f3 ce ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |....8....A....B.|
0x804c06c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804c07c:   0b cf ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804c08c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804c09c:   1d cf ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c0ac:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804c0bc:   11 cf ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c0cc:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804c0dc:   08 cf ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c0ec:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804c0fc:   fd ce ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c10c:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804c11c:   f3 ce ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |....'....A....B.|
0x804c12c:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804c13c:   fa ce ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804c14c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804c15c:   ff ce ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804c16c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804c17c:   1e cf ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804c18c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804c19c:   37 cf ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |7...,....A....B.|
0x804c1ac:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804c1bc:   43 cf ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |C...&....A....B.|
0x804c1cc:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804c1dc:   49 cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |I...B....A....B.|
0x804c1ec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804c1fc:   6b cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |k...B....A....B.|
0x804c20c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804c21c:   8d cf ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804c22c:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804c23c:   af cf ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804c24c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804c25c:   04 d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804c26c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804c27c:   41 d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |A...]....A....B.|
0x804c28c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804c29c:   7e d0 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |~...]....A....B.|
0x804c2ac:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804c2bc:   bb d0 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804c2cc:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804c2dc:   2b d1 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |+...d....A....B.|
0x804c2ec:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804c2fc:   6f d1 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |o...p....A....B.|
0x804c30c:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804c31c:   bf d1 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804c32c:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804c33c:   b0 09 00 00 e2 d1 ff ff  55 00 00 00 00 41 0e 08   |........U....A..|
0x804c34c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804c35c:   d0 09 00 00 17 d2 ff ff  47 00 00 00 00 41 0e 08   |........G....A..|
0x804c36c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804c37c:   20 00 00 00 f4 09 00 00  3a d2 ff ff 68 00 00 00   | .......:...h...|
0x804c38c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804c39c:   0c 04 04 00 2c 00 00 00  18 0a 00 00 7e d2 ff ff   |....,.......~...|
0x804c3ac:   47 02 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |G....A....B..F..|
0x804c3bc:   86 04 83 05 03 3a 02 c3  41 c6 41 c7 41 c5 0c 04   |.....:..A.A.A...|
0x804c3cc:   04 00 00 00 2c 00 00 00  48 0a 00 00 95 d4 ff ff   |....,...H.......|
0x804c3dc:   e8 17 00 00 00 41 0e 08  85 02 42 0d 05 49 87 03   |.....A....B..I..|
0x804c3ec:   86 04 83 05 03 d8 17 c3  41 c6 41 c7 41 c5 0c 04   |........A.A.A...|
0x804c3fc:   04 00 00 00 34 00 00 00  78 0a 00 00 4d ec ff ff   |....4...x...M...|
0x804c40c:   6e 04 00 00 00 44 0c 01  00 47 10 05 02 75 00 44   |n....D...G...u.D|
0x804c41c:   0f 03 75 78 06 10 03 02  75 7c 03 59 04 c1 0c 01   |..ux....u|.Y....|
0x804c42c:   00 41 c3 41 c5 43 0c 04  04 00 00 00 10 00 00 00   |.A.A.C..........|
0x804c43c:   b0 0a 00 00 83 f0 ff ff  04 00 00 00 00 00 00 00   |................|
0x804c44c:   10 00 00 00 c4 0a 00 00  73 f0 ff ff 04 00 00 00   |........s.......|
0x804c45c:   00 00 00 00 48 00 00 00  d8 0a 00 00 68 f0 ff ff   |....H.......h...|
0x804c46c:   5d 00 00 00 00 41 0e 08  85 02 41 0e 0c 87 03 41   |]....A....A....A|
0x804c47c:   0e 10 86 04 41 0e 14 83  05 4e 0e 20 69 0e 24 41   |....A....N. i.$A|
0x804c48c:   0e 28 44 0e 2c 44 0e 30  4d 0e 20 47 0e 14 41 c3   |.(D.,D.0M. G..A.|
0x804c49c:   0e 10 41 c6 0e 0c 41 c7  0e 08 41 c5 0e 04 00 00   |..A...A...A.....|
0x804c4ac:   10 00 00 00 24 0b 00 00  7c f0 ff ff 02 00 00 00   |....$...|.......|
0x804c4bc:   00 00 00 00 00 00 00 00  ??                        |........?       |
; section: .init_array
0x804df0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804df10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804df14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804df24:   0d 00 00 00 34 b5 04 08  19 00 00 00 0c df 04 08   |....4...........|
0x804df34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 df 04 08   |................|
0x804df44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804df54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804df64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804df74:   15 00 00 00 00 00 00 00  03 00 00 00 00 e0 04 08   |................|
0x804df84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804df94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804dfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804dfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804dfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804dfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804dff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804dffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804e000:   14 df 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804e010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804e018:   00 00 00 00 00 00 00 00  ff ff ff ff fd ff ff ff   |................|
0x804e028:   ff 00 06 00 01 00 00 00  71 d2 43 6b be 42 6b ba   |........q.Ck.Bk.|
0x804e038:   14 00 00 00 00 15 39 ab  02 00 00 00 02 00 00 00   |......9.........|
0x804e048:   ff ff ff ff fe 70 00 00  ee 8d 86 f5 09 00 00 00   |.....p..........|
0x804e058:   03 00 00 00 ff ff 00 00  f9 ff ff ff 01 00 00 00   |................|
0x804e068:   01 00 00 00 9a b9 ff ff  d2 79 00 00 ff ff ff ff   |.........y......|
0x804e078:   03 00 c0 56 01 00 00 00  09 00 ??                  |...V......?     |
