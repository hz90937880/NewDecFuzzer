;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2021 Retargetable Decompiler <info@retdec.com>
;;
;; Decompilation date: 2021-03-11 09:02:54
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x80482cc -- 0x80482ef
0x80482cc:   53                     	push ebx
0x80482cd:   83 ec 08               	sub esp, 8
0x80482d0:   e8 bb 00 00 00         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80482d5:   81 c3 2b 3d 00 00      	add ebx, 0x3d2b
0x80482db:   8b 83 fc ff ff ff      	mov eax, dword ptr [ebx - 4]
0x80482e1:   85 c0                  	test eax, eax
0x80482e3:   74 05                  	je 0x80482ea <_init+0x1e>
0x80482e5:   e8 46 00 00 00         	call 0x8048330 <__gmon_start__>
0x80482ea:   83 c4 08               	add esp, 8
0x80482ed:   5b                     	pop ebx
0x80482ee:   c3                     	ret 
; section: .plt
; data inside code section at 0x80482f0 -- 0x8048300
0x80482f0:   ff 35 04 c0 04 08 ff 25  08 c0 04 08 00 00 00 00   |.5.....%........|
; function: function_8048300 at 0x8048300 -- 0x8048306
0x8048300:   ff 25 0c c0 04 08      	jmp dword ptr [0x804c00c] <strcmp>
; data inside code section at 0x8048306 -- 0x8048310
0x8048306:   68 00 00 00 00 e9 e0 ff  ff ff                     |h.........      |
; function: function_8048310 at 0x8048310 -- 0x8048316
0x8048310:   ff 25 10 c0 04 08      	jmp dword ptr [0x804c010] <printf>
; data inside code section at 0x8048316 -- 0x8048320
0x8048316:   68 08 00 00 00 e9 d0 ff  ff ff                     |h.........      |
; function: function_8048320 at 0x8048320 -- 0x8048326
0x8048320:   ff 25 14 c0 04 08      	jmp dword ptr [0x804c014] <__libc_start_main>
; data inside code section at 0x8048326 -- 0x8048330
0x8048326:   68 10 00 00 00 e9 c0 ff  ff ff                     |h.........      |
; section: .plt.got
; function: function_8048330 at 0x8048330 -- 0x8048336
0x8048330:   ff 25 fc bf 04 08      	jmp dword ptr [0x804bffc] <__gmon_start__>
; data inside code section at 0x8048336 -- 0x8048338
0x8048336:   66 90                                              |f.              |
; section: .text
; function: _start at 0x8048340 -- 0x8048373
0x8048340:   31 ed                  	xor ebp, ebp
0x8048342:   5e                     	pop esi
0x8048343:   89 e1                  	mov ecx, esp
0x8048345:   83 e4 f0               	and esp, 0xfffffff0
0x8048348:   50                     	push eax
0x8048349:   54                     	push esp
0x804834a:   52                     	push edx
0x804834b:   e8 23 00 00 00         	call 0x8048373 <function_8048373>
0x8048350:   81 c3 b0 3c 00 00      	add ebx, 0x3cb0
0x8048356:   8d 83 70 dd ff ff      	lea eax, [ebx - 0x2290]
0x804835c:   50                     	push eax
0x804835d:   8d 83 10 dd ff ff      	lea eax, [ebx - 0x22f0]
0x8048363:   50                     	push eax
0x8048364:   51                     	push ecx
0x8048365:   56                     	push esi
0x8048366:   c7 c0 cc 9a 04 08      	mov eax, 0x8049acc
0x804836c:   50                     	push eax
0x804836d:   e8 ae ff ff ff         	call 0x8048320 <__libc_start_main>
0x8048372:   f4                     	hlt 
; function: function_8048373 at 0x8048373 -- 0x8048377
0x8048373:   8b 1c 24               	mov ebx, dword ptr [esp]
0x8048376:   c3                     	ret 
; data inside code section at 0x8048377 -- 0x8048380
0x8048377:   66 90 66 90 66 90 66 90  90                        |f.f.f.f..       |
; function: _dl_relocate_static_pie at 0x8048380 -- 0x8048382
0x8048380:   f3 c3                  	ret 
; data inside code section at 0x8048382 -- 0x8048390
0x8048382:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __x86.get_pc_thunk.bx at 0x8048390 -- 0x8048394
0x8048390:   8b 1c 24               	mov ebx, dword ptr [esp]
0x8048393:   c3                     	ret 
; data inside code section at 0x8048394 -- 0x80483a0
0x8048394:   66 90 66 90 66 90 66 90  66 90 66 90               |f.f.f.f.f.f.    |
; function: deregister_tm_clones at 0x80483a0 -- 0x80483d2
0x80483a0:   b8 54 c0 04 08         	mov eax, 0x804c054
0x80483a5:   3d 54 c0 04 08         	cmp eax, 0x804c054
0x80483aa:   74 24                  	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483ac:   b8 00 00 00 00         	mov eax, 0
0x80483b1:   85 c0                  	test eax, eax
0x80483b3:   74 1b                  	je 0x80483d0 <deregister_tm_clones+0x30>
0x80483b5:   55                     	push ebp
0x80483b6:   89 e5                  	mov ebp, esp
0x80483b8:   83 ec 14               	sub esp, 0x14
0x80483bb:   68 54 c0 04 08         	push 0x804c054
0x80483c0:   ff d0                  	call eax
0x80483c2:   83 c4 10               	add esp, 0x10
0x80483c5:   c9                     	leave 
0x80483c6:   c3                     	ret 
; data inside code section at 0x80483c7 -- 0x80483d0
0x80483c7:   89 f6 8d bc 27 00 00 00  00                        |....'....       |
0x80483d0:   f3 c3                  	ret 
; data inside code section at 0x80483d2 -- 0x80483e0
0x80483d2:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: register_tm_clones at 0x80483e0 -- 0x804841a
0x80483e0:   b8 54 c0 04 08         	mov eax, 0x804c054
0x80483e5:   2d 54 c0 04 08         	sub eax, 0x804c054
0x80483ea:   c1 f8 02               	sar eax, 2
0x80483ed:   89 c2                  	mov edx, eax
0x80483ef:   c1 ea 1f               	shr edx, 0x1f
0x80483f2:   01 d0                  	add eax, edx
0x80483f4:   d1 f8                  	sar eax, 1
0x80483f6:   74 20                  	je 0x8048418 <register_tm_clones+0x38>
0x80483f8:   ba 00 00 00 00         	mov edx, 0
0x80483fd:   85 d2                  	test edx, edx
0x80483ff:   74 17                  	je 0x8048418 <register_tm_clones+0x38>
0x8048401:   55                     	push ebp
0x8048402:   89 e5                  	mov ebp, esp
0x8048404:   83 ec 10               	sub esp, 0x10
0x8048407:   50                     	push eax
0x8048408:   68 54 c0 04 08         	push 0x804c054
0x804840d:   ff d2                  	call edx
0x804840f:   83 c4 10               	add esp, 0x10
0x8048412:   c9                     	leave 
0x8048413:   c3                     	ret 
; data inside code section at 0x8048414 -- 0x8048418
0x8048414:   8d 74 26 00                                        |.t&.            |
0x8048418:   f3 c3                  	ret 
; data inside code section at 0x804841a -- 0x8048420
0x804841a:   8d b6 00 00 00 00                                  |......          |
; function: __do_global_dtors_aux at 0x8048420 -- 0x8048442
0x8048420:   80 3d 60 c0 04 08 00   	cmp byte ptr [0x804c060], 0
0x8048427:   75 17                  	jne 0x8048440 <__do_global_dtors_aux+0x20>
0x8048429:   55                     	push ebp
0x804842a:   89 e5                  	mov ebp, esp
0x804842c:   83 ec 08               	sub esp, 8
0x804842f:   e8 6c ff ff ff         	call 0x80483a0 <deregister_tm_clones>
0x8048434:   c6 05 60 c0 04 08 01   	mov byte ptr [0x804c060], 1
0x804843b:   c9                     	leave 
0x804843c:   c3                     	ret 
; data inside code section at 0x804843d -- 0x8048440
0x804843d:   8d 76 00                                           |.v.             |
0x8048440:   f3 c3                  	ret 
; data inside code section at 0x8048442 -- 0x8048450
0x8048442:   8d b4 26 00 00 00 00 8d  bc 27 00 00 00 00         |..&......'....  |
; function: frame_dummy at 0x8048450 -- 0x8048456
0x8048450:   55                     	push ebp
0x8048451:   89 e5                  	mov ebp, esp
0x8048453:   5d                     	pop ebp
0x8048454:   eb 8a                  	jmp 0x80483e0 <register_tm_clones>
; function: platform_main_begin at 0x8048456 -- 0x8048466
0x8048456:   55                     	push ebp
0x8048457:   89 e5                  	mov ebp, esp
0x8048459:   e8 a0 18 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804845e:   05 a2 3b 00 00         	add eax, 0x3ba2
0x8048463:   90                     	nop 
0x8048464:   5d                     	pop ebp
0x8048465:   c3                     	ret 
; function: platform_main_end at 0x8048466 -- 0x8048494
0x8048466:   55                     	push ebp
0x8048467:   89 e5                  	mov ebp, esp
0x8048469:   53                     	push ebx
0x804846a:   83 ec 04               	sub esp, 4
0x804846d:   e8 8c 18 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048472:   05 8e 3b 00 00         	add eax, 0x3b8e
0x8048477:   83 ec 08               	sub esp, 8
0x804847a:   ff 75 08               	push dword ptr [ebp + 8]
0x804847d:   8d 90 90 dd ff ff      	lea edx, [eax - 0x2270]
0x8048483:   52                     	push edx
0x8048484:   89 c3                  	mov ebx, eax
0x8048486:   e8 85 fe ff ff         	call 0x8048310 <printf>
0x804848b:   83 c4 10               	add esp, 0x10
0x804848e:   90                     	nop 
0x804848f:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x8048492:   c9                     	leave 
0x8048493:   c3                     	ret 
; function: safe_unary_minus_func_int8_t_s at 0x8048494 -- 0x80484b2
0x8048494:   55                     	push ebp
0x8048495:   89 e5                  	mov ebp, esp
0x8048497:   83 ec 04               	sub esp, 4
0x804849a:   e8 5f 18 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804849f:   05 61 3b 00 00         	add eax, 0x3b61
0x80484a4:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80484a7:   88 45 fc               	mov byte ptr [ebp - 4], al
0x80484aa:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x80484ae:   f7 d8                  	neg eax
0x80484b0:   c9                     	leave 
0x80484b1:   c3                     	ret 
; function: safe_add_func_int8_t_s_s at 0x80484b2 -- 0x80484da
0x80484b2:   55                     	push ebp
0x80484b3:   89 e5                  	mov ebp, esp
0x80484b5:   83 ec 08               	sub esp, 8
0x80484b8:   e8 41 18 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80484bd:   05 43 3b 00 00         	add eax, 0x3b43
0x80484c2:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80484c5:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80484c8:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x80484cb:   88 45 f8               	mov byte ptr [ebp - 8], al
0x80484ce:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x80484d2:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x80484d6:   01 d0                  	add eax, edx
0x80484d8:   c9                     	leave 
0x80484d9:   c3                     	ret 
; function: safe_sub_func_int8_t_s_s at 0x80484da -- 0x8048504
0x80484da:   55                     	push ebp
0x80484db:   89 e5                  	mov ebp, esp
0x80484dd:   83 ec 08               	sub esp, 8
0x80484e0:   e8 19 18 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80484e5:   05 1b 3b 00 00         	add eax, 0x3b1b
0x80484ea:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80484ed:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80484f0:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x80484f3:   88 45 f8               	mov byte ptr [ebp - 8], al
0x80484f6:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x80484fa:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x80484fe:   29 c2                  	sub edx, eax
0x8048500:   89 d0                  	mov eax, edx
0x8048502:   c9                     	leave 
0x8048503:   c3                     	ret 
; function: safe_mul_func_int8_t_s_s at 0x8048504 -- 0x804852d
0x8048504:   55                     	push ebp
0x8048505:   89 e5                  	mov ebp, esp
0x8048507:   83 ec 08               	sub esp, 8
0x804850a:   e8 ef 17 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804850f:   05 f1 3a 00 00         	add eax, 0x3af1
0x8048514:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048517:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804851a:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x804851d:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048520:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048524:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048528:   0f af c2               	imul eax, edx
0x804852b:   c9                     	leave 
0x804852c:   c3                     	ret 
; function: safe_mod_func_int8_t_s_s at 0x804852d -- 0x8048570
0x804852d:   55                     	push ebp
0x804852e:   89 e5                  	mov ebp, esp
0x8048530:   83 ec 08               	sub esp, 8
0x8048533:   e8 c6 17 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048538:   05 c8 3a 00 00         	add eax, 0x3ac8
0x804853d:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048540:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048543:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048546:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048549:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x804854d:   74 1b                  	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804854f:   80 7d fc 80            	cmp byte ptr [ebp - 4], 0x80
0x8048553:   75 06                  	jne 0x804855b <safe_mod_func_int8_t_s_s+0x2e>
0x8048555:   80 7d f8 ff            	cmp byte ptr [ebp - 8], 0xff
0x8048559:   74 0f                  	je 0x804856a <safe_mod_func_int8_t_s_s+0x3d>
0x804855b:   0f be 45 fc            	movsx eax, byte ptr [ebp - 4]
0x804855f:   0f be 4d f8            	movsx ecx, byte ptr [ebp - 8]
0x8048563:   99                     	cdq 
0x8048564:   f7 f9                  	idiv ecx
0x8048566:   89 d0                  	mov eax, edx
0x8048568:   eb 04                  	jmp 0x804856e <safe_mod_func_int8_t_s_s+0x41>
0x804856a:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x804856e:   c9                     	leave 
0x804856f:   c3                     	ret 
; function: safe_div_func_int8_t_s_s at 0x8048570 -- 0x80485b1
0x8048570:   55                     	push ebp
0x8048571:   89 e5                  	mov ebp, esp
0x8048573:   83 ec 08               	sub esp, 8
0x8048576:   e8 83 17 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804857b:   05 85 3a 00 00         	add eax, 0x3a85
0x8048580:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048583:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048586:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048589:   88 45 f8               	mov byte ptr [ebp - 8], al
0x804858c:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048590:   74 19                  	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x8048592:   80 7d fc 80            	cmp byte ptr [ebp - 4], 0x80
0x8048596:   75 06                  	jne 0x804859e <safe_div_func_int8_t_s_s+0x2e>
0x8048598:   80 7d f8 ff            	cmp byte ptr [ebp - 8], 0xff
0x804859c:   74 0d                  	je 0x80485ab <safe_div_func_int8_t_s_s+0x3b>
0x804859e:   0f be 45 fc            	movsx eax, byte ptr [ebp - 4]
0x80485a2:   0f be 4d f8            	movsx ecx, byte ptr [ebp - 8]
0x80485a6:   99                     	cdq 
0x80485a7:   f7 f9                  	idiv ecx
0x80485a9:   eb 04                  	jmp 0x80485af <safe_div_func_int8_t_s_s+0x3f>
0x80485ab:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x80485af:   c9                     	leave 
0x80485b0:   c3                     	ret 
; function: safe_lshift_func_int8_t_s_s at 0x80485b1 -- 0x8048609
0x80485b1:   55                     	push ebp
0x80485b2:   89 e5                  	mov ebp, esp
0x80485b4:   53                     	push ebx
0x80485b5:   83 ec 04               	sub esp, 4
0x80485b8:   e8 41 17 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80485bd:   05 43 3a 00 00         	add eax, 0x3a43
0x80485c2:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80485c5:   88 45 f8               	mov byte ptr [ebp - 8], al
0x80485c8:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x80485cc:   78 31                  	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485ce:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80485d2:   78 2b                  	js 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485d4:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80485d8:   7f 25                  	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485da:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x80485de:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80485e1:   bb 7f 00 00 00         	mov ebx, 0x7f
0x80485e6:   89 c1                  	mov ecx, eax
0x80485e8:   d3 fb                  	sar ebx, cl
0x80485ea:   89 d8                  	mov eax, ebx
0x80485ec:   39 c2                  	cmp edx, eax
0x80485ee:   7f 0f                  	jg 0x80485ff <safe_lshift_func_int8_t_s_s+0x4e>
0x80485f0:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x80485f4:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80485f7:   89 c1                  	mov ecx, eax
0x80485f9:   d3 e2                  	shl edx, cl
0x80485fb:   89 d0                  	mov eax, edx
0x80485fd:   eb 04                  	jmp 0x8048603 <safe_lshift_func_int8_t_s_s+0x52>
0x80485ff:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048603:   83 c4 04               	add esp, 4
0x8048606:   5b                     	pop ebx
0x8048607:   5d                     	pop ebp
0x8048608:   c3                     	ret 
; function: safe_lshift_func_int8_t_s_u at 0x8048609 -- 0x804865b
0x8048609:   55                     	push ebp
0x804860a:   89 e5                  	mov ebp, esp
0x804860c:   53                     	push ebx
0x804860d:   83 ec 04               	sub esp, 4
0x8048610:   e8 e9 16 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048615:   05 eb 39 00 00         	add eax, 0x39eb
0x804861a:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804861d:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048620:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048624:   78 2b                  	js 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048626:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x804862a:   77 25                  	ja 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x804862c:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x8048630:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048633:   bb 7f 00 00 00         	mov ebx, 0x7f
0x8048638:   89 c1                  	mov ecx, eax
0x804863a:   d3 fb                  	sar ebx, cl
0x804863c:   89 d8                  	mov eax, ebx
0x804863e:   39 c2                  	cmp edx, eax
0x8048640:   7f 0f                  	jg 0x8048651 <safe_lshift_func_int8_t_s_u+0x48>
0x8048642:   0f be 55 f8            	movsx edx, byte ptr [ebp - 8]
0x8048646:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048649:   89 c1                  	mov ecx, eax
0x804864b:   d3 e2                  	shl edx, cl
0x804864d:   89 d0                  	mov eax, edx
0x804864f:   eb 04                  	jmp 0x8048655 <safe_lshift_func_int8_t_s_u+0x4c>
0x8048651:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048655:   83 c4 04               	add esp, 4
0x8048658:   5b                     	pop ebx
0x8048659:   5d                     	pop ebp
0x804865a:   c3                     	ret 
; function: safe_rshift_func_int8_t_s_s at 0x804865b -- 0x8048698
0x804865b:   55                     	push ebp
0x804865c:   89 e5                  	mov ebp, esp
0x804865e:   83 ec 04               	sub esp, 4
0x8048661:   e8 98 16 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048666:   05 9a 39 00 00         	add eax, 0x399a
0x804866b:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804866e:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048671:   80 7d fc 00            	cmp byte ptr [ebp - 4], 0
0x8048675:   78 1b                  	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048677:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x804867b:   78 15                  	js 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x804867d:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048681:   7f 0f                  	jg 0x8048692 <safe_rshift_func_int8_t_s_s+0x37>
0x8048683:   0f be 55 fc            	movsx edx, byte ptr [ebp - 4]
0x8048687:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804868a:   89 c1                  	mov ecx, eax
0x804868c:   d3 fa                  	sar edx, cl
0x804868e:   89 d0                  	mov eax, edx
0x8048690:   eb 04                  	jmp 0x8048696 <safe_rshift_func_int8_t_s_s+0x3b>
0x8048692:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048696:   c9                     	leave 
0x8048697:   c3                     	ret 
; function: safe_rshift_func_int8_t_s_u at 0x8048698 -- 0x80486cf
0x8048698:   55                     	push ebp
0x8048699:   89 e5                  	mov ebp, esp
0x804869b:   83 ec 04               	sub esp, 4
0x804869e:   e8 5b 16 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80486a3:   05 5d 39 00 00         	add eax, 0x395d
0x80486a8:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80486ab:   88 45 fc               	mov byte ptr [ebp - 4], al
0x80486ae:   80 7d fc 00            	cmp byte ptr [ebp - 4], 0
0x80486b2:   78 15                  	js 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486b4:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80486b8:   77 0f                  	ja 0x80486c9 <safe_rshift_func_int8_t_s_u+0x31>
0x80486ba:   0f be 55 fc            	movsx edx, byte ptr [ebp - 4]
0x80486be:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80486c1:   89 c1                  	mov ecx, eax
0x80486c3:   d3 fa                  	sar edx, cl
0x80486c5:   89 d0                  	mov eax, edx
0x80486c7:   eb 04                  	jmp 0x80486cd <safe_rshift_func_int8_t_s_u+0x35>
0x80486c9:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x80486cd:   c9                     	leave 
0x80486ce:   c3                     	ret 
; function: safe_unary_minus_func_int16_t_s at 0x80486cf -- 0x80486ee
0x80486cf:   55                     	push ebp
0x80486d0:   89 e5                  	mov ebp, esp
0x80486d2:   83 ec 04               	sub esp, 4
0x80486d5:   e8 24 16 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80486da:   05 26 39 00 00         	add eax, 0x3926
0x80486df:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80486e2:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x80486e6:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80486ea:   f7 d8                  	neg eax
0x80486ec:   c9                     	leave 
0x80486ed:   c3                     	ret 
; function: safe_add_func_int16_t_s_s at 0x80486ee -- 0x8048718
0x80486ee:   55                     	push ebp
0x80486ef:   89 e5                  	mov ebp, esp
0x80486f1:   83 ec 08               	sub esp, 8
0x80486f4:   e8 05 16 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80486f9:   05 07 39 00 00         	add eax, 0x3907
0x80486fe:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048701:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048704:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048708:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x804870c:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048710:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048714:   01 d0                  	add eax, edx
0x8048716:   c9                     	leave 
0x8048717:   c3                     	ret 
; function: safe_sub_func_int16_t_s_s at 0x8048718 -- 0x8048744
0x8048718:   55                     	push ebp
0x8048719:   89 e5                  	mov ebp, esp
0x804871b:   83 ec 08               	sub esp, 8
0x804871e:   e8 db 15 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048723:   05 dd 38 00 00         	add eax, 0x38dd
0x8048728:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804872b:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804872e:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048732:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048736:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x804873a:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x804873e:   29 c2                  	sub edx, eax
0x8048740:   89 d0                  	mov eax, edx
0x8048742:   c9                     	leave 
0x8048743:   c3                     	ret 
; function: safe_mul_func_int16_t_s_s at 0x8048744 -- 0x804876f
0x8048744:   55                     	push ebp
0x8048745:   89 e5                  	mov ebp, esp
0x8048747:   83 ec 08               	sub esp, 8
0x804874a:   e8 af 15 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804874f:   05 b1 38 00 00         	add eax, 0x38b1
0x8048754:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048757:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804875a:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x804875e:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048762:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048766:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x804876a:   0f af c2               	imul eax, edx
0x804876d:   c9                     	leave 
0x804876e:   c3                     	ret 
; function: safe_mod_func_int16_t_s_s at 0x804876f -- 0x80487b8
0x804876f:   55                     	push ebp
0x8048770:   89 e5                  	mov ebp, esp
0x8048772:   83 ec 08               	sub esp, 8
0x8048775:   e8 84 15 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804877a:   05 86 38 00 00         	add eax, 0x3886
0x804877f:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048782:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048785:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048789:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x804878d:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048792:   74 1e                  	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x8048794:   66 81 7d fc 00 80      	cmp word ptr [ebp - 4], 0x8000
0x804879a:   75 07                  	jne 0x80487a3 <safe_mod_func_int16_t_s_s+0x34>
0x804879c:   66 83 7d f8 ff         	cmp word ptr [ebp - 8], -1
0x80487a1:   74 0f                  	je 0x80487b2 <safe_mod_func_int16_t_s_s+0x43>
0x80487a3:   0f bf 45 fc            	movsx eax, word ptr [ebp - 4]
0x80487a7:   0f bf 4d f8            	movsx ecx, word ptr [ebp - 8]
0x80487ab:   99                     	cdq 
0x80487ac:   f7 f9                  	idiv ecx
0x80487ae:   89 d0                  	mov eax, edx
0x80487b0:   eb 04                  	jmp 0x80487b6 <safe_mod_func_int16_t_s_s+0x47>
0x80487b2:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80487b6:   c9                     	leave 
0x80487b7:   c3                     	ret 
; function: safe_div_func_int16_t_s_s at 0x80487b8 -- 0x80487ff
0x80487b8:   55                     	push ebp
0x80487b9:   89 e5                  	mov ebp, esp
0x80487bb:   83 ec 08               	sub esp, 8
0x80487be:   e8 3b 15 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80487c3:   05 3d 38 00 00         	add eax, 0x383d
0x80487c8:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80487cb:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80487ce:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x80487d2:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x80487d6:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x80487db:   74 1c                  	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487dd:   66 81 7d fc 00 80      	cmp word ptr [ebp - 4], 0x8000
0x80487e3:   75 07                  	jne 0x80487ec <safe_div_func_int16_t_s_s+0x34>
0x80487e5:   66 83 7d f8 ff         	cmp word ptr [ebp - 8], -1
0x80487ea:   74 0d                  	je 0x80487f9 <safe_div_func_int16_t_s_s+0x41>
0x80487ec:   0f bf 45 fc            	movsx eax, word ptr [ebp - 4]
0x80487f0:   0f bf 4d f8            	movsx ecx, word ptr [ebp - 8]
0x80487f4:   99                     	cdq 
0x80487f5:   f7 f9                  	idiv ecx
0x80487f7:   eb 04                  	jmp 0x80487fd <safe_div_func_int16_t_s_s+0x45>
0x80487f9:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80487fd:   c9                     	leave 
0x80487fe:   c3                     	ret 
; function: safe_lshift_func_int16_t_s_s at 0x80487ff -- 0x8048859
0x80487ff:   55                     	push ebp
0x8048800:   89 e5                  	mov ebp, esp
0x8048802:   53                     	push ebx
0x8048803:   83 ec 04               	sub esp, 4
0x8048806:   e8 f3 14 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804880b:   05 f5 37 00 00         	add eax, 0x37f5
0x8048810:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048813:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048817:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x804881c:   78 31                  	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804881e:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048822:   78 2b                  	js 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048824:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048828:   7f 25                  	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x804882a:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x804882e:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048831:   bb ff 7f 00 00         	mov ebx, 0x7fff
0x8048836:   89 c1                  	mov ecx, eax
0x8048838:   d3 fb                  	sar ebx, cl
0x804883a:   89 d8                  	mov eax, ebx
0x804883c:   39 c2                  	cmp edx, eax
0x804883e:   7f 0f                  	jg 0x804884f <safe_lshift_func_int16_t_s_s+0x50>
0x8048840:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x8048844:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048847:   89 c1                  	mov ecx, eax
0x8048849:   d3 e2                  	shl edx, cl
0x804884b:   89 d0                  	mov eax, edx
0x804884d:   eb 04                  	jmp 0x8048853 <safe_lshift_func_int16_t_s_s+0x54>
0x804884f:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048853:   83 c4 04               	add esp, 4
0x8048856:   5b                     	pop ebx
0x8048857:   5d                     	pop ebp
0x8048858:   c3                     	ret 
; function: safe_lshift_func_int16_t_s_u at 0x8048859 -- 0x80488ad
0x8048859:   55                     	push ebp
0x804885a:   89 e5                  	mov ebp, esp
0x804885c:   53                     	push ebx
0x804885d:   83 ec 04               	sub esp, 4
0x8048860:   e8 99 14 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048865:   05 9b 37 00 00         	add eax, 0x379b
0x804886a:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804886d:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048871:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048876:   78 2b                  	js 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048878:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x804887c:   77 25                  	ja 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x804887e:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x8048882:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048885:   bb ff 7f 00 00         	mov ebx, 0x7fff
0x804888a:   89 c1                  	mov ecx, eax
0x804888c:   d3 fb                  	sar ebx, cl
0x804888e:   89 d8                  	mov eax, ebx
0x8048890:   39 c2                  	cmp edx, eax
0x8048892:   7f 0f                  	jg 0x80488a3 <safe_lshift_func_int16_t_s_u+0x4a>
0x8048894:   0f bf 55 f8            	movsx edx, word ptr [ebp - 8]
0x8048898:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804889b:   89 c1                  	mov ecx, eax
0x804889d:   d3 e2                  	shl edx, cl
0x804889f:   89 d0                  	mov eax, edx
0x80488a1:   eb 04                  	jmp 0x80488a7 <safe_lshift_func_int16_t_s_u+0x4e>
0x80488a3:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x80488a7:   83 c4 04               	add esp, 4
0x80488aa:   5b                     	pop ebx
0x80488ab:   5d                     	pop ebp
0x80488ac:   c3                     	ret 
; function: safe_rshift_func_int16_t_s_s at 0x80488ad -- 0x80488ec
0x80488ad:   55                     	push ebp
0x80488ae:   89 e5                  	mov ebp, esp
0x80488b0:   83 ec 04               	sub esp, 4
0x80488b3:   e8 46 14 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80488b8:   05 48 37 00 00         	add eax, 0x3748
0x80488bd:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80488c0:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x80488c4:   66 83 7d fc 00         	cmp word ptr [ebp - 4], 0
0x80488c9:   78 1b                  	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488cb:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80488cf:   78 15                  	js 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d1:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80488d5:   7f 0f                  	jg 0x80488e6 <safe_rshift_func_int16_t_s_s+0x39>
0x80488d7:   0f bf 55 fc            	movsx edx, word ptr [ebp - 4]
0x80488db:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80488de:   89 c1                  	mov ecx, eax
0x80488e0:   d3 fa                  	sar edx, cl
0x80488e2:   89 d0                  	mov eax, edx
0x80488e4:   eb 04                  	jmp 0x80488ea <safe_rshift_func_int16_t_s_s+0x3d>
0x80488e6:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x80488ea:   c9                     	leave 
0x80488eb:   c3                     	ret 
; function: safe_rshift_func_int16_t_s_u at 0x80488ec -- 0x8048925
0x80488ec:   55                     	push ebp
0x80488ed:   89 e5                  	mov ebp, esp
0x80488ef:   83 ec 04               	sub esp, 4
0x80488f2:   e8 07 14 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80488f7:   05 09 37 00 00         	add eax, 0x3709
0x80488fc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80488ff:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048903:   66 83 7d fc 00         	cmp word ptr [ebp - 4], 0
0x8048908:   78 15                  	js 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x804890a:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x804890e:   77 0f                  	ja 0x804891f <safe_rshift_func_int16_t_s_u+0x33>
0x8048910:   0f bf 55 fc            	movsx edx, word ptr [ebp - 4]
0x8048914:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048917:   89 c1                  	mov ecx, eax
0x8048919:   d3 fa                  	sar edx, cl
0x804891b:   89 d0                  	mov eax, edx
0x804891d:   eb 04                  	jmp 0x8048923 <safe_rshift_func_int16_t_s_u+0x37>
0x804891f:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048923:   c9                     	leave 
0x8048924:   c3                     	ret 
; function: safe_unary_minus_func_int32_t_s at 0x8048925 -- 0x8048947
0x8048925:   55                     	push ebp
0x8048926:   89 e5                  	mov ebp, esp
0x8048928:   e8 d1 13 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804892d:   05 d3 36 00 00         	add eax, 0x36d3
0x8048932:   81 7d 08 00 00 00 80   	cmp dword ptr [ebp + 8], 0x80000000
0x8048939:   74 07                  	je 0x8048942 <safe_unary_minus_func_int32_t_s+0x1d>
0x804893b:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804893e:   f7 d8                  	neg eax
0x8048940:   eb 03                  	jmp 0x8048945 <safe_unary_minus_func_int32_t_s+0x20>
0x8048942:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048945:   5d                     	pop ebp
0x8048946:   c3                     	ret 
; function: safe_add_func_int32_t_s_s at 0x8048947 -- 0x8048995
0x8048947:   55                     	push ebp
0x8048948:   89 e5                  	mov ebp, esp
0x804894a:   e8 af 13 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804894f:   05 b1 36 00 00         	add eax, 0x36b1
0x8048954:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048958:   7e 13                  	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x804895a:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x804895e:   7e 0d                  	jle 0x804896d <safe_add_func_int32_t_s_s+0x26>
0x8048960:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x8048965:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x8048968:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x804896b:   7f 23                  	jg 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x804896d:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048971:   79 13                  	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048973:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048977:   79 0d                  	jns 0x8048986 <safe_add_func_int32_t_s_s+0x3f>
0x8048979:   b8 00 00 00 80         	mov eax, 0x80000000
0x804897e:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x8048981:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048984:   7c 0a                  	jl 0x8048990 <safe_add_func_int32_t_s_s+0x49>
0x8048986:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048989:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804898c:   01 d0                  	add eax, edx
0x804898e:   eb 03                  	jmp 0x8048993 <safe_add_func_int32_t_s_s+0x4c>
0x8048990:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048993:   5d                     	pop ebp
0x8048994:   c3                     	ret 
; function: safe_sub_func_int32_t_s_s at 0x8048995 -- 0x80489d1
0x8048995:   55                     	push ebp
0x8048996:   89 e5                  	mov ebp, esp
0x8048998:   e8 61 13 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804899d:   05 63 36 00 00         	add eax, 0x3663
0x80489a2:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489a5:   33 45 0c               	xor eax, dword ptr [ebp + 0xc]
0x80489a8:   89 c2                  	mov edx, eax
0x80489aa:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489ad:   33 45 0c               	xor eax, dword ptr [ebp + 0xc]
0x80489b0:   25 00 00 00 80         	and eax, 0x80000000
0x80489b5:   33 45 08               	xor eax, dword ptr [ebp + 8]
0x80489b8:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x80489bb:   33 45 0c               	xor eax, dword ptr [ebp + 0xc]
0x80489be:   21 d0                  	and eax, edx
0x80489c0:   85 c0                  	test eax, eax
0x80489c2:   78 08                  	js 0x80489cc <safe_sub_func_int32_t_s_s+0x37>
0x80489c4:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489c7:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x80489ca:   eb 03                  	jmp 0x80489cf <safe_sub_func_int32_t_s_s+0x3a>
0x80489cc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80489cf:   5d                     	pop ebp
0x80489d0:   c3                     	ret 
; function: safe_mul_func_int32_t_s_s at 0x80489d1 -- 0x8048a5a
0x80489d1:   55                     	push ebp
0x80489d2:   89 e5                  	mov ebp, esp
0x80489d4:   e8 25 13 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80489d9:   05 27 36 00 00         	add eax, 0x3627
0x80489de:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x80489e2:   7e 14                  	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489e4:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80489e8:   7e 0e                  	jle 0x80489f8 <safe_mul_func_int32_t_s_s+0x27>
0x80489ea:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x80489ef:   99                     	cdq 
0x80489f0:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x80489f3:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x80489f6:   7f 5d                  	jg 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x80489f8:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x80489fc:   7e 14                  	jle 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x80489fe:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a02:   7f 0e                  	jg 0x8048a12 <safe_mul_func_int32_t_s_s+0x41>
0x8048a04:   b8 00 00 00 80         	mov eax, 0x80000000
0x8048a09:   99                     	cdq 
0x8048a0a:   f7 7d 08               	idiv dword ptr [ebp + 8]
0x8048a0d:   39 45 0c               	cmp dword ptr [ebp + 0xc], eax
0x8048a10:   7c 43                  	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a12:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048a16:   7f 14                  	jg 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a18:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a1c:   7e 0e                  	jle 0x8048a2c <safe_mul_func_int32_t_s_s+0x5b>
0x8048a1e:   b8 00 00 00 80         	mov eax, 0x80000000
0x8048a23:   99                     	cdq 
0x8048a24:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x8048a27:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048a2a:   7c 29                  	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a2c:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048a30:   7f 1a                  	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a32:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a36:   7f 14                  	jg 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a38:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048a3c:   74 0e                  	je 0x8048a4c <safe_mul_func_int32_t_s_s+0x7b>
0x8048a3e:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x8048a43:   99                     	cdq 
0x8048a44:   f7 7d 08               	idiv dword ptr [ebp + 8]
0x8048a47:   39 45 0c               	cmp dword ptr [ebp + 0xc], eax
0x8048a4a:   7c 09                  	jl 0x8048a55 <safe_mul_func_int32_t_s_s+0x84>
0x8048a4c:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a4f:   0f af 45 0c            	imul eax, dword ptr [ebp + 0xc]
0x8048a53:   eb 03                  	jmp 0x8048a58 <safe_mul_func_int32_t_s_s+0x87>
0x8048a55:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a58:   5d                     	pop ebp
0x8048a59:   c3                     	ret 
; function: safe_mod_func_int32_t_s_s at 0x8048a5a -- 0x8048a8c
0x8048a5a:   55                     	push ebp
0x8048a5b:   89 e5                  	mov ebp, esp
0x8048a5d:   e8 9c 12 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048a62:   05 9e 35 00 00         	add eax, 0x359e
0x8048a67:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a6b:   74 1a                  	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a6d:   81 7d 08 00 00 00 80   	cmp dword ptr [ebp + 8], 0x80000000
0x8048a74:   75 06                  	jne 0x8048a7c <safe_mod_func_int32_t_s_s+0x22>
0x8048a76:   83 7d 0c ff            	cmp dword ptr [ebp + 0xc], -1
0x8048a7a:   74 0b                  	je 0x8048a87 <safe_mod_func_int32_t_s_s+0x2d>
0x8048a7c:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a7f:   99                     	cdq 
0x8048a80:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x8048a83:   89 d0                  	mov eax, edx
0x8048a85:   eb 03                  	jmp 0x8048a8a <safe_mod_func_int32_t_s_s+0x30>
0x8048a87:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048a8a:   5d                     	pop ebp
0x8048a8b:   c3                     	ret 
; function: safe_div_func_int32_t_s_s at 0x8048a8c -- 0x8048abc
0x8048a8c:   55                     	push ebp
0x8048a8d:   89 e5                  	mov ebp, esp
0x8048a8f:   e8 6a 12 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048a94:   05 6c 35 00 00         	add eax, 0x356c
0x8048a99:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048a9d:   74 18                  	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048a9f:   81 7d 08 00 00 00 80   	cmp dword ptr [ebp + 8], 0x80000000
0x8048aa6:   75 06                  	jne 0x8048aae <safe_div_func_int32_t_s_s+0x22>
0x8048aa8:   83 7d 0c ff            	cmp dword ptr [ebp + 0xc], -1
0x8048aac:   74 09                  	je 0x8048ab7 <safe_div_func_int32_t_s_s+0x2b>
0x8048aae:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048ab1:   99                     	cdq 
0x8048ab2:   f7 7d 0c               	idiv dword ptr [ebp + 0xc]
0x8048ab5:   eb 03                  	jmp 0x8048aba <safe_div_func_int32_t_s_s+0x2e>
0x8048ab7:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048aba:   5d                     	pop ebp
0x8048abb:   c3                     	ret 
; function: safe_lshift_func_int32_t_s_s at 0x8048abc -- 0x8048b01
0x8048abc:   55                     	push ebp
0x8048abd:   89 e5                  	mov ebp, esp
0x8048abf:   e8 3a 12 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048ac4:   05 3c 35 00 00         	add eax, 0x353c
0x8048ac9:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048acd:   78 2d                  	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048acf:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048ad3:   78 27                  	js 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048ad5:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ad9:   7f 21                  	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048adb:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048ade:   ba ff ff ff 7f         	mov edx, 0x7fffffff
0x8048ae3:   89 c1                  	mov ecx, eax
0x8048ae5:   d3 fa                  	sar edx, cl
0x8048ae7:   89 d0                  	mov eax, edx
0x8048ae9:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048aec:   7f 0e                  	jg 0x8048afc <safe_lshift_func_int32_t_s_s+0x40>
0x8048aee:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048af1:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048af4:   89 c1                  	mov ecx, eax
0x8048af6:   d3 e2                  	shl edx, cl
0x8048af8:   89 d0                  	mov eax, edx
0x8048afa:   eb 03                  	jmp 0x8048aff <safe_lshift_func_int32_t_s_s+0x43>
0x8048afc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048aff:   5d                     	pop ebp
0x8048b00:   c3                     	ret 
; function: safe_lshift_func_int32_t_s_u at 0x8048b01 -- 0x8048b40
0x8048b01:   55                     	push ebp
0x8048b02:   89 e5                  	mov ebp, esp
0x8048b04:   e8 f5 11 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048b09:   05 f7 34 00 00         	add eax, 0x34f7
0x8048b0e:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048b12:   78 27                  	js 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b14:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b18:   77 21                  	ja 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b1a:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b1d:   ba ff ff ff 7f         	mov edx, 0x7fffffff
0x8048b22:   89 c1                  	mov ecx, eax
0x8048b24:   d3 fa                  	sar edx, cl
0x8048b26:   89 d0                  	mov eax, edx
0x8048b28:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8048b2b:   7f 0e                  	jg 0x8048b3b <safe_lshift_func_int32_t_s_u+0x3a>
0x8048b2d:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b30:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048b33:   89 c1                  	mov ecx, eax
0x8048b35:   d3 e2                  	shl edx, cl
0x8048b37:   89 d0                  	mov eax, edx
0x8048b39:   eb 03                  	jmp 0x8048b3e <safe_lshift_func_int32_t_s_u+0x3d>
0x8048b3b:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048b3e:   5d                     	pop ebp
0x8048b3f:   c3                     	ret 
; function: safe_rshift_func_int32_t_s_s at 0x8048b40 -- 0x8048b72
0x8048b40:   55                     	push ebp
0x8048b41:   89 e5                  	mov ebp, esp
0x8048b43:   e8 b6 11 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048b48:   05 b8 34 00 00         	add eax, 0x34b8
0x8048b4d:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048b51:   78 1a                  	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b53:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048b57:   78 14                  	js 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b59:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b5d:   7f 0e                  	jg 0x8048b6d <safe_rshift_func_int32_t_s_s+0x2d>
0x8048b5f:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b62:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048b65:   89 c1                  	mov ecx, eax
0x8048b67:   d3 fa                  	sar edx, cl
0x8048b69:   89 d0                  	mov eax, edx
0x8048b6b:   eb 03                  	jmp 0x8048b70 <safe_rshift_func_int32_t_s_s+0x30>
0x8048b6d:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048b70:   5d                     	pop ebp
0x8048b71:   c3                     	ret 
; function: safe_rshift_func_int32_t_s_u at 0x8048b72 -- 0x8048b9e
0x8048b72:   55                     	push ebp
0x8048b73:   89 e5                  	mov ebp, esp
0x8048b75:   e8 84 11 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048b7a:   05 86 34 00 00         	add eax, 0x3486
0x8048b7f:   83 7d 08 00            	cmp dword ptr [ebp + 8], 0
0x8048b83:   78 14                  	js 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b85:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048b89:   77 0e                  	ja 0x8048b99 <safe_rshift_func_int32_t_s_u+0x27>
0x8048b8b:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048b8e:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048b91:   89 c1                  	mov ecx, eax
0x8048b93:   d3 fa                  	sar edx, cl
0x8048b95:   89 d0                  	mov eax, edx
0x8048b97:   eb 03                  	jmp 0x8048b9c <safe_rshift_func_int32_t_s_u+0x2a>
0x8048b99:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048b9c:   5d                     	pop ebp
0x8048b9d:   c3                     	ret 
; function: safe_unary_minus_func_uint8_t_u at 0x8048b9e -- 0x8048bbc
0x8048b9e:   55                     	push ebp
0x8048b9f:   89 e5                  	mov ebp, esp
0x8048ba1:   83 ec 04               	sub esp, 4
0x8048ba4:   e8 55 11 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048ba9:   05 57 34 00 00         	add eax, 0x3457
0x8048bae:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048bb1:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048bb4:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048bb8:   f7 d8                  	neg eax
0x8048bba:   c9                     	leave 
0x8048bbb:   c3                     	ret 
; function: safe_add_func_uint8_t_u_u at 0x8048bbc -- 0x8048be4
0x8048bbc:   55                     	push ebp
0x8048bbd:   89 e5                  	mov ebp, esp
0x8048bbf:   83 ec 08               	sub esp, 8
0x8048bc2:   e8 37 11 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048bc7:   05 39 34 00 00         	add eax, 0x3439
0x8048bcc:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048bcf:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048bd2:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048bd5:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048bd8:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x8048bdc:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048be0:   01 d0                  	add eax, edx
0x8048be2:   c9                     	leave 
0x8048be3:   c3                     	ret 
; function: safe_sub_func_uint8_t_u_u at 0x8048be4 -- 0x8048c09
0x8048be4:   55                     	push ebp
0x8048be5:   89 e5                  	mov ebp, esp
0x8048be7:   83 ec 08               	sub esp, 8
0x8048bea:   e8 0f 11 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048bef:   05 11 34 00 00         	add eax, 0x3411
0x8048bf4:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048bf7:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048bfa:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048bfd:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c00:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c04:   2a 45 f8               	sub al, byte ptr [ebp - 8]
0x8048c07:   c9                     	leave 
0x8048c08:   c3                     	ret 
; function: safe_mul_func_uint8_t_u_u at 0x8048c09 -- 0x8048c2e
0x8048c09:   55                     	push ebp
0x8048c0a:   89 e5                  	mov ebp, esp
0x8048c0c:   83 ec 08               	sub esp, 8
0x8048c0f:   e8 ea 10 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048c14:   05 ec 33 00 00         	add eax, 0x33ec
0x8048c19:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048c1c:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048c1f:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048c22:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c25:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c29:   f6 65 f8               	mul byte ptr [ebp - 8]
0x8048c2c:   c9                     	leave 
0x8048c2d:   c3                     	ret 
; function: safe_mod_func_uint8_t_u_u at 0x8048c2e -- 0x8048c65
0x8048c2e:   55                     	push ebp
0x8048c2f:   89 e5                  	mov ebp, esp
0x8048c31:   83 ec 08               	sub esp, 8
0x8048c34:   e8 c5 10 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048c39:   05 c7 33 00 00         	add eax, 0x33c7
0x8048c3e:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048c41:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048c44:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048c47:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c4a:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048c4e:   74 0f                  	je 0x8048c5f <safe_mod_func_uint8_t_u_u+0x31>
0x8048c50:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c54:   0f b6 c0               	movzx eax, al
0x8048c57:   f6 75 f8               	div byte ptr [ebp - 8]
0x8048c5a:   0f b6 c4               	movzx eax, ah
0x8048c5d:   eb 04                  	jmp 0x8048c63 <safe_mod_func_uint8_t_u_u+0x35>
0x8048c5f:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c63:   c9                     	leave 
0x8048c64:   c3                     	ret 
; function: safe_div_func_uint8_t_u_u at 0x8048c65 -- 0x8048c99
0x8048c65:   55                     	push ebp
0x8048c66:   89 e5                  	mov ebp, esp
0x8048c68:   83 ec 08               	sub esp, 8
0x8048c6b:   e8 8e 10 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048c70:   05 90 33 00 00         	add eax, 0x3390
0x8048c75:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048c78:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048c7b:   88 55 fc               	mov byte ptr [ebp - 4], dl
0x8048c7e:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048c81:   80 7d f8 00            	cmp byte ptr [ebp - 8], 0
0x8048c85:   74 0c                  	je 0x8048c93 <safe_div_func_uint8_t_u_u+0x2e>
0x8048c87:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c8b:   0f b6 c0               	movzx eax, al
0x8048c8e:   f6 75 f8               	div byte ptr [ebp - 8]
0x8048c91:   eb 04                  	jmp 0x8048c97 <safe_div_func_uint8_t_u_u+0x32>
0x8048c93:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048c97:   c9                     	leave 
0x8048c98:   c3                     	ret 
; function: safe_lshift_func_uint8_t_u_s at 0x8048c99 -- 0x8048ceb
0x8048c99:   55                     	push ebp
0x8048c9a:   89 e5                  	mov ebp, esp
0x8048c9c:   53                     	push ebx
0x8048c9d:   83 ec 04               	sub esp, 4
0x8048ca0:   e8 59 10 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048ca5:   05 5b 33 00 00         	add eax, 0x335b
0x8048caa:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048cad:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048cb0:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048cb4:   78 2b                  	js 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cb6:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048cba:   7f 25                  	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cbc:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048cc0:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048cc3:   bb ff 00 00 00         	mov ebx, 0xff
0x8048cc8:   89 c1                  	mov ecx, eax
0x8048cca:   d3 fb                  	sar ebx, cl
0x8048ccc:   89 d8                  	mov eax, ebx
0x8048cce:   39 c2                  	cmp edx, eax
0x8048cd0:   7f 0f                  	jg 0x8048ce1 <safe_lshift_func_uint8_t_u_s+0x48>
0x8048cd2:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048cd6:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048cd9:   89 c1                  	mov ecx, eax
0x8048cdb:   d3 e2                  	shl edx, cl
0x8048cdd:   89 d0                  	mov eax, edx
0x8048cdf:   eb 04                  	jmp 0x8048ce5 <safe_lshift_func_uint8_t_u_s+0x4c>
0x8048ce1:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048ce5:   83 c4 04               	add esp, 4
0x8048ce8:   5b                     	pop ebx
0x8048ce9:   5d                     	pop ebp
0x8048cea:   c3                     	ret 
; function: safe_lshift_func_uint8_t_u_u at 0x8048ceb -- 0x8048d37
0x8048ceb:   55                     	push ebp
0x8048cec:   89 e5                  	mov ebp, esp
0x8048cee:   53                     	push ebx
0x8048cef:   83 ec 04               	sub esp, 4
0x8048cf2:   e8 07 10 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048cf7:   05 09 33 00 00         	add eax, 0x3309
0x8048cfc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048cff:   88 45 f8               	mov byte ptr [ebp - 8], al
0x8048d02:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d06:   77 25                  	ja 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d08:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048d0c:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d0f:   bb ff 00 00 00         	mov ebx, 0xff
0x8048d14:   89 c1                  	mov ecx, eax
0x8048d16:   d3 fb                  	sar ebx, cl
0x8048d18:   89 d8                  	mov eax, ebx
0x8048d1a:   39 c2                  	cmp edx, eax
0x8048d1c:   7f 0f                  	jg 0x8048d2d <safe_lshift_func_uint8_t_u_u+0x42>
0x8048d1e:   0f b6 55 f8            	movzx edx, byte ptr [ebp - 8]
0x8048d22:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d25:   89 c1                  	mov ecx, eax
0x8048d27:   d3 e2                  	shl edx, cl
0x8048d29:   89 d0                  	mov eax, edx
0x8048d2b:   eb 04                  	jmp 0x8048d31 <safe_lshift_func_uint8_t_u_u+0x46>
0x8048d2d:   0f b6 45 f8            	movzx eax, byte ptr [ebp - 8]
0x8048d31:   83 c4 04               	add esp, 4
0x8048d34:   5b                     	pop ebx
0x8048d35:   5d                     	pop ebp
0x8048d36:   c3                     	ret 
; function: safe_rshift_func_uint8_t_u_s at 0x8048d37 -- 0x8048d6e
0x8048d37:   55                     	push ebp
0x8048d38:   89 e5                  	mov ebp, esp
0x8048d3a:   83 ec 04               	sub esp, 4
0x8048d3d:   e8 bc 0f 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048d42:   05 be 32 00 00         	add eax, 0x32be
0x8048d47:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048d4a:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048d4d:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048d51:   78 15                  	js 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d53:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d57:   7f 0f                  	jg 0x8048d68 <safe_rshift_func_uint8_t_u_s+0x31>
0x8048d59:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x8048d5d:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d60:   89 c1                  	mov ecx, eax
0x8048d62:   d3 fa                  	sar edx, cl
0x8048d64:   89 d0                  	mov eax, edx
0x8048d66:   eb 04                  	jmp 0x8048d6c <safe_rshift_func_uint8_t_u_s+0x35>
0x8048d68:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048d6c:   c9                     	leave 
0x8048d6d:   c3                     	ret 
; function: safe_rshift_func_uint8_t_u_u at 0x8048d6e -- 0x8048d9f
0x8048d6e:   55                     	push ebp
0x8048d6f:   89 e5                  	mov ebp, esp
0x8048d71:   83 ec 04               	sub esp, 4
0x8048d74:   e8 85 0f 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048d79:   05 87 32 00 00         	add eax, 0x3287
0x8048d7e:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048d81:   88 45 fc               	mov byte ptr [ebp - 4], al
0x8048d84:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048d88:   77 0f                  	ja 0x8048d99 <safe_rshift_func_uint8_t_u_u+0x2b>
0x8048d8a:   0f b6 55 fc            	movzx edx, byte ptr [ebp - 4]
0x8048d8e:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048d91:   89 c1                  	mov ecx, eax
0x8048d93:   d3 fa                  	sar edx, cl
0x8048d95:   89 d0                  	mov eax, edx
0x8048d97:   eb 04                  	jmp 0x8048d9d <safe_rshift_func_uint8_t_u_u+0x2f>
0x8048d99:   0f b6 45 fc            	movzx eax, byte ptr [ebp - 4]
0x8048d9d:   c9                     	leave 
0x8048d9e:   c3                     	ret 
; function: safe_unary_minus_func_uint16_t_u at 0x8048d9f -- 0x8048dbe
0x8048d9f:   55                     	push ebp
0x8048da0:   89 e5                  	mov ebp, esp
0x8048da2:   83 ec 04               	sub esp, 4
0x8048da5:   e8 54 0f 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048daa:   05 56 32 00 00         	add eax, 0x3256
0x8048daf:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048db2:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048db6:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048dba:   f7 d8                  	neg eax
0x8048dbc:   c9                     	leave 
0x8048dbd:   c3                     	ret 
; function: safe_add_func_uint16_t_u_u at 0x8048dbe -- 0x8048de8
0x8048dbe:   55                     	push ebp
0x8048dbf:   89 e5                  	mov ebp, esp
0x8048dc1:   83 ec 08               	sub esp, 8
0x8048dc4:   e8 35 0f 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048dc9:   05 37 32 00 00         	add eax, 0x3237
0x8048dce:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048dd1:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048dd4:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048dd8:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048ddc:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048de0:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048de4:   01 d0                  	add eax, edx
0x8048de6:   c9                     	leave 
0x8048de7:   c3                     	ret 
; function: safe_sub_func_uint16_t_u_u at 0x8048de8 -- 0x8048e10
0x8048de8:   55                     	push ebp
0x8048de9:   89 e5                  	mov ebp, esp
0x8048deb:   83 ec 08               	sub esp, 8
0x8048dee:   e8 0b 0f 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048df3:   05 0d 32 00 00         	add eax, 0x320d
0x8048df8:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048dfb:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048dfe:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e02:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e06:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e0a:   66 2b 45 f8            	sub ax, word ptr [ebp - 8]
0x8048e0e:   c9                     	leave 
0x8048e0f:   c3                     	ret 
; function: safe_mul_func_uint16_t_u_u at 0x8048e10 -- 0x8048e39
0x8048e10:   55                     	push ebp
0x8048e11:   89 e5                  	mov ebp, esp
0x8048e13:   83 ec 08               	sub esp, 8
0x8048e16:   e8 e3 0e 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048e1b:   05 e5 31 00 00         	add eax, 0x31e5
0x8048e20:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048e23:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048e26:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e2a:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e2e:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e32:   66 0f af 45 f8         	imul ax, word ptr [ebp - 8]
0x8048e37:   c9                     	leave 
0x8048e38:   c3                     	ret 
; function: safe_mod_func_uint16_t_u_u at 0x8048e39 -- 0x8048e75
0x8048e39:   55                     	push ebp
0x8048e3a:   89 e5                  	mov ebp, esp
0x8048e3c:   83 ec 08               	sub esp, 8
0x8048e3f:   e8 ba 0e 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048e44:   05 bc 31 00 00         	add eax, 0x31bc
0x8048e49:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048e4c:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048e4f:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e53:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e57:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048e5c:   74 11                  	je 0x8048e6f <safe_mod_func_uint16_t_u_u+0x36>
0x8048e5e:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e62:   ba 00 00 00 00         	mov edx, 0
0x8048e67:   66 f7 75 f8            	div word ptr [ebp - 8]
0x8048e6b:   89 d0                  	mov eax, edx
0x8048e6d:   eb 04                  	jmp 0x8048e73 <safe_mod_func_uint16_t_u_u+0x3a>
0x8048e6f:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e73:   c9                     	leave 
0x8048e74:   c3                     	ret 
; function: safe_div_func_uint16_t_u_u at 0x8048e75 -- 0x8048eaf
0x8048e75:   55                     	push ebp
0x8048e76:   89 e5                  	mov ebp, esp
0x8048e78:   83 ec 08               	sub esp, 8
0x8048e7b:   e8 7e 0e 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048e80:   05 80 31 00 00         	add eax, 0x3180
0x8048e85:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048e88:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048e8b:   66 89 55 fc            	mov word ptr [ebp - 4], dx
0x8048e8f:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048e93:   66 83 7d f8 00         	cmp word ptr [ebp - 8], 0
0x8048e98:   74 0f                  	je 0x8048ea9 <safe_div_func_uint16_t_u_u+0x34>
0x8048e9a:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048e9e:   ba 00 00 00 00         	mov edx, 0
0x8048ea3:   66 f7 75 f8            	div word ptr [ebp - 8]
0x8048ea7:   eb 04                  	jmp 0x8048ead <safe_div_func_uint16_t_u_u+0x38>
0x8048ea9:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048ead:   c9                     	leave 
0x8048eae:   c3                     	ret 
; function: safe_lshift_func_uint16_t_u_s at 0x8048eaf -- 0x8048f02
0x8048eaf:   55                     	push ebp
0x8048eb0:   89 e5                  	mov ebp, esp
0x8048eb2:   53                     	push ebx
0x8048eb3:   83 ec 04               	sub esp, 4
0x8048eb6:   e8 43 0e 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048ebb:   05 45 31 00 00         	add eax, 0x3145
0x8048ec0:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048ec3:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048ec7:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048ecb:   78 2b                  	js 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ecd:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048ed1:   7f 25                  	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ed3:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048ed7:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048eda:   bb ff ff 00 00         	mov ebx, 0xffff
0x8048edf:   89 c1                  	mov ecx, eax
0x8048ee1:   d3 fb                  	sar ebx, cl
0x8048ee3:   89 d8                  	mov eax, ebx
0x8048ee5:   39 c2                  	cmp edx, eax
0x8048ee7:   7f 0f                  	jg 0x8048ef8 <safe_lshift_func_uint16_t_u_s+0x49>
0x8048ee9:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048eed:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048ef0:   89 c1                  	mov ecx, eax
0x8048ef2:   d3 e2                  	shl edx, cl
0x8048ef4:   89 d0                  	mov eax, edx
0x8048ef6:   eb 04                  	jmp 0x8048efc <safe_lshift_func_uint16_t_u_s+0x4d>
0x8048ef8:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048efc:   83 c4 04               	add esp, 4
0x8048eff:   5b                     	pop ebx
0x8048f00:   5d                     	pop ebp
0x8048f01:   c3                     	ret 
; function: safe_lshift_func_uint16_t_u_u at 0x8048f02 -- 0x8048f4f
0x8048f02:   55                     	push ebp
0x8048f03:   89 e5                  	mov ebp, esp
0x8048f05:   53                     	push ebx
0x8048f06:   83 ec 04               	sub esp, 4
0x8048f09:   e8 f0 0d 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048f0e:   05 f2 30 00 00         	add eax, 0x30f2
0x8048f13:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048f16:   66 89 45 f8            	mov word ptr [ebp - 8], ax
0x8048f1a:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f1e:   77 25                  	ja 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f20:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048f24:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048f27:   bb ff ff 00 00         	mov ebx, 0xffff
0x8048f2c:   89 c1                  	mov ecx, eax
0x8048f2e:   d3 fb                  	sar ebx, cl
0x8048f30:   89 d8                  	mov eax, ebx
0x8048f32:   39 c2                  	cmp edx, eax
0x8048f34:   7f 0f                  	jg 0x8048f45 <safe_lshift_func_uint16_t_u_u+0x43>
0x8048f36:   0f b7 55 f8            	movzx edx, word ptr [ebp - 8]
0x8048f3a:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048f3d:   89 c1                  	mov ecx, eax
0x8048f3f:   d3 e2                  	shl edx, cl
0x8048f41:   89 d0                  	mov eax, edx
0x8048f43:   eb 04                  	jmp 0x8048f49 <safe_lshift_func_uint16_t_u_u+0x47>
0x8048f45:   0f b7 45 f8            	movzx eax, word ptr [ebp - 8]
0x8048f49:   83 c4 04               	add esp, 4
0x8048f4c:   5b                     	pop ebx
0x8048f4d:   5d                     	pop ebp
0x8048f4e:   c3                     	ret 
; function: safe_rshift_func_uint16_t_u_s at 0x8048f4f -- 0x8048f87
0x8048f4f:   55                     	push ebp
0x8048f50:   89 e5                  	mov ebp, esp
0x8048f52:   83 ec 04               	sub esp, 4
0x8048f55:   e8 a4 0d 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048f5a:   05 a6 30 00 00         	add eax, 0x30a6
0x8048f5f:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048f62:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048f66:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8048f6a:   78 15                  	js 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f6c:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048f70:   7f 0f                  	jg 0x8048f81 <safe_rshift_func_uint16_t_u_s+0x32>
0x8048f72:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048f76:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048f79:   89 c1                  	mov ecx, eax
0x8048f7b:   d3 fa                  	sar edx, cl
0x8048f7d:   89 d0                  	mov eax, edx
0x8048f7f:   eb 04                  	jmp 0x8048f85 <safe_rshift_func_uint16_t_u_s+0x36>
0x8048f81:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048f85:   c9                     	leave 
0x8048f86:   c3                     	ret 
; function: safe_rshift_func_uint16_t_u_u at 0x8048f87 -- 0x8048fb9
0x8048f87:   55                     	push ebp
0x8048f88:   89 e5                  	mov ebp, esp
0x8048f8a:   83 ec 04               	sub esp, 4
0x8048f8d:   e8 6c 0d 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048f92:   05 6e 30 00 00         	add eax, 0x306e
0x8048f97:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048f9a:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8048f9e:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8048fa2:   77 0f                  	ja 0x8048fb3 <safe_rshift_func_uint16_t_u_u+0x2c>
0x8048fa4:   0f b7 55 fc            	movzx edx, word ptr [ebp - 4]
0x8048fa8:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048fab:   89 c1                  	mov ecx, eax
0x8048fad:   d3 fa                  	sar edx, cl
0x8048faf:   89 d0                  	mov eax, edx
0x8048fb1:   eb 04                  	jmp 0x8048fb7 <safe_rshift_func_uint16_t_u_u+0x30>
0x8048fb3:   0f b7 45 fc            	movzx eax, word ptr [ebp - 4]
0x8048fb7:   c9                     	leave 
0x8048fb8:   c3                     	ret 
; function: safe_unary_minus_func_uint32_t_u at 0x8048fb9 -- 0x8048fcd
0x8048fb9:   55                     	push ebp
0x8048fba:   89 e5                  	mov ebp, esp
0x8048fbc:   e8 3d 0d 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048fc1:   05 3f 30 00 00         	add eax, 0x303f
0x8048fc6:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048fc9:   f7 d8                  	neg eax
0x8048fcb:   5d                     	pop ebp
0x8048fcc:   c3                     	ret 
; function: safe_add_func_uint32_t_u_u at 0x8048fcd -- 0x8048fe4
0x8048fcd:   55                     	push ebp
0x8048fce:   89 e5                  	mov ebp, esp
0x8048fd0:   e8 29 0d 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048fd5:   05 2b 30 00 00         	add eax, 0x302b
0x8048fda:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8048fdd:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8048fe0:   01 d0                  	add eax, edx
0x8048fe2:   5d                     	pop ebp
0x8048fe3:   c3                     	ret 
; function: safe_sub_func_uint32_t_u_u at 0x8048fe4 -- 0x8048ff9
0x8048fe4:   55                     	push ebp
0x8048fe5:   89 e5                  	mov ebp, esp
0x8048fe7:   e8 12 0d 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8048fec:   05 14 30 00 00         	add eax, 0x3014
0x8048ff1:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8048ff4:   2b 45 0c               	sub eax, dword ptr [ebp + 0xc]
0x8048ff7:   5d                     	pop ebp
0x8048ff8:   c3                     	ret 
; function: safe_mul_func_uint32_t_u_u at 0x8048ff9 -- 0x804900f
0x8048ff9:   55                     	push ebp
0x8048ffa:   89 e5                  	mov ebp, esp
0x8048ffc:   e8 fd 0c 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049001:   05 ff 2f 00 00         	add eax, 0x2fff
0x8049006:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049009:   0f af 45 0c            	imul eax, dword ptr [ebp + 0xc]
0x804900d:   5d                     	pop ebp
0x804900e:   c3                     	ret 
; function: safe_mod_func_uint32_t_u_u at 0x804900f -- 0x8049036
0x804900f:   55                     	push ebp
0x8049010:   89 e5                  	mov ebp, esp
0x8049012:   e8 e7 0c 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049017:   05 e9 2f 00 00         	add eax, 0x2fe9
0x804901c:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8049020:   74 0f                  	je 0x8049031 <safe_mod_func_uint32_t_u_u+0x22>
0x8049022:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049025:   ba 00 00 00 00         	mov edx, 0
0x804902a:   f7 75 0c               	div dword ptr [ebp + 0xc]
0x804902d:   89 d0                  	mov eax, edx
0x804902f:   eb 03                  	jmp 0x8049034 <safe_mod_func_uint32_t_u_u+0x25>
0x8049031:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049034:   5d                     	pop ebp
0x8049035:   c3                     	ret 
; function: safe_div_func_uint32_t_u_u at 0x8049036 -- 0x804905b
0x8049036:   55                     	push ebp
0x8049037:   89 e5                  	mov ebp, esp
0x8049039:   e8 c0 0c 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804903e:   05 c2 2f 00 00         	add eax, 0x2fc2
0x8049043:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x8049047:   74 0d                  	je 0x8049056 <safe_div_func_uint32_t_u_u+0x20>
0x8049049:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x804904c:   ba 00 00 00 00         	mov edx, 0
0x8049051:   f7 75 0c               	div dword ptr [ebp + 0xc]
0x8049054:   eb 03                  	jmp 0x8049059 <safe_div_func_uint32_t_u_u+0x23>
0x8049056:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049059:   5d                     	pop ebp
0x804905a:   c3                     	ret 
; function: safe_lshift_func_uint32_t_u_s at 0x804905b -- 0x804909a
0x804905b:   55                     	push ebp
0x804905c:   89 e5                  	mov ebp, esp
0x804905e:   e8 9b 0c 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049063:   05 9d 2f 00 00         	add eax, 0x2f9d
0x8049068:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x804906c:   78 27                  	js 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x804906e:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8049072:   7f 21                  	jg 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049074:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8049077:   ba ff ff ff ff         	mov edx, 0xffffffff
0x804907c:   89 c1                  	mov ecx, eax
0x804907e:   d3 ea                  	shr edx, cl
0x8049080:   89 d0                  	mov eax, edx
0x8049082:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x8049085:   77 0e                  	ja 0x8049095 <safe_lshift_func_uint32_t_u_s+0x3a>
0x8049087:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x804908a:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804908d:   89 c1                  	mov ecx, eax
0x804908f:   d3 e2                  	shl edx, cl
0x8049091:   89 d0                  	mov eax, edx
0x8049093:   eb 03                  	jmp 0x8049098 <safe_lshift_func_uint32_t_u_s+0x3d>
0x8049095:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049098:   5d                     	pop ebp
0x8049099:   c3                     	ret 
; function: safe_lshift_func_uint32_t_u_u at 0x804909a -- 0x80490d3
0x804909a:   55                     	push ebp
0x804909b:   89 e5                  	mov ebp, esp
0x804909d:   e8 5c 0c 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80490a2:   05 5e 2f 00 00         	add eax, 0x2f5e
0x80490a7:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ab:   77 21                  	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490ad:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80490b0:   ba ff ff ff ff         	mov edx, 0xffffffff
0x80490b5:   89 c1                  	mov ecx, eax
0x80490b7:   d3 ea                  	shr edx, cl
0x80490b9:   89 d0                  	mov eax, edx
0x80490bb:   39 45 08               	cmp dword ptr [ebp + 8], eax
0x80490be:   77 0e                  	ja 0x80490ce <safe_lshift_func_uint32_t_u_u+0x34>
0x80490c0:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80490c3:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80490c6:   89 c1                  	mov ecx, eax
0x80490c8:   d3 e2                  	shl edx, cl
0x80490ca:   89 d0                  	mov eax, edx
0x80490cc:   eb 03                  	jmp 0x80490d1 <safe_lshift_func_uint32_t_u_u+0x37>
0x80490ce:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80490d1:   5d                     	pop ebp
0x80490d2:   c3                     	ret 
; function: safe_rshift_func_uint32_t_u_s at 0x80490d3 -- 0x80490ff
0x80490d3:   55                     	push ebp
0x80490d4:   89 e5                  	mov ebp, esp
0x80490d6:   e8 23 0c 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80490db:   05 25 2f 00 00         	add eax, 0x2f25
0x80490e0:   83 7d 0c 00            	cmp dword ptr [ebp + 0xc], 0
0x80490e4:   78 14                  	js 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490e6:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x80490ea:   7f 0e                  	jg 0x80490fa <safe_rshift_func_uint32_t_u_s+0x27>
0x80490ec:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x80490ef:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80490f2:   89 c1                  	mov ecx, eax
0x80490f4:   d3 ea                  	shr edx, cl
0x80490f6:   89 d0                  	mov eax, edx
0x80490f8:   eb 03                  	jmp 0x80490fd <safe_rshift_func_uint32_t_u_s+0x2a>
0x80490fa:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80490fd:   5d                     	pop ebp
0x80490fe:   c3                     	ret 
; function: safe_rshift_func_uint32_t_u_u at 0x80490ff -- 0x8049125
0x80490ff:   55                     	push ebp
0x8049100:   89 e5                  	mov ebp, esp
0x8049102:   e8 f7 0b 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049107:   05 f9 2e 00 00         	add eax, 0x2ef9
0x804910c:   83 7d 0c 1f            	cmp dword ptr [ebp + 0xc], 0x1f
0x8049110:   77 0e                  	ja 0x8049120 <safe_rshift_func_uint32_t_u_u+0x21>
0x8049112:   8b 45 0c               	mov eax, dword ptr [ebp + 0xc]
0x8049115:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8049118:   89 c1                  	mov ecx, eax
0x804911a:   d3 ea                  	shr edx, cl
0x804911c:   89 d0                  	mov eax, edx
0x804911e:   eb 03                  	jmp 0x8049123 <safe_rshift_func_uint32_t_u_u+0x24>
0x8049120:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049123:   5d                     	pop ebp
0x8049124:   c3                     	ret 
; function: safe_add_func_float_f_f at 0x8049125 -- 0x8049167
0x8049125:   55                     	push ebp
0x8049126:   89 e5                  	mov ebp, esp
0x8049128:   e8 d1 0b 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804912d:   05 d3 2e 00 00         	add eax, 0x2ed3
0x8049132:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049135:   d9 80 30 de ff ff      	fld dword ptr [eax - 0x21d0]
0x804913b:   de c9                  	fmulp st(1)
0x804913d:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049140:   d9 80 30 de ff ff      	fld dword ptr [eax - 0x21d0]
0x8049146:   de c9                  	fmulp st(1)
0x8049148:   de c1                  	faddp st(1)
0x804914a:   d9 e1                  	fabs 
0x804914c:   d9 80 34 de ff ff      	fld dword ptr [eax - 0x21cc]
0x8049152:   d9 c9                  	fxch st(1)
0x8049154:   df e9                  	fucomip st(1)
0x8049156:   dd d8                  	fstp st(0)
0x8049158:   76 05                  	jbe 0x804915f <safe_add_func_float_f_f+0x3a>
0x804915a:   d9 45 08               	fld dword ptr [ebp + 8]
0x804915d:   eb 06                  	jmp 0x8049165 <safe_add_func_float_f_f+0x40>
0x804915f:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049162:   d8 45 0c               	fadd dword ptr [ebp + 0xc]
0x8049165:   5d                     	pop ebp
0x8049166:   c3                     	ret 
; function: safe_sub_func_float_f_f at 0x8049167 -- 0x80491a9
0x8049167:   55                     	push ebp
0x8049168:   89 e5                  	mov ebp, esp
0x804916a:   e8 8f 0b 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804916f:   05 91 2e 00 00         	add eax, 0x2e91
0x8049174:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049177:   d9 80 30 de ff ff      	fld dword ptr [eax - 0x21d0]
0x804917d:   de c9                  	fmulp st(1)
0x804917f:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049182:   d9 80 30 de ff ff      	fld dword ptr [eax - 0x21d0]
0x8049188:   de c9                  	fmulp st(1)
0x804918a:   de e9                  	fsubp st(1)
0x804918c:   d9 e1                  	fabs 
0x804918e:   d9 80 34 de ff ff      	fld dword ptr [eax - 0x21cc]
0x8049194:   d9 c9                  	fxch st(1)
0x8049196:   df e9                  	fucomip st(1)
0x8049198:   dd d8                  	fstp st(0)
0x804919a:   76 05                  	jbe 0x80491a1 <safe_sub_func_float_f_f+0x3a>
0x804919c:   d9 45 08               	fld dword ptr [ebp + 8]
0x804919f:   eb 06                  	jmp 0x80491a7 <safe_sub_func_float_f_f+0x40>
0x80491a1:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491a4:   d8 65 0c               	fsub dword ptr [ebp + 0xc]
0x80491a7:   5d                     	pop ebp
0x80491a8:   c3                     	ret 
; function: safe_mul_func_float_f_f at 0x80491a9 -- 0x80491eb
0x80491a9:   55                     	push ebp
0x80491aa:   89 e5                  	mov ebp, esp
0x80491ac:   e8 4d 0b 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80491b1:   05 4f 2e 00 00         	add eax, 0x2e4f
0x80491b6:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491b9:   d9 80 38 de ff ff      	fld dword ptr [eax - 0x21c8]
0x80491bf:   de c9                  	fmulp st(1)
0x80491c1:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x80491c4:   d9 80 3c de ff ff      	fld dword ptr [eax - 0x21c4]
0x80491ca:   de c9                  	fmulp st(1)
0x80491cc:   de c9                  	fmulp st(1)
0x80491ce:   d9 e1                  	fabs 
0x80491d0:   d9 80 40 de ff ff      	fld dword ptr [eax - 0x21c0]
0x80491d6:   d9 c9                  	fxch st(1)
0x80491d8:   df e9                  	fucomip st(1)
0x80491da:   dd d8                  	fstp st(0)
0x80491dc:   76 05                  	jbe 0x80491e3 <safe_mul_func_float_f_f+0x3a>
0x80491de:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491e1:   eb 06                  	jmp 0x80491e9 <safe_mul_func_float_f_f+0x40>
0x80491e3:   d9 45 08               	fld dword ptr [ebp + 8]
0x80491e6:   d8 4d 0c               	fmul dword ptr [ebp + 0xc]
0x80491e9:   5d                     	pop ebp
0x80491ea:   c3                     	ret 
; function: safe_div_func_float_f_f at 0x80491eb -- 0x8049260
0x80491eb:   55                     	push ebp
0x80491ec:   89 e5                  	mov ebp, esp
0x80491ee:   e8 0b 0b 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80491f3:   05 0d 2e 00 00         	add eax, 0x2e0d
0x80491f8:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x80491fb:   d9 e1                  	fabs 
0x80491fd:   d9 e8                  	fld1 
0x80491ff:   df e9                  	fucomip st(1)
0x8049201:   dd d8                  	fstp st(0)
0x8049203:   0f 97 c2               	seta dl
0x8049206:   83 f2 01               	xor edx, 1
0x8049209:   84 d2                  	test dl, dl
0x804920b:   75 46                  	jne 0x8049253 <safe_div_func_float_f_f+0x68>
0x804920d:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049210:   d9 ee                  	fldz 
0x8049212:   df e9                  	fucomip st(1)
0x8049214:   dd d8                  	fstp st(0)
0x8049216:   7a 0b                  	jp 0x8049223 <safe_div_func_float_f_f+0x38>
0x8049218:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x804921b:   d9 ee                  	fldz 
0x804921d:   df e9                  	fucomip st(1)
0x804921f:   dd d8                  	fstp st(0)
0x8049221:   74 38                  	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049223:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049226:   d9 80 44 de ff ff      	fld dword ptr [eax - 0x21bc]
0x804922c:   de c9                  	fmulp st(1)
0x804922e:   d9 45 0c               	fld dword ptr [ebp + 0xc]
0x8049231:   d9 80 48 de ff ff      	fld dword ptr [eax - 0x21b8]
0x8049237:   de c9                  	fmulp st(1)
0x8049239:   de f9                  	fdivp st(1)
0x804923b:   d9 e1                  	fabs 
0x804923d:   d9 80 4c de ff ff      	fld dword ptr [eax - 0x21b4]
0x8049243:   d9 c9                  	fxch st(1)
0x8049245:   df e9                  	fucomip st(1)
0x8049247:   dd d8                  	fstp st(0)
0x8049249:   0f 97 c0               	seta al
0x804924c:   83 f0 01               	xor eax, 1
0x804924f:   84 c0                  	test al, al
0x8049251:   74 08                  	je 0x804925b <safe_div_func_float_f_f+0x70>
0x8049253:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049256:   d8 75 0c               	fdiv dword ptr [ebp + 0xc]
0x8049259:   eb 03                  	jmp 0x804925e <safe_div_func_float_f_f+0x73>
0x804925b:   d9 45 08               	fld dword ptr [ebp + 8]
0x804925e:   5d                     	pop ebp
0x804925f:   c3                     	ret 
; function: safe_add_func_double_f_f at 0x8049260 -- 0x80492bd
0x8049260:   55                     	push ebp
0x8049261:   89 e5                  	mov ebp, esp
0x8049263:   83 ec 10               	sub esp, 0x10
0x8049266:   e8 93 0a 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804926b:   05 95 2d 00 00         	add eax, 0x2d95
0x8049270:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8049273:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x8049276:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x8049279:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x804927c:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x804927f:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x8049282:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x8049285:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x8049288:   dd 45 f8               	fld qword ptr [ebp - 8]
0x804928b:   dd 80 50 de ff ff      	fld qword ptr [eax - 0x21b0]
0x8049291:   de c9                  	fmulp st(1)
0x8049293:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x8049296:   dd 80 50 de ff ff      	fld qword ptr [eax - 0x21b0]
0x804929c:   de c9                  	fmulp st(1)
0x804929e:   de c1                  	faddp st(1)
0x80492a0:   d9 e1                  	fabs 
0x80492a2:   dd 80 58 de ff ff      	fld qword ptr [eax - 0x21a8]
0x80492a8:   d9 c9                  	fxch st(1)
0x80492aa:   df e9                  	fucomip st(1)
0x80492ac:   dd d8                  	fstp st(0)
0x80492ae:   76 05                  	jbe 0x80492b5 <safe_add_func_double_f_f+0x55>
0x80492b0:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80492b3:   eb 06                  	jmp 0x80492bb <safe_add_func_double_f_f+0x5b>
0x80492b5:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80492b8:   dc 45 f0               	fadd qword ptr [ebp - 0x10]
0x80492bb:   c9                     	leave 
0x80492bc:   c3                     	ret 
; function: safe_sub_func_double_f_f at 0x80492bd -- 0x804931a
0x80492bd:   55                     	push ebp
0x80492be:   89 e5                  	mov ebp, esp
0x80492c0:   83 ec 10               	sub esp, 0x10
0x80492c3:   e8 36 0a 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80492c8:   05 38 2d 00 00         	add eax, 0x2d38
0x80492cd:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80492d0:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x80492d3:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x80492d6:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x80492d9:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x80492dc:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x80492df:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x80492e2:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x80492e5:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80492e8:   dd 80 50 de ff ff      	fld qword ptr [eax - 0x21b0]
0x80492ee:   de c9                  	fmulp st(1)
0x80492f0:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80492f3:   dd 80 50 de ff ff      	fld qword ptr [eax - 0x21b0]
0x80492f9:   de c9                  	fmulp st(1)
0x80492fb:   de e9                  	fsubp st(1)
0x80492fd:   d9 e1                  	fabs 
0x80492ff:   dd 80 58 de ff ff      	fld qword ptr [eax - 0x21a8]
0x8049305:   d9 c9                  	fxch st(1)
0x8049307:   df e9                  	fucomip st(1)
0x8049309:   dd d8                  	fstp st(0)
0x804930b:   76 05                  	jbe 0x8049312 <safe_sub_func_double_f_f+0x55>
0x804930d:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049310:   eb 06                  	jmp 0x8049318 <safe_sub_func_double_f_f+0x5b>
0x8049312:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049315:   dc 65 f0               	fsub qword ptr [ebp - 0x10]
0x8049318:   c9                     	leave 
0x8049319:   c3                     	ret 
; function: safe_mul_func_double_f_f at 0x804931a -- 0x8049377
0x804931a:   55                     	push ebp
0x804931b:   89 e5                  	mov ebp, esp
0x804931d:   83 ec 10               	sub esp, 0x10
0x8049320:   e8 d9 09 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049325:   05 db 2c 00 00         	add eax, 0x2cdb
0x804932a:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804932d:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x8049330:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x8049333:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x8049336:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x8049339:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x804933c:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x804933f:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x8049342:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049345:   dd 80 60 de ff ff      	fld qword ptr [eax - 0x21a0]
0x804934b:   de c9                  	fmulp st(1)
0x804934d:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x8049350:   dd 80 68 de ff ff      	fld qword ptr [eax - 0x2198]
0x8049356:   de c9                  	fmulp st(1)
0x8049358:   de c9                  	fmulp st(1)
0x804935a:   d9 e1                  	fabs 
0x804935c:   dd 80 70 de ff ff      	fld qword ptr [eax - 0x2190]
0x8049362:   d9 c9                  	fxch st(1)
0x8049364:   df e9                  	fucomip st(1)
0x8049366:   dd d8                  	fstp st(0)
0x8049368:   76 05                  	jbe 0x804936f <safe_mul_func_double_f_f+0x55>
0x804936a:   dd 45 f8               	fld qword ptr [ebp - 8]
0x804936d:   eb 06                  	jmp 0x8049375 <safe_mul_func_double_f_f+0x5b>
0x804936f:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049372:   dc 4d f0               	fmul qword ptr [ebp - 0x10]
0x8049375:   c9                     	leave 
0x8049376:   c3                     	ret 
; function: safe_div_func_double_f_f at 0x8049377 -- 0x8049407
0x8049377:   55                     	push ebp
0x8049378:   89 e5                  	mov ebp, esp
0x804937a:   83 ec 10               	sub esp, 0x10
0x804937d:   e8 7c 09 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049382:   05 7e 2c 00 00         	add eax, 0x2c7e
0x8049387:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x804938a:   89 55 f8               	mov dword ptr [ebp - 8], edx
0x804938d:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x8049390:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x8049393:   8b 55 10               	mov edx, dword ptr [ebp + 0x10]
0x8049396:   89 55 f0               	mov dword ptr [ebp - 0x10], edx
0x8049399:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x804939c:   89 55 f4               	mov dword ptr [ebp - 0xc], edx
0x804939f:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493a2:   d9 e1                  	fabs 
0x80493a4:   d9 e8                  	fld1 
0x80493a6:   df e9                  	fucomip st(1)
0x80493a8:   dd d8                  	fstp st(0)
0x80493aa:   0f 97 c2               	seta dl
0x80493ad:   83 f2 01               	xor edx, 1
0x80493b0:   84 d2                  	test dl, dl
0x80493b2:   75 46                  	jne 0x80493fa <safe_div_func_double_f_f+0x83>
0x80493b4:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493b7:   d9 ee                  	fldz 
0x80493b9:   df e9                  	fucomip st(1)
0x80493bb:   dd d8                  	fstp st(0)
0x80493bd:   7a 0b                  	jp 0x80493ca <safe_div_func_double_f_f+0x53>
0x80493bf:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493c2:   d9 ee                  	fldz 
0x80493c4:   df e9                  	fucomip st(1)
0x80493c6:   dd d8                  	fstp st(0)
0x80493c8:   74 38                  	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493ca:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80493cd:   dd 80 78 de ff ff      	fld qword ptr [eax - 0x2188]
0x80493d3:   de c9                  	fmulp st(1)
0x80493d5:   dd 45 f0               	fld qword ptr [ebp - 0x10]
0x80493d8:   dd 80 80 de ff ff      	fld qword ptr [eax - 0x2180]
0x80493de:   de c9                  	fmulp st(1)
0x80493e0:   de f9                  	fdivp st(1)
0x80493e2:   d9 e1                  	fabs 
0x80493e4:   dd 80 88 de ff ff      	fld qword ptr [eax - 0x2178]
0x80493ea:   d9 c9                  	fxch st(1)
0x80493ec:   df e9                  	fucomip st(1)
0x80493ee:   dd d8                  	fstp st(0)
0x80493f0:   0f 97 c0               	seta al
0x80493f3:   83 f0 01               	xor eax, 1
0x80493f6:   84 c0                  	test al, al
0x80493f8:   74 08                  	je 0x8049402 <safe_div_func_double_f_f+0x8b>
0x80493fa:   dd 45 f8               	fld qword ptr [ebp - 8]
0x80493fd:   dc 75 f0               	fdiv qword ptr [ebp - 0x10]
0x8049400:   eb 03                  	jmp 0x8049405 <safe_div_func_double_f_f+0x8e>
0x8049402:   dd 45 f8               	fld qword ptr [ebp - 8]
0x8049405:   c9                     	leave 
0x8049406:   c3                     	ret 
; function: safe_convert_func_float_to_int32_t at 0x8049407 -- 0x804946b
0x8049407:   55                     	push ebp
0x8049408:   89 e5                  	mov ebp, esp
0x804940a:   83 ec 08               	sub esp, 8
0x804940d:   e8 ec 08 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049412:   05 ee 2b 00 00         	add eax, 0x2bee
0x8049417:   d9 45 08               	fld dword ptr [ebp + 8]
0x804941a:   d9 80 90 de ff ff      	fld dword ptr [eax - 0x2170]
0x8049420:   df e9                  	fucomip st(1)
0x8049422:   dd d8                  	fstp st(0)
0x8049424:   0f 93 c2               	setae dl
0x8049427:   83 f2 01               	xor edx, 1
0x804942a:   84 d2                  	test dl, dl
0x804942c:   74 36                  	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x804942e:   d9 80 94 de ff ff      	fld dword ptr [eax - 0x216c]
0x8049434:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049437:   df e9                  	fucomip st(1)
0x8049439:   dd d8                  	fstp st(0)
0x804943b:   0f 93 c0               	setae al
0x804943e:   83 f0 01               	xor eax, 1
0x8049441:   84 c0                  	test al, al
0x8049443:   74 1f                  	je 0x8049464 <safe_convert_func_float_to_int32_t+0x5d>
0x8049445:   d9 45 08               	fld dword ptr [ebp + 8]
0x8049448:   d9 7d fe               	fnstcw word ptr [ebp - 2]
0x804944b:   0f b7 45 fe            	movzx eax, word ptr [ebp - 2]
0x804944f:   80 cc 0c               	or ah, 0xc
0x8049452:   66 89 45 fc            	mov word ptr [ebp - 4], ax
0x8049456:   d9 6d fc               	fldcw word ptr [ebp - 4]
0x8049459:   db 5d f8               	fistp dword ptr [ebp - 8]
0x804945c:   d9 6d fe               	fldcw word ptr [ebp - 2]
0x804945f:   8b 45 f8               	mov eax, dword ptr [ebp - 8]
0x8049462:   eb 05                  	jmp 0x8049469 <safe_convert_func_float_to_int32_t+0x62>
0x8049464:   b8 ff ff ff 7f         	mov eax, 0x7fffffff
0x8049469:   c9                     	leave 
0x804946a:   c3                     	ret 
; function: crc32_gentab at 0x804946b -- 0x80494db
0x804946b:   55                     	push ebp
0x804946c:   89 e5                  	mov ebp, esp
0x804946e:   83 ec 10               	sub esp, 0x10
0x8049471:   e8 88 08 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049476:   05 8a 2b 00 00         	add eax, 0x2b8a
0x804947b:   c7 45 f0 20 83 b8 ed   	mov dword ptr [ebp - 0x10], 0xedb88320
0x8049482:   c7 45 f8 00 00 00 00   	mov dword ptr [ebp - 8], 0
0x8049489:   eb 44                  	jmp 0x80494cf <crc32_gentab+0x64>
0x804948b:   8b 55 f8               	mov edx, dword ptr [ebp - 8]
0x804948e:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x8049491:   c7 45 f4 08 00 00 00   	mov dword ptr [ebp - 0xc], 8
0x8049498:   eb 1e                  	jmp 0x80494b8 <crc32_gentab+0x4d>
0x804949a:   8b 55 fc               	mov edx, dword ptr [ebp - 4]
0x804949d:   83 e2 01               	and edx, 1
0x80494a0:   85 d2                  	test edx, edx
0x80494a2:   74 0d                  	je 0x80494b1 <crc32_gentab+0x46>
0x80494a4:   8b 55 fc               	mov edx, dword ptr [ebp - 4]
0x80494a7:   d1 ea                  	shr edx, 1
0x80494a9:   33 55 f0               	xor edx, dword ptr [ebp - 0x10]
0x80494ac:   89 55 fc               	mov dword ptr [ebp - 4], edx
0x80494af:   eb 03                  	jmp 0x80494b4 <crc32_gentab+0x49>
0x80494b1:   d1 6d fc               	shr dword ptr [ebp - 4], 1
0x80494b4:   83 6d f4 01            	sub dword ptr [ebp - 0xc], 1
0x80494b8:   83 7d f4 00            	cmp dword ptr [ebp - 0xc], 0
0x80494bc:   7f dc                  	jg 0x804949a <crc32_gentab+0x2f>
0x80494be:   8b 55 f8               	mov edx, dword ptr [ebp - 8]
0x80494c1:   8b 4d fc               	mov ecx, dword ptr [ebp - 4]
0x80494c4:   89 8c 90 80 00 00 00   	mov dword ptr [eax + edx*4 + 0x80], ecx
0x80494cb:   83 45 f8 01            	add dword ptr [ebp - 8], 1
0x80494cf:   81 7d f8 ff 00 00 00   	cmp dword ptr [ebp - 8], 0xff
0x80494d6:   7e b3                  	jle 0x804948b <crc32_gentab+0x20>
0x80494d8:   90                     	nop 
0x80494d9:   c9                     	leave 
0x80494da:   c3                     	ret 
; function: crc32_byte at 0x80494db -- 0x8049522
0x80494db:   55                     	push ebp
0x80494dc:   89 e5                  	mov ebp, esp
0x80494de:   53                     	push ebx
0x80494df:   83 ec 04               	sub esp, 4
0x80494e2:   e8 17 08 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x80494e7:   05 19 2b 00 00         	add eax, 0x2b19
0x80494ec:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x80494ef:   88 55 f8               	mov byte ptr [ebp - 8], dl
0x80494f2:   8b 90 20 00 00 00      	mov edx, dword ptr [eax + 0x20]
0x80494f8:   89 d3                  	mov ebx, edx
0x80494fa:   c1 eb 08               	shr ebx, 8
0x80494fd:   0f b6 4d f8            	movzx ecx, byte ptr [ebp - 8]
0x8049501:   8b 90 20 00 00 00      	mov edx, dword ptr [eax + 0x20]
0x8049507:   31 ca                  	xor edx, ecx
0x8049509:   0f b6 d2               	movzx edx, dl
0x804950c:   8b 94 90 80 00 00 00   	mov edx, dword ptr [eax + edx*4 + 0x80]
0x8049513:   31 da                  	xor edx, ebx
0x8049515:   89 90 20 00 00 00      	mov dword ptr [eax + 0x20], edx
0x804951b:   90                     	nop 
0x804951c:   83 c4 04               	add esp, 4
0x804951f:   5b                     	pop ebx
0x8049520:   5d                     	pop ebp
0x8049521:   c3                     	ret 
; function: crc32_8bytes at 0x8049522 -- 0x8049577
0x8049522:   55                     	push ebp
0x8049523:   89 e5                  	mov ebp, esp
0x8049525:   e8 d4 07 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x804952a:   05 d6 2a 00 00         	add eax, 0x2ad6
0x804952f:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049532:   0f b6 c0               	movzx eax, al
0x8049535:   50                     	push eax
0x8049536:   e8 a0 ff ff ff         	call 0x80494db <crc32_byte>
0x804953b:   83 c4 04               	add esp, 4
0x804953e:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049541:   c1 e8 08               	shr eax, 8
0x8049544:   0f b6 c0               	movzx eax, al
0x8049547:   50                     	push eax
0x8049548:   e8 8e ff ff ff         	call 0x80494db <crc32_byte>
0x804954d:   83 c4 04               	add esp, 4
0x8049550:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049553:   c1 e8 10               	shr eax, 0x10
0x8049556:   0f b6 c0               	movzx eax, al
0x8049559:   50                     	push eax
0x804955a:   e8 7c ff ff ff         	call 0x80494db <crc32_byte>
0x804955f:   83 c4 04               	add esp, 4
0x8049562:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x8049565:   c1 e8 18               	shr eax, 0x18
0x8049568:   0f b6 c0               	movzx eax, al
0x804956b:   50                     	push eax
0x804956c:   e8 6a ff ff ff         	call 0x80494db <crc32_byte>
0x8049571:   83 c4 04               	add esp, 4
0x8049574:   90                     	nop 
0x8049575:   c9                     	leave 
0x8049576:   c3                     	ret 
; function: transparent_crc at 0x8049577 -- 0x80495be
0x8049577:   55                     	push ebp
0x8049578:   89 e5                  	mov ebp, esp
0x804957a:   53                     	push ebx
0x804957b:   83 ec 04               	sub esp, 4
0x804957e:   e8 0d ee ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049583:   81 c3 7d 2a 00 00      	add ebx, 0x2a7d
0x8049589:   ff 75 08               	push dword ptr [ebp + 8]
0x804958c:   e8 91 ff ff ff         	call 0x8049522 <crc32_8bytes>
0x8049591:   83 c4 04               	add esp, 4
0x8049594:   83 7d 10 00            	cmp dword ptr [ebp + 0x10], 0
0x8049598:   74 1e                  	je 0x80495b8 <transparent_crc+0x41>
0x804959a:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x80495a0:   f7 d0                  	not eax
0x80495a2:   83 ec 04               	sub esp, 4
0x80495a5:   50                     	push eax
0x80495a6:   ff 75 0c               	push dword ptr [ebp + 0xc]
0x80495a9:   8d 83 a0 dd ff ff      	lea eax, [ebx - 0x2260]
0x80495af:   50                     	push eax
0x80495b0:   e8 5b ed ff ff         	call 0x8048310 <printf>
0x80495b5:   83 c4 10               	add esp, 0x10
0x80495b8:   90                     	nop 
0x80495b9:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x80495bc:   c9                     	leave 
0x80495bd:   c3                     	ret 
; function: transparent_crc_bytes at 0x80495be -- 0x8049626
0x80495be:   55                     	push ebp
0x80495bf:   89 e5                  	mov ebp, esp
0x80495c1:   53                     	push ebx
0x80495c2:   83 ec 14               	sub esp, 0x14
0x80495c5:   e8 c6 ed ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x80495ca:   81 c3 36 2a 00 00      	add ebx, 0x2a36
0x80495d0:   c7 45 f4 00 00 00 00   	mov dword ptr [ebp - 0xc], 0
0x80495d7:   eb 1b                  	jmp 0x80495f4 <transparent_crc_bytes+0x36>
0x80495d9:   8b 55 f4               	mov edx, dword ptr [ebp - 0xc]
0x80495dc:   8b 45 08               	mov eax, dword ptr [ebp + 8]
0x80495df:   01 d0                  	add eax, edx
0x80495e1:   0f b6 00               	movzx eax, byte ptr [eax]
0x80495e4:   0f b6 c0               	movzx eax, al
0x80495e7:   50                     	push eax
0x80495e8:   e8 ee fe ff ff         	call 0x80494db <crc32_byte>
0x80495ed:   83 c4 04               	add esp, 4
0x80495f0:   83 45 f4 01            	add dword ptr [ebp - 0xc], 1
0x80495f4:   8b 45 f4               	mov eax, dword ptr [ebp - 0xc]
0x80495f7:   3b 45 0c               	cmp eax, dword ptr [ebp + 0xc]
0x80495fa:   7c dd                  	jl 0x80495d9 <transparent_crc_bytes+0x1b>
0x80495fc:   83 7d 14 00            	cmp dword ptr [ebp + 0x14], 0
0x8049600:   74 1e                  	je 0x8049620 <transparent_crc_bytes+0x62>
0x8049602:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x8049608:   f7 d0                  	not eax
0x804960a:   83 ec 04               	sub esp, 4
0x804960d:   50                     	push eax
0x804960e:   ff 75 10               	push dword ptr [ebp + 0x10]
0x8049611:   8d 83 c4 dd ff ff      	lea eax, [ebx - 0x223c]
0x8049617:   50                     	push eax
0x8049618:   e8 f3 ec ff ff         	call 0x8048310 <printf>
0x804961d:   83 c4 10               	add esp, 0x10
0x8049620:   90                     	nop 
0x8049621:   8b 5d fc               	mov ebx, dword ptr [ebp - 4]
0x8049624:   c9                     	leave 
0x8049625:   c3                     	ret 
; function: set_var at 0x8049626 -- 0x8049713
0x8049626:   55                     	push ebp
0x8049627:   89 e5                  	mov ebp, esp
0x8049629:   57                     	push edi
0x804962a:   56                     	push esi
0x804962b:   53                     	push ebx
0x804962c:   83 ec 24               	sub esp, 0x24
0x804962f:   e8 ca 06 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049634:   05 cc 29 00 00         	add eax, 0x29cc
0x8049639:   8b 55 0c               	mov edx, dword ptr [ebp + 0xc]
0x804963c:   8b 5d 10               	mov ebx, dword ptr [ebp + 0x10]
0x804963f:   8b 4d 18               	mov ecx, dword ptr [ebp + 0x18]
0x8049642:   89 4d d4               	mov dword ptr [ebp - 0x2c], ecx
0x8049645:   8b 75 20               	mov esi, dword ptr [ebp + 0x20]
0x8049648:   89 75 d0               	mov dword ptr [ebp - 0x30], esi
0x804964b:   8b 7d 28               	mov edi, dword ptr [ebp + 0x28]
0x804964e:   8b 75 30               	mov esi, dword ptr [ebp + 0x30]
0x8049651:   8b 4d 38               	mov ecx, dword ptr [ebp + 0x38]
0x8049654:   66 89 55 f0            	mov word ptr [ebp - 0x10], dx
0x8049658:   89 da                  	mov edx, ebx
0x804965a:   66 89 55 ec            	mov word ptr [ebp - 0x14], dx
0x804965e:   0f b6 55 d4            	movzx edx, byte ptr [ebp - 0x2c]
0x8049662:   88 55 e8               	mov byte ptr [ebp - 0x18], dl
0x8049665:   0f b6 55 d0            	movzx edx, byte ptr [ebp - 0x30]
0x8049669:   88 55 e4               	mov byte ptr [ebp - 0x1c], dl
0x804966c:   89 fa                  	mov edx, edi
0x804966e:   88 55 e0               	mov byte ptr [ebp - 0x20], dl
0x8049671:   89 f2                  	mov edx, esi
0x8049673:   66 89 55 dc            	mov word ptr [ebp - 0x24], dx
0x8049677:   89 ca                  	mov edx, ecx
0x8049679:   66 89 55 d8            	mov word ptr [ebp - 0x28], dx
0x804967d:   8b 55 08               	mov edx, dword ptr [ebp + 8]
0x8049680:   89 90 24 00 00 00      	mov dword ptr [eax + 0x24], edx
0x8049686:   0f b7 55 f0            	movzx edx, word ptr [ebp - 0x10]
0x804968a:   66 89 90 28 00 00 00   	mov word ptr [eax + 0x28], dx
0x8049691:   0f b7 55 ec            	movzx edx, word ptr [ebp - 0x14]
0x8049695:   66 89 90 2a 00 00 00   	mov word ptr [eax + 0x2a], dx
0x804969c:   8b 55 14               	mov edx, dword ptr [ebp + 0x14]
0x804969f:   89 90 2c 00 00 00      	mov dword ptr [eax + 0x2c], edx
0x80496a5:   0f b6 55 e8            	movzx edx, byte ptr [ebp - 0x18]
0x80496a9:   88 90 30 00 00 00      	mov byte ptr [eax + 0x30], dl
0x80496af:   8b 55 1c               	mov edx, dword ptr [ebp + 0x1c]
0x80496b2:   89 90 34 00 00 00      	mov dword ptr [eax + 0x34], edx
0x80496b8:   0f b6 55 e4            	movzx edx, byte ptr [ebp - 0x1c]
0x80496bc:   88 90 84 04 00 00      	mov byte ptr [eax + 0x484], dl
0x80496c2:   8b 55 24               	mov edx, dword ptr [ebp + 0x24]
0x80496c5:   89 90 38 00 00 00      	mov dword ptr [eax + 0x38], edx
0x80496cb:   0f b6 55 e0            	movzx edx, byte ptr [ebp - 0x20]
0x80496cf:   88 90 3c 00 00 00      	mov byte ptr [eax + 0x3c], dl
0x80496d5:   8b 55 2c               	mov edx, dword ptr [ebp + 0x2c]
0x80496d8:   89 90 40 00 00 00      	mov dword ptr [eax + 0x40], edx
0x80496de:   0f b7 55 dc            	movzx edx, word ptr [ebp - 0x24]
0x80496e2:   66 89 90 44 00 00 00   	mov word ptr [eax + 0x44], dx
0x80496e9:   8b 55 34               	mov edx, dword ptr [ebp + 0x34]
0x80496ec:   89 90 48 00 00 00      	mov dword ptr [eax + 0x48], edx
0x80496f2:   0f b7 55 d8            	movzx edx, word ptr [ebp - 0x28]
0x80496f6:   66 89 90 4c 00 00 00   	mov word ptr [eax + 0x4c], dx
0x80496fd:   8b 55 3c               	mov edx, dword ptr [ebp + 0x3c]
0x8049700:   89 90 50 00 00 00      	mov dword ptr [eax + 0x50], edx
0x8049706:   b8 00 00 00 00         	mov eax, 0
0x804970b:   83 c4 24               	add esp, 0x24
0x804970e:   5b                     	pop ebx
0x804970f:   5e                     	pop esi
0x8049710:   5f                     	pop edi
0x8049711:   5d                     	pop ebp
0x8049712:   c3                     	ret 
; function: func_1 at 0x8049713 -- 0x8049acc
0x8049713:   55                     	push ebp
0x8049714:   89 e5                  	mov ebp, esp
0x8049716:   57                     	push edi
0x8049717:   56                     	push esi
0x8049718:   53                     	push ebx
0x8049719:   83 ec 74               	sub esp, 0x74
0x804971c:   e8 dd 05 00 00         	call 0x8049cfe <__x86.get_pc_thunk.ax>
0x8049721:   05 df 28 00 00         	add eax, 0x28df
0x8049726:   c7 45 f0 07 00 00 00   	mov dword ptr [ebp - 0x10], 7
0x804972d:   66 c7 45 ca 61 54      	mov word ptr [ebp - 0x36], 0x5461
0x8049733:   66 c7 45 c8 c5 52      	mov word ptr [ebp - 0x38], 0x52c5
0x8049739:   c7 45 c4 ef c6 b5 c7   	mov dword ptr [ebp - 0x3c], 0xc7b5c6ef
0x8049740:   c6 45 c3 ff            	mov byte ptr [ebp - 0x3d], 0xff
0x8049744:   c7 45 ec f8 a9 0c 78   	mov dword ptr [ebp - 0x14], 0x780ca9f8
0x804974b:   c6 45 eb 00            	mov byte ptr [ebp - 0x15], 0
0x804974f:   c7 45 e4 99 c0 cc 43   	mov dword ptr [ebp - 0x1c], 0x43ccc099
0x8049756:   c6 45 e3 ff            	mov byte ptr [ebp - 0x1d], 0xff
0x804975a:   c7 45 dc 24 76 f7 cb   	mov dword ptr [ebp - 0x24], 0xcbf77624
0x8049761:   66 c7 45 da 02 00      	mov word ptr [ebp - 0x26], 2
0x8049767:   c7 45 bc 09 00 00 00   	mov dword ptr [ebp - 0x44], 9
0x804976e:   66 c7 45 d8 81 d0      	mov word ptr [ebp - 0x28], 0xd081
0x8049774:   c7 45 d4 01 00 00 00   	mov dword ptr [ebp - 0x2c], 1
0x804977b:   c7 45 d0 00 00 00 00   	mov dword ptr [ebp - 0x30], 0
0x8049782:   66 c7 45 ba c7 95      	mov word ptr [ebp - 0x46], 0x95c7
0x8049788:   c7 45 f0 fe ff ff ff   	mov dword ptr [ebp - 0x10], 0xfffffffe
0x804978f:   e9 69 02 00 00         	jmp 0x80499fd <func_1+0x2ea>
0x8049794:   66 c7 45 b8 01 00      	mov word ptr [ebp - 0x48], 1
0x804979a:   c7 45 b4 8a 74 c8 77   	mov dword ptr [ebp - 0x4c], 0x77c8748a
0x80497a1:   c7 45 b0 ee 62 d9 11   	mov dword ptr [ebp - 0x50], 0x11d962ee
0x80497a8:   c7 45 ac ff ff ff ff   	mov dword ptr [ebp - 0x54], 0xffffffff
0x80497af:   c7 45 cc ff ff ff ff   	mov dword ptr [ebp - 0x34], 0xffffffff
0x80497b6:   c7 45 a8 58 1c 5d e9   	mov dword ptr [ebp - 0x58], 0xe95d1c58
0x80497bd:   66 c7 45 a6 1f 48      	mov word ptr [ebp - 0x5a], 0x481f
0x80497c3:   80 45 eb 01            	add byte ptr [ebp - 0x15], 1
0x80497c7:   0f bf 55 ca            	movsx edx, word ptr [ebp - 0x36]
0x80497cb:   8b 45 d0               	mov eax, dword ptr [ebp - 0x30]
0x80497ce:   89 45 e4               	mov dword ptr [ebp - 0x1c], eax
0x80497d1:   8b 45 e4               	mov eax, dword ptr [ebp - 0x1c]
0x80497d4:   3d 9a f7 c6 ad         	cmp eax, 0xadc6f79a
0x80497d9:   0f 96 c0               	setbe al
0x80497dc:   0f b6 c0               	movzx eax, al
0x80497df:   39 45 c4               	cmp dword ptr [ebp - 0x3c], eax
0x80497e2:   0f 9e c0               	setle al
0x80497e5:   0f b6 c0               	movzx eax, al
0x80497e8:   39 45 b0               	cmp dword ptr [ebp - 0x50], eax
0x80497eb:   7c 06                  	jl 0x80497f3 <func_1+0xe0>
0x80497ed:   83 7d d0 00            	cmp dword ptr [ebp - 0x30], 0
0x80497f1:   74 07                  	je 0x80497fa <func_1+0xe7>
0x80497f3:   b8 01 00 00 00         	mov eax, 1
0x80497f8:   eb 05                  	jmp 0x80497ff <func_1+0xec>
0x80497fa:   b8 00 00 00 00         	mov eax, 0
0x80497ff:   39 d0                  	cmp eax, edx
0x8049801:   75 07                  	jne 0x804980a <func_1+0xf7>
0x8049803:   b8 01 00 00 00         	mov eax, 1
0x8049808:   eb 05                  	jmp 0x804980f <func_1+0xfc>
0x804980a:   b8 00 00 00 00         	mov eax, 0
0x804980f:   89 c2                  	mov edx, eax
0x8049811:   0f b6 45 e3            	movzx eax, byte ptr [ebp - 0x1d]
0x8049815:   31 d0                  	xor eax, edx
0x8049817:   88 45 e3               	mov byte ptr [ebp - 0x1d], al
0x804981a:   0f b6 45 e3            	movzx eax, byte ptr [ebp - 0x1d]
0x804981e:   39 45 f0               	cmp dword ptr [ebp - 0x10], eax
0x8049821:   83 7d e4 00            	cmp dword ptr [ebp - 0x1c], 0
0x8049825:   75 04                  	jne 0x804982b <func_1+0x118>
0x8049827:   83 7d e4 00            	cmp dword ptr [ebp - 0x1c], 0
0x804982b:   8b 45 f0               	mov eax, dword ptr [ebp - 0x10]
0x804982e:   66 35 0b af            	xor ax, 0xaf0b
0x8049832:   0f b7 c0               	movzx eax, ax
0x8049835:   8b 55 ec               	mov edx, dword ptr [ebp - 0x14]
0x8049838:   0f b7 ca               	movzx ecx, dx
0x804983b:   99                     	cdq 
0x804983c:   f7 f9                  	idiv ecx
0x804983e:   89 d0                  	mov eax, edx
0x8049840:   31 45 dc               	xor dword ptr [ebp - 0x24], eax
0x8049843:   8b 45 dc               	mov eax, dword ptr [ebp - 0x24]
0x8049846:   3b 45 d0               	cmp eax, dword ptr [ebp - 0x30]
0x8049849:   0f 84 f6 00 00 00      	je 0x8049945 <func_1+0x232>
0x804984f:   c6 45 9f c7            	mov byte ptr [ebp - 0x61], 0xc7
0x8049853:   c7 45 98 70 e2 33 40   	mov dword ptr [ebp - 0x68], 0x4033e270
0x804985a:   c7 45 94 20 b0 73 1a   	mov dword ptr [ebp - 0x6c], 0x1a73b020
0x8049861:   c6 45 93 f7            	mov byte ptr [ebp - 0x6d], 0xf7
0x8049865:   8b 45 ec               	mov eax, dword ptr [ebp - 0x14]
0x8049868:   0d 06 b6 d5 9e         	or eax, 0x9ed5b606
0x804986d:   89 45 ec               	mov dword ptr [ebp - 0x14], eax
0x8049870:   0f b6 45 9f            	movzx eax, byte ptr [ebp - 0x61]
0x8049874:   89 45 98               	mov dword ptr [ebp - 0x68], eax
0x8049877:   83 7d 98 00            	cmp dword ptr [ebp - 0x68], 0
0x804987b:   74 04                  	je 0x8049881 <func_1+0x16e>
0x804987d:   83 7d f0 00            	cmp dword ptr [ebp - 0x10], 0
0x8049881:   0f b6 45 9f            	movzx eax, byte ptr [ebp - 0x61]
0x8049885:   0f bf 55 c8            	movsx edx, word ptr [ebp - 0x38]
0x8049889:   8d 4a 01               	lea ecx, [edx + 1]
0x804988c:   99                     	cdq 
0x804988d:   f7 f9                  	idiv ecx
0x804988f:   89 d0                  	mov eax, edx
0x8049891:   39 45 d0               	cmp dword ptr [ebp - 0x30], eax
0x8049894:   0f 95 c0               	setne al
0x8049897:   0f b6 c0               	movzx eax, al
0x804989a:   09 45 dc               	or dword ptr [ebp - 0x24], eax
0x804989d:   c7 45 e4 0d 00 00 00   	mov dword ptr [ebp - 0x1c], 0xd
0x80498a4:   83 7d e4 09            	cmp dword ptr [ebp - 0x1c], 9
0x80498a8:   7e 4e                  	jle 0x80498f8 <func_1+0x1e5>
0x80498aa:   0f b7 45 d8            	movzx eax, word ptr [ebp - 0x28]
0x80498ae:   89 45 80               	mov dword ptr [ebp - 0x80], eax
0x80498b1:   0f b7 7d da            	movzx edi, word ptr [ebp - 0x26]
0x80498b5:   0f b6 75 e3            	movzx esi, byte ptr [ebp - 0x1d]
0x80498b9:   0f b6 5d eb            	movzx ebx, byte ptr [ebp - 0x15]
0x80498bd:   0f be 4d c3            	movsx ecx, byte ptr [ebp - 0x3d]
0x80498c1:   0f bf 55 c8            	movsx edx, word ptr [ebp - 0x38]
0x80498c5:   0f bf 45 ca            	movsx eax, word ptr [ebp - 0x36]
0x80498c9:   ff 75 d4               	push dword ptr [ebp - 0x2c]
0x80498cc:   ff 75 80               	push dword ptr [ebp - 0x80]
0x80498cf:   ff 75 bc               	push dword ptr [ebp - 0x44]
0x80498d2:   57                     	push edi
0x80498d3:   ff 75 dc               	push dword ptr [ebp - 0x24]
0x80498d6:   56                     	push esi
0x80498d7:   ff 75 e4               	push dword ptr [ebp - 0x1c]
0x80498da:   53                     	push ebx
0x80498db:   ff 75 ec               	push dword ptr [ebp - 0x14]
0x80498de:   51                     	push ecx
0x80498df:   ff 75 c4               	push dword ptr [ebp - 0x3c]
0x80498e2:   52                     	push edx
0x80498e3:   50                     	push eax
0x80498e4:   ff 75 f0               	push dword ptr [ebp - 0x10]
0x80498e7:   e8 3a fd ff ff         	call 0x8049626 <set_var>
0x80498ec:   83 c4 38               	add esp, 0x38
0x80498ef:   0f b6 45 93            	movzx eax, byte ptr [ebp - 0x6d]
0x80498f3:   e9 cc 01 00 00         	jmp 0x8049ac4 <func_1+0x3b1>
0x80498f8:   0f b7 45 d8            	movzx eax, word ptr [ebp - 0x28]
0x80498fc:   89 45 80               	mov dword ptr [ebp - 0x80], eax
0x80498ff:   0f b7 7d da            	movzx edi, word ptr [ebp - 0x26]
0x8049903:   0f b6 75 e3            	movzx esi, byte ptr [ebp - 0x1d]
0x8049907:   0f b6 5d eb            	movzx ebx, byte ptr [ebp - 0x15]
0x804990b:   0f be 4d c3            	movsx ecx, byte ptr [ebp - 0x3d]
0x804990f:   0f bf 55 c8            	movsx edx, word ptr [ebp - 0x38]
0x8049913:   0f bf 45 ca            	movsx eax, word ptr [ebp - 0x36]
0x8049917:   ff 75 d4               	push dword ptr [ebp - 0x2c]
0x804991a:   ff 75 80               	push dword ptr [ebp - 0x80]
0x804991d:   ff 75 bc               	push dword ptr [ebp - 0x44]
0x8049920:   57                     	push edi
0x8049921:   ff 75 dc               	push dword ptr [ebp - 0x24]
0x8049924:   56                     	push esi
0x8049925:   ff 75 e4               	push dword ptr [ebp - 0x1c]
0x8049928:   53                     	push ebx
0x8049929:   ff 75 ec               	push dword ptr [ebp - 0x14]
0x804992c:   51                     	push ecx
0x804992d:   ff 75 c4               	push dword ptr [ebp - 0x3c]
0x8049930:   52                     	push edx
0x8049931:   50                     	push eax
0x8049932:   ff 75 f0               	push dword ptr [ebp - 0x10]
0x8049935:   e8 ec fc ff ff         	call 0x8049626 <set_var>
0x804993a:   83 c4 38               	add esp, 0x38
0x804993d:   8b 45 98               	mov eax, dword ptr [ebp - 0x68]
0x8049940:   e9 7f 01 00 00         	jmp 0x8049ac4 <func_1+0x3b1>
0x8049945:   c7 45 a0 be 2c 63 43   	mov dword ptr [ebp - 0x60], 0x43632cbe
0x804994c:   8b 45 a8               	mov eax, dword ptr [ebp - 0x58]
0x804994f:   66 89 45 da            	mov word ptr [ebp - 0x26], ax
0x8049953:   0f b7 55 da            	movzx edx, word ptr [ebp - 0x26]
0x8049957:   83 7d e4 00            	cmp dword ptr [ebp - 0x1c], 0
0x804995b:   0f 95 c0               	setne al
0x804995e:   0f b6 c8               	movzx ecx, al
0x8049961:   0f bf 45 ca            	movsx eax, word ptr [ebp - 0x36]
0x8049965:   39 c1                  	cmp ecx, eax
0x8049967:   0f 9f c0               	setg al
0x804996a:   0f b6 c0               	movzx eax, al
0x804996d:   09 d0                  	or eax, edx
0x804996f:   31 45 cc               	xor dword ptr [ebp - 0x34], eax
0x8049972:   c7 45 cc f0 ff ff ff   	mov dword ptr [ebp - 0x34], 0xfffffff0
0x8049979:   eb 0b                  	jmp 0x8049986 <func_1+0x273>
0x804997b:   c7 45 dc 00 00 00 00   	mov dword ptr [ebp - 0x24], 0
0x8049982:   83 45 cc 01            	add dword ptr [ebp - 0x34], 1
0x8049986:   83 7d cc 1c            	cmp dword ptr [ebp - 0x34], 0x1c
0x804998a:   7f ef                  	jg 0x804997b <func_1+0x268>
0x804998c:   83 7d dc 00            	cmp dword ptr [ebp - 0x24], 0
0x8049990:   74 12                  	je 0x80499a4 <func_1+0x291>
0x8049992:   8b 45 a0               	mov eax, dword ptr [ebp - 0x60]
0x8049995:   0f bf c8               	movsx ecx, ax
0x8049998:   b8 ec 6b 00 00         	mov eax, 0x6bec
0x804999d:   99                     	cdq 
0x804999e:   f7 f9                  	idiv ecx
0x80499a0:   89 d0                  	mov eax, edx
0x80499a2:   85 c0                  	test eax, eax
0x80499a4:   0f b7 45 ba            	movzx eax, word ptr [ebp - 0x46]
0x80499a8:   0f b6 d0               	movzx edx, al
0x80499ab:   80 7d c3 01            	cmp byte ptr [ebp - 0x3d], 1
0x80499af:   0f 94 c0               	sete al
0x80499b2:   0f b6 c0               	movzx eax, al
0x80499b5:   29 c2                  	sub edx, eax
0x80499b7:   89 d0                  	mov eax, edx
0x80499b9:   3d e3 00 00 00         	cmp eax, 0xe3
0x80499be:   7f 07                  	jg 0x80499c7 <func_1+0x2b4>
0x80499c0:   b8 3d 00 00 00         	mov eax, 0x3d
0x80499c5:   eb 05                  	jmp 0x80499cc <func_1+0x2b9>
0x80499c7:   b8 3c 00 00 00         	mov eax, 0x3c
0x80499cc:   89 45 ec               	mov dword ptr [ebp - 0x14], eax
0x80499cf:   83 7d c4 00            	cmp dword ptr [ebp - 0x3c], 0
0x80499d3:   75 34                  	jne 0x8049a09 <func_1+0x2f6>
0x80499d5:   0f b7 45 d8            	movzx eax, word ptr [ebp - 0x28]
0x80499d9:   83 c0 01               	add eax, 1
0x80499dc:   66 89 45 d8            	mov word ptr [ebp - 0x28], ax
0x80499e0:   0f b7 45 ba            	movzx eax, word ptr [ebp - 0x46]
0x80499e4:   89 45 d4               	mov dword ptr [ebp - 0x2c], eax
0x80499e7:   83 7d f0 00            	cmp dword ptr [ebp - 0x10], 0
0x80499eb:   74 05                  	je 0x80499f2 <func_1+0x2df>
0x80499ed:   66 83 7d a6 00         	cmp word ptr [ebp - 0x5a], 0
0x80499f2:   c7 45 d0 01 00 00 00   	mov dword ptr [ebp - 0x30], 1
0x80499f9:   83 6d f0 04            	sub dword ptr [ebp - 0x10], 4
0x80499fd:   83 7d f0 ee            	cmp dword ptr [ebp - 0x10], -0x12
0x8049a01:   0f 85 8d fd ff ff      	jne 0x8049794 <func_1+0x81>
0x8049a07:   eb 01                  	jmp 0x8049a0a <func_1+0x2f7>
0x8049a09:   90                     	nop 
0x8049a0a:   c7 45 e4 00 00 00 00   	mov dword ptr [ebp - 0x1c], 0
0x8049a11:   eb 63                  	jmp 0x8049a76 <func_1+0x363>
0x8049a13:   c7 45 8c 58 e8 8e ff   	mov dword ptr [ebp - 0x74], 0xff8ee858
0x8049a1a:   8b 45 8c               	mov eax, dword ptr [ebp - 0x74]
0x8049a1d:   31 45 ec               	xor dword ptr [ebp - 0x14], eax
0x8049a20:   83 7d 8c 00            	cmp dword ptr [ebp - 0x74], 0
0x8049a24:   74 06                  	je 0x8049a2c <func_1+0x319>
0x8049a26:   83 6d e4 01            	sub dword ptr [ebp - 0x1c], 1
0x8049a2a:   eb 4a                  	jmp 0x8049a76 <func_1+0x363>
0x8049a2c:   0f b7 45 d8            	movzx eax, word ptr [ebp - 0x28]
0x8049a30:   89 45 80               	mov dword ptr [ebp - 0x80], eax
0x8049a33:   0f b7 7d da            	movzx edi, word ptr [ebp - 0x26]
0x8049a37:   0f b6 75 e3            	movzx esi, byte ptr [ebp - 0x1d]
0x8049a3b:   0f b6 5d eb            	movzx ebx, byte ptr [ebp - 0x15]
0x8049a3f:   0f be 4d c3            	movsx ecx, byte ptr [ebp - 0x3d]
0x8049a43:   0f bf 55 c8            	movsx edx, word ptr [ebp - 0x38]
0x8049a47:   0f bf 45 ca            	movsx eax, word ptr [ebp - 0x36]
0x8049a4b:   ff 75 d4               	push dword ptr [ebp - 0x2c]
0x8049a4e:   ff 75 80               	push dword ptr [ebp - 0x80]
0x8049a51:   ff 75 bc               	push dword ptr [ebp - 0x44]
0x8049a54:   57                     	push edi
0x8049a55:   ff 75 dc               	push dword ptr [ebp - 0x24]
0x8049a58:   56                     	push esi
0x8049a59:   ff 75 e4               	push dword ptr [ebp - 0x1c]
0x8049a5c:   53                     	push ebx
0x8049a5d:   ff 75 ec               	push dword ptr [ebp - 0x14]
0x8049a60:   51                     	push ecx
0x8049a61:   ff 75 c4               	push dword ptr [ebp - 0x3c]
0x8049a64:   52                     	push edx
0x8049a65:   50                     	push eax
0x8049a66:   ff 75 f0               	push dword ptr [ebp - 0x10]
0x8049a69:   e8 b8 fb ff ff         	call 0x8049626 <set_var>
0x8049a6e:   83 c4 38               	add esp, 0x38
0x8049a71:   8b 45 e4               	mov eax, dword ptr [ebp - 0x1c]
0x8049a74:   eb 4e                  	jmp 0x8049ac4 <func_1+0x3b1>
0x8049a76:   83 7d e4 ec            	cmp dword ptr [ebp - 0x1c], -0x14
0x8049a7a:   7d 97                  	jge 0x8049a13 <func_1+0x300>
0x8049a7c:   0f b7 45 d8            	movzx eax, word ptr [ebp - 0x28]
0x8049a80:   89 45 80               	mov dword ptr [ebp - 0x80], eax
0x8049a83:   0f b7 7d da            	movzx edi, word ptr [ebp - 0x26]
0x8049a87:   0f b6 75 e3            	movzx esi, byte ptr [ebp - 0x1d]
0x8049a8b:   0f b6 5d eb            	movzx ebx, byte ptr [ebp - 0x15]
0x8049a8f:   0f be 4d c3            	movsx ecx, byte ptr [ebp - 0x3d]
0x8049a93:   0f bf 55 c8            	movsx edx, word ptr [ebp - 0x38]
0x8049a97:   0f bf 45 ca            	movsx eax, word ptr [ebp - 0x36]
0x8049a9b:   ff 75 d4               	push dword ptr [ebp - 0x2c]
0x8049a9e:   ff 75 80               	push dword ptr [ebp - 0x80]
0x8049aa1:   ff 75 bc               	push dword ptr [ebp - 0x44]
0x8049aa4:   57                     	push edi
0x8049aa5:   ff 75 dc               	push dword ptr [ebp - 0x24]
0x8049aa8:   56                     	push esi
0x8049aa9:   ff 75 e4               	push dword ptr [ebp - 0x1c]
0x8049aac:   53                     	push ebx
0x8049aad:   ff 75 ec               	push dword ptr [ebp - 0x14]
0x8049ab0:   51                     	push ecx
0x8049ab1:   ff 75 c4               	push dword ptr [ebp - 0x3c]
0x8049ab4:   52                     	push edx
0x8049ab5:   50                     	push eax
0x8049ab6:   ff 75 f0               	push dword ptr [ebp - 0x10]
0x8049ab9:   e8 68 fb ff ff         	call 0x8049626 <set_var>
0x8049abe:   83 c4 38               	add esp, 0x38
0x8049ac1:   8b 45 d0               	mov eax, dword ptr [ebp - 0x30]
0x8049ac4:   8d 65 f4               	lea esp, [ebp - 0xc]
0x8049ac7:   5b                     	pop ebx
0x8049ac8:   5e                     	pop esi
0x8049ac9:   5f                     	pop edi
0x8049aca:   5d                     	pop ebp
0x8049acb:   c3                     	ret 
; function: main at 0x8049acc -- 0x8049cfe
0x8049acc:   8d 4c 24 04            	lea ecx, [esp + 4]
0x8049ad0:   83 e4 f0               	and esp, 0xfffffff0
0x8049ad3:   ff 71 fc               	push dword ptr [ecx - 4]
0x8049ad6:   55                     	push ebp
0x8049ad7:   89 e5                  	mov ebp, esp
0x8049ad9:   53                     	push ebx
0x8049ada:   51                     	push ecx
0x8049adb:   83 ec 10               	sub esp, 0x10
0x8049ade:   e8 ad e8 ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049ae3:   81 c3 1d 25 00 00      	add ebx, 0x251d
0x8049ae9:   89 c8                  	mov eax, ecx
0x8049aeb:   c7 45 f4 00 00 00 00   	mov dword ptr [ebp - 0xc], 0
0x8049af2:   83 38 02               	cmp dword ptr [eax], 2
0x8049af5:   75 26                  	jne 0x8049b1d <main+0x51>
0x8049af7:   8b 40 04               	mov eax, dword ptr [eax + 4]
0x8049afa:   83 c0 04               	add eax, 4
0x8049afd:   8b 00                  	mov eax, dword ptr [eax]
0x8049aff:   83 ec 08               	sub esp, 8
0x8049b02:   8d 93 e8 dd ff ff      	lea edx, [ebx - 0x2218]
0x8049b08:   52                     	push edx
0x8049b09:   50                     	push eax
0x8049b0a:   e8 f1 e7 ff ff         	call 0x8048300 <strcmp>
0x8049b0f:   83 c4 10               	add esp, 0x10
0x8049b12:   85 c0                  	test eax, eax
0x8049b14:   75 07                  	jne 0x8049b1d <main+0x51>
0x8049b16:   c7 45 f4 01 00 00 00   	mov dword ptr [ebp - 0xc], 1
0x8049b1d:   e8 34 e9 ff ff         	call 0x8048456 <platform_main_begin>
0x8049b22:   e8 44 f9 ff ff         	call 0x804946b <crc32_gentab>
0x8049b27:   e8 e7 fb ff ff         	call 0x8049713 <func_1>
0x8049b2c:   8b 83 24 00 00 00      	mov eax, dword ptr [ebx + 0x24]
0x8049b32:   89 c2                  	mov edx, eax
0x8049b34:   83 ec 04               	sub esp, 4
0x8049b37:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049b3a:   8d 83 ea dd ff ff      	lea eax, [ebx - 0x2216]
0x8049b40:   50                     	push eax
0x8049b41:   52                     	push edx
0x8049b42:   e8 30 fa ff ff         	call 0x8049577 <transparent_crc>
0x8049b47:   83 c4 10               	add esp, 0x10
0x8049b4a:   0f b7 83 28 00 00 00   	movzx eax, word ptr [ebx + 0x28]
0x8049b51:   98                     	cwde 
0x8049b52:   83 ec 04               	sub esp, 4
0x8049b55:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049b58:   8d 93 ee dd ff ff      	lea edx, [ebx - 0x2212]
0x8049b5e:   52                     	push edx
0x8049b5f:   50                     	push eax
0x8049b60:   e8 12 fa ff ff         	call 0x8049577 <transparent_crc>
0x8049b65:   83 c4 10               	add esp, 0x10
0x8049b68:   0f b7 83 2a 00 00 00   	movzx eax, word ptr [ebx + 0x2a]
0x8049b6f:   98                     	cwde 
0x8049b70:   83 ec 04               	sub esp, 4
0x8049b73:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049b76:   8d 93 f2 dd ff ff      	lea edx, [ebx - 0x220e]
0x8049b7c:   52                     	push edx
0x8049b7d:   50                     	push eax
0x8049b7e:   e8 f4 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049b83:   83 c4 10               	add esp, 0x10
0x8049b86:   8b 83 2c 00 00 00      	mov eax, dword ptr [ebx + 0x2c]
0x8049b8c:   89 c2                  	mov edx, eax
0x8049b8e:   83 ec 04               	sub esp, 4
0x8049b91:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049b94:   8d 83 f6 dd ff ff      	lea eax, [ebx - 0x220a]
0x8049b9a:   50                     	push eax
0x8049b9b:   52                     	push edx
0x8049b9c:   e8 d6 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049ba1:   83 c4 10               	add esp, 0x10
0x8049ba4:   0f b6 83 30 00 00 00   	movzx eax, byte ptr [ebx + 0x30]
0x8049bab:   0f be c0               	movsx eax, al
0x8049bae:   83 ec 04               	sub esp, 4
0x8049bb1:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049bb4:   8d 93 fb dd ff ff      	lea edx, [ebx - 0x2205]
0x8049bba:   52                     	push edx
0x8049bbb:   50                     	push eax
0x8049bbc:   e8 b6 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049bc1:   83 c4 10               	add esp, 0x10
0x8049bc4:   8b 83 34 00 00 00      	mov eax, dword ptr [ebx + 0x34]
0x8049bca:   89 c2                  	mov edx, eax
0x8049bcc:   83 ec 04               	sub esp, 4
0x8049bcf:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049bd2:   8d 83 00 de ff ff      	lea eax, [ebx - 0x2200]
0x8049bd8:   50                     	push eax
0x8049bd9:   52                     	push edx
0x8049bda:   e8 98 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049bdf:   83 c4 10               	add esp, 0x10
0x8049be2:   0f b6 83 84 04 00 00   	movzx eax, byte ptr [ebx + 0x484]
0x8049be9:   0f b6 c0               	movzx eax, al
0x8049bec:   83 ec 04               	sub esp, 4
0x8049bef:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049bf2:   8d 93 05 de ff ff      	lea edx, [ebx - 0x21fb]
0x8049bf8:   52                     	push edx
0x8049bf9:   50                     	push eax
0x8049bfa:   e8 78 f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049bff:   83 c4 10               	add esp, 0x10
0x8049c02:   8b 83 38 00 00 00      	mov eax, dword ptr [ebx + 0x38]
0x8049c08:   89 c2                  	mov edx, eax
0x8049c0a:   83 ec 04               	sub esp, 4
0x8049c0d:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c10:   8d 83 0a de ff ff      	lea eax, [ebx - 0x21f6]
0x8049c16:   50                     	push eax
0x8049c17:   52                     	push edx
0x8049c18:   e8 5a f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049c1d:   83 c4 10               	add esp, 0x10
0x8049c20:   0f b6 83 3c 00 00 00   	movzx eax, byte ptr [ebx + 0x3c]
0x8049c27:   0f b6 c0               	movzx eax, al
0x8049c2a:   83 ec 04               	sub esp, 4
0x8049c2d:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c30:   8d 93 0f de ff ff      	lea edx, [ebx - 0x21f1]
0x8049c36:   52                     	push edx
0x8049c37:   50                     	push eax
0x8049c38:   e8 3a f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049c3d:   83 c4 10               	add esp, 0x10
0x8049c40:   8b 83 40 00 00 00      	mov eax, dword ptr [ebx + 0x40]
0x8049c46:   89 c2                  	mov edx, eax
0x8049c48:   83 ec 04               	sub esp, 4
0x8049c4b:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c4e:   8d 83 14 de ff ff      	lea eax, [ebx - 0x21ec]
0x8049c54:   50                     	push eax
0x8049c55:   52                     	push edx
0x8049c56:   e8 1c f9 ff ff         	call 0x8049577 <transparent_crc>
0x8049c5b:   83 c4 10               	add esp, 0x10
0x8049c5e:   0f b7 83 44 00 00 00   	movzx eax, word ptr [ebx + 0x44]
0x8049c65:   0f b7 c0               	movzx eax, ax
0x8049c68:   83 ec 04               	sub esp, 4
0x8049c6b:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c6e:   8d 93 19 de ff ff      	lea edx, [ebx - 0x21e7]
0x8049c74:   52                     	push edx
0x8049c75:   50                     	push eax
0x8049c76:   e8 fc f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049c7b:   83 c4 10               	add esp, 0x10
0x8049c7e:   8b 83 48 00 00 00      	mov eax, dword ptr [ebx + 0x48]
0x8049c84:   89 c2                  	mov edx, eax
0x8049c86:   83 ec 04               	sub esp, 4
0x8049c89:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049c8c:   8d 83 1e de ff ff      	lea eax, [ebx - 0x21e2]
0x8049c92:   50                     	push eax
0x8049c93:   52                     	push edx
0x8049c94:   e8 de f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049c99:   83 c4 10               	add esp, 0x10
0x8049c9c:   0f b7 83 4c 00 00 00   	movzx eax, word ptr [ebx + 0x4c]
0x8049ca3:   0f b7 c0               	movzx eax, ax
0x8049ca6:   83 ec 04               	sub esp, 4
0x8049ca9:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049cac:   8d 93 23 de ff ff      	lea edx, [ebx - 0x21dd]
0x8049cb2:   52                     	push edx
0x8049cb3:   50                     	push eax
0x8049cb4:   e8 be f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049cb9:   83 c4 10               	add esp, 0x10
0x8049cbc:   8b 83 50 00 00 00      	mov eax, dword ptr [ebx + 0x50]
0x8049cc2:   83 ec 04               	sub esp, 4
0x8049cc5:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049cc8:   8d 93 28 de ff ff      	lea edx, [ebx - 0x21d8]
0x8049cce:   52                     	push edx
0x8049ccf:   50                     	push eax
0x8049cd0:   e8 a2 f8 ff ff         	call 0x8049577 <transparent_crc>
0x8049cd5:   83 c4 10               	add esp, 0x10
0x8049cd8:   8b 83 20 00 00 00      	mov eax, dword ptr [ebx + 0x20]
0x8049cde:   f7 d0                  	not eax
0x8049ce0:   83 ec 08               	sub esp, 8
0x8049ce3:   ff 75 f4               	push dword ptr [ebp - 0xc]
0x8049ce6:   50                     	push eax
0x8049ce7:   e8 7a e7 ff ff         	call 0x8048466 <platform_main_end>
0x8049cec:   83 c4 10               	add esp, 0x10
0x8049cef:   b8 00 00 00 00         	mov eax, 0
0x8049cf4:   8d 65 f8               	lea esp, [ebp - 8]
0x8049cf7:   59                     	pop ecx
0x8049cf8:   5b                     	pop ebx
0x8049cf9:   5d                     	pop ebp
0x8049cfa:   8d 61 fc               	lea esp, [ecx - 4]
0x8049cfd:   c3                     	ret 
; function: __x86.get_pc_thunk.ax at 0x8049cfe -- 0x8049d02
0x8049cfe:   8b 04 24               	mov eax, dword ptr [esp]
0x8049d01:   c3                     	ret 
; data inside code section at 0x8049d02 -- 0x8049d10
0x8049d02:   66 90 66 90 66 90 66 90  66 90 66 90 66 90         |f.f.f.f.f.f.f.  |
; function: __libc_csu_init at 0x8049d10 -- 0x8049d6d
0x8049d10:   55                     	push ebp
0x8049d11:   57                     	push edi
0x8049d12:   56                     	push esi
0x8049d13:   53                     	push ebx
0x8049d14:   e8 77 e6 ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049d19:   81 c3 e7 22 00 00      	add ebx, 0x22e7
0x8049d1f:   83 ec 0c               	sub esp, 0xc
0x8049d22:   8b 6c 24 28            	mov ebp, dword ptr [esp + 0x28]
0x8049d26:   8d b3 10 ff ff ff      	lea esi, [ebx - 0xf0]
0x8049d2c:   e8 9b e5 ff ff         	call 0x80482cc <_init>
0x8049d31:   8d 83 0c ff ff ff      	lea eax, [ebx - 0xf4]
0x8049d37:   29 c6                  	sub esi, eax
0x8049d39:   c1 fe 02               	sar esi, 2
0x8049d3c:   85 f6                  	test esi, esi
0x8049d3e:   74 25                  	je 0x8049d65 <__libc_csu_init+0x55>
0x8049d40:   31 ff                  	xor edi, edi
0x8049d42:   8d b6 00 00 00 00      	lea esi, [esi]
0x8049d48:   83 ec 04               	sub esp, 4
0x8049d4b:   55                     	push ebp
0x8049d4c:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x8049d50:   ff 74 24 2c            	push dword ptr [esp + 0x2c]
0x8049d54:   ff 94 bb 0c ff ff ff   	call dword ptr [ebx + edi*4 - 0xf4]
0x8049d5b:   83 c7 01               	add edi, 1
0x8049d5e:   83 c4 10               	add esp, 0x10
0x8049d61:   39 fe                  	cmp esi, edi
0x8049d63:   75 e3                  	jne 0x8049d48 <__libc_csu_init+0x38>
0x8049d65:   83 c4 0c               	add esp, 0xc
0x8049d68:   5b                     	pop ebx
0x8049d69:   5e                     	pop esi
0x8049d6a:   5f                     	pop edi
0x8049d6b:   5d                     	pop ebp
0x8049d6c:   c3                     	ret 
; data inside code section at 0x8049d6d -- 0x8049d70
0x8049d6d:   8d 76 00                                           |.v.             |
; function: __libc_csu_fini at 0x8049d70 -- 0x8049d72
0x8049d70:   f3 c3                  	ret 
; section: .fini
; function: _fini at 0x8049d74 -- 0x8049d88
0x8049d74:   53                     	push ebx
0x8049d75:   83 ec 08               	sub esp, 8
0x8049d78:   e8 13 e6 ff ff         	call 0x8048390 <__x86.get_pc_thunk.bx>
0x8049d7d:   81 c3 83 22 00 00      	add ebx, 0x2283
0x8049d83:   83 c4 08               	add esp, 8
0x8049d86:   5b                     	pop ebx
0x8049d87:   c3                     	ret 

;;
;; Data Segment
;;

; section: .interp
0x8048154:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048164:   2e 32 00 ??                                        |.2.?            |
; section: .gnu.hash
0x80481ac:   02 00 00 00 05 00 00 00  01 00 00 00 05 00 00 00   |................|
0x80481bc:   00 20 00 20 00 00 00 00  05 00 00 00 ad 4b e3 c0   |. . .........K..|
0x80481cc:   00                                                 |.               |
; section: .dynsym
0x80481cc:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481dc:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80481ec:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481fc:   44 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |D........... ...|
0x804820c:   28 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |(...............|
0x804821c:   0b 00 00 00 8c 9d 04 08  04 00 00 00 11 00 10 00   |................|
0x804822c:   00                                                 |.               |
; section: .dynstr
0x804822c:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x804823c:   74 64 69 6e 5f 75 73 65  64 00 70 72 69 6e 74 66   |tdin_used.printf|
0x804824c:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x804825c:   74 61 72 74 5f 6d 61 69  6e 00 47 4c 49 42 43 5f   |tart_main.GLIBC_|
0x804826c:   32 2e 30 00 5f 5f 67 6d  6f 6e 5f 73 74 61 72 74   |2.0.__gmon_start|
0x804827c:   5f 5f 00 ??                                        |__.?            |
; section: .gnu.version
0x8048280:   00 00 02 00 02 00 00 00  02 00 01 00 01            |.............   |
; section: .gnu.version_r
0x804828c:   01 00 01 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x804829c:   10 69 69 0d 00 00 02 00  3a 00 00 00 00 00 00 00   |.ii.....:.......|
0x80482ac:   fc                                                 |.               |
; section: .rel.dyn
0x80482ac:   fc bf 04 08 06 03 00 00  0c                        |.........       |
; section: .rel.plt
0x80482b4:   0c c0 04 08 07 01 00 00  10 c0 04 08 07 02 00 00   |................|
0x80482c4:   14 c0 04 08 07 04 00 00  53                        |........S       |
; section: .rodata
0x8049d88:   03 00 00 00 01 00 02 00  63 68 65 63 6b 73 75 6d   |........checksum|
0x8049d98:   20 3d 20 25 58 0a 00 00  2e 2e 2e 63 68 65 63 6b   | = %X......check|
0x8049da8:   73 75 6d 20 61 66 74 65  72 20 68 61 73 68 69 6e   |sum after hashin|
0x8049db8:   67 20 25 73 20 3a 20 25  58 0a 00 00 2e 2e 2e 63   |g %s : %X......c|
0x8049dc8:   68 65 63 6b 73 75 6d 20  61 66 74 65 72 20 68 61   |hecksum after ha|
0x8049dd8:   73 68 69 6e 67 20 25 73  20 3a 20 25 6c 58 0a 00   |shing %s : %lX..|
0x8049de8:   31 00 67 5f 32 00 67 5f  35 00 67 5f 37 00 67 5f   |1.g_2.g_5.g_7.g_|
0x8049df8:   31 31 00 67 5f 31 32 00  67 5f 31 33 00 67 5f 31   |11.g_12.g_13.g_1|
0x8049e08:   37 00 67 5f 33 35 00 67  5f 33 36 00 67 5f 33 37   |7.g_35.g_36.g_37|
0x8049e18:   00 67 5f 35 30 00 67 5f  36 34 00 67 5f 36 35 00   |.g_50.g_64.g_65.|
0x8049e28:   67 5f 37 36 00 00 00 00  00 00 00 3f ff ff ff 7e   |g_76.......?...~|
0x8049e38:   00 00 80 0d 00 00 80 31  ff ff 7f 3f 00 00 00 27   |.......1...?...'|
0x8049e48:   00 00 80 71 ff ff ff 34  00 00 00 00 00 00 e0 3f   |...q...4.......?|
0x8049e58:   ff ff ff ff ff ff df 7f  00 00 00 00 00 00 b0 39   |...............9|
0x8049e68:   00 00 00 00 00 00 30 06  ff ff ff ff ff ff ef 3f   |......0........?|
0x8049e78:   00 00 00 00 00 00 10 03  00 00 00 00 00 00 30 46   |..............0F|
0x8049e88:   ff ff ff ff ff ff cf 3c  00 00 00 cf 00 00 00 4f   |.......<.......O|
0x8049e98:   01                                                 |.               |
; section: .eh_frame_hdr
0x8049e98:   01 1b 03 3b b0 02 00 00  55 00 00 00 58 e4 ff ff   |...;....U...X...|
0x8049ea8:   e0 02 00 00 98 e4 ff ff  04 03 00 00 e8 e4 ff ff   |................|
0x8049eb8:   cc 02 00 00 be e5 ff ff  18 03 00 00 ce e5 ff ff   |................|
0x8049ec8:   38 03 00 00 fc e5 ff ff  5c 03 00 00 1a e6 ff ff   |8.......\.......|
0x8049ed8:   7c 03 00 00 42 e6 ff ff  9c 03 00 00 6c e6 ff ff   ||...B.......l...|
0x8049ee8:   bc 03 00 00 95 e6 ff ff  dc 03 00 00 d8 e6 ff ff   |................|
0x8049ef8:   fc 03 00 00 19 e7 ff ff  1c 04 00 00 71 e7 ff ff   |............q...|
0x8049f08:   40 04 00 00 c3 e7 ff ff  64 04 00 00 00 e8 ff ff   |@.......d.......|
0x8049f18:   84 04 00 00 37 e8 ff ff  a4 04 00 00 56 e8 ff ff   |....7.......V...|
0x8049f28:   c4 04 00 00 80 e8 ff ff  e4 04 00 00 ac e8 ff ff   |................|
0x8049f38:   04 05 00 00 d7 e8 ff ff  24 05 00 00 20 e9 ff ff   |........$... ...|
0x8049f48:   44 05 00 00 67 e9 ff ff  64 05 00 00 c1 e9 ff ff   |D...g...d.......|
0x8049f58:   88 05 00 00 15 ea ff ff  ac 05 00 00 54 ea ff ff   |............T...|
0x8049f68:   cc 05 00 00 8d ea ff ff  ec 05 00 00 af ea ff ff   |................|
0x8049f78:   0c 06 00 00 fd ea ff ff  2c 06 00 00 39 eb ff ff   |........,...9...|
0x8049f88:   4c 06 00 00 c2 eb ff ff  6c 06 00 00 f4 eb ff ff   |L.......l.......|
0x8049f98:   8c 06 00 00 24 ec ff ff  ac 06 00 00 69 ec ff ff   |....$.......i...|
0x8049fa8:   cc 06 00 00 a8 ec ff ff  ec 06 00 00 da ec ff ff   |................|
0x8049fb8:   0c 07 00 00 06 ed ff ff  2c 07 00 00 24 ed ff ff   |........,...$...|
0x8049fc8:   4c 07 00 00 4c ed ff ff  6c 07 00 00 71 ed ff ff   |L...L...l...q...|
0x8049fd8:   8c 07 00 00 96 ed ff ff  ac 07 00 00 cd ed ff ff   |................|
0x8049fe8:   cc 07 00 00 01 ee ff ff  ec 07 00 00 53 ee ff ff   |............S...|
0x8049ff8:   10 08 00 00 9f ee ff ff  34 08 00 00 d6 ee ff ff   |........4.......|
0x804a008:   54 08 00 00 07 ef ff ff  74 08 00 00 26 ef ff ff   |T.......t...&...|
0x804a018:   94 08 00 00 50 ef ff ff  b4 08 00 00 78 ef ff ff   |....P.......x...|
0x804a028:   d4 08 00 00 a1 ef ff ff  f4 08 00 00 dd ef ff ff   |................|
0x804a038:   14 09 00 00 17 f0 ff ff  34 09 00 00 6a f0 ff ff   |........4...j...|
0x804a048:   58 09 00 00 b7 f0 ff ff  7c 09 00 00 ef f0 ff ff   |X.......|.......|
0x804a058:   9c 09 00 00 21 f1 ff ff  bc 09 00 00 35 f1 ff ff   |....!.......5...|
0x804a068:   dc 09 00 00 4c f1 ff ff  fc 09 00 00 61 f1 ff ff   |....L.......a...|
0x804a078:   1c 0a 00 00 77 f1 ff ff  3c 0a 00 00 9e f1 ff ff   |....w...<.......|
0x804a088:   5c 0a 00 00 c3 f1 ff ff  7c 0a 00 00 02 f2 ff ff   |\.......|.......|
0x804a098:   9c 0a 00 00 3b f2 ff ff  bc 0a 00 00 67 f2 ff ff   |....;.......g...|
0x804a0a8:   dc 0a 00 00 8d f2 ff ff  fc 0a 00 00 cf f2 ff ff   |................|
0x804a0b8:   1c 0b 00 00 11 f3 ff ff  3c 0b 00 00 53 f3 ff ff   |........<...S...|
0x804a0c8:   5c 0b 00 00 c8 f3 ff ff  7c 0b 00 00 25 f4 ff ff   |\.......|...%...|
0x804a0d8:   9c 0b 00 00 82 f4 ff ff  bc 0b 00 00 df f4 ff ff   |................|
0x804a0e8:   dc 0b 00 00 6f f5 ff ff  fc 0b 00 00 d3 f5 ff ff   |....o...........|
0x804a0f8:   1c 0c 00 00 43 f6 ff ff  3c 0c 00 00 8a f6 ff ff   |....C...<.......|
0x804a108:   60 0c 00 00 df f6 ff ff  80 0c 00 00 26 f7 ff ff   |`...........&...|
0x804a118:   a4 0c 00 00 8e f7 ff ff  c8 0c 00 00 7b f8 ff ff   |............{...|
0x804a128:   f4 0c 00 00 34 fc ff ff  24 0d 00 00 66 fe ff ff   |....4...$...f...|
0x804a138:   5c 0d 00 00 78 fe ff ff  70 0d 00 00 d8 fe ff ff   |\...x...p.......|
0x804a148:   bc 0d 00 00 14                                     |.....           |
; section: .eh_frame
0x804a14c:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x804a15c:   1b 0c 04 04 88 01 00 00  10 00 00 00 1c 00 00 00   |................|
0x804a16c:   14 e2 ff ff 02 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x804a17c:   30 00 00 00 70 e1 ff ff  40 00 00 00 00 0e 08 46   |0...p...@......F|
0x804a18c:   0e 0c 4a 0f 0b 74 04 78  00 3f 1a 3b 2a 32 24 22   |..J..t.x.?.;*2$"|
0x804a19c:   10 00 00 00 54 00 00 00  8c e1 ff ff 08 00 00 00   |....T...........|
0x804a1ac:   00 00 00 00 1c 00 00 00  68 00 00 00 9e e2 ff ff   |........h.......|
0x804a1bc:   10 00 00 00 00 41 0e 08  85 02 42 0d 05 4c c5 0c   |.....A....B..L..|
0x804a1cc:   04 04 00 00 20 00 00 00  88 00 00 00 8e e2 ff ff   |.... ...........|
0x804a1dc:   2e 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |.....A....B..D..|
0x804a1ec:   66 c5 c3 0c 04 04 00 00  1c 00 00 00 ac 00 00 00   |f...............|
0x804a1fc:   98 e2 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a20c:   05 5a c5 0c 04 04 00 00  1c 00 00 00 cc 00 00 00   |.Z..............|
0x804a21c:   96 e2 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804a22c:   05 64 c5 0c 04 04 00 00  1c 00 00 00 ec 00 00 00   |.d..............|
0x804a23c:   9e e2 ff ff 2a 00 00 00  00 41 0e 08 85 02 42 0d   |....*....A....B.|
0x804a24c:   05 66 c5 0c 04 04 00 00  1c 00 00 00 0c 01 00 00   |.f..............|
0x804a25c:   a8 e2 ff ff 29 00 00 00  00 41 0e 08 85 02 42 0d   |....)....A....B.|
0x804a26c:   05 65 c5 0c 04 04 00 00  1c 00 00 00 2c 01 00 00   |.e..........,...|
0x804a27c:   b1 e2 ff ff 43 00 00 00  00 41 0e 08 85 02 42 0d   |....C....A....B.|
0x804a28c:   05 7f c5 0c 04 04 00 00  1c 00 00 00 4c 01 00 00   |............L...|
0x804a29c:   d4 e2 ff ff 41 00 00 00  00 41 0e 08 85 02 42 0d   |....A....A....B.|
0x804a2ac:   05 7d c5 0c 04 04 00 00  20 00 00 00 6c 01 00 00   |.}...... ...l...|
0x804a2bc:   f5 e2 ff ff 58 00 00 00  00 41 0e 08 85 02 42 0d   |....X....A....B.|
0x804a2cc:   05 44 83 03 02 4f c3 41  c5 0c 04 04 20 00 00 00   |.D...O.A.... ...|
0x804a2dc:   90 01 00 00 29 e3 ff ff  52 00 00 00 00 41 0e 08   |....)...R....A..|
0x804a2ec:   85 02 42 0d 05 44 83 03  02 49 c3 41 c5 0c 04 04   |..B..D...I.A....|
0x804a2fc:   1c 00 00 00 b4 01 00 00  57 e3 ff ff 3d 00 00 00   |........W...=...|
0x804a30c:   00 41 0e 08 85 02 42 0d  05 79 c5 0c 04 04 00 00   |.A....B..y......|
0x804a31c:   1c 00 00 00 d4 01 00 00  74 e3 ff ff 37 00 00 00   |........t...7...|
0x804a32c:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804a33c:   1c 00 00 00 f4 01 00 00  8b e3 ff ff 1f 00 00 00   |................|
0x804a34c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804a35c:   1c 00 00 00 14 02 00 00  8a e3 ff ff 2a 00 00 00   |............*...|
0x804a36c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804a37c:   1c 00 00 00 34 02 00 00  94 e3 ff ff 2c 00 00 00   |....4.......,...|
0x804a38c:   00 41 0e 08 85 02 42 0d  05 68 c5 0c 04 04 00 00   |.A....B..h......|
0x804a39c:   1c 00 00 00 54 02 00 00  a0 e3 ff ff 2b 00 00 00   |....T.......+...|
0x804a3ac:   00 41 0e 08 85 02 42 0d  05 67 c5 0c 04 04 00 00   |.A....B..g......|
0x804a3bc:   1c 00 00 00 74 02 00 00  ab e3 ff ff 49 00 00 00   |....t.......I...|
0x804a3cc:   00 41 0e 08 85 02 42 0d  05 02 45 c5 0c 04 04 00   |.A....B...E.....|
0x804a3dc:   1c 00 00 00 94 02 00 00  d4 e3 ff ff 47 00 00 00   |............G...|
0x804a3ec:   00 41 0e 08 85 02 42 0d  05 02 43 c5 0c 04 04 00   |.A....B...C.....|
0x804a3fc:   20 00 00 00 b4 02 00 00  fb e3 ff ff 5a 00 00 00   | ...........Z...|
0x804a40c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 51 c3 41   |.A....B..D...Q.A|
0x804a41c:   c5 0c 04 04 20 00 00 00  d8 02 00 00 31 e4 ff ff   |.... .......1...|
0x804a42c:   54 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |T....A....B..D..|
0x804a43c:   02 4b c3 41 c5 0c 04 04  1c 00 00 00 fc 02 00 00   |.K.A............|
0x804a44c:   61 e4 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |a...?....A....B.|
0x804a45c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 1c 03 00 00   |.{..............|
0x804a46c:   80 e4 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |....9....A....B.|
0x804a47c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 3c 03 00 00   |.u..........<...|
0x804a48c:   99 e4 ff ff 22 00 00 00  00 41 0e 08 85 02 42 0d   |...."....A....B.|
0x804a49c:   05 5e c5 0c 04 04 00 00  1c 00 00 00 5c 03 00 00   |.^..........\...|
0x804a4ac:   9b e4 ff ff 4e 00 00 00  00 41 0e 08 85 02 42 0d   |....N....A....B.|
0x804a4bc:   05 02 4a c5 0c 04 04 00  1c 00 00 00 7c 03 00 00   |..J.........|...|
0x804a4cc:   c9 e4 ff ff 3c 00 00 00  00 41 0e 08 85 02 42 0d   |....<....A....B.|
0x804a4dc:   05 78 c5 0c 04 04 00 00  1c 00 00 00 9c 03 00 00   |.x..............|
0x804a4ec:   e5 e4 ff ff 89 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a4fc:   05 02 85 c5 0c 04 04 00  1c 00 00 00 bc 03 00 00   |................|
0x804a50c:   4e e5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |N...2....A....B.|
0x804a51c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 dc 03 00 00   |.n..............|
0x804a52c:   60 e5 ff ff 30 00 00 00  00 41 0e 08 85 02 42 0d   |`...0....A....B.|
0x804a53c:   05 6c c5 0c 04 04 00 00  1c 00 00 00 fc 03 00 00   |.l..............|
0x804a54c:   70 e5 ff ff 45 00 00 00  00 41 0e 08 85 02 42 0d   |p...E....A....B.|
0x804a55c:   05 02 41 c5 0c 04 04 00  1c 00 00 00 1c 04 00 00   |..A.............|
0x804a56c:   95 e5 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |....?....A....B.|
0x804a57c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 3c 04 00 00   |.{..........<...|
0x804a58c:   b4 e5 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |....2....A....B.|
0x804a59c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 5c 04 00 00   |.n..........\...|
0x804a5ac:   c6 e5 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |....,....A....B.|
0x804a5bc:   05 68 c5 0c 04 04 00 00  1c 00 00 00 7c 04 00 00   |.h..........|...|
0x804a5cc:   d2 e5 ff ff 1e 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804a5dc:   05 5a c5 0c 04 04 00 00  1c 00 00 00 9c 04 00 00   |.Z..............|
0x804a5ec:   d0 e5 ff ff 28 00 00 00  00 41 0e 08 85 02 42 0d   |....(....A....B.|
0x804a5fc:   05 64 c5 0c 04 04 00 00  1c 00 00 00 bc 04 00 00   |.d..............|
0x804a60c:   d8 e5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804a61c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 dc 04 00 00   |.a..............|
0x804a62c:   dd e5 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |....%....A....B.|
0x804a63c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 fc 04 00 00   |.a..............|
0x804a64c:   e2 e5 ff ff 37 00 00 00  00 41 0e 08 85 02 42 0d   |....7....A....B.|
0x804a65c:   05 73 c5 0c 04 04 00 00  1c 00 00 00 1c 05 00 00   |.s..............|
0x804a66c:   f9 e5 ff ff 34 00 00 00  00 41 0e 08 85 02 42 0d   |....4....A....B.|
0x804a67c:   05 70 c5 0c 04 04 00 00  20 00 00 00 3c 05 00 00   |.p...... ...<...|
0x804a68c:   0d e6 ff ff 52 00 00 00  00 41 0e 08 85 02 42 0d   |....R....A....B.|
0x804a69c:   05 44 83 03 02 49 c3 41  c5 0c 04 04 20 00 00 00   |.D...I.A.... ...|
0x804a6ac:   60 05 00 00 3b e6 ff ff  4c 00 00 00 00 41 0e 08   |`...;...L....A..|
0x804a6bc:   85 02 42 0d 05 44 83 03  02 43 c3 41 c5 0c 04 04   |..B..D...C.A....|
0x804a6cc:   1c 00 00 00 84 05 00 00  63 e6 ff ff 37 00 00 00   |........c...7...|
0x804a6dc:   00 41 0e 08 85 02 42 0d  05 73 c5 0c 04 04 00 00   |.A....B..s......|
0x804a6ec:   1c 00 00 00 a4 05 00 00  7a e6 ff ff 31 00 00 00   |........z...1...|
0x804a6fc:   00 41 0e 08 85 02 42 0d  05 6d c5 0c 04 04 00 00   |.A....B..m......|
0x804a70c:   1c 00 00 00 c4 05 00 00  8b e6 ff ff 1f 00 00 00   |................|
0x804a71c:   00 41 0e 08 85 02 42 0d  05 5b c5 0c 04 04 00 00   |.A....B..[......|
0x804a72c:   1c 00 00 00 e4 05 00 00  8a e6 ff ff 2a 00 00 00   |............*...|
0x804a73c:   00 41 0e 08 85 02 42 0d  05 66 c5 0c 04 04 00 00   |.A....B..f......|
0x804a74c:   1c 00 00 00 04 06 00 00  94 e6 ff ff 28 00 00 00   |............(...|
0x804a75c:   00 41 0e 08 85 02 42 0d  05 64 c5 0c 04 04 00 00   |.A....B..d......|
0x804a76c:   1c 00 00 00 24 06 00 00  9c e6 ff ff 29 00 00 00   |....$.......)...|
0x804a77c:   00 41 0e 08 85 02 42 0d  05 65 c5 0c 04 04 00 00   |.A....B..e......|
0x804a78c:   1c 00 00 00 44 06 00 00  a5 e6 ff ff 3c 00 00 00   |....D.......<...|
0x804a79c:   00 41 0e 08 85 02 42 0d  05 78 c5 0c 04 04 00 00   |.A....B..x......|
0x804a7ac:   1c 00 00 00 64 06 00 00  c1 e6 ff ff 3a 00 00 00   |....d.......:...|
0x804a7bc:   00 41 0e 08 85 02 42 0d  05 76 c5 0c 04 04 00 00   |.A....B..v......|
0x804a7cc:   20 00 00 00 84 06 00 00  db e6 ff ff 53 00 00 00   | ...........S...|
0x804a7dc:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 4a c3 41   |.A....B..D...J.A|
0x804a7ec:   c5 0c 04 04 20 00 00 00  a8 06 00 00 0a e7 ff ff   |.... ...........|
0x804a7fc:   4d 00 00 00 00 41 0e 08  85 02 42 0d 05 44 83 03   |M....A....B..D..|
0x804a80c:   02 44 c3 41 c5 0c 04 04  1c 00 00 00 cc 06 00 00   |.D.A............|
0x804a81c:   33 e7 ff ff 38 00 00 00  00 41 0e 08 85 02 42 0d   |3...8....A....B.|
0x804a82c:   05 74 c5 0c 04 04 00 00  1c 00 00 00 ec 06 00 00   |.t..............|
0x804a83c:   4b e7 ff ff 32 00 00 00  00 41 0e 08 85 02 42 0d   |K...2....A....B.|
0x804a84c:   05 6e c5 0c 04 04 00 00  1c 00 00 00 0c 07 00 00   |.n..............|
0x804a85c:   5d e7 ff ff 14 00 00 00  00 41 0e 08 85 02 42 0d   |]........A....B.|
0x804a86c:   05 50 c5 0c 04 04 00 00  1c 00 00 00 2c 07 00 00   |.P..........,...|
0x804a87c:   51 e7 ff ff 17 00 00 00  00 41 0e 08 85 02 42 0d   |Q........A....B.|
0x804a88c:   05 53 c5 0c 04 04 00 00  1c 00 00 00 4c 07 00 00   |.S..........L...|
0x804a89c:   48 e7 ff ff 15 00 00 00  00 41 0e 08 85 02 42 0d   |H........A....B.|
0x804a8ac:   05 51 c5 0c 04 04 00 00  1c 00 00 00 6c 07 00 00   |.Q..........l...|
0x804a8bc:   3d e7 ff ff 16 00 00 00  00 41 0e 08 85 02 42 0d   |=........A....B.|
0x804a8cc:   05 52 c5 0c 04 04 00 00  1c 00 00 00 8c 07 00 00   |.R..............|
0x804a8dc:   33 e7 ff ff 27 00 00 00  00 41 0e 08 85 02 42 0d   |3...'....A....B.|
0x804a8ec:   05 63 c5 0c 04 04 00 00  1c 00 00 00 ac 07 00 00   |.c..............|
0x804a8fc:   3a e7 ff ff 25 00 00 00  00 41 0e 08 85 02 42 0d   |:...%....A....B.|
0x804a90c:   05 61 c5 0c 04 04 00 00  1c 00 00 00 cc 07 00 00   |.a..............|
0x804a91c:   3f e7 ff ff 3f 00 00 00  00 41 0e 08 85 02 42 0d   |?...?....A....B.|
0x804a92c:   05 7b c5 0c 04 04 00 00  1c 00 00 00 ec 07 00 00   |.{..............|
0x804a93c:   5e e7 ff ff 39 00 00 00  00 41 0e 08 85 02 42 0d   |^...9....A....B.|
0x804a94c:   05 75 c5 0c 04 04 00 00  1c 00 00 00 0c 08 00 00   |.u..............|
0x804a95c:   77 e7 ff ff 2c 00 00 00  00 41 0e 08 85 02 42 0d   |w...,....A....B.|
0x804a96c:   05 68 c5 0c 04 04 00 00  1c 00 00 00 2c 08 00 00   |.h..........,...|
0x804a97c:   83 e7 ff ff 26 00 00 00  00 41 0e 08 85 02 42 0d   |....&....A....B.|
0x804a98c:   05 62 c5 0c 04 04 00 00  1c 00 00 00 4c 08 00 00   |.b..........L...|
0x804a99c:   89 e7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804a9ac:   05 7e c5 0c 04 04 00 00  1c 00 00 00 6c 08 00 00   |.~..........l...|
0x804a9bc:   ab e7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804a9cc:   05 7e c5 0c 04 04 00 00  1c 00 00 00 8c 08 00 00   |.~..............|
0x804a9dc:   cd e7 ff ff 42 00 00 00  00 41 0e 08 85 02 42 0d   |....B....A....B.|
0x804a9ec:   05 7e c5 0c 04 04 00 00  1c 00 00 00 ac 08 00 00   |.~..............|
0x804a9fc:   ef e7 ff ff 75 00 00 00  00 41 0e 08 85 02 42 0d   |....u....A....B.|
0x804aa0c:   05 02 71 c5 0c 04 04 00  1c 00 00 00 cc 08 00 00   |..q.............|
0x804aa1c:   44 e8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |D...]....A....B.|
0x804aa2c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 ec 08 00 00   |..Y.............|
0x804aa3c:   81 e8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804aa4c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 0c 09 00 00   |..Y.............|
0x804aa5c:   be e8 ff ff 5d 00 00 00  00 41 0e 08 85 02 42 0d   |....]....A....B.|
0x804aa6c:   05 02 59 c5 0c 04 04 00  1c 00 00 00 2c 09 00 00   |..Y.........,...|
0x804aa7c:   fb e8 ff ff 90 00 00 00  00 41 0e 08 85 02 42 0d   |.........A....B.|
0x804aa8c:   05 02 8c c5 0c 04 04 00  1c 00 00 00 4c 09 00 00   |............L...|
0x804aa9c:   6b e9 ff ff 64 00 00 00  00 41 0e 08 85 02 42 0d   |k...d....A....B.|
0x804aaac:   05 02 60 c5 0c 04 04 00  1c 00 00 00 6c 09 00 00   |..`.........l...|
0x804aabc:   af e9 ff ff 70 00 00 00  00 41 0e 08 85 02 42 0d   |....p....A....B.|
0x804aacc:   05 02 6c c5 0c 04 04 00  20 00 00 00 8c 09 00 00   |..l..... .......|
0x804aadc:   ff e9 ff ff 47 00 00 00  00 41 0e 08 85 02 42 0d   |....G....A....B.|
0x804aaec:   05 44 83 03 7e c3 41 c5  0c 04 04 00 1c 00 00 00   |.D..~.A.........|
0x804aafc:   b0 09 00 00 22 ea ff ff  55 00 00 00 00 41 0e 08   |...."...U....A..|
0x804ab0c:   85 02 42 0d 05 02 51 c5  0c 04 04 00 20 00 00 00   |..B...Q..... ...|
0x804ab1c:   d0 09 00 00 57 ea ff ff  47 00 00 00 00 41 0e 08   |....W...G....A..|
0x804ab2c:   85 02 42 0d 05 44 83 03  7f c5 c3 0c 04 04 00 00   |..B..D..........|
0x804ab3c:   20 00 00 00 f4 09 00 00  7a ea ff ff 68 00 00 00   | .......z...h...|
0x804ab4c:   00 41 0e 08 85 02 42 0d  05 44 83 03 02 60 c5 c3   |.A....B..D...`..|
0x804ab5c:   0c 04 04 00 28 00 00 00  18 0a 00 00 be ea ff ff   |....(...........|
0x804ab6c:   ed 00 00 00 00 41 0e 08  85 02 42 0d 05 46 87 03   |.....A....B..F..|
0x804ab7c:   86 04 83 05 02 e0 c3 41  c6 41 c7 41 c5 0c 04 04   |.......A.A.A....|
0x804ab8c:   2c 00 00 00 44 0a 00 00  7f eb ff ff b9 03 00 00   |,...D...........|
0x804ab9c:   00 41 0e 08 85 02 42 0d  05 46 87 03 86 04 83 05   |.A....B..F......|
0x804abac:   03 ac 03 c3 41 c6 41 c7  41 c5 0c 04 04 00 00 00   |....A.A.A.......|
0x804abbc:   34 00 00 00 74 0a 00 00  08 ef ff ff 32 02 00 00   |4...t.......2...|
0x804abcc:   00 44 0c 01 00 47 10 05  02 75 00 44 0f 03 75 78   |.D...G...u.D..ux|
0x804abdc:   06 10 03 02 75 7c 03 1d  02 c1 0c 01 00 41 c3 41   |....u|.......A.A|
0x804abec:   c5 43 0c 04 04 00 00 00  10 00 00 00 ac 0a 00 00   |.C..............|
0x804abfc:   02 f1 ff ff 04 00 00 00  00 00 00 00 48 00 00 00   |............H...|
0x804ac0c:   c0 0a 00 00 00 f1 ff ff  5d 00 00 00 00 41 0e 08   |........]....A..|
0x804ac1c:   85 02 41 0e 0c 87 03 41  0e 10 86 04 41 0e 14 83   |..A....A....A...|
0x804ac2c:   05 4e 0e 20 69 0e 24 41  0e 28 44 0e 2c 44 0e 30   |.N. i.$A.(D.,D.0|
0x804ac3c:   4d 0e 20 47 0e 14 41 c3  0e 10 41 c6 0e 0c 41 c7   |M. G..A...A...A.|
0x804ac4c:   0e 08 41 c5 0e 04 00 00  10 00 00 00 0c 0b 00 00   |..A.............|
0x804ac5c:   14 f1 ff ff 02 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804ac6c:   ??                                                 |?               |
; section: .init_array
0x804bf0c:   50 84 04 08 20                                     |P...            |
; section: .fini_array
0x804bf10:   20 84 04 08 01                                     | ....           |
; section: .dynamic
0x804bf14:   01 00 00 00 01 00 00 00  0c 00 00 00 cc 82 04 08   |................|
0x804bf24:   0d 00 00 00 74 9d 04 08  19 00 00 00 0c bf 04 08   |....t...........|
0x804bf34:   1b 00 00 00 04 00 00 00  1a 00 00 00 10 bf 04 08   |................|
0x804bf44:   1c 00 00 00 04 00 00 00  f5 fe ff 6f ac 81 04 08   |...........o....|
0x804bf54:   05 00 00 00 2c 82 04 08  06 00 00 00 cc 81 04 08   |....,...........|
0x804bf64:   0a 00 00 00 53 00 00 00  0b 00 00 00 10 00 00 00   |....S...........|
0x804bf74:   15 00 00 00 00 00 00 00  03 00 00 00 00 c0 04 08   |................|
0x804bf84:   02 00 00 00 18 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804bf94:   17 00 00 00 b4 82 04 08  11 00 00 00 ac 82 04 08   |................|
0x804bfa4:   12 00 00 00 08 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804bfb4:   fe ff ff 6f 8c 82 04 08  ff ff ff 6f 01 00 00 00   |...o.......o....|
0x804bfc4:   f0 ff ff 6f 80 82 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804bfd4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804bfe4:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804bff4:   00 00 00 00 00 00 00 00  00                        |.........       |
; section: .got
0x804bffc:   00 00 00 00 14                                     |.....           |
; section: .got.plt
0x804c000:   14 bf 04 08 00 00 00 00  00 00 00 00 06 83 04 08   |................|
0x804c010:   16 83 04 08 26 83 04 08  00                        |....&....       |
; section: .data
0x804c018:   00 00 00 00 00 00 00 00  ff ff ff ff 07 00 00 00   |................|
0x804c028:   61 54 c5 52 ef c6 b5 c7  ff 00 00 00 f8 a9 0c 78   |aT.R...........x|
0x804c038:   99 c0 cc 43 ff 00 00 00  24 76 f7 cb 02 00 00 00   |...C....$v......|
0x804c048:   09 00 00 00 81 d0 00 00  01 00 00 00 ??            |............?   |
